
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: #!/usr/bin/env python
2: '''
3: crackfortran --- read fortran (77,90) code and extract declaration information.
4: 
5: Copyright 1999-2004 Pearu Peterson all rights reserved,
6: Pearu Peterson <pearu@ioc.ee>
7: Permission to use, modify, and distribute this software is given under the
8: terms of the NumPy License.
9: 
10: NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
11: $Date: 2005/09/27 07:13:49 $
12: Pearu Peterson
13: 
14: 
15: Usage of crackfortran:
16: ======================
17: Command line keys: -quiet,-verbose,-fix,-f77,-f90,-show,-h <pyffilename>
18:                    -m <module name for f77 routines>,--ignore-contains
19: Functions: crackfortran, crack2fortran
20: The following Fortran statements/constructions are supported
21: (or will be if needed):
22:    block data,byte,call,character,common,complex,contains,data,
23:    dimension,double complex,double precision,end,external,function,
24:    implicit,integer,intent,interface,intrinsic,
25:    logical,module,optional,parameter,private,public,
26:    program,real,(sequence?),subroutine,type,use,virtual,
27:    include,pythonmodule
28: Note: 'virtual' is mapped to 'dimension'.
29: Note: 'implicit integer (z) static (z)' is 'implicit static (z)' (this is minor bug).
30: Note: code after 'contains' will be ignored until its scope ends.
31: Note: 'common' statement is extended: dimensions are moved to variable definitions
32: Note: f2py directive: <commentchar>f2py<line> is read as <line>
33: Note: pythonmodule is introduced to represent Python module
34: 
35: Usage:
36:   `postlist=crackfortran(files,funcs)`
37:   `postlist` contains declaration information read from the list of files `files`.
38:   `crack2fortran(postlist)` returns a fortran code to be saved to pyf-file
39: 
40:   `postlist` has the following structure:
41:  *** it is a list of dictionaries containing `blocks':
42:      B = {'block','body','vars','parent_block'[,'name','prefix','args','result',
43:           'implicit','externals','interfaced','common','sortvars',
44:           'commonvars','note']}
45:      B['block'] = 'interface' | 'function' | 'subroutine' | 'module' |
46:                   'program' | 'block data' | 'type' | 'pythonmodule'
47:      B['body'] --- list containing `subblocks' with the same structure as `blocks'
48:      B['parent_block'] --- dictionary of a parent block:
49:                              C['body'][<index>]['parent_block'] is C
50:      B['vars'] --- dictionary of variable definitions
51:      B['sortvars'] --- dictionary of variable definitions sorted by dependence (independent first)
52:      B['name'] --- name of the block (not if B['block']=='interface')
53:      B['prefix'] --- prefix string (only if B['block']=='function')
54:      B['args'] --- list of argument names if B['block']== 'function' | 'subroutine'
55:      B['result'] --- name of the return value (only if B['block']=='function')
56:      B['implicit'] --- dictionary {'a':<variable definition>,'b':...} | None
57:      B['externals'] --- list of variables being external
58:      B['interfaced'] --- list of variables being external and defined
59:      B['common'] --- dictionary of common blocks (list of objects)
60:      B['commonvars'] --- list of variables used in common blocks (dimensions are moved to variable definitions)
61:      B['from'] --- string showing the 'parents' of the current block
62:      B['use'] --- dictionary of modules used in current block:
63:          {<modulename>:{['only':<0|1>],['map':{<local_name1>:<use_name1>,...}]}}
64:      B['note'] --- list of LaTeX comments on the block
65:      B['f2pyenhancements'] --- optional dictionary
66:           {'threadsafe':'','fortranname':<name>,
67:            'callstatement':<C-expr>|<multi-line block>,
68:            'callprotoargument':<C-expr-list>,
69:            'usercode':<multi-line block>|<list of multi-line blocks>,
70:            'pymethoddef:<multi-line block>'
71:            }
72:      B['entry'] --- dictionary {entryname:argslist,..}
73:      B['varnames'] --- list of variable names given in the order of reading the
74:                        Fortran code, useful for derived types.
75:      B['saved_interface'] --- a string of scanned routine signature, defines explicit interface
76:  *** Variable definition is a dictionary
77:      D = B['vars'][<variable name>] =
78:      {'typespec'[,'attrspec','kindselector','charselector','=','typename']}
79:      D['typespec'] = 'byte' | 'character' | 'complex' | 'double complex' |
80:                      'double precision' | 'integer' | 'logical' | 'real' | 'type'
81:      D['attrspec'] --- list of attributes (e.g. 'dimension(<arrayspec>)',
82:                        'external','intent(in|out|inout|hide|c|callback|cache|aligned4|aligned8|aligned16)',
83:                        'optional','required', etc)
84:      K = D['kindselector'] = {['*','kind']} (only if D['typespec'] =
85:                          'complex' | 'integer' | 'logical' | 'real' )
86:      C = D['charselector'] = {['*','len','kind']}
87:                              (only if D['typespec']=='character')
88:      D['='] --- initialization expression string
89:      D['typename'] --- name of the type if D['typespec']=='type'
90:      D['dimension'] --- list of dimension bounds
91:      D['intent'] --- list of intent specifications
92:      D['depend'] --- list of variable names on which current variable depends on
93:      D['check'] --- list of C-expressions; if C-expr returns zero, exception is raised
94:      D['note'] --- list of LaTeX comments on the variable
95:  *** Meaning of kind/char selectors (few examples):
96:      D['typespec>']*K['*']
97:      D['typespec'](kind=K['kind'])
98:      character*C['*']
99:      character(len=C['len'],kind=C['kind'])
100:      (see also fortran type declaration statement formats below)
101: 
102: Fortran 90 type declaration statement format (F77 is subset of F90)
103: ====================================================================
104: (Main source: IBM XL Fortran 5.1 Language Reference Manual)
105: type declaration = <typespec> [[<attrspec>]::] <entitydecl>
106: <typespec> = byte                          |
107:              character[<charselector>]     |
108:              complex[<kindselector>]       |
109:              double complex                |
110:              double precision              |
111:              integer[<kindselector>]       |
112:              logical[<kindselector>]       |
113:              real[<kindselector>]          |
114:              type(<typename>)
115: <charselector> = * <charlen>               |
116:              ([len=]<len>[,[kind=]<kind>]) |
117:              (kind=<kind>[,len=<len>])
118: <kindselector> = * <intlen>                |
119:              ([kind=]<kind>)
120: <attrspec> = comma separated list of attributes.
121:              Only the following attributes are used in
122:              building up the interface:
123:                 external
124:                 (parameter --- affects '=' key)
125:                 optional
126:                 intent
127:              Other attributes are ignored.
128: <intentspec> = in | out | inout
129: <arrayspec> = comma separated list of dimension bounds.
130: <entitydecl> = <name> [[*<charlen>][(<arrayspec>)] | [(<arrayspec>)]*<charlen>]
131:                       [/<init_expr>/ | =<init_expr>] [,<entitydecl>]
132: 
133: In addition, the following attributes are used: check,depend,note
134: 
135: TODO:
136:     * Apply 'parameter' attribute (e.g. 'integer parameter :: i=2' 'real x(i)'
137:                                    -> 'real x(2)')
138:     The above may be solved by creating appropriate preprocessor program, for example.
139: 
140: '''
141: from __future__ import division, absolute_import, print_function
142: 
143: import sys
144: import string
145: import fileinput
146: import re
147: import os
148: import copy
149: import platform
150: 
151: from . import __version__
152: 
153: # The eviroment provided by auxfuncs.py is needed for some calls to eval.
154: # As the needed functions cannot be determined by static inspection of the
155: # code, it is safest to use import * pending a major refactoring of f2py.
156: from .auxfuncs import *
157: 
158: 
159: f2py_version = __version__.version
160: 
161: # Global flags:
162: strictf77 = 1          # Ignore `!' comments unless line[0]=='!'
163: sourcecodeform = 'fix'  # 'fix','free'
164: quiet = 0              # Be verbose if 0 (Obsolete: not used any more)
165: verbose = 1            # Be quiet if 0, extra verbose if > 1.
166: tabchar = 4 * ' '
167: pyffilename = ''
168: f77modulename = ''
169: skipemptyends = 0      # for old F77 programs without 'program' statement
170: ignorecontains = 1
171: dolowercase = 1
172: debug = []
173: 
174: # Global variables
175: beginpattern = ''
176: currentfilename = ''
177: expectbegin = 1
178: f90modulevars = {}
179: filepositiontext = ''
180: gotnextfile = 1
181: groupcache = None
182: groupcounter = 0
183: grouplist = {groupcounter: []}
184: groupname = ''
185: include_paths = []
186: neededmodule = -1
187: onlyfuncs = []
188: previous_context = None
189: skipblocksuntil = -1
190: skipfuncs = []
191: skipfunctions = []
192: usermodules = []
193: 
194: 
195: def reset_global_f2py_vars():
196:     global groupcounter, grouplist, neededmodule, expectbegin
197:     global skipblocksuntil, usermodules, f90modulevars, gotnextfile
198:     global filepositiontext, currentfilename, skipfunctions, skipfuncs
199:     global onlyfuncs, include_paths, previous_context
200:     global strictf77, sourcecodeform, quiet, verbose, tabchar, pyffilename
201:     global f77modulename, skipemptyends, ignorecontains, dolowercase, debug
202: 
203:     # flags
204:     strictf77 = 1
205:     sourcecodeform = 'fix'
206:     quiet = 0
207:     verbose = 1
208:     tabchar = 4 * ' '
209:     pyffilename = ''
210:     f77modulename = ''
211:     skipemptyends = 0
212:     ignorecontains = 1
213:     dolowercase = 1
214:     debug = []
215:     # variables
216:     groupcounter = 0
217:     grouplist = {groupcounter: []}
218:     neededmodule = -1
219:     expectbegin = 1
220:     skipblocksuntil = -1
221:     usermodules = []
222:     f90modulevars = {}
223:     gotnextfile = 1
224:     filepositiontext = ''
225:     currentfilename = ''
226:     skipfunctions = []
227:     skipfuncs = []
228:     onlyfuncs = []
229:     include_paths = []
230:     previous_context = None
231: 
232: 
233: def outmess(line, flag=1):
234:     global filepositiontext
235: 
236:     if not verbose:
237:         return
238:     if not quiet:
239:         if flag:
240:             sys.stdout.write(filepositiontext)
241:         sys.stdout.write(line)
242: 
243: re._MAXCACHE = 50
244: defaultimplicitrules = {}
245: for c in "abcdefghopqrstuvwxyz$_":
246:     defaultimplicitrules[c] = {'typespec': 'real'}
247: for c in "ijklmn":
248:     defaultimplicitrules[c] = {'typespec': 'integer'}
249: del c
250: badnames = {}
251: invbadnames = {}
252: for n in ['int', 'double', 'float', 'char', 'short', 'long', 'void', 'case', 'while',
253:           'return', 'signed', 'unsigned', 'if', 'for', 'typedef', 'sizeof', 'union',
254:           'struct', 'static', 'register', 'new', 'break', 'do', 'goto', 'switch',
255:           'continue', 'else', 'inline', 'extern', 'delete', 'const', 'auto',
256:           'len', 'rank', 'shape', 'index', 'slen', 'size', '_i',
257:           'max', 'min',
258:           'flen', 'fshape',
259:           'string', 'complex_double', 'float_double', 'stdin', 'stderr', 'stdout',
260:           'type', 'default']:
261:     badnames[n] = n + '_bn'
262:     invbadnames[n + '_bn'] = n
263: 
264: 
265: def rmbadname1(name):
266:     if name in badnames:
267:         errmess('rmbadname1: Replacing "%s" with "%s".\n' %
268:                 (name, badnames[name]))
269:         return badnames[name]
270:     return name
271: 
272: 
273: def rmbadname(names):
274:     return [rmbadname1(_m) for _m in names]
275: 
276: 
277: def undo_rmbadname1(name):
278:     if name in invbadnames:
279:         errmess('undo_rmbadname1: Replacing "%s" with "%s".\n'
280:                 % (name, invbadnames[name]))
281:         return invbadnames[name]
282:     return name
283: 
284: 
285: def undo_rmbadname(names):
286:     return [undo_rmbadname1(_m) for _m in names]
287: 
288: 
289: def getextension(name):
290:     i = name.rfind('.')
291:     if i == -1:
292:         return ''
293:     if '\\' in name[i:]:
294:         return ''
295:     if '/' in name[i:]:
296:         return ''
297:     return name[i + 1:]
298: 
299: is_f_file = re.compile(r'.*[.](for|ftn|f77|f)\Z', re.I).match
300: _has_f_header = re.compile(r'-[*]-\s*fortran\s*-[*]-', re.I).search
301: _has_f90_header = re.compile(r'-[*]-\s*f90\s*-[*]-', re.I).search
302: _has_fix_header = re.compile(r'-[*]-\s*fix\s*-[*]-', re.I).search
303: _free_f90_start = re.compile(r'[^c*]\s*[^\s\d\t]', re.I).match
304: 
305: 
306: def is_free_format(file):
307:     '''Check if file is in free format Fortran.'''
308:     # f90 allows both fixed and free format, assuming fixed unless
309:     # signs of free format are detected.
310:     result = 0
311:     f = open(file, 'r')
312:     line = f.readline()
313:     n = 15  # the number of non-comment lines to scan for hints
314:     if _has_f_header(line):
315:         n = 0
316:     elif _has_f90_header(line):
317:         n = 0
318:         result = 1
319:     while n > 0 and line:
320:         if line[0] != '!' and line.strip():
321:             n -= 1
322:             if (line[0] != '\t' and _free_f90_start(line[:5])) or line[-2:-1] == '&':
323:                 result = 1
324:                 break
325:         line = f.readline()
326:     f.close()
327:     return result
328: 
329: 
330: # Read fortran (77,90) code
331: def readfortrancode(ffile, dowithline=show, istop=1):
332:     '''
333:     Read fortran codes from files and
334:      1) Get rid of comments, line continuations, and empty lines; lower cases.
335:      2) Call dowithline(line) on every line.
336:      3) Recursively call itself when statement \"include '<filename>'\" is met.
337:     '''
338:     global gotnextfile, filepositiontext, currentfilename, sourcecodeform, strictf77
339:     global beginpattern, quiet, verbose, dolowercase, include_paths
340: 
341:     if not istop:
342:         saveglobals = gotnextfile, filepositiontext, currentfilename, sourcecodeform, strictf77,\
343:             beginpattern, quiet, verbose, dolowercase
344:     if ffile == []:
345:         return
346:     localdolowercase = dolowercase
347:     cont = 0
348:     finalline = ''
349:     ll = ''
350:     commentline = re.compile(
351:         r'(?P<line>([^"]*["][^"]*["][^"!]*|[^\']*\'[^\']*\'[^\'!]*|[^!\'"]*))!{1}(?P<rest>.*)')
352:     includeline = re.compile(
353:         r'\s*include\s*(\'|")(?P<name>[^\'"]*)(\'|")', re.I)
354:     cont1 = re.compile(r'(?P<line>.*)&\s*\Z')
355:     cont2 = re.compile(r'(\s*&|)(?P<line>.*)')
356:     mline_mark = re.compile(r".*?'''")
357:     if istop:
358:         dowithline('', -1)
359:     ll, l1 = '', ''
360:     spacedigits = [' '] + [str(_m) for _m in range(10)]
361:     filepositiontext = ''
362:     fin = fileinput.FileInput(ffile)
363:     while True:
364:         l = fin.readline()
365:         if not l:
366:             break
367:         if fin.isfirstline():
368:             filepositiontext = ''
369:             currentfilename = fin.filename()
370:             gotnextfile = 1
371:             l1 = l
372:             strictf77 = 0
373:             sourcecodeform = 'fix'
374:             ext = os.path.splitext(currentfilename)[1]
375:             if is_f_file(currentfilename) and \
376:                     not (_has_f90_header(l) or _has_fix_header(l)):
377:                 strictf77 = 1
378:             elif is_free_format(currentfilename) and not _has_fix_header(l):
379:                 sourcecodeform = 'free'
380:             if strictf77:
381:                 beginpattern = beginpattern77
382:             else:
383:                 beginpattern = beginpattern90
384:             outmess('\tReading file %s (format:%s%s)\n'
385:                     % (repr(currentfilename), sourcecodeform,
386:                        strictf77 and ',strict' or ''))
387: 
388:         l = l.expandtabs().replace('\xa0', ' ')
389:         # Get rid of newline characters
390:         while not l == '':
391:             if l[-1] not in "\n\r\f":
392:                 break
393:             l = l[:-1]
394:         if not strictf77:
395:             r = commentline.match(l)
396:             if r:
397:                 l = r.group('line') + ' '  # Strip comments starting with `!'
398:                 rl = r.group('rest')
399:                 if rl[:4].lower() == 'f2py':  # f2py directive
400:                     l = l + 4 * ' '
401:                     r = commentline.match(rl[4:])
402:                     if r:
403:                         l = l + r.group('line')
404:                     else:
405:                         l = l + rl[4:]
406:         if l.strip() == '':  # Skip empty line
407:             cont = 0
408:             continue
409:         if sourcecodeform == 'fix':
410:             if l[0] in ['*', 'c', '!', 'C', '#']:
411:                 if l[1:5].lower() == 'f2py':  # f2py directive
412:                     l = '     ' + l[5:]
413:                 else:  # Skip comment line
414:                     cont = 0
415:                     continue
416:             elif strictf77:
417:                 if len(l) > 72:
418:                     l = l[:72]
419:             if not (l[0] in spacedigits):
420:                 raise Exception('readfortrancode: Found non-(space,digit) char '
421:                                 'in the first column.\n\tAre you sure that '
422:                                 'this code is in fix form?\n\tline=%s' % repr(l))
423: 
424:             if (not cont or strictf77) and (len(l) > 5 and not l[5] == ' '):
425:                 # Continuation of a previous line
426:                 ll = ll + l[6:]
427:                 finalline = ''
428:                 origfinalline = ''
429:             else:
430:                 if not strictf77:
431:                     # F90 continuation
432:                     r = cont1.match(l)
433:                     if r:
434:                         l = r.group('line')  # Continuation follows ..
435:                     if cont:
436:                         ll = ll + cont2.match(l).group('line')
437:                         finalline = ''
438:                         origfinalline = ''
439:                     else:
440:                         # clean up line beginning from possible digits.
441:                         l = '     ' + l[5:]
442:                         if localdolowercase:
443:                             finalline = ll.lower()
444:                         else:
445:                             finalline = ll
446:                         origfinalline = ll
447:                         ll = l
448:                     cont = (r is not None)
449:                 else:
450:                     # clean up line beginning from possible digits.
451:                     l = '     ' + l[5:]
452:                     if localdolowercase:
453:                         finalline = ll.lower()
454:                     else:
455:                         finalline = ll
456:                     origfinalline = ll
457:                     ll = l
458: 
459:         elif sourcecodeform == 'free':
460:             if not cont and ext == '.pyf' and mline_mark.match(l):
461:                 l = l + '\n'
462:                 while True:
463:                     lc = fin.readline()
464:                     if not lc:
465:                         errmess(
466:                             'Unexpected end of file when reading multiline\n')
467:                         break
468:                     l = l + lc
469:                     if mline_mark.match(lc):
470:                         break
471:                 l = l.rstrip()
472:             r = cont1.match(l)
473:             if r:
474:                 l = r.group('line')  # Continuation follows ..
475:             if cont:
476:                 ll = ll + cont2.match(l).group('line')
477:                 finalline = ''
478:                 origfinalline = ''
479:             else:
480:                 if localdolowercase:
481:                     finalline = ll.lower()
482:                 else:
483:                     finalline = ll
484:                 origfinalline = ll
485:                 ll = l
486:             cont = (r is not None)
487:         else:
488:             raise ValueError(
489:                 "Flag sourcecodeform must be either 'fix' or 'free': %s" % repr(sourcecodeform))
490:         filepositiontext = 'Line #%d in %s:"%s"\n\t' % (
491:             fin.filelineno() - 1, currentfilename, l1)
492:         m = includeline.match(origfinalline)
493:         if m:
494:             fn = m.group('name')
495:             if os.path.isfile(fn):
496:                 readfortrancode(fn, dowithline=dowithline, istop=0)
497:             else:
498:                 include_dirs = [
499:                     os.path.dirname(currentfilename)] + include_paths
500:                 foundfile = 0
501:                 for inc_dir in include_dirs:
502:                     fn1 = os.path.join(inc_dir, fn)
503:                     if os.path.isfile(fn1):
504:                         foundfile = 1
505:                         readfortrancode(fn1, dowithline=dowithline, istop=0)
506:                         break
507:                 if not foundfile:
508:                     outmess('readfortrancode: could not find include file %s in %s. Ignoring.\n' % (
509:                         repr(fn), os.pathsep.join(include_dirs)))
510:         else:
511:             dowithline(finalline)
512:         l1 = ll
513:     if localdolowercase:
514:         finalline = ll.lower()
515:     else:
516:         finalline = ll
517:     origfinalline = ll
518:     filepositiontext = 'Line #%d in %s:"%s"\n\t' % (
519:         fin.filelineno() - 1, currentfilename, l1)
520:     m = includeline.match(origfinalline)
521:     if m:
522:         fn = m.group('name')
523:         if os.path.isfile(fn):
524:             readfortrancode(fn, dowithline=dowithline, istop=0)
525:         else:
526:             include_dirs = [os.path.dirname(currentfilename)] + include_paths
527:             foundfile = 0
528:             for inc_dir in include_dirs:
529:                 fn1 = os.path.join(inc_dir, fn)
530:                 if os.path.isfile(fn1):
531:                     foundfile = 1
532:                     readfortrancode(fn1, dowithline=dowithline, istop=0)
533:                     break
534:             if not foundfile:
535:                 outmess('readfortrancode: could not find include file %s in %s. Ignoring.\n' % (
536:                     repr(fn), os.pathsep.join(include_dirs)))
537:     else:
538:         dowithline(finalline)
539:     filepositiontext = ''
540:     fin.close()
541:     if istop:
542:         dowithline('', 1)
543:     else:
544:         gotnextfile, filepositiontext, currentfilename, sourcecodeform, strictf77,\
545:             beginpattern, quiet, verbose, dolowercase = saveglobals
546: 
547: # Crack line
548: beforethisafter = r'\s*(?P<before>%s(?=\s*(\b(%s)\b)))' + \
549:     r'\s*(?P<this>(\b(%s)\b))' + \
550:     r'\s*(?P<after>%s)\s*\Z'
551: ##
552: fortrantypes = 'character|logical|integer|real|complex|double\s*(precision\s*(complex|)|complex)|type(?=\s*\([\w\s,=(*)]*\))|byte'
553: typespattern = re.compile(
554:     beforethisafter % ('', fortrantypes, fortrantypes, '.*'), re.I), 'type'
555: typespattern4implicit = re.compile(beforethisafter % (
556:     '', fortrantypes + '|static|automatic|undefined', fortrantypes + '|static|automatic|undefined', '.*'), re.I)
557: #
558: functionpattern = re.compile(beforethisafter % (
559:     '([a-z]+[\w\s(=*+-/)]*?|)', 'function', 'function', '.*'), re.I), 'begin'
560: subroutinepattern = re.compile(beforethisafter % (
561:     '[a-z\s]*?', 'subroutine', 'subroutine', '.*'), re.I), 'begin'
562: # modulepattern=re.compile(beforethisafter%('[a-z\s]*?','module','module','.*'),re.I),'begin'
563: #
564: groupbegins77 = r'program|block\s*data'
565: beginpattern77 = re.compile(
566:     beforethisafter % ('', groupbegins77, groupbegins77, '.*'), re.I), 'begin'
567: groupbegins90 = groupbegins77 + \
568:     r'|module(?!\s*procedure)|python\s*module|interface|type(?!\s*\()'
569: beginpattern90 = re.compile(
570:     beforethisafter % ('', groupbegins90, groupbegins90, '.*'), re.I), 'begin'
571: groupends = r'end|endprogram|endblockdata|endmodule|endpythonmodule|endinterface'
572: endpattern = re.compile(
573:     beforethisafter % ('', groupends, groupends, '[\w\s]*'), re.I), 'end'
574: # endifs='end\s*(if|do|where|select|while|forall)'
575: endifs = '(end\s*(if|do|where|select|while|forall))|(module\s*procedure)'
576: endifpattern = re.compile(
577:     beforethisafter % ('[\w]*?', endifs, endifs, '[\w\s]*'), re.I), 'endif'
578: #
579: implicitpattern = re.compile(
580:     beforethisafter % ('', 'implicit', 'implicit', '.*'), re.I), 'implicit'
581: dimensionpattern = re.compile(beforethisafter % (
582:     '', 'dimension|virtual', 'dimension|virtual', '.*'), re.I), 'dimension'
583: externalpattern = re.compile(
584:     beforethisafter % ('', 'external', 'external', '.*'), re.I), 'external'
585: optionalpattern = re.compile(
586:     beforethisafter % ('', 'optional', 'optional', '.*'), re.I), 'optional'
587: requiredpattern = re.compile(
588:     beforethisafter % ('', 'required', 'required', '.*'), re.I), 'required'
589: publicpattern = re.compile(
590:     beforethisafter % ('', 'public', 'public', '.*'), re.I), 'public'
591: privatepattern = re.compile(
592:     beforethisafter % ('', 'private', 'private', '.*'), re.I), 'private'
593: intrisicpattern = re.compile(
594:     beforethisafter % ('', 'intrisic', 'intrisic', '.*'), re.I), 'intrisic'
595: intentpattern = re.compile(beforethisafter % (
596:     '', 'intent|depend|note|check', 'intent|depend|note|check', '\s*\(.*?\).*'), re.I), 'intent'
597: parameterpattern = re.compile(
598:     beforethisafter % ('', 'parameter', 'parameter', '\s*\(.*'), re.I), 'parameter'
599: datapattern = re.compile(
600:     beforethisafter % ('', 'data', 'data', '.*'), re.I), 'data'
601: callpattern = re.compile(
602:     beforethisafter % ('', 'call', 'call', '.*'), re.I), 'call'
603: entrypattern = re.compile(
604:     beforethisafter % ('', 'entry', 'entry', '.*'), re.I), 'entry'
605: callfunpattern = re.compile(
606:     beforethisafter % ('', 'callfun', 'callfun', '.*'), re.I), 'callfun'
607: commonpattern = re.compile(
608:     beforethisafter % ('', 'common', 'common', '.*'), re.I), 'common'
609: usepattern = re.compile(
610:     beforethisafter % ('', 'use', 'use', '.*'), re.I), 'use'
611: containspattern = re.compile(
612:     beforethisafter % ('', 'contains', 'contains', ''), re.I), 'contains'
613: formatpattern = re.compile(
614:     beforethisafter % ('', 'format', 'format', '.*'), re.I), 'format'
615: # Non-fortran and f2py-specific statements
616: f2pyenhancementspattern = re.compile(beforethisafter % ('', 'threadsafe|fortranname|callstatement|callprotoargument|usercode|pymethoddef',
617:                                                         'threadsafe|fortranname|callstatement|callprotoargument|usercode|pymethoddef', '.*'), re.I | re.S), 'f2pyenhancements'
618: multilinepattern = re.compile(
619:     r"\s*(?P<before>''')(?P<this>.*?)(?P<after>''')\s*\Z", re.S), 'multiline'
620: ##
621: 
622: 
623: def _simplifyargs(argsline):
624:     a = []
625:     for n in markoutercomma(argsline).split('@,@'):
626:         for r in '(),':
627:             n = n.replace(r, '_')
628:         a.append(n)
629:     return ','.join(a)
630: 
631: crackline_re_1 = re.compile(r'\s*(?P<result>\b[a-z]+[\w]*\b)\s*[=].*', re.I)
632: 
633: 
634: def crackline(line, reset=0):
635:     '''
636:     reset=-1  --- initialize
637:     reset=0   --- crack the line
638:     reset=1   --- final check if mismatch of blocks occured
639: 
640:     Cracked data is saved in grouplist[0].
641:     '''
642:     global beginpattern, groupcounter, groupname, groupcache, grouplist
643:     global filepositiontext, currentfilename, neededmodule, expectbegin
644:     global skipblocksuntil, skipemptyends, previous_context, gotnextfile
645: 
646:     if ';' in line and not (f2pyenhancementspattern[0].match(line) or
647:                             multilinepattern[0].match(line)):
648:         for l in line.split(';'):
649:             # XXX: non-zero reset values need testing
650:             assert reset == 0, repr(reset)
651:             crackline(l, reset)
652:         return
653:     if reset < 0:
654:         groupcounter = 0
655:         groupname = {groupcounter: ''}
656:         groupcache = {groupcounter: {}}
657:         grouplist = {groupcounter: []}
658:         groupcache[groupcounter]['body'] = []
659:         groupcache[groupcounter]['vars'] = {}
660:         groupcache[groupcounter]['block'] = ''
661:         groupcache[groupcounter]['name'] = ''
662:         neededmodule = -1
663:         skipblocksuntil = -1
664:         return
665:     if reset > 0:
666:         fl = 0
667:         if f77modulename and neededmodule == groupcounter:
668:             fl = 2
669:         while groupcounter > fl:
670:             outmess('crackline: groupcounter=%s groupname=%s\n' %
671:                     (repr(groupcounter), repr(groupname)))
672:             outmess(
673:                 'crackline: Mismatch of blocks encountered. Trying to fix it by assuming "end" statement.\n')
674:             grouplist[groupcounter - 1].append(groupcache[groupcounter])
675:             grouplist[groupcounter - 1][-1]['body'] = grouplist[groupcounter]
676:             del grouplist[groupcounter]
677:             groupcounter = groupcounter - 1
678:         if f77modulename and neededmodule == groupcounter:
679:             grouplist[groupcounter - 1].append(groupcache[groupcounter])
680:             grouplist[groupcounter - 1][-1]['body'] = grouplist[groupcounter]
681:             del grouplist[groupcounter]
682:             groupcounter = groupcounter - 1  # end interface
683:             grouplist[groupcounter - 1].append(groupcache[groupcounter])
684:             grouplist[groupcounter - 1][-1]['body'] = grouplist[groupcounter]
685:             del grouplist[groupcounter]
686:             groupcounter = groupcounter - 1  # end module
687:             neededmodule = -1
688:         return
689:     if line == '':
690:         return
691:     flag = 0
692:     for pat in [dimensionpattern, externalpattern, intentpattern, optionalpattern,
693:                 requiredpattern,
694:                 parameterpattern, datapattern, publicpattern, privatepattern,
695:                 intrisicpattern,
696:                 endifpattern, endpattern,
697:                 formatpattern,
698:                 beginpattern, functionpattern, subroutinepattern,
699:                 implicitpattern, typespattern, commonpattern,
700:                 callpattern, usepattern, containspattern,
701:                 entrypattern,
702:                 f2pyenhancementspattern,
703:                 multilinepattern
704:                 ]:
705:         m = pat[0].match(line)
706:         if m:
707:             break
708:         flag = flag + 1
709:     if not m:
710:         re_1 = crackline_re_1
711:         if 0 <= skipblocksuntil <= groupcounter:
712:             return
713:         if 'externals' in groupcache[groupcounter]:
714:             for name in groupcache[groupcounter]['externals']:
715:                 if name in invbadnames:
716:                     name = invbadnames[name]
717:                 if 'interfaced' in groupcache[groupcounter] and name in groupcache[groupcounter]['interfaced']:
718:                     continue
719:                 m1 = re.match(
720:                     r'(?P<before>[^"]*)\b%s\b\s*@\(@(?P<args>[^@]*)@\)@.*\Z' % name, markouterparen(line), re.I)
721:                 if m1:
722:                     m2 = re_1.match(m1.group('before'))
723:                     a = _simplifyargs(m1.group('args'))
724:                     if m2:
725:                         line = 'callfun %s(%s) result (%s)' % (
726:                             name, a, m2.group('result'))
727:                     else:
728:                         line = 'callfun %s(%s)' % (name, a)
729:                     m = callfunpattern[0].match(line)
730:                     if not m:
731:                         outmess(
732:                             'crackline: could not resolve function call for line=%s.\n' % repr(line))
733:                         return
734:                     analyzeline(m, 'callfun', line)
735:                     return
736:         if verbose > 1 or (verbose == 1 and currentfilename.lower().endswith('.pyf')):
737:             previous_context = None
738:             outmess('crackline:%d: No pattern for line\n' % (groupcounter))
739:         return
740:     elif pat[1] == 'end':
741:         if 0 <= skipblocksuntil < groupcounter:
742:             groupcounter = groupcounter - 1
743:             if skipblocksuntil <= groupcounter:
744:                 return
745:         if groupcounter <= 0:
746:             raise Exception('crackline: groupcounter(=%s) is nonpositive. '
747:                             'Check the blocks.'
748:                             % (groupcounter))
749:         m1 = beginpattern[0].match((line))
750:         if (m1) and (not m1.group('this') == groupname[groupcounter]):
751:             raise Exception('crackline: End group %s does not match with '
752:                             'previous Begin group %s\n\t%s' %
753:                             (repr(m1.group('this')), repr(groupname[groupcounter]),
754:                              filepositiontext)
755:                             )
756:         if skipblocksuntil == groupcounter:
757:             skipblocksuntil = -1
758:         grouplist[groupcounter - 1].append(groupcache[groupcounter])
759:         grouplist[groupcounter - 1][-1]['body'] = grouplist[groupcounter]
760:         del grouplist[groupcounter]
761:         groupcounter = groupcounter - 1
762:         if not skipemptyends:
763:             expectbegin = 1
764:     elif pat[1] == 'begin':
765:         if 0 <= skipblocksuntil <= groupcounter:
766:             groupcounter = groupcounter + 1
767:             return
768:         gotnextfile = 0
769:         analyzeline(m, pat[1], line)
770:         expectbegin = 0
771:     elif pat[1] == 'endif':
772:         pass
773:     elif pat[1] == 'contains':
774:         if ignorecontains:
775:             return
776:         if 0 <= skipblocksuntil <= groupcounter:
777:             return
778:         skipblocksuntil = groupcounter
779:     else:
780:         if 0 <= skipblocksuntil <= groupcounter:
781:             return
782:         analyzeline(m, pat[1], line)
783: 
784: 
785: def markouterparen(line):
786:     l = ''
787:     f = 0
788:     for c in line:
789:         if c == '(':
790:             f = f + 1
791:             if f == 1:
792:                 l = l + '@(@'
793:                 continue
794:         elif c == ')':
795:             f = f - 1
796:             if f == 0:
797:                 l = l + '@)@'
798:                 continue
799:         l = l + c
800:     return l
801: 
802: 
803: def markoutercomma(line, comma=','):
804:     l = ''
805:     f = 0
806:     cc = ''
807:     for c in line:
808:         if (not cc or cc == ')') and c == '(':
809:             f = f + 1
810:             cc = ')'
811:         elif not cc and c == '\'' and (not l or l[-1] != '\\'):
812:             f = f + 1
813:             cc = '\''
814:         elif c == cc:
815:             f = f - 1
816:             if f == 0:
817:                 cc = ''
818:         elif c == comma and f == 0:
819:             l = l + '@' + comma + '@'
820:             continue
821:         l = l + c
822:     assert not f, repr((f, line, l, cc))
823:     return l
824: 
825: 
826: def unmarkouterparen(line):
827:     r = line.replace('@(@', '(').replace('@)@', ')')
828:     return r
829: 
830: 
831: def appenddecl(decl, decl2, force=1):
832:     if not decl:
833:         decl = {}
834:     if not decl2:
835:         return decl
836:     if decl is decl2:
837:         return decl
838:     for k in list(decl2.keys()):
839:         if k == 'typespec':
840:             if force or k not in decl:
841:                 decl[k] = decl2[k]
842:         elif k == 'attrspec':
843:             for l in decl2[k]:
844:                 decl = setattrspec(decl, l, force)
845:         elif k == 'kindselector':
846:             decl = setkindselector(decl, decl2[k], force)
847:         elif k == 'charselector':
848:             decl = setcharselector(decl, decl2[k], force)
849:         elif k in ['=', 'typename']:
850:             if force or k not in decl:
851:                 decl[k] = decl2[k]
852:         elif k == 'note':
853:             pass
854:         elif k in ['intent', 'check', 'dimension', 'optional', 'required']:
855:             errmess('appenddecl: "%s" not implemented.\n' % k)
856:         else:
857:             raise Exception('appenddecl: Unknown variable definition key:' +
858:                             str(k))
859:     return decl
860: 
861: selectpattern = re.compile(
862:     r'\s*(?P<this>(@\(@.*?@\)@|[*][\d*]+|[*]\s*@\(@.*?@\)@|))(?P<after>.*)\Z', re.I)
863: nameargspattern = re.compile(
864:     r'\s*(?P<name>\b[\w$]+\b)\s*(@\(@\s*(?P<args>[\w\s,]*)\s*@\)@|)\s*((result(\s*@\(@\s*(?P<result>\b[\w$]+\b)\s*@\)@|))|(bind\s*@\(@\s*(?P<bind>.*)\s*@\)@))*\s*\Z', re.I)
865: callnameargspattern = re.compile(
866:     r'\s*(?P<name>\b[\w$]+\b)\s*@\(@\s*(?P<args>.*)\s*@\)@\s*\Z', re.I)
867: real16pattern = re.compile(
868:     r'([-+]?(?:\d+(?:\.\d*)?|\d*\.\d+))[dD]((?:[-+]?\d+)?)')
869: real8pattern = re.compile(
870:     r'([-+]?((?:\d+(?:\.\d*)?|\d*\.\d+))[eE]((?:[-+]?\d+)?)|(\d+\.\d*))')
871: 
872: _intentcallbackpattern = re.compile(r'intent\s*\(.*?\bcallback\b', re.I)
873: 
874: 
875: def _is_intent_callback(vdecl):
876:     for a in vdecl.get('attrspec', []):
877:         if _intentcallbackpattern.match(a):
878:             return 1
879:     return 0
880: 
881: 
882: def _resolvenameargspattern(line):
883:     line = markouterparen(line)
884:     m1 = nameargspattern.match(line)
885:     if m1:
886:         return m1.group('name'), m1.group('args'), m1.group('result'), m1.group('bind')
887:     m1 = callnameargspattern.match(line)
888:     if m1:
889:         return m1.group('name'), m1.group('args'), None, None
890:     return None, [], None, None
891: 
892: 
893: def analyzeline(m, case, line):
894:     global groupcounter, groupname, groupcache, grouplist, filepositiontext
895:     global currentfilename, f77modulename, neededinterface, neededmodule
896:     global expectbegin, gotnextfile, previous_context
897: 
898:     block = m.group('this')
899:     if case != 'multiline':
900:         previous_context = None
901:     if expectbegin and case not in ['begin', 'call', 'callfun', 'type'] \
902:        and not skipemptyends and groupcounter < 1:
903:         newname = os.path.basename(currentfilename).split('.')[0]
904:         outmess(
905:             'analyzeline: no group yet. Creating program group with name "%s".\n' % newname)
906:         gotnextfile = 0
907:         groupcounter = groupcounter + 1
908:         groupname[groupcounter] = 'program'
909:         groupcache[groupcounter] = {}
910:         grouplist[groupcounter] = []
911:         groupcache[groupcounter]['body'] = []
912:         groupcache[groupcounter]['vars'] = {}
913:         groupcache[groupcounter]['block'] = 'program'
914:         groupcache[groupcounter]['name'] = newname
915:         groupcache[groupcounter]['from'] = 'fromsky'
916:         expectbegin = 0
917:     if case in ['begin', 'call', 'callfun']:
918:         # Crack line => block,name,args,result
919:         block = block.lower()
920:         if re.match(r'block\s*data', block, re.I):
921:             block = 'block data'
922:         if re.match(r'python\s*module', block, re.I):
923:             block = 'python module'
924:         name, args, result, bind = _resolvenameargspattern(m.group('after'))
925:         if name is None:
926:             if block == 'block data':
927:                 name = '_BLOCK_DATA_'
928:             else:
929:                 name = ''
930:             if block not in ['interface', 'block data']:
931:                 outmess('analyzeline: No name/args pattern found for line.\n')
932: 
933:         previous_context = (block, name, groupcounter)
934:         if args:
935:             args = rmbadname([x.strip()
936:                               for x in markoutercomma(args).split('@,@')])
937:         else:
938:             args = []
939:         if '' in args:
940:             while '' in args:
941:                 args.remove('')
942:             outmess(
943:                 'analyzeline: argument list is malformed (missing argument).\n')
944: 
945:         # end of crack line => block,name,args,result
946:         needmodule = 0
947:         needinterface = 0
948: 
949:         if case in ['call', 'callfun']:
950:             needinterface = 1
951:             if 'args' not in groupcache[groupcounter]:
952:                 return
953:             if name not in groupcache[groupcounter]['args']:
954:                 return
955:             for it in grouplist[groupcounter]:
956:                 if it['name'] == name:
957:                     return
958:             if name in groupcache[groupcounter]['interfaced']:
959:                 return
960:             block = {'call': 'subroutine', 'callfun': 'function'}[case]
961:         if f77modulename and neededmodule == -1 and groupcounter <= 1:
962:             neededmodule = groupcounter + 2
963:             needmodule = 1
964:             if block != 'interface':
965:                 needinterface = 1
966:         # Create new block(s)
967:         groupcounter = groupcounter + 1
968:         groupcache[groupcounter] = {}
969:         grouplist[groupcounter] = []
970:         if needmodule:
971:             if verbose > 1:
972:                 outmess('analyzeline: Creating module block %s\n' %
973:                         repr(f77modulename), 0)
974:             groupname[groupcounter] = 'module'
975:             groupcache[groupcounter]['block'] = 'python module'
976:             groupcache[groupcounter]['name'] = f77modulename
977:             groupcache[groupcounter]['from'] = ''
978:             groupcache[groupcounter]['body'] = []
979:             groupcache[groupcounter]['externals'] = []
980:             groupcache[groupcounter]['interfaced'] = []
981:             groupcache[groupcounter]['vars'] = {}
982:             groupcounter = groupcounter + 1
983:             groupcache[groupcounter] = {}
984:             grouplist[groupcounter] = []
985:         if needinterface:
986:             if verbose > 1:
987:                 outmess('analyzeline: Creating additional interface block (groupcounter=%s).\n' % (
988:                     groupcounter), 0)
989:             groupname[groupcounter] = 'interface'
990:             groupcache[groupcounter]['block'] = 'interface'
991:             groupcache[groupcounter]['name'] = 'unknown_interface'
992:             groupcache[groupcounter]['from'] = '%s:%s' % (
993:                 groupcache[groupcounter - 1]['from'], groupcache[groupcounter - 1]['name'])
994:             groupcache[groupcounter]['body'] = []
995:             groupcache[groupcounter]['externals'] = []
996:             groupcache[groupcounter]['interfaced'] = []
997:             groupcache[groupcounter]['vars'] = {}
998:             groupcounter = groupcounter + 1
999:             groupcache[groupcounter] = {}
1000:             grouplist[groupcounter] = []
1001:         groupname[groupcounter] = block
1002:         groupcache[groupcounter]['block'] = block
1003:         if not name:
1004:             name = 'unknown_' + block
1005:         groupcache[groupcounter]['prefix'] = m.group('before')
1006:         groupcache[groupcounter]['name'] = rmbadname1(name)
1007:         groupcache[groupcounter]['result'] = result
1008:         if groupcounter == 1:
1009:             groupcache[groupcounter]['from'] = currentfilename
1010:         else:
1011:             if f77modulename and groupcounter == 3:
1012:                 groupcache[groupcounter]['from'] = '%s:%s' % (
1013:                     groupcache[groupcounter - 1]['from'], currentfilename)
1014:             else:
1015:                 groupcache[groupcounter]['from'] = '%s:%s' % (
1016:                     groupcache[groupcounter - 1]['from'], groupcache[groupcounter - 1]['name'])
1017:         for k in list(groupcache[groupcounter].keys()):
1018:             if not groupcache[groupcounter][k]:
1019:                 del groupcache[groupcounter][k]
1020: 
1021:         groupcache[groupcounter]['args'] = args
1022:         groupcache[groupcounter]['body'] = []
1023:         groupcache[groupcounter]['externals'] = []
1024:         groupcache[groupcounter]['interfaced'] = []
1025:         groupcache[groupcounter]['vars'] = {}
1026:         groupcache[groupcounter]['entry'] = {}
1027:         # end of creation
1028:         if block == 'type':
1029:             groupcache[groupcounter]['varnames'] = []
1030: 
1031:         if case in ['call', 'callfun']:  # set parents variables
1032:             if name not in groupcache[groupcounter - 2]['externals']:
1033:                 groupcache[groupcounter - 2]['externals'].append(name)
1034:             groupcache[groupcounter]['vars'] = copy.deepcopy(
1035:                 groupcache[groupcounter - 2]['vars'])
1036:             try:
1037:                 del groupcache[groupcounter]['vars'][name][
1038:                     groupcache[groupcounter]['vars'][name]['attrspec'].index('external')]
1039:             except:
1040:                 pass
1041:         if block in ['function', 'subroutine']:  # set global attributes
1042:             try:
1043:                 groupcache[groupcounter]['vars'][name] = appenddecl(
1044:                     groupcache[groupcounter]['vars'][name], groupcache[groupcounter - 2]['vars'][''])
1045:             except:
1046:                 pass
1047:             if case == 'callfun':  # return type
1048:                 if result and result in groupcache[groupcounter]['vars']:
1049:                     if not name == result:
1050:                         groupcache[groupcounter]['vars'][name] = appenddecl(
1051:                             groupcache[groupcounter]['vars'][name], groupcache[groupcounter]['vars'][result])
1052:             # if groupcounter>1: # name is interfaced
1053:             try:
1054:                 groupcache[groupcounter - 2]['interfaced'].append(name)
1055:             except:
1056:                 pass
1057:         if block == 'function':
1058:             t = typespattern[0].match(m.group('before') + ' ' + name)
1059:             if t:
1060:                 typespec, selector, attr, edecl = cracktypespec0(
1061:                     t.group('this'), t.group('after'))
1062:                 updatevars(typespec, selector, attr, edecl)
1063: 
1064:         if case in ['call', 'callfun']:
1065:             grouplist[groupcounter - 1].append(groupcache[groupcounter])
1066:             grouplist[groupcounter - 1][-1]['body'] = grouplist[groupcounter]
1067:             del grouplist[groupcounter]
1068:             groupcounter = groupcounter - 1  # end routine
1069:             grouplist[groupcounter - 1].append(groupcache[groupcounter])
1070:             grouplist[groupcounter - 1][-1]['body'] = grouplist[groupcounter]
1071:             del grouplist[groupcounter]
1072:             groupcounter = groupcounter - 1  # end interface
1073: 
1074:     elif case == 'entry':
1075:         name, args, result, bind = _resolvenameargspattern(m.group('after'))
1076:         if name is not None:
1077:             if args:
1078:                 args = rmbadname([x.strip()
1079:                                   for x in markoutercomma(args).split('@,@')])
1080:             else:
1081:                 args = []
1082:             assert result is None, repr(result)
1083:             groupcache[groupcounter]['entry'][name] = args
1084:             previous_context = ('entry', name, groupcounter)
1085:     elif case == 'type':
1086:         typespec, selector, attr, edecl = cracktypespec0(
1087:             block, m.group('after'))
1088:         last_name = updatevars(typespec, selector, attr, edecl)
1089:         if last_name is not None:
1090:             previous_context = ('variable', last_name, groupcounter)
1091:     elif case in ['dimension', 'intent', 'optional', 'required', 'external', 'public', 'private', 'intrisic']:
1092:         edecl = groupcache[groupcounter]['vars']
1093:         ll = m.group('after').strip()
1094:         i = ll.find('::')
1095:         if i < 0 and case == 'intent':
1096:             i = markouterparen(ll).find('@)@') - 2
1097:             ll = ll[:i + 1] + '::' + ll[i + 1:]
1098:             i = ll.find('::')
1099:             if ll[i:] == '::' and 'args' in groupcache[groupcounter]:
1100:                 outmess('All arguments will have attribute %s%s\n' %
1101:                         (m.group('this'), ll[:i]))
1102:                 ll = ll + ','.join(groupcache[groupcounter]['args'])
1103:         if i < 0:
1104:             i = 0
1105:             pl = ''
1106:         else:
1107:             pl = ll[:i].strip()
1108:             ll = ll[i + 2:]
1109:         ch = markoutercomma(pl).split('@,@')
1110:         if len(ch) > 1:
1111:             pl = ch[0]
1112:             outmess('analyzeline: cannot handle multiple attributes without type specification. Ignoring %r.\n' % (
1113:                 ','.join(ch[1:])))
1114:         last_name = None
1115: 
1116:         for e in [x.strip() for x in markoutercomma(ll).split('@,@')]:
1117:             m1 = namepattern.match(e)
1118:             if not m1:
1119:                 if case in ['public', 'private']:
1120:                     k = ''
1121:                 else:
1122:                     print(m.groupdict())
1123:                     outmess('analyzeline: no name pattern found in %s statement for %s. Skipping.\n' % (
1124:                         case, repr(e)))
1125:                     continue
1126:             else:
1127:                 k = rmbadname1(m1.group('name'))
1128:             if k not in edecl:
1129:                 edecl[k] = {}
1130:             if case == 'dimension':
1131:                 ap = case + m1.group('after')
1132:             if case == 'intent':
1133:                 ap = m.group('this') + pl
1134:                 if _intentcallbackpattern.match(ap):
1135:                     if k not in groupcache[groupcounter]['args']:
1136:                         if groupcounter > 1:
1137:                             if '__user__' not in groupcache[groupcounter - 2]['name']:
1138:                                 outmess(
1139:                                     'analyzeline: missing __user__ module (could be nothing)\n')
1140:                             # fixes ticket 1693
1141:                             if k != groupcache[groupcounter]['name']:
1142:                                 outmess('analyzeline: appending intent(callback) %s'
1143:                                         ' to %s arguments\n' % (k, groupcache[groupcounter]['name']))
1144:                                 groupcache[groupcounter]['args'].append(k)
1145:                         else:
1146:                             errmess(
1147:                                 'analyzeline: intent(callback) %s is ignored' % (k))
1148:                     else:
1149:                         errmess('analyzeline: intent(callback) %s is already'
1150:                                 ' in argument list' % (k))
1151:             if case in ['optional', 'required', 'public', 'external', 'private', 'intrisic']:
1152:                 ap = case
1153:             if 'attrspec' in edecl[k]:
1154:                 edecl[k]['attrspec'].append(ap)
1155:             else:
1156:                 edecl[k]['attrspec'] = [ap]
1157:             if case == 'external':
1158:                 if groupcache[groupcounter]['block'] == 'program':
1159:                     outmess('analyzeline: ignoring program arguments\n')
1160:                     continue
1161:                 if k not in groupcache[groupcounter]['args']:
1162:                     continue
1163:                 if 'externals' not in groupcache[groupcounter]:
1164:                     groupcache[groupcounter]['externals'] = []
1165:                 groupcache[groupcounter]['externals'].append(k)
1166:             last_name = k
1167:         groupcache[groupcounter]['vars'] = edecl
1168:         if last_name is not None:
1169:             previous_context = ('variable', last_name, groupcounter)
1170:     elif case == 'parameter':
1171:         edecl = groupcache[groupcounter]['vars']
1172:         ll = m.group('after').strip()[1:-1]
1173:         last_name = None
1174:         for e in markoutercomma(ll).split('@,@'):
1175:             try:
1176:                 k, initexpr = [x.strip() for x in e.split('=')]
1177:             except:
1178:                 outmess(
1179:                     'analyzeline: could not extract name,expr in parameter statement "%s" of "%s"\n' % (e, ll))
1180:                 continue
1181:             params = get_parameters(edecl)
1182:             k = rmbadname1(k)
1183:             if k not in edecl:
1184:                 edecl[k] = {}
1185:             if '=' in edecl[k] and (not edecl[k]['='] == initexpr):
1186:                 outmess('analyzeline: Overwriting the value of parameter "%s" ("%s") with "%s".\n' % (
1187:                     k, edecl[k]['='], initexpr))
1188:             t = determineexprtype(initexpr, params)
1189:             if t:
1190:                 if t.get('typespec') == 'real':
1191:                     tt = list(initexpr)
1192:                     for m in real16pattern.finditer(initexpr):
1193:                         tt[m.start():m.end()] = list(
1194:                             initexpr[m.start():m.end()].lower().replace('d', 'e'))
1195:                     initexpr = ''.join(tt)
1196:                 elif t.get('typespec') == 'complex':
1197:                     initexpr = initexpr[1:].lower().replace('d', 'e').\
1198:                         replace(',', '+1j*(')
1199:             try:
1200:                 v = eval(initexpr, {}, params)
1201:             except (SyntaxError, NameError, TypeError) as msg:
1202:                 errmess('analyzeline: Failed to evaluate %r. Ignoring: %s\n'
1203:                         % (initexpr, msg))
1204:                 continue
1205:             edecl[k]['='] = repr(v)
1206:             if 'attrspec' in edecl[k]:
1207:                 edecl[k]['attrspec'].append('parameter')
1208:             else:
1209:                 edecl[k]['attrspec'] = ['parameter']
1210:             last_name = k
1211:         groupcache[groupcounter]['vars'] = edecl
1212:         if last_name is not None:
1213:             previous_context = ('variable', last_name, groupcounter)
1214:     elif case == 'implicit':
1215:         if m.group('after').strip().lower() == 'none':
1216:             groupcache[groupcounter]['implicit'] = None
1217:         elif m.group('after'):
1218:             if 'implicit' in groupcache[groupcounter]:
1219:                 impl = groupcache[groupcounter]['implicit']
1220:             else:
1221:                 impl = {}
1222:             if impl is None:
1223:                 outmess(
1224:                     'analyzeline: Overwriting earlier "implicit none" statement.\n')
1225:                 impl = {}
1226:             for e in markoutercomma(m.group('after')).split('@,@'):
1227:                 decl = {}
1228:                 m1 = re.match(
1229:                     r'\s*(?P<this>.*?)\s*(\(\s*(?P<after>[a-z-, ]+)\s*\)\s*|)\Z', e, re.I)
1230:                 if not m1:
1231:                     outmess(
1232:                         'analyzeline: could not extract info of implicit statement part "%s"\n' % (e))
1233:                     continue
1234:                 m2 = typespattern4implicit.match(m1.group('this'))
1235:                 if not m2:
1236:                     outmess(
1237:                         'analyzeline: could not extract types pattern of implicit statement part "%s"\n' % (e))
1238:                     continue
1239:                 typespec, selector, attr, edecl = cracktypespec0(
1240:                     m2.group('this'), m2.group('after'))
1241:                 kindselect, charselect, typename = cracktypespec(
1242:                     typespec, selector)
1243:                 decl['typespec'] = typespec
1244:                 decl['kindselector'] = kindselect
1245:                 decl['charselector'] = charselect
1246:                 decl['typename'] = typename
1247:                 for k in list(decl.keys()):
1248:                     if not decl[k]:
1249:                         del decl[k]
1250:                 for r in markoutercomma(m1.group('after')).split('@,@'):
1251:                     if '-' in r:
1252:                         try:
1253:                             begc, endc = [x.strip() for x in r.split('-')]
1254:                         except:
1255:                             outmess(
1256:                                 'analyzeline: expected "<char>-<char>" instead of "%s" in range list of implicit statement\n' % r)
1257:                             continue
1258:                     else:
1259:                         begc = endc = r.strip()
1260:                     if not len(begc) == len(endc) == 1:
1261:                         outmess(
1262:                             'analyzeline: expected "<char>-<char>" instead of "%s" in range list of implicit statement (2)\n' % r)
1263:                         continue
1264:                     for o in range(ord(begc), ord(endc) + 1):
1265:                         impl[chr(o)] = decl
1266:             groupcache[groupcounter]['implicit'] = impl
1267:     elif case == 'data':
1268:         ll = []
1269:         dl = ''
1270:         il = ''
1271:         f = 0
1272:         fc = 1
1273:         inp = 0
1274:         for c in m.group('after'):
1275:             if not inp:
1276:                 if c == "'":
1277:                     fc = not fc
1278:                 if c == '/' and fc:
1279:                     f = f + 1
1280:                     continue
1281:             if c == '(':
1282:                 inp = inp + 1
1283:             elif c == ')':
1284:                 inp = inp - 1
1285:             if f == 0:
1286:                 dl = dl + c
1287:             elif f == 1:
1288:                 il = il + c
1289:             elif f == 2:
1290:                 dl = dl.strip()
1291:                 if dl.startswith(','):
1292:                     dl = dl[1:].strip()
1293:                 ll.append([dl, il])
1294:                 dl = c
1295:                 il = ''
1296:                 f = 0
1297:         if f == 2:
1298:             dl = dl.strip()
1299:             if dl.startswith(','):
1300:                 dl = dl[1:].strip()
1301:             ll.append([dl, il])
1302:         vars = {}
1303:         if 'vars' in groupcache[groupcounter]:
1304:             vars = groupcache[groupcounter]['vars']
1305:         last_name = None
1306:         for l in ll:
1307:             l = [x.strip() for x in l]
1308:             if l[0][0] == ',':
1309:                 l[0] = l[0][1:]
1310:             if l[0][0] == '(':
1311:                 outmess(
1312:                     'analyzeline: implied-DO list "%s" is not supported. Skipping.\n' % l[0])
1313:                 continue
1314:             i = 0
1315:             j = 0
1316:             llen = len(l[1])
1317:             for v in rmbadname([x.strip() for x in markoutercomma(l[0]).split('@,@')]):
1318:                 if v[0] == '(':
1319:                     outmess(
1320:                         'analyzeline: implied-DO list "%s" is not supported. Skipping.\n' % v)
1321:                     # XXX: subsequent init expressions may get wrong values.
1322:                     # Ignoring since data statements are irrelevant for
1323:                     # wrapping.
1324:                     continue
1325:                 fc = 0
1326:                 while (i < llen) and (fc or not l[1][i] == ','):
1327:                     if l[1][i] == "'":
1328:                         fc = not fc
1329:                     i = i + 1
1330:                 i = i + 1
1331:                 if v not in vars:
1332:                     vars[v] = {}
1333:                 if '=' in vars[v] and not vars[v]['='] == l[1][j:i - 1]:
1334:                     outmess('analyzeline: changing init expression of "%s" ("%s") to "%s"\n' % (
1335:                         v, vars[v]['='], l[1][j:i - 1]))
1336:                 vars[v]['='] = l[1][j:i - 1]
1337:                 j = i
1338:                 last_name = v
1339:         groupcache[groupcounter]['vars'] = vars
1340:         if last_name is not None:
1341:             previous_context = ('variable', last_name, groupcounter)
1342:     elif case == 'common':
1343:         line = m.group('after').strip()
1344:         if not line[0] == '/':
1345:             line = '//' + line
1346:         cl = []
1347:         f = 0
1348:         bn = ''
1349:         ol = ''
1350:         for c in line:
1351:             if c == '/':
1352:                 f = f + 1
1353:                 continue
1354:             if f >= 3:
1355:                 bn = bn.strip()
1356:                 if not bn:
1357:                     bn = '_BLNK_'
1358:                 cl.append([bn, ol])
1359:                 f = f - 2
1360:                 bn = ''
1361:                 ol = ''
1362:             if f % 2:
1363:                 bn = bn + c
1364:             else:
1365:                 ol = ol + c
1366:         bn = bn.strip()
1367:         if not bn:
1368:             bn = '_BLNK_'
1369:         cl.append([bn, ol])
1370:         commonkey = {}
1371:         if 'common' in groupcache[groupcounter]:
1372:             commonkey = groupcache[groupcounter]['common']
1373:         for c in cl:
1374:             if c[0] not in commonkey:
1375:                 commonkey[c[0]] = []
1376:             for i in [x.strip() for x in markoutercomma(c[1]).split('@,@')]:
1377:                 if i:
1378:                     commonkey[c[0]].append(i)
1379:         groupcache[groupcounter]['common'] = commonkey
1380:         previous_context = ('common', bn, groupcounter)
1381:     elif case == 'use':
1382:         m1 = re.match(
1383:             r'\A\s*(?P<name>\b[\w]+\b)\s*((,(\s*\bonly\b\s*:|(?P<notonly>))\s*(?P<list>.*))|)\s*\Z', m.group('after'), re.I)
1384:         if m1:
1385:             mm = m1.groupdict()
1386:             if 'use' not in groupcache[groupcounter]:
1387:                 groupcache[groupcounter]['use'] = {}
1388:             name = m1.group('name')
1389:             groupcache[groupcounter]['use'][name] = {}
1390:             isonly = 0
1391:             if 'list' in mm and mm['list'] is not None:
1392:                 if 'notonly' in mm and mm['notonly'] is None:
1393:                     isonly = 1
1394:                 groupcache[groupcounter]['use'][name]['only'] = isonly
1395:                 ll = [x.strip() for x in mm['list'].split(',')]
1396:                 rl = {}
1397:                 for l in ll:
1398:                     if '=' in l:
1399:                         m2 = re.match(
1400:                             r'\A\s*(?P<local>\b[\w]+\b)\s*=\s*>\s*(?P<use>\b[\w]+\b)\s*\Z', l, re.I)
1401:                         if m2:
1402:                             rl[m2.group('local').strip()] = m2.group(
1403:                                 'use').strip()
1404:                         else:
1405:                             outmess(
1406:                                 'analyzeline: Not local=>use pattern found in %s\n' % repr(l))
1407:                     else:
1408:                         rl[l] = l
1409:                     groupcache[groupcounter]['use'][name]['map'] = rl
1410:             else:
1411:                 pass
1412:         else:
1413:             print(m.groupdict())
1414:             outmess('analyzeline: Could not crack the use statement.\n')
1415:     elif case in ['f2pyenhancements']:
1416:         if 'f2pyenhancements' not in groupcache[groupcounter]:
1417:             groupcache[groupcounter]['f2pyenhancements'] = {}
1418:         d = groupcache[groupcounter]['f2pyenhancements']
1419:         if m.group('this') == 'usercode' and 'usercode' in d:
1420:             if isinstance(d['usercode'], str):
1421:                 d['usercode'] = [d['usercode']]
1422:             d['usercode'].append(m.group('after'))
1423:         else:
1424:             d[m.group('this')] = m.group('after')
1425:     elif case == 'multiline':
1426:         if previous_context is None:
1427:             if verbose:
1428:                 outmess('analyzeline: No context for multiline block.\n')
1429:             return
1430:         gc = groupcounter
1431:         appendmultiline(groupcache[gc],
1432:                         previous_context[:2],
1433:                         m.group('this'))
1434:     else:
1435:         if verbose > 1:
1436:             print(m.groupdict())
1437:             outmess('analyzeline: No code implemented for line.\n')
1438: 
1439: 
1440: def appendmultiline(group, context_name, ml):
1441:     if 'f2pymultilines' not in group:
1442:         group['f2pymultilines'] = {}
1443:     d = group['f2pymultilines']
1444:     if context_name not in d:
1445:         d[context_name] = []
1446:     d[context_name].append(ml)
1447:     return
1448: 
1449: 
1450: def cracktypespec0(typespec, ll):
1451:     selector = None
1452:     attr = None
1453:     if re.match(r'double\s*complex', typespec, re.I):
1454:         typespec = 'double complex'
1455:     elif re.match(r'double\s*precision', typespec, re.I):
1456:         typespec = 'double precision'
1457:     else:
1458:         typespec = typespec.strip().lower()
1459:     m1 = selectpattern.match(markouterparen(ll))
1460:     if not m1:
1461:         outmess(
1462:             'cracktypespec0: no kind/char_selector pattern found for line.\n')
1463:         return
1464:     d = m1.groupdict()
1465:     for k in list(d.keys()):
1466:         d[k] = unmarkouterparen(d[k])
1467:     if typespec in ['complex', 'integer', 'logical', 'real', 'character', 'type']:
1468:         selector = d['this']
1469:         ll = d['after']
1470:     i = ll.find('::')
1471:     if i >= 0:
1472:         attr = ll[:i].strip()
1473:         ll = ll[i + 2:]
1474:     return typespec, selector, attr, ll
1475: #####
1476: namepattern = re.compile(r'\s*(?P<name>\b[\w]+\b)\s*(?P<after>.*)\s*\Z', re.I)
1477: kindselector = re.compile(
1478:     r'\s*(\(\s*(kind\s*=)?\s*(?P<kind>.*)\s*\)|[*]\s*(?P<kind2>.*?))\s*\Z', re.I)
1479: charselector = re.compile(
1480:     r'\s*(\((?P<lenkind>.*)\)|[*]\s*(?P<charlen>.*))\s*\Z', re.I)
1481: lenkindpattern = re.compile(
1482:     r'\s*(kind\s*=\s*(?P<kind>.*?)\s*(@,@\s*len\s*=\s*(?P<len>.*)|)|(len\s*=\s*|)(?P<len2>.*?)\s*(@,@\s*(kind\s*=\s*|)(?P<kind2>.*)|))\s*\Z', re.I)
1483: lenarraypattern = re.compile(
1484:     r'\s*(@\(@\s*(?!/)\s*(?P<array>.*?)\s*@\)@\s*[*]\s*(?P<len>.*?)|([*]\s*(?P<len2>.*?)|)\s*(@\(@\s*(?!/)\s*(?P<array2>.*?)\s*@\)@|))\s*(=\s*(?P<init>.*?)|(@\(@|)/\s*(?P<init2>.*?)\s*/(@\)@|)|)\s*\Z', re.I)
1485: 
1486: 
1487: def removespaces(expr):
1488:     expr = expr.strip()
1489:     if len(expr) <= 1:
1490:         return expr
1491:     expr2 = expr[0]
1492:     for i in range(1, len(expr) - 1):
1493:         if (expr[i] == ' ' and
1494:             ((expr[i + 1] in "()[]{}=+-/* ") or
1495:                 (expr[i - 1] in "()[]{}=+-/* "))):
1496:             continue
1497:         expr2 = expr2 + expr[i]
1498:     expr2 = expr2 + expr[-1]
1499:     return expr2
1500: 
1501: 
1502: def markinnerspaces(line):
1503:     l = ''
1504:     f = 0
1505:     cc = '\''
1506:     cb = ''
1507:     for c in line:
1508:         if cb == '\\' and c in ['\\', '\'', '"']:
1509:             l = l + c
1510:             cb = c
1511:             continue
1512:         if f == 0 and c in ['\'', '"']:
1513:             cc = c
1514:         if c == cc:
1515:             f = f + 1
1516:         elif c == cc:
1517:             f = f - 1
1518:         elif c == ' ' and f == 1:
1519:             l = l + '@_@'
1520:             continue
1521:         l = l + c
1522:         cb = c
1523:     return l
1524: 
1525: 
1526: def updatevars(typespec, selector, attrspec, entitydecl):
1527:     global groupcache, groupcounter
1528: 
1529:     last_name = None
1530:     kindselect, charselect, typename = cracktypespec(typespec, selector)
1531:     if attrspec:
1532:         attrspec = [x.strip() for x in markoutercomma(attrspec).split('@,@')]
1533:         l = []
1534:         c = re.compile(r'(?P<start>[a-zA-Z]+)')
1535:         for a in attrspec:
1536:             if not a:
1537:                 continue
1538:             m = c.match(a)
1539:             if m:
1540:                 s = m.group('start').lower()
1541:                 a = s + a[len(s):]
1542:             l.append(a)
1543:         attrspec = l
1544:     el = [x.strip() for x in markoutercomma(entitydecl).split('@,@')]
1545:     el1 = []
1546:     for e in el:
1547:         for e1 in [x.strip() for x in markoutercomma(removespaces(markinnerspaces(e)), comma=' ').split('@ @')]:
1548:             if e1:
1549:                 el1.append(e1.replace('@_@', ' '))
1550:     for e in el1:
1551:         m = namepattern.match(e)
1552:         if not m:
1553:             outmess(
1554:                 'updatevars: no name pattern found for entity=%s. Skipping.\n' % (repr(e)))
1555:             continue
1556:         ename = rmbadname1(m.group('name'))
1557:         edecl = {}
1558:         if ename in groupcache[groupcounter]['vars']:
1559:             edecl = groupcache[groupcounter]['vars'][ename].copy()
1560:             not_has_typespec = 'typespec' not in edecl
1561:             if not_has_typespec:
1562:                 edecl['typespec'] = typespec
1563:             elif typespec and (not typespec == edecl['typespec']):
1564:                 outmess('updatevars: attempt to change the type of "%s" ("%s") to "%s". Ignoring.\n' % (
1565:                     ename, edecl['typespec'], typespec))
1566:             if 'kindselector' not in edecl:
1567:                 edecl['kindselector'] = copy.copy(kindselect)
1568:             elif kindselect:
1569:                 for k in list(kindselect.keys()):
1570:                     if k in edecl['kindselector'] and (not kindselect[k] == edecl['kindselector'][k]):
1571:                         outmess('updatevars: attempt to change the kindselector "%s" of "%s" ("%s") to "%s". Ignoring.\n' % (
1572:                             k, ename, edecl['kindselector'][k], kindselect[k]))
1573:                     else:
1574:                         edecl['kindselector'][k] = copy.copy(kindselect[k])
1575:             if 'charselector' not in edecl and charselect:
1576:                 if not_has_typespec:
1577:                     edecl['charselector'] = charselect
1578:                 else:
1579:                     errmess('updatevars:%s: attempt to change empty charselector to %r. Ignoring.\n'
1580:                             % (ename, charselect))
1581:             elif charselect:
1582:                 for k in list(charselect.keys()):
1583:                     if k in edecl['charselector'] and (not charselect[k] == edecl['charselector'][k]):
1584:                         outmess('updatevars: attempt to change the charselector "%s" of "%s" ("%s") to "%s". Ignoring.\n' % (
1585:                             k, ename, edecl['charselector'][k], charselect[k]))
1586:                     else:
1587:                         edecl['charselector'][k] = copy.copy(charselect[k])
1588:             if 'typename' not in edecl:
1589:                 edecl['typename'] = typename
1590:             elif typename and (not edecl['typename'] == typename):
1591:                 outmess('updatevars: attempt to change the typename of "%s" ("%s") to "%s". Ignoring.\n' % (
1592:                     ename, edecl['typename'], typename))
1593:             if 'attrspec' not in edecl:
1594:                 edecl['attrspec'] = copy.copy(attrspec)
1595:             elif attrspec:
1596:                 for a in attrspec:
1597:                     if a not in edecl['attrspec']:
1598:                         edecl['attrspec'].append(a)
1599:         else:
1600:             edecl['typespec'] = copy.copy(typespec)
1601:             edecl['kindselector'] = copy.copy(kindselect)
1602:             edecl['charselector'] = copy.copy(charselect)
1603:             edecl['typename'] = typename
1604:             edecl['attrspec'] = copy.copy(attrspec)
1605:         if m.group('after'):
1606:             m1 = lenarraypattern.match(markouterparen(m.group('after')))
1607:             if m1:
1608:                 d1 = m1.groupdict()
1609:                 for lk in ['len', 'array', 'init']:
1610:                     if d1[lk + '2'] is not None:
1611:                         d1[lk] = d1[lk + '2']
1612:                         del d1[lk + '2']
1613:                 for k in list(d1.keys()):
1614:                     if d1[k] is not None:
1615:                         d1[k] = unmarkouterparen(d1[k])
1616:                     else:
1617:                         del d1[k]
1618:                 if 'len' in d1 and 'array' in d1:
1619:                     if d1['len'] == '':
1620:                         d1['len'] = d1['array']
1621:                         del d1['array']
1622:                     else:
1623:                         d1['array'] = d1['array'] + ',' + d1['len']
1624:                         del d1['len']
1625:                         errmess('updatevars: "%s %s" is mapped to "%s %s(%s)"\n' % (
1626:                             typespec, e, typespec, ename, d1['array']))
1627:                 if 'array' in d1:
1628:                     dm = 'dimension(%s)' % d1['array']
1629:                     if 'attrspec' not in edecl or (not edecl['attrspec']):
1630:                         edecl['attrspec'] = [dm]
1631:                     else:
1632:                         edecl['attrspec'].append(dm)
1633:                         for dm1 in edecl['attrspec']:
1634:                             if dm1[:9] == 'dimension' and dm1 != dm:
1635:                                 del edecl['attrspec'][-1]
1636:                                 errmess('updatevars:%s: attempt to change %r to %r. Ignoring.\n'
1637:                                         % (ename, dm1, dm))
1638:                                 break
1639: 
1640:                 if 'len' in d1:
1641:                     if typespec in ['complex', 'integer', 'logical', 'real']:
1642:                         if ('kindselector' not in edecl) or (not edecl['kindselector']):
1643:                             edecl['kindselector'] = {}
1644:                         edecl['kindselector']['*'] = d1['len']
1645:                     elif typespec == 'character':
1646:                         if ('charselector' not in edecl) or (not edecl['charselector']):
1647:                             edecl['charselector'] = {}
1648:                         if 'len' in edecl['charselector']:
1649:                             del edecl['charselector']['len']
1650:                         edecl['charselector']['*'] = d1['len']
1651:                 if 'init' in d1:
1652:                     if '=' in edecl and (not edecl['='] == d1['init']):
1653:                         outmess('updatevars: attempt to change the init expression of "%s" ("%s") to "%s". Ignoring.\n' % (
1654:                             ename, edecl['='], d1['init']))
1655:                     else:
1656:                         edecl['='] = d1['init']
1657:             else:
1658:                 outmess('updatevars: could not crack entity declaration "%s". Ignoring.\n' % (
1659:                     ename + m.group('after')))
1660:         for k in list(edecl.keys()):
1661:             if not edecl[k]:
1662:                 del edecl[k]
1663:         groupcache[groupcounter]['vars'][ename] = edecl
1664:         if 'varnames' in groupcache[groupcounter]:
1665:             groupcache[groupcounter]['varnames'].append(ename)
1666:         last_name = ename
1667:     return last_name
1668: 
1669: 
1670: def cracktypespec(typespec, selector):
1671:     kindselect = None
1672:     charselect = None
1673:     typename = None
1674:     if selector:
1675:         if typespec in ['complex', 'integer', 'logical', 'real']:
1676:             kindselect = kindselector.match(selector)
1677:             if not kindselect:
1678:                 outmess(
1679:                     'cracktypespec: no kindselector pattern found for %s\n' % (repr(selector)))
1680:                 return
1681:             kindselect = kindselect.groupdict()
1682:             kindselect['*'] = kindselect['kind2']
1683:             del kindselect['kind2']
1684:             for k in list(kindselect.keys()):
1685:                 if not kindselect[k]:
1686:                     del kindselect[k]
1687:             for k, i in list(kindselect.items()):
1688:                 kindselect[k] = rmbadname1(i)
1689:         elif typespec == 'character':
1690:             charselect = charselector.match(selector)
1691:             if not charselect:
1692:                 outmess(
1693:                     'cracktypespec: no charselector pattern found for %s\n' % (repr(selector)))
1694:                 return
1695:             charselect = charselect.groupdict()
1696:             charselect['*'] = charselect['charlen']
1697:             del charselect['charlen']
1698:             if charselect['lenkind']:
1699:                 lenkind = lenkindpattern.match(
1700:                     markoutercomma(charselect['lenkind']))
1701:                 lenkind = lenkind.groupdict()
1702:                 for lk in ['len', 'kind']:
1703:                     if lenkind[lk + '2']:
1704:                         lenkind[lk] = lenkind[lk + '2']
1705:                     charselect[lk] = lenkind[lk]
1706:                     del lenkind[lk + '2']
1707:             del charselect['lenkind']
1708:             for k in list(charselect.keys()):
1709:                 if not charselect[k]:
1710:                     del charselect[k]
1711:             for k, i in list(charselect.items()):
1712:                 charselect[k] = rmbadname1(i)
1713:         elif typespec == 'type':
1714:             typename = re.match(r'\s*\(\s*(?P<name>\w+)\s*\)', selector, re.I)
1715:             if typename:
1716:                 typename = typename.group('name')
1717:             else:
1718:                 outmess('cracktypespec: no typename found in %s\n' %
1719:                         (repr(typespec + selector)))
1720:         else:
1721:             outmess('cracktypespec: no selector used for %s\n' %
1722:                     (repr(selector)))
1723:     return kindselect, charselect, typename
1724: ######
1725: 
1726: 
1727: def setattrspec(decl, attr, force=0):
1728:     if not decl:
1729:         decl = {}
1730:     if not attr:
1731:         return decl
1732:     if 'attrspec' not in decl:
1733:         decl['attrspec'] = [attr]
1734:         return decl
1735:     if force:
1736:         decl['attrspec'].append(attr)
1737:     if attr in decl['attrspec']:
1738:         return decl
1739:     if attr == 'static' and 'automatic' not in decl['attrspec']:
1740:         decl['attrspec'].append(attr)
1741:     elif attr == 'automatic' and 'static' not in decl['attrspec']:
1742:         decl['attrspec'].append(attr)
1743:     elif attr == 'public' and 'private' not in decl['attrspec']:
1744:         decl['attrspec'].append(attr)
1745:     elif attr == 'private' and 'public' not in decl['attrspec']:
1746:         decl['attrspec'].append(attr)
1747:     else:
1748:         decl['attrspec'].append(attr)
1749:     return decl
1750: 
1751: 
1752: def setkindselector(decl, sel, force=0):
1753:     if not decl:
1754:         decl = {}
1755:     if not sel:
1756:         return decl
1757:     if 'kindselector' not in decl:
1758:         decl['kindselector'] = sel
1759:         return decl
1760:     for k in list(sel.keys()):
1761:         if force or k not in decl['kindselector']:
1762:             decl['kindselector'][k] = sel[k]
1763:     return decl
1764: 
1765: 
1766: def setcharselector(decl, sel, force=0):
1767:     if not decl:
1768:         decl = {}
1769:     if not sel:
1770:         return decl
1771:     if 'charselector' not in decl:
1772:         decl['charselector'] = sel
1773:         return decl
1774:     for k in list(sel.keys()):
1775:         if force or k not in decl['charselector']:
1776:             decl['charselector'][k] = sel[k]
1777:     return decl
1778: 
1779: 
1780: def getblockname(block, unknown='unknown'):
1781:     if 'name' in block:
1782:         return block['name']
1783:     return unknown
1784: 
1785: # post processing
1786: 
1787: 
1788: def setmesstext(block):
1789:     global filepositiontext
1790: 
1791:     try:
1792:         filepositiontext = 'In: %s:%s\n' % (block['from'], block['name'])
1793:     except:
1794:         pass
1795: 
1796: 
1797: def get_usedict(block):
1798:     usedict = {}
1799:     if 'parent_block' in block:
1800:         usedict = get_usedict(block['parent_block'])
1801:     if 'use' in block:
1802:         usedict.update(block['use'])
1803:     return usedict
1804: 
1805: 
1806: def get_useparameters(block, param_map=None):
1807:     global f90modulevars
1808: 
1809:     if param_map is None:
1810:         param_map = {}
1811:     usedict = get_usedict(block)
1812:     if not usedict:
1813:         return param_map
1814:     for usename, mapping in list(usedict.items()):
1815:         usename = usename.lower()
1816:         if usename not in f90modulevars:
1817:             outmess('get_useparameters: no module %s info used by %s\n' %
1818:                     (usename, block.get('name')))
1819:             continue
1820:         mvars = f90modulevars[usename]
1821:         params = get_parameters(mvars)
1822:         if not params:
1823:             continue
1824:         # XXX: apply mapping
1825:         if mapping:
1826:             errmess('get_useparameters: mapping for %s not impl.' % (mapping))
1827:         for k, v in list(params.items()):
1828:             if k in param_map:
1829:                 outmess('get_useparameters: overriding parameter %s with'
1830:                         ' value from module %s' % (repr(k), repr(usename)))
1831:             param_map[k] = v
1832: 
1833:     return param_map
1834: 
1835: 
1836: def postcrack2(block, tab='', param_map=None):
1837:     global f90modulevars
1838: 
1839:     if not f90modulevars:
1840:         return block
1841:     if isinstance(block, list):
1842:         ret = []
1843:         for g in block:
1844:             g = postcrack2(g, tab=tab + '\t', param_map=param_map)
1845:             ret.append(g)
1846:         return ret
1847:     setmesstext(block)
1848:     outmess('%sBlock: %s\n' % (tab, block['name']), 0)
1849: 
1850:     if param_map is None:
1851:         param_map = get_useparameters(block)
1852: 
1853:     if param_map is not None and 'vars' in block:
1854:         vars = block['vars']
1855:         for n in list(vars.keys()):
1856:             var = vars[n]
1857:             if 'kindselector' in var:
1858:                 kind = var['kindselector']
1859:                 if 'kind' in kind:
1860:                     val = kind['kind']
1861:                     if val in param_map:
1862:                         kind['kind'] = param_map[val]
1863:     new_body = []
1864:     for b in block['body']:
1865:         b = postcrack2(b, tab=tab + '\t', param_map=param_map)
1866:         new_body.append(b)
1867:     block['body'] = new_body
1868: 
1869:     return block
1870: 
1871: 
1872: def postcrack(block, args=None, tab=''):
1873:     '''
1874:     TODO:
1875:           function return values
1876:           determine expression types if in argument list
1877:     '''
1878:     global usermodules, onlyfunctions
1879: 
1880:     if isinstance(block, list):
1881:         gret = []
1882:         uret = []
1883:         for g in block:
1884:             setmesstext(g)
1885:             g = postcrack(g, tab=tab + '\t')
1886:             # sort user routines to appear first
1887:             if 'name' in g and '__user__' in g['name']:
1888:                 uret.append(g)
1889:             else:
1890:                 gret.append(g)
1891:         return uret + gret
1892:     setmesstext(block)
1893:     if not isinstance(block, dict) and 'block' not in block:
1894:         raise Exception('postcrack: Expected block dictionary instead of ' +
1895:                         str(block))
1896:     if 'name' in block and not block['name'] == 'unknown_interface':
1897:         outmess('%sBlock: %s\n' % (tab, block['name']), 0)
1898:     block = analyzeargs(block)
1899:     block = analyzecommon(block)
1900:     block['vars'] = analyzevars(block)
1901:     block['sortvars'] = sortvarnames(block['vars'])
1902:     if 'args' in block and block['args']:
1903:         args = block['args']
1904:     block['body'] = analyzebody(block, args, tab=tab)
1905: 
1906:     userisdefined = []
1907:     if 'use' in block:
1908:         useblock = block['use']
1909:         for k in list(useblock.keys()):
1910:             if '__user__' in k:
1911:                 userisdefined.append(k)
1912:     else:
1913:         useblock = {}
1914:     name = ''
1915:     if 'name' in block:
1916:         name = block['name']
1917:     # and not userisdefined: # Build a __user__ module
1918:     if 'externals' in block and block['externals']:
1919:         interfaced = []
1920:         if 'interfaced' in block:
1921:             interfaced = block['interfaced']
1922:         mvars = copy.copy(block['vars'])
1923:         if name:
1924:             mname = name + '__user__routines'
1925:         else:
1926:             mname = 'unknown__user__routines'
1927:         if mname in userisdefined:
1928:             i = 1
1929:             while '%s_%i' % (mname, i) in userisdefined:
1930:                 i = i + 1
1931:             mname = '%s_%i' % (mname, i)
1932:         interface = {'block': 'interface', 'body': [],
1933:                      'vars': {}, 'name': name + '_user_interface'}
1934:         for e in block['externals']:
1935:             if e in interfaced:
1936:                 edef = []
1937:                 j = -1
1938:                 for b in block['body']:
1939:                     j = j + 1
1940:                     if b['block'] == 'interface':
1941:                         i = -1
1942:                         for bb in b['body']:
1943:                             i = i + 1
1944:                             if 'name' in bb and bb['name'] == e:
1945:                                 edef = copy.copy(bb)
1946:                                 del b['body'][i]
1947:                                 break
1948:                         if edef:
1949:                             if not b['body']:
1950:                                 del block['body'][j]
1951:                             del interfaced[interfaced.index(e)]
1952:                             break
1953:                 interface['body'].append(edef)
1954:             else:
1955:                 if e in mvars and not isexternal(mvars[e]):
1956:                     interface['vars'][e] = mvars[e]
1957:         if interface['vars'] or interface['body']:
1958:             block['interfaced'] = interfaced
1959:             mblock = {'block': 'python module', 'body': [
1960:                 interface], 'vars': {}, 'name': mname, 'interfaced': block['externals']}
1961:             useblock[mname] = {}
1962:             usermodules.append(mblock)
1963:     if useblock:
1964:         block['use'] = useblock
1965:     return block
1966: 
1967: 
1968: def sortvarnames(vars):
1969:     indep = []
1970:     dep = []
1971:     for v in list(vars.keys()):
1972:         if 'depend' in vars[v] and vars[v]['depend']:
1973:             dep.append(v)
1974:         else:
1975:             indep.append(v)
1976:     n = len(dep)
1977:     i = 0
1978:     while dep:  # XXX: How to catch dependence cycles correctly?
1979:         v = dep[0]
1980:         fl = 0
1981:         for w in dep[1:]:
1982:             if w in vars[v]['depend']:
1983:                 fl = 1
1984:                 break
1985:         if fl:
1986:             dep = dep[1:] + [v]
1987:             i = i + 1
1988:             if i > n:
1989:                 errmess('sortvarnames: failed to compute dependencies because'
1990:                         ' of cyclic dependencies between '
1991:                         + ', '.join(dep) + '\n')
1992:                 indep = indep + dep
1993:                 break
1994:         else:
1995:             indep.append(v)
1996:             dep = dep[1:]
1997:             n = len(dep)
1998:             i = 0
1999:     return indep
2000: 
2001: 
2002: def analyzecommon(block):
2003:     if not hascommon(block):
2004:         return block
2005:     commonvars = []
2006:     for k in list(block['common'].keys()):
2007:         comvars = []
2008:         for e in block['common'][k]:
2009:             m = re.match(
2010:                 r'\A\s*\b(?P<name>.*?)\b\s*(\((?P<dims>.*?)\)|)\s*\Z', e, re.I)
2011:             if m:
2012:                 dims = []
2013:                 if m.group('dims'):
2014:                     dims = [x.strip()
2015:                             for x in markoutercomma(m.group('dims')).split('@,@')]
2016:                 n = m.group('name').strip()
2017:                 if n in block['vars']:
2018:                     if 'attrspec' in block['vars'][n]:
2019:                         block['vars'][n]['attrspec'].append(
2020:                             'dimension(%s)' % (','.join(dims)))
2021:                     else:
2022:                         block['vars'][n]['attrspec'] = [
2023:                             'dimension(%s)' % (','.join(dims))]
2024:                 else:
2025:                     if dims:
2026:                         block['vars'][n] = {
2027:                             'attrspec': ['dimension(%s)' % (','.join(dims))]}
2028:                     else:
2029:                         block['vars'][n] = {}
2030:                 if n not in commonvars:
2031:                     commonvars.append(n)
2032:             else:
2033:                 n = e
2034:                 errmess(
2035:                     'analyzecommon: failed to extract "<name>[(<dims>)]" from "%s" in common /%s/.\n' % (e, k))
2036:             comvars.append(n)
2037:         block['common'][k] = comvars
2038:     if 'commonvars' not in block:
2039:         block['commonvars'] = commonvars
2040:     else:
2041:         block['commonvars'] = block['commonvars'] + commonvars
2042:     return block
2043: 
2044: 
2045: def analyzebody(block, args, tab=''):
2046:     global usermodules, skipfuncs, onlyfuncs, f90modulevars
2047: 
2048:     setmesstext(block)
2049:     body = []
2050:     for b in block['body']:
2051:         b['parent_block'] = block
2052:         if b['block'] in ['function', 'subroutine']:
2053:             if args is not None and b['name'] not in args:
2054:                 continue
2055:             else:
2056:                 as_ = b['args']
2057:             if b['name'] in skipfuncs:
2058:                 continue
2059:             if onlyfuncs and b['name'] not in onlyfuncs:
2060:                 continue
2061:             b['saved_interface'] = crack2fortrangen(
2062:                 b, '\n' + ' ' * 6, as_interface=True)
2063: 
2064:         else:
2065:             as_ = args
2066:         b = postcrack(b, as_, tab=tab + '\t')
2067:         if b['block'] == 'interface' and not b['body']:
2068:             if 'f2pyenhancements' not in b:
2069:                 continue
2070:         if b['block'].replace(' ', '') == 'pythonmodule':
2071:             usermodules.append(b)
2072:         else:
2073:             if b['block'] == 'module':
2074:                 f90modulevars[b['name']] = b['vars']
2075:             body.append(b)
2076:     return body
2077: 
2078: 
2079: def buildimplicitrules(block):
2080:     setmesstext(block)
2081:     implicitrules = defaultimplicitrules
2082:     attrrules = {}
2083:     if 'implicit' in block:
2084:         if block['implicit'] is None:
2085:             implicitrules = None
2086:             if verbose > 1:
2087:                 outmess(
2088:                     'buildimplicitrules: no implicit rules for routine %s.\n' % repr(block['name']))
2089:         else:
2090:             for k in list(block['implicit'].keys()):
2091:                 if block['implicit'][k].get('typespec') not in ['static', 'automatic']:
2092:                     implicitrules[k] = block['implicit'][k]
2093:                 else:
2094:                     attrrules[k] = block['implicit'][k]['typespec']
2095:     return implicitrules, attrrules
2096: 
2097: 
2098: def myeval(e, g=None, l=None):
2099:     r = eval(e, g, l)
2100:     if type(r) in [type(0), type(0.0)]:
2101:         return r
2102:     raise ValueError('r=%r' % (r))
2103: 
2104: getlincoef_re_1 = re.compile(r'\A\b\w+\b\Z', re.I)
2105: 
2106: 
2107: def getlincoef(e, xset):  # e = a*x+b ; x in xset
2108:     try:
2109:         c = int(myeval(e, {}, {}))
2110:         return 0, c, None
2111:     except:
2112:         pass
2113:     if getlincoef_re_1.match(e):
2114:         return 1, 0, e
2115:     len_e = len(e)
2116:     for x in xset:
2117:         if len(x) > len_e:
2118:             continue
2119:         if re.search(r'\w\s*\([^)]*\b' + x + r'\b', e):
2120:             # skip function calls having x as an argument, e.g max(1, x)
2121:             continue
2122:         re_1 = re.compile(r'(?P<before>.*?)\b' + x + r'\b(?P<after>.*)', re.I)
2123:         m = re_1.match(e)
2124:         if m:
2125:             try:
2126:                 m1 = re_1.match(e)
2127:                 while m1:
2128:                     ee = '%s(%s)%s' % (
2129:                         m1.group('before'), 0, m1.group('after'))
2130:                     m1 = re_1.match(ee)
2131:                 b = myeval(ee, {}, {})
2132:                 m1 = re_1.match(e)
2133:                 while m1:
2134:                     ee = '%s(%s)%s' % (
2135:                         m1.group('before'), 1, m1.group('after'))
2136:                     m1 = re_1.match(ee)
2137:                 a = myeval(ee, {}, {}) - b
2138:                 m1 = re_1.match(e)
2139:                 while m1:
2140:                     ee = '%s(%s)%s' % (
2141:                         m1.group('before'), 0.5, m1.group('after'))
2142:                     m1 = re_1.match(ee)
2143:                 c = myeval(ee, {}, {})
2144:                 # computing another point to be sure that expression is linear
2145:                 m1 = re_1.match(e)
2146:                 while m1:
2147:                     ee = '%s(%s)%s' % (
2148:                         m1.group('before'), 1.5, m1.group('after'))
2149:                     m1 = re_1.match(ee)
2150:                 c2 = myeval(ee, {}, {})
2151:                 if (a * 0.5 + b == c and a * 1.5 + b == c2):
2152:                     return a, b, x
2153:             except:
2154:                 pass
2155:             break
2156:     return None, None, None
2157: 
2158: _varname_match = re.compile(r'\A[a-z]\w*\Z').match
2159: 
2160: 
2161: def getarrlen(dl, args, star='*'):
2162:     edl = []
2163:     try:
2164:         edl.append(myeval(dl[0], {}, {}))
2165:     except:
2166:         edl.append(dl[0])
2167:     try:
2168:         edl.append(myeval(dl[1], {}, {}))
2169:     except:
2170:         edl.append(dl[1])
2171:     if isinstance(edl[0], int):
2172:         p1 = 1 - edl[0]
2173:         if p1 == 0:
2174:             d = str(dl[1])
2175:         elif p1 < 0:
2176:             d = '%s-%s' % (dl[1], -p1)
2177:         else:
2178:             d = '%s+%s' % (dl[1], p1)
2179:     elif isinstance(edl[1], int):
2180:         p1 = 1 + edl[1]
2181:         if p1 == 0:
2182:             d = '-(%s)' % (dl[0])
2183:         else:
2184:             d = '%s-(%s)' % (p1, dl[0])
2185:     else:
2186:         d = '%s-(%s)+1' % (dl[1], dl[0])
2187:     try:
2188:         return repr(myeval(d, {}, {})), None, None
2189:     except:
2190:         pass
2191:     d1, d2 = getlincoef(dl[0], args), getlincoef(dl[1], args)
2192:     if None not in [d1[0], d2[0]]:
2193:         if (d1[0], d2[0]) == (0, 0):
2194:             return repr(d2[1] - d1[1] + 1), None, None
2195:         b = d2[1] - d1[1] + 1
2196:         d1 = (d1[0], 0, d1[2])
2197:         d2 = (d2[0], b, d2[2])
2198:         if d1[0] == 0 and d2[2] in args:
2199:             if b < 0:
2200:                 return '%s * %s - %s' % (d2[0], d2[2], -b), d2[2], '+%s)/(%s)' % (-b, d2[0])
2201:             elif b:
2202:                 return '%s * %s + %s' % (d2[0], d2[2], b), d2[2], '-%s)/(%s)' % (b, d2[0])
2203:             else:
2204:                 return '%s * %s' % (d2[0], d2[2]), d2[2], ')/(%s)' % (d2[0])
2205:         if d2[0] == 0 and d1[2] in args:
2206: 
2207:             if b < 0:
2208:                 return '%s * %s - %s' % (-d1[0], d1[2], -b), d1[2], '+%s)/(%s)' % (-b, -d1[0])
2209:             elif b:
2210:                 return '%s * %s + %s' % (-d1[0], d1[2], b), d1[2], '-%s)/(%s)' % (b, -d1[0])
2211:             else:
2212:                 return '%s * %s' % (-d1[0], d1[2]), d1[2], ')/(%s)' % (-d1[0])
2213:         if d1[2] == d2[2] and d1[2] in args:
2214:             a = d2[0] - d1[0]
2215:             if not a:
2216:                 return repr(b), None, None
2217:             if b < 0:
2218:                 return '%s * %s - %s' % (a, d1[2], -b), d2[2], '+%s)/(%s)' % (-b, a)
2219:             elif b:
2220:                 return '%s * %s + %s' % (a, d1[2], b), d2[2], '-%s)/(%s)' % (b, a)
2221:             else:
2222:                 return '%s * %s' % (a, d1[2]), d2[2], ')/(%s)' % (a)
2223:         if d1[0] == d2[0] == 1:
2224:             c = str(d1[2])
2225:             if c not in args:
2226:                 if _varname_match(c):
2227:                     outmess('\tgetarrlen:variable "%s" undefined\n' % (c))
2228:                 c = '(%s)' % c
2229:             if b == 0:
2230:                 d = '%s-%s' % (d2[2], c)
2231:             elif b < 0:
2232:                 d = '%s-%s-%s' % (d2[2], c, -b)
2233:             else:
2234:                 d = '%s-%s+%s' % (d2[2], c, b)
2235:         elif d1[0] == 0:
2236:             c2 = str(d2[2])
2237:             if c2 not in args:
2238:                 if _varname_match(c2):
2239:                     outmess('\tgetarrlen:variable "%s" undefined\n' % (c2))
2240:                 c2 = '(%s)' % c2
2241:             if d2[0] == 1:
2242:                 pass
2243:             elif d2[0] == -1:
2244:                 c2 = '-%s' % c2
2245:             else:
2246:                 c2 = '%s*%s' % (d2[0], c2)
2247: 
2248:             if b == 0:
2249:                 d = c2
2250:             elif b < 0:
2251:                 d = '%s-%s' % (c2, -b)
2252:             else:
2253:                 d = '%s+%s' % (c2, b)
2254:         elif d2[0] == 0:
2255:             c1 = str(d1[2])
2256:             if c1 not in args:
2257:                 if _varname_match(c1):
2258:                     outmess('\tgetarrlen:variable "%s" undefined\n' % (c1))
2259:                 c1 = '(%s)' % c1
2260:             if d1[0] == 1:
2261:                 c1 = '-%s' % c1
2262:             elif d1[0] == -1:
2263:                 c1 = '+%s' % c1
2264:             elif d1[0] < 0:
2265:                 c1 = '+%s*%s' % (-d1[0], c1)
2266:             else:
2267:                 c1 = '-%s*%s' % (d1[0], c1)
2268: 
2269:             if b == 0:
2270:                 d = c1
2271:             elif b < 0:
2272:                 d = '%s-%s' % (c1, -b)
2273:             else:
2274:                 d = '%s+%s' % (c1, b)
2275:         else:
2276:             c1 = str(d1[2])
2277:             if c1 not in args:
2278:                 if _varname_match(c1):
2279:                     outmess('\tgetarrlen:variable "%s" undefined\n' % (c1))
2280:                 c1 = '(%s)' % c1
2281:             if d1[0] == 1:
2282:                 c1 = '-%s' % c1
2283:             elif d1[0] == -1:
2284:                 c1 = '+%s' % c1
2285:             elif d1[0] < 0:
2286:                 c1 = '+%s*%s' % (-d1[0], c1)
2287:             else:
2288:                 c1 = '-%s*%s' % (d1[0], c1)
2289: 
2290:             c2 = str(d2[2])
2291:             if c2 not in args:
2292:                 if _varname_match(c2):
2293:                     outmess('\tgetarrlen:variable "%s" undefined\n' % (c2))
2294:                 c2 = '(%s)' % c2
2295:             if d2[0] == 1:
2296:                 pass
2297:             elif d2[0] == -1:
2298:                 c2 = '-%s' % c2
2299:             else:
2300:                 c2 = '%s*%s' % (d2[0], c2)
2301: 
2302:             if b == 0:
2303:                 d = '%s%s' % (c2, c1)
2304:             elif b < 0:
2305:                 d = '%s%s-%s' % (c2, c1, -b)
2306:             else:
2307:                 d = '%s%s+%s' % (c2, c1, b)
2308:     return d, None, None
2309: 
2310: word_pattern = re.compile(r'\b[a-z][\w$]*\b', re.I)
2311: 
2312: 
2313: def _get_depend_dict(name, vars, deps):
2314:     if name in vars:
2315:         words = vars[name].get('depend', [])
2316: 
2317:         if '=' in vars[name] and not isstring(vars[name]):
2318:             for word in word_pattern.findall(vars[name]['=']):
2319:                 if word not in words and word in vars:
2320:                     words.append(word)
2321:         for word in words[:]:
2322:             for w in deps.get(word, []) \
2323:                     or _get_depend_dict(word, vars, deps):
2324:                 if w not in words:
2325:                     words.append(w)
2326:     else:
2327:         outmess('_get_depend_dict: no dependence info for %s\n' % (repr(name)))
2328:         words = []
2329:     deps[name] = words
2330:     return words
2331: 
2332: 
2333: def _calc_depend_dict(vars):
2334:     names = list(vars.keys())
2335:     depend_dict = {}
2336:     for n in names:
2337:         _get_depend_dict(n, vars, depend_dict)
2338:     return depend_dict
2339: 
2340: 
2341: def get_sorted_names(vars):
2342:     '''
2343:     '''
2344:     depend_dict = _calc_depend_dict(vars)
2345:     names = []
2346:     for name in list(depend_dict.keys()):
2347:         if not depend_dict[name]:
2348:             names.append(name)
2349:             del depend_dict[name]
2350:     while depend_dict:
2351:         for name, lst in list(depend_dict.items()):
2352:             new_lst = [n for n in lst if n in depend_dict]
2353:             if not new_lst:
2354:                 names.append(name)
2355:                 del depend_dict[name]
2356:             else:
2357:                 depend_dict[name] = new_lst
2358:     return [name for name in names if name in vars]
2359: 
2360: 
2361: def _kind_func(string):
2362:     # XXX: return something sensible.
2363:     if string[0] in "'\"":
2364:         string = string[1:-1]
2365:     if real16pattern.match(string):
2366:         return 8
2367:     elif real8pattern.match(string):
2368:         return 4
2369:     return 'kind(' + string + ')'
2370: 
2371: 
2372: def _selected_int_kind_func(r):
2373:     # XXX: This should be processor dependent
2374:     m = 10 ** r
2375:     if m <= 2 ** 8:
2376:         return 1
2377:     if m <= 2 ** 16:
2378:         return 2
2379:     if m <= 2 ** 32:
2380:         return 4
2381:     if m <= 2 ** 63:
2382:         return 8
2383:     if m <= 2 ** 128:
2384:         return 16
2385:     return -1
2386: 
2387: 
2388: def _selected_real_kind_func(p, r=0, radix=0):
2389:     # XXX: This should be processor dependent
2390:     # This is only good for 0 <= p <= 20
2391:     if p < 7:
2392:         return 4
2393:     if p < 16:
2394:         return 8
2395:     if platform.machine().lower().startswith('power'):
2396:         if p <= 20:
2397:             return 16
2398:     else:
2399:         if p < 19:
2400:             return 10
2401:         elif p <= 20:
2402:             return 16
2403:     return -1
2404: 
2405: 
2406: def get_parameters(vars, global_params={}):
2407:     params = copy.copy(global_params)
2408:     g_params = copy.copy(global_params)
2409:     for name, func in [('kind', _kind_func),
2410:                        ('selected_int_kind', _selected_int_kind_func),
2411:                        ('selected_real_kind', _selected_real_kind_func), ]:
2412:         if name not in g_params:
2413:             g_params[name] = func
2414:     param_names = []
2415:     for n in get_sorted_names(vars):
2416:         if 'attrspec' in vars[n] and 'parameter' in vars[n]['attrspec']:
2417:             param_names.append(n)
2418:     kind_re = re.compile(r'\bkind\s*\(\s*(?P<value>.*)\s*\)', re.I)
2419:     selected_int_kind_re = re.compile(
2420:         r'\bselected_int_kind\s*\(\s*(?P<value>.*)\s*\)', re.I)
2421:     selected_kind_re = re.compile(
2422:         r'\bselected_(int|real)_kind\s*\(\s*(?P<value>.*)\s*\)', re.I)
2423:     for n in param_names:
2424:         if '=' in vars[n]:
2425:             v = vars[n]['=']
2426:             if islogical(vars[n]):
2427:                 v = v.lower()
2428:                 for repl in [
2429:                     ('.false.', 'False'),
2430:                     ('.true.', 'True'),
2431:                     # TODO: test .eq., .neq., etc replacements.
2432:                 ]:
2433:                     v = v.replace(*repl)
2434:             v = kind_re.sub(r'kind("\1")', v)
2435:             v = selected_int_kind_re.sub(r'selected_int_kind(\1)', v)
2436:             if isinteger(vars[n]) and not selected_kind_re.match(v):
2437:                 v = v.split('_')[0]
2438:             if isdouble(vars[n]):
2439:                 tt = list(v)
2440:                 for m in real16pattern.finditer(v):
2441:                     tt[m.start():m.end()] = list(
2442:                         v[m.start():m.end()].lower().replace('d', 'e'))
2443:                 v = ''.join(tt)
2444:             if iscomplex(vars[n]):
2445:                 if v[0] == '(' and v[-1] == ')':
2446:                     # FIXME, unused l looks like potential bug
2447:                     l = markoutercomma(v[1:-1]).split('@,@')
2448:             try:
2449:                 params[n] = eval(v, g_params, params)
2450:             except Exception as msg:
2451:                 params[n] = v
2452:                 outmess('get_parameters: got "%s" on %s\n' % (msg, repr(v)))
2453:             if isstring(vars[n]) and isinstance(params[n], int):
2454:                 params[n] = chr(params[n])
2455:             nl = n.lower()
2456:             if nl != n:
2457:                 params[nl] = params[n]
2458:         else:
2459:             print(vars[n])
2460:             outmess(
2461:                 'get_parameters:parameter %s does not have value?!\n' % (repr(n)))
2462:     return params
2463: 
2464: 
2465: def _eval_length(length, params):
2466:     if length in ['(:)', '(*)', '*']:
2467:         return '(*)'
2468:     return _eval_scalar(length, params)
2469: 
2470: _is_kind_number = re.compile(r'\d+_').match
2471: 
2472: 
2473: def _eval_scalar(value, params):
2474:     if _is_kind_number(value):
2475:         value = value.split('_')[0]
2476:     try:
2477:         value = str(eval(value, {}, params))
2478:     except (NameError, SyntaxError):
2479:         return value
2480:     except Exception as msg:
2481:         errmess('"%s" in evaluating %r '
2482:                 '(available names: %s)\n'
2483:                 % (msg, value, list(params.keys())))
2484:     return value
2485: 
2486: 
2487: def analyzevars(block):
2488:     global f90modulevars
2489: 
2490:     setmesstext(block)
2491:     implicitrules, attrrules = buildimplicitrules(block)
2492:     vars = copy.copy(block['vars'])
2493:     if block['block'] == 'function' and block['name'] not in vars:
2494:         vars[block['name']] = {}
2495:     if '' in block['vars']:
2496:         del vars['']
2497:         if 'attrspec' in block['vars']['']:
2498:             gen = block['vars']['']['attrspec']
2499:             for n in list(vars.keys()):
2500:                 for k in ['public', 'private']:
2501:                     if k in gen:
2502:                         vars[n] = setattrspec(vars[n], k)
2503:     svars = []
2504:     args = block['args']
2505:     for a in args:
2506:         try:
2507:             vars[a]
2508:             svars.append(a)
2509:         except KeyError:
2510:             pass
2511:     for n in list(vars.keys()):
2512:         if n not in args:
2513:             svars.append(n)
2514: 
2515:     params = get_parameters(vars, get_useparameters(block))
2516: 
2517:     dep_matches = {}
2518:     name_match = re.compile(r'\w[\w\d_$]*').match
2519:     for v in list(vars.keys()):
2520:         m = name_match(v)
2521:         if m:
2522:             n = v[m.start():m.end()]
2523:             try:
2524:                 dep_matches[n]
2525:             except KeyError:
2526:                 dep_matches[n] = re.compile(r'.*\b%s\b' % (v), re.I).match
2527:     for n in svars:
2528:         if n[0] in list(attrrules.keys()):
2529:             vars[n] = setattrspec(vars[n], attrrules[n[0]])
2530:         if 'typespec' not in vars[n]:
2531:             if not('attrspec' in vars[n] and 'external' in vars[n]['attrspec']):
2532:                 if implicitrules:
2533:                     ln0 = n[0].lower()
2534:                     for k in list(implicitrules[ln0].keys()):
2535:                         if k == 'typespec' and implicitrules[ln0][k] == 'undefined':
2536:                             continue
2537:                         if k not in vars[n]:
2538:                             vars[n][k] = implicitrules[ln0][k]
2539:                         elif k == 'attrspec':
2540:                             for l in implicitrules[ln0][k]:
2541:                                 vars[n] = setattrspec(vars[n], l)
2542:                 elif n in block['args']:
2543:                     outmess('analyzevars: typespec of variable %s is not defined in routine %s.\n' % (
2544:                         repr(n), block['name']))
2545: 
2546:         if 'charselector' in vars[n]:
2547:             if 'len' in vars[n]['charselector']:
2548:                 l = vars[n]['charselector']['len']
2549:                 try:
2550:                     l = str(eval(l, {}, params))
2551:                 except:
2552:                     pass
2553:                 vars[n]['charselector']['len'] = l
2554: 
2555:         if 'kindselector' in vars[n]:
2556:             if 'kind' in vars[n]['kindselector']:
2557:                 l = vars[n]['kindselector']['kind']
2558:                 try:
2559:                     l = str(eval(l, {}, params))
2560:                 except:
2561:                     pass
2562:                 vars[n]['kindselector']['kind'] = l
2563: 
2564:         savelindims = {}
2565:         if 'attrspec' in vars[n]:
2566:             attr = vars[n]['attrspec']
2567:             attr.reverse()
2568:             vars[n]['attrspec'] = []
2569:             dim, intent, depend, check, note = None, None, None, None, None
2570:             for a in attr:
2571:                 if a[:9] == 'dimension':
2572:                     dim = (a[9:].strip())[1:-1]
2573:                 elif a[:6] == 'intent':
2574:                     intent = (a[6:].strip())[1:-1]
2575:                 elif a[:6] == 'depend':
2576:                     depend = (a[6:].strip())[1:-1]
2577:                 elif a[:5] == 'check':
2578:                     check = (a[5:].strip())[1:-1]
2579:                 elif a[:4] == 'note':
2580:                     note = (a[4:].strip())[1:-1]
2581:                 else:
2582:                     vars[n] = setattrspec(vars[n], a)
2583:                 if intent:
2584:                     if 'intent' not in vars[n]:
2585:                         vars[n]['intent'] = []
2586:                     for c in [x.strip() for x in markoutercomma(intent).split('@,@')]:
2587:                         # Remove spaces so that 'in out' becomes 'inout'
2588:                         tmp = c.replace(' ', '')
2589:                         if tmp not in vars[n]['intent']:
2590:                             vars[n]['intent'].append(tmp)
2591:                     intent = None
2592:                 if note:
2593:                     note = note.replace('\\n\\n', '\n\n')
2594:                     note = note.replace('\\n ', '\n')
2595:                     if 'note' not in vars[n]:
2596:                         vars[n]['note'] = [note]
2597:                     else:
2598:                         vars[n]['note'].append(note)
2599:                     note = None
2600:                 if depend is not None:
2601:                     if 'depend' not in vars[n]:
2602:                         vars[n]['depend'] = []
2603:                     for c in rmbadname([x.strip() for x in markoutercomma(depend).split('@,@')]):
2604:                         if c not in vars[n]['depend']:
2605:                             vars[n]['depend'].append(c)
2606:                     depend = None
2607:                 if check is not None:
2608:                     if 'check' not in vars[n]:
2609:                         vars[n]['check'] = []
2610:                     for c in [x.strip() for x in markoutercomma(check).split('@,@')]:
2611:                         if c not in vars[n]['check']:
2612:                             vars[n]['check'].append(c)
2613:                     check = None
2614:             if dim and 'dimension' not in vars[n]:
2615:                 vars[n]['dimension'] = []
2616:                 for d in rmbadname([x.strip() for x in markoutercomma(dim).split('@,@')]):
2617:                     star = '*'
2618:                     if d == ':':
2619:                         star = ':'
2620:                     if d in params:
2621:                         d = str(params[d])
2622:                     for p in list(params.keys()):
2623:                         re_1 = re.compile(r'(?P<before>.*?)\b' + p + r'\b(?P<after>.*)', re.I)
2624:                         m = re_1.match(d)
2625:                         while m:
2626:                             d = m.group('before') + \
2627:                                 str(params[p]) + m.group('after')
2628:                             m = re_1.match(d)
2629:                     if d == star:
2630:                         dl = [star]
2631:                     else:
2632:                         dl = markoutercomma(d, ':').split('@:@')
2633:                     if len(dl) == 2 and '*' in dl:  # e.g. dimension(5:*)
2634:                         dl = ['*']
2635:                         d = '*'
2636:                     if len(dl) == 1 and not dl[0] == star:
2637:                         dl = ['1', dl[0]]
2638:                     if len(dl) == 2:
2639:                         d, v, di = getarrlen(dl, list(block['vars'].keys()))
2640:                         if d[:4] == '1 * ':
2641:                             d = d[4:]
2642:                         if di and di[-4:] == '/(1)':
2643:                             di = di[:-4]
2644:                         if v:
2645:                             savelindims[d] = v, di
2646:                     vars[n]['dimension'].append(d)
2647:         if 'dimension' in vars[n]:
2648:             if isintent_c(vars[n]):
2649:                 shape_macro = 'shape'
2650:             else:
2651:                 shape_macro = 'shape'  # 'fshape'
2652:             if isstringarray(vars[n]):
2653:                 if 'charselector' in vars[n]:
2654:                     d = vars[n]['charselector']
2655:                     if '*' in d:
2656:                         d = d['*']
2657:                         errmess('analyzevars: character array "character*%s %s(%s)" is considered as "character %s(%s)"; "intent(c)" is forced.\n'
2658:                                 % (d, n,
2659:                                    ','.join(vars[n]['dimension']),
2660:                                    n, ','.join(vars[n]['dimension'] + [d])))
2661:                         vars[n]['dimension'].append(d)
2662:                         del vars[n]['charselector']
2663:                         if 'intent' not in vars[n]:
2664:                             vars[n]['intent'] = []
2665:                         if 'c' not in vars[n]['intent']:
2666:                             vars[n]['intent'].append('c')
2667:                     else:
2668:                         errmess(
2669:                             "analyzevars: charselector=%r unhandled." % (d))
2670:         if 'check' not in vars[n] and 'args' in block and n in block['args']:
2671:             flag = 'depend' not in vars[n]
2672:             if flag:
2673:                 vars[n]['depend'] = []
2674:             vars[n]['check'] = []
2675:             if 'dimension' in vars[n]:
2676:                 #/----< no check
2677:                 i = -1
2678:                 ni = len(vars[n]['dimension'])
2679:                 for d in vars[n]['dimension']:
2680:                     ddeps = []  # dependecies of 'd'
2681:                     ad = ''
2682:                     pd = ''
2683:                     if d not in vars:
2684:                         if d in savelindims:
2685:                             pd, ad = '(', savelindims[d][1]
2686:                             d = savelindims[d][0]
2687:                         else:
2688:                             for r in block['args']:
2689:                                 if r not in vars:
2690:                                     continue
2691:                                 if re.match(r'.*?\b' + r + r'\b', d, re.I):
2692:                                     ddeps.append(r)
2693:                     if d in vars:
2694:                         if 'attrspec' in vars[d]:
2695:                             for aa in vars[d]['attrspec']:
2696:                                 if aa[:6] == 'depend':
2697:                                     ddeps += aa[6:].strip()[1:-1].split(',')
2698:                         if 'depend' in vars[d]:
2699:                             ddeps = ddeps + vars[d]['depend']
2700:                     i = i + 1
2701:                     if d in vars and ('depend' not in vars[d]) \
2702:                        and ('=' not in vars[d]) and (d not in vars[n]['depend']) \
2703:                        and l_or(isintent_in, isintent_inout, isintent_inplace)(vars[n]):
2704:                         vars[d]['depend'] = [n]
2705:                         if ni > 1:
2706:                             vars[d]['='] = '%s%s(%s,%s)%s' % (
2707:                                 pd, shape_macro, n, i, ad)
2708:                         else:
2709:                             vars[d]['='] = '%slen(%s)%s' % (pd, n, ad)
2710:                         #  /---< no check
2711:                         if 1 and 'check' not in vars[d]:
2712:                             if ni > 1:
2713:                                 vars[d]['check'] = ['%s%s(%s,%i)%s==%s'
2714:                                                     % (pd, shape_macro, n, i, ad, d)]
2715:                             else:
2716:                                 vars[d]['check'] = [
2717:                                     '%slen(%s)%s>=%s' % (pd, n, ad, d)]
2718:                         if 'attrspec' not in vars[d]:
2719:                             vars[d]['attrspec'] = ['optional']
2720:                         if ('optional' not in vars[d]['attrspec']) and\
2721:                            ('required' not in vars[d]['attrspec']):
2722:                             vars[d]['attrspec'].append('optional')
2723:                     elif d not in ['*', ':']:
2724:                         #/----< no check
2725:                         if flag:
2726:                             if d in vars:
2727:                                 if n not in ddeps:
2728:                                     vars[n]['depend'].append(d)
2729:                             else:
2730:                                 vars[n]['depend'] = vars[n]['depend'] + ddeps
2731:             elif isstring(vars[n]):
2732:                 length = '1'
2733:                 if 'charselector' in vars[n]:
2734:                     if '*' in vars[n]['charselector']:
2735:                         length = _eval_length(vars[n]['charselector']['*'],
2736:                                               params)
2737:                         vars[n]['charselector']['*'] = length
2738:                     elif 'len' in vars[n]['charselector']:
2739:                         length = _eval_length(vars[n]['charselector']['len'],
2740:                                               params)
2741:                         del vars[n]['charselector']['len']
2742:                         vars[n]['charselector']['*'] = length
2743: 
2744:             if not vars[n]['check']:
2745:                 del vars[n]['check']
2746:             if flag and not vars[n]['depend']:
2747:                 del vars[n]['depend']
2748:         if '=' in vars[n]:
2749:             if 'attrspec' not in vars[n]:
2750:                 vars[n]['attrspec'] = []
2751:             if ('optional' not in vars[n]['attrspec']) and \
2752:                ('required' not in vars[n]['attrspec']):
2753:                 vars[n]['attrspec'].append('optional')
2754:             if 'depend' not in vars[n]:
2755:                 vars[n]['depend'] = []
2756:                 for v, m in list(dep_matches.items()):
2757:                     if m(vars[n]['=']):
2758:                         vars[n]['depend'].append(v)
2759:                 if not vars[n]['depend']:
2760:                     del vars[n]['depend']
2761:             if isscalar(vars[n]):
2762:                 vars[n]['='] = _eval_scalar(vars[n]['='], params)
2763: 
2764:     for n in list(vars.keys()):
2765:         if n == block['name']:  # n is block name
2766:             if 'note' in vars[n]:
2767:                 block['note'] = vars[n]['note']
2768:             if block['block'] == 'function':
2769:                 if 'result' in block and block['result'] in vars:
2770:                     vars[n] = appenddecl(vars[n], vars[block['result']])
2771:                 if 'prefix' in block:
2772:                     pr = block['prefix']
2773:                     ispure = 0
2774:                     isrec = 1
2775:                     pr1 = pr.replace('pure', '')
2776:                     ispure = (not pr == pr1)
2777:                     pr = pr1.replace('recursive', '')
2778:                     isrec = (not pr == pr1)
2779:                     m = typespattern[0].match(pr)
2780:                     if m:
2781:                         typespec, selector, attr, edecl = cracktypespec0(
2782:                             m.group('this'), m.group('after'))
2783:                         kindselect, charselect, typename = cracktypespec(
2784:                             typespec, selector)
2785:                         vars[n]['typespec'] = typespec
2786:                         if kindselect:
2787:                             if 'kind' in kindselect:
2788:                                 try:
2789:                                     kindselect['kind'] = eval(
2790:                                         kindselect['kind'], {}, params)
2791:                                 except:
2792:                                     pass
2793:                             vars[n]['kindselector'] = kindselect
2794:                         if charselect:
2795:                             vars[n]['charselector'] = charselect
2796:                         if typename:
2797:                             vars[n]['typename'] = typename
2798:                         if ispure:
2799:                             vars[n] = setattrspec(vars[n], 'pure')
2800:                         if isrec:
2801:                             vars[n] = setattrspec(vars[n], 'recursive')
2802:                     else:
2803:                         outmess(
2804:                             'analyzevars: prefix (%s) were not used\n' % repr(block['prefix']))
2805:     if not block['block'] in ['module', 'pythonmodule', 'python module', 'block data']:
2806:         if 'commonvars' in block:
2807:             neededvars = copy.copy(block['args'] + block['commonvars'])
2808:         else:
2809:             neededvars = copy.copy(block['args'])
2810:         for n in list(vars.keys()):
2811:             if l_or(isintent_callback, isintent_aux)(vars[n]):
2812:                 neededvars.append(n)
2813:         if 'entry' in block:
2814:             neededvars.extend(list(block['entry'].keys()))
2815:             for k in list(block['entry'].keys()):
2816:                 for n in block['entry'][k]:
2817:                     if n not in neededvars:
2818:                         neededvars.append(n)
2819:         if block['block'] == 'function':
2820:             if 'result' in block:
2821:                 neededvars.append(block['result'])
2822:             else:
2823:                 neededvars.append(block['name'])
2824:         if block['block'] in ['subroutine', 'function']:
2825:             name = block['name']
2826:             if name in vars and 'intent' in vars[name]:
2827:                 block['intent'] = vars[name]['intent']
2828:         if block['block'] == 'type':
2829:             neededvars.extend(list(vars.keys()))
2830:         for n in list(vars.keys()):
2831:             if n not in neededvars:
2832:                 del vars[n]
2833:     return vars
2834: 
2835: analyzeargs_re_1 = re.compile(r'\A[a-z]+[\w$]*\Z', re.I)
2836: 
2837: 
2838: def expr2name(a, block, args=[]):
2839:     orig_a = a
2840:     a_is_expr = not analyzeargs_re_1.match(a)
2841:     if a_is_expr:  # `a` is an expression
2842:         implicitrules, attrrules = buildimplicitrules(block)
2843:         at = determineexprtype(a, block['vars'], implicitrules)
2844:         na = 'e_'
2845:         for c in a:
2846:             c = c.lower()
2847:             if c not in string.ascii_lowercase + string.digits:
2848:                 c = '_'
2849:             na = na + c
2850:         if na[-1] == '_':
2851:             na = na + 'e'
2852:         else:
2853:             na = na + '_e'
2854:         a = na
2855:         while a in block['vars'] or a in block['args']:
2856:             a = a + 'r'
2857:     if a in args:
2858:         k = 1
2859:         while a + str(k) in args:
2860:             k = k + 1
2861:         a = a + str(k)
2862:     if a_is_expr:
2863:         block['vars'][a] = at
2864:     else:
2865:         if a not in block['vars']:
2866:             if orig_a in block['vars']:
2867:                 block['vars'][a] = block['vars'][orig_a]
2868:             else:
2869:                 block['vars'][a] = {}
2870:         if 'externals' in block and orig_a in block['externals'] + block['interfaced']:
2871:             block['vars'][a] = setattrspec(block['vars'][a], 'external')
2872:     return a
2873: 
2874: 
2875: def analyzeargs(block):
2876:     setmesstext(block)
2877:     implicitrules, attrrules = buildimplicitrules(block)
2878:     if 'args' not in block:
2879:         block['args'] = []
2880:     args = []
2881:     for a in block['args']:
2882:         a = expr2name(a, block, args)
2883:         args.append(a)
2884:     block['args'] = args
2885:     if 'entry' in block:
2886:         for k, args1 in list(block['entry'].items()):
2887:             for a in args1:
2888:                 if a not in block['vars']:
2889:                     block['vars'][a] = {}
2890: 
2891:     for b in block['body']:
2892:         if b['name'] in args:
2893:             if 'externals' not in block:
2894:                 block['externals'] = []
2895:             if b['name'] not in block['externals']:
2896:                 block['externals'].append(b['name'])
2897:     if 'result' in block and block['result'] not in block['vars']:
2898:         block['vars'][block['result']] = {}
2899:     return block
2900: 
2901: determineexprtype_re_1 = re.compile(r'\A\(.+?[,].+?\)\Z', re.I)
2902: determineexprtype_re_2 = re.compile(r'\A[+-]?\d+(_(P<name>[\w]+)|)\Z', re.I)
2903: determineexprtype_re_3 = re.compile(
2904:     r'\A[+-]?[\d.]+[\d+-de.]*(_(P<name>[\w]+)|)\Z', re.I)
2905: determineexprtype_re_4 = re.compile(r'\A\(.*\)\Z', re.I)
2906: determineexprtype_re_5 = re.compile(r'\A(?P<name>\w+)\s*\(.*?\)\s*\Z', re.I)
2907: 
2908: 
2909: def _ensure_exprdict(r):
2910:     if isinstance(r, int):
2911:         return {'typespec': 'integer'}
2912:     if isinstance(r, float):
2913:         return {'typespec': 'real'}
2914:     if isinstance(r, complex):
2915:         return {'typespec': 'complex'}
2916:     if isinstance(r, dict):
2917:         return r
2918:     raise AssertionError(repr(r))
2919: 
2920: 
2921: def determineexprtype(expr, vars, rules={}):
2922:     if expr in vars:
2923:         return _ensure_exprdict(vars[expr])
2924:     expr = expr.strip()
2925:     if determineexprtype_re_1.match(expr):
2926:         return {'typespec': 'complex'}
2927:     m = determineexprtype_re_2.match(expr)
2928:     if m:
2929:         if 'name' in m.groupdict() and m.group('name'):
2930:             outmess(
2931:                 'determineexprtype: selected kind types not supported (%s)\n' % repr(expr))
2932:         return {'typespec': 'integer'}
2933:     m = determineexprtype_re_3.match(expr)
2934:     if m:
2935:         if 'name' in m.groupdict() and m.group('name'):
2936:             outmess(
2937:                 'determineexprtype: selected kind types not supported (%s)\n' % repr(expr))
2938:         return {'typespec': 'real'}
2939:     for op in ['+', '-', '*', '/']:
2940:         for e in [x.strip() for x in markoutercomma(expr, comma=op).split('@' + op + '@')]:
2941:             if e in vars:
2942:                 return _ensure_exprdict(vars[e])
2943:     t = {}
2944:     if determineexprtype_re_4.match(expr):  # in parenthesis
2945:         t = determineexprtype(expr[1:-1], vars, rules)
2946:     else:
2947:         m = determineexprtype_re_5.match(expr)
2948:         if m:
2949:             rn = m.group('name')
2950:             t = determineexprtype(m.group('name'), vars, rules)
2951:             if t and 'attrspec' in t:
2952:                 del t['attrspec']
2953:             if not t:
2954:                 if rn[0] in rules:
2955:                     return _ensure_exprdict(rules[rn[0]])
2956:     if expr[0] in '\'"':
2957:         return {'typespec': 'character', 'charselector': {'*': '*'}}
2958:     if not t:
2959:         outmess(
2960:             'determineexprtype: could not determine expressions (%s) type.\n' % (repr(expr)))
2961:     return t
2962: 
2963: ######
2964: 
2965: 
2966: def crack2fortrangen(block, tab='\n', as_interface=False):
2967:     global skipfuncs, onlyfuncs
2968: 
2969:     setmesstext(block)
2970:     ret = ''
2971:     if isinstance(block, list):
2972:         for g in block:
2973:             if g and g['block'] in ['function', 'subroutine']:
2974:                 if g['name'] in skipfuncs:
2975:                     continue
2976:                 if onlyfuncs and g['name'] not in onlyfuncs:
2977:                     continue
2978:             ret = ret + crack2fortrangen(g, tab, as_interface=as_interface)
2979:         return ret
2980:     prefix = ''
2981:     name = ''
2982:     args = ''
2983:     blocktype = block['block']
2984:     if blocktype == 'program':
2985:         return ''
2986:     argsl = []
2987:     if 'name' in block:
2988:         name = block['name']
2989:     if 'args' in block:
2990:         vars = block['vars']
2991:         for a in block['args']:
2992:             a = expr2name(a, block, argsl)
2993:             if not isintent_callback(vars[a]):
2994:                 argsl.append(a)
2995:         if block['block'] == 'function' or argsl:
2996:             args = '(%s)' % ','.join(argsl)
2997:     f2pyenhancements = ''
2998:     if 'f2pyenhancements' in block:
2999:         for k in list(block['f2pyenhancements'].keys()):
3000:             f2pyenhancements = '%s%s%s %s' % (
3001:                 f2pyenhancements, tab + tabchar, k, block['f2pyenhancements'][k])
3002:     intent_lst = block.get('intent', [])[:]
3003:     if blocktype == 'function' and 'callback' in intent_lst:
3004:         intent_lst.remove('callback')
3005:     if intent_lst:
3006:         f2pyenhancements = '%s%sintent(%s) %s' %\
3007:                            (f2pyenhancements, tab + tabchar,
3008:                             ','.join(intent_lst), name)
3009:     use = ''
3010:     if 'use' in block:
3011:         use = use2fortran(block['use'], tab + tabchar)
3012:     common = ''
3013:     if 'common' in block:
3014:         common = common2fortran(block['common'], tab + tabchar)
3015:     if name == 'unknown_interface':
3016:         name = ''
3017:     result = ''
3018:     if 'result' in block:
3019:         result = ' result (%s)' % block['result']
3020:         if block['result'] not in argsl:
3021:             argsl.append(block['result'])
3022:     body = crack2fortrangen(block['body'], tab + tabchar)
3023:     vars = vars2fortran(
3024:         block, block['vars'], argsl, tab + tabchar, as_interface=as_interface)
3025:     mess = ''
3026:     if 'from' in block and not as_interface:
3027:         mess = '! in %s' % block['from']
3028:     if 'entry' in block:
3029:         entry_stmts = ''
3030:         for k, i in list(block['entry'].items()):
3031:             entry_stmts = '%s%sentry %s(%s)' \
3032:                           % (entry_stmts, tab + tabchar, k, ','.join(i))
3033:         body = body + entry_stmts
3034:     if blocktype == 'block data' and name == '_BLOCK_DATA_':
3035:         name = ''
3036:     ret = '%s%s%s %s%s%s %s%s%s%s%s%s%send %s %s' % (
3037:         tab, prefix, blocktype, name, args, result, mess, f2pyenhancements, use, vars, common, body, tab, blocktype, name)
3038:     return ret
3039: 
3040: 
3041: def common2fortran(common, tab=''):
3042:     ret = ''
3043:     for k in list(common.keys()):
3044:         if k == '_BLNK_':
3045:             ret = '%s%scommon %s' % (ret, tab, ','.join(common[k]))
3046:         else:
3047:             ret = '%s%scommon /%s/ %s' % (ret, tab, k, ','.join(common[k]))
3048:     return ret
3049: 
3050: 
3051: def use2fortran(use, tab=''):
3052:     ret = ''
3053:     for m in list(use.keys()):
3054:         ret = '%s%suse %s,' % (ret, tab, m)
3055:         if use[m] == {}:
3056:             if ret and ret[-1] == ',':
3057:                 ret = ret[:-1]
3058:             continue
3059:         if 'only' in use[m] and use[m]['only']:
3060:             ret = '%s only:' % (ret)
3061:         if 'map' in use[m] and use[m]['map']:
3062:             c = ' '
3063:             for k in list(use[m]['map'].keys()):
3064:                 if k == use[m]['map'][k]:
3065:                     ret = '%s%s%s' % (ret, c, k)
3066:                     c = ','
3067:                 else:
3068:                     ret = '%s%s%s=>%s' % (ret, c, k, use[m]['map'][k])
3069:                     c = ','
3070:         if ret and ret[-1] == ',':
3071:             ret = ret[:-1]
3072:     return ret
3073: 
3074: 
3075: def true_intent_list(var):
3076:     lst = var['intent']
3077:     ret = []
3078:     for intent in lst:
3079:         try:
3080:             c = eval('isintent_%s(var)' % intent)
3081:         except NameError:
3082:             c = 0
3083:         if c:
3084:             ret.append(intent)
3085:     return ret
3086: 
3087: 
3088: def vars2fortran(block, vars, args, tab='', as_interface=False):
3089:     '''
3090:     TODO:
3091:     public sub
3092:     ...
3093:     '''
3094:     setmesstext(block)
3095:     ret = ''
3096:     nout = []
3097:     for a in args:
3098:         if a in block['vars']:
3099:             nout.append(a)
3100:     if 'commonvars' in block:
3101:         for a in block['commonvars']:
3102:             if a in vars:
3103:                 if a not in nout:
3104:                     nout.append(a)
3105:             else:
3106:                 errmess(
3107:                     'vars2fortran: Confused?!: "%s" is not defined in vars.\n' % a)
3108:     if 'varnames' in block:
3109:         nout.extend(block['varnames'])
3110:     if not as_interface:
3111:         for a in list(vars.keys()):
3112:             if a not in nout:
3113:                 nout.append(a)
3114:     for a in nout:
3115:         if 'depend' in vars[a]:
3116:             for d in vars[a]['depend']:
3117:                 if d in vars and 'depend' in vars[d] and a in vars[d]['depend']:
3118:                     errmess(
3119:                         'vars2fortran: Warning: cross-dependence between variables "%s" and "%s"\n' % (a, d))
3120:         if 'externals' in block and a in block['externals']:
3121:             if isintent_callback(vars[a]):
3122:                 ret = '%s%sintent(callback) %s' % (ret, tab, a)
3123:             ret = '%s%sexternal %s' % (ret, tab, a)
3124:             if isoptional(vars[a]):
3125:                 ret = '%s%soptional %s' % (ret, tab, a)
3126:             if a in vars and 'typespec' not in vars[a]:
3127:                 continue
3128:             cont = 1
3129:             for b in block['body']:
3130:                 if a == b['name'] and b['block'] == 'function':
3131:                     cont = 0
3132:                     break
3133:             if cont:
3134:                 continue
3135:         if a not in vars:
3136:             show(vars)
3137:             outmess('vars2fortran: No definition for argument "%s".\n' % a)
3138:             continue
3139:         if a == block['name'] and not block['block'] == 'function':
3140:             continue
3141:         if 'typespec' not in vars[a]:
3142:             if 'attrspec' in vars[a] and 'external' in vars[a]['attrspec']:
3143:                 if a in args:
3144:                     ret = '%s%sexternal %s' % (ret, tab, a)
3145:                 continue
3146:             show(vars[a])
3147:             outmess('vars2fortran: No typespec for argument "%s".\n' % a)
3148:             continue
3149:         vardef = vars[a]['typespec']
3150:         if vardef == 'type' and 'typename' in vars[a]:
3151:             vardef = '%s(%s)' % (vardef, vars[a]['typename'])
3152:         selector = {}
3153:         if 'kindselector' in vars[a]:
3154:             selector = vars[a]['kindselector']
3155:         elif 'charselector' in vars[a]:
3156:             selector = vars[a]['charselector']
3157:         if '*' in selector:
3158:             if selector['*'] in ['*', ':']:
3159:                 vardef = '%s*(%s)' % (vardef, selector['*'])
3160:             else:
3161:                 vardef = '%s*%s' % (vardef, selector['*'])
3162:         else:
3163:             if 'len' in selector:
3164:                 vardef = '%s(len=%s' % (vardef, selector['len'])
3165:                 if 'kind' in selector:
3166:                     vardef = '%s,kind=%s)' % (vardef, selector['kind'])
3167:                 else:
3168:                     vardef = '%s)' % (vardef)
3169:             elif 'kind' in selector:
3170:                 vardef = '%s(kind=%s)' % (vardef, selector['kind'])
3171:         c = ' '
3172:         if 'attrspec' in vars[a]:
3173:             attr = []
3174:             for l in vars[a]['attrspec']:
3175:                 if l not in ['external']:
3176:                     attr.append(l)
3177:             if attr:
3178:                 vardef = '%s, %s' % (vardef, ','.join(attr))
3179:                 c = ','
3180:         if 'dimension' in vars[a]:
3181:             vardef = '%s%sdimension(%s)' % (
3182:                 vardef, c, ','.join(vars[a]['dimension']))
3183:             c = ','
3184:         if 'intent' in vars[a]:
3185:             lst = true_intent_list(vars[a])
3186:             if lst:
3187:                 vardef = '%s%sintent(%s)' % (vardef, c, ','.join(lst))
3188:             c = ','
3189:         if 'check' in vars[a]:
3190:             vardef = '%s%scheck(%s)' % (vardef, c, ','.join(vars[a]['check']))
3191:             c = ','
3192:         if 'depend' in vars[a]:
3193:             vardef = '%s%sdepend(%s)' % (
3194:                 vardef, c, ','.join(vars[a]['depend']))
3195:             c = ','
3196:         if '=' in vars[a]:
3197:             v = vars[a]['=']
3198:             if vars[a]['typespec'] in ['complex', 'double complex']:
3199:                 try:
3200:                     v = eval(v)
3201:                     v = '(%s,%s)' % (v.real, v.imag)
3202:                 except:
3203:                     pass
3204:             vardef = '%s :: %s=%s' % (vardef, a, v)
3205:         else:
3206:             vardef = '%s :: %s' % (vardef, a)
3207:         ret = '%s%s%s' % (ret, tab, vardef)
3208:     return ret
3209: ######
3210: 
3211: 
3212: def crackfortran(files):
3213:     global usermodules
3214: 
3215:     outmess('Reading fortran codes...\n', 0)
3216:     readfortrancode(files, crackline)
3217:     outmess('Post-processing...\n', 0)
3218:     usermodules = []
3219:     postlist = postcrack(grouplist[0])
3220:     outmess('Post-processing (stage 2)...\n', 0)
3221:     postlist = postcrack2(postlist)
3222:     return usermodules + postlist
3223: 
3224: 
3225: def crack2fortran(block):
3226:     global f2py_version
3227: 
3228:     pyf = crack2fortrangen(block) + '\n'
3229:     header = '''!    -*- f90 -*-
3230: ! Note: the context of this file is case sensitive.
3231: '''
3232:     footer = '''
3233: ! This file was auto-generated with f2py (version:%s).
3234: ! See http://cens.ioc.ee/projects/f2py2e/
3235: ''' % (f2py_version)
3236:     return header + pyf + footer
3237: 
3238: if __name__ == "__main__":
3239:     files = []
3240:     funcs = []
3241:     f = 1
3242:     f2 = 0
3243:     f3 = 0
3244:     showblocklist = 0
3245:     for l in sys.argv[1:]:
3246:         if l == '':
3247:             pass
3248:         elif l[0] == ':':
3249:             f = 0
3250:         elif l == '-quiet':
3251:             quiet = 1
3252:             verbose = 0
3253:         elif l == '-verbose':
3254:             verbose = 2
3255:             quiet = 0
3256:         elif l == '-fix':
3257:             if strictf77:
3258:                 outmess(
3259:                     'Use option -f90 before -fix if Fortran 90 code is in fix form.\n', 0)
3260:             skipemptyends = 1
3261:             sourcecodeform = 'fix'
3262:         elif l == '-skipemptyends':
3263:             skipemptyends = 1
3264:         elif l == '--ignore-contains':
3265:             ignorecontains = 1
3266:         elif l == '-f77':
3267:             strictf77 = 1
3268:             sourcecodeform = 'fix'
3269:         elif l == '-f90':
3270:             strictf77 = 0
3271:             sourcecodeform = 'free'
3272:             skipemptyends = 1
3273:         elif l == '-h':
3274:             f2 = 1
3275:         elif l == '-show':
3276:             showblocklist = 1
3277:         elif l == '-m':
3278:             f3 = 1
3279:         elif l[0] == '-':
3280:             errmess('Unknown option %s\n' % repr(l))
3281:         elif f2:
3282:             f2 = 0
3283:             pyffilename = l
3284:         elif f3:
3285:             f3 = 0
3286:             f77modulename = l
3287:         elif f:
3288:             try:
3289:                 open(l).close()
3290:                 files.append(l)
3291:             except IOError as detail:
3292:                 errmess('IOError: %s\n' % str(detail))
3293:         else:
3294:             funcs.append(l)
3295:     if not strictf77 and f77modulename and not skipemptyends:
3296:         outmess('''\
3297:   Warning: You have specifyied module name for non Fortran 77 code
3298:   that should not need one (expect if you are scanning F90 code
3299:   for non module blocks but then you should use flag -skipemptyends
3300:   and also be sure that the files do not contain programs without program statement).
3301: ''', 0)
3302: 
3303:     postlist = crackfortran(files, funcs)
3304:     if pyffilename:
3305:         outmess('Writing fortran code to file %s\n' % repr(pyffilename), 0)
3306:         pyf = crack2fortran(postlist)
3307:         f = open(pyffilename, 'w')
3308:         f.write(pyf)
3309:         f.close()
3310:     if showblocklist:
3311:         show(postlist)
3312: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

str_75838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, (-1)), 'str', "\ncrackfortran --- read fortran (77,90) code and extract declaration information.\n\nCopyright 1999-2004 Pearu Peterson all rights reserved,\nPearu Peterson <pearu@ioc.ee>\nPermission to use, modify, and distribute this software is given under the\nterms of the NumPy License.\n\nNO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.\n$Date: 2005/09/27 07:13:49 $\nPearu Peterson\n\n\nUsage of crackfortran:\n======================\nCommand line keys: -quiet,-verbose,-fix,-f77,-f90,-show,-h <pyffilename>\n                   -m <module name for f77 routines>,--ignore-contains\nFunctions: crackfortran, crack2fortran\nThe following Fortran statements/constructions are supported\n(or will be if needed):\n   block data,byte,call,character,common,complex,contains,data,\n   dimension,double complex,double precision,end,external,function,\n   implicit,integer,intent,interface,intrinsic,\n   logical,module,optional,parameter,private,public,\n   program,real,(sequence?),subroutine,type,use,virtual,\n   include,pythonmodule\nNote: 'virtual' is mapped to 'dimension'.\nNote: 'implicit integer (z) static (z)' is 'implicit static (z)' (this is minor bug).\nNote: code after 'contains' will be ignored until its scope ends.\nNote: 'common' statement is extended: dimensions are moved to variable definitions\nNote: f2py directive: <commentchar>f2py<line> is read as <line>\nNote: pythonmodule is introduced to represent Python module\n\nUsage:\n  `postlist=crackfortran(files,funcs)`\n  `postlist` contains declaration information read from the list of files `files`.\n  `crack2fortran(postlist)` returns a fortran code to be saved to pyf-file\n\n  `postlist` has the following structure:\n *** it is a list of dictionaries containing `blocks':\n     B = {'block','body','vars','parent_block'[,'name','prefix','args','result',\n          'implicit','externals','interfaced','common','sortvars',\n          'commonvars','note']}\n     B['block'] = 'interface' | 'function' | 'subroutine' | 'module' |\n                  'program' | 'block data' | 'type' | 'pythonmodule'\n     B['body'] --- list containing `subblocks' with the same structure as `blocks'\n     B['parent_block'] --- dictionary of a parent block:\n                             C['body'][<index>]['parent_block'] is C\n     B['vars'] --- dictionary of variable definitions\n     B['sortvars'] --- dictionary of variable definitions sorted by dependence (independent first)\n     B['name'] --- name of the block (not if B['block']=='interface')\n     B['prefix'] --- prefix string (only if B['block']=='function')\n     B['args'] --- list of argument names if B['block']== 'function' | 'subroutine'\n     B['result'] --- name of the return value (only if B['block']=='function')\n     B['implicit'] --- dictionary {'a':<variable definition>,'b':...} | None\n     B['externals'] --- list of variables being external\n     B['interfaced'] --- list of variables being external and defined\n     B['common'] --- dictionary of common blocks (list of objects)\n     B['commonvars'] --- list of variables used in common blocks (dimensions are moved to variable definitions)\n     B['from'] --- string showing the 'parents' of the current block\n     B['use'] --- dictionary of modules used in current block:\n         {<modulename>:{['only':<0|1>],['map':{<local_name1>:<use_name1>,...}]}}\n     B['note'] --- list of LaTeX comments on the block\n     B['f2pyenhancements'] --- optional dictionary\n          {'threadsafe':'','fortranname':<name>,\n           'callstatement':<C-expr>|<multi-line block>,\n           'callprotoargument':<C-expr-list>,\n           'usercode':<multi-line block>|<list of multi-line blocks>,\n           'pymethoddef:<multi-line block>'\n           }\n     B['entry'] --- dictionary {entryname:argslist,..}\n     B['varnames'] --- list of variable names given in the order of reading the\n                       Fortran code, useful for derived types.\n     B['saved_interface'] --- a string of scanned routine signature, defines explicit interface\n *** Variable definition is a dictionary\n     D = B['vars'][<variable name>] =\n     {'typespec'[,'attrspec','kindselector','charselector','=','typename']}\n     D['typespec'] = 'byte' | 'character' | 'complex' | 'double complex' |\n                     'double precision' | 'integer' | 'logical' | 'real' | 'type'\n     D['attrspec'] --- list of attributes (e.g. 'dimension(<arrayspec>)',\n                       'external','intent(in|out|inout|hide|c|callback|cache|aligned4|aligned8|aligned16)',\n                       'optional','required', etc)\n     K = D['kindselector'] = {['*','kind']} (only if D['typespec'] =\n                         'complex' | 'integer' | 'logical' | 'real' )\n     C = D['charselector'] = {['*','len','kind']}\n                             (only if D['typespec']=='character')\n     D['='] --- initialization expression string\n     D['typename'] --- name of the type if D['typespec']=='type'\n     D['dimension'] --- list of dimension bounds\n     D['intent'] --- list of intent specifications\n     D['depend'] --- list of variable names on which current variable depends on\n     D['check'] --- list of C-expressions; if C-expr returns zero, exception is raised\n     D['note'] --- list of LaTeX comments on the variable\n *** Meaning of kind/char selectors (few examples):\n     D['typespec>']*K['*']\n     D['typespec'](kind=K['kind'])\n     character*C['*']\n     character(len=C['len'],kind=C['kind'])\n     (see also fortran type declaration statement formats below)\n\nFortran 90 type declaration statement format (F77 is subset of F90)\n====================================================================\n(Main source: IBM XL Fortran 5.1 Language Reference Manual)\ntype declaration = <typespec> [[<attrspec>]::] <entitydecl>\n<typespec> = byte                          |\n             character[<charselector>]     |\n             complex[<kindselector>]       |\n             double complex                |\n             double precision              |\n             integer[<kindselector>]       |\n             logical[<kindselector>]       |\n             real[<kindselector>]          |\n             type(<typename>)\n<charselector> = * <charlen>               |\n             ([len=]<len>[,[kind=]<kind>]) |\n             (kind=<kind>[,len=<len>])\n<kindselector> = * <intlen>                |\n             ([kind=]<kind>)\n<attrspec> = comma separated list of attributes.\n             Only the following attributes are used in\n             building up the interface:\n                external\n                (parameter --- affects '=' key)\n                optional\n                intent\n             Other attributes are ignored.\n<intentspec> = in | out | inout\n<arrayspec> = comma separated list of dimension bounds.\n<entitydecl> = <name> [[*<charlen>][(<arrayspec>)] | [(<arrayspec>)]*<charlen>]\n                      [/<init_expr>/ | =<init_expr>] [,<entitydecl>]\n\nIn addition, the following attributes are used: check,depend,note\n\nTODO:\n    * Apply 'parameter' attribute (e.g. 'integer parameter :: i=2' 'real x(i)'\n                                   -> 'real x(2)')\n    The above may be solved by creating appropriate preprocessor program, for example.\n\n")
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 143, 0))

# 'import sys' statement (line 143)
import sys

import_module(stypy.reporting.localization.Localization(__file__, 143, 0), 'sys', sys, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 144, 0))

# 'import string' statement (line 144)
import string

import_module(stypy.reporting.localization.Localization(__file__, 144, 0), 'string', string, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 145, 0))

# 'import fileinput' statement (line 145)
import fileinput

import_module(stypy.reporting.localization.Localization(__file__, 145, 0), 'fileinput', fileinput, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 146, 0))

# 'import re' statement (line 146)
import re

import_module(stypy.reporting.localization.Localization(__file__, 146, 0), 're', re, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 147, 0))

# 'import os' statement (line 147)
import os

import_module(stypy.reporting.localization.Localization(__file__, 147, 0), 'os', os, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 148, 0))

# 'import copy' statement (line 148)
import copy

import_module(stypy.reporting.localization.Localization(__file__, 148, 0), 'copy', copy, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 149, 0))

# 'import platform' statement (line 149)
import platform

import_module(stypy.reporting.localization.Localization(__file__, 149, 0), 'platform', platform, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 151, 0))

# 'from numpy.f2py import __version__' statement (line 151)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/numpy/f2py/')
import_75839 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 151, 0), 'numpy.f2py')

if (type(import_75839) is not StypyTypeError):

    if (import_75839 != 'pyd_module'):
        __import__(import_75839)
        sys_modules_75840 = sys.modules[import_75839]
        import_from_module(stypy.reporting.localization.Localization(__file__, 151, 0), 'numpy.f2py', sys_modules_75840.module_type_store, module_type_store, ['__version__'])
        nest_module(stypy.reporting.localization.Localization(__file__, 151, 0), __file__, sys_modules_75840, sys_modules_75840.module_type_store, module_type_store)
    else:
        from numpy.f2py import __version__

        import_from_module(stypy.reporting.localization.Localization(__file__, 151, 0), 'numpy.f2py', None, module_type_store, ['__version__'], [__version__])

else:
    # Assigning a type to the variable 'numpy.f2py' (line 151)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 151, 0), 'numpy.f2py', import_75839)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/numpy/f2py/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 156, 0))

# 'from numpy.f2py.auxfuncs import ' statement (line 156)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/numpy/f2py/')
import_75841 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 156, 0), 'numpy.f2py.auxfuncs')

if (type(import_75841) is not StypyTypeError):

    if (import_75841 != 'pyd_module'):
        __import__(import_75841)
        sys_modules_75842 = sys.modules[import_75841]
        import_from_module(stypy.reporting.localization.Localization(__file__, 156, 0), 'numpy.f2py.auxfuncs', sys_modules_75842.module_type_store, module_type_store, ['*'])
        nest_module(stypy.reporting.localization.Localization(__file__, 156, 0), __file__, sys_modules_75842, sys_modules_75842.module_type_store, module_type_store)
    else:
        from numpy.f2py.auxfuncs import *

        import_from_module(stypy.reporting.localization.Localization(__file__, 156, 0), 'numpy.f2py.auxfuncs', None, module_type_store, ['*'], None)

else:
    # Assigning a type to the variable 'numpy.f2py.auxfuncs' (line 156)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 156, 0), 'numpy.f2py.auxfuncs', import_75841)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/numpy/f2py/')


# Assigning a Attribute to a Name (line 159):

# Assigning a Attribute to a Name (line 159):
# Getting the type of '__version__' (line 159)
version___75843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 15), '__version__')
# Obtaining the member 'version' of a type (line 159)
version_75844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 159, 15), version___75843, 'version')
# Assigning a type to the variable 'f2py_version' (line 159)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 159, 0), 'f2py_version', version_75844)

# Assigning a Num to a Name (line 162):

# Assigning a Num to a Name (line 162):
int_75845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 12), 'int')
# Assigning a type to the variable 'strictf77' (line 162)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 162, 0), 'strictf77', int_75845)

# Assigning a Str to a Name (line 163):

# Assigning a Str to a Name (line 163):
str_75846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 163, 17), 'str', 'fix')
# Assigning a type to the variable 'sourcecodeform' (line 163)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 163, 0), 'sourcecodeform', str_75846)

# Assigning a Num to a Name (line 164):

# Assigning a Num to a Name (line 164):
int_75847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 164, 8), 'int')
# Assigning a type to the variable 'quiet' (line 164)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 164, 0), 'quiet', int_75847)

# Assigning a Num to a Name (line 165):

# Assigning a Num to a Name (line 165):
int_75848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 10), 'int')
# Assigning a type to the variable 'verbose' (line 165)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 165, 0), 'verbose', int_75848)

# Assigning a BinOp to a Name (line 166):

# Assigning a BinOp to a Name (line 166):
int_75849 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 166, 10), 'int')
str_75850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 166, 14), 'str', ' ')
# Applying the binary operator '*' (line 166)
result_mul_75851 = python_operator(stypy.reporting.localization.Localization(__file__, 166, 10), '*', int_75849, str_75850)

# Assigning a type to the variable 'tabchar' (line 166)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 166, 0), 'tabchar', result_mul_75851)

# Assigning a Str to a Name (line 167):

# Assigning a Str to a Name (line 167):
str_75852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 167, 14), 'str', '')
# Assigning a type to the variable 'pyffilename' (line 167)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 167, 0), 'pyffilename', str_75852)

# Assigning a Str to a Name (line 168):

# Assigning a Str to a Name (line 168):
str_75853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 168, 16), 'str', '')
# Assigning a type to the variable 'f77modulename' (line 168)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 168, 0), 'f77modulename', str_75853)

# Assigning a Num to a Name (line 169):

# Assigning a Num to a Name (line 169):
int_75854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 16), 'int')
# Assigning a type to the variable 'skipemptyends' (line 169)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 169, 0), 'skipemptyends', int_75854)

# Assigning a Num to a Name (line 170):

# Assigning a Num to a Name (line 170):
int_75855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 170, 17), 'int')
# Assigning a type to the variable 'ignorecontains' (line 170)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 170, 0), 'ignorecontains', int_75855)

# Assigning a Num to a Name (line 171):

# Assigning a Num to a Name (line 171):
int_75856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 171, 14), 'int')
# Assigning a type to the variable 'dolowercase' (line 171)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 171, 0), 'dolowercase', int_75856)

# Assigning a List to a Name (line 172):

# Assigning a List to a Name (line 172):

# Obtaining an instance of the builtin type 'list' (line 172)
list_75857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, 8), 'list')
# Adding type elements to the builtin type 'list' instance (line 172)

# Assigning a type to the variable 'debug' (line 172)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 172, 0), 'debug', list_75857)

# Assigning a Str to a Name (line 175):

# Assigning a Str to a Name (line 175):
str_75858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 175, 15), 'str', '')
# Assigning a type to the variable 'beginpattern' (line 175)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 175, 0), 'beginpattern', str_75858)

# Assigning a Str to a Name (line 176):

# Assigning a Str to a Name (line 176):
str_75859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 176, 18), 'str', '')
# Assigning a type to the variable 'currentfilename' (line 176)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 176, 0), 'currentfilename', str_75859)

# Assigning a Num to a Name (line 177):

# Assigning a Num to a Name (line 177):
int_75860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 177, 14), 'int')
# Assigning a type to the variable 'expectbegin' (line 177)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 177, 0), 'expectbegin', int_75860)

# Assigning a Dict to a Name (line 178):

# Assigning a Dict to a Name (line 178):

# Obtaining an instance of the builtin type 'dict' (line 178)
dict_75861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 178, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 178)

# Assigning a type to the variable 'f90modulevars' (line 178)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 178, 0), 'f90modulevars', dict_75861)

# Assigning a Str to a Name (line 179):

# Assigning a Str to a Name (line 179):
str_75862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 19), 'str', '')
# Assigning a type to the variable 'filepositiontext' (line 179)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 179, 0), 'filepositiontext', str_75862)

# Assigning a Num to a Name (line 180):

# Assigning a Num to a Name (line 180):
int_75863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 14), 'int')
# Assigning a type to the variable 'gotnextfile' (line 180)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 180, 0), 'gotnextfile', int_75863)

# Assigning a Name to a Name (line 181):

# Assigning a Name to a Name (line 181):
# Getting the type of 'None' (line 181)
None_75864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 13), 'None')
# Assigning a type to the variable 'groupcache' (line 181)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 181, 0), 'groupcache', None_75864)

# Assigning a Num to a Name (line 182):

# Assigning a Num to a Name (line 182):
int_75865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 182, 15), 'int')
# Assigning a type to the variable 'groupcounter' (line 182)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 182, 0), 'groupcounter', int_75865)

# Assigning a Dict to a Name (line 183):

# Assigning a Dict to a Name (line 183):

# Obtaining an instance of the builtin type 'dict' (line 183)
dict_75866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 183, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 183)
# Adding element type (key, value) (line 183)
# Getting the type of 'groupcounter' (line 183)
groupcounter_75867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 13), 'groupcounter')

# Obtaining an instance of the builtin type 'list' (line 183)
list_75868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 183, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 183)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 183, 12), dict_75866, (groupcounter_75867, list_75868))

# Assigning a type to the variable 'grouplist' (line 183)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 183, 0), 'grouplist', dict_75866)

# Assigning a Str to a Name (line 184):

# Assigning a Str to a Name (line 184):
str_75869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 12), 'str', '')
# Assigning a type to the variable 'groupname' (line 184)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 184, 0), 'groupname', str_75869)

# Assigning a List to a Name (line 185):

# Assigning a List to a Name (line 185):

# Obtaining an instance of the builtin type 'list' (line 185)
list_75870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 185, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 185)

# Assigning a type to the variable 'include_paths' (line 185)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 185, 0), 'include_paths', list_75870)

# Assigning a Num to a Name (line 186):

# Assigning a Num to a Name (line 186):
int_75871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 186, 15), 'int')
# Assigning a type to the variable 'neededmodule' (line 186)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 186, 0), 'neededmodule', int_75871)

# Assigning a List to a Name (line 187):

# Assigning a List to a Name (line 187):

# Obtaining an instance of the builtin type 'list' (line 187)
list_75872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 187, 12), 'list')
# Adding type elements to the builtin type 'list' instance (line 187)

# Assigning a type to the variable 'onlyfuncs' (line 187)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 187, 0), 'onlyfuncs', list_75872)

# Assigning a Name to a Name (line 188):

# Assigning a Name to a Name (line 188):
# Getting the type of 'None' (line 188)
None_75873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 19), 'None')
# Assigning a type to the variable 'previous_context' (line 188)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 188, 0), 'previous_context', None_75873)

# Assigning a Num to a Name (line 189):

# Assigning a Num to a Name (line 189):
int_75874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 18), 'int')
# Assigning a type to the variable 'skipblocksuntil' (line 189)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 189, 0), 'skipblocksuntil', int_75874)

# Assigning a List to a Name (line 190):

# Assigning a List to a Name (line 190):

# Obtaining an instance of the builtin type 'list' (line 190)
list_75875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 12), 'list')
# Adding type elements to the builtin type 'list' instance (line 190)

# Assigning a type to the variable 'skipfuncs' (line 190)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 190, 0), 'skipfuncs', list_75875)

# Assigning a List to a Name (line 191):

# Assigning a List to a Name (line 191):

# Obtaining an instance of the builtin type 'list' (line 191)
list_75876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 191, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 191)

# Assigning a type to the variable 'skipfunctions' (line 191)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 191, 0), 'skipfunctions', list_75876)

# Assigning a List to a Name (line 192):

# Assigning a List to a Name (line 192):

# Obtaining an instance of the builtin type 'list' (line 192)
list_75877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 192, 14), 'list')
# Adding type elements to the builtin type 'list' instance (line 192)

# Assigning a type to the variable 'usermodules' (line 192)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 192, 0), 'usermodules', list_75877)

@norecursion
def reset_global_f2py_vars(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'reset_global_f2py_vars'
    module_type_store = module_type_store.open_function_context('reset_global_f2py_vars', 195, 0, False)
    
    # Passed parameters checking function
    reset_global_f2py_vars.stypy_localization = localization
    reset_global_f2py_vars.stypy_type_of_self = None
    reset_global_f2py_vars.stypy_type_store = module_type_store
    reset_global_f2py_vars.stypy_function_name = 'reset_global_f2py_vars'
    reset_global_f2py_vars.stypy_param_names_list = []
    reset_global_f2py_vars.stypy_varargs_param_name = None
    reset_global_f2py_vars.stypy_kwargs_param_name = None
    reset_global_f2py_vars.stypy_call_defaults = defaults
    reset_global_f2py_vars.stypy_call_varargs = varargs
    reset_global_f2py_vars.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'reset_global_f2py_vars', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'reset_global_f2py_vars', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'reset_global_f2py_vars(...)' code ##################

    # Marking variables as global (line 196)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 196, 4), 'groupcounter')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 196, 4), 'grouplist')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 196, 4), 'neededmodule')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 196, 4), 'expectbegin')
    # Marking variables as global (line 197)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 197, 4), 'skipblocksuntil')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 197, 4), 'usermodules')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 197, 4), 'f90modulevars')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 197, 4), 'gotnextfile')
    # Marking variables as global (line 198)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 198, 4), 'filepositiontext')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 198, 4), 'currentfilename')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 198, 4), 'skipfunctions')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 198, 4), 'skipfuncs')
    # Marking variables as global (line 199)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 199, 4), 'onlyfuncs')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 199, 4), 'include_paths')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 199, 4), 'previous_context')
    # Marking variables as global (line 200)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 200, 4), 'strictf77')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 200, 4), 'sourcecodeform')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 200, 4), 'quiet')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 200, 4), 'verbose')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 200, 4), 'tabchar')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 200, 4), 'pyffilename')
    # Marking variables as global (line 201)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 201, 4), 'f77modulename')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 201, 4), 'skipemptyends')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 201, 4), 'ignorecontains')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 201, 4), 'dolowercase')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 201, 4), 'debug')
    
    # Assigning a Num to a Name (line 204):
    
    # Assigning a Num to a Name (line 204):
    int_75878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 16), 'int')
    # Assigning a type to the variable 'strictf77' (line 204)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 204, 4), 'strictf77', int_75878)
    
    # Assigning a Str to a Name (line 205):
    
    # Assigning a Str to a Name (line 205):
    str_75879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 205, 21), 'str', 'fix')
    # Assigning a type to the variable 'sourcecodeform' (line 205)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 205, 4), 'sourcecodeform', str_75879)
    
    # Assigning a Num to a Name (line 206):
    
    # Assigning a Num to a Name (line 206):
    int_75880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 12), 'int')
    # Assigning a type to the variable 'quiet' (line 206)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 4), 'quiet', int_75880)
    
    # Assigning a Num to a Name (line 207):
    
    # Assigning a Num to a Name (line 207):
    int_75881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 207, 14), 'int')
    # Assigning a type to the variable 'verbose' (line 207)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 207, 4), 'verbose', int_75881)
    
    # Assigning a BinOp to a Name (line 208):
    
    # Assigning a BinOp to a Name (line 208):
    int_75882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 14), 'int')
    str_75883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 18), 'str', ' ')
    # Applying the binary operator '*' (line 208)
    result_mul_75884 = python_operator(stypy.reporting.localization.Localization(__file__, 208, 14), '*', int_75882, str_75883)
    
    # Assigning a type to the variable 'tabchar' (line 208)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 208, 4), 'tabchar', result_mul_75884)
    
    # Assigning a Str to a Name (line 209):
    
    # Assigning a Str to a Name (line 209):
    str_75885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 209, 18), 'str', '')
    # Assigning a type to the variable 'pyffilename' (line 209)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 209, 4), 'pyffilename', str_75885)
    
    # Assigning a Str to a Name (line 210):
    
    # Assigning a Str to a Name (line 210):
    str_75886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 210, 20), 'str', '')
    # Assigning a type to the variable 'f77modulename' (line 210)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 210, 4), 'f77modulename', str_75886)
    
    # Assigning a Num to a Name (line 211):
    
    # Assigning a Num to a Name (line 211):
    int_75887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 20), 'int')
    # Assigning a type to the variable 'skipemptyends' (line 211)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 211, 4), 'skipemptyends', int_75887)
    
    # Assigning a Num to a Name (line 212):
    
    # Assigning a Num to a Name (line 212):
    int_75888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 212, 21), 'int')
    # Assigning a type to the variable 'ignorecontains' (line 212)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 212, 4), 'ignorecontains', int_75888)
    
    # Assigning a Num to a Name (line 213):
    
    # Assigning a Num to a Name (line 213):
    int_75889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 18), 'int')
    # Assigning a type to the variable 'dolowercase' (line 213)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 213, 4), 'dolowercase', int_75889)
    
    # Assigning a List to a Name (line 214):
    
    # Assigning a List to a Name (line 214):
    
    # Obtaining an instance of the builtin type 'list' (line 214)
    list_75890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 214, 12), 'list')
    # Adding type elements to the builtin type 'list' instance (line 214)
    
    # Assigning a type to the variable 'debug' (line 214)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 214, 4), 'debug', list_75890)
    
    # Assigning a Num to a Name (line 216):
    
    # Assigning a Num to a Name (line 216):
    int_75891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 19), 'int')
    # Assigning a type to the variable 'groupcounter' (line 216)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 4), 'groupcounter', int_75891)
    
    # Assigning a Dict to a Name (line 217):
    
    # Assigning a Dict to a Name (line 217):
    
    # Obtaining an instance of the builtin type 'dict' (line 217)
    dict_75892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 217, 16), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 217)
    # Adding element type (key, value) (line 217)
    # Getting the type of 'groupcounter' (line 217)
    groupcounter_75893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 17), 'groupcounter')
    
    # Obtaining an instance of the builtin type 'list' (line 217)
    list_75894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 217, 31), 'list')
    # Adding type elements to the builtin type 'list' instance (line 217)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 217, 16), dict_75892, (groupcounter_75893, list_75894))
    
    # Assigning a type to the variable 'grouplist' (line 217)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 217, 4), 'grouplist', dict_75892)
    
    # Assigning a Num to a Name (line 218):
    
    # Assigning a Num to a Name (line 218):
    int_75895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 218, 19), 'int')
    # Assigning a type to the variable 'neededmodule' (line 218)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 218, 4), 'neededmodule', int_75895)
    
    # Assigning a Num to a Name (line 219):
    
    # Assigning a Num to a Name (line 219):
    int_75896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 18), 'int')
    # Assigning a type to the variable 'expectbegin' (line 219)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 219, 4), 'expectbegin', int_75896)
    
    # Assigning a Num to a Name (line 220):
    
    # Assigning a Num to a Name (line 220):
    int_75897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 220, 22), 'int')
    # Assigning a type to the variable 'skipblocksuntil' (line 220)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 220, 4), 'skipblocksuntil', int_75897)
    
    # Assigning a List to a Name (line 221):
    
    # Assigning a List to a Name (line 221):
    
    # Obtaining an instance of the builtin type 'list' (line 221)
    list_75898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 221, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 221)
    
    # Assigning a type to the variable 'usermodules' (line 221)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 221, 4), 'usermodules', list_75898)
    
    # Assigning a Dict to a Name (line 222):
    
    # Assigning a Dict to a Name (line 222):
    
    # Obtaining an instance of the builtin type 'dict' (line 222)
    dict_75899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 222, 20), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 222)
    
    # Assigning a type to the variable 'f90modulevars' (line 222)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 222, 4), 'f90modulevars', dict_75899)
    
    # Assigning a Num to a Name (line 223):
    
    # Assigning a Num to a Name (line 223):
    int_75900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 18), 'int')
    # Assigning a type to the variable 'gotnextfile' (line 223)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 4), 'gotnextfile', int_75900)
    
    # Assigning a Str to a Name (line 224):
    
    # Assigning a Str to a Name (line 224):
    str_75901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 224, 23), 'str', '')
    # Assigning a type to the variable 'filepositiontext' (line 224)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 224, 4), 'filepositiontext', str_75901)
    
    # Assigning a Str to a Name (line 225):
    
    # Assigning a Str to a Name (line 225):
    str_75902 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 225, 22), 'str', '')
    # Assigning a type to the variable 'currentfilename' (line 225)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 225, 4), 'currentfilename', str_75902)
    
    # Assigning a List to a Name (line 226):
    
    # Assigning a List to a Name (line 226):
    
    # Obtaining an instance of the builtin type 'list' (line 226)
    list_75903 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 20), 'list')
    # Adding type elements to the builtin type 'list' instance (line 226)
    
    # Assigning a type to the variable 'skipfunctions' (line 226)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 4), 'skipfunctions', list_75903)
    
    # Assigning a List to a Name (line 227):
    
    # Assigning a List to a Name (line 227):
    
    # Obtaining an instance of the builtin type 'list' (line 227)
    list_75904 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 16), 'list')
    # Adding type elements to the builtin type 'list' instance (line 227)
    
    # Assigning a type to the variable 'skipfuncs' (line 227)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 4), 'skipfuncs', list_75904)
    
    # Assigning a List to a Name (line 228):
    
    # Assigning a List to a Name (line 228):
    
    # Obtaining an instance of the builtin type 'list' (line 228)
    list_75905 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 228, 16), 'list')
    # Adding type elements to the builtin type 'list' instance (line 228)
    
    # Assigning a type to the variable 'onlyfuncs' (line 228)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 228, 4), 'onlyfuncs', list_75905)
    
    # Assigning a List to a Name (line 229):
    
    # Assigning a List to a Name (line 229):
    
    # Obtaining an instance of the builtin type 'list' (line 229)
    list_75906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 229, 20), 'list')
    # Adding type elements to the builtin type 'list' instance (line 229)
    
    # Assigning a type to the variable 'include_paths' (line 229)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 229, 4), 'include_paths', list_75906)
    
    # Assigning a Name to a Name (line 230):
    
    # Assigning a Name to a Name (line 230):
    # Getting the type of 'None' (line 230)
    None_75907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 23), 'None')
    # Assigning a type to the variable 'previous_context' (line 230)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 230, 4), 'previous_context', None_75907)
    
    # ################# End of 'reset_global_f2py_vars(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'reset_global_f2py_vars' in the type store
    # Getting the type of 'stypy_return_type' (line 195)
    stypy_return_type_75908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_75908)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'reset_global_f2py_vars'
    return stypy_return_type_75908

# Assigning a type to the variable 'reset_global_f2py_vars' (line 195)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 195, 0), 'reset_global_f2py_vars', reset_global_f2py_vars)

@norecursion
def outmess(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    int_75909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 233, 23), 'int')
    defaults = [int_75909]
    # Create a new context for function 'outmess'
    module_type_store = module_type_store.open_function_context('outmess', 233, 0, False)
    
    # Passed parameters checking function
    outmess.stypy_localization = localization
    outmess.stypy_type_of_self = None
    outmess.stypy_type_store = module_type_store
    outmess.stypy_function_name = 'outmess'
    outmess.stypy_param_names_list = ['line', 'flag']
    outmess.stypy_varargs_param_name = None
    outmess.stypy_kwargs_param_name = None
    outmess.stypy_call_defaults = defaults
    outmess.stypy_call_varargs = varargs
    outmess.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'outmess', ['line', 'flag'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'outmess', localization, ['line', 'flag'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'outmess(...)' code ##################

    # Marking variables as global (line 234)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 234, 4), 'filepositiontext')
    
    
    # Getting the type of 'verbose' (line 236)
    verbose_75910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 11), 'verbose')
    # Applying the 'not' unary operator (line 236)
    result_not__75911 = python_operator(stypy.reporting.localization.Localization(__file__, 236, 7), 'not', verbose_75910)
    
    # Testing the type of an if condition (line 236)
    if_condition_75912 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 236, 4), result_not__75911)
    # Assigning a type to the variable 'if_condition_75912' (line 236)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 236, 4), 'if_condition_75912', if_condition_75912)
    # SSA begins for if statement (line 236)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Assigning a type to the variable 'stypy_return_type' (line 237)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 237, 8), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 236)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'quiet' (line 238)
    quiet_75913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 11), 'quiet')
    # Applying the 'not' unary operator (line 238)
    result_not__75914 = python_operator(stypy.reporting.localization.Localization(__file__, 238, 7), 'not', quiet_75913)
    
    # Testing the type of an if condition (line 238)
    if_condition_75915 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 238, 4), result_not__75914)
    # Assigning a type to the variable 'if_condition_75915' (line 238)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 238, 4), 'if_condition_75915', if_condition_75915)
    # SSA begins for if statement (line 238)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'flag' (line 239)
    flag_75916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 11), 'flag')
    # Testing the type of an if condition (line 239)
    if_condition_75917 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 239, 8), flag_75916)
    # Assigning a type to the variable 'if_condition_75917' (line 239)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 239, 8), 'if_condition_75917', if_condition_75917)
    # SSA begins for if statement (line 239)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to write(...): (line 240)
    # Processing the call arguments (line 240)
    # Getting the type of 'filepositiontext' (line 240)
    filepositiontext_75921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 29), 'filepositiontext', False)
    # Processing the call keyword arguments (line 240)
    kwargs_75922 = {}
    # Getting the type of 'sys' (line 240)
    sys_75918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 12), 'sys', False)
    # Obtaining the member 'stdout' of a type (line 240)
    stdout_75919 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 240, 12), sys_75918, 'stdout')
    # Obtaining the member 'write' of a type (line 240)
    write_75920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 240, 12), stdout_75919, 'write')
    # Calling write(args, kwargs) (line 240)
    write_call_result_75923 = invoke(stypy.reporting.localization.Localization(__file__, 240, 12), write_75920, *[filepositiontext_75921], **kwargs_75922)
    
    # SSA join for if statement (line 239)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to write(...): (line 241)
    # Processing the call arguments (line 241)
    # Getting the type of 'line' (line 241)
    line_75927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 25), 'line', False)
    # Processing the call keyword arguments (line 241)
    kwargs_75928 = {}
    # Getting the type of 'sys' (line 241)
    sys_75924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 8), 'sys', False)
    # Obtaining the member 'stdout' of a type (line 241)
    stdout_75925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 241, 8), sys_75924, 'stdout')
    # Obtaining the member 'write' of a type (line 241)
    write_75926 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 241, 8), stdout_75925, 'write')
    # Calling write(args, kwargs) (line 241)
    write_call_result_75929 = invoke(stypy.reporting.localization.Localization(__file__, 241, 8), write_75926, *[line_75927], **kwargs_75928)
    
    # SSA join for if statement (line 238)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'outmess(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'outmess' in the type store
    # Getting the type of 'stypy_return_type' (line 233)
    stypy_return_type_75930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_75930)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'outmess'
    return stypy_return_type_75930

# Assigning a type to the variable 'outmess' (line 233)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 233, 0), 'outmess', outmess)

# Assigning a Num to a Attribute (line 243):

# Assigning a Num to a Attribute (line 243):
int_75931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 243, 15), 'int')
# Getting the type of 're' (line 243)
re_75932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 0), 're')
# Setting the type of the member '_MAXCACHE' of a type (line 243)
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 243, 0), re_75932, '_MAXCACHE', int_75931)

# Assigning a Dict to a Name (line 244):

# Assigning a Dict to a Name (line 244):

# Obtaining an instance of the builtin type 'dict' (line 244)
dict_75933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 244, 23), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 244)

# Assigning a type to the variable 'defaultimplicitrules' (line 244)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 244, 0), 'defaultimplicitrules', dict_75933)

str_75934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 9), 'str', 'abcdefghopqrstuvwxyz$_')
# Testing the type of a for loop iterable (line 245)
is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 245, 0), str_75934)
# Getting the type of the for loop variable (line 245)
for_loop_var_75935 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 245, 0), str_75934)
# Assigning a type to the variable 'c' (line 245)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 0), 'c', for_loop_var_75935)
# SSA begins for a for statement (line 245)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')

# Assigning a Dict to a Subscript (line 246):

# Assigning a Dict to a Subscript (line 246):

# Obtaining an instance of the builtin type 'dict' (line 246)
dict_75936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 246, 30), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 246)
# Adding element type (key, value) (line 246)
str_75937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 246, 31), 'str', 'typespec')
str_75938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 246, 43), 'str', 'real')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 246, 30), dict_75936, (str_75937, str_75938))

# Getting the type of 'defaultimplicitrules' (line 246)
defaultimplicitrules_75939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 4), 'defaultimplicitrules')
# Getting the type of 'c' (line 246)
c_75940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 25), 'c')
# Storing an element on a container (line 246)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 246, 4), defaultimplicitrules_75939, (c_75940, dict_75936))
# SSA join for a for statement
module_type_store = module_type_store.join_ssa_context()


str_75941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 9), 'str', 'ijklmn')
# Testing the type of a for loop iterable (line 247)
is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 247, 0), str_75941)
# Getting the type of the for loop variable (line 247)
for_loop_var_75942 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 247, 0), str_75941)
# Assigning a type to the variable 'c' (line 247)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 247, 0), 'c', for_loop_var_75942)
# SSA begins for a for statement (line 247)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')

# Assigning a Dict to a Subscript (line 248):

# Assigning a Dict to a Subscript (line 248):

# Obtaining an instance of the builtin type 'dict' (line 248)
dict_75943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 30), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 248)
# Adding element type (key, value) (line 248)
str_75944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 31), 'str', 'typespec')
str_75945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 43), 'str', 'integer')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 248, 30), dict_75943, (str_75944, str_75945))

# Getting the type of 'defaultimplicitrules' (line 248)
defaultimplicitrules_75946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 4), 'defaultimplicitrules')
# Getting the type of 'c' (line 248)
c_75947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 25), 'c')
# Storing an element on a container (line 248)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 248, 4), defaultimplicitrules_75946, (c_75947, dict_75943))
# SSA join for a for statement
module_type_store = module_type_store.join_ssa_context()

# Deleting a member
module_type_store.del_member(stypy.reporting.localization.Localization(__file__, 249, 0), module_type_store, 'c')

# Assigning a Dict to a Name (line 250):

# Assigning a Dict to a Name (line 250):

# Obtaining an instance of the builtin type 'dict' (line 250)
dict_75948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 250, 11), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 250)

# Assigning a type to the variable 'badnames' (line 250)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 250, 0), 'badnames', dict_75948)

# Assigning a Dict to a Name (line 251):

# Assigning a Dict to a Name (line 251):

# Obtaining an instance of the builtin type 'dict' (line 251)
dict_75949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 251, 14), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 251)

# Assigning a type to the variable 'invbadnames' (line 251)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 251, 0), 'invbadnames', dict_75949)


# Obtaining an instance of the builtin type 'list' (line 252)
list_75950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 9), 'list')
# Adding type elements to the builtin type 'list' instance (line 252)
# Adding element type (line 252)
str_75951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 10), 'str', 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75951)
# Adding element type (line 252)
str_75952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 17), 'str', 'double')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75952)
# Adding element type (line 252)
str_75953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 27), 'str', 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75953)
# Adding element type (line 252)
str_75954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 36), 'str', 'char')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75954)
# Adding element type (line 252)
str_75955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 44), 'str', 'short')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75955)
# Adding element type (line 252)
str_75956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 53), 'str', 'long')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75956)
# Adding element type (line 252)
str_75957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 61), 'str', 'void')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75957)
# Adding element type (line 252)
str_75958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 69), 'str', 'case')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75958)
# Adding element type (line 252)
str_75959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 77), 'str', 'while')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75959)
# Adding element type (line 252)
str_75960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 253, 10), 'str', 'return')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75960)
# Adding element type (line 252)
str_75961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 253, 20), 'str', 'signed')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75961)
# Adding element type (line 252)
str_75962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 253, 30), 'str', 'unsigned')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75962)
# Adding element type (line 252)
str_75963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 253, 42), 'str', 'if')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75963)
# Adding element type (line 252)
str_75964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 253, 48), 'str', 'for')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75964)
# Adding element type (line 252)
str_75965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 253, 55), 'str', 'typedef')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75965)
# Adding element type (line 252)
str_75966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 253, 66), 'str', 'sizeof')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75966)
# Adding element type (line 252)
str_75967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 253, 76), 'str', 'union')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75967)
# Adding element type (line 252)
str_75968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 10), 'str', 'struct')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75968)
# Adding element type (line 252)
str_75969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 20), 'str', 'static')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75969)
# Adding element type (line 252)
str_75970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 30), 'str', 'register')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75970)
# Adding element type (line 252)
str_75971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 42), 'str', 'new')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75971)
# Adding element type (line 252)
str_75972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 49), 'str', 'break')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75972)
# Adding element type (line 252)
str_75973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 58), 'str', 'do')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75973)
# Adding element type (line 252)
str_75974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 64), 'str', 'goto')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75974)
# Adding element type (line 252)
str_75975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 72), 'str', 'switch')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75975)
# Adding element type (line 252)
str_75976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 10), 'str', 'continue')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75976)
# Adding element type (line 252)
str_75977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 22), 'str', 'else')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75977)
# Adding element type (line 252)
str_75978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 30), 'str', 'inline')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75978)
# Adding element type (line 252)
str_75979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 40), 'str', 'extern')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75979)
# Adding element type (line 252)
str_75980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 50), 'str', 'delete')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75980)
# Adding element type (line 252)
str_75981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 60), 'str', 'const')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75981)
# Adding element type (line 252)
str_75982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 69), 'str', 'auto')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75982)
# Adding element type (line 252)
str_75983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 10), 'str', 'len')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75983)
# Adding element type (line 252)
str_75984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 17), 'str', 'rank')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75984)
# Adding element type (line 252)
str_75985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 25), 'str', 'shape')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75985)
# Adding element type (line 252)
str_75986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 34), 'str', 'index')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75986)
# Adding element type (line 252)
str_75987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 43), 'str', 'slen')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75987)
# Adding element type (line 252)
str_75988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 51), 'str', 'size')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75988)
# Adding element type (line 252)
str_75989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 59), 'str', '_i')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75989)
# Adding element type (line 252)
str_75990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 10), 'str', 'max')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75990)
# Adding element type (line 252)
str_75991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 17), 'str', 'min')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75991)
# Adding element type (line 252)
str_75992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 10), 'str', 'flen')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75992)
# Adding element type (line 252)
str_75993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 18), 'str', 'fshape')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75993)
# Adding element type (line 252)
str_75994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 10), 'str', 'string')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75994)
# Adding element type (line 252)
str_75995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 20), 'str', 'complex_double')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75995)
# Adding element type (line 252)
str_75996 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 38), 'str', 'float_double')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75996)
# Adding element type (line 252)
str_75997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 54), 'str', 'stdin')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75997)
# Adding element type (line 252)
str_75998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 63), 'str', 'stderr')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75998)
# Adding element type (line 252)
str_75999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 73), 'str', 'stdout')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_75999)
# Adding element type (line 252)
str_76000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 10), 'str', 'type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_76000)
# Adding element type (line 252)
str_76001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 18), 'str', 'default')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 9), list_75950, str_76001)

# Testing the type of a for loop iterable (line 252)
is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 252, 0), list_75950)
# Getting the type of the for loop variable (line 252)
for_loop_var_76002 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 252, 0), list_75950)
# Assigning a type to the variable 'n' (line 252)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 0), 'n', for_loop_var_76002)
# SSA begins for a for statement (line 252)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')

# Assigning a BinOp to a Subscript (line 261):

# Assigning a BinOp to a Subscript (line 261):
# Getting the type of 'n' (line 261)
n_76003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 18), 'n')
str_76004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 22), 'str', '_bn')
# Applying the binary operator '+' (line 261)
result_add_76005 = python_operator(stypy.reporting.localization.Localization(__file__, 261, 18), '+', n_76003, str_76004)

# Getting the type of 'badnames' (line 261)
badnames_76006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 4), 'badnames')
# Getting the type of 'n' (line 261)
n_76007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 13), 'n')
# Storing an element on a container (line 261)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 261, 4), badnames_76006, (n_76007, result_add_76005))

# Assigning a Name to a Subscript (line 262):

# Assigning a Name to a Subscript (line 262):
# Getting the type of 'n' (line 262)
n_76008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 29), 'n')
# Getting the type of 'invbadnames' (line 262)
invbadnames_76009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 4), 'invbadnames')
# Getting the type of 'n' (line 262)
n_76010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 16), 'n')
str_76011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 20), 'str', '_bn')
# Applying the binary operator '+' (line 262)
result_add_76012 = python_operator(stypy.reporting.localization.Localization(__file__, 262, 16), '+', n_76010, str_76011)

# Storing an element on a container (line 262)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 262, 4), invbadnames_76009, (result_add_76012, n_76008))
# SSA join for a for statement
module_type_store = module_type_store.join_ssa_context()


@norecursion
def rmbadname1(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'rmbadname1'
    module_type_store = module_type_store.open_function_context('rmbadname1', 265, 0, False)
    
    # Passed parameters checking function
    rmbadname1.stypy_localization = localization
    rmbadname1.stypy_type_of_self = None
    rmbadname1.stypy_type_store = module_type_store
    rmbadname1.stypy_function_name = 'rmbadname1'
    rmbadname1.stypy_param_names_list = ['name']
    rmbadname1.stypy_varargs_param_name = None
    rmbadname1.stypy_kwargs_param_name = None
    rmbadname1.stypy_call_defaults = defaults
    rmbadname1.stypy_call_varargs = varargs
    rmbadname1.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'rmbadname1', ['name'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'rmbadname1', localization, ['name'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'rmbadname1(...)' code ##################

    
    
    # Getting the type of 'name' (line 266)
    name_76013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 7), 'name')
    # Getting the type of 'badnames' (line 266)
    badnames_76014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 15), 'badnames')
    # Applying the binary operator 'in' (line 266)
    result_contains_76015 = python_operator(stypy.reporting.localization.Localization(__file__, 266, 7), 'in', name_76013, badnames_76014)
    
    # Testing the type of an if condition (line 266)
    if_condition_76016 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 266, 4), result_contains_76015)
    # Assigning a type to the variable 'if_condition_76016' (line 266)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 266, 4), 'if_condition_76016', if_condition_76016)
    # SSA begins for if statement (line 266)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to errmess(...): (line 267)
    # Processing the call arguments (line 267)
    str_76018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 16), 'str', 'rmbadname1: Replacing "%s" with "%s".\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 268)
    tuple_76019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 17), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 268)
    # Adding element type (line 268)
    # Getting the type of 'name' (line 268)
    name_76020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 17), 'name', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 17), tuple_76019, name_76020)
    # Adding element type (line 268)
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 268)
    name_76021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 32), 'name', False)
    # Getting the type of 'badnames' (line 268)
    badnames_76022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 23), 'badnames', False)
    # Obtaining the member '__getitem__' of a type (line 268)
    getitem___76023 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 268, 23), badnames_76022, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 268)
    subscript_call_result_76024 = invoke(stypy.reporting.localization.Localization(__file__, 268, 23), getitem___76023, name_76021)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 17), tuple_76019, subscript_call_result_76024)
    
    # Applying the binary operator '%' (line 267)
    result_mod_76025 = python_operator(stypy.reporting.localization.Localization(__file__, 267, 16), '%', str_76018, tuple_76019)
    
    # Processing the call keyword arguments (line 267)
    kwargs_76026 = {}
    # Getting the type of 'errmess' (line 267)
    errmess_76017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 8), 'errmess', False)
    # Calling errmess(args, kwargs) (line 267)
    errmess_call_result_76027 = invoke(stypy.reporting.localization.Localization(__file__, 267, 8), errmess_76017, *[result_mod_76025], **kwargs_76026)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 269)
    name_76028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 24), 'name')
    # Getting the type of 'badnames' (line 269)
    badnames_76029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 15), 'badnames')
    # Obtaining the member '__getitem__' of a type (line 269)
    getitem___76030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 15), badnames_76029, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 269)
    subscript_call_result_76031 = invoke(stypy.reporting.localization.Localization(__file__, 269, 15), getitem___76030, name_76028)
    
    # Assigning a type to the variable 'stypy_return_type' (line 269)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 8), 'stypy_return_type', subscript_call_result_76031)
    # SSA join for if statement (line 266)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'name' (line 270)
    name_76032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 11), 'name')
    # Assigning a type to the variable 'stypy_return_type' (line 270)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 4), 'stypy_return_type', name_76032)
    
    # ################# End of 'rmbadname1(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'rmbadname1' in the type store
    # Getting the type of 'stypy_return_type' (line 265)
    stypy_return_type_76033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_76033)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'rmbadname1'
    return stypy_return_type_76033

# Assigning a type to the variable 'rmbadname1' (line 265)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 0), 'rmbadname1', rmbadname1)

@norecursion
def rmbadname(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'rmbadname'
    module_type_store = module_type_store.open_function_context('rmbadname', 273, 0, False)
    
    # Passed parameters checking function
    rmbadname.stypy_localization = localization
    rmbadname.stypy_type_of_self = None
    rmbadname.stypy_type_store = module_type_store
    rmbadname.stypy_function_name = 'rmbadname'
    rmbadname.stypy_param_names_list = ['names']
    rmbadname.stypy_varargs_param_name = None
    rmbadname.stypy_kwargs_param_name = None
    rmbadname.stypy_call_defaults = defaults
    rmbadname.stypy_call_varargs = varargs
    rmbadname.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'rmbadname', ['names'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'rmbadname', localization, ['names'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'rmbadname(...)' code ##################

    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 'names' (line 274)
    names_76038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 37), 'names')
    comprehension_76039 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 274, 12), names_76038)
    # Assigning a type to the variable '_m' (line 274)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), '_m', comprehension_76039)
    
    # Call to rmbadname1(...): (line 274)
    # Processing the call arguments (line 274)
    # Getting the type of '_m' (line 274)
    _m_76035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 23), '_m', False)
    # Processing the call keyword arguments (line 274)
    kwargs_76036 = {}
    # Getting the type of 'rmbadname1' (line 274)
    rmbadname1_76034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'rmbadname1', False)
    # Calling rmbadname1(args, kwargs) (line 274)
    rmbadname1_call_result_76037 = invoke(stypy.reporting.localization.Localization(__file__, 274, 12), rmbadname1_76034, *[_m_76035], **kwargs_76036)
    
    list_76040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 274, 12), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 274, 12), list_76040, rmbadname1_call_result_76037)
    # Assigning a type to the variable 'stypy_return_type' (line 274)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 4), 'stypy_return_type', list_76040)
    
    # ################# End of 'rmbadname(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'rmbadname' in the type store
    # Getting the type of 'stypy_return_type' (line 273)
    stypy_return_type_76041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_76041)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'rmbadname'
    return stypy_return_type_76041

# Assigning a type to the variable 'rmbadname' (line 273)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 273, 0), 'rmbadname', rmbadname)

@norecursion
def undo_rmbadname1(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'undo_rmbadname1'
    module_type_store = module_type_store.open_function_context('undo_rmbadname1', 277, 0, False)
    
    # Passed parameters checking function
    undo_rmbadname1.stypy_localization = localization
    undo_rmbadname1.stypy_type_of_self = None
    undo_rmbadname1.stypy_type_store = module_type_store
    undo_rmbadname1.stypy_function_name = 'undo_rmbadname1'
    undo_rmbadname1.stypy_param_names_list = ['name']
    undo_rmbadname1.stypy_varargs_param_name = None
    undo_rmbadname1.stypy_kwargs_param_name = None
    undo_rmbadname1.stypy_call_defaults = defaults
    undo_rmbadname1.stypy_call_varargs = varargs
    undo_rmbadname1.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'undo_rmbadname1', ['name'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'undo_rmbadname1', localization, ['name'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'undo_rmbadname1(...)' code ##################

    
    
    # Getting the type of 'name' (line 278)
    name_76042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 7), 'name')
    # Getting the type of 'invbadnames' (line 278)
    invbadnames_76043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 15), 'invbadnames')
    # Applying the binary operator 'in' (line 278)
    result_contains_76044 = python_operator(stypy.reporting.localization.Localization(__file__, 278, 7), 'in', name_76042, invbadnames_76043)
    
    # Testing the type of an if condition (line 278)
    if_condition_76045 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 278, 4), result_contains_76044)
    # Assigning a type to the variable 'if_condition_76045' (line 278)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 4), 'if_condition_76045', if_condition_76045)
    # SSA begins for if statement (line 278)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to errmess(...): (line 279)
    # Processing the call arguments (line 279)
    str_76047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 16), 'str', 'undo_rmbadname1: Replacing "%s" with "%s".\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 280)
    tuple_76048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 19), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 280)
    # Adding element type (line 280)
    # Getting the type of 'name' (line 280)
    name_76049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 19), 'name', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 280, 19), tuple_76048, name_76049)
    # Adding element type (line 280)
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 280)
    name_76050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 37), 'name', False)
    # Getting the type of 'invbadnames' (line 280)
    invbadnames_76051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 25), 'invbadnames', False)
    # Obtaining the member '__getitem__' of a type (line 280)
    getitem___76052 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 25), invbadnames_76051, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 280)
    subscript_call_result_76053 = invoke(stypy.reporting.localization.Localization(__file__, 280, 25), getitem___76052, name_76050)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 280, 19), tuple_76048, subscript_call_result_76053)
    
    # Applying the binary operator '%' (line 279)
    result_mod_76054 = python_operator(stypy.reporting.localization.Localization(__file__, 279, 16), '%', str_76047, tuple_76048)
    
    # Processing the call keyword arguments (line 279)
    kwargs_76055 = {}
    # Getting the type of 'errmess' (line 279)
    errmess_76046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 8), 'errmess', False)
    # Calling errmess(args, kwargs) (line 279)
    errmess_call_result_76056 = invoke(stypy.reporting.localization.Localization(__file__, 279, 8), errmess_76046, *[result_mod_76054], **kwargs_76055)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 281)
    name_76057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 27), 'name')
    # Getting the type of 'invbadnames' (line 281)
    invbadnames_76058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 15), 'invbadnames')
    # Obtaining the member '__getitem__' of a type (line 281)
    getitem___76059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 15), invbadnames_76058, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 281)
    subscript_call_result_76060 = invoke(stypy.reporting.localization.Localization(__file__, 281, 15), getitem___76059, name_76057)
    
    # Assigning a type to the variable 'stypy_return_type' (line 281)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 281, 8), 'stypy_return_type', subscript_call_result_76060)
    # SSA join for if statement (line 278)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'name' (line 282)
    name_76061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 11), 'name')
    # Assigning a type to the variable 'stypy_return_type' (line 282)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 282, 4), 'stypy_return_type', name_76061)
    
    # ################# End of 'undo_rmbadname1(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'undo_rmbadname1' in the type store
    # Getting the type of 'stypy_return_type' (line 277)
    stypy_return_type_76062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_76062)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'undo_rmbadname1'
    return stypy_return_type_76062

# Assigning a type to the variable 'undo_rmbadname1' (line 277)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 0), 'undo_rmbadname1', undo_rmbadname1)

@norecursion
def undo_rmbadname(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'undo_rmbadname'
    module_type_store = module_type_store.open_function_context('undo_rmbadname', 285, 0, False)
    
    # Passed parameters checking function
    undo_rmbadname.stypy_localization = localization
    undo_rmbadname.stypy_type_of_self = None
    undo_rmbadname.stypy_type_store = module_type_store
    undo_rmbadname.stypy_function_name = 'undo_rmbadname'
    undo_rmbadname.stypy_param_names_list = ['names']
    undo_rmbadname.stypy_varargs_param_name = None
    undo_rmbadname.stypy_kwargs_param_name = None
    undo_rmbadname.stypy_call_defaults = defaults
    undo_rmbadname.stypy_call_varargs = varargs
    undo_rmbadname.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'undo_rmbadname', ['names'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'undo_rmbadname', localization, ['names'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'undo_rmbadname(...)' code ##################

    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 'names' (line 286)
    names_76067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 42), 'names')
    comprehension_76068 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 286, 12), names_76067)
    # Assigning a type to the variable '_m' (line 286)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 286, 12), '_m', comprehension_76068)
    
    # Call to undo_rmbadname1(...): (line 286)
    # Processing the call arguments (line 286)
    # Getting the type of '_m' (line 286)
    _m_76064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 28), '_m', False)
    # Processing the call keyword arguments (line 286)
    kwargs_76065 = {}
    # Getting the type of 'undo_rmbadname1' (line 286)
    undo_rmbadname1_76063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 12), 'undo_rmbadname1', False)
    # Calling undo_rmbadname1(args, kwargs) (line 286)
    undo_rmbadname1_call_result_76066 = invoke(stypy.reporting.localization.Localization(__file__, 286, 12), undo_rmbadname1_76063, *[_m_76064], **kwargs_76065)
    
    list_76069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 12), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 286, 12), list_76069, undo_rmbadname1_call_result_76066)
    # Assigning a type to the variable 'stypy_return_type' (line 286)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 286, 4), 'stypy_return_type', list_76069)
    
    # ################# End of 'undo_rmbadname(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'undo_rmbadname' in the type store
    # Getting the type of 'stypy_return_type' (line 285)
    stypy_return_type_76070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_76070)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'undo_rmbadname'
    return stypy_return_type_76070

# Assigning a type to the variable 'undo_rmbadname' (line 285)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 285, 0), 'undo_rmbadname', undo_rmbadname)

@norecursion
def getextension(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'getextension'
    module_type_store = module_type_store.open_function_context('getextension', 289, 0, False)
    
    # Passed parameters checking function
    getextension.stypy_localization = localization
    getextension.stypy_type_of_self = None
    getextension.stypy_type_store = module_type_store
    getextension.stypy_function_name = 'getextension'
    getextension.stypy_param_names_list = ['name']
    getextension.stypy_varargs_param_name = None
    getextension.stypy_kwargs_param_name = None
    getextension.stypy_call_defaults = defaults
    getextension.stypy_call_varargs = varargs
    getextension.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'getextension', ['name'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'getextension', localization, ['name'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'getextension(...)' code ##################

    
    # Assigning a Call to a Name (line 290):
    
    # Assigning a Call to a Name (line 290):
    
    # Call to rfind(...): (line 290)
    # Processing the call arguments (line 290)
    str_76073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 290, 19), 'str', '.')
    # Processing the call keyword arguments (line 290)
    kwargs_76074 = {}
    # Getting the type of 'name' (line 290)
    name_76071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 8), 'name', False)
    # Obtaining the member 'rfind' of a type (line 290)
    rfind_76072 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 290, 8), name_76071, 'rfind')
    # Calling rfind(args, kwargs) (line 290)
    rfind_call_result_76075 = invoke(stypy.reporting.localization.Localization(__file__, 290, 8), rfind_76072, *[str_76073], **kwargs_76074)
    
    # Assigning a type to the variable 'i' (line 290)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 290, 4), 'i', rfind_call_result_76075)
    
    
    # Getting the type of 'i' (line 291)
    i_76076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 7), 'i')
    int_76077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 291, 12), 'int')
    # Applying the binary operator '==' (line 291)
    result_eq_76078 = python_operator(stypy.reporting.localization.Localization(__file__, 291, 7), '==', i_76076, int_76077)
    
    # Testing the type of an if condition (line 291)
    if_condition_76079 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 291, 4), result_eq_76078)
    # Assigning a type to the variable 'if_condition_76079' (line 291)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 291, 4), 'if_condition_76079', if_condition_76079)
    # SSA begins for if statement (line 291)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    str_76080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 292, 15), 'str', '')
    # Assigning a type to the variable 'stypy_return_type' (line 292)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 8), 'stypy_return_type', str_76080)
    # SSA join for if statement (line 291)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_76081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 293, 7), 'str', '\\')
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 293)
    i_76082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 20), 'i')
    slice_76083 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 293, 15), i_76082, None, None)
    # Getting the type of 'name' (line 293)
    name_76084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 15), 'name')
    # Obtaining the member '__getitem__' of a type (line 293)
    getitem___76085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 293, 15), name_76084, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 293)
    subscript_call_result_76086 = invoke(stypy.reporting.localization.Localization(__file__, 293, 15), getitem___76085, slice_76083)
    
    # Applying the binary operator 'in' (line 293)
    result_contains_76087 = python_operator(stypy.reporting.localization.Localization(__file__, 293, 7), 'in', str_76081, subscript_call_result_76086)
    
    # Testing the type of an if condition (line 293)
    if_condition_76088 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 293, 4), result_contains_76087)
    # Assigning a type to the variable 'if_condition_76088' (line 293)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 293, 4), 'if_condition_76088', if_condition_76088)
    # SSA begins for if statement (line 293)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    str_76089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 294, 15), 'str', '')
    # Assigning a type to the variable 'stypy_return_type' (line 294)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 294, 8), 'stypy_return_type', str_76089)
    # SSA join for if statement (line 293)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_76090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 295, 7), 'str', '/')
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 295)
    i_76091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 19), 'i')
    slice_76092 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 295, 14), i_76091, None, None)
    # Getting the type of 'name' (line 295)
    name_76093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 14), 'name')
    # Obtaining the member '__getitem__' of a type (line 295)
    getitem___76094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 295, 14), name_76093, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 295)
    subscript_call_result_76095 = invoke(stypy.reporting.localization.Localization(__file__, 295, 14), getitem___76094, slice_76092)
    
    # Applying the binary operator 'in' (line 295)
    result_contains_76096 = python_operator(stypy.reporting.localization.Localization(__file__, 295, 7), 'in', str_76090, subscript_call_result_76095)
    
    # Testing the type of an if condition (line 295)
    if_condition_76097 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 295, 4), result_contains_76096)
    # Assigning a type to the variable 'if_condition_76097' (line 295)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 295, 4), 'if_condition_76097', if_condition_76097)
    # SSA begins for if statement (line 295)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    str_76098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 296, 15), 'str', '')
    # Assigning a type to the variable 'stypy_return_type' (line 296)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 8), 'stypy_return_type', str_76098)
    # SSA join for if statement (line 295)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 297)
    i_76099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 16), 'i')
    int_76100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 297, 20), 'int')
    # Applying the binary operator '+' (line 297)
    result_add_76101 = python_operator(stypy.reporting.localization.Localization(__file__, 297, 16), '+', i_76099, int_76100)
    
    slice_76102 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 297, 11), result_add_76101, None, None)
    # Getting the type of 'name' (line 297)
    name_76103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 11), 'name')
    # Obtaining the member '__getitem__' of a type (line 297)
    getitem___76104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 297, 11), name_76103, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 297)
    subscript_call_result_76105 = invoke(stypy.reporting.localization.Localization(__file__, 297, 11), getitem___76104, slice_76102)
    
    # Assigning a type to the variable 'stypy_return_type' (line 297)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 297, 4), 'stypy_return_type', subscript_call_result_76105)
    
    # ################# End of 'getextension(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'getextension' in the type store
    # Getting the type of 'stypy_return_type' (line 289)
    stypy_return_type_76106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_76106)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'getextension'
    return stypy_return_type_76106

# Assigning a type to the variable 'getextension' (line 289)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 0), 'getextension', getextension)

# Assigning a Attribute to a Name (line 299):

# Assigning a Attribute to a Name (line 299):

# Call to compile(...): (line 299)
# Processing the call arguments (line 299)
str_76109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 23), 'str', '.*[.](for|ftn|f77|f)\\Z')
# Getting the type of 're' (line 299)
re_76110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 50), 're', False)
# Obtaining the member 'I' of a type (line 299)
I_76111 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 299, 50), re_76110, 'I')
# Processing the call keyword arguments (line 299)
kwargs_76112 = {}
# Getting the type of 're' (line 299)
re_76107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 12), 're', False)
# Obtaining the member 'compile' of a type (line 299)
compile_76108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 299, 12), re_76107, 'compile')
# Calling compile(args, kwargs) (line 299)
compile_call_result_76113 = invoke(stypy.reporting.localization.Localization(__file__, 299, 12), compile_76108, *[str_76109, I_76111], **kwargs_76112)

# Obtaining the member 'match' of a type (line 299)
match_76114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 299, 12), compile_call_result_76113, 'match')
# Assigning a type to the variable 'is_f_file' (line 299)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 299, 0), 'is_f_file', match_76114)

# Assigning a Attribute to a Name (line 300):

# Assigning a Attribute to a Name (line 300):

# Call to compile(...): (line 300)
# Processing the call arguments (line 300)
str_76117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 27), 'str', '-[*]-\\s*fortran\\s*-[*]-')
# Getting the type of 're' (line 300)
re_76118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 55), 're', False)
# Obtaining the member 'I' of a type (line 300)
I_76119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 300, 55), re_76118, 'I')
# Processing the call keyword arguments (line 300)
kwargs_76120 = {}
# Getting the type of 're' (line 300)
re_76115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 16), 're', False)
# Obtaining the member 'compile' of a type (line 300)
compile_76116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 300, 16), re_76115, 'compile')
# Calling compile(args, kwargs) (line 300)
compile_call_result_76121 = invoke(stypy.reporting.localization.Localization(__file__, 300, 16), compile_76116, *[str_76117, I_76119], **kwargs_76120)

# Obtaining the member 'search' of a type (line 300)
search_76122 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 300, 16), compile_call_result_76121, 'search')
# Assigning a type to the variable '_has_f_header' (line 300)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 300, 0), '_has_f_header', search_76122)

# Assigning a Attribute to a Name (line 301):

# Assigning a Attribute to a Name (line 301):

# Call to compile(...): (line 301)
# Processing the call arguments (line 301)
str_76125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 301, 29), 'str', '-[*]-\\s*f90\\s*-[*]-')
# Getting the type of 're' (line 301)
re_76126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 53), 're', False)
# Obtaining the member 'I' of a type (line 301)
I_76127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 301, 53), re_76126, 'I')
# Processing the call keyword arguments (line 301)
kwargs_76128 = {}
# Getting the type of 're' (line 301)
re_76123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 18), 're', False)
# Obtaining the member 'compile' of a type (line 301)
compile_76124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 301, 18), re_76123, 'compile')
# Calling compile(args, kwargs) (line 301)
compile_call_result_76129 = invoke(stypy.reporting.localization.Localization(__file__, 301, 18), compile_76124, *[str_76125, I_76127], **kwargs_76128)

# Obtaining the member 'search' of a type (line 301)
search_76130 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 301, 18), compile_call_result_76129, 'search')
# Assigning a type to the variable '_has_f90_header' (line 301)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 301, 0), '_has_f90_header', search_76130)

# Assigning a Attribute to a Name (line 302):

# Assigning a Attribute to a Name (line 302):

# Call to compile(...): (line 302)
# Processing the call arguments (line 302)
str_76133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 302, 29), 'str', '-[*]-\\s*fix\\s*-[*]-')
# Getting the type of 're' (line 302)
re_76134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 53), 're', False)
# Obtaining the member 'I' of a type (line 302)
I_76135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 302, 53), re_76134, 'I')
# Processing the call keyword arguments (line 302)
kwargs_76136 = {}
# Getting the type of 're' (line 302)
re_76131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 18), 're', False)
# Obtaining the member 'compile' of a type (line 302)
compile_76132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 302, 18), re_76131, 'compile')
# Calling compile(args, kwargs) (line 302)
compile_call_result_76137 = invoke(stypy.reporting.localization.Localization(__file__, 302, 18), compile_76132, *[str_76133, I_76135], **kwargs_76136)

# Obtaining the member 'search' of a type (line 302)
search_76138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 302, 18), compile_call_result_76137, 'search')
# Assigning a type to the variable '_has_fix_header' (line 302)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 302, 0), '_has_fix_header', search_76138)

# Assigning a Attribute to a Name (line 303):

# Assigning a Attribute to a Name (line 303):

# Call to compile(...): (line 303)
# Processing the call arguments (line 303)
str_76141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 303, 29), 'str', '[^c*]\\s*[^\\s\\d\\t]')
# Getting the type of 're' (line 303)
re_76142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 51), 're', False)
# Obtaining the member 'I' of a type (line 303)
I_76143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 51), re_76142, 'I')
# Processing the call keyword arguments (line 303)
kwargs_76144 = {}
# Getting the type of 're' (line 303)
re_76139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 18), 're', False)
# Obtaining the member 'compile' of a type (line 303)
compile_76140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 18), re_76139, 'compile')
# Calling compile(args, kwargs) (line 303)
compile_call_result_76145 = invoke(stypy.reporting.localization.Localization(__file__, 303, 18), compile_76140, *[str_76141, I_76143], **kwargs_76144)

# Obtaining the member 'match' of a type (line 303)
match_76146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 18), compile_call_result_76145, 'match')
# Assigning a type to the variable '_free_f90_start' (line 303)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 303, 0), '_free_f90_start', match_76146)

@norecursion
def is_free_format(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'is_free_format'
    module_type_store = module_type_store.open_function_context('is_free_format', 306, 0, False)
    
    # Passed parameters checking function
    is_free_format.stypy_localization = localization
    is_free_format.stypy_type_of_self = None
    is_free_format.stypy_type_store = module_type_store
    is_free_format.stypy_function_name = 'is_free_format'
    is_free_format.stypy_param_names_list = ['file']
    is_free_format.stypy_varargs_param_name = None
    is_free_format.stypy_kwargs_param_name = None
    is_free_format.stypy_call_defaults = defaults
    is_free_format.stypy_call_varargs = varargs
    is_free_format.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'is_free_format', ['file'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'is_free_format', localization, ['file'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'is_free_format(...)' code ##################

    str_76147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, 4), 'str', 'Check if file is in free format Fortran.')
    
    # Assigning a Num to a Name (line 310):
    
    # Assigning a Num to a Name (line 310):
    int_76148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 13), 'int')
    # Assigning a type to the variable 'result' (line 310)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 310, 4), 'result', int_76148)
    
    # Assigning a Call to a Name (line 311):
    
    # Assigning a Call to a Name (line 311):
    
    # Call to open(...): (line 311)
    # Processing the call arguments (line 311)
    # Getting the type of 'file' (line 311)
    file_76150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 13), 'file', False)
    str_76151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 311, 19), 'str', 'r')
    # Processing the call keyword arguments (line 311)
    kwargs_76152 = {}
    # Getting the type of 'open' (line 311)
    open_76149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 8), 'open', False)
    # Calling open(args, kwargs) (line 311)
    open_call_result_76153 = invoke(stypy.reporting.localization.Localization(__file__, 311, 8), open_76149, *[file_76150, str_76151], **kwargs_76152)
    
    # Assigning a type to the variable 'f' (line 311)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 311, 4), 'f', open_call_result_76153)
    
    # Assigning a Call to a Name (line 312):
    
    # Assigning a Call to a Name (line 312):
    
    # Call to readline(...): (line 312)
    # Processing the call keyword arguments (line 312)
    kwargs_76156 = {}
    # Getting the type of 'f' (line 312)
    f_76154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 11), 'f', False)
    # Obtaining the member 'readline' of a type (line 312)
    readline_76155 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 11), f_76154, 'readline')
    # Calling readline(args, kwargs) (line 312)
    readline_call_result_76157 = invoke(stypy.reporting.localization.Localization(__file__, 312, 11), readline_76155, *[], **kwargs_76156)
    
    # Assigning a type to the variable 'line' (line 312)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 312, 4), 'line', readline_call_result_76157)
    
    # Assigning a Num to a Name (line 313):
    
    # Assigning a Num to a Name (line 313):
    int_76158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 8), 'int')
    # Assigning a type to the variable 'n' (line 313)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 313, 4), 'n', int_76158)
    
    
    # Call to _has_f_header(...): (line 314)
    # Processing the call arguments (line 314)
    # Getting the type of 'line' (line 314)
    line_76160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 21), 'line', False)
    # Processing the call keyword arguments (line 314)
    kwargs_76161 = {}
    # Getting the type of '_has_f_header' (line 314)
    _has_f_header_76159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 7), '_has_f_header', False)
    # Calling _has_f_header(args, kwargs) (line 314)
    _has_f_header_call_result_76162 = invoke(stypy.reporting.localization.Localization(__file__, 314, 7), _has_f_header_76159, *[line_76160], **kwargs_76161)
    
    # Testing the type of an if condition (line 314)
    if_condition_76163 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 314, 4), _has_f_header_call_result_76162)
    # Assigning a type to the variable 'if_condition_76163' (line 314)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 314, 4), 'if_condition_76163', if_condition_76163)
    # SSA begins for if statement (line 314)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 315):
    
    # Assigning a Num to a Name (line 315):
    int_76164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 12), 'int')
    # Assigning a type to the variable 'n' (line 315)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 315, 8), 'n', int_76164)
    # SSA branch for the else part of an if statement (line 314)
    module_type_store.open_ssa_branch('else')
    
    
    # Call to _has_f90_header(...): (line 316)
    # Processing the call arguments (line 316)
    # Getting the type of 'line' (line 316)
    line_76166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 25), 'line', False)
    # Processing the call keyword arguments (line 316)
    kwargs_76167 = {}
    # Getting the type of '_has_f90_header' (line 316)
    _has_f90_header_76165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 9), '_has_f90_header', False)
    # Calling _has_f90_header(args, kwargs) (line 316)
    _has_f90_header_call_result_76168 = invoke(stypy.reporting.localization.Localization(__file__, 316, 9), _has_f90_header_76165, *[line_76166], **kwargs_76167)
    
    # Testing the type of an if condition (line 316)
    if_condition_76169 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 316, 9), _has_f90_header_call_result_76168)
    # Assigning a type to the variable 'if_condition_76169' (line 316)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 316, 9), 'if_condition_76169', if_condition_76169)
    # SSA begins for if statement (line 316)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 317):
    
    # Assigning a Num to a Name (line 317):
    int_76170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 12), 'int')
    # Assigning a type to the variable 'n' (line 317)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 317, 8), 'n', int_76170)
    
    # Assigning a Num to a Name (line 318):
    
    # Assigning a Num to a Name (line 318):
    int_76171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 17), 'int')
    # Assigning a type to the variable 'result' (line 318)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 318, 8), 'result', int_76171)
    # SSA join for if statement (line 316)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 314)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'n' (line 319)
    n_76172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 10), 'n')
    int_76173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 14), 'int')
    # Applying the binary operator '>' (line 319)
    result_gt_76174 = python_operator(stypy.reporting.localization.Localization(__file__, 319, 10), '>', n_76172, int_76173)
    
    # Getting the type of 'line' (line 319)
    line_76175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 20), 'line')
    # Applying the binary operator 'and' (line 319)
    result_and_keyword_76176 = python_operator(stypy.reporting.localization.Localization(__file__, 319, 10), 'and', result_gt_76174, line_76175)
    
    # Testing the type of an if condition (line 319)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 319, 4), result_and_keyword_76176)
    # SSA begins for while statement (line 319)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    
    # Evaluating a boolean operation
    
    
    # Obtaining the type of the subscript
    int_76177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 16), 'int')
    # Getting the type of 'line' (line 320)
    line_76178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 11), 'line')
    # Obtaining the member '__getitem__' of a type (line 320)
    getitem___76179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 320, 11), line_76178, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 320)
    subscript_call_result_76180 = invoke(stypy.reporting.localization.Localization(__file__, 320, 11), getitem___76179, int_76177)
    
    str_76181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 22), 'str', '!')
    # Applying the binary operator '!=' (line 320)
    result_ne_76182 = python_operator(stypy.reporting.localization.Localization(__file__, 320, 11), '!=', subscript_call_result_76180, str_76181)
    
    
    # Call to strip(...): (line 320)
    # Processing the call keyword arguments (line 320)
    kwargs_76185 = {}
    # Getting the type of 'line' (line 320)
    line_76183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 30), 'line', False)
    # Obtaining the member 'strip' of a type (line 320)
    strip_76184 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 320, 30), line_76183, 'strip')
    # Calling strip(args, kwargs) (line 320)
    strip_call_result_76186 = invoke(stypy.reporting.localization.Localization(__file__, 320, 30), strip_76184, *[], **kwargs_76185)
    
    # Applying the binary operator 'and' (line 320)
    result_and_keyword_76187 = python_operator(stypy.reporting.localization.Localization(__file__, 320, 11), 'and', result_ne_76182, strip_call_result_76186)
    
    # Testing the type of an if condition (line 320)
    if_condition_76188 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 320, 8), result_and_keyword_76187)
    # Assigning a type to the variable 'if_condition_76188' (line 320)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 320, 8), 'if_condition_76188', if_condition_76188)
    # SSA begins for if statement (line 320)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'n' (line 321)
    n_76189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 12), 'n')
    int_76190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 17), 'int')
    # Applying the binary operator '-=' (line 321)
    result_isub_76191 = python_operator(stypy.reporting.localization.Localization(__file__, 321, 12), '-=', n_76189, int_76190)
    # Assigning a type to the variable 'n' (line 321)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 12), 'n', result_isub_76191)
    
    
    
    # Evaluating a boolean operation
    
    # Evaluating a boolean operation
    
    
    # Obtaining the type of the subscript
    int_76192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 21), 'int')
    # Getting the type of 'line' (line 322)
    line_76193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 16), 'line')
    # Obtaining the member '__getitem__' of a type (line 322)
    getitem___76194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 16), line_76193, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 322)
    subscript_call_result_76195 = invoke(stypy.reporting.localization.Localization(__file__, 322, 16), getitem___76194, int_76192)
    
    str_76196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 27), 'str', '\t')
    # Applying the binary operator '!=' (line 322)
    result_ne_76197 = python_operator(stypy.reporting.localization.Localization(__file__, 322, 16), '!=', subscript_call_result_76195, str_76196)
    
    
    # Call to _free_f90_start(...): (line 322)
    # Processing the call arguments (line 322)
    
    # Obtaining the type of the subscript
    int_76199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 58), 'int')
    slice_76200 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 322, 52), None, int_76199, None)
    # Getting the type of 'line' (line 322)
    line_76201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 52), 'line', False)
    # Obtaining the member '__getitem__' of a type (line 322)
    getitem___76202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 52), line_76201, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 322)
    subscript_call_result_76203 = invoke(stypy.reporting.localization.Localization(__file__, 322, 52), getitem___76202, slice_76200)
    
    # Processing the call keyword arguments (line 322)
    kwargs_76204 = {}
    # Getting the type of '_free_f90_start' (line 322)
    _free_f90_start_76198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 36), '_free_f90_start', False)
    # Calling _free_f90_start(args, kwargs) (line 322)
    _free_f90_start_call_result_76205 = invoke(stypy.reporting.localization.Localization(__file__, 322, 36), _free_f90_start_76198, *[subscript_call_result_76203], **kwargs_76204)
    
    # Applying the binary operator 'and' (line 322)
    result_and_keyword_76206 = python_operator(stypy.reporting.localization.Localization(__file__, 322, 16), 'and', result_ne_76197, _free_f90_start_call_result_76205)
    
    
    
    # Obtaining the type of the subscript
    int_76207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 71), 'int')
    int_76208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 74), 'int')
    slice_76209 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 322, 66), int_76207, int_76208, None)
    # Getting the type of 'line' (line 322)
    line_76210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 66), 'line')
    # Obtaining the member '__getitem__' of a type (line 322)
    getitem___76211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 66), line_76210, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 322)
    subscript_call_result_76212 = invoke(stypy.reporting.localization.Localization(__file__, 322, 66), getitem___76211, slice_76209)
    
    str_76213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 81), 'str', '&')
    # Applying the binary operator '==' (line 322)
    result_eq_76214 = python_operator(stypy.reporting.localization.Localization(__file__, 322, 66), '==', subscript_call_result_76212, str_76213)
    
    # Applying the binary operator 'or' (line 322)
    result_or_keyword_76215 = python_operator(stypy.reporting.localization.Localization(__file__, 322, 15), 'or', result_and_keyword_76206, result_eq_76214)
    
    # Testing the type of an if condition (line 322)
    if_condition_76216 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 322, 12), result_or_keyword_76215)
    # Assigning a type to the variable 'if_condition_76216' (line 322)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 322, 12), 'if_condition_76216', if_condition_76216)
    # SSA begins for if statement (line 322)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 323):
    
    # Assigning a Num to a Name (line 323):
    int_76217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 323, 25), 'int')
    # Assigning a type to the variable 'result' (line 323)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 323, 16), 'result', int_76217)
    # SSA join for if statement (line 322)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 320)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 325):
    
    # Assigning a Call to a Name (line 325):
    
    # Call to readline(...): (line 325)
    # Processing the call keyword arguments (line 325)
    kwargs_76220 = {}
    # Getting the type of 'f' (line 325)
    f_76218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 15), 'f', False)
    # Obtaining the member 'readline' of a type (line 325)
    readline_76219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 325, 15), f_76218, 'readline')
    # Calling readline(args, kwargs) (line 325)
    readline_call_result_76221 = invoke(stypy.reporting.localization.Localization(__file__, 325, 15), readline_76219, *[], **kwargs_76220)
    
    # Assigning a type to the variable 'line' (line 325)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 325, 8), 'line', readline_call_result_76221)
    # SSA join for while statement (line 319)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to close(...): (line 326)
    # Processing the call keyword arguments (line 326)
    kwargs_76224 = {}
    # Getting the type of 'f' (line 326)
    f_76222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 4), 'f', False)
    # Obtaining the member 'close' of a type (line 326)
    close_76223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 326, 4), f_76222, 'close')
    # Calling close(args, kwargs) (line 326)
    close_call_result_76225 = invoke(stypy.reporting.localization.Localization(__file__, 326, 4), close_76223, *[], **kwargs_76224)
    
    # Getting the type of 'result' (line 327)
    result_76226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 11), 'result')
    # Assigning a type to the variable 'stypy_return_type' (line 327)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 327, 4), 'stypy_return_type', result_76226)
    
    # ################# End of 'is_free_format(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'is_free_format' in the type store
    # Getting the type of 'stypy_return_type' (line 306)
    stypy_return_type_76227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_76227)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'is_free_format'
    return stypy_return_type_76227

# Assigning a type to the variable 'is_free_format' (line 306)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 0), 'is_free_format', is_free_format)

@norecursion
def readfortrancode(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'show' (line 331)
    show_76228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 38), 'show')
    int_76229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 331, 50), 'int')
    defaults = [show_76228, int_76229]
    # Create a new context for function 'readfortrancode'
    module_type_store = module_type_store.open_function_context('readfortrancode', 331, 0, False)
    
    # Passed parameters checking function
    readfortrancode.stypy_localization = localization
    readfortrancode.stypy_type_of_self = None
    readfortrancode.stypy_type_store = module_type_store
    readfortrancode.stypy_function_name = 'readfortrancode'
    readfortrancode.stypy_param_names_list = ['ffile', 'dowithline', 'istop']
    readfortrancode.stypy_varargs_param_name = None
    readfortrancode.stypy_kwargs_param_name = None
    readfortrancode.stypy_call_defaults = defaults
    readfortrancode.stypy_call_varargs = varargs
    readfortrancode.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'readfortrancode', ['ffile', 'dowithline', 'istop'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'readfortrancode', localization, ['ffile', 'dowithline', 'istop'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'readfortrancode(...)' code ##################

    str_76230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 337, (-1)), 'str', '\n    Read fortran codes from files and\n     1) Get rid of comments, line continuations, and empty lines; lower cases.\n     2) Call dowithline(line) on every line.\n     3) Recursively call itself when statement "include \'<filename>\'" is met.\n    ')
    # Marking variables as global (line 338)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 338, 4), 'gotnextfile')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 338, 4), 'filepositiontext')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 338, 4), 'currentfilename')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 338, 4), 'sourcecodeform')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 338, 4), 'strictf77')
    # Marking variables as global (line 339)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 339, 4), 'beginpattern')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 339, 4), 'quiet')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 339, 4), 'verbose')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 339, 4), 'dolowercase')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 339, 4), 'include_paths')
    
    
    # Getting the type of 'istop' (line 341)
    istop_76231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 11), 'istop')
    # Applying the 'not' unary operator (line 341)
    result_not__76232 = python_operator(stypy.reporting.localization.Localization(__file__, 341, 7), 'not', istop_76231)
    
    # Testing the type of an if condition (line 341)
    if_condition_76233 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 341, 4), result_not__76232)
    # Assigning a type to the variable 'if_condition_76233' (line 341)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 341, 4), 'if_condition_76233', if_condition_76233)
    # SSA begins for if statement (line 341)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Tuple to a Name (line 342):
    
    # Assigning a Tuple to a Name (line 342):
    
    # Obtaining an instance of the builtin type 'tuple' (line 342)
    tuple_76234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 22), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 342)
    # Adding element type (line 342)
    # Getting the type of 'gotnextfile' (line 342)
    gotnextfile_76235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 22), 'gotnextfile')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 22), tuple_76234, gotnextfile_76235)
    # Adding element type (line 342)
    # Getting the type of 'filepositiontext' (line 342)
    filepositiontext_76236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 35), 'filepositiontext')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 22), tuple_76234, filepositiontext_76236)
    # Adding element type (line 342)
    # Getting the type of 'currentfilename' (line 342)
    currentfilename_76237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 53), 'currentfilename')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 22), tuple_76234, currentfilename_76237)
    # Adding element type (line 342)
    # Getting the type of 'sourcecodeform' (line 342)
    sourcecodeform_76238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 70), 'sourcecodeform')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 22), tuple_76234, sourcecodeform_76238)
    # Adding element type (line 342)
    # Getting the type of 'strictf77' (line 342)
    strictf77_76239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 86), 'strictf77')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 22), tuple_76234, strictf77_76239)
    # Adding element type (line 342)
    # Getting the type of 'beginpattern' (line 343)
    beginpattern_76240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 12), 'beginpattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 22), tuple_76234, beginpattern_76240)
    # Adding element type (line 342)
    # Getting the type of 'quiet' (line 343)
    quiet_76241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 26), 'quiet')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 22), tuple_76234, quiet_76241)
    # Adding element type (line 342)
    # Getting the type of 'verbose' (line 343)
    verbose_76242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 33), 'verbose')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 22), tuple_76234, verbose_76242)
    # Adding element type (line 342)
    # Getting the type of 'dolowercase' (line 343)
    dolowercase_76243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 42), 'dolowercase')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 22), tuple_76234, dolowercase_76243)
    
    # Assigning a type to the variable 'saveglobals' (line 342)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 342, 8), 'saveglobals', tuple_76234)
    # SSA join for if statement (line 341)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'ffile' (line 344)
    ffile_76244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 7), 'ffile')
    
    # Obtaining an instance of the builtin type 'list' (line 344)
    list_76245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 344, 16), 'list')
    # Adding type elements to the builtin type 'list' instance (line 344)
    
    # Applying the binary operator '==' (line 344)
    result_eq_76246 = python_operator(stypy.reporting.localization.Localization(__file__, 344, 7), '==', ffile_76244, list_76245)
    
    # Testing the type of an if condition (line 344)
    if_condition_76247 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 344, 4), result_eq_76246)
    # Assigning a type to the variable 'if_condition_76247' (line 344)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 344, 4), 'if_condition_76247', if_condition_76247)
    # SSA begins for if statement (line 344)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Assigning a type to the variable 'stypy_return_type' (line 345)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 345, 8), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 344)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 346):
    
    # Assigning a Name to a Name (line 346):
    # Getting the type of 'dolowercase' (line 346)
    dolowercase_76248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 23), 'dolowercase')
    # Assigning a type to the variable 'localdolowercase' (line 346)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 346, 4), 'localdolowercase', dolowercase_76248)
    
    # Assigning a Num to a Name (line 347):
    
    # Assigning a Num to a Name (line 347):
    int_76249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 347, 11), 'int')
    # Assigning a type to the variable 'cont' (line 347)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 4), 'cont', int_76249)
    
    # Assigning a Str to a Name (line 348):
    
    # Assigning a Str to a Name (line 348):
    str_76250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 348, 16), 'str', '')
    # Assigning a type to the variable 'finalline' (line 348)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 348, 4), 'finalline', str_76250)
    
    # Assigning a Str to a Name (line 349):
    
    # Assigning a Str to a Name (line 349):
    str_76251 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 349, 9), 'str', '')
    # Assigning a type to the variable 'll' (line 349)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 349, 4), 'll', str_76251)
    
    # Assigning a Call to a Name (line 350):
    
    # Assigning a Call to a Name (line 350):
    
    # Call to compile(...): (line 350)
    # Processing the call arguments (line 350)
    str_76254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 351, 8), 'str', '(?P<line>([^"]*["][^"]*["][^"!]*|[^\\\']*\\\'[^\\\']*\\\'[^\\\'!]*|[^!\\\'"]*))!{1}(?P<rest>.*)')
    # Processing the call keyword arguments (line 350)
    kwargs_76255 = {}
    # Getting the type of 're' (line 350)
    re_76252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 18), 're', False)
    # Obtaining the member 'compile' of a type (line 350)
    compile_76253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 18), re_76252, 'compile')
    # Calling compile(args, kwargs) (line 350)
    compile_call_result_76256 = invoke(stypy.reporting.localization.Localization(__file__, 350, 18), compile_76253, *[str_76254], **kwargs_76255)
    
    # Assigning a type to the variable 'commentline' (line 350)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 350, 4), 'commentline', compile_call_result_76256)
    
    # Assigning a Call to a Name (line 352):
    
    # Assigning a Call to a Name (line 352):
    
    # Call to compile(...): (line 352)
    # Processing the call arguments (line 352)
    str_76259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 8), 'str', '\\s*include\\s*(\\\'|")(?P<name>[^\\\'"]*)(\\\'|")')
    # Getting the type of 're' (line 353)
    re_76260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 55), 're', False)
    # Obtaining the member 'I' of a type (line 353)
    I_76261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 353, 55), re_76260, 'I')
    # Processing the call keyword arguments (line 352)
    kwargs_76262 = {}
    # Getting the type of 're' (line 352)
    re_76257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 18), 're', False)
    # Obtaining the member 'compile' of a type (line 352)
    compile_76258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 18), re_76257, 'compile')
    # Calling compile(args, kwargs) (line 352)
    compile_call_result_76263 = invoke(stypy.reporting.localization.Localization(__file__, 352, 18), compile_76258, *[str_76259, I_76261], **kwargs_76262)
    
    # Assigning a type to the variable 'includeline' (line 352)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 352, 4), 'includeline', compile_call_result_76263)
    
    # Assigning a Call to a Name (line 354):
    
    # Assigning a Call to a Name (line 354):
    
    # Call to compile(...): (line 354)
    # Processing the call arguments (line 354)
    str_76266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 354, 23), 'str', '(?P<line>.*)&\\s*\\Z')
    # Processing the call keyword arguments (line 354)
    kwargs_76267 = {}
    # Getting the type of 're' (line 354)
    re_76264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 12), 're', False)
    # Obtaining the member 'compile' of a type (line 354)
    compile_76265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 12), re_76264, 'compile')
    # Calling compile(args, kwargs) (line 354)
    compile_call_result_76268 = invoke(stypy.reporting.localization.Localization(__file__, 354, 12), compile_76265, *[str_76266], **kwargs_76267)
    
    # Assigning a type to the variable 'cont1' (line 354)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 4), 'cont1', compile_call_result_76268)
    
    # Assigning a Call to a Name (line 355):
    
    # Assigning a Call to a Name (line 355):
    
    # Call to compile(...): (line 355)
    # Processing the call arguments (line 355)
    str_76271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 355, 23), 'str', '(\\s*&|)(?P<line>.*)')
    # Processing the call keyword arguments (line 355)
    kwargs_76272 = {}
    # Getting the type of 're' (line 355)
    re_76269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 12), 're', False)
    # Obtaining the member 'compile' of a type (line 355)
    compile_76270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 355, 12), re_76269, 'compile')
    # Calling compile(args, kwargs) (line 355)
    compile_call_result_76273 = invoke(stypy.reporting.localization.Localization(__file__, 355, 12), compile_76270, *[str_76271], **kwargs_76272)
    
    # Assigning a type to the variable 'cont2' (line 355)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 355, 4), 'cont2', compile_call_result_76273)
    
    # Assigning a Call to a Name (line 356):
    
    # Assigning a Call to a Name (line 356):
    
    # Call to compile(...): (line 356)
    # Processing the call arguments (line 356)
    str_76276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 356, 28), 'str', ".*?'''")
    # Processing the call keyword arguments (line 356)
    kwargs_76277 = {}
    # Getting the type of 're' (line 356)
    re_76274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 17), 're', False)
    # Obtaining the member 'compile' of a type (line 356)
    compile_76275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 17), re_76274, 'compile')
    # Calling compile(args, kwargs) (line 356)
    compile_call_result_76278 = invoke(stypy.reporting.localization.Localization(__file__, 356, 17), compile_76275, *[str_76276], **kwargs_76277)
    
    # Assigning a type to the variable 'mline_mark' (line 356)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 356, 4), 'mline_mark', compile_call_result_76278)
    
    # Getting the type of 'istop' (line 357)
    istop_76279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 7), 'istop')
    # Testing the type of an if condition (line 357)
    if_condition_76280 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 357, 4), istop_76279)
    # Assigning a type to the variable 'if_condition_76280' (line 357)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 4), 'if_condition_76280', if_condition_76280)
    # SSA begins for if statement (line 357)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to dowithline(...): (line 358)
    # Processing the call arguments (line 358)
    str_76282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 19), 'str', '')
    int_76283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 23), 'int')
    # Processing the call keyword arguments (line 358)
    kwargs_76284 = {}
    # Getting the type of 'dowithline' (line 358)
    dowithline_76281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 8), 'dowithline', False)
    # Calling dowithline(args, kwargs) (line 358)
    dowithline_call_result_76285 = invoke(stypy.reporting.localization.Localization(__file__, 358, 8), dowithline_76281, *[str_76282, int_76283], **kwargs_76284)
    
    # SSA join for if statement (line 357)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Tuple to a Tuple (line 359):
    
    # Assigning a Str to a Name (line 359):
    str_76286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 359, 13), 'str', '')
    # Assigning a type to the variable 'tuple_assignment_75759' (line 359)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 359, 4), 'tuple_assignment_75759', str_76286)
    
    # Assigning a Str to a Name (line 359):
    str_76287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 359, 17), 'str', '')
    # Assigning a type to the variable 'tuple_assignment_75760' (line 359)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 359, 4), 'tuple_assignment_75760', str_76287)
    
    # Assigning a Name to a Name (line 359):
    # Getting the type of 'tuple_assignment_75759' (line 359)
    tuple_assignment_75759_76288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 4), 'tuple_assignment_75759')
    # Assigning a type to the variable 'll' (line 359)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 359, 4), 'll', tuple_assignment_75759_76288)
    
    # Assigning a Name to a Name (line 359):
    # Getting the type of 'tuple_assignment_75760' (line 359)
    tuple_assignment_75760_76289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 4), 'tuple_assignment_75760')
    # Assigning a type to the variable 'l1' (line 359)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 359, 8), 'l1', tuple_assignment_75760_76289)
    
    # Assigning a BinOp to a Name (line 360):
    
    # Assigning a BinOp to a Name (line 360):
    
    # Obtaining an instance of the builtin type 'list' (line 360)
    list_76290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 360, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 360)
    # Adding element type (line 360)
    str_76291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 360, 19), 'str', ' ')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 360, 18), list_76290, str_76291)
    
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to range(...): (line 360)
    # Processing the call arguments (line 360)
    int_76297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 360, 51), 'int')
    # Processing the call keyword arguments (line 360)
    kwargs_76298 = {}
    # Getting the type of 'range' (line 360)
    range_76296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 45), 'range', False)
    # Calling range(args, kwargs) (line 360)
    range_call_result_76299 = invoke(stypy.reporting.localization.Localization(__file__, 360, 45), range_76296, *[int_76297], **kwargs_76298)
    
    comprehension_76300 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 360, 27), range_call_result_76299)
    # Assigning a type to the variable '_m' (line 360)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 360, 27), '_m', comprehension_76300)
    
    # Call to str(...): (line 360)
    # Processing the call arguments (line 360)
    # Getting the type of '_m' (line 360)
    _m_76293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 31), '_m', False)
    # Processing the call keyword arguments (line 360)
    kwargs_76294 = {}
    # Getting the type of 'str' (line 360)
    str_76292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 27), 'str', False)
    # Calling str(args, kwargs) (line 360)
    str_call_result_76295 = invoke(stypy.reporting.localization.Localization(__file__, 360, 27), str_76292, *[_m_76293], **kwargs_76294)
    
    list_76301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 360, 27), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 360, 27), list_76301, str_call_result_76295)
    # Applying the binary operator '+' (line 360)
    result_add_76302 = python_operator(stypy.reporting.localization.Localization(__file__, 360, 18), '+', list_76290, list_76301)
    
    # Assigning a type to the variable 'spacedigits' (line 360)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 360, 4), 'spacedigits', result_add_76302)
    
    # Assigning a Str to a Name (line 361):
    
    # Assigning a Str to a Name (line 361):
    str_76303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 23), 'str', '')
    # Assigning a type to the variable 'filepositiontext' (line 361)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 361, 4), 'filepositiontext', str_76303)
    
    # Assigning a Call to a Name (line 362):
    
    # Assigning a Call to a Name (line 362):
    
    # Call to FileInput(...): (line 362)
    # Processing the call arguments (line 362)
    # Getting the type of 'ffile' (line 362)
    ffile_76306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 30), 'ffile', False)
    # Processing the call keyword arguments (line 362)
    kwargs_76307 = {}
    # Getting the type of 'fileinput' (line 362)
    fileinput_76304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 10), 'fileinput', False)
    # Obtaining the member 'FileInput' of a type (line 362)
    FileInput_76305 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 362, 10), fileinput_76304, 'FileInput')
    # Calling FileInput(args, kwargs) (line 362)
    FileInput_call_result_76308 = invoke(stypy.reporting.localization.Localization(__file__, 362, 10), FileInput_76305, *[ffile_76306], **kwargs_76307)
    
    # Assigning a type to the variable 'fin' (line 362)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 362, 4), 'fin', FileInput_call_result_76308)
    
    # Getting the type of 'True' (line 363)
    True_76309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 10), 'True')
    # Testing the type of an if condition (line 363)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 363, 4), True_76309)
    # SSA begins for while statement (line 363)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    # Assigning a Call to a Name (line 364):
    
    # Assigning a Call to a Name (line 364):
    
    # Call to readline(...): (line 364)
    # Processing the call keyword arguments (line 364)
    kwargs_76312 = {}
    # Getting the type of 'fin' (line 364)
    fin_76310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 12), 'fin', False)
    # Obtaining the member 'readline' of a type (line 364)
    readline_76311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 364, 12), fin_76310, 'readline')
    # Calling readline(args, kwargs) (line 364)
    readline_call_result_76313 = invoke(stypy.reporting.localization.Localization(__file__, 364, 12), readline_76311, *[], **kwargs_76312)
    
    # Assigning a type to the variable 'l' (line 364)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 364, 8), 'l', readline_call_result_76313)
    
    
    # Getting the type of 'l' (line 365)
    l_76314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 15), 'l')
    # Applying the 'not' unary operator (line 365)
    result_not__76315 = python_operator(stypy.reporting.localization.Localization(__file__, 365, 11), 'not', l_76314)
    
    # Testing the type of an if condition (line 365)
    if_condition_76316 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 365, 8), result_not__76315)
    # Assigning a type to the variable 'if_condition_76316' (line 365)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 365, 8), 'if_condition_76316', if_condition_76316)
    # SSA begins for if statement (line 365)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 365)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to isfirstline(...): (line 367)
    # Processing the call keyword arguments (line 367)
    kwargs_76319 = {}
    # Getting the type of 'fin' (line 367)
    fin_76317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 11), 'fin', False)
    # Obtaining the member 'isfirstline' of a type (line 367)
    isfirstline_76318 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 367, 11), fin_76317, 'isfirstline')
    # Calling isfirstline(args, kwargs) (line 367)
    isfirstline_call_result_76320 = invoke(stypy.reporting.localization.Localization(__file__, 367, 11), isfirstline_76318, *[], **kwargs_76319)
    
    # Testing the type of an if condition (line 367)
    if_condition_76321 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 367, 8), isfirstline_call_result_76320)
    # Assigning a type to the variable 'if_condition_76321' (line 367)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 367, 8), 'if_condition_76321', if_condition_76321)
    # SSA begins for if statement (line 367)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 368):
    
    # Assigning a Str to a Name (line 368):
    str_76322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 368, 31), 'str', '')
    # Assigning a type to the variable 'filepositiontext' (line 368)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 368, 12), 'filepositiontext', str_76322)
    
    # Assigning a Call to a Name (line 369):
    
    # Assigning a Call to a Name (line 369):
    
    # Call to filename(...): (line 369)
    # Processing the call keyword arguments (line 369)
    kwargs_76325 = {}
    # Getting the type of 'fin' (line 369)
    fin_76323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 30), 'fin', False)
    # Obtaining the member 'filename' of a type (line 369)
    filename_76324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 369, 30), fin_76323, 'filename')
    # Calling filename(args, kwargs) (line 369)
    filename_call_result_76326 = invoke(stypy.reporting.localization.Localization(__file__, 369, 30), filename_76324, *[], **kwargs_76325)
    
    # Assigning a type to the variable 'currentfilename' (line 369)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 369, 12), 'currentfilename', filename_call_result_76326)
    
    # Assigning a Num to a Name (line 370):
    
    # Assigning a Num to a Name (line 370):
    int_76327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 370, 26), 'int')
    # Assigning a type to the variable 'gotnextfile' (line 370)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 370, 12), 'gotnextfile', int_76327)
    
    # Assigning a Name to a Name (line 371):
    
    # Assigning a Name to a Name (line 371):
    # Getting the type of 'l' (line 371)
    l_76328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 371, 17), 'l')
    # Assigning a type to the variable 'l1' (line 371)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 371, 12), 'l1', l_76328)
    
    # Assigning a Num to a Name (line 372):
    
    # Assigning a Num to a Name (line 372):
    int_76329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 372, 24), 'int')
    # Assigning a type to the variable 'strictf77' (line 372)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 372, 12), 'strictf77', int_76329)
    
    # Assigning a Str to a Name (line 373):
    
    # Assigning a Str to a Name (line 373):
    str_76330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 373, 29), 'str', 'fix')
    # Assigning a type to the variable 'sourcecodeform' (line 373)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 373, 12), 'sourcecodeform', str_76330)
    
    # Assigning a Subscript to a Name (line 374):
    
    # Assigning a Subscript to a Name (line 374):
    
    # Obtaining the type of the subscript
    int_76331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 52), 'int')
    
    # Call to splitext(...): (line 374)
    # Processing the call arguments (line 374)
    # Getting the type of 'currentfilename' (line 374)
    currentfilename_76335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 35), 'currentfilename', False)
    # Processing the call keyword arguments (line 374)
    kwargs_76336 = {}
    # Getting the type of 'os' (line 374)
    os_76332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 18), 'os', False)
    # Obtaining the member 'path' of a type (line 374)
    path_76333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 374, 18), os_76332, 'path')
    # Obtaining the member 'splitext' of a type (line 374)
    splitext_76334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 374, 18), path_76333, 'splitext')
    # Calling splitext(args, kwargs) (line 374)
    splitext_call_result_76337 = invoke(stypy.reporting.localization.Localization(__file__, 374, 18), splitext_76334, *[currentfilename_76335], **kwargs_76336)
    
    # Obtaining the member '__getitem__' of a type (line 374)
    getitem___76338 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 374, 18), splitext_call_result_76337, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 374)
    subscript_call_result_76339 = invoke(stypy.reporting.localization.Localization(__file__, 374, 18), getitem___76338, int_76331)
    
    # Assigning a type to the variable 'ext' (line 374)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 374, 12), 'ext', subscript_call_result_76339)
    
    
    # Evaluating a boolean operation
    
    # Call to is_f_file(...): (line 375)
    # Processing the call arguments (line 375)
    # Getting the type of 'currentfilename' (line 375)
    currentfilename_76341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 25), 'currentfilename', False)
    # Processing the call keyword arguments (line 375)
    kwargs_76342 = {}
    # Getting the type of 'is_f_file' (line 375)
    is_f_file_76340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 15), 'is_f_file', False)
    # Calling is_f_file(args, kwargs) (line 375)
    is_f_file_call_result_76343 = invoke(stypy.reporting.localization.Localization(__file__, 375, 15), is_f_file_76340, *[currentfilename_76341], **kwargs_76342)
    
    
    
    # Evaluating a boolean operation
    
    # Call to _has_f90_header(...): (line 376)
    # Processing the call arguments (line 376)
    # Getting the type of 'l' (line 376)
    l_76345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 41), 'l', False)
    # Processing the call keyword arguments (line 376)
    kwargs_76346 = {}
    # Getting the type of '_has_f90_header' (line 376)
    _has_f90_header_76344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 25), '_has_f90_header', False)
    # Calling _has_f90_header(args, kwargs) (line 376)
    _has_f90_header_call_result_76347 = invoke(stypy.reporting.localization.Localization(__file__, 376, 25), _has_f90_header_76344, *[l_76345], **kwargs_76346)
    
    
    # Call to _has_fix_header(...): (line 376)
    # Processing the call arguments (line 376)
    # Getting the type of 'l' (line 376)
    l_76349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 63), 'l', False)
    # Processing the call keyword arguments (line 376)
    kwargs_76350 = {}
    # Getting the type of '_has_fix_header' (line 376)
    _has_fix_header_76348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 47), '_has_fix_header', False)
    # Calling _has_fix_header(args, kwargs) (line 376)
    _has_fix_header_call_result_76351 = invoke(stypy.reporting.localization.Localization(__file__, 376, 47), _has_fix_header_76348, *[l_76349], **kwargs_76350)
    
    # Applying the binary operator 'or' (line 376)
    result_or_keyword_76352 = python_operator(stypy.reporting.localization.Localization(__file__, 376, 25), 'or', _has_f90_header_call_result_76347, _has_fix_header_call_result_76351)
    
    # Applying the 'not' unary operator (line 376)
    result_not__76353 = python_operator(stypy.reporting.localization.Localization(__file__, 376, 20), 'not', result_or_keyword_76352)
    
    # Applying the binary operator 'and' (line 375)
    result_and_keyword_76354 = python_operator(stypy.reporting.localization.Localization(__file__, 375, 15), 'and', is_f_file_call_result_76343, result_not__76353)
    
    # Testing the type of an if condition (line 375)
    if_condition_76355 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 375, 12), result_and_keyword_76354)
    # Assigning a type to the variable 'if_condition_76355' (line 375)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 375, 12), 'if_condition_76355', if_condition_76355)
    # SSA begins for if statement (line 375)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 377):
    
    # Assigning a Num to a Name (line 377):
    int_76356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 377, 28), 'int')
    # Assigning a type to the variable 'strictf77' (line 377)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 377, 16), 'strictf77', int_76356)
    # SSA branch for the else part of an if statement (line 375)
    module_type_store.open_ssa_branch('else')
    
    
    # Evaluating a boolean operation
    
    # Call to is_free_format(...): (line 378)
    # Processing the call arguments (line 378)
    # Getting the type of 'currentfilename' (line 378)
    currentfilename_76358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 32), 'currentfilename', False)
    # Processing the call keyword arguments (line 378)
    kwargs_76359 = {}
    # Getting the type of 'is_free_format' (line 378)
    is_free_format_76357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 17), 'is_free_format', False)
    # Calling is_free_format(args, kwargs) (line 378)
    is_free_format_call_result_76360 = invoke(stypy.reporting.localization.Localization(__file__, 378, 17), is_free_format_76357, *[currentfilename_76358], **kwargs_76359)
    
    
    
    # Call to _has_fix_header(...): (line 378)
    # Processing the call arguments (line 378)
    # Getting the type of 'l' (line 378)
    l_76362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 73), 'l', False)
    # Processing the call keyword arguments (line 378)
    kwargs_76363 = {}
    # Getting the type of '_has_fix_header' (line 378)
    _has_fix_header_76361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 57), '_has_fix_header', False)
    # Calling _has_fix_header(args, kwargs) (line 378)
    _has_fix_header_call_result_76364 = invoke(stypy.reporting.localization.Localization(__file__, 378, 57), _has_fix_header_76361, *[l_76362], **kwargs_76363)
    
    # Applying the 'not' unary operator (line 378)
    result_not__76365 = python_operator(stypy.reporting.localization.Localization(__file__, 378, 53), 'not', _has_fix_header_call_result_76364)
    
    # Applying the binary operator 'and' (line 378)
    result_and_keyword_76366 = python_operator(stypy.reporting.localization.Localization(__file__, 378, 17), 'and', is_free_format_call_result_76360, result_not__76365)
    
    # Testing the type of an if condition (line 378)
    if_condition_76367 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 378, 17), result_and_keyword_76366)
    # Assigning a type to the variable 'if_condition_76367' (line 378)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 378, 17), 'if_condition_76367', if_condition_76367)
    # SSA begins for if statement (line 378)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 379):
    
    # Assigning a Str to a Name (line 379):
    str_76368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 33), 'str', 'free')
    # Assigning a type to the variable 'sourcecodeform' (line 379)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 16), 'sourcecodeform', str_76368)
    # SSA join for if statement (line 378)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 375)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'strictf77' (line 380)
    strictf77_76369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 15), 'strictf77')
    # Testing the type of an if condition (line 380)
    if_condition_76370 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 380, 12), strictf77_76369)
    # Assigning a type to the variable 'if_condition_76370' (line 380)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 380, 12), 'if_condition_76370', if_condition_76370)
    # SSA begins for if statement (line 380)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 381):
    
    # Assigning a Name to a Name (line 381):
    # Getting the type of 'beginpattern77' (line 381)
    beginpattern77_76371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 31), 'beginpattern77')
    # Assigning a type to the variable 'beginpattern' (line 381)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 381, 16), 'beginpattern', beginpattern77_76371)
    # SSA branch for the else part of an if statement (line 380)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Name to a Name (line 383):
    
    # Assigning a Name to a Name (line 383):
    # Getting the type of 'beginpattern90' (line 383)
    beginpattern90_76372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 31), 'beginpattern90')
    # Assigning a type to the variable 'beginpattern' (line 383)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 383, 16), 'beginpattern', beginpattern90_76372)
    # SSA join for if statement (line 380)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to outmess(...): (line 384)
    # Processing the call arguments (line 384)
    str_76374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 20), 'str', '\tReading file %s (format:%s%s)\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 385)
    tuple_76375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 23), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 385)
    # Adding element type (line 385)
    
    # Call to repr(...): (line 385)
    # Processing the call arguments (line 385)
    # Getting the type of 'currentfilename' (line 385)
    currentfilename_76377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 385, 28), 'currentfilename', False)
    # Processing the call keyword arguments (line 385)
    kwargs_76378 = {}
    # Getting the type of 'repr' (line 385)
    repr_76376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 385, 23), 'repr', False)
    # Calling repr(args, kwargs) (line 385)
    repr_call_result_76379 = invoke(stypy.reporting.localization.Localization(__file__, 385, 23), repr_76376, *[currentfilename_76377], **kwargs_76378)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 385, 23), tuple_76375, repr_call_result_76379)
    # Adding element type (line 385)
    # Getting the type of 'sourcecodeform' (line 385)
    sourcecodeform_76380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 385, 46), 'sourcecodeform', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 385, 23), tuple_76375, sourcecodeform_76380)
    # Adding element type (line 385)
    
    # Evaluating a boolean operation
    
    # Evaluating a boolean operation
    # Getting the type of 'strictf77' (line 386)
    strictf77_76381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 23), 'strictf77', False)
    str_76382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 37), 'str', ',strict')
    # Applying the binary operator 'and' (line 386)
    result_and_keyword_76383 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 23), 'and', strictf77_76381, str_76382)
    
    str_76384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 50), 'str', '')
    # Applying the binary operator 'or' (line 386)
    result_or_keyword_76385 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 23), 'or', result_and_keyword_76383, str_76384)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 385, 23), tuple_76375, result_or_keyword_76385)
    
    # Applying the binary operator '%' (line 384)
    result_mod_76386 = python_operator(stypy.reporting.localization.Localization(__file__, 384, 20), '%', str_76374, tuple_76375)
    
    # Processing the call keyword arguments (line 384)
    kwargs_76387 = {}
    # Getting the type of 'outmess' (line 384)
    outmess_76373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 12), 'outmess', False)
    # Calling outmess(args, kwargs) (line 384)
    outmess_call_result_76388 = invoke(stypy.reporting.localization.Localization(__file__, 384, 12), outmess_76373, *[result_mod_76386], **kwargs_76387)
    
    # SSA join for if statement (line 367)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 388):
    
    # Assigning a Call to a Name (line 388):
    
    # Call to replace(...): (line 388)
    # Processing the call arguments (line 388)
    str_76394 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 35), 'str', '\xa0')
    str_76395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 43), 'str', ' ')
    # Processing the call keyword arguments (line 388)
    kwargs_76396 = {}
    
    # Call to expandtabs(...): (line 388)
    # Processing the call keyword arguments (line 388)
    kwargs_76391 = {}
    # Getting the type of 'l' (line 388)
    l_76389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 388, 12), 'l', False)
    # Obtaining the member 'expandtabs' of a type (line 388)
    expandtabs_76390 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 388, 12), l_76389, 'expandtabs')
    # Calling expandtabs(args, kwargs) (line 388)
    expandtabs_call_result_76392 = invoke(stypy.reporting.localization.Localization(__file__, 388, 12), expandtabs_76390, *[], **kwargs_76391)
    
    # Obtaining the member 'replace' of a type (line 388)
    replace_76393 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 388, 12), expandtabs_call_result_76392, 'replace')
    # Calling replace(args, kwargs) (line 388)
    replace_call_result_76397 = invoke(stypy.reporting.localization.Localization(__file__, 388, 12), replace_76393, *[str_76394, str_76395], **kwargs_76396)
    
    # Assigning a type to the variable 'l' (line 388)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 388, 8), 'l', replace_call_result_76397)
    
    
    
    # Getting the type of 'l' (line 390)
    l_76398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 18), 'l')
    str_76399 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 23), 'str', '')
    # Applying the binary operator '==' (line 390)
    result_eq_76400 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 18), '==', l_76398, str_76399)
    
    # Applying the 'not' unary operator (line 390)
    result_not__76401 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 14), 'not', result_eq_76400)
    
    # Testing the type of an if condition (line 390)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 390, 8), result_not__76401)
    # SSA begins for while statement (line 390)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    
    
    # Obtaining the type of the subscript
    int_76402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 391, 17), 'int')
    # Getting the type of 'l' (line 391)
    l_76403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 391, 15), 'l')
    # Obtaining the member '__getitem__' of a type (line 391)
    getitem___76404 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 391, 15), l_76403, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 391)
    subscript_call_result_76405 = invoke(stypy.reporting.localization.Localization(__file__, 391, 15), getitem___76404, int_76402)
    
    str_76406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 391, 28), 'str', '\n\r\x0c')
    # Applying the binary operator 'notin' (line 391)
    result_contains_76407 = python_operator(stypy.reporting.localization.Localization(__file__, 391, 15), 'notin', subscript_call_result_76405, str_76406)
    
    # Testing the type of an if condition (line 391)
    if_condition_76408 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 391, 12), result_contains_76407)
    # Assigning a type to the variable 'if_condition_76408' (line 391)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 391, 12), 'if_condition_76408', if_condition_76408)
    # SSA begins for if statement (line 391)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 391)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Name (line 393):
    
    # Assigning a Subscript to a Name (line 393):
    
    # Obtaining the type of the subscript
    int_76409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 393, 19), 'int')
    slice_76410 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 393, 16), None, int_76409, None)
    # Getting the type of 'l' (line 393)
    l_76411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 16), 'l')
    # Obtaining the member '__getitem__' of a type (line 393)
    getitem___76412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 393, 16), l_76411, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 393)
    subscript_call_result_76413 = invoke(stypy.reporting.localization.Localization(__file__, 393, 16), getitem___76412, slice_76410)
    
    # Assigning a type to the variable 'l' (line 393)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 393, 12), 'l', subscript_call_result_76413)
    # SSA join for while statement (line 390)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'strictf77' (line 394)
    strictf77_76414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 15), 'strictf77')
    # Applying the 'not' unary operator (line 394)
    result_not__76415 = python_operator(stypy.reporting.localization.Localization(__file__, 394, 11), 'not', strictf77_76414)
    
    # Testing the type of an if condition (line 394)
    if_condition_76416 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 394, 8), result_not__76415)
    # Assigning a type to the variable 'if_condition_76416' (line 394)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 394, 8), 'if_condition_76416', if_condition_76416)
    # SSA begins for if statement (line 394)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 395):
    
    # Assigning a Call to a Name (line 395):
    
    # Call to match(...): (line 395)
    # Processing the call arguments (line 395)
    # Getting the type of 'l' (line 395)
    l_76419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 34), 'l', False)
    # Processing the call keyword arguments (line 395)
    kwargs_76420 = {}
    # Getting the type of 'commentline' (line 395)
    commentline_76417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 16), 'commentline', False)
    # Obtaining the member 'match' of a type (line 395)
    match_76418 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 16), commentline_76417, 'match')
    # Calling match(args, kwargs) (line 395)
    match_call_result_76421 = invoke(stypy.reporting.localization.Localization(__file__, 395, 16), match_76418, *[l_76419], **kwargs_76420)
    
    # Assigning a type to the variable 'r' (line 395)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 395, 12), 'r', match_call_result_76421)
    
    # Getting the type of 'r' (line 396)
    r_76422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 15), 'r')
    # Testing the type of an if condition (line 396)
    if_condition_76423 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 396, 12), r_76422)
    # Assigning a type to the variable 'if_condition_76423' (line 396)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 396, 12), 'if_condition_76423', if_condition_76423)
    # SSA begins for if statement (line 396)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 397):
    
    # Assigning a BinOp to a Name (line 397):
    
    # Call to group(...): (line 397)
    # Processing the call arguments (line 397)
    str_76426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 397, 28), 'str', 'line')
    # Processing the call keyword arguments (line 397)
    kwargs_76427 = {}
    # Getting the type of 'r' (line 397)
    r_76424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 20), 'r', False)
    # Obtaining the member 'group' of a type (line 397)
    group_76425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 397, 20), r_76424, 'group')
    # Calling group(args, kwargs) (line 397)
    group_call_result_76428 = invoke(stypy.reporting.localization.Localization(__file__, 397, 20), group_76425, *[str_76426], **kwargs_76427)
    
    str_76429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 397, 38), 'str', ' ')
    # Applying the binary operator '+' (line 397)
    result_add_76430 = python_operator(stypy.reporting.localization.Localization(__file__, 397, 20), '+', group_call_result_76428, str_76429)
    
    # Assigning a type to the variable 'l' (line 397)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 397, 16), 'l', result_add_76430)
    
    # Assigning a Call to a Name (line 398):
    
    # Assigning a Call to a Name (line 398):
    
    # Call to group(...): (line 398)
    # Processing the call arguments (line 398)
    str_76433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 398, 29), 'str', 'rest')
    # Processing the call keyword arguments (line 398)
    kwargs_76434 = {}
    # Getting the type of 'r' (line 398)
    r_76431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 21), 'r', False)
    # Obtaining the member 'group' of a type (line 398)
    group_76432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 398, 21), r_76431, 'group')
    # Calling group(args, kwargs) (line 398)
    group_call_result_76435 = invoke(stypy.reporting.localization.Localization(__file__, 398, 21), group_76432, *[str_76433], **kwargs_76434)
    
    # Assigning a type to the variable 'rl' (line 398)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 398, 16), 'rl', group_call_result_76435)
    
    
    
    # Call to lower(...): (line 399)
    # Processing the call keyword arguments (line 399)
    kwargs_76442 = {}
    
    # Obtaining the type of the subscript
    int_76436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 23), 'int')
    slice_76437 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 399, 19), None, int_76436, None)
    # Getting the type of 'rl' (line 399)
    rl_76438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 19), 'rl', False)
    # Obtaining the member '__getitem__' of a type (line 399)
    getitem___76439 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 399, 19), rl_76438, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 399)
    subscript_call_result_76440 = invoke(stypy.reporting.localization.Localization(__file__, 399, 19), getitem___76439, slice_76437)
    
    # Obtaining the member 'lower' of a type (line 399)
    lower_76441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 399, 19), subscript_call_result_76440, 'lower')
    # Calling lower(args, kwargs) (line 399)
    lower_call_result_76443 = invoke(stypy.reporting.localization.Localization(__file__, 399, 19), lower_76441, *[], **kwargs_76442)
    
    str_76444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 37), 'str', 'f2py')
    # Applying the binary operator '==' (line 399)
    result_eq_76445 = python_operator(stypy.reporting.localization.Localization(__file__, 399, 19), '==', lower_call_result_76443, str_76444)
    
    # Testing the type of an if condition (line 399)
    if_condition_76446 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 399, 16), result_eq_76445)
    # Assigning a type to the variable 'if_condition_76446' (line 399)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 399, 16), 'if_condition_76446', if_condition_76446)
    # SSA begins for if statement (line 399)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 400):
    
    # Assigning a BinOp to a Name (line 400):
    # Getting the type of 'l' (line 400)
    l_76447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 24), 'l')
    int_76448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 400, 28), 'int')
    str_76449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 400, 32), 'str', ' ')
    # Applying the binary operator '*' (line 400)
    result_mul_76450 = python_operator(stypy.reporting.localization.Localization(__file__, 400, 28), '*', int_76448, str_76449)
    
    # Applying the binary operator '+' (line 400)
    result_add_76451 = python_operator(stypy.reporting.localization.Localization(__file__, 400, 24), '+', l_76447, result_mul_76450)
    
    # Assigning a type to the variable 'l' (line 400)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 400, 20), 'l', result_add_76451)
    
    # Assigning a Call to a Name (line 401):
    
    # Assigning a Call to a Name (line 401):
    
    # Call to match(...): (line 401)
    # Processing the call arguments (line 401)
    
    # Obtaining the type of the subscript
    int_76454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 45), 'int')
    slice_76455 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 401, 42), int_76454, None, None)
    # Getting the type of 'rl' (line 401)
    rl_76456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 42), 'rl', False)
    # Obtaining the member '__getitem__' of a type (line 401)
    getitem___76457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 401, 42), rl_76456, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 401)
    subscript_call_result_76458 = invoke(stypy.reporting.localization.Localization(__file__, 401, 42), getitem___76457, slice_76455)
    
    # Processing the call keyword arguments (line 401)
    kwargs_76459 = {}
    # Getting the type of 'commentline' (line 401)
    commentline_76452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 24), 'commentline', False)
    # Obtaining the member 'match' of a type (line 401)
    match_76453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 401, 24), commentline_76452, 'match')
    # Calling match(args, kwargs) (line 401)
    match_call_result_76460 = invoke(stypy.reporting.localization.Localization(__file__, 401, 24), match_76453, *[subscript_call_result_76458], **kwargs_76459)
    
    # Assigning a type to the variable 'r' (line 401)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 401, 20), 'r', match_call_result_76460)
    
    # Getting the type of 'r' (line 402)
    r_76461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 23), 'r')
    # Testing the type of an if condition (line 402)
    if_condition_76462 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 402, 20), r_76461)
    # Assigning a type to the variable 'if_condition_76462' (line 402)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 402, 20), 'if_condition_76462', if_condition_76462)
    # SSA begins for if statement (line 402)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 403):
    
    # Assigning a BinOp to a Name (line 403):
    # Getting the type of 'l' (line 403)
    l_76463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 28), 'l')
    
    # Call to group(...): (line 403)
    # Processing the call arguments (line 403)
    str_76466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 403, 40), 'str', 'line')
    # Processing the call keyword arguments (line 403)
    kwargs_76467 = {}
    # Getting the type of 'r' (line 403)
    r_76464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 32), 'r', False)
    # Obtaining the member 'group' of a type (line 403)
    group_76465 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 403, 32), r_76464, 'group')
    # Calling group(args, kwargs) (line 403)
    group_call_result_76468 = invoke(stypy.reporting.localization.Localization(__file__, 403, 32), group_76465, *[str_76466], **kwargs_76467)
    
    # Applying the binary operator '+' (line 403)
    result_add_76469 = python_operator(stypy.reporting.localization.Localization(__file__, 403, 28), '+', l_76463, group_call_result_76468)
    
    # Assigning a type to the variable 'l' (line 403)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 403, 24), 'l', result_add_76469)
    # SSA branch for the else part of an if statement (line 402)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 405):
    
    # Assigning a BinOp to a Name (line 405):
    # Getting the type of 'l' (line 405)
    l_76470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 28), 'l')
    
    # Obtaining the type of the subscript
    int_76471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 405, 35), 'int')
    slice_76472 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 405, 32), int_76471, None, None)
    # Getting the type of 'rl' (line 405)
    rl_76473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 32), 'rl')
    # Obtaining the member '__getitem__' of a type (line 405)
    getitem___76474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 405, 32), rl_76473, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 405)
    subscript_call_result_76475 = invoke(stypy.reporting.localization.Localization(__file__, 405, 32), getitem___76474, slice_76472)
    
    # Applying the binary operator '+' (line 405)
    result_add_76476 = python_operator(stypy.reporting.localization.Localization(__file__, 405, 28), '+', l_76470, subscript_call_result_76475)
    
    # Assigning a type to the variable 'l' (line 405)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 405, 24), 'l', result_add_76476)
    # SSA join for if statement (line 402)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 399)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 396)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 394)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Call to strip(...): (line 406)
    # Processing the call keyword arguments (line 406)
    kwargs_76479 = {}
    # Getting the type of 'l' (line 406)
    l_76477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 11), 'l', False)
    # Obtaining the member 'strip' of a type (line 406)
    strip_76478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 406, 11), l_76477, 'strip')
    # Calling strip(args, kwargs) (line 406)
    strip_call_result_76480 = invoke(stypy.reporting.localization.Localization(__file__, 406, 11), strip_76478, *[], **kwargs_76479)
    
    str_76481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 406, 24), 'str', '')
    # Applying the binary operator '==' (line 406)
    result_eq_76482 = python_operator(stypy.reporting.localization.Localization(__file__, 406, 11), '==', strip_call_result_76480, str_76481)
    
    # Testing the type of an if condition (line 406)
    if_condition_76483 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 406, 8), result_eq_76482)
    # Assigning a type to the variable 'if_condition_76483' (line 406)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 406, 8), 'if_condition_76483', if_condition_76483)
    # SSA begins for if statement (line 406)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 407):
    
    # Assigning a Num to a Name (line 407):
    int_76484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, 19), 'int')
    # Assigning a type to the variable 'cont' (line 407)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 407, 12), 'cont', int_76484)
    # SSA join for if statement (line 406)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'sourcecodeform' (line 409)
    sourcecodeform_76485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 11), 'sourcecodeform')
    str_76486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 409, 29), 'str', 'fix')
    # Applying the binary operator '==' (line 409)
    result_eq_76487 = python_operator(stypy.reporting.localization.Localization(__file__, 409, 11), '==', sourcecodeform_76485, str_76486)
    
    # Testing the type of an if condition (line 409)
    if_condition_76488 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 409, 8), result_eq_76487)
    # Assigning a type to the variable 'if_condition_76488' (line 409)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 409, 8), 'if_condition_76488', if_condition_76488)
    # SSA begins for if statement (line 409)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Obtaining the type of the subscript
    int_76489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 17), 'int')
    # Getting the type of 'l' (line 410)
    l_76490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 15), 'l')
    # Obtaining the member '__getitem__' of a type (line 410)
    getitem___76491 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 15), l_76490, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 410)
    subscript_call_result_76492 = invoke(stypy.reporting.localization.Localization(__file__, 410, 15), getitem___76491, int_76489)
    
    
    # Obtaining an instance of the builtin type 'list' (line 410)
    list_76493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 23), 'list')
    # Adding type elements to the builtin type 'list' instance (line 410)
    # Adding element type (line 410)
    str_76494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 24), 'str', '*')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 23), list_76493, str_76494)
    # Adding element type (line 410)
    str_76495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 29), 'str', 'c')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 23), list_76493, str_76495)
    # Adding element type (line 410)
    str_76496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 34), 'str', '!')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 23), list_76493, str_76496)
    # Adding element type (line 410)
    str_76497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 39), 'str', 'C')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 23), list_76493, str_76497)
    # Adding element type (line 410)
    str_76498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 44), 'str', '#')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 23), list_76493, str_76498)
    
    # Applying the binary operator 'in' (line 410)
    result_contains_76499 = python_operator(stypy.reporting.localization.Localization(__file__, 410, 15), 'in', subscript_call_result_76492, list_76493)
    
    # Testing the type of an if condition (line 410)
    if_condition_76500 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 410, 12), result_contains_76499)
    # Assigning a type to the variable 'if_condition_76500' (line 410)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 410, 12), 'if_condition_76500', if_condition_76500)
    # SSA begins for if statement (line 410)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Call to lower(...): (line 411)
    # Processing the call keyword arguments (line 411)
    kwargs_76508 = {}
    
    # Obtaining the type of the subscript
    int_76501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 21), 'int')
    int_76502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 23), 'int')
    slice_76503 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 411, 19), int_76501, int_76502, None)
    # Getting the type of 'l' (line 411)
    l_76504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 19), 'l', False)
    # Obtaining the member '__getitem__' of a type (line 411)
    getitem___76505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 411, 19), l_76504, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 411)
    subscript_call_result_76506 = invoke(stypy.reporting.localization.Localization(__file__, 411, 19), getitem___76505, slice_76503)
    
    # Obtaining the member 'lower' of a type (line 411)
    lower_76507 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 411, 19), subscript_call_result_76506, 'lower')
    # Calling lower(args, kwargs) (line 411)
    lower_call_result_76509 = invoke(stypy.reporting.localization.Localization(__file__, 411, 19), lower_76507, *[], **kwargs_76508)
    
    str_76510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 37), 'str', 'f2py')
    # Applying the binary operator '==' (line 411)
    result_eq_76511 = python_operator(stypy.reporting.localization.Localization(__file__, 411, 19), '==', lower_call_result_76509, str_76510)
    
    # Testing the type of an if condition (line 411)
    if_condition_76512 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 411, 16), result_eq_76511)
    # Assigning a type to the variable 'if_condition_76512' (line 411)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 411, 16), 'if_condition_76512', if_condition_76512)
    # SSA begins for if statement (line 411)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 412):
    
    # Assigning a BinOp to a Name (line 412):
    str_76513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 24), 'str', '     ')
    
    # Obtaining the type of the subscript
    int_76514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 36), 'int')
    slice_76515 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 412, 34), int_76514, None, None)
    # Getting the type of 'l' (line 412)
    l_76516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 34), 'l')
    # Obtaining the member '__getitem__' of a type (line 412)
    getitem___76517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 412, 34), l_76516, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 412)
    subscript_call_result_76518 = invoke(stypy.reporting.localization.Localization(__file__, 412, 34), getitem___76517, slice_76515)
    
    # Applying the binary operator '+' (line 412)
    result_add_76519 = python_operator(stypy.reporting.localization.Localization(__file__, 412, 24), '+', str_76513, subscript_call_result_76518)
    
    # Assigning a type to the variable 'l' (line 412)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 412, 20), 'l', result_add_76519)
    # SSA branch for the else part of an if statement (line 411)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Num to a Name (line 414):
    
    # Assigning a Num to a Name (line 414):
    int_76520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 27), 'int')
    # Assigning a type to the variable 'cont' (line 414)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 414, 20), 'cont', int_76520)
    # SSA join for if statement (line 411)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 410)
    module_type_store.open_ssa_branch('else')
    
    # Getting the type of 'strictf77' (line 416)
    strictf77_76521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 17), 'strictf77')
    # Testing the type of an if condition (line 416)
    if_condition_76522 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 416, 17), strictf77_76521)
    # Assigning a type to the variable 'if_condition_76522' (line 416)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 416, 17), 'if_condition_76522', if_condition_76522)
    # SSA begins for if statement (line 416)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Call to len(...): (line 417)
    # Processing the call arguments (line 417)
    # Getting the type of 'l' (line 417)
    l_76524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 23), 'l', False)
    # Processing the call keyword arguments (line 417)
    kwargs_76525 = {}
    # Getting the type of 'len' (line 417)
    len_76523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 19), 'len', False)
    # Calling len(args, kwargs) (line 417)
    len_call_result_76526 = invoke(stypy.reporting.localization.Localization(__file__, 417, 19), len_76523, *[l_76524], **kwargs_76525)
    
    int_76527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 28), 'int')
    # Applying the binary operator '>' (line 417)
    result_gt_76528 = python_operator(stypy.reporting.localization.Localization(__file__, 417, 19), '>', len_call_result_76526, int_76527)
    
    # Testing the type of an if condition (line 417)
    if_condition_76529 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 417, 16), result_gt_76528)
    # Assigning a type to the variable 'if_condition_76529' (line 417)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 417, 16), 'if_condition_76529', if_condition_76529)
    # SSA begins for if statement (line 417)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 418):
    
    # Assigning a Subscript to a Name (line 418):
    
    # Obtaining the type of the subscript
    int_76530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 27), 'int')
    slice_76531 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 418, 24), None, int_76530, None)
    # Getting the type of 'l' (line 418)
    l_76532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 24), 'l')
    # Obtaining the member '__getitem__' of a type (line 418)
    getitem___76533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 418, 24), l_76532, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 418)
    subscript_call_result_76534 = invoke(stypy.reporting.localization.Localization(__file__, 418, 24), getitem___76533, slice_76531)
    
    # Assigning a type to the variable 'l' (line 418)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 418, 20), 'l', subscript_call_result_76534)
    # SSA join for if statement (line 417)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 416)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 410)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    
    # Obtaining the type of the subscript
    int_76535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 419, 22), 'int')
    # Getting the type of 'l' (line 419)
    l_76536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 20), 'l')
    # Obtaining the member '__getitem__' of a type (line 419)
    getitem___76537 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 419, 20), l_76536, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 419)
    subscript_call_result_76538 = invoke(stypy.reporting.localization.Localization(__file__, 419, 20), getitem___76537, int_76535)
    
    # Getting the type of 'spacedigits' (line 419)
    spacedigits_76539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 28), 'spacedigits')
    # Applying the binary operator 'in' (line 419)
    result_contains_76540 = python_operator(stypy.reporting.localization.Localization(__file__, 419, 20), 'in', subscript_call_result_76538, spacedigits_76539)
    
    # Applying the 'not' unary operator (line 419)
    result_not__76541 = python_operator(stypy.reporting.localization.Localization(__file__, 419, 15), 'not', result_contains_76540)
    
    # Testing the type of an if condition (line 419)
    if_condition_76542 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 419, 12), result_not__76541)
    # Assigning a type to the variable 'if_condition_76542' (line 419)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 419, 12), 'if_condition_76542', if_condition_76542)
    # SSA begins for if statement (line 419)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to Exception(...): (line 420)
    # Processing the call arguments (line 420)
    str_76544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 420, 32), 'str', 'readfortrancode: Found non-(space,digit) char in the first column.\n\tAre you sure that this code is in fix form?\n\tline=%s')
    
    # Call to repr(...): (line 422)
    # Processing the call arguments (line 422)
    # Getting the type of 'l' (line 422)
    l_76546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 78), 'l', False)
    # Processing the call keyword arguments (line 422)
    kwargs_76547 = {}
    # Getting the type of 'repr' (line 422)
    repr_76545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 73), 'repr', False)
    # Calling repr(args, kwargs) (line 422)
    repr_call_result_76548 = invoke(stypy.reporting.localization.Localization(__file__, 422, 73), repr_76545, *[l_76546], **kwargs_76547)
    
    # Applying the binary operator '%' (line 420)
    result_mod_76549 = python_operator(stypy.reporting.localization.Localization(__file__, 420, 32), '%', str_76544, repr_call_result_76548)
    
    # Processing the call keyword arguments (line 420)
    kwargs_76550 = {}
    # Getting the type of 'Exception' (line 420)
    Exception_76543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 22), 'Exception', False)
    # Calling Exception(args, kwargs) (line 420)
    Exception_call_result_76551 = invoke(stypy.reporting.localization.Localization(__file__, 420, 22), Exception_76543, *[result_mod_76549], **kwargs_76550)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 420, 16), Exception_call_result_76551, 'raise parameter', BaseException)
    # SSA join for if statement (line 419)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Evaluating a boolean operation
    
    # Getting the type of 'cont' (line 424)
    cont_76552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 20), 'cont')
    # Applying the 'not' unary operator (line 424)
    result_not__76553 = python_operator(stypy.reporting.localization.Localization(__file__, 424, 16), 'not', cont_76552)
    
    # Getting the type of 'strictf77' (line 424)
    strictf77_76554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 28), 'strictf77')
    # Applying the binary operator 'or' (line 424)
    result_or_keyword_76555 = python_operator(stypy.reporting.localization.Localization(__file__, 424, 16), 'or', result_not__76553, strictf77_76554)
    
    
    # Evaluating a boolean operation
    
    
    # Call to len(...): (line 424)
    # Processing the call arguments (line 424)
    # Getting the type of 'l' (line 424)
    l_76557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 48), 'l', False)
    # Processing the call keyword arguments (line 424)
    kwargs_76558 = {}
    # Getting the type of 'len' (line 424)
    len_76556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 44), 'len', False)
    # Calling len(args, kwargs) (line 424)
    len_call_result_76559 = invoke(stypy.reporting.localization.Localization(__file__, 424, 44), len_76556, *[l_76557], **kwargs_76558)
    
    int_76560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 53), 'int')
    # Applying the binary operator '>' (line 424)
    result_gt_76561 = python_operator(stypy.reporting.localization.Localization(__file__, 424, 44), '>', len_call_result_76559, int_76560)
    
    
    
    
    # Obtaining the type of the subscript
    int_76562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 65), 'int')
    # Getting the type of 'l' (line 424)
    l_76563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 63), 'l')
    # Obtaining the member '__getitem__' of a type (line 424)
    getitem___76564 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 63), l_76563, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 424)
    subscript_call_result_76565 = invoke(stypy.reporting.localization.Localization(__file__, 424, 63), getitem___76564, int_76562)
    
    str_76566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 71), 'str', ' ')
    # Applying the binary operator '==' (line 424)
    result_eq_76567 = python_operator(stypy.reporting.localization.Localization(__file__, 424, 63), '==', subscript_call_result_76565, str_76566)
    
    # Applying the 'not' unary operator (line 424)
    result_not__76568 = python_operator(stypy.reporting.localization.Localization(__file__, 424, 59), 'not', result_eq_76567)
    
    # Applying the binary operator 'and' (line 424)
    result_and_keyword_76569 = python_operator(stypy.reporting.localization.Localization(__file__, 424, 44), 'and', result_gt_76561, result_not__76568)
    
    # Applying the binary operator 'and' (line 424)
    result_and_keyword_76570 = python_operator(stypy.reporting.localization.Localization(__file__, 424, 15), 'and', result_or_keyword_76555, result_and_keyword_76569)
    
    # Testing the type of an if condition (line 424)
    if_condition_76571 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 424, 12), result_and_keyword_76570)
    # Assigning a type to the variable 'if_condition_76571' (line 424)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 424, 12), 'if_condition_76571', if_condition_76571)
    # SSA begins for if statement (line 424)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 426):
    
    # Assigning a BinOp to a Name (line 426):
    # Getting the type of 'll' (line 426)
    ll_76572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 21), 'll')
    
    # Obtaining the type of the subscript
    int_76573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 426, 28), 'int')
    slice_76574 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 426, 26), int_76573, None, None)
    # Getting the type of 'l' (line 426)
    l_76575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 26), 'l')
    # Obtaining the member '__getitem__' of a type (line 426)
    getitem___76576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 426, 26), l_76575, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 426)
    subscript_call_result_76577 = invoke(stypy.reporting.localization.Localization(__file__, 426, 26), getitem___76576, slice_76574)
    
    # Applying the binary operator '+' (line 426)
    result_add_76578 = python_operator(stypy.reporting.localization.Localization(__file__, 426, 21), '+', ll_76572, subscript_call_result_76577)
    
    # Assigning a type to the variable 'll' (line 426)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 426, 16), 'll', result_add_76578)
    
    # Assigning a Str to a Name (line 427):
    
    # Assigning a Str to a Name (line 427):
    str_76579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 427, 28), 'str', '')
    # Assigning a type to the variable 'finalline' (line 427)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 427, 16), 'finalline', str_76579)
    
    # Assigning a Str to a Name (line 428):
    
    # Assigning a Str to a Name (line 428):
    str_76580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 32), 'str', '')
    # Assigning a type to the variable 'origfinalline' (line 428)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 16), 'origfinalline', str_76580)
    # SSA branch for the else part of an if statement (line 424)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'strictf77' (line 430)
    strictf77_76581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 23), 'strictf77')
    # Applying the 'not' unary operator (line 430)
    result_not__76582 = python_operator(stypy.reporting.localization.Localization(__file__, 430, 19), 'not', strictf77_76581)
    
    # Testing the type of an if condition (line 430)
    if_condition_76583 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 430, 16), result_not__76582)
    # Assigning a type to the variable 'if_condition_76583' (line 430)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 430, 16), 'if_condition_76583', if_condition_76583)
    # SSA begins for if statement (line 430)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 432):
    
    # Assigning a Call to a Name (line 432):
    
    # Call to match(...): (line 432)
    # Processing the call arguments (line 432)
    # Getting the type of 'l' (line 432)
    l_76586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 36), 'l', False)
    # Processing the call keyword arguments (line 432)
    kwargs_76587 = {}
    # Getting the type of 'cont1' (line 432)
    cont1_76584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 24), 'cont1', False)
    # Obtaining the member 'match' of a type (line 432)
    match_76585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 432, 24), cont1_76584, 'match')
    # Calling match(args, kwargs) (line 432)
    match_call_result_76588 = invoke(stypy.reporting.localization.Localization(__file__, 432, 24), match_76585, *[l_76586], **kwargs_76587)
    
    # Assigning a type to the variable 'r' (line 432)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 432, 20), 'r', match_call_result_76588)
    
    # Getting the type of 'r' (line 433)
    r_76589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 23), 'r')
    # Testing the type of an if condition (line 433)
    if_condition_76590 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 433, 20), r_76589)
    # Assigning a type to the variable 'if_condition_76590' (line 433)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 433, 20), 'if_condition_76590', if_condition_76590)
    # SSA begins for if statement (line 433)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 434):
    
    # Assigning a Call to a Name (line 434):
    
    # Call to group(...): (line 434)
    # Processing the call arguments (line 434)
    str_76593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 434, 36), 'str', 'line')
    # Processing the call keyword arguments (line 434)
    kwargs_76594 = {}
    # Getting the type of 'r' (line 434)
    r_76591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 28), 'r', False)
    # Obtaining the member 'group' of a type (line 434)
    group_76592 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 434, 28), r_76591, 'group')
    # Calling group(args, kwargs) (line 434)
    group_call_result_76595 = invoke(stypy.reporting.localization.Localization(__file__, 434, 28), group_76592, *[str_76593], **kwargs_76594)
    
    # Assigning a type to the variable 'l' (line 434)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 434, 24), 'l', group_call_result_76595)
    # SSA join for if statement (line 433)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'cont' (line 435)
    cont_76596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 23), 'cont')
    # Testing the type of an if condition (line 435)
    if_condition_76597 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 435, 20), cont_76596)
    # Assigning a type to the variable 'if_condition_76597' (line 435)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 435, 20), 'if_condition_76597', if_condition_76597)
    # SSA begins for if statement (line 435)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 436):
    
    # Assigning a BinOp to a Name (line 436):
    # Getting the type of 'll' (line 436)
    ll_76598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 29), 'll')
    
    # Call to group(...): (line 436)
    # Processing the call arguments (line 436)
    str_76605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 55), 'str', 'line')
    # Processing the call keyword arguments (line 436)
    kwargs_76606 = {}
    
    # Call to match(...): (line 436)
    # Processing the call arguments (line 436)
    # Getting the type of 'l' (line 436)
    l_76601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 46), 'l', False)
    # Processing the call keyword arguments (line 436)
    kwargs_76602 = {}
    # Getting the type of 'cont2' (line 436)
    cont2_76599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 34), 'cont2', False)
    # Obtaining the member 'match' of a type (line 436)
    match_76600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 436, 34), cont2_76599, 'match')
    # Calling match(args, kwargs) (line 436)
    match_call_result_76603 = invoke(stypy.reporting.localization.Localization(__file__, 436, 34), match_76600, *[l_76601], **kwargs_76602)
    
    # Obtaining the member 'group' of a type (line 436)
    group_76604 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 436, 34), match_call_result_76603, 'group')
    # Calling group(args, kwargs) (line 436)
    group_call_result_76607 = invoke(stypy.reporting.localization.Localization(__file__, 436, 34), group_76604, *[str_76605], **kwargs_76606)
    
    # Applying the binary operator '+' (line 436)
    result_add_76608 = python_operator(stypy.reporting.localization.Localization(__file__, 436, 29), '+', ll_76598, group_call_result_76607)
    
    # Assigning a type to the variable 'll' (line 436)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 436, 24), 'll', result_add_76608)
    
    # Assigning a Str to a Name (line 437):
    
    # Assigning a Str to a Name (line 437):
    str_76609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 36), 'str', '')
    # Assigning a type to the variable 'finalline' (line 437)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 437, 24), 'finalline', str_76609)
    
    # Assigning a Str to a Name (line 438):
    
    # Assigning a Str to a Name (line 438):
    str_76610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 40), 'str', '')
    # Assigning a type to the variable 'origfinalline' (line 438)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 438, 24), 'origfinalline', str_76610)
    # SSA branch for the else part of an if statement (line 435)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 441):
    
    # Assigning a BinOp to a Name (line 441):
    str_76611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 441, 28), 'str', '     ')
    
    # Obtaining the type of the subscript
    int_76612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 441, 40), 'int')
    slice_76613 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 441, 38), int_76612, None, None)
    # Getting the type of 'l' (line 441)
    l_76614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 38), 'l')
    # Obtaining the member '__getitem__' of a type (line 441)
    getitem___76615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 441, 38), l_76614, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 441)
    subscript_call_result_76616 = invoke(stypy.reporting.localization.Localization(__file__, 441, 38), getitem___76615, slice_76613)
    
    # Applying the binary operator '+' (line 441)
    result_add_76617 = python_operator(stypy.reporting.localization.Localization(__file__, 441, 28), '+', str_76611, subscript_call_result_76616)
    
    # Assigning a type to the variable 'l' (line 441)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 441, 24), 'l', result_add_76617)
    
    # Getting the type of 'localdolowercase' (line 442)
    localdolowercase_76618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 27), 'localdolowercase')
    # Testing the type of an if condition (line 442)
    if_condition_76619 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 442, 24), localdolowercase_76618)
    # Assigning a type to the variable 'if_condition_76619' (line 442)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 442, 24), 'if_condition_76619', if_condition_76619)
    # SSA begins for if statement (line 442)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 443):
    
    # Assigning a Call to a Name (line 443):
    
    # Call to lower(...): (line 443)
    # Processing the call keyword arguments (line 443)
    kwargs_76622 = {}
    # Getting the type of 'll' (line 443)
    ll_76620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 40), 'll', False)
    # Obtaining the member 'lower' of a type (line 443)
    lower_76621 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 40), ll_76620, 'lower')
    # Calling lower(args, kwargs) (line 443)
    lower_call_result_76623 = invoke(stypy.reporting.localization.Localization(__file__, 443, 40), lower_76621, *[], **kwargs_76622)
    
    # Assigning a type to the variable 'finalline' (line 443)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 443, 28), 'finalline', lower_call_result_76623)
    # SSA branch for the else part of an if statement (line 442)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Name to a Name (line 445):
    
    # Assigning a Name to a Name (line 445):
    # Getting the type of 'll' (line 445)
    ll_76624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 40), 'll')
    # Assigning a type to the variable 'finalline' (line 445)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 445, 28), 'finalline', ll_76624)
    # SSA join for if statement (line 442)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 446):
    
    # Assigning a Name to a Name (line 446):
    # Getting the type of 'll' (line 446)
    ll_76625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 40), 'll')
    # Assigning a type to the variable 'origfinalline' (line 446)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 446, 24), 'origfinalline', ll_76625)
    
    # Assigning a Name to a Name (line 447):
    
    # Assigning a Name to a Name (line 447):
    # Getting the type of 'l' (line 447)
    l_76626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 29), 'l')
    # Assigning a type to the variable 'll' (line 447)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 447, 24), 'll', l_76626)
    # SSA join for if statement (line 435)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Compare to a Name (line 448):
    
    # Assigning a Compare to a Name (line 448):
    
    # Getting the type of 'r' (line 448)
    r_76627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 28), 'r')
    # Getting the type of 'None' (line 448)
    None_76628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 37), 'None')
    # Applying the binary operator 'isnot' (line 448)
    result_is_not_76629 = python_operator(stypy.reporting.localization.Localization(__file__, 448, 28), 'isnot', r_76627, None_76628)
    
    # Assigning a type to the variable 'cont' (line 448)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 448, 20), 'cont', result_is_not_76629)
    # SSA branch for the else part of an if statement (line 430)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 451):
    
    # Assigning a BinOp to a Name (line 451):
    str_76630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 451, 24), 'str', '     ')
    
    # Obtaining the type of the subscript
    int_76631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 451, 36), 'int')
    slice_76632 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 451, 34), int_76631, None, None)
    # Getting the type of 'l' (line 451)
    l_76633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 34), 'l')
    # Obtaining the member '__getitem__' of a type (line 451)
    getitem___76634 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 451, 34), l_76633, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 451)
    subscript_call_result_76635 = invoke(stypy.reporting.localization.Localization(__file__, 451, 34), getitem___76634, slice_76632)
    
    # Applying the binary operator '+' (line 451)
    result_add_76636 = python_operator(stypy.reporting.localization.Localization(__file__, 451, 24), '+', str_76630, subscript_call_result_76635)
    
    # Assigning a type to the variable 'l' (line 451)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 451, 20), 'l', result_add_76636)
    
    # Getting the type of 'localdolowercase' (line 452)
    localdolowercase_76637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 23), 'localdolowercase')
    # Testing the type of an if condition (line 452)
    if_condition_76638 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 452, 20), localdolowercase_76637)
    # Assigning a type to the variable 'if_condition_76638' (line 452)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 452, 20), 'if_condition_76638', if_condition_76638)
    # SSA begins for if statement (line 452)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 453):
    
    # Assigning a Call to a Name (line 453):
    
    # Call to lower(...): (line 453)
    # Processing the call keyword arguments (line 453)
    kwargs_76641 = {}
    # Getting the type of 'll' (line 453)
    ll_76639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 36), 'll', False)
    # Obtaining the member 'lower' of a type (line 453)
    lower_76640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 36), ll_76639, 'lower')
    # Calling lower(args, kwargs) (line 453)
    lower_call_result_76642 = invoke(stypy.reporting.localization.Localization(__file__, 453, 36), lower_76640, *[], **kwargs_76641)
    
    # Assigning a type to the variable 'finalline' (line 453)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 453, 24), 'finalline', lower_call_result_76642)
    # SSA branch for the else part of an if statement (line 452)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Name to a Name (line 455):
    
    # Assigning a Name to a Name (line 455):
    # Getting the type of 'll' (line 455)
    ll_76643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 36), 'll')
    # Assigning a type to the variable 'finalline' (line 455)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 455, 24), 'finalline', ll_76643)
    # SSA join for if statement (line 452)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 456):
    
    # Assigning a Name to a Name (line 456):
    # Getting the type of 'll' (line 456)
    ll_76644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 36), 'll')
    # Assigning a type to the variable 'origfinalline' (line 456)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 456, 20), 'origfinalline', ll_76644)
    
    # Assigning a Name to a Name (line 457):
    
    # Assigning a Name to a Name (line 457):
    # Getting the type of 'l' (line 457)
    l_76645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 25), 'l')
    # Assigning a type to the variable 'll' (line 457)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 457, 20), 'll', l_76645)
    # SSA join for if statement (line 430)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 424)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 409)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'sourcecodeform' (line 459)
    sourcecodeform_76646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 13), 'sourcecodeform')
    str_76647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 459, 31), 'str', 'free')
    # Applying the binary operator '==' (line 459)
    result_eq_76648 = python_operator(stypy.reporting.localization.Localization(__file__, 459, 13), '==', sourcecodeform_76646, str_76647)
    
    # Testing the type of an if condition (line 459)
    if_condition_76649 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 459, 13), result_eq_76648)
    # Assigning a type to the variable 'if_condition_76649' (line 459)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 459, 13), 'if_condition_76649', if_condition_76649)
    # SSA begins for if statement (line 459)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'cont' (line 460)
    cont_76650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 19), 'cont')
    # Applying the 'not' unary operator (line 460)
    result_not__76651 = python_operator(stypy.reporting.localization.Localization(__file__, 460, 15), 'not', cont_76650)
    
    
    # Getting the type of 'ext' (line 460)
    ext_76652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 28), 'ext')
    str_76653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 35), 'str', '.pyf')
    # Applying the binary operator '==' (line 460)
    result_eq_76654 = python_operator(stypy.reporting.localization.Localization(__file__, 460, 28), '==', ext_76652, str_76653)
    
    # Applying the binary operator 'and' (line 460)
    result_and_keyword_76655 = python_operator(stypy.reporting.localization.Localization(__file__, 460, 15), 'and', result_not__76651, result_eq_76654)
    
    # Call to match(...): (line 460)
    # Processing the call arguments (line 460)
    # Getting the type of 'l' (line 460)
    l_76658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 63), 'l', False)
    # Processing the call keyword arguments (line 460)
    kwargs_76659 = {}
    # Getting the type of 'mline_mark' (line 460)
    mline_mark_76656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 46), 'mline_mark', False)
    # Obtaining the member 'match' of a type (line 460)
    match_76657 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 460, 46), mline_mark_76656, 'match')
    # Calling match(args, kwargs) (line 460)
    match_call_result_76660 = invoke(stypy.reporting.localization.Localization(__file__, 460, 46), match_76657, *[l_76658], **kwargs_76659)
    
    # Applying the binary operator 'and' (line 460)
    result_and_keyword_76661 = python_operator(stypy.reporting.localization.Localization(__file__, 460, 15), 'and', result_and_keyword_76655, match_call_result_76660)
    
    # Testing the type of an if condition (line 460)
    if_condition_76662 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 460, 12), result_and_keyword_76661)
    # Assigning a type to the variable 'if_condition_76662' (line 460)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 460, 12), 'if_condition_76662', if_condition_76662)
    # SSA begins for if statement (line 460)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 461):
    
    # Assigning a BinOp to a Name (line 461):
    # Getting the type of 'l' (line 461)
    l_76663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 20), 'l')
    str_76664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 461, 24), 'str', '\n')
    # Applying the binary operator '+' (line 461)
    result_add_76665 = python_operator(stypy.reporting.localization.Localization(__file__, 461, 20), '+', l_76663, str_76664)
    
    # Assigning a type to the variable 'l' (line 461)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 461, 16), 'l', result_add_76665)
    
    # Getting the type of 'True' (line 462)
    True_76666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 22), 'True')
    # Testing the type of an if condition (line 462)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 462, 16), True_76666)
    # SSA begins for while statement (line 462)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    # Assigning a Call to a Name (line 463):
    
    # Assigning a Call to a Name (line 463):
    
    # Call to readline(...): (line 463)
    # Processing the call keyword arguments (line 463)
    kwargs_76669 = {}
    # Getting the type of 'fin' (line 463)
    fin_76667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 25), 'fin', False)
    # Obtaining the member 'readline' of a type (line 463)
    readline_76668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 463, 25), fin_76667, 'readline')
    # Calling readline(args, kwargs) (line 463)
    readline_call_result_76670 = invoke(stypy.reporting.localization.Localization(__file__, 463, 25), readline_76668, *[], **kwargs_76669)
    
    # Assigning a type to the variable 'lc' (line 463)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 463, 20), 'lc', readline_call_result_76670)
    
    
    # Getting the type of 'lc' (line 464)
    lc_76671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 464, 27), 'lc')
    # Applying the 'not' unary operator (line 464)
    result_not__76672 = python_operator(stypy.reporting.localization.Localization(__file__, 464, 23), 'not', lc_76671)
    
    # Testing the type of an if condition (line 464)
    if_condition_76673 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 464, 20), result_not__76672)
    # Assigning a type to the variable 'if_condition_76673' (line 464)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 464, 20), 'if_condition_76673', if_condition_76673)
    # SSA begins for if statement (line 464)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to errmess(...): (line 465)
    # Processing the call arguments (line 465)
    str_76675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 466, 28), 'str', 'Unexpected end of file when reading multiline\n')
    # Processing the call keyword arguments (line 465)
    kwargs_76676 = {}
    # Getting the type of 'errmess' (line 465)
    errmess_76674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 24), 'errmess', False)
    # Calling errmess(args, kwargs) (line 465)
    errmess_call_result_76677 = invoke(stypy.reporting.localization.Localization(__file__, 465, 24), errmess_76674, *[str_76675], **kwargs_76676)
    
    # SSA join for if statement (line 464)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 468):
    
    # Assigning a BinOp to a Name (line 468):
    # Getting the type of 'l' (line 468)
    l_76678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 24), 'l')
    # Getting the type of 'lc' (line 468)
    lc_76679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 28), 'lc')
    # Applying the binary operator '+' (line 468)
    result_add_76680 = python_operator(stypy.reporting.localization.Localization(__file__, 468, 24), '+', l_76678, lc_76679)
    
    # Assigning a type to the variable 'l' (line 468)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 468, 20), 'l', result_add_76680)
    
    
    # Call to match(...): (line 469)
    # Processing the call arguments (line 469)
    # Getting the type of 'lc' (line 469)
    lc_76683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 40), 'lc', False)
    # Processing the call keyword arguments (line 469)
    kwargs_76684 = {}
    # Getting the type of 'mline_mark' (line 469)
    mline_mark_76681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 23), 'mline_mark', False)
    # Obtaining the member 'match' of a type (line 469)
    match_76682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 469, 23), mline_mark_76681, 'match')
    # Calling match(args, kwargs) (line 469)
    match_call_result_76685 = invoke(stypy.reporting.localization.Localization(__file__, 469, 23), match_76682, *[lc_76683], **kwargs_76684)
    
    # Testing the type of an if condition (line 469)
    if_condition_76686 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 469, 20), match_call_result_76685)
    # Assigning a type to the variable 'if_condition_76686' (line 469)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 469, 20), 'if_condition_76686', if_condition_76686)
    # SSA begins for if statement (line 469)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 469)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for while statement (line 462)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 471):
    
    # Assigning a Call to a Name (line 471):
    
    # Call to rstrip(...): (line 471)
    # Processing the call keyword arguments (line 471)
    kwargs_76689 = {}
    # Getting the type of 'l' (line 471)
    l_76687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 20), 'l', False)
    # Obtaining the member 'rstrip' of a type (line 471)
    rstrip_76688 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 471, 20), l_76687, 'rstrip')
    # Calling rstrip(args, kwargs) (line 471)
    rstrip_call_result_76690 = invoke(stypy.reporting.localization.Localization(__file__, 471, 20), rstrip_76688, *[], **kwargs_76689)
    
    # Assigning a type to the variable 'l' (line 471)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 471, 16), 'l', rstrip_call_result_76690)
    # SSA join for if statement (line 460)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 472):
    
    # Assigning a Call to a Name (line 472):
    
    # Call to match(...): (line 472)
    # Processing the call arguments (line 472)
    # Getting the type of 'l' (line 472)
    l_76693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 28), 'l', False)
    # Processing the call keyword arguments (line 472)
    kwargs_76694 = {}
    # Getting the type of 'cont1' (line 472)
    cont1_76691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'cont1', False)
    # Obtaining the member 'match' of a type (line 472)
    match_76692 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 16), cont1_76691, 'match')
    # Calling match(args, kwargs) (line 472)
    match_call_result_76695 = invoke(stypy.reporting.localization.Localization(__file__, 472, 16), match_76692, *[l_76693], **kwargs_76694)
    
    # Assigning a type to the variable 'r' (line 472)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 12), 'r', match_call_result_76695)
    
    # Getting the type of 'r' (line 473)
    r_76696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 15), 'r')
    # Testing the type of an if condition (line 473)
    if_condition_76697 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 473, 12), r_76696)
    # Assigning a type to the variable 'if_condition_76697' (line 473)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 473, 12), 'if_condition_76697', if_condition_76697)
    # SSA begins for if statement (line 473)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 474):
    
    # Assigning a Call to a Name (line 474):
    
    # Call to group(...): (line 474)
    # Processing the call arguments (line 474)
    str_76700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 28), 'str', 'line')
    # Processing the call keyword arguments (line 474)
    kwargs_76701 = {}
    # Getting the type of 'r' (line 474)
    r_76698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 20), 'r', False)
    # Obtaining the member 'group' of a type (line 474)
    group_76699 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 474, 20), r_76698, 'group')
    # Calling group(args, kwargs) (line 474)
    group_call_result_76702 = invoke(stypy.reporting.localization.Localization(__file__, 474, 20), group_76699, *[str_76700], **kwargs_76701)
    
    # Assigning a type to the variable 'l' (line 474)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 474, 16), 'l', group_call_result_76702)
    # SSA join for if statement (line 473)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'cont' (line 475)
    cont_76703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 15), 'cont')
    # Testing the type of an if condition (line 475)
    if_condition_76704 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 475, 12), cont_76703)
    # Assigning a type to the variable 'if_condition_76704' (line 475)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 475, 12), 'if_condition_76704', if_condition_76704)
    # SSA begins for if statement (line 475)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 476):
    
    # Assigning a BinOp to a Name (line 476):
    # Getting the type of 'll' (line 476)
    ll_76705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 21), 'll')
    
    # Call to group(...): (line 476)
    # Processing the call arguments (line 476)
    str_76712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 476, 47), 'str', 'line')
    # Processing the call keyword arguments (line 476)
    kwargs_76713 = {}
    
    # Call to match(...): (line 476)
    # Processing the call arguments (line 476)
    # Getting the type of 'l' (line 476)
    l_76708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 38), 'l', False)
    # Processing the call keyword arguments (line 476)
    kwargs_76709 = {}
    # Getting the type of 'cont2' (line 476)
    cont2_76706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 26), 'cont2', False)
    # Obtaining the member 'match' of a type (line 476)
    match_76707 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 476, 26), cont2_76706, 'match')
    # Calling match(args, kwargs) (line 476)
    match_call_result_76710 = invoke(stypy.reporting.localization.Localization(__file__, 476, 26), match_76707, *[l_76708], **kwargs_76709)
    
    # Obtaining the member 'group' of a type (line 476)
    group_76711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 476, 26), match_call_result_76710, 'group')
    # Calling group(args, kwargs) (line 476)
    group_call_result_76714 = invoke(stypy.reporting.localization.Localization(__file__, 476, 26), group_76711, *[str_76712], **kwargs_76713)
    
    # Applying the binary operator '+' (line 476)
    result_add_76715 = python_operator(stypy.reporting.localization.Localization(__file__, 476, 21), '+', ll_76705, group_call_result_76714)
    
    # Assigning a type to the variable 'll' (line 476)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 476, 16), 'll', result_add_76715)
    
    # Assigning a Str to a Name (line 477):
    
    # Assigning a Str to a Name (line 477):
    str_76716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 477, 28), 'str', '')
    # Assigning a type to the variable 'finalline' (line 477)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 477, 16), 'finalline', str_76716)
    
    # Assigning a Str to a Name (line 478):
    
    # Assigning a Str to a Name (line 478):
    str_76717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 32), 'str', '')
    # Assigning a type to the variable 'origfinalline' (line 478)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'origfinalline', str_76717)
    # SSA branch for the else part of an if statement (line 475)
    module_type_store.open_ssa_branch('else')
    
    # Getting the type of 'localdolowercase' (line 480)
    localdolowercase_76718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 19), 'localdolowercase')
    # Testing the type of an if condition (line 480)
    if_condition_76719 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 480, 16), localdolowercase_76718)
    # Assigning a type to the variable 'if_condition_76719' (line 480)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 480, 16), 'if_condition_76719', if_condition_76719)
    # SSA begins for if statement (line 480)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 481):
    
    # Assigning a Call to a Name (line 481):
    
    # Call to lower(...): (line 481)
    # Processing the call keyword arguments (line 481)
    kwargs_76722 = {}
    # Getting the type of 'll' (line 481)
    ll_76720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 32), 'll', False)
    # Obtaining the member 'lower' of a type (line 481)
    lower_76721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 32), ll_76720, 'lower')
    # Calling lower(args, kwargs) (line 481)
    lower_call_result_76723 = invoke(stypy.reporting.localization.Localization(__file__, 481, 32), lower_76721, *[], **kwargs_76722)
    
    # Assigning a type to the variable 'finalline' (line 481)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 481, 20), 'finalline', lower_call_result_76723)
    # SSA branch for the else part of an if statement (line 480)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Name to a Name (line 483):
    
    # Assigning a Name to a Name (line 483):
    # Getting the type of 'll' (line 483)
    ll_76724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 32), 'll')
    # Assigning a type to the variable 'finalline' (line 483)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 483, 20), 'finalline', ll_76724)
    # SSA join for if statement (line 480)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 484):
    
    # Assigning a Name to a Name (line 484):
    # Getting the type of 'll' (line 484)
    ll_76725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 32), 'll')
    # Assigning a type to the variable 'origfinalline' (line 484)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 484, 16), 'origfinalline', ll_76725)
    
    # Assigning a Name to a Name (line 485):
    
    # Assigning a Name to a Name (line 485):
    # Getting the type of 'l' (line 485)
    l_76726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 21), 'l')
    # Assigning a type to the variable 'll' (line 485)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 16), 'll', l_76726)
    # SSA join for if statement (line 475)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Compare to a Name (line 486):
    
    # Assigning a Compare to a Name (line 486):
    
    # Getting the type of 'r' (line 486)
    r_76727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 486, 20), 'r')
    # Getting the type of 'None' (line 486)
    None_76728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 486, 29), 'None')
    # Applying the binary operator 'isnot' (line 486)
    result_is_not_76729 = python_operator(stypy.reporting.localization.Localization(__file__, 486, 20), 'isnot', r_76727, None_76728)
    
    # Assigning a type to the variable 'cont' (line 486)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 486, 12), 'cont', result_is_not_76729)
    # SSA branch for the else part of an if statement (line 459)
    module_type_store.open_ssa_branch('else')
    
    # Call to ValueError(...): (line 488)
    # Processing the call arguments (line 488)
    str_76731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 16), 'str', "Flag sourcecodeform must be either 'fix' or 'free': %s")
    
    # Call to repr(...): (line 489)
    # Processing the call arguments (line 489)
    # Getting the type of 'sourcecodeform' (line 489)
    sourcecodeform_76733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 80), 'sourcecodeform', False)
    # Processing the call keyword arguments (line 489)
    kwargs_76734 = {}
    # Getting the type of 'repr' (line 489)
    repr_76732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 75), 'repr', False)
    # Calling repr(args, kwargs) (line 489)
    repr_call_result_76735 = invoke(stypy.reporting.localization.Localization(__file__, 489, 75), repr_76732, *[sourcecodeform_76733], **kwargs_76734)
    
    # Applying the binary operator '%' (line 489)
    result_mod_76736 = python_operator(stypy.reporting.localization.Localization(__file__, 489, 16), '%', str_76731, repr_call_result_76735)
    
    # Processing the call keyword arguments (line 488)
    kwargs_76737 = {}
    # Getting the type of 'ValueError' (line 488)
    ValueError_76730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 18), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 488)
    ValueError_call_result_76738 = invoke(stypy.reporting.localization.Localization(__file__, 488, 18), ValueError_76730, *[result_mod_76736], **kwargs_76737)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 488, 12), ValueError_call_result_76738, 'raise parameter', BaseException)
    # SSA join for if statement (line 459)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 409)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 490):
    
    # Assigning a BinOp to a Name (line 490):
    str_76739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 27), 'str', 'Line #%d in %s:"%s"\n\t')
    
    # Obtaining an instance of the builtin type 'tuple' (line 491)
    tuple_76740 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 491, 12), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 491)
    # Adding element type (line 491)
    
    # Call to filelineno(...): (line 491)
    # Processing the call keyword arguments (line 491)
    kwargs_76743 = {}
    # Getting the type of 'fin' (line 491)
    fin_76741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 12), 'fin', False)
    # Obtaining the member 'filelineno' of a type (line 491)
    filelineno_76742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 491, 12), fin_76741, 'filelineno')
    # Calling filelineno(args, kwargs) (line 491)
    filelineno_call_result_76744 = invoke(stypy.reporting.localization.Localization(__file__, 491, 12), filelineno_76742, *[], **kwargs_76743)
    
    int_76745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 491, 31), 'int')
    # Applying the binary operator '-' (line 491)
    result_sub_76746 = python_operator(stypy.reporting.localization.Localization(__file__, 491, 12), '-', filelineno_call_result_76744, int_76745)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 491, 12), tuple_76740, result_sub_76746)
    # Adding element type (line 491)
    # Getting the type of 'currentfilename' (line 491)
    currentfilename_76747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 34), 'currentfilename')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 491, 12), tuple_76740, currentfilename_76747)
    # Adding element type (line 491)
    # Getting the type of 'l1' (line 491)
    l1_76748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 51), 'l1')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 491, 12), tuple_76740, l1_76748)
    
    # Applying the binary operator '%' (line 490)
    result_mod_76749 = python_operator(stypy.reporting.localization.Localization(__file__, 490, 27), '%', str_76739, tuple_76740)
    
    # Assigning a type to the variable 'filepositiontext' (line 490)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 490, 8), 'filepositiontext', result_mod_76749)
    
    # Assigning a Call to a Name (line 492):
    
    # Assigning a Call to a Name (line 492):
    
    # Call to match(...): (line 492)
    # Processing the call arguments (line 492)
    # Getting the type of 'origfinalline' (line 492)
    origfinalline_76752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 30), 'origfinalline', False)
    # Processing the call keyword arguments (line 492)
    kwargs_76753 = {}
    # Getting the type of 'includeline' (line 492)
    includeline_76750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 12), 'includeline', False)
    # Obtaining the member 'match' of a type (line 492)
    match_76751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 492, 12), includeline_76750, 'match')
    # Calling match(args, kwargs) (line 492)
    match_call_result_76754 = invoke(stypy.reporting.localization.Localization(__file__, 492, 12), match_76751, *[origfinalline_76752], **kwargs_76753)
    
    # Assigning a type to the variable 'm' (line 492)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 492, 8), 'm', match_call_result_76754)
    
    # Getting the type of 'm' (line 493)
    m_76755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 11), 'm')
    # Testing the type of an if condition (line 493)
    if_condition_76756 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 493, 8), m_76755)
    # Assigning a type to the variable 'if_condition_76756' (line 493)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 493, 8), 'if_condition_76756', if_condition_76756)
    # SSA begins for if statement (line 493)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 494):
    
    # Assigning a Call to a Name (line 494):
    
    # Call to group(...): (line 494)
    # Processing the call arguments (line 494)
    str_76759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 25), 'str', 'name')
    # Processing the call keyword arguments (line 494)
    kwargs_76760 = {}
    # Getting the type of 'm' (line 494)
    m_76757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 17), 'm', False)
    # Obtaining the member 'group' of a type (line 494)
    group_76758 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 494, 17), m_76757, 'group')
    # Calling group(args, kwargs) (line 494)
    group_call_result_76761 = invoke(stypy.reporting.localization.Localization(__file__, 494, 17), group_76758, *[str_76759], **kwargs_76760)
    
    # Assigning a type to the variable 'fn' (line 494)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 494, 12), 'fn', group_call_result_76761)
    
    
    # Call to isfile(...): (line 495)
    # Processing the call arguments (line 495)
    # Getting the type of 'fn' (line 495)
    fn_76765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 30), 'fn', False)
    # Processing the call keyword arguments (line 495)
    kwargs_76766 = {}
    # Getting the type of 'os' (line 495)
    os_76762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 15), 'os', False)
    # Obtaining the member 'path' of a type (line 495)
    path_76763 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 495, 15), os_76762, 'path')
    # Obtaining the member 'isfile' of a type (line 495)
    isfile_76764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 495, 15), path_76763, 'isfile')
    # Calling isfile(args, kwargs) (line 495)
    isfile_call_result_76767 = invoke(stypy.reporting.localization.Localization(__file__, 495, 15), isfile_76764, *[fn_76765], **kwargs_76766)
    
    # Testing the type of an if condition (line 495)
    if_condition_76768 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 495, 12), isfile_call_result_76767)
    # Assigning a type to the variable 'if_condition_76768' (line 495)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 495, 12), 'if_condition_76768', if_condition_76768)
    # SSA begins for if statement (line 495)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to readfortrancode(...): (line 496)
    # Processing the call arguments (line 496)
    # Getting the type of 'fn' (line 496)
    fn_76770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 32), 'fn', False)
    # Processing the call keyword arguments (line 496)
    # Getting the type of 'dowithline' (line 496)
    dowithline_76771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 47), 'dowithline', False)
    keyword_76772 = dowithline_76771
    int_76773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 65), 'int')
    keyword_76774 = int_76773
    kwargs_76775 = {'istop': keyword_76774, 'dowithline': keyword_76772}
    # Getting the type of 'readfortrancode' (line 496)
    readfortrancode_76769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 16), 'readfortrancode', False)
    # Calling readfortrancode(args, kwargs) (line 496)
    readfortrancode_call_result_76776 = invoke(stypy.reporting.localization.Localization(__file__, 496, 16), readfortrancode_76769, *[fn_76770], **kwargs_76775)
    
    # SSA branch for the else part of an if statement (line 495)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 498):
    
    # Assigning a BinOp to a Name (line 498):
    
    # Obtaining an instance of the builtin type 'list' (line 498)
    list_76777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 498, 31), 'list')
    # Adding type elements to the builtin type 'list' instance (line 498)
    # Adding element type (line 498)
    
    # Call to dirname(...): (line 499)
    # Processing the call arguments (line 499)
    # Getting the type of 'currentfilename' (line 499)
    currentfilename_76781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 36), 'currentfilename', False)
    # Processing the call keyword arguments (line 499)
    kwargs_76782 = {}
    # Getting the type of 'os' (line 499)
    os_76778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 20), 'os', False)
    # Obtaining the member 'path' of a type (line 499)
    path_76779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 20), os_76778, 'path')
    # Obtaining the member 'dirname' of a type (line 499)
    dirname_76780 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 20), path_76779, 'dirname')
    # Calling dirname(args, kwargs) (line 499)
    dirname_call_result_76783 = invoke(stypy.reporting.localization.Localization(__file__, 499, 20), dirname_76780, *[currentfilename_76781], **kwargs_76782)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 498, 31), list_76777, dirname_call_result_76783)
    
    # Getting the type of 'include_paths' (line 499)
    include_paths_76784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 56), 'include_paths')
    # Applying the binary operator '+' (line 498)
    result_add_76785 = python_operator(stypy.reporting.localization.Localization(__file__, 498, 31), '+', list_76777, include_paths_76784)
    
    # Assigning a type to the variable 'include_dirs' (line 498)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 498, 16), 'include_dirs', result_add_76785)
    
    # Assigning a Num to a Name (line 500):
    
    # Assigning a Num to a Name (line 500):
    int_76786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 500, 28), 'int')
    # Assigning a type to the variable 'foundfile' (line 500)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 500, 16), 'foundfile', int_76786)
    
    # Getting the type of 'include_dirs' (line 501)
    include_dirs_76787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 31), 'include_dirs')
    # Testing the type of a for loop iterable (line 501)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 501, 16), include_dirs_76787)
    # Getting the type of the for loop variable (line 501)
    for_loop_var_76788 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 501, 16), include_dirs_76787)
    # Assigning a type to the variable 'inc_dir' (line 501)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 501, 16), 'inc_dir', for_loop_var_76788)
    # SSA begins for a for statement (line 501)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 502):
    
    # Assigning a Call to a Name (line 502):
    
    # Call to join(...): (line 502)
    # Processing the call arguments (line 502)
    # Getting the type of 'inc_dir' (line 502)
    inc_dir_76792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 39), 'inc_dir', False)
    # Getting the type of 'fn' (line 502)
    fn_76793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 48), 'fn', False)
    # Processing the call keyword arguments (line 502)
    kwargs_76794 = {}
    # Getting the type of 'os' (line 502)
    os_76789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 26), 'os', False)
    # Obtaining the member 'path' of a type (line 502)
    path_76790 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 26), os_76789, 'path')
    # Obtaining the member 'join' of a type (line 502)
    join_76791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 26), path_76790, 'join')
    # Calling join(args, kwargs) (line 502)
    join_call_result_76795 = invoke(stypy.reporting.localization.Localization(__file__, 502, 26), join_76791, *[inc_dir_76792, fn_76793], **kwargs_76794)
    
    # Assigning a type to the variable 'fn1' (line 502)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 502, 20), 'fn1', join_call_result_76795)
    
    
    # Call to isfile(...): (line 503)
    # Processing the call arguments (line 503)
    # Getting the type of 'fn1' (line 503)
    fn1_76799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 38), 'fn1', False)
    # Processing the call keyword arguments (line 503)
    kwargs_76800 = {}
    # Getting the type of 'os' (line 503)
    os_76796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 23), 'os', False)
    # Obtaining the member 'path' of a type (line 503)
    path_76797 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 503, 23), os_76796, 'path')
    # Obtaining the member 'isfile' of a type (line 503)
    isfile_76798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 503, 23), path_76797, 'isfile')
    # Calling isfile(args, kwargs) (line 503)
    isfile_call_result_76801 = invoke(stypy.reporting.localization.Localization(__file__, 503, 23), isfile_76798, *[fn1_76799], **kwargs_76800)
    
    # Testing the type of an if condition (line 503)
    if_condition_76802 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 503, 20), isfile_call_result_76801)
    # Assigning a type to the variable 'if_condition_76802' (line 503)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 503, 20), 'if_condition_76802', if_condition_76802)
    # SSA begins for if statement (line 503)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 504):
    
    # Assigning a Num to a Name (line 504):
    int_76803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 504, 36), 'int')
    # Assigning a type to the variable 'foundfile' (line 504)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 504, 24), 'foundfile', int_76803)
    
    # Call to readfortrancode(...): (line 505)
    # Processing the call arguments (line 505)
    # Getting the type of 'fn1' (line 505)
    fn1_76805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 40), 'fn1', False)
    # Processing the call keyword arguments (line 505)
    # Getting the type of 'dowithline' (line 505)
    dowithline_76806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 56), 'dowithline', False)
    keyword_76807 = dowithline_76806
    int_76808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 74), 'int')
    keyword_76809 = int_76808
    kwargs_76810 = {'istop': keyword_76809, 'dowithline': keyword_76807}
    # Getting the type of 'readfortrancode' (line 505)
    readfortrancode_76804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 24), 'readfortrancode', False)
    # Calling readfortrancode(args, kwargs) (line 505)
    readfortrancode_call_result_76811 = invoke(stypy.reporting.localization.Localization(__file__, 505, 24), readfortrancode_76804, *[fn1_76805], **kwargs_76810)
    
    # SSA join for if statement (line 503)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'foundfile' (line 507)
    foundfile_76812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 23), 'foundfile')
    # Applying the 'not' unary operator (line 507)
    result_not__76813 = python_operator(stypy.reporting.localization.Localization(__file__, 507, 19), 'not', foundfile_76812)
    
    # Testing the type of an if condition (line 507)
    if_condition_76814 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 507, 16), result_not__76813)
    # Assigning a type to the variable 'if_condition_76814' (line 507)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 507, 16), 'if_condition_76814', if_condition_76814)
    # SSA begins for if statement (line 507)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 508)
    # Processing the call arguments (line 508)
    str_76816 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 508, 28), 'str', 'readfortrancode: could not find include file %s in %s. Ignoring.\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 509)
    tuple_76817 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 509)
    # Adding element type (line 509)
    
    # Call to repr(...): (line 509)
    # Processing the call arguments (line 509)
    # Getting the type of 'fn' (line 509)
    fn_76819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 29), 'fn', False)
    # Processing the call keyword arguments (line 509)
    kwargs_76820 = {}
    # Getting the type of 'repr' (line 509)
    repr_76818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 24), 'repr', False)
    # Calling repr(args, kwargs) (line 509)
    repr_call_result_76821 = invoke(stypy.reporting.localization.Localization(__file__, 509, 24), repr_76818, *[fn_76819], **kwargs_76820)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 509, 24), tuple_76817, repr_call_result_76821)
    # Adding element type (line 509)
    
    # Call to join(...): (line 509)
    # Processing the call arguments (line 509)
    # Getting the type of 'include_dirs' (line 509)
    include_dirs_76825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 50), 'include_dirs', False)
    # Processing the call keyword arguments (line 509)
    kwargs_76826 = {}
    # Getting the type of 'os' (line 509)
    os_76822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 34), 'os', False)
    # Obtaining the member 'pathsep' of a type (line 509)
    pathsep_76823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 509, 34), os_76822, 'pathsep')
    # Obtaining the member 'join' of a type (line 509)
    join_76824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 509, 34), pathsep_76823, 'join')
    # Calling join(args, kwargs) (line 509)
    join_call_result_76827 = invoke(stypy.reporting.localization.Localization(__file__, 509, 34), join_76824, *[include_dirs_76825], **kwargs_76826)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 509, 24), tuple_76817, join_call_result_76827)
    
    # Applying the binary operator '%' (line 508)
    result_mod_76828 = python_operator(stypy.reporting.localization.Localization(__file__, 508, 28), '%', str_76816, tuple_76817)
    
    # Processing the call keyword arguments (line 508)
    kwargs_76829 = {}
    # Getting the type of 'outmess' (line 508)
    outmess_76815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 20), 'outmess', False)
    # Calling outmess(args, kwargs) (line 508)
    outmess_call_result_76830 = invoke(stypy.reporting.localization.Localization(__file__, 508, 20), outmess_76815, *[result_mod_76828], **kwargs_76829)
    
    # SSA join for if statement (line 507)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 495)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 493)
    module_type_store.open_ssa_branch('else')
    
    # Call to dowithline(...): (line 511)
    # Processing the call arguments (line 511)
    # Getting the type of 'finalline' (line 511)
    finalline_76832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 23), 'finalline', False)
    # Processing the call keyword arguments (line 511)
    kwargs_76833 = {}
    # Getting the type of 'dowithline' (line 511)
    dowithline_76831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 12), 'dowithline', False)
    # Calling dowithline(args, kwargs) (line 511)
    dowithline_call_result_76834 = invoke(stypy.reporting.localization.Localization(__file__, 511, 12), dowithline_76831, *[finalline_76832], **kwargs_76833)
    
    # SSA join for if statement (line 493)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 512):
    
    # Assigning a Name to a Name (line 512):
    # Getting the type of 'll' (line 512)
    ll_76835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 512, 13), 'll')
    # Assigning a type to the variable 'l1' (line 512)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 512, 8), 'l1', ll_76835)
    # SSA join for while statement (line 363)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'localdolowercase' (line 513)
    localdolowercase_76836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 7), 'localdolowercase')
    # Testing the type of an if condition (line 513)
    if_condition_76837 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 513, 4), localdolowercase_76836)
    # Assigning a type to the variable 'if_condition_76837' (line 513)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 513, 4), 'if_condition_76837', if_condition_76837)
    # SSA begins for if statement (line 513)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 514):
    
    # Assigning a Call to a Name (line 514):
    
    # Call to lower(...): (line 514)
    # Processing the call keyword arguments (line 514)
    kwargs_76840 = {}
    # Getting the type of 'll' (line 514)
    ll_76838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 20), 'll', False)
    # Obtaining the member 'lower' of a type (line 514)
    lower_76839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 514, 20), ll_76838, 'lower')
    # Calling lower(args, kwargs) (line 514)
    lower_call_result_76841 = invoke(stypy.reporting.localization.Localization(__file__, 514, 20), lower_76839, *[], **kwargs_76840)
    
    # Assigning a type to the variable 'finalline' (line 514)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 514, 8), 'finalline', lower_call_result_76841)
    # SSA branch for the else part of an if statement (line 513)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Name to a Name (line 516):
    
    # Assigning a Name to a Name (line 516):
    # Getting the type of 'll' (line 516)
    ll_76842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 20), 'll')
    # Assigning a type to the variable 'finalline' (line 516)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 516, 8), 'finalline', ll_76842)
    # SSA join for if statement (line 513)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 517):
    
    # Assigning a Name to a Name (line 517):
    # Getting the type of 'll' (line 517)
    ll_76843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 20), 'll')
    # Assigning a type to the variable 'origfinalline' (line 517)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 517, 4), 'origfinalline', ll_76843)
    
    # Assigning a BinOp to a Name (line 518):
    
    # Assigning a BinOp to a Name (line 518):
    str_76844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 518, 23), 'str', 'Line #%d in %s:"%s"\n\t')
    
    # Obtaining an instance of the builtin type 'tuple' (line 519)
    tuple_76845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 519, 8), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 519)
    # Adding element type (line 519)
    
    # Call to filelineno(...): (line 519)
    # Processing the call keyword arguments (line 519)
    kwargs_76848 = {}
    # Getting the type of 'fin' (line 519)
    fin_76846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 8), 'fin', False)
    # Obtaining the member 'filelineno' of a type (line 519)
    filelineno_76847 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 519, 8), fin_76846, 'filelineno')
    # Calling filelineno(args, kwargs) (line 519)
    filelineno_call_result_76849 = invoke(stypy.reporting.localization.Localization(__file__, 519, 8), filelineno_76847, *[], **kwargs_76848)
    
    int_76850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 519, 27), 'int')
    # Applying the binary operator '-' (line 519)
    result_sub_76851 = python_operator(stypy.reporting.localization.Localization(__file__, 519, 8), '-', filelineno_call_result_76849, int_76850)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 519, 8), tuple_76845, result_sub_76851)
    # Adding element type (line 519)
    # Getting the type of 'currentfilename' (line 519)
    currentfilename_76852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 30), 'currentfilename')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 519, 8), tuple_76845, currentfilename_76852)
    # Adding element type (line 519)
    # Getting the type of 'l1' (line 519)
    l1_76853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 47), 'l1')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 519, 8), tuple_76845, l1_76853)
    
    # Applying the binary operator '%' (line 518)
    result_mod_76854 = python_operator(stypy.reporting.localization.Localization(__file__, 518, 23), '%', str_76844, tuple_76845)
    
    # Assigning a type to the variable 'filepositiontext' (line 518)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 4), 'filepositiontext', result_mod_76854)
    
    # Assigning a Call to a Name (line 520):
    
    # Assigning a Call to a Name (line 520):
    
    # Call to match(...): (line 520)
    # Processing the call arguments (line 520)
    # Getting the type of 'origfinalline' (line 520)
    origfinalline_76857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 26), 'origfinalline', False)
    # Processing the call keyword arguments (line 520)
    kwargs_76858 = {}
    # Getting the type of 'includeline' (line 520)
    includeline_76855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 8), 'includeline', False)
    # Obtaining the member 'match' of a type (line 520)
    match_76856 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 520, 8), includeline_76855, 'match')
    # Calling match(args, kwargs) (line 520)
    match_call_result_76859 = invoke(stypy.reporting.localization.Localization(__file__, 520, 8), match_76856, *[origfinalline_76857], **kwargs_76858)
    
    # Assigning a type to the variable 'm' (line 520)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 520, 4), 'm', match_call_result_76859)
    
    # Getting the type of 'm' (line 521)
    m_76860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 7), 'm')
    # Testing the type of an if condition (line 521)
    if_condition_76861 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 521, 4), m_76860)
    # Assigning a type to the variable 'if_condition_76861' (line 521)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 521, 4), 'if_condition_76861', if_condition_76861)
    # SSA begins for if statement (line 521)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 522):
    
    # Assigning a Call to a Name (line 522):
    
    # Call to group(...): (line 522)
    # Processing the call arguments (line 522)
    str_76864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 522, 21), 'str', 'name')
    # Processing the call keyword arguments (line 522)
    kwargs_76865 = {}
    # Getting the type of 'm' (line 522)
    m_76862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 13), 'm', False)
    # Obtaining the member 'group' of a type (line 522)
    group_76863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 522, 13), m_76862, 'group')
    # Calling group(args, kwargs) (line 522)
    group_call_result_76866 = invoke(stypy.reporting.localization.Localization(__file__, 522, 13), group_76863, *[str_76864], **kwargs_76865)
    
    # Assigning a type to the variable 'fn' (line 522)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 522, 8), 'fn', group_call_result_76866)
    
    
    # Call to isfile(...): (line 523)
    # Processing the call arguments (line 523)
    # Getting the type of 'fn' (line 523)
    fn_76870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 26), 'fn', False)
    # Processing the call keyword arguments (line 523)
    kwargs_76871 = {}
    # Getting the type of 'os' (line 523)
    os_76867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 11), 'os', False)
    # Obtaining the member 'path' of a type (line 523)
    path_76868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 523, 11), os_76867, 'path')
    # Obtaining the member 'isfile' of a type (line 523)
    isfile_76869 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 523, 11), path_76868, 'isfile')
    # Calling isfile(args, kwargs) (line 523)
    isfile_call_result_76872 = invoke(stypy.reporting.localization.Localization(__file__, 523, 11), isfile_76869, *[fn_76870], **kwargs_76871)
    
    # Testing the type of an if condition (line 523)
    if_condition_76873 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 523, 8), isfile_call_result_76872)
    # Assigning a type to the variable 'if_condition_76873' (line 523)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 523, 8), 'if_condition_76873', if_condition_76873)
    # SSA begins for if statement (line 523)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to readfortrancode(...): (line 524)
    # Processing the call arguments (line 524)
    # Getting the type of 'fn' (line 524)
    fn_76875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 28), 'fn', False)
    # Processing the call keyword arguments (line 524)
    # Getting the type of 'dowithline' (line 524)
    dowithline_76876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 43), 'dowithline', False)
    keyword_76877 = dowithline_76876
    int_76878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 524, 61), 'int')
    keyword_76879 = int_76878
    kwargs_76880 = {'istop': keyword_76879, 'dowithline': keyword_76877}
    # Getting the type of 'readfortrancode' (line 524)
    readfortrancode_76874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 12), 'readfortrancode', False)
    # Calling readfortrancode(args, kwargs) (line 524)
    readfortrancode_call_result_76881 = invoke(stypy.reporting.localization.Localization(__file__, 524, 12), readfortrancode_76874, *[fn_76875], **kwargs_76880)
    
    # SSA branch for the else part of an if statement (line 523)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 526):
    
    # Assigning a BinOp to a Name (line 526):
    
    # Obtaining an instance of the builtin type 'list' (line 526)
    list_76882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 526, 27), 'list')
    # Adding type elements to the builtin type 'list' instance (line 526)
    # Adding element type (line 526)
    
    # Call to dirname(...): (line 526)
    # Processing the call arguments (line 526)
    # Getting the type of 'currentfilename' (line 526)
    currentfilename_76886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 44), 'currentfilename', False)
    # Processing the call keyword arguments (line 526)
    kwargs_76887 = {}
    # Getting the type of 'os' (line 526)
    os_76883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 28), 'os', False)
    # Obtaining the member 'path' of a type (line 526)
    path_76884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 28), os_76883, 'path')
    # Obtaining the member 'dirname' of a type (line 526)
    dirname_76885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 28), path_76884, 'dirname')
    # Calling dirname(args, kwargs) (line 526)
    dirname_call_result_76888 = invoke(stypy.reporting.localization.Localization(__file__, 526, 28), dirname_76885, *[currentfilename_76886], **kwargs_76887)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 526, 27), list_76882, dirname_call_result_76888)
    
    # Getting the type of 'include_paths' (line 526)
    include_paths_76889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 64), 'include_paths')
    # Applying the binary operator '+' (line 526)
    result_add_76890 = python_operator(stypy.reporting.localization.Localization(__file__, 526, 27), '+', list_76882, include_paths_76889)
    
    # Assigning a type to the variable 'include_dirs' (line 526)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 526, 12), 'include_dirs', result_add_76890)
    
    # Assigning a Num to a Name (line 527):
    
    # Assigning a Num to a Name (line 527):
    int_76891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 527, 24), 'int')
    # Assigning a type to the variable 'foundfile' (line 527)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 527, 12), 'foundfile', int_76891)
    
    # Getting the type of 'include_dirs' (line 528)
    include_dirs_76892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 27), 'include_dirs')
    # Testing the type of a for loop iterable (line 528)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 528, 12), include_dirs_76892)
    # Getting the type of the for loop variable (line 528)
    for_loop_var_76893 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 528, 12), include_dirs_76892)
    # Assigning a type to the variable 'inc_dir' (line 528)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 528, 12), 'inc_dir', for_loop_var_76893)
    # SSA begins for a for statement (line 528)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 529):
    
    # Assigning a Call to a Name (line 529):
    
    # Call to join(...): (line 529)
    # Processing the call arguments (line 529)
    # Getting the type of 'inc_dir' (line 529)
    inc_dir_76897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 35), 'inc_dir', False)
    # Getting the type of 'fn' (line 529)
    fn_76898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 44), 'fn', False)
    # Processing the call keyword arguments (line 529)
    kwargs_76899 = {}
    # Getting the type of 'os' (line 529)
    os_76894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 22), 'os', False)
    # Obtaining the member 'path' of a type (line 529)
    path_76895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 22), os_76894, 'path')
    # Obtaining the member 'join' of a type (line 529)
    join_76896 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 22), path_76895, 'join')
    # Calling join(args, kwargs) (line 529)
    join_call_result_76900 = invoke(stypy.reporting.localization.Localization(__file__, 529, 22), join_76896, *[inc_dir_76897, fn_76898], **kwargs_76899)
    
    # Assigning a type to the variable 'fn1' (line 529)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 529, 16), 'fn1', join_call_result_76900)
    
    
    # Call to isfile(...): (line 530)
    # Processing the call arguments (line 530)
    # Getting the type of 'fn1' (line 530)
    fn1_76904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 34), 'fn1', False)
    # Processing the call keyword arguments (line 530)
    kwargs_76905 = {}
    # Getting the type of 'os' (line 530)
    os_76901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 19), 'os', False)
    # Obtaining the member 'path' of a type (line 530)
    path_76902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 19), os_76901, 'path')
    # Obtaining the member 'isfile' of a type (line 530)
    isfile_76903 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 19), path_76902, 'isfile')
    # Calling isfile(args, kwargs) (line 530)
    isfile_call_result_76906 = invoke(stypy.reporting.localization.Localization(__file__, 530, 19), isfile_76903, *[fn1_76904], **kwargs_76905)
    
    # Testing the type of an if condition (line 530)
    if_condition_76907 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 530, 16), isfile_call_result_76906)
    # Assigning a type to the variable 'if_condition_76907' (line 530)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 530, 16), 'if_condition_76907', if_condition_76907)
    # SSA begins for if statement (line 530)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 531):
    
    # Assigning a Num to a Name (line 531):
    int_76908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 32), 'int')
    # Assigning a type to the variable 'foundfile' (line 531)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 531, 20), 'foundfile', int_76908)
    
    # Call to readfortrancode(...): (line 532)
    # Processing the call arguments (line 532)
    # Getting the type of 'fn1' (line 532)
    fn1_76910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 36), 'fn1', False)
    # Processing the call keyword arguments (line 532)
    # Getting the type of 'dowithline' (line 532)
    dowithline_76911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 52), 'dowithline', False)
    keyword_76912 = dowithline_76911
    int_76913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 70), 'int')
    keyword_76914 = int_76913
    kwargs_76915 = {'istop': keyword_76914, 'dowithline': keyword_76912}
    # Getting the type of 'readfortrancode' (line 532)
    readfortrancode_76909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 20), 'readfortrancode', False)
    # Calling readfortrancode(args, kwargs) (line 532)
    readfortrancode_call_result_76916 = invoke(stypy.reporting.localization.Localization(__file__, 532, 20), readfortrancode_76909, *[fn1_76910], **kwargs_76915)
    
    # SSA join for if statement (line 530)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'foundfile' (line 534)
    foundfile_76917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 19), 'foundfile')
    # Applying the 'not' unary operator (line 534)
    result_not__76918 = python_operator(stypy.reporting.localization.Localization(__file__, 534, 15), 'not', foundfile_76917)
    
    # Testing the type of an if condition (line 534)
    if_condition_76919 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 534, 12), result_not__76918)
    # Assigning a type to the variable 'if_condition_76919' (line 534)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 534, 12), 'if_condition_76919', if_condition_76919)
    # SSA begins for if statement (line 534)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 535)
    # Processing the call arguments (line 535)
    str_76921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 535, 24), 'str', 'readfortrancode: could not find include file %s in %s. Ignoring.\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 536)
    tuple_76922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 536, 20), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 536)
    # Adding element type (line 536)
    
    # Call to repr(...): (line 536)
    # Processing the call arguments (line 536)
    # Getting the type of 'fn' (line 536)
    fn_76924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 25), 'fn', False)
    # Processing the call keyword arguments (line 536)
    kwargs_76925 = {}
    # Getting the type of 'repr' (line 536)
    repr_76923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 20), 'repr', False)
    # Calling repr(args, kwargs) (line 536)
    repr_call_result_76926 = invoke(stypy.reporting.localization.Localization(__file__, 536, 20), repr_76923, *[fn_76924], **kwargs_76925)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 20), tuple_76922, repr_call_result_76926)
    # Adding element type (line 536)
    
    # Call to join(...): (line 536)
    # Processing the call arguments (line 536)
    # Getting the type of 'include_dirs' (line 536)
    include_dirs_76930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 46), 'include_dirs', False)
    # Processing the call keyword arguments (line 536)
    kwargs_76931 = {}
    # Getting the type of 'os' (line 536)
    os_76927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 30), 'os', False)
    # Obtaining the member 'pathsep' of a type (line 536)
    pathsep_76928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 30), os_76927, 'pathsep')
    # Obtaining the member 'join' of a type (line 536)
    join_76929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 30), pathsep_76928, 'join')
    # Calling join(args, kwargs) (line 536)
    join_call_result_76932 = invoke(stypy.reporting.localization.Localization(__file__, 536, 30), join_76929, *[include_dirs_76930], **kwargs_76931)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 20), tuple_76922, join_call_result_76932)
    
    # Applying the binary operator '%' (line 535)
    result_mod_76933 = python_operator(stypy.reporting.localization.Localization(__file__, 535, 24), '%', str_76921, tuple_76922)
    
    # Processing the call keyword arguments (line 535)
    kwargs_76934 = {}
    # Getting the type of 'outmess' (line 535)
    outmess_76920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 16), 'outmess', False)
    # Calling outmess(args, kwargs) (line 535)
    outmess_call_result_76935 = invoke(stypy.reporting.localization.Localization(__file__, 535, 16), outmess_76920, *[result_mod_76933], **kwargs_76934)
    
    # SSA join for if statement (line 534)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 523)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 521)
    module_type_store.open_ssa_branch('else')
    
    # Call to dowithline(...): (line 538)
    # Processing the call arguments (line 538)
    # Getting the type of 'finalline' (line 538)
    finalline_76937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 19), 'finalline', False)
    # Processing the call keyword arguments (line 538)
    kwargs_76938 = {}
    # Getting the type of 'dowithline' (line 538)
    dowithline_76936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 8), 'dowithline', False)
    # Calling dowithline(args, kwargs) (line 538)
    dowithline_call_result_76939 = invoke(stypy.reporting.localization.Localization(__file__, 538, 8), dowithline_76936, *[finalline_76937], **kwargs_76938)
    
    # SSA join for if statement (line 521)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Str to a Name (line 539):
    
    # Assigning a Str to a Name (line 539):
    str_76940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 23), 'str', '')
    # Assigning a type to the variable 'filepositiontext' (line 539)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 539, 4), 'filepositiontext', str_76940)
    
    # Call to close(...): (line 540)
    # Processing the call keyword arguments (line 540)
    kwargs_76943 = {}
    # Getting the type of 'fin' (line 540)
    fin_76941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 4), 'fin', False)
    # Obtaining the member 'close' of a type (line 540)
    close_76942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 4), fin_76941, 'close')
    # Calling close(args, kwargs) (line 540)
    close_call_result_76944 = invoke(stypy.reporting.localization.Localization(__file__, 540, 4), close_76942, *[], **kwargs_76943)
    
    
    # Getting the type of 'istop' (line 541)
    istop_76945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 7), 'istop')
    # Testing the type of an if condition (line 541)
    if_condition_76946 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 541, 4), istop_76945)
    # Assigning a type to the variable 'if_condition_76946' (line 541)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 541, 4), 'if_condition_76946', if_condition_76946)
    # SSA begins for if statement (line 541)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to dowithline(...): (line 542)
    # Processing the call arguments (line 542)
    str_76948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 19), 'str', '')
    int_76949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 23), 'int')
    # Processing the call keyword arguments (line 542)
    kwargs_76950 = {}
    # Getting the type of 'dowithline' (line 542)
    dowithline_76947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 8), 'dowithline', False)
    # Calling dowithline(args, kwargs) (line 542)
    dowithline_call_result_76951 = invoke(stypy.reporting.localization.Localization(__file__, 542, 8), dowithline_76947, *[str_76948, int_76949], **kwargs_76950)
    
    # SSA branch for the else part of an if statement (line 541)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Name to a Tuple (line 544):
    
    # Assigning a Subscript to a Name (line 544):
    
    # Obtaining the type of the subscript
    int_76952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 8), 'int')
    # Getting the type of 'saveglobals' (line 545)
    saveglobals_76953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 56), 'saveglobals')
    # Obtaining the member '__getitem__' of a type (line 544)
    getitem___76954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 8), saveglobals_76953, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 544)
    subscript_call_result_76955 = invoke(stypy.reporting.localization.Localization(__file__, 544, 8), getitem___76954, int_76952)
    
    # Assigning a type to the variable 'tuple_var_assignment_75761' (line 544)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'tuple_var_assignment_75761', subscript_call_result_76955)
    
    # Assigning a Subscript to a Name (line 544):
    
    # Obtaining the type of the subscript
    int_76956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 8), 'int')
    # Getting the type of 'saveglobals' (line 545)
    saveglobals_76957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 56), 'saveglobals')
    # Obtaining the member '__getitem__' of a type (line 544)
    getitem___76958 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 8), saveglobals_76957, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 544)
    subscript_call_result_76959 = invoke(stypy.reporting.localization.Localization(__file__, 544, 8), getitem___76958, int_76956)
    
    # Assigning a type to the variable 'tuple_var_assignment_75762' (line 544)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'tuple_var_assignment_75762', subscript_call_result_76959)
    
    # Assigning a Subscript to a Name (line 544):
    
    # Obtaining the type of the subscript
    int_76960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 8), 'int')
    # Getting the type of 'saveglobals' (line 545)
    saveglobals_76961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 56), 'saveglobals')
    # Obtaining the member '__getitem__' of a type (line 544)
    getitem___76962 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 8), saveglobals_76961, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 544)
    subscript_call_result_76963 = invoke(stypy.reporting.localization.Localization(__file__, 544, 8), getitem___76962, int_76960)
    
    # Assigning a type to the variable 'tuple_var_assignment_75763' (line 544)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'tuple_var_assignment_75763', subscript_call_result_76963)
    
    # Assigning a Subscript to a Name (line 544):
    
    # Obtaining the type of the subscript
    int_76964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 8), 'int')
    # Getting the type of 'saveglobals' (line 545)
    saveglobals_76965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 56), 'saveglobals')
    # Obtaining the member '__getitem__' of a type (line 544)
    getitem___76966 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 8), saveglobals_76965, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 544)
    subscript_call_result_76967 = invoke(stypy.reporting.localization.Localization(__file__, 544, 8), getitem___76966, int_76964)
    
    # Assigning a type to the variable 'tuple_var_assignment_75764' (line 544)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'tuple_var_assignment_75764', subscript_call_result_76967)
    
    # Assigning a Subscript to a Name (line 544):
    
    # Obtaining the type of the subscript
    int_76968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 8), 'int')
    # Getting the type of 'saveglobals' (line 545)
    saveglobals_76969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 56), 'saveglobals')
    # Obtaining the member '__getitem__' of a type (line 544)
    getitem___76970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 8), saveglobals_76969, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 544)
    subscript_call_result_76971 = invoke(stypy.reporting.localization.Localization(__file__, 544, 8), getitem___76970, int_76968)
    
    # Assigning a type to the variable 'tuple_var_assignment_75765' (line 544)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'tuple_var_assignment_75765', subscript_call_result_76971)
    
    # Assigning a Subscript to a Name (line 544):
    
    # Obtaining the type of the subscript
    int_76972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 8), 'int')
    # Getting the type of 'saveglobals' (line 545)
    saveglobals_76973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 56), 'saveglobals')
    # Obtaining the member '__getitem__' of a type (line 544)
    getitem___76974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 8), saveglobals_76973, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 544)
    subscript_call_result_76975 = invoke(stypy.reporting.localization.Localization(__file__, 544, 8), getitem___76974, int_76972)
    
    # Assigning a type to the variable 'tuple_var_assignment_75766' (line 544)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'tuple_var_assignment_75766', subscript_call_result_76975)
    
    # Assigning a Subscript to a Name (line 544):
    
    # Obtaining the type of the subscript
    int_76976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 8), 'int')
    # Getting the type of 'saveglobals' (line 545)
    saveglobals_76977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 56), 'saveglobals')
    # Obtaining the member '__getitem__' of a type (line 544)
    getitem___76978 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 8), saveglobals_76977, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 544)
    subscript_call_result_76979 = invoke(stypy.reporting.localization.Localization(__file__, 544, 8), getitem___76978, int_76976)
    
    # Assigning a type to the variable 'tuple_var_assignment_75767' (line 544)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'tuple_var_assignment_75767', subscript_call_result_76979)
    
    # Assigning a Subscript to a Name (line 544):
    
    # Obtaining the type of the subscript
    int_76980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 8), 'int')
    # Getting the type of 'saveglobals' (line 545)
    saveglobals_76981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 56), 'saveglobals')
    # Obtaining the member '__getitem__' of a type (line 544)
    getitem___76982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 8), saveglobals_76981, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 544)
    subscript_call_result_76983 = invoke(stypy.reporting.localization.Localization(__file__, 544, 8), getitem___76982, int_76980)
    
    # Assigning a type to the variable 'tuple_var_assignment_75768' (line 544)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'tuple_var_assignment_75768', subscript_call_result_76983)
    
    # Assigning a Subscript to a Name (line 544):
    
    # Obtaining the type of the subscript
    int_76984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 8), 'int')
    # Getting the type of 'saveglobals' (line 545)
    saveglobals_76985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 56), 'saveglobals')
    # Obtaining the member '__getitem__' of a type (line 544)
    getitem___76986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 8), saveglobals_76985, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 544)
    subscript_call_result_76987 = invoke(stypy.reporting.localization.Localization(__file__, 544, 8), getitem___76986, int_76984)
    
    # Assigning a type to the variable 'tuple_var_assignment_75769' (line 544)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'tuple_var_assignment_75769', subscript_call_result_76987)
    
    # Assigning a Name to a Name (line 544):
    # Getting the type of 'tuple_var_assignment_75761' (line 544)
    tuple_var_assignment_75761_76988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'tuple_var_assignment_75761')
    # Assigning a type to the variable 'gotnextfile' (line 544)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'gotnextfile', tuple_var_assignment_75761_76988)
    
    # Assigning a Name to a Name (line 544):
    # Getting the type of 'tuple_var_assignment_75762' (line 544)
    tuple_var_assignment_75762_76989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'tuple_var_assignment_75762')
    # Assigning a type to the variable 'filepositiontext' (line 544)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 21), 'filepositiontext', tuple_var_assignment_75762_76989)
    
    # Assigning a Name to a Name (line 544):
    # Getting the type of 'tuple_var_assignment_75763' (line 544)
    tuple_var_assignment_75763_76990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'tuple_var_assignment_75763')
    # Assigning a type to the variable 'currentfilename' (line 544)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 39), 'currentfilename', tuple_var_assignment_75763_76990)
    
    # Assigning a Name to a Name (line 544):
    # Getting the type of 'tuple_var_assignment_75764' (line 544)
    tuple_var_assignment_75764_76991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'tuple_var_assignment_75764')
    # Assigning a type to the variable 'sourcecodeform' (line 544)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 56), 'sourcecodeform', tuple_var_assignment_75764_76991)
    
    # Assigning a Name to a Name (line 544):
    # Getting the type of 'tuple_var_assignment_75765' (line 544)
    tuple_var_assignment_75765_76992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'tuple_var_assignment_75765')
    # Assigning a type to the variable 'strictf77' (line 544)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 72), 'strictf77', tuple_var_assignment_75765_76992)
    
    # Assigning a Name to a Name (line 544):
    # Getting the type of 'tuple_var_assignment_75766' (line 544)
    tuple_var_assignment_75766_76993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'tuple_var_assignment_75766')
    # Assigning a type to the variable 'beginpattern' (line 545)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 12), 'beginpattern', tuple_var_assignment_75766_76993)
    
    # Assigning a Name to a Name (line 544):
    # Getting the type of 'tuple_var_assignment_75767' (line 544)
    tuple_var_assignment_75767_76994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'tuple_var_assignment_75767')
    # Assigning a type to the variable 'quiet' (line 545)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 26), 'quiet', tuple_var_assignment_75767_76994)
    
    # Assigning a Name to a Name (line 544):
    # Getting the type of 'tuple_var_assignment_75768' (line 544)
    tuple_var_assignment_75768_76995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'tuple_var_assignment_75768')
    # Assigning a type to the variable 'verbose' (line 545)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 33), 'verbose', tuple_var_assignment_75768_76995)
    
    # Assigning a Name to a Name (line 544):
    # Getting the type of 'tuple_var_assignment_75769' (line 544)
    tuple_var_assignment_75769_76996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'tuple_var_assignment_75769')
    # Assigning a type to the variable 'dolowercase' (line 545)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 42), 'dolowercase', tuple_var_assignment_75769_76996)
    # SSA join for if statement (line 541)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'readfortrancode(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'readfortrancode' in the type store
    # Getting the type of 'stypy_return_type' (line 331)
    stypy_return_type_76997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_76997)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'readfortrancode'
    return stypy_return_type_76997

# Assigning a type to the variable 'readfortrancode' (line 331)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 331, 0), 'readfortrancode', readfortrancode)

# Assigning a BinOp to a Name (line 548):

# Assigning a BinOp to a Name (line 548):
str_76998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 18), 'str', '\\s*(?P<before>%s(?=\\s*(\\b(%s)\\b)))')
str_76999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 4), 'str', '\\s*(?P<this>(\\b(%s)\\b))')
# Applying the binary operator '+' (line 548)
result_add_77000 = python_operator(stypy.reporting.localization.Localization(__file__, 548, 18), '+', str_76998, str_76999)

str_77001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 4), 'str', '\\s*(?P<after>%s)\\s*\\Z')
# Applying the binary operator '+' (line 549)
result_add_77002 = python_operator(stypy.reporting.localization.Localization(__file__, 549, 31), '+', result_add_77000, str_77001)

# Assigning a type to the variable 'beforethisafter' (line 548)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 548, 0), 'beforethisafter', result_add_77002)

# Assigning a Str to a Name (line 552):

# Assigning a Str to a Name (line 552):
str_77003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 15), 'str', 'character|logical|integer|real|complex|double\\s*(precision\\s*(complex|)|complex)|type(?=\\s*\\([\\w\\s,=(*)]*\\))|byte')
# Assigning a type to the variable 'fortrantypes' (line 552)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 0), 'fortrantypes', str_77003)

# Assigning a Tuple to a Name (line 553):

# Assigning a Tuple to a Name (line 553):

# Obtaining an instance of the builtin type 'tuple' (line 553)
tuple_77004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 15), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 553)
# Adding element type (line 553)

# Call to compile(...): (line 553)
# Processing the call arguments (line 553)
# Getting the type of 'beforethisafter' (line 554)
beforethisafter_77007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 554)
tuple_77008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 554, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 554)
# Adding element type (line 554)
str_77009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 554, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 554, 23), tuple_77008, str_77009)
# Adding element type (line 554)
# Getting the type of 'fortrantypes' (line 554)
fortrantypes_77010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 27), 'fortrantypes', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 554, 23), tuple_77008, fortrantypes_77010)
# Adding element type (line 554)
# Getting the type of 'fortrantypes' (line 554)
fortrantypes_77011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 41), 'fortrantypes', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 554, 23), tuple_77008, fortrantypes_77011)
# Adding element type (line 554)
str_77012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 554, 55), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 554, 23), tuple_77008, str_77012)

# Applying the binary operator '%' (line 554)
result_mod_77013 = python_operator(stypy.reporting.localization.Localization(__file__, 554, 4), '%', beforethisafter_77007, tuple_77008)

# Getting the type of 're' (line 554)
re_77014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 62), 're', False)
# Obtaining the member 'I' of a type (line 554)
I_77015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 554, 62), re_77014, 'I')
# Processing the call keyword arguments (line 553)
kwargs_77016 = {}
# Getting the type of 're' (line 553)
re_77005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 15), 're', False)
# Obtaining the member 'compile' of a type (line 553)
compile_77006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 15), re_77005, 'compile')
# Calling compile(args, kwargs) (line 553)
compile_call_result_77017 = invoke(stypy.reporting.localization.Localization(__file__, 553, 15), compile_77006, *[result_mod_77013, I_77015], **kwargs_77016)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 15), tuple_77004, compile_call_result_77017)
# Adding element type (line 553)
str_77018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 554, 69), 'str', 'type')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 15), tuple_77004, str_77018)

# Assigning a type to the variable 'typespattern' (line 553)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 553, 0), 'typespattern', tuple_77004)

# Assigning a Call to a Name (line 555):

# Assigning a Call to a Name (line 555):

# Call to compile(...): (line 555)
# Processing the call arguments (line 555)
# Getting the type of 'beforethisafter' (line 555)
beforethisafter_77021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 35), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 556)
tuple_77022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 556, 4), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 556)
# Adding element type (line 556)
str_77023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 556, 4), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 556, 4), tuple_77022, str_77023)
# Adding element type (line 556)
# Getting the type of 'fortrantypes' (line 556)
fortrantypes_77024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 8), 'fortrantypes', False)
str_77025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 556, 23), 'str', '|static|automatic|undefined')
# Applying the binary operator '+' (line 556)
result_add_77026 = python_operator(stypy.reporting.localization.Localization(__file__, 556, 8), '+', fortrantypes_77024, str_77025)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 556, 4), tuple_77022, result_add_77026)
# Adding element type (line 556)
# Getting the type of 'fortrantypes' (line 556)
fortrantypes_77027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 54), 'fortrantypes', False)
str_77028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 556, 69), 'str', '|static|automatic|undefined')
# Applying the binary operator '+' (line 556)
result_add_77029 = python_operator(stypy.reporting.localization.Localization(__file__, 556, 54), '+', fortrantypes_77027, str_77028)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 556, 4), tuple_77022, result_add_77029)
# Adding element type (line 556)
str_77030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 556, 100), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 556, 4), tuple_77022, str_77030)

# Applying the binary operator '%' (line 555)
result_mod_77031 = python_operator(stypy.reporting.localization.Localization(__file__, 555, 35), '%', beforethisafter_77021, tuple_77022)

# Getting the type of 're' (line 556)
re_77032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 107), 're', False)
# Obtaining the member 'I' of a type (line 556)
I_77033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 107), re_77032, 'I')
# Processing the call keyword arguments (line 555)
kwargs_77034 = {}
# Getting the type of 're' (line 555)
re_77019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 24), 're', False)
# Obtaining the member 'compile' of a type (line 555)
compile_77020 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 24), re_77019, 'compile')
# Calling compile(args, kwargs) (line 555)
compile_call_result_77035 = invoke(stypy.reporting.localization.Localization(__file__, 555, 24), compile_77020, *[result_mod_77031, I_77033], **kwargs_77034)

# Assigning a type to the variable 'typespattern4implicit' (line 555)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 555, 0), 'typespattern4implicit', compile_call_result_77035)

# Assigning a Tuple to a Name (line 558):

# Assigning a Tuple to a Name (line 558):

# Obtaining an instance of the builtin type 'tuple' (line 558)
tuple_77036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 18), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 558)
# Adding element type (line 558)

# Call to compile(...): (line 558)
# Processing the call arguments (line 558)
# Getting the type of 'beforethisafter' (line 558)
beforethisafter_77039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 29), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 559)
tuple_77040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 4), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 559)
# Adding element type (line 559)
str_77041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 4), 'str', '([a-z]+[\\w\\s(=*+-/)]*?|)')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 559, 4), tuple_77040, str_77041)
# Adding element type (line 559)
str_77042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 32), 'str', 'function')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 559, 4), tuple_77040, str_77042)
# Adding element type (line 559)
str_77043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 44), 'str', 'function')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 559, 4), tuple_77040, str_77043)
# Adding element type (line 559)
str_77044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 56), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 559, 4), tuple_77040, str_77044)

# Applying the binary operator '%' (line 558)
result_mod_77045 = python_operator(stypy.reporting.localization.Localization(__file__, 558, 29), '%', beforethisafter_77039, tuple_77040)

# Getting the type of 're' (line 559)
re_77046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 63), 're', False)
# Obtaining the member 'I' of a type (line 559)
I_77047 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 63), re_77046, 'I')
# Processing the call keyword arguments (line 558)
kwargs_77048 = {}
# Getting the type of 're' (line 558)
re_77037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 18), 're', False)
# Obtaining the member 'compile' of a type (line 558)
compile_77038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 18), re_77037, 'compile')
# Calling compile(args, kwargs) (line 558)
compile_call_result_77049 = invoke(stypy.reporting.localization.Localization(__file__, 558, 18), compile_77038, *[result_mod_77045, I_77047], **kwargs_77048)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 18), tuple_77036, compile_call_result_77049)
# Adding element type (line 558)
str_77050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 70), 'str', 'begin')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 18), tuple_77036, str_77050)

# Assigning a type to the variable 'functionpattern' (line 558)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 558, 0), 'functionpattern', tuple_77036)

# Assigning a Tuple to a Name (line 560):

# Assigning a Tuple to a Name (line 560):

# Obtaining an instance of the builtin type 'tuple' (line 560)
tuple_77051 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 20), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 560)
# Adding element type (line 560)

# Call to compile(...): (line 560)
# Processing the call arguments (line 560)
# Getting the type of 'beforethisafter' (line 560)
beforethisafter_77054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 31), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 561)
tuple_77055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 4), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 561)
# Adding element type (line 561)
str_77056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 4), 'str', '[a-z\\s]*?')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 4), tuple_77055, str_77056)
# Adding element type (line 561)
str_77057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 17), 'str', 'subroutine')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 4), tuple_77055, str_77057)
# Adding element type (line 561)
str_77058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 31), 'str', 'subroutine')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 4), tuple_77055, str_77058)
# Adding element type (line 561)
str_77059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 45), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 4), tuple_77055, str_77059)

# Applying the binary operator '%' (line 560)
result_mod_77060 = python_operator(stypy.reporting.localization.Localization(__file__, 560, 31), '%', beforethisafter_77054, tuple_77055)

# Getting the type of 're' (line 561)
re_77061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 52), 're', False)
# Obtaining the member 'I' of a type (line 561)
I_77062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 561, 52), re_77061, 'I')
# Processing the call keyword arguments (line 560)
kwargs_77063 = {}
# Getting the type of 're' (line 560)
re_77052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 20), 're', False)
# Obtaining the member 'compile' of a type (line 560)
compile_77053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 20), re_77052, 'compile')
# Calling compile(args, kwargs) (line 560)
compile_call_result_77064 = invoke(stypy.reporting.localization.Localization(__file__, 560, 20), compile_77053, *[result_mod_77060, I_77062], **kwargs_77063)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 560, 20), tuple_77051, compile_call_result_77064)
# Adding element type (line 560)
str_77065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 59), 'str', 'begin')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 560, 20), tuple_77051, str_77065)

# Assigning a type to the variable 'subroutinepattern' (line 560)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 0), 'subroutinepattern', tuple_77051)

# Assigning a Str to a Name (line 564):

# Assigning a Str to a Name (line 564):
str_77066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 16), 'str', 'program|block\\s*data')
# Assigning a type to the variable 'groupbegins77' (line 564)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 564, 0), 'groupbegins77', str_77066)

# Assigning a Tuple to a Name (line 565):

# Assigning a Tuple to a Name (line 565):

# Obtaining an instance of the builtin type 'tuple' (line 565)
tuple_77067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 565)
# Adding element type (line 565)

# Call to compile(...): (line 565)
# Processing the call arguments (line 565)
# Getting the type of 'beforethisafter' (line 566)
beforethisafter_77070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 566)
tuple_77071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 566)
# Adding element type (line 566)
str_77072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 23), tuple_77071, str_77072)
# Adding element type (line 566)
# Getting the type of 'groupbegins77' (line 566)
groupbegins77_77073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 27), 'groupbegins77', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 23), tuple_77071, groupbegins77_77073)
# Adding element type (line 566)
# Getting the type of 'groupbegins77' (line 566)
groupbegins77_77074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 42), 'groupbegins77', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 23), tuple_77071, groupbegins77_77074)
# Adding element type (line 566)
str_77075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 57), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 23), tuple_77071, str_77075)

# Applying the binary operator '%' (line 566)
result_mod_77076 = python_operator(stypy.reporting.localization.Localization(__file__, 566, 4), '%', beforethisafter_77070, tuple_77071)

# Getting the type of 're' (line 566)
re_77077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 64), 're', False)
# Obtaining the member 'I' of a type (line 566)
I_77078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 64), re_77077, 'I')
# Processing the call keyword arguments (line 565)
kwargs_77079 = {}
# Getting the type of 're' (line 565)
re_77068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 17), 're', False)
# Obtaining the member 'compile' of a type (line 565)
compile_77069 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 565, 17), re_77068, 'compile')
# Calling compile(args, kwargs) (line 565)
compile_call_result_77080 = invoke(stypy.reporting.localization.Localization(__file__, 565, 17), compile_77069, *[result_mod_77076, I_77078], **kwargs_77079)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 17), tuple_77067, compile_call_result_77080)
# Adding element type (line 565)
str_77081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 71), 'str', 'begin')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 17), tuple_77067, str_77081)

# Assigning a type to the variable 'beginpattern77' (line 565)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 565, 0), 'beginpattern77', tuple_77067)

# Assigning a BinOp to a Name (line 567):

# Assigning a BinOp to a Name (line 567):
# Getting the type of 'groupbegins77' (line 567)
groupbegins77_77082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 16), 'groupbegins77')
str_77083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 4), 'str', '|module(?!\\s*procedure)|python\\s*module|interface|type(?!\\s*\\()')
# Applying the binary operator '+' (line 567)
result_add_77084 = python_operator(stypy.reporting.localization.Localization(__file__, 567, 16), '+', groupbegins77_77082, str_77083)

# Assigning a type to the variable 'groupbegins90' (line 567)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 567, 0), 'groupbegins90', result_add_77084)

# Assigning a Tuple to a Name (line 569):

# Assigning a Tuple to a Name (line 569):

# Obtaining an instance of the builtin type 'tuple' (line 569)
tuple_77085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 569)
# Adding element type (line 569)

# Call to compile(...): (line 569)
# Processing the call arguments (line 569)
# Getting the type of 'beforethisafter' (line 570)
beforethisafter_77088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 570)
tuple_77089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 570)
# Adding element type (line 570)
str_77090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 23), tuple_77089, str_77090)
# Adding element type (line 570)
# Getting the type of 'groupbegins90' (line 570)
groupbegins90_77091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 27), 'groupbegins90', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 23), tuple_77089, groupbegins90_77091)
# Adding element type (line 570)
# Getting the type of 'groupbegins90' (line 570)
groupbegins90_77092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 42), 'groupbegins90', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 23), tuple_77089, groupbegins90_77092)
# Adding element type (line 570)
str_77093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 57), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 23), tuple_77089, str_77093)

# Applying the binary operator '%' (line 570)
result_mod_77094 = python_operator(stypy.reporting.localization.Localization(__file__, 570, 4), '%', beforethisafter_77088, tuple_77089)

# Getting the type of 're' (line 570)
re_77095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 64), 're', False)
# Obtaining the member 'I' of a type (line 570)
I_77096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 64), re_77095, 'I')
# Processing the call keyword arguments (line 569)
kwargs_77097 = {}
# Getting the type of 're' (line 569)
re_77086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 17), 're', False)
# Obtaining the member 'compile' of a type (line 569)
compile_77087 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 569, 17), re_77086, 'compile')
# Calling compile(args, kwargs) (line 569)
compile_call_result_77098 = invoke(stypy.reporting.localization.Localization(__file__, 569, 17), compile_77087, *[result_mod_77094, I_77096], **kwargs_77097)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 17), tuple_77085, compile_call_result_77098)
# Adding element type (line 569)
str_77099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 71), 'str', 'begin')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 17), tuple_77085, str_77099)

# Assigning a type to the variable 'beginpattern90' (line 569)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 569, 0), 'beginpattern90', tuple_77085)

# Assigning a Str to a Name (line 571):

# Assigning a Str to a Name (line 571):
str_77100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 12), 'str', 'end|endprogram|endblockdata|endmodule|endpythonmodule|endinterface')
# Assigning a type to the variable 'groupends' (line 571)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 0), 'groupends', str_77100)

# Assigning a Tuple to a Name (line 572):

# Assigning a Tuple to a Name (line 572):

# Obtaining an instance of the builtin type 'tuple' (line 572)
tuple_77101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 13), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 572)
# Adding element type (line 572)

# Call to compile(...): (line 572)
# Processing the call arguments (line 572)
# Getting the type of 'beforethisafter' (line 573)
beforethisafter_77104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 573)
tuple_77105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 573)
# Adding element type (line 573)
str_77106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 23), tuple_77105, str_77106)
# Adding element type (line 573)
# Getting the type of 'groupends' (line 573)
groupends_77107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 27), 'groupends', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 23), tuple_77105, groupends_77107)
# Adding element type (line 573)
# Getting the type of 'groupends' (line 573)
groupends_77108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 38), 'groupends', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 23), tuple_77105, groupends_77108)
# Adding element type (line 573)
str_77109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 49), 'str', '[\\w\\s]*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 23), tuple_77105, str_77109)

# Applying the binary operator '%' (line 573)
result_mod_77110 = python_operator(stypy.reporting.localization.Localization(__file__, 573, 4), '%', beforethisafter_77104, tuple_77105)

# Getting the type of 're' (line 573)
re_77111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 61), 're', False)
# Obtaining the member 'I' of a type (line 573)
I_77112 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 573, 61), re_77111, 'I')
# Processing the call keyword arguments (line 572)
kwargs_77113 = {}
# Getting the type of 're' (line 572)
re_77102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 13), 're', False)
# Obtaining the member 'compile' of a type (line 572)
compile_77103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 13), re_77102, 'compile')
# Calling compile(args, kwargs) (line 572)
compile_call_result_77114 = invoke(stypy.reporting.localization.Localization(__file__, 572, 13), compile_77103, *[result_mod_77110, I_77112], **kwargs_77113)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 13), tuple_77101, compile_call_result_77114)
# Adding element type (line 572)
str_77115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 68), 'str', 'end')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 13), tuple_77101, str_77115)

# Assigning a type to the variable 'endpattern' (line 572)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 572, 0), 'endpattern', tuple_77101)

# Assigning a Str to a Name (line 575):

# Assigning a Str to a Name (line 575):
str_77116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 9), 'str', '(end\\s*(if|do|where|select|while|forall))|(module\\s*procedure)')
# Assigning a type to the variable 'endifs' (line 575)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 0), 'endifs', str_77116)

# Assigning a Tuple to a Name (line 576):

# Assigning a Tuple to a Name (line 576):

# Obtaining an instance of the builtin type 'tuple' (line 576)
tuple_77117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 15), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 576)
# Adding element type (line 576)

# Call to compile(...): (line 576)
# Processing the call arguments (line 576)
# Getting the type of 'beforethisafter' (line 577)
beforethisafter_77120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 577)
tuple_77121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 577, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 577)
# Adding element type (line 577)
str_77122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 577, 23), 'str', '[\\w]*?')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 577, 23), tuple_77121, str_77122)
# Adding element type (line 577)
# Getting the type of 'endifs' (line 577)
endifs_77123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 33), 'endifs', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 577, 23), tuple_77121, endifs_77123)
# Adding element type (line 577)
# Getting the type of 'endifs' (line 577)
endifs_77124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 41), 'endifs', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 577, 23), tuple_77121, endifs_77124)
# Adding element type (line 577)
str_77125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 577, 49), 'str', '[\\w\\s]*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 577, 23), tuple_77121, str_77125)

# Applying the binary operator '%' (line 577)
result_mod_77126 = python_operator(stypy.reporting.localization.Localization(__file__, 577, 4), '%', beforethisafter_77120, tuple_77121)

# Getting the type of 're' (line 577)
re_77127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 61), 're', False)
# Obtaining the member 'I' of a type (line 577)
I_77128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 577, 61), re_77127, 'I')
# Processing the call keyword arguments (line 576)
kwargs_77129 = {}
# Getting the type of 're' (line 576)
re_77118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 15), 're', False)
# Obtaining the member 'compile' of a type (line 576)
compile_77119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 576, 15), re_77118, 'compile')
# Calling compile(args, kwargs) (line 576)
compile_call_result_77130 = invoke(stypy.reporting.localization.Localization(__file__, 576, 15), compile_77119, *[result_mod_77126, I_77128], **kwargs_77129)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 15), tuple_77117, compile_call_result_77130)
# Adding element type (line 576)
str_77131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 577, 68), 'str', 'endif')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 15), tuple_77117, str_77131)

# Assigning a type to the variable 'endifpattern' (line 576)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 576, 0), 'endifpattern', tuple_77117)

# Assigning a Tuple to a Name (line 579):

# Assigning a Tuple to a Name (line 579):

# Obtaining an instance of the builtin type 'tuple' (line 579)
tuple_77132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 579, 18), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 579)
# Adding element type (line 579)

# Call to compile(...): (line 579)
# Processing the call arguments (line 579)
# Getting the type of 'beforethisafter' (line 580)
beforethisafter_77135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 580)
tuple_77136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 580, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 580)
# Adding element type (line 580)
str_77137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 580, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 23), tuple_77136, str_77137)
# Adding element type (line 580)
str_77138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 580, 27), 'str', 'implicit')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 23), tuple_77136, str_77138)
# Adding element type (line 580)
str_77139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 580, 39), 'str', 'implicit')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 23), tuple_77136, str_77139)
# Adding element type (line 580)
str_77140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 580, 51), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 23), tuple_77136, str_77140)

# Applying the binary operator '%' (line 580)
result_mod_77141 = python_operator(stypy.reporting.localization.Localization(__file__, 580, 4), '%', beforethisafter_77135, tuple_77136)

# Getting the type of 're' (line 580)
re_77142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 58), 're', False)
# Obtaining the member 'I' of a type (line 580)
I_77143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 58), re_77142, 'I')
# Processing the call keyword arguments (line 579)
kwargs_77144 = {}
# Getting the type of 're' (line 579)
re_77133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 18), 're', False)
# Obtaining the member 'compile' of a type (line 579)
compile_77134 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 18), re_77133, 'compile')
# Calling compile(args, kwargs) (line 579)
compile_call_result_77145 = invoke(stypy.reporting.localization.Localization(__file__, 579, 18), compile_77134, *[result_mod_77141, I_77143], **kwargs_77144)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 579, 18), tuple_77132, compile_call_result_77145)
# Adding element type (line 579)
str_77146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 580, 65), 'str', 'implicit')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 579, 18), tuple_77132, str_77146)

# Assigning a type to the variable 'implicitpattern' (line 579)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 579, 0), 'implicitpattern', tuple_77132)

# Assigning a Tuple to a Name (line 581):

# Assigning a Tuple to a Name (line 581):

# Obtaining an instance of the builtin type 'tuple' (line 581)
tuple_77147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 19), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 581)
# Adding element type (line 581)

# Call to compile(...): (line 581)
# Processing the call arguments (line 581)
# Getting the type of 'beforethisafter' (line 581)
beforethisafter_77150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 30), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 582)
tuple_77151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 4), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 582)
# Adding element type (line 582)
str_77152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 4), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 582, 4), tuple_77151, str_77152)
# Adding element type (line 582)
str_77153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 8), 'str', 'dimension|virtual')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 582, 4), tuple_77151, str_77153)
# Adding element type (line 582)
str_77154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 29), 'str', 'dimension|virtual')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 582, 4), tuple_77151, str_77154)
# Adding element type (line 582)
str_77155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 50), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 582, 4), tuple_77151, str_77155)

# Applying the binary operator '%' (line 581)
result_mod_77156 = python_operator(stypy.reporting.localization.Localization(__file__, 581, 30), '%', beforethisafter_77150, tuple_77151)

# Getting the type of 're' (line 582)
re_77157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 57), 're', False)
# Obtaining the member 'I' of a type (line 582)
I_77158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 57), re_77157, 'I')
# Processing the call keyword arguments (line 581)
kwargs_77159 = {}
# Getting the type of 're' (line 581)
re_77148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 19), 're', False)
# Obtaining the member 'compile' of a type (line 581)
compile_77149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 19), re_77148, 'compile')
# Calling compile(args, kwargs) (line 581)
compile_call_result_77160 = invoke(stypy.reporting.localization.Localization(__file__, 581, 19), compile_77149, *[result_mod_77156, I_77158], **kwargs_77159)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 581, 19), tuple_77147, compile_call_result_77160)
# Adding element type (line 581)
str_77161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 64), 'str', 'dimension')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 581, 19), tuple_77147, str_77161)

# Assigning a type to the variable 'dimensionpattern' (line 581)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 581, 0), 'dimensionpattern', tuple_77147)

# Assigning a Tuple to a Name (line 583):

# Assigning a Tuple to a Name (line 583):

# Obtaining an instance of the builtin type 'tuple' (line 583)
tuple_77162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 583, 18), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 583)
# Adding element type (line 583)

# Call to compile(...): (line 583)
# Processing the call arguments (line 583)
# Getting the type of 'beforethisafter' (line 584)
beforethisafter_77165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 584)
tuple_77166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 584)
# Adding element type (line 584)
str_77167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 584, 23), tuple_77166, str_77167)
# Adding element type (line 584)
str_77168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 27), 'str', 'external')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 584, 23), tuple_77166, str_77168)
# Adding element type (line 584)
str_77169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 39), 'str', 'external')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 584, 23), tuple_77166, str_77169)
# Adding element type (line 584)
str_77170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 51), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 584, 23), tuple_77166, str_77170)

# Applying the binary operator '%' (line 584)
result_mod_77171 = python_operator(stypy.reporting.localization.Localization(__file__, 584, 4), '%', beforethisafter_77165, tuple_77166)

# Getting the type of 're' (line 584)
re_77172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 58), 're', False)
# Obtaining the member 'I' of a type (line 584)
I_77173 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 58), re_77172, 'I')
# Processing the call keyword arguments (line 583)
kwargs_77174 = {}
# Getting the type of 're' (line 583)
re_77163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 18), 're', False)
# Obtaining the member 'compile' of a type (line 583)
compile_77164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 583, 18), re_77163, 'compile')
# Calling compile(args, kwargs) (line 583)
compile_call_result_77175 = invoke(stypy.reporting.localization.Localization(__file__, 583, 18), compile_77164, *[result_mod_77171, I_77173], **kwargs_77174)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 583, 18), tuple_77162, compile_call_result_77175)
# Adding element type (line 583)
str_77176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 65), 'str', 'external')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 583, 18), tuple_77162, str_77176)

# Assigning a type to the variable 'externalpattern' (line 583)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 583, 0), 'externalpattern', tuple_77162)

# Assigning a Tuple to a Name (line 585):

# Assigning a Tuple to a Name (line 585):

# Obtaining an instance of the builtin type 'tuple' (line 585)
tuple_77177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 18), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 585)
# Adding element type (line 585)

# Call to compile(...): (line 585)
# Processing the call arguments (line 585)
# Getting the type of 'beforethisafter' (line 586)
beforethisafter_77180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 586)
tuple_77181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 586)
# Adding element type (line 586)
str_77182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 586, 23), tuple_77181, str_77182)
# Adding element type (line 586)
str_77183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 27), 'str', 'optional')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 586, 23), tuple_77181, str_77183)
# Adding element type (line 586)
str_77184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 39), 'str', 'optional')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 586, 23), tuple_77181, str_77184)
# Adding element type (line 586)
str_77185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 51), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 586, 23), tuple_77181, str_77185)

# Applying the binary operator '%' (line 586)
result_mod_77186 = python_operator(stypy.reporting.localization.Localization(__file__, 586, 4), '%', beforethisafter_77180, tuple_77181)

# Getting the type of 're' (line 586)
re_77187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 58), 're', False)
# Obtaining the member 'I' of a type (line 586)
I_77188 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 586, 58), re_77187, 'I')
# Processing the call keyword arguments (line 585)
kwargs_77189 = {}
# Getting the type of 're' (line 585)
re_77178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 18), 're', False)
# Obtaining the member 'compile' of a type (line 585)
compile_77179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 18), re_77178, 'compile')
# Calling compile(args, kwargs) (line 585)
compile_call_result_77190 = invoke(stypy.reporting.localization.Localization(__file__, 585, 18), compile_77179, *[result_mod_77186, I_77188], **kwargs_77189)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 18), tuple_77177, compile_call_result_77190)
# Adding element type (line 585)
str_77191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 65), 'str', 'optional')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 18), tuple_77177, str_77191)

# Assigning a type to the variable 'optionalpattern' (line 585)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 585, 0), 'optionalpattern', tuple_77177)

# Assigning a Tuple to a Name (line 587):

# Assigning a Tuple to a Name (line 587):

# Obtaining an instance of the builtin type 'tuple' (line 587)
tuple_77192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 587, 18), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 587)
# Adding element type (line 587)

# Call to compile(...): (line 587)
# Processing the call arguments (line 587)
# Getting the type of 'beforethisafter' (line 588)
beforethisafter_77195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 588)
tuple_77196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 588)
# Adding element type (line 588)
str_77197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 23), tuple_77196, str_77197)
# Adding element type (line 588)
str_77198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 27), 'str', 'required')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 23), tuple_77196, str_77198)
# Adding element type (line 588)
str_77199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 39), 'str', 'required')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 23), tuple_77196, str_77199)
# Adding element type (line 588)
str_77200 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 51), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 23), tuple_77196, str_77200)

# Applying the binary operator '%' (line 588)
result_mod_77201 = python_operator(stypy.reporting.localization.Localization(__file__, 588, 4), '%', beforethisafter_77195, tuple_77196)

# Getting the type of 're' (line 588)
re_77202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 58), 're', False)
# Obtaining the member 'I' of a type (line 588)
I_77203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 588, 58), re_77202, 'I')
# Processing the call keyword arguments (line 587)
kwargs_77204 = {}
# Getting the type of 're' (line 587)
re_77193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 18), 're', False)
# Obtaining the member 'compile' of a type (line 587)
compile_77194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 587, 18), re_77193, 'compile')
# Calling compile(args, kwargs) (line 587)
compile_call_result_77205 = invoke(stypy.reporting.localization.Localization(__file__, 587, 18), compile_77194, *[result_mod_77201, I_77203], **kwargs_77204)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 587, 18), tuple_77192, compile_call_result_77205)
# Adding element type (line 587)
str_77206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 65), 'str', 'required')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 587, 18), tuple_77192, str_77206)

# Assigning a type to the variable 'requiredpattern' (line 587)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 587, 0), 'requiredpattern', tuple_77192)

# Assigning a Tuple to a Name (line 589):

# Assigning a Tuple to a Name (line 589):

# Obtaining an instance of the builtin type 'tuple' (line 589)
tuple_77207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 589, 16), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 589)
# Adding element type (line 589)

# Call to compile(...): (line 589)
# Processing the call arguments (line 589)
# Getting the type of 'beforethisafter' (line 590)
beforethisafter_77210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 590)
tuple_77211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 590)
# Adding element type (line 590)
str_77212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 590, 23), tuple_77211, str_77212)
# Adding element type (line 590)
str_77213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 27), 'str', 'public')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 590, 23), tuple_77211, str_77213)
# Adding element type (line 590)
str_77214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 37), 'str', 'public')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 590, 23), tuple_77211, str_77214)
# Adding element type (line 590)
str_77215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 47), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 590, 23), tuple_77211, str_77215)

# Applying the binary operator '%' (line 590)
result_mod_77216 = python_operator(stypy.reporting.localization.Localization(__file__, 590, 4), '%', beforethisafter_77210, tuple_77211)

# Getting the type of 're' (line 590)
re_77217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 54), 're', False)
# Obtaining the member 'I' of a type (line 590)
I_77218 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 590, 54), re_77217, 'I')
# Processing the call keyword arguments (line 589)
kwargs_77219 = {}
# Getting the type of 're' (line 589)
re_77208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 16), 're', False)
# Obtaining the member 'compile' of a type (line 589)
compile_77209 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 589, 16), re_77208, 'compile')
# Calling compile(args, kwargs) (line 589)
compile_call_result_77220 = invoke(stypy.reporting.localization.Localization(__file__, 589, 16), compile_77209, *[result_mod_77216, I_77218], **kwargs_77219)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 589, 16), tuple_77207, compile_call_result_77220)
# Adding element type (line 589)
str_77221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 61), 'str', 'public')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 589, 16), tuple_77207, str_77221)

# Assigning a type to the variable 'publicpattern' (line 589)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 589, 0), 'publicpattern', tuple_77207)

# Assigning a Tuple to a Name (line 591):

# Assigning a Tuple to a Name (line 591):

# Obtaining an instance of the builtin type 'tuple' (line 591)
tuple_77222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 591, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 591)
# Adding element type (line 591)

# Call to compile(...): (line 591)
# Processing the call arguments (line 591)
# Getting the type of 'beforethisafter' (line 592)
beforethisafter_77225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 592)
tuple_77226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 592)
# Adding element type (line 592)
str_77227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 592, 23), tuple_77226, str_77227)
# Adding element type (line 592)
str_77228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 27), 'str', 'private')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 592, 23), tuple_77226, str_77228)
# Adding element type (line 592)
str_77229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 38), 'str', 'private')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 592, 23), tuple_77226, str_77229)
# Adding element type (line 592)
str_77230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 49), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 592, 23), tuple_77226, str_77230)

# Applying the binary operator '%' (line 592)
result_mod_77231 = python_operator(stypy.reporting.localization.Localization(__file__, 592, 4), '%', beforethisafter_77225, tuple_77226)

# Getting the type of 're' (line 592)
re_77232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 56), 're', False)
# Obtaining the member 'I' of a type (line 592)
I_77233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 592, 56), re_77232, 'I')
# Processing the call keyword arguments (line 591)
kwargs_77234 = {}
# Getting the type of 're' (line 591)
re_77223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 17), 're', False)
# Obtaining the member 'compile' of a type (line 591)
compile_77224 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 591, 17), re_77223, 'compile')
# Calling compile(args, kwargs) (line 591)
compile_call_result_77235 = invoke(stypy.reporting.localization.Localization(__file__, 591, 17), compile_77224, *[result_mod_77231, I_77233], **kwargs_77234)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 17), tuple_77222, compile_call_result_77235)
# Adding element type (line 591)
str_77236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 63), 'str', 'private')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 17), tuple_77222, str_77236)

# Assigning a type to the variable 'privatepattern' (line 591)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 591, 0), 'privatepattern', tuple_77222)

# Assigning a Tuple to a Name (line 593):

# Assigning a Tuple to a Name (line 593):

# Obtaining an instance of the builtin type 'tuple' (line 593)
tuple_77237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 18), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 593)
# Adding element type (line 593)

# Call to compile(...): (line 593)
# Processing the call arguments (line 593)
# Getting the type of 'beforethisafter' (line 594)
beforethisafter_77240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 594)
tuple_77241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 594)
# Adding element type (line 594)
str_77242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 23), tuple_77241, str_77242)
# Adding element type (line 594)
str_77243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 27), 'str', 'intrisic')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 23), tuple_77241, str_77243)
# Adding element type (line 594)
str_77244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 39), 'str', 'intrisic')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 23), tuple_77241, str_77244)
# Adding element type (line 594)
str_77245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 51), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 23), tuple_77241, str_77245)

# Applying the binary operator '%' (line 594)
result_mod_77246 = python_operator(stypy.reporting.localization.Localization(__file__, 594, 4), '%', beforethisafter_77240, tuple_77241)

# Getting the type of 're' (line 594)
re_77247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 58), 're', False)
# Obtaining the member 'I' of a type (line 594)
I_77248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 594, 58), re_77247, 'I')
# Processing the call keyword arguments (line 593)
kwargs_77249 = {}
# Getting the type of 're' (line 593)
re_77238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 18), 're', False)
# Obtaining the member 'compile' of a type (line 593)
compile_77239 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 593, 18), re_77238, 'compile')
# Calling compile(args, kwargs) (line 593)
compile_call_result_77250 = invoke(stypy.reporting.localization.Localization(__file__, 593, 18), compile_77239, *[result_mod_77246, I_77248], **kwargs_77249)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 593, 18), tuple_77237, compile_call_result_77250)
# Adding element type (line 593)
str_77251 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 65), 'str', 'intrisic')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 593, 18), tuple_77237, str_77251)

# Assigning a type to the variable 'intrisicpattern' (line 593)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 0), 'intrisicpattern', tuple_77237)

# Assigning a Tuple to a Name (line 595):

# Assigning a Tuple to a Name (line 595):

# Obtaining an instance of the builtin type 'tuple' (line 595)
tuple_77252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 595, 16), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 595)
# Adding element type (line 595)

# Call to compile(...): (line 595)
# Processing the call arguments (line 595)
# Getting the type of 'beforethisafter' (line 595)
beforethisafter_77255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 27), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 596)
tuple_77256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 4), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 596)
# Adding element type (line 596)
str_77257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 4), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 596, 4), tuple_77256, str_77257)
# Adding element type (line 596)
str_77258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 8), 'str', 'intent|depend|note|check')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 596, 4), tuple_77256, str_77258)
# Adding element type (line 596)
str_77259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 36), 'str', 'intent|depend|note|check')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 596, 4), tuple_77256, str_77259)
# Adding element type (line 596)
str_77260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 64), 'str', '\\s*\\(.*?\\).*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 596, 4), tuple_77256, str_77260)

# Applying the binary operator '%' (line 595)
result_mod_77261 = python_operator(stypy.reporting.localization.Localization(__file__, 595, 27), '%', beforethisafter_77255, tuple_77256)

# Getting the type of 're' (line 596)
re_77262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 81), 're', False)
# Obtaining the member 'I' of a type (line 596)
I_77263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 81), re_77262, 'I')
# Processing the call keyword arguments (line 595)
kwargs_77264 = {}
# Getting the type of 're' (line 595)
re_77253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 16), 're', False)
# Obtaining the member 'compile' of a type (line 595)
compile_77254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 595, 16), re_77253, 'compile')
# Calling compile(args, kwargs) (line 595)
compile_call_result_77265 = invoke(stypy.reporting.localization.Localization(__file__, 595, 16), compile_77254, *[result_mod_77261, I_77263], **kwargs_77264)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 595, 16), tuple_77252, compile_call_result_77265)
# Adding element type (line 595)
str_77266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 88), 'str', 'intent')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 595, 16), tuple_77252, str_77266)

# Assigning a type to the variable 'intentpattern' (line 595)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 595, 0), 'intentpattern', tuple_77252)

# Assigning a Tuple to a Name (line 597):

# Assigning a Tuple to a Name (line 597):

# Obtaining an instance of the builtin type 'tuple' (line 597)
tuple_77267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 19), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 597)
# Adding element type (line 597)

# Call to compile(...): (line 597)
# Processing the call arguments (line 597)
# Getting the type of 'beforethisafter' (line 598)
beforethisafter_77270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 598)
tuple_77271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 598)
# Adding element type (line 598)
str_77272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 598, 23), tuple_77271, str_77272)
# Adding element type (line 598)
str_77273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 27), 'str', 'parameter')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 598, 23), tuple_77271, str_77273)
# Adding element type (line 598)
str_77274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 40), 'str', 'parameter')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 598, 23), tuple_77271, str_77274)
# Adding element type (line 598)
str_77275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 53), 'str', '\\s*\\(.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 598, 23), tuple_77271, str_77275)

# Applying the binary operator '%' (line 598)
result_mod_77276 = python_operator(stypy.reporting.localization.Localization(__file__, 598, 4), '%', beforethisafter_77270, tuple_77271)

# Getting the type of 're' (line 598)
re_77277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 65), 're', False)
# Obtaining the member 'I' of a type (line 598)
I_77278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 598, 65), re_77277, 'I')
# Processing the call keyword arguments (line 597)
kwargs_77279 = {}
# Getting the type of 're' (line 597)
re_77268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 19), 're', False)
# Obtaining the member 'compile' of a type (line 597)
compile_77269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 597, 19), re_77268, 'compile')
# Calling compile(args, kwargs) (line 597)
compile_call_result_77280 = invoke(stypy.reporting.localization.Localization(__file__, 597, 19), compile_77269, *[result_mod_77276, I_77278], **kwargs_77279)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 597, 19), tuple_77267, compile_call_result_77280)
# Adding element type (line 597)
str_77281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 72), 'str', 'parameter')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 597, 19), tuple_77267, str_77281)

# Assigning a type to the variable 'parameterpattern' (line 597)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 0), 'parameterpattern', tuple_77267)

# Assigning a Tuple to a Name (line 599):

# Assigning a Tuple to a Name (line 599):

# Obtaining an instance of the builtin type 'tuple' (line 599)
tuple_77282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 14), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 599)
# Adding element type (line 599)

# Call to compile(...): (line 599)
# Processing the call arguments (line 599)
# Getting the type of 'beforethisafter' (line 600)
beforethisafter_77285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 600)
tuple_77286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 600, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 600)
# Adding element type (line 600)
str_77287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 600, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 600, 23), tuple_77286, str_77287)
# Adding element type (line 600)
str_77288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 600, 27), 'str', 'data')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 600, 23), tuple_77286, str_77288)
# Adding element type (line 600)
str_77289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 600, 35), 'str', 'data')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 600, 23), tuple_77286, str_77289)
# Adding element type (line 600)
str_77290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 600, 43), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 600, 23), tuple_77286, str_77290)

# Applying the binary operator '%' (line 600)
result_mod_77291 = python_operator(stypy.reporting.localization.Localization(__file__, 600, 4), '%', beforethisafter_77285, tuple_77286)

# Getting the type of 're' (line 600)
re_77292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 50), 're', False)
# Obtaining the member 'I' of a type (line 600)
I_77293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 600, 50), re_77292, 'I')
# Processing the call keyword arguments (line 599)
kwargs_77294 = {}
# Getting the type of 're' (line 599)
re_77283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 14), 're', False)
# Obtaining the member 'compile' of a type (line 599)
compile_77284 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 599, 14), re_77283, 'compile')
# Calling compile(args, kwargs) (line 599)
compile_call_result_77295 = invoke(stypy.reporting.localization.Localization(__file__, 599, 14), compile_77284, *[result_mod_77291, I_77293], **kwargs_77294)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 599, 14), tuple_77282, compile_call_result_77295)
# Adding element type (line 599)
str_77296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 600, 57), 'str', 'data')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 599, 14), tuple_77282, str_77296)

# Assigning a type to the variable 'datapattern' (line 599)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 599, 0), 'datapattern', tuple_77282)

# Assigning a Tuple to a Name (line 601):

# Assigning a Tuple to a Name (line 601):

# Obtaining an instance of the builtin type 'tuple' (line 601)
tuple_77297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 601, 14), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 601)
# Adding element type (line 601)

# Call to compile(...): (line 601)
# Processing the call arguments (line 601)
# Getting the type of 'beforethisafter' (line 602)
beforethisafter_77300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 602)
tuple_77301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 602)
# Adding element type (line 602)
str_77302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 602, 23), tuple_77301, str_77302)
# Adding element type (line 602)
str_77303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 27), 'str', 'call')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 602, 23), tuple_77301, str_77303)
# Adding element type (line 602)
str_77304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 35), 'str', 'call')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 602, 23), tuple_77301, str_77304)
# Adding element type (line 602)
str_77305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 43), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 602, 23), tuple_77301, str_77305)

# Applying the binary operator '%' (line 602)
result_mod_77306 = python_operator(stypy.reporting.localization.Localization(__file__, 602, 4), '%', beforethisafter_77300, tuple_77301)

# Getting the type of 're' (line 602)
re_77307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 50), 're', False)
# Obtaining the member 'I' of a type (line 602)
I_77308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 602, 50), re_77307, 'I')
# Processing the call keyword arguments (line 601)
kwargs_77309 = {}
# Getting the type of 're' (line 601)
re_77298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 14), 're', False)
# Obtaining the member 'compile' of a type (line 601)
compile_77299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 601, 14), re_77298, 'compile')
# Calling compile(args, kwargs) (line 601)
compile_call_result_77310 = invoke(stypy.reporting.localization.Localization(__file__, 601, 14), compile_77299, *[result_mod_77306, I_77308], **kwargs_77309)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 601, 14), tuple_77297, compile_call_result_77310)
# Adding element type (line 601)
str_77311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 57), 'str', 'call')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 601, 14), tuple_77297, str_77311)

# Assigning a type to the variable 'callpattern' (line 601)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 601, 0), 'callpattern', tuple_77297)

# Assigning a Tuple to a Name (line 603):

# Assigning a Tuple to a Name (line 603):

# Obtaining an instance of the builtin type 'tuple' (line 603)
tuple_77312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 15), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 603)
# Adding element type (line 603)

# Call to compile(...): (line 603)
# Processing the call arguments (line 603)
# Getting the type of 'beforethisafter' (line 604)
beforethisafter_77315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 604)
tuple_77316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 604)
# Adding element type (line 604)
str_77317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 604, 23), tuple_77316, str_77317)
# Adding element type (line 604)
str_77318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 27), 'str', 'entry')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 604, 23), tuple_77316, str_77318)
# Adding element type (line 604)
str_77319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 36), 'str', 'entry')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 604, 23), tuple_77316, str_77319)
# Adding element type (line 604)
str_77320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 45), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 604, 23), tuple_77316, str_77320)

# Applying the binary operator '%' (line 604)
result_mod_77321 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 4), '%', beforethisafter_77315, tuple_77316)

# Getting the type of 're' (line 604)
re_77322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 52), 're', False)
# Obtaining the member 'I' of a type (line 604)
I_77323 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 52), re_77322, 'I')
# Processing the call keyword arguments (line 603)
kwargs_77324 = {}
# Getting the type of 're' (line 603)
re_77313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 15), 're', False)
# Obtaining the member 'compile' of a type (line 603)
compile_77314 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 603, 15), re_77313, 'compile')
# Calling compile(args, kwargs) (line 603)
compile_call_result_77325 = invoke(stypy.reporting.localization.Localization(__file__, 603, 15), compile_77314, *[result_mod_77321, I_77323], **kwargs_77324)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 15), tuple_77312, compile_call_result_77325)
# Adding element type (line 603)
str_77326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 59), 'str', 'entry')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 15), tuple_77312, str_77326)

# Assigning a type to the variable 'entrypattern' (line 603)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 603, 0), 'entrypattern', tuple_77312)

# Assigning a Tuple to a Name (line 605):

# Assigning a Tuple to a Name (line 605):

# Obtaining an instance of the builtin type 'tuple' (line 605)
tuple_77327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 605)
# Adding element type (line 605)

# Call to compile(...): (line 605)
# Processing the call arguments (line 605)
# Getting the type of 'beforethisafter' (line 606)
beforethisafter_77330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 606)
tuple_77331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 606)
# Adding element type (line 606)
str_77332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 23), tuple_77331, str_77332)
# Adding element type (line 606)
str_77333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 27), 'str', 'callfun')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 23), tuple_77331, str_77333)
# Adding element type (line 606)
str_77334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 38), 'str', 'callfun')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 23), tuple_77331, str_77334)
# Adding element type (line 606)
str_77335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 49), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 23), tuple_77331, str_77335)

# Applying the binary operator '%' (line 606)
result_mod_77336 = python_operator(stypy.reporting.localization.Localization(__file__, 606, 4), '%', beforethisafter_77330, tuple_77331)

# Getting the type of 're' (line 606)
re_77337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 56), 're', False)
# Obtaining the member 'I' of a type (line 606)
I_77338 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 606, 56), re_77337, 'I')
# Processing the call keyword arguments (line 605)
kwargs_77339 = {}
# Getting the type of 're' (line 605)
re_77328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 17), 're', False)
# Obtaining the member 'compile' of a type (line 605)
compile_77329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 605, 17), re_77328, 'compile')
# Calling compile(args, kwargs) (line 605)
compile_call_result_77340 = invoke(stypy.reporting.localization.Localization(__file__, 605, 17), compile_77329, *[result_mod_77336, I_77338], **kwargs_77339)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 605, 17), tuple_77327, compile_call_result_77340)
# Adding element type (line 605)
str_77341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 63), 'str', 'callfun')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 605, 17), tuple_77327, str_77341)

# Assigning a type to the variable 'callfunpattern' (line 605)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 605, 0), 'callfunpattern', tuple_77327)

# Assigning a Tuple to a Name (line 607):

# Assigning a Tuple to a Name (line 607):

# Obtaining an instance of the builtin type 'tuple' (line 607)
tuple_77342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 607, 16), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 607)
# Adding element type (line 607)

# Call to compile(...): (line 607)
# Processing the call arguments (line 607)
# Getting the type of 'beforethisafter' (line 608)
beforethisafter_77345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 608)
tuple_77346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 608)
# Adding element type (line 608)
str_77347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 608, 23), tuple_77346, str_77347)
# Adding element type (line 608)
str_77348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 27), 'str', 'common')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 608, 23), tuple_77346, str_77348)
# Adding element type (line 608)
str_77349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 37), 'str', 'common')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 608, 23), tuple_77346, str_77349)
# Adding element type (line 608)
str_77350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 47), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 608, 23), tuple_77346, str_77350)

# Applying the binary operator '%' (line 608)
result_mod_77351 = python_operator(stypy.reporting.localization.Localization(__file__, 608, 4), '%', beforethisafter_77345, tuple_77346)

# Getting the type of 're' (line 608)
re_77352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 54), 're', False)
# Obtaining the member 'I' of a type (line 608)
I_77353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 608, 54), re_77352, 'I')
# Processing the call keyword arguments (line 607)
kwargs_77354 = {}
# Getting the type of 're' (line 607)
re_77343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 16), 're', False)
# Obtaining the member 'compile' of a type (line 607)
compile_77344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 607, 16), re_77343, 'compile')
# Calling compile(args, kwargs) (line 607)
compile_call_result_77355 = invoke(stypy.reporting.localization.Localization(__file__, 607, 16), compile_77344, *[result_mod_77351, I_77353], **kwargs_77354)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 607, 16), tuple_77342, compile_call_result_77355)
# Adding element type (line 607)
str_77356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 61), 'str', 'common')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 607, 16), tuple_77342, str_77356)

# Assigning a type to the variable 'commonpattern' (line 607)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 607, 0), 'commonpattern', tuple_77342)

# Assigning a Tuple to a Name (line 609):

# Assigning a Tuple to a Name (line 609):

# Obtaining an instance of the builtin type 'tuple' (line 609)
tuple_77357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 609, 13), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 609)
# Adding element type (line 609)

# Call to compile(...): (line 609)
# Processing the call arguments (line 609)
# Getting the type of 'beforethisafter' (line 610)
beforethisafter_77360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 610)
tuple_77361 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 610)
# Adding element type (line 610)
str_77362 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 610, 23), tuple_77361, str_77362)
# Adding element type (line 610)
str_77363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 27), 'str', 'use')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 610, 23), tuple_77361, str_77363)
# Adding element type (line 610)
str_77364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 34), 'str', 'use')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 610, 23), tuple_77361, str_77364)
# Adding element type (line 610)
str_77365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 41), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 610, 23), tuple_77361, str_77365)

# Applying the binary operator '%' (line 610)
result_mod_77366 = python_operator(stypy.reporting.localization.Localization(__file__, 610, 4), '%', beforethisafter_77360, tuple_77361)

# Getting the type of 're' (line 610)
re_77367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 48), 're', False)
# Obtaining the member 'I' of a type (line 610)
I_77368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 610, 48), re_77367, 'I')
# Processing the call keyword arguments (line 609)
kwargs_77369 = {}
# Getting the type of 're' (line 609)
re_77358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 13), 're', False)
# Obtaining the member 'compile' of a type (line 609)
compile_77359 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 609, 13), re_77358, 'compile')
# Calling compile(args, kwargs) (line 609)
compile_call_result_77370 = invoke(stypy.reporting.localization.Localization(__file__, 609, 13), compile_77359, *[result_mod_77366, I_77368], **kwargs_77369)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 609, 13), tuple_77357, compile_call_result_77370)
# Adding element type (line 609)
str_77371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 55), 'str', 'use')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 609, 13), tuple_77357, str_77371)

# Assigning a type to the variable 'usepattern' (line 609)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 609, 0), 'usepattern', tuple_77357)

# Assigning a Tuple to a Name (line 611):

# Assigning a Tuple to a Name (line 611):

# Obtaining an instance of the builtin type 'tuple' (line 611)
tuple_77372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 611, 18), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 611)
# Adding element type (line 611)

# Call to compile(...): (line 611)
# Processing the call arguments (line 611)
# Getting the type of 'beforethisafter' (line 612)
beforethisafter_77375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 612)
tuple_77376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 612)
# Adding element type (line 612)
str_77377 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 612, 23), tuple_77376, str_77377)
# Adding element type (line 612)
str_77378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 27), 'str', 'contains')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 612, 23), tuple_77376, str_77378)
# Adding element type (line 612)
str_77379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 39), 'str', 'contains')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 612, 23), tuple_77376, str_77379)
# Adding element type (line 612)
str_77380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 51), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 612, 23), tuple_77376, str_77380)

# Applying the binary operator '%' (line 612)
result_mod_77381 = python_operator(stypy.reporting.localization.Localization(__file__, 612, 4), '%', beforethisafter_77375, tuple_77376)

# Getting the type of 're' (line 612)
re_77382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 56), 're', False)
# Obtaining the member 'I' of a type (line 612)
I_77383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 612, 56), re_77382, 'I')
# Processing the call keyword arguments (line 611)
kwargs_77384 = {}
# Getting the type of 're' (line 611)
re_77373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 18), 're', False)
# Obtaining the member 'compile' of a type (line 611)
compile_77374 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 611, 18), re_77373, 'compile')
# Calling compile(args, kwargs) (line 611)
compile_call_result_77385 = invoke(stypy.reporting.localization.Localization(__file__, 611, 18), compile_77374, *[result_mod_77381, I_77383], **kwargs_77384)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 611, 18), tuple_77372, compile_call_result_77385)
# Adding element type (line 611)
str_77386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 63), 'str', 'contains')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 611, 18), tuple_77372, str_77386)

# Assigning a type to the variable 'containspattern' (line 611)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 611, 0), 'containspattern', tuple_77372)

# Assigning a Tuple to a Name (line 613):

# Assigning a Tuple to a Name (line 613):

# Obtaining an instance of the builtin type 'tuple' (line 613)
tuple_77387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 16), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 613)
# Adding element type (line 613)

# Call to compile(...): (line 613)
# Processing the call arguments (line 613)
# Getting the type of 'beforethisafter' (line 614)
beforethisafter_77390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 4), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 614)
tuple_77391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 23), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 614)
# Adding element type (line 614)
str_77392 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 23), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 614, 23), tuple_77391, str_77392)
# Adding element type (line 614)
str_77393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 27), 'str', 'format')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 614, 23), tuple_77391, str_77393)
# Adding element type (line 614)
str_77394 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 37), 'str', 'format')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 614, 23), tuple_77391, str_77394)
# Adding element type (line 614)
str_77395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 47), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 614, 23), tuple_77391, str_77395)

# Applying the binary operator '%' (line 614)
result_mod_77396 = python_operator(stypy.reporting.localization.Localization(__file__, 614, 4), '%', beforethisafter_77390, tuple_77391)

# Getting the type of 're' (line 614)
re_77397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 54), 're', False)
# Obtaining the member 'I' of a type (line 614)
I_77398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 614, 54), re_77397, 'I')
# Processing the call keyword arguments (line 613)
kwargs_77399 = {}
# Getting the type of 're' (line 613)
re_77388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 16), 're', False)
# Obtaining the member 'compile' of a type (line 613)
compile_77389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 16), re_77388, 'compile')
# Calling compile(args, kwargs) (line 613)
compile_call_result_77400 = invoke(stypy.reporting.localization.Localization(__file__, 613, 16), compile_77389, *[result_mod_77396, I_77398], **kwargs_77399)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 16), tuple_77387, compile_call_result_77400)
# Adding element type (line 613)
str_77401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 61), 'str', 'format')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 16), tuple_77387, str_77401)

# Assigning a type to the variable 'formatpattern' (line 613)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 613, 0), 'formatpattern', tuple_77387)

# Assigning a Tuple to a Name (line 616):

# Assigning a Tuple to a Name (line 616):

# Obtaining an instance of the builtin type 'tuple' (line 616)
tuple_77402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 616, 26), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 616)
# Adding element type (line 616)

# Call to compile(...): (line 616)
# Processing the call arguments (line 616)
# Getting the type of 'beforethisafter' (line 616)
beforethisafter_77405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 37), 'beforethisafter', False)

# Obtaining an instance of the builtin type 'tuple' (line 616)
tuple_77406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 616, 56), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 616)
# Adding element type (line 616)
str_77407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 616, 56), 'str', '')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 616, 56), tuple_77406, str_77407)
# Adding element type (line 616)
str_77408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 616, 60), 'str', 'threadsafe|fortranname|callstatement|callprotoargument|usercode|pymethoddef')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 616, 56), tuple_77406, str_77408)
# Adding element type (line 616)
str_77409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 617, 56), 'str', 'threadsafe|fortranname|callstatement|callprotoargument|usercode|pymethoddef')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 616, 56), tuple_77406, str_77409)
# Adding element type (line 616)
str_77410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 617, 135), 'str', '.*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 616, 56), tuple_77406, str_77410)

# Applying the binary operator '%' (line 616)
result_mod_77411 = python_operator(stypy.reporting.localization.Localization(__file__, 616, 37), '%', beforethisafter_77405, tuple_77406)

# Getting the type of 're' (line 617)
re_77412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 142), 're', False)
# Obtaining the member 'I' of a type (line 617)
I_77413 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 617, 142), re_77412, 'I')
# Getting the type of 're' (line 617)
re_77414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 149), 're', False)
# Obtaining the member 'S' of a type (line 617)
S_77415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 617, 149), re_77414, 'S')
# Applying the binary operator '|' (line 617)
result_or__77416 = python_operator(stypy.reporting.localization.Localization(__file__, 617, 142), '|', I_77413, S_77415)

# Processing the call keyword arguments (line 616)
kwargs_77417 = {}
# Getting the type of 're' (line 616)
re_77403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 26), 're', False)
# Obtaining the member 'compile' of a type (line 616)
compile_77404 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 26), re_77403, 'compile')
# Calling compile(args, kwargs) (line 616)
compile_call_result_77418 = invoke(stypy.reporting.localization.Localization(__file__, 616, 26), compile_77404, *[result_mod_77411, result_or__77416], **kwargs_77417)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 616, 26), tuple_77402, compile_call_result_77418)
# Adding element type (line 616)
str_77419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 617, 156), 'str', 'f2pyenhancements')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 616, 26), tuple_77402, str_77419)

# Assigning a type to the variable 'f2pyenhancementspattern' (line 616)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 616, 0), 'f2pyenhancementspattern', tuple_77402)

# Assigning a Tuple to a Name (line 618):

# Assigning a Tuple to a Name (line 618):

# Obtaining an instance of the builtin type 'tuple' (line 618)
tuple_77420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 618, 19), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 618)
# Adding element type (line 618)

# Call to compile(...): (line 618)
# Processing the call arguments (line 618)
str_77423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 4), 'str', "\\s*(?P<before>''')(?P<this>.*?)(?P<after>''')\\s*\\Z")
# Getting the type of 're' (line 619)
re_77424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 59), 're', False)
# Obtaining the member 'S' of a type (line 619)
S_77425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 59), re_77424, 'S')
# Processing the call keyword arguments (line 618)
kwargs_77426 = {}
# Getting the type of 're' (line 618)
re_77421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 19), 're', False)
# Obtaining the member 'compile' of a type (line 618)
compile_77422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 618, 19), re_77421, 'compile')
# Calling compile(args, kwargs) (line 618)
compile_call_result_77427 = invoke(stypy.reporting.localization.Localization(__file__, 618, 19), compile_77422, *[str_77423, S_77425], **kwargs_77426)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 618, 19), tuple_77420, compile_call_result_77427)
# Adding element type (line 618)
str_77428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 66), 'str', 'multiline')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 618, 19), tuple_77420, str_77428)

# Assigning a type to the variable 'multilinepattern' (line 618)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 618, 0), 'multilinepattern', tuple_77420)

@norecursion
def _simplifyargs(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_simplifyargs'
    module_type_store = module_type_store.open_function_context('_simplifyargs', 623, 0, False)
    
    # Passed parameters checking function
    _simplifyargs.stypy_localization = localization
    _simplifyargs.stypy_type_of_self = None
    _simplifyargs.stypy_type_store = module_type_store
    _simplifyargs.stypy_function_name = '_simplifyargs'
    _simplifyargs.stypy_param_names_list = ['argsline']
    _simplifyargs.stypy_varargs_param_name = None
    _simplifyargs.stypy_kwargs_param_name = None
    _simplifyargs.stypy_call_defaults = defaults
    _simplifyargs.stypy_call_varargs = varargs
    _simplifyargs.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_simplifyargs', ['argsline'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_simplifyargs', localization, ['argsline'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_simplifyargs(...)' code ##################

    
    # Assigning a List to a Name (line 624):
    
    # Assigning a List to a Name (line 624):
    
    # Obtaining an instance of the builtin type 'list' (line 624)
    list_77429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 8), 'list')
    # Adding type elements to the builtin type 'list' instance (line 624)
    
    # Assigning a type to the variable 'a' (line 624)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 624, 4), 'a', list_77429)
    
    
    # Call to split(...): (line 625)
    # Processing the call arguments (line 625)
    str_77435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 625, 44), 'str', '@,@')
    # Processing the call keyword arguments (line 625)
    kwargs_77436 = {}
    
    # Call to markoutercomma(...): (line 625)
    # Processing the call arguments (line 625)
    # Getting the type of 'argsline' (line 625)
    argsline_77431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 28), 'argsline', False)
    # Processing the call keyword arguments (line 625)
    kwargs_77432 = {}
    # Getting the type of 'markoutercomma' (line 625)
    markoutercomma_77430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 13), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 625)
    markoutercomma_call_result_77433 = invoke(stypy.reporting.localization.Localization(__file__, 625, 13), markoutercomma_77430, *[argsline_77431], **kwargs_77432)
    
    # Obtaining the member 'split' of a type (line 625)
    split_77434 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 625, 13), markoutercomma_call_result_77433, 'split')
    # Calling split(args, kwargs) (line 625)
    split_call_result_77437 = invoke(stypy.reporting.localization.Localization(__file__, 625, 13), split_77434, *[str_77435], **kwargs_77436)
    
    # Testing the type of a for loop iterable (line 625)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 625, 4), split_call_result_77437)
    # Getting the type of the for loop variable (line 625)
    for_loop_var_77438 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 625, 4), split_call_result_77437)
    # Assigning a type to the variable 'n' (line 625)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 625, 4), 'n', for_loop_var_77438)
    # SSA begins for a for statement (line 625)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    str_77439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 17), 'str', '(),')
    # Testing the type of a for loop iterable (line 626)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 626, 8), str_77439)
    # Getting the type of the for loop variable (line 626)
    for_loop_var_77440 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 626, 8), str_77439)
    # Assigning a type to the variable 'r' (line 626)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 626, 8), 'r', for_loop_var_77440)
    # SSA begins for a for statement (line 626)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 627):
    
    # Assigning a Call to a Name (line 627):
    
    # Call to replace(...): (line 627)
    # Processing the call arguments (line 627)
    # Getting the type of 'r' (line 627)
    r_77443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 26), 'r', False)
    str_77444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 627, 29), 'str', '_')
    # Processing the call keyword arguments (line 627)
    kwargs_77445 = {}
    # Getting the type of 'n' (line 627)
    n_77441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 16), 'n', False)
    # Obtaining the member 'replace' of a type (line 627)
    replace_77442 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 627, 16), n_77441, 'replace')
    # Calling replace(args, kwargs) (line 627)
    replace_call_result_77446 = invoke(stypy.reporting.localization.Localization(__file__, 627, 16), replace_77442, *[r_77443, str_77444], **kwargs_77445)
    
    # Assigning a type to the variable 'n' (line 627)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 627, 12), 'n', replace_call_result_77446)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 628)
    # Processing the call arguments (line 628)
    # Getting the type of 'n' (line 628)
    n_77449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 17), 'n', False)
    # Processing the call keyword arguments (line 628)
    kwargs_77450 = {}
    # Getting the type of 'a' (line 628)
    a_77447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 8), 'a', False)
    # Obtaining the member 'append' of a type (line 628)
    append_77448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 8), a_77447, 'append')
    # Calling append(args, kwargs) (line 628)
    append_call_result_77451 = invoke(stypy.reporting.localization.Localization(__file__, 628, 8), append_77448, *[n_77449], **kwargs_77450)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to join(...): (line 629)
    # Processing the call arguments (line 629)
    # Getting the type of 'a' (line 629)
    a_77454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 20), 'a', False)
    # Processing the call keyword arguments (line 629)
    kwargs_77455 = {}
    str_77452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 629, 11), 'str', ',')
    # Obtaining the member 'join' of a type (line 629)
    join_77453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 629, 11), str_77452, 'join')
    # Calling join(args, kwargs) (line 629)
    join_call_result_77456 = invoke(stypy.reporting.localization.Localization(__file__, 629, 11), join_77453, *[a_77454], **kwargs_77455)
    
    # Assigning a type to the variable 'stypy_return_type' (line 629)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 629, 4), 'stypy_return_type', join_call_result_77456)
    
    # ################# End of '_simplifyargs(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_simplifyargs' in the type store
    # Getting the type of 'stypy_return_type' (line 623)
    stypy_return_type_77457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_77457)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_simplifyargs'
    return stypy_return_type_77457

# Assigning a type to the variable '_simplifyargs' (line 623)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 0), '_simplifyargs', _simplifyargs)

# Assigning a Call to a Name (line 631):

# Assigning a Call to a Name (line 631):

# Call to compile(...): (line 631)
# Processing the call arguments (line 631)
str_77460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 28), 'str', '\\s*(?P<result>\\b[a-z]+[\\w]*\\b)\\s*[=].*')
# Getting the type of 're' (line 631)
re_77461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 71), 're', False)
# Obtaining the member 'I' of a type (line 631)
I_77462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 631, 71), re_77461, 'I')
# Processing the call keyword arguments (line 631)
kwargs_77463 = {}
# Getting the type of 're' (line 631)
re_77458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 17), 're', False)
# Obtaining the member 'compile' of a type (line 631)
compile_77459 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 631, 17), re_77458, 'compile')
# Calling compile(args, kwargs) (line 631)
compile_call_result_77464 = invoke(stypy.reporting.localization.Localization(__file__, 631, 17), compile_77459, *[str_77460, I_77462], **kwargs_77463)

# Assigning a type to the variable 'crackline_re_1' (line 631)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 631, 0), 'crackline_re_1', compile_call_result_77464)

@norecursion
def crackline(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    int_77465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 634, 26), 'int')
    defaults = [int_77465]
    # Create a new context for function 'crackline'
    module_type_store = module_type_store.open_function_context('crackline', 634, 0, False)
    
    # Passed parameters checking function
    crackline.stypy_localization = localization
    crackline.stypy_type_of_self = None
    crackline.stypy_type_store = module_type_store
    crackline.stypy_function_name = 'crackline'
    crackline.stypy_param_names_list = ['line', 'reset']
    crackline.stypy_varargs_param_name = None
    crackline.stypy_kwargs_param_name = None
    crackline.stypy_call_defaults = defaults
    crackline.stypy_call_varargs = varargs
    crackline.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'crackline', ['line', 'reset'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'crackline', localization, ['line', 'reset'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'crackline(...)' code ##################

    str_77466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, (-1)), 'str', '\n    reset=-1  --- initialize\n    reset=0   --- crack the line\n    reset=1   --- final check if mismatch of blocks occured\n\n    Cracked data is saved in grouplist[0].\n    ')
    # Marking variables as global (line 642)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 642, 4), 'beginpattern')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 642, 4), 'groupcounter')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 642, 4), 'groupname')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 642, 4), 'groupcache')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 642, 4), 'grouplist')
    # Marking variables as global (line 643)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 643, 4), 'filepositiontext')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 643, 4), 'currentfilename')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 643, 4), 'neededmodule')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 643, 4), 'expectbegin')
    # Marking variables as global (line 644)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 644, 4), 'skipblocksuntil')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 644, 4), 'skipemptyends')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 644, 4), 'previous_context')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 644, 4), 'gotnextfile')
    
    
    # Evaluating a boolean operation
    
    str_77467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 646, 7), 'str', ';')
    # Getting the type of 'line' (line 646)
    line_77468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 14), 'line')
    # Applying the binary operator 'in' (line 646)
    result_contains_77469 = python_operator(stypy.reporting.localization.Localization(__file__, 646, 7), 'in', str_77467, line_77468)
    
    
    
    # Evaluating a boolean operation
    
    # Call to match(...): (line 646)
    # Processing the call arguments (line 646)
    # Getting the type of 'line' (line 646)
    line_77475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 61), 'line', False)
    # Processing the call keyword arguments (line 646)
    kwargs_77476 = {}
    
    # Obtaining the type of the subscript
    int_77470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 646, 52), 'int')
    # Getting the type of 'f2pyenhancementspattern' (line 646)
    f2pyenhancementspattern_77471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 28), 'f2pyenhancementspattern', False)
    # Obtaining the member '__getitem__' of a type (line 646)
    getitem___77472 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 646, 28), f2pyenhancementspattern_77471, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 646)
    subscript_call_result_77473 = invoke(stypy.reporting.localization.Localization(__file__, 646, 28), getitem___77472, int_77470)
    
    # Obtaining the member 'match' of a type (line 646)
    match_77474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 646, 28), subscript_call_result_77473, 'match')
    # Calling match(args, kwargs) (line 646)
    match_call_result_77477 = invoke(stypy.reporting.localization.Localization(__file__, 646, 28), match_77474, *[line_77475], **kwargs_77476)
    
    
    # Call to match(...): (line 647)
    # Processing the call arguments (line 647)
    # Getting the type of 'line' (line 647)
    line_77483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 54), 'line', False)
    # Processing the call keyword arguments (line 647)
    kwargs_77484 = {}
    
    # Obtaining the type of the subscript
    int_77478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 647, 45), 'int')
    # Getting the type of 'multilinepattern' (line 647)
    multilinepattern_77479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 28), 'multilinepattern', False)
    # Obtaining the member '__getitem__' of a type (line 647)
    getitem___77480 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 647, 28), multilinepattern_77479, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 647)
    subscript_call_result_77481 = invoke(stypy.reporting.localization.Localization(__file__, 647, 28), getitem___77480, int_77478)
    
    # Obtaining the member 'match' of a type (line 647)
    match_77482 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 647, 28), subscript_call_result_77481, 'match')
    # Calling match(args, kwargs) (line 647)
    match_call_result_77485 = invoke(stypy.reporting.localization.Localization(__file__, 647, 28), match_77482, *[line_77483], **kwargs_77484)
    
    # Applying the binary operator 'or' (line 646)
    result_or_keyword_77486 = python_operator(stypy.reporting.localization.Localization(__file__, 646, 28), 'or', match_call_result_77477, match_call_result_77485)
    
    # Applying the 'not' unary operator (line 646)
    result_not__77487 = python_operator(stypy.reporting.localization.Localization(__file__, 646, 23), 'not', result_or_keyword_77486)
    
    # Applying the binary operator 'and' (line 646)
    result_and_keyword_77488 = python_operator(stypy.reporting.localization.Localization(__file__, 646, 7), 'and', result_contains_77469, result_not__77487)
    
    # Testing the type of an if condition (line 646)
    if_condition_77489 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 646, 4), result_and_keyword_77488)
    # Assigning a type to the variable 'if_condition_77489' (line 646)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 646, 4), 'if_condition_77489', if_condition_77489)
    # SSA begins for if statement (line 646)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Call to split(...): (line 648)
    # Processing the call arguments (line 648)
    str_77492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 28), 'str', ';')
    # Processing the call keyword arguments (line 648)
    kwargs_77493 = {}
    # Getting the type of 'line' (line 648)
    line_77490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 17), 'line', False)
    # Obtaining the member 'split' of a type (line 648)
    split_77491 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 648, 17), line_77490, 'split')
    # Calling split(args, kwargs) (line 648)
    split_call_result_77494 = invoke(stypy.reporting.localization.Localization(__file__, 648, 17), split_77491, *[str_77492], **kwargs_77493)
    
    # Testing the type of a for loop iterable (line 648)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 648, 8), split_call_result_77494)
    # Getting the type of the for loop variable (line 648)
    for_loop_var_77495 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 648, 8), split_call_result_77494)
    # Assigning a type to the variable 'l' (line 648)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 648, 8), 'l', for_loop_var_77495)
    # SSA begins for a for statement (line 648)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    # Evaluating assert statement condition
    
    # Getting the type of 'reset' (line 650)
    reset_77496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 19), 'reset')
    int_77497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 28), 'int')
    # Applying the binary operator '==' (line 650)
    result_eq_77498 = python_operator(stypy.reporting.localization.Localization(__file__, 650, 19), '==', reset_77496, int_77497)
    
    
    # Call to crackline(...): (line 651)
    # Processing the call arguments (line 651)
    # Getting the type of 'l' (line 651)
    l_77500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 22), 'l', False)
    # Getting the type of 'reset' (line 651)
    reset_77501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 25), 'reset', False)
    # Processing the call keyword arguments (line 651)
    kwargs_77502 = {}
    # Getting the type of 'crackline' (line 651)
    crackline_77499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 12), 'crackline', False)
    # Calling crackline(args, kwargs) (line 651)
    crackline_call_result_77503 = invoke(stypy.reporting.localization.Localization(__file__, 651, 12), crackline_77499, *[l_77500, reset_77501], **kwargs_77502)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Assigning a type to the variable 'stypy_return_type' (line 652)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 652, 8), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 646)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'reset' (line 653)
    reset_77504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 7), 'reset')
    int_77505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 15), 'int')
    # Applying the binary operator '<' (line 653)
    result_lt_77506 = python_operator(stypy.reporting.localization.Localization(__file__, 653, 7), '<', reset_77504, int_77505)
    
    # Testing the type of an if condition (line 653)
    if_condition_77507 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 653, 4), result_lt_77506)
    # Assigning a type to the variable 'if_condition_77507' (line 653)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 653, 4), 'if_condition_77507', if_condition_77507)
    # SSA begins for if statement (line 653)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 654):
    
    # Assigning a Num to a Name (line 654):
    int_77508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 23), 'int')
    # Assigning a type to the variable 'groupcounter' (line 654)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 654, 8), 'groupcounter', int_77508)
    
    # Assigning a Dict to a Name (line 655):
    
    # Assigning a Dict to a Name (line 655):
    
    # Obtaining an instance of the builtin type 'dict' (line 655)
    dict_77509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 655, 20), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 655)
    # Adding element type (key, value) (line 655)
    # Getting the type of 'groupcounter' (line 655)
    groupcounter_77510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 21), 'groupcounter')
    str_77511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 655, 35), 'str', '')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 655, 20), dict_77509, (groupcounter_77510, str_77511))
    
    # Assigning a type to the variable 'groupname' (line 655)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 655, 8), 'groupname', dict_77509)
    
    # Assigning a Dict to a Name (line 656):
    
    # Assigning a Dict to a Name (line 656):
    
    # Obtaining an instance of the builtin type 'dict' (line 656)
    dict_77512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 21), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 656)
    # Adding element type (key, value) (line 656)
    # Getting the type of 'groupcounter' (line 656)
    groupcounter_77513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 22), 'groupcounter')
    
    # Obtaining an instance of the builtin type 'dict' (line 656)
    dict_77514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 36), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 656)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 656, 21), dict_77512, (groupcounter_77513, dict_77514))
    
    # Assigning a type to the variable 'groupcache' (line 656)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 656, 8), 'groupcache', dict_77512)
    
    # Assigning a Dict to a Name (line 657):
    
    # Assigning a Dict to a Name (line 657):
    
    # Obtaining an instance of the builtin type 'dict' (line 657)
    dict_77515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 20), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 657)
    # Adding element type (key, value) (line 657)
    # Getting the type of 'groupcounter' (line 657)
    groupcounter_77516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 21), 'groupcounter')
    
    # Obtaining an instance of the builtin type 'list' (line 657)
    list_77517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 35), 'list')
    # Adding type elements to the builtin type 'list' instance (line 657)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 20), dict_77515, (groupcounter_77516, list_77517))
    
    # Assigning a type to the variable 'grouplist' (line 657)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 657, 8), 'grouplist', dict_77515)
    
    # Assigning a List to a Subscript (line 658):
    
    # Assigning a List to a Subscript (line 658):
    
    # Obtaining an instance of the builtin type 'list' (line 658)
    list_77518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 43), 'list')
    # Adding type elements to the builtin type 'list' instance (line 658)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 658)
    groupcounter_77519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 658)
    groupcache_77520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 658)
    getitem___77521 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 658, 8), groupcache_77520, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 658)
    subscript_call_result_77522 = invoke(stypy.reporting.localization.Localization(__file__, 658, 8), getitem___77521, groupcounter_77519)
    
    str_77523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 33), 'str', 'body')
    # Storing an element on a container (line 658)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 658, 8), subscript_call_result_77522, (str_77523, list_77518))
    
    # Assigning a Dict to a Subscript (line 659):
    
    # Assigning a Dict to a Subscript (line 659):
    
    # Obtaining an instance of the builtin type 'dict' (line 659)
    dict_77524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 43), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 659)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 659)
    groupcounter_77525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 659, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 659)
    groupcache_77526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 659, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 659)
    getitem___77527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 659, 8), groupcache_77526, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 659)
    subscript_call_result_77528 = invoke(stypy.reporting.localization.Localization(__file__, 659, 8), getitem___77527, groupcounter_77525)
    
    str_77529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 33), 'str', 'vars')
    # Storing an element on a container (line 659)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 659, 8), subscript_call_result_77528, (str_77529, dict_77524))
    
    # Assigning a Str to a Subscript (line 660):
    
    # Assigning a Str to a Subscript (line 660):
    str_77530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 44), 'str', '')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 660)
    groupcounter_77531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 660)
    groupcache_77532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 660)
    getitem___77533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 660, 8), groupcache_77532, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 660)
    subscript_call_result_77534 = invoke(stypy.reporting.localization.Localization(__file__, 660, 8), getitem___77533, groupcounter_77531)
    
    str_77535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 33), 'str', 'block')
    # Storing an element on a container (line 660)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 660, 8), subscript_call_result_77534, (str_77535, str_77530))
    
    # Assigning a Str to a Subscript (line 661):
    
    # Assigning a Str to a Subscript (line 661):
    str_77536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 661, 43), 'str', '')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 661)
    groupcounter_77537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 661)
    groupcache_77538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 661)
    getitem___77539 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 661, 8), groupcache_77538, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 661)
    subscript_call_result_77540 = invoke(stypy.reporting.localization.Localization(__file__, 661, 8), getitem___77539, groupcounter_77537)
    
    str_77541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 661, 33), 'str', 'name')
    # Storing an element on a container (line 661)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 661, 8), subscript_call_result_77540, (str_77541, str_77536))
    
    # Assigning a Num to a Name (line 662):
    
    # Assigning a Num to a Name (line 662):
    int_77542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 662, 23), 'int')
    # Assigning a type to the variable 'neededmodule' (line 662)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 662, 8), 'neededmodule', int_77542)
    
    # Assigning a Num to a Name (line 663):
    
    # Assigning a Num to a Name (line 663):
    int_77543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 663, 26), 'int')
    # Assigning a type to the variable 'skipblocksuntil' (line 663)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 663, 8), 'skipblocksuntil', int_77543)
    # Assigning a type to the variable 'stypy_return_type' (line 664)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 664, 8), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 653)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'reset' (line 665)
    reset_77544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 7), 'reset')
    int_77545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 665, 15), 'int')
    # Applying the binary operator '>' (line 665)
    result_gt_77546 = python_operator(stypy.reporting.localization.Localization(__file__, 665, 7), '>', reset_77544, int_77545)
    
    # Testing the type of an if condition (line 665)
    if_condition_77547 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 665, 4), result_gt_77546)
    # Assigning a type to the variable 'if_condition_77547' (line 665)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 665, 4), 'if_condition_77547', if_condition_77547)
    # SSA begins for if statement (line 665)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 666):
    
    # Assigning a Num to a Name (line 666):
    int_77548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 666, 13), 'int')
    # Assigning a type to the variable 'fl' (line 666)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'fl', int_77548)
    
    
    # Evaluating a boolean operation
    # Getting the type of 'f77modulename' (line 667)
    f77modulename_77549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 11), 'f77modulename')
    
    # Getting the type of 'neededmodule' (line 667)
    neededmodule_77550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 29), 'neededmodule')
    # Getting the type of 'groupcounter' (line 667)
    groupcounter_77551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 45), 'groupcounter')
    # Applying the binary operator '==' (line 667)
    result_eq_77552 = python_operator(stypy.reporting.localization.Localization(__file__, 667, 29), '==', neededmodule_77550, groupcounter_77551)
    
    # Applying the binary operator 'and' (line 667)
    result_and_keyword_77553 = python_operator(stypy.reporting.localization.Localization(__file__, 667, 11), 'and', f77modulename_77549, result_eq_77552)
    
    # Testing the type of an if condition (line 667)
    if_condition_77554 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 667, 8), result_and_keyword_77553)
    # Assigning a type to the variable 'if_condition_77554' (line 667)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 667, 8), 'if_condition_77554', if_condition_77554)
    # SSA begins for if statement (line 667)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 668):
    
    # Assigning a Num to a Name (line 668):
    int_77555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 668, 17), 'int')
    # Assigning a type to the variable 'fl' (line 668)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 668, 12), 'fl', int_77555)
    # SSA join for if statement (line 667)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'groupcounter' (line 669)
    groupcounter_77556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 14), 'groupcounter')
    # Getting the type of 'fl' (line 669)
    fl_77557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 29), 'fl')
    # Applying the binary operator '>' (line 669)
    result_gt_77558 = python_operator(stypy.reporting.localization.Localization(__file__, 669, 14), '>', groupcounter_77556, fl_77557)
    
    # Testing the type of an if condition (line 669)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 669, 8), result_gt_77558)
    # SSA begins for while statement (line 669)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    # Call to outmess(...): (line 670)
    # Processing the call arguments (line 670)
    str_77560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 20), 'str', 'crackline: groupcounter=%s groupname=%s\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 671)
    tuple_77561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 21), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 671)
    # Adding element type (line 671)
    
    # Call to repr(...): (line 671)
    # Processing the call arguments (line 671)
    # Getting the type of 'groupcounter' (line 671)
    groupcounter_77563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 26), 'groupcounter', False)
    # Processing the call keyword arguments (line 671)
    kwargs_77564 = {}
    # Getting the type of 'repr' (line 671)
    repr_77562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 21), 'repr', False)
    # Calling repr(args, kwargs) (line 671)
    repr_call_result_77565 = invoke(stypy.reporting.localization.Localization(__file__, 671, 21), repr_77562, *[groupcounter_77563], **kwargs_77564)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 21), tuple_77561, repr_call_result_77565)
    # Adding element type (line 671)
    
    # Call to repr(...): (line 671)
    # Processing the call arguments (line 671)
    # Getting the type of 'groupname' (line 671)
    groupname_77567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 46), 'groupname', False)
    # Processing the call keyword arguments (line 671)
    kwargs_77568 = {}
    # Getting the type of 'repr' (line 671)
    repr_77566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 41), 'repr', False)
    # Calling repr(args, kwargs) (line 671)
    repr_call_result_77569 = invoke(stypy.reporting.localization.Localization(__file__, 671, 41), repr_77566, *[groupname_77567], **kwargs_77568)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 21), tuple_77561, repr_call_result_77569)
    
    # Applying the binary operator '%' (line 670)
    result_mod_77570 = python_operator(stypy.reporting.localization.Localization(__file__, 670, 20), '%', str_77560, tuple_77561)
    
    # Processing the call keyword arguments (line 670)
    kwargs_77571 = {}
    # Getting the type of 'outmess' (line 670)
    outmess_77559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 12), 'outmess', False)
    # Calling outmess(args, kwargs) (line 670)
    outmess_call_result_77572 = invoke(stypy.reporting.localization.Localization(__file__, 670, 12), outmess_77559, *[result_mod_77570], **kwargs_77571)
    
    
    # Call to outmess(...): (line 672)
    # Processing the call arguments (line 672)
    str_77574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 16), 'str', 'crackline: Mismatch of blocks encountered. Trying to fix it by assuming "end" statement.\n')
    # Processing the call keyword arguments (line 672)
    kwargs_77575 = {}
    # Getting the type of 'outmess' (line 672)
    outmess_77573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 12), 'outmess', False)
    # Calling outmess(args, kwargs) (line 672)
    outmess_call_result_77576 = invoke(stypy.reporting.localization.Localization(__file__, 672, 12), outmess_77573, *[str_77574], **kwargs_77575)
    
    
    # Call to append(...): (line 674)
    # Processing the call arguments (line 674)
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 674)
    groupcounter_77584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 58), 'groupcounter', False)
    # Getting the type of 'groupcache' (line 674)
    groupcache_77585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 47), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 674)
    getitem___77586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 674, 47), groupcache_77585, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 674)
    subscript_call_result_77587 = invoke(stypy.reporting.localization.Localization(__file__, 674, 47), getitem___77586, groupcounter_77584)
    
    # Processing the call keyword arguments (line 674)
    kwargs_77588 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 674)
    groupcounter_77577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 22), 'groupcounter', False)
    int_77578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 674, 37), 'int')
    # Applying the binary operator '-' (line 674)
    result_sub_77579 = python_operator(stypy.reporting.localization.Localization(__file__, 674, 22), '-', groupcounter_77577, int_77578)
    
    # Getting the type of 'grouplist' (line 674)
    grouplist_77580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 12), 'grouplist', False)
    # Obtaining the member '__getitem__' of a type (line 674)
    getitem___77581 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 674, 12), grouplist_77580, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 674)
    subscript_call_result_77582 = invoke(stypy.reporting.localization.Localization(__file__, 674, 12), getitem___77581, result_sub_77579)
    
    # Obtaining the member 'append' of a type (line 674)
    append_77583 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 674, 12), subscript_call_result_77582, 'append')
    # Calling append(args, kwargs) (line 674)
    append_call_result_77589 = invoke(stypy.reporting.localization.Localization(__file__, 674, 12), append_77583, *[subscript_call_result_77587], **kwargs_77588)
    
    
    # Assigning a Subscript to a Subscript (line 675):
    
    # Assigning a Subscript to a Subscript (line 675):
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 675)
    groupcounter_77590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 64), 'groupcounter')
    # Getting the type of 'grouplist' (line 675)
    grouplist_77591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 54), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 675)
    getitem___77592 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 675, 54), grouplist_77591, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 675)
    subscript_call_result_77593 = invoke(stypy.reporting.localization.Localization(__file__, 675, 54), getitem___77592, groupcounter_77590)
    
    
    # Obtaining the type of the subscript
    int_77594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 675, 40), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 675)
    groupcounter_77595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 22), 'groupcounter')
    int_77596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 675, 37), 'int')
    # Applying the binary operator '-' (line 675)
    result_sub_77597 = python_operator(stypy.reporting.localization.Localization(__file__, 675, 22), '-', groupcounter_77595, int_77596)
    
    # Getting the type of 'grouplist' (line 675)
    grouplist_77598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 12), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 675)
    getitem___77599 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 675, 12), grouplist_77598, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 675)
    subscript_call_result_77600 = invoke(stypy.reporting.localization.Localization(__file__, 675, 12), getitem___77599, result_sub_77597)
    
    # Obtaining the member '__getitem__' of a type (line 675)
    getitem___77601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 675, 12), subscript_call_result_77600, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 675)
    subscript_call_result_77602 = invoke(stypy.reporting.localization.Localization(__file__, 675, 12), getitem___77601, int_77594)
    
    str_77603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 675, 44), 'str', 'body')
    # Storing an element on a container (line 675)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 675, 12), subscript_call_result_77602, (str_77603, subscript_call_result_77593))
    # Deleting a member
    # Getting the type of 'grouplist' (line 676)
    grouplist_77604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 16), 'grouplist')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 676)
    groupcounter_77605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 26), 'groupcounter')
    # Getting the type of 'grouplist' (line 676)
    grouplist_77606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 16), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 676)
    getitem___77607 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 676, 16), grouplist_77606, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 676)
    subscript_call_result_77608 = invoke(stypy.reporting.localization.Localization(__file__, 676, 16), getitem___77607, groupcounter_77605)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 676, 12), grouplist_77604, subscript_call_result_77608)
    
    # Assigning a BinOp to a Name (line 677):
    
    # Assigning a BinOp to a Name (line 677):
    # Getting the type of 'groupcounter' (line 677)
    groupcounter_77609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 27), 'groupcounter')
    int_77610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 677, 42), 'int')
    # Applying the binary operator '-' (line 677)
    result_sub_77611 = python_operator(stypy.reporting.localization.Localization(__file__, 677, 27), '-', groupcounter_77609, int_77610)
    
    # Assigning a type to the variable 'groupcounter' (line 677)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 677, 12), 'groupcounter', result_sub_77611)
    # SSA join for while statement (line 669)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    # Getting the type of 'f77modulename' (line 678)
    f77modulename_77612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 11), 'f77modulename')
    
    # Getting the type of 'neededmodule' (line 678)
    neededmodule_77613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 29), 'neededmodule')
    # Getting the type of 'groupcounter' (line 678)
    groupcounter_77614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 45), 'groupcounter')
    # Applying the binary operator '==' (line 678)
    result_eq_77615 = python_operator(stypy.reporting.localization.Localization(__file__, 678, 29), '==', neededmodule_77613, groupcounter_77614)
    
    # Applying the binary operator 'and' (line 678)
    result_and_keyword_77616 = python_operator(stypy.reporting.localization.Localization(__file__, 678, 11), 'and', f77modulename_77612, result_eq_77615)
    
    # Testing the type of an if condition (line 678)
    if_condition_77617 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 678, 8), result_and_keyword_77616)
    # Assigning a type to the variable 'if_condition_77617' (line 678)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 8), 'if_condition_77617', if_condition_77617)
    # SSA begins for if statement (line 678)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 679)
    # Processing the call arguments (line 679)
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 679)
    groupcounter_77625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 58), 'groupcounter', False)
    # Getting the type of 'groupcache' (line 679)
    groupcache_77626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 47), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 679)
    getitem___77627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 679, 47), groupcache_77626, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 679)
    subscript_call_result_77628 = invoke(stypy.reporting.localization.Localization(__file__, 679, 47), getitem___77627, groupcounter_77625)
    
    # Processing the call keyword arguments (line 679)
    kwargs_77629 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 679)
    groupcounter_77618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 22), 'groupcounter', False)
    int_77619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 679, 37), 'int')
    # Applying the binary operator '-' (line 679)
    result_sub_77620 = python_operator(stypy.reporting.localization.Localization(__file__, 679, 22), '-', groupcounter_77618, int_77619)
    
    # Getting the type of 'grouplist' (line 679)
    grouplist_77621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 12), 'grouplist', False)
    # Obtaining the member '__getitem__' of a type (line 679)
    getitem___77622 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 679, 12), grouplist_77621, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 679)
    subscript_call_result_77623 = invoke(stypy.reporting.localization.Localization(__file__, 679, 12), getitem___77622, result_sub_77620)
    
    # Obtaining the member 'append' of a type (line 679)
    append_77624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 679, 12), subscript_call_result_77623, 'append')
    # Calling append(args, kwargs) (line 679)
    append_call_result_77630 = invoke(stypy.reporting.localization.Localization(__file__, 679, 12), append_77624, *[subscript_call_result_77628], **kwargs_77629)
    
    
    # Assigning a Subscript to a Subscript (line 680):
    
    # Assigning a Subscript to a Subscript (line 680):
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 680)
    groupcounter_77631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 64), 'groupcounter')
    # Getting the type of 'grouplist' (line 680)
    grouplist_77632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 54), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 680)
    getitem___77633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 680, 54), grouplist_77632, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 680)
    subscript_call_result_77634 = invoke(stypy.reporting.localization.Localization(__file__, 680, 54), getitem___77633, groupcounter_77631)
    
    
    # Obtaining the type of the subscript
    int_77635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 680, 40), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 680)
    groupcounter_77636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 22), 'groupcounter')
    int_77637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 680, 37), 'int')
    # Applying the binary operator '-' (line 680)
    result_sub_77638 = python_operator(stypy.reporting.localization.Localization(__file__, 680, 22), '-', groupcounter_77636, int_77637)
    
    # Getting the type of 'grouplist' (line 680)
    grouplist_77639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 12), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 680)
    getitem___77640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 680, 12), grouplist_77639, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 680)
    subscript_call_result_77641 = invoke(stypy.reporting.localization.Localization(__file__, 680, 12), getitem___77640, result_sub_77638)
    
    # Obtaining the member '__getitem__' of a type (line 680)
    getitem___77642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 680, 12), subscript_call_result_77641, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 680)
    subscript_call_result_77643 = invoke(stypy.reporting.localization.Localization(__file__, 680, 12), getitem___77642, int_77635)
    
    str_77644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 680, 44), 'str', 'body')
    # Storing an element on a container (line 680)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 680, 12), subscript_call_result_77643, (str_77644, subscript_call_result_77634))
    # Deleting a member
    # Getting the type of 'grouplist' (line 681)
    grouplist_77645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 16), 'grouplist')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 681)
    groupcounter_77646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 26), 'groupcounter')
    # Getting the type of 'grouplist' (line 681)
    grouplist_77647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 16), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 681)
    getitem___77648 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 681, 16), grouplist_77647, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 681)
    subscript_call_result_77649 = invoke(stypy.reporting.localization.Localization(__file__, 681, 16), getitem___77648, groupcounter_77646)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 681, 12), grouplist_77645, subscript_call_result_77649)
    
    # Assigning a BinOp to a Name (line 682):
    
    # Assigning a BinOp to a Name (line 682):
    # Getting the type of 'groupcounter' (line 682)
    groupcounter_77650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 27), 'groupcounter')
    int_77651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 682, 42), 'int')
    # Applying the binary operator '-' (line 682)
    result_sub_77652 = python_operator(stypy.reporting.localization.Localization(__file__, 682, 27), '-', groupcounter_77650, int_77651)
    
    # Assigning a type to the variable 'groupcounter' (line 682)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 682, 12), 'groupcounter', result_sub_77652)
    
    # Call to append(...): (line 683)
    # Processing the call arguments (line 683)
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 683)
    groupcounter_77660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 58), 'groupcounter', False)
    # Getting the type of 'groupcache' (line 683)
    groupcache_77661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 47), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 683)
    getitem___77662 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 683, 47), groupcache_77661, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 683)
    subscript_call_result_77663 = invoke(stypy.reporting.localization.Localization(__file__, 683, 47), getitem___77662, groupcounter_77660)
    
    # Processing the call keyword arguments (line 683)
    kwargs_77664 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 683)
    groupcounter_77653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 22), 'groupcounter', False)
    int_77654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 683, 37), 'int')
    # Applying the binary operator '-' (line 683)
    result_sub_77655 = python_operator(stypy.reporting.localization.Localization(__file__, 683, 22), '-', groupcounter_77653, int_77654)
    
    # Getting the type of 'grouplist' (line 683)
    grouplist_77656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 12), 'grouplist', False)
    # Obtaining the member '__getitem__' of a type (line 683)
    getitem___77657 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 683, 12), grouplist_77656, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 683)
    subscript_call_result_77658 = invoke(stypy.reporting.localization.Localization(__file__, 683, 12), getitem___77657, result_sub_77655)
    
    # Obtaining the member 'append' of a type (line 683)
    append_77659 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 683, 12), subscript_call_result_77658, 'append')
    # Calling append(args, kwargs) (line 683)
    append_call_result_77665 = invoke(stypy.reporting.localization.Localization(__file__, 683, 12), append_77659, *[subscript_call_result_77663], **kwargs_77664)
    
    
    # Assigning a Subscript to a Subscript (line 684):
    
    # Assigning a Subscript to a Subscript (line 684):
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 684)
    groupcounter_77666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 64), 'groupcounter')
    # Getting the type of 'grouplist' (line 684)
    grouplist_77667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 54), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 684)
    getitem___77668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 54), grouplist_77667, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 684)
    subscript_call_result_77669 = invoke(stypy.reporting.localization.Localization(__file__, 684, 54), getitem___77668, groupcounter_77666)
    
    
    # Obtaining the type of the subscript
    int_77670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 684, 40), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 684)
    groupcounter_77671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 22), 'groupcounter')
    int_77672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 684, 37), 'int')
    # Applying the binary operator '-' (line 684)
    result_sub_77673 = python_operator(stypy.reporting.localization.Localization(__file__, 684, 22), '-', groupcounter_77671, int_77672)
    
    # Getting the type of 'grouplist' (line 684)
    grouplist_77674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 12), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 684)
    getitem___77675 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 12), grouplist_77674, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 684)
    subscript_call_result_77676 = invoke(stypy.reporting.localization.Localization(__file__, 684, 12), getitem___77675, result_sub_77673)
    
    # Obtaining the member '__getitem__' of a type (line 684)
    getitem___77677 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 12), subscript_call_result_77676, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 684)
    subscript_call_result_77678 = invoke(stypy.reporting.localization.Localization(__file__, 684, 12), getitem___77677, int_77670)
    
    str_77679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 684, 44), 'str', 'body')
    # Storing an element on a container (line 684)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 684, 12), subscript_call_result_77678, (str_77679, subscript_call_result_77669))
    # Deleting a member
    # Getting the type of 'grouplist' (line 685)
    grouplist_77680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 16), 'grouplist')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 685)
    groupcounter_77681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 26), 'groupcounter')
    # Getting the type of 'grouplist' (line 685)
    grouplist_77682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 16), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 685)
    getitem___77683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 685, 16), grouplist_77682, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 685)
    subscript_call_result_77684 = invoke(stypy.reporting.localization.Localization(__file__, 685, 16), getitem___77683, groupcounter_77681)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 685, 12), grouplist_77680, subscript_call_result_77684)
    
    # Assigning a BinOp to a Name (line 686):
    
    # Assigning a BinOp to a Name (line 686):
    # Getting the type of 'groupcounter' (line 686)
    groupcounter_77685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 27), 'groupcounter')
    int_77686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 686, 42), 'int')
    # Applying the binary operator '-' (line 686)
    result_sub_77687 = python_operator(stypy.reporting.localization.Localization(__file__, 686, 27), '-', groupcounter_77685, int_77686)
    
    # Assigning a type to the variable 'groupcounter' (line 686)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 686, 12), 'groupcounter', result_sub_77687)
    
    # Assigning a Num to a Name (line 687):
    
    # Assigning a Num to a Name (line 687):
    int_77688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 687, 27), 'int')
    # Assigning a type to the variable 'neededmodule' (line 687)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 687, 12), 'neededmodule', int_77688)
    # SSA join for if statement (line 678)
    module_type_store = module_type_store.join_ssa_context()
    
    # Assigning a type to the variable 'stypy_return_type' (line 688)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 688, 8), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 665)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'line' (line 689)
    line_77689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 7), 'line')
    str_77690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 689, 15), 'str', '')
    # Applying the binary operator '==' (line 689)
    result_eq_77691 = python_operator(stypy.reporting.localization.Localization(__file__, 689, 7), '==', line_77689, str_77690)
    
    # Testing the type of an if condition (line 689)
    if_condition_77692 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 689, 4), result_eq_77691)
    # Assigning a type to the variable 'if_condition_77692' (line 689)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 689, 4), 'if_condition_77692', if_condition_77692)
    # SSA begins for if statement (line 689)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Assigning a type to the variable 'stypy_return_type' (line 690)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 690, 8), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 689)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Num to a Name (line 691):
    
    # Assigning a Num to a Name (line 691):
    int_77693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 11), 'int')
    # Assigning a type to the variable 'flag' (line 691)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 691, 4), 'flag', int_77693)
    
    
    # Obtaining an instance of the builtin type 'list' (line 692)
    list_77694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 692, 15), 'list')
    # Adding type elements to the builtin type 'list' instance (line 692)
    # Adding element type (line 692)
    # Getting the type of 'dimensionpattern' (line 692)
    dimensionpattern_77695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 16), 'dimensionpattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, dimensionpattern_77695)
    # Adding element type (line 692)
    # Getting the type of 'externalpattern' (line 692)
    externalpattern_77696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 34), 'externalpattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, externalpattern_77696)
    # Adding element type (line 692)
    # Getting the type of 'intentpattern' (line 692)
    intentpattern_77697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 51), 'intentpattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, intentpattern_77697)
    # Adding element type (line 692)
    # Getting the type of 'optionalpattern' (line 692)
    optionalpattern_77698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 66), 'optionalpattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, optionalpattern_77698)
    # Adding element type (line 692)
    # Getting the type of 'requiredpattern' (line 693)
    requiredpattern_77699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 16), 'requiredpattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, requiredpattern_77699)
    # Adding element type (line 692)
    # Getting the type of 'parameterpattern' (line 694)
    parameterpattern_77700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 16), 'parameterpattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, parameterpattern_77700)
    # Adding element type (line 692)
    # Getting the type of 'datapattern' (line 694)
    datapattern_77701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 34), 'datapattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, datapattern_77701)
    # Adding element type (line 692)
    # Getting the type of 'publicpattern' (line 694)
    publicpattern_77702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 47), 'publicpattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, publicpattern_77702)
    # Adding element type (line 692)
    # Getting the type of 'privatepattern' (line 694)
    privatepattern_77703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 62), 'privatepattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, privatepattern_77703)
    # Adding element type (line 692)
    # Getting the type of 'intrisicpattern' (line 695)
    intrisicpattern_77704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 16), 'intrisicpattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, intrisicpattern_77704)
    # Adding element type (line 692)
    # Getting the type of 'endifpattern' (line 696)
    endifpattern_77705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 16), 'endifpattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, endifpattern_77705)
    # Adding element type (line 692)
    # Getting the type of 'endpattern' (line 696)
    endpattern_77706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 30), 'endpattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, endpattern_77706)
    # Adding element type (line 692)
    # Getting the type of 'formatpattern' (line 697)
    formatpattern_77707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 16), 'formatpattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, formatpattern_77707)
    # Adding element type (line 692)
    # Getting the type of 'beginpattern' (line 698)
    beginpattern_77708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 16), 'beginpattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, beginpattern_77708)
    # Adding element type (line 692)
    # Getting the type of 'functionpattern' (line 698)
    functionpattern_77709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 30), 'functionpattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, functionpattern_77709)
    # Adding element type (line 692)
    # Getting the type of 'subroutinepattern' (line 698)
    subroutinepattern_77710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 47), 'subroutinepattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, subroutinepattern_77710)
    # Adding element type (line 692)
    # Getting the type of 'implicitpattern' (line 699)
    implicitpattern_77711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 699, 16), 'implicitpattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, implicitpattern_77711)
    # Adding element type (line 692)
    # Getting the type of 'typespattern' (line 699)
    typespattern_77712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 699, 33), 'typespattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, typespattern_77712)
    # Adding element type (line 692)
    # Getting the type of 'commonpattern' (line 699)
    commonpattern_77713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 699, 47), 'commonpattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, commonpattern_77713)
    # Adding element type (line 692)
    # Getting the type of 'callpattern' (line 700)
    callpattern_77714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 16), 'callpattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, callpattern_77714)
    # Adding element type (line 692)
    # Getting the type of 'usepattern' (line 700)
    usepattern_77715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 29), 'usepattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, usepattern_77715)
    # Adding element type (line 692)
    # Getting the type of 'containspattern' (line 700)
    containspattern_77716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 41), 'containspattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, containspattern_77716)
    # Adding element type (line 692)
    # Getting the type of 'entrypattern' (line 701)
    entrypattern_77717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 16), 'entrypattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, entrypattern_77717)
    # Adding element type (line 692)
    # Getting the type of 'f2pyenhancementspattern' (line 702)
    f2pyenhancementspattern_77718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 16), 'f2pyenhancementspattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, f2pyenhancementspattern_77718)
    # Adding element type (line 692)
    # Getting the type of 'multilinepattern' (line 703)
    multilinepattern_77719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 16), 'multilinepattern')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 15), list_77694, multilinepattern_77719)
    
    # Testing the type of a for loop iterable (line 692)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 692, 4), list_77694)
    # Getting the type of the for loop variable (line 692)
    for_loop_var_77720 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 692, 4), list_77694)
    # Assigning a type to the variable 'pat' (line 692)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 4), 'pat', for_loop_var_77720)
    # SSA begins for a for statement (line 692)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 705):
    
    # Assigning a Call to a Name (line 705):
    
    # Call to match(...): (line 705)
    # Processing the call arguments (line 705)
    # Getting the type of 'line' (line 705)
    line_77726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 25), 'line', False)
    # Processing the call keyword arguments (line 705)
    kwargs_77727 = {}
    
    # Obtaining the type of the subscript
    int_77721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 705, 16), 'int')
    # Getting the type of 'pat' (line 705)
    pat_77722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 12), 'pat', False)
    # Obtaining the member '__getitem__' of a type (line 705)
    getitem___77723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 705, 12), pat_77722, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 705)
    subscript_call_result_77724 = invoke(stypy.reporting.localization.Localization(__file__, 705, 12), getitem___77723, int_77721)
    
    # Obtaining the member 'match' of a type (line 705)
    match_77725 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 705, 12), subscript_call_result_77724, 'match')
    # Calling match(args, kwargs) (line 705)
    match_call_result_77728 = invoke(stypy.reporting.localization.Localization(__file__, 705, 12), match_77725, *[line_77726], **kwargs_77727)
    
    # Assigning a type to the variable 'm' (line 705)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 705, 8), 'm', match_call_result_77728)
    
    # Getting the type of 'm' (line 706)
    m_77729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 11), 'm')
    # Testing the type of an if condition (line 706)
    if_condition_77730 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 706, 8), m_77729)
    # Assigning a type to the variable 'if_condition_77730' (line 706)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 706, 8), 'if_condition_77730', if_condition_77730)
    # SSA begins for if statement (line 706)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 706)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 708):
    
    # Assigning a BinOp to a Name (line 708):
    # Getting the type of 'flag' (line 708)
    flag_77731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 15), 'flag')
    int_77732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 22), 'int')
    # Applying the binary operator '+' (line 708)
    result_add_77733 = python_operator(stypy.reporting.localization.Localization(__file__, 708, 15), '+', flag_77731, int_77732)
    
    # Assigning a type to the variable 'flag' (line 708)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 708, 8), 'flag', result_add_77733)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'm' (line 709)
    m_77734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 11), 'm')
    # Applying the 'not' unary operator (line 709)
    result_not__77735 = python_operator(stypy.reporting.localization.Localization(__file__, 709, 7), 'not', m_77734)
    
    # Testing the type of an if condition (line 709)
    if_condition_77736 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 709, 4), result_not__77735)
    # Assigning a type to the variable 'if_condition_77736' (line 709)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 709, 4), 'if_condition_77736', if_condition_77736)
    # SSA begins for if statement (line 709)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 710):
    
    # Assigning a Name to a Name (line 710):
    # Getting the type of 'crackline_re_1' (line 710)
    crackline_re_1_77737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 15), 'crackline_re_1')
    # Assigning a type to the variable 're_1' (line 710)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 710, 8), 're_1', crackline_re_1_77737)
    
    
    int_77738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 11), 'int')
    # Getting the type of 'skipblocksuntil' (line 711)
    skipblocksuntil_77739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 16), 'skipblocksuntil')
    # Applying the binary operator '<=' (line 711)
    result_le_77740 = python_operator(stypy.reporting.localization.Localization(__file__, 711, 11), '<=', int_77738, skipblocksuntil_77739)
    # Getting the type of 'groupcounter' (line 711)
    groupcounter_77741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 35), 'groupcounter')
    # Applying the binary operator '<=' (line 711)
    result_le_77742 = python_operator(stypy.reporting.localization.Localization(__file__, 711, 11), '<=', skipblocksuntil_77739, groupcounter_77741)
    # Applying the binary operator '&' (line 711)
    result_and__77743 = python_operator(stypy.reporting.localization.Localization(__file__, 711, 11), '&', result_le_77740, result_le_77742)
    
    # Testing the type of an if condition (line 711)
    if_condition_77744 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 711, 8), result_and__77743)
    # Assigning a type to the variable 'if_condition_77744' (line 711)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 711, 8), 'if_condition_77744', if_condition_77744)
    # SSA begins for if statement (line 711)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Assigning a type to the variable 'stypy_return_type' (line 712)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 712, 12), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 711)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_77745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 713, 11), 'str', 'externals')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 713)
    groupcounter_77746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 37), 'groupcounter')
    # Getting the type of 'groupcache' (line 713)
    groupcache_77747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 26), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 713)
    getitem___77748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 713, 26), groupcache_77747, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 713)
    subscript_call_result_77749 = invoke(stypy.reporting.localization.Localization(__file__, 713, 26), getitem___77748, groupcounter_77746)
    
    # Applying the binary operator 'in' (line 713)
    result_contains_77750 = python_operator(stypy.reporting.localization.Localization(__file__, 713, 11), 'in', str_77745, subscript_call_result_77749)
    
    # Testing the type of an if condition (line 713)
    if_condition_77751 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 713, 8), result_contains_77750)
    # Assigning a type to the variable 'if_condition_77751' (line 713)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 713, 8), 'if_condition_77751', if_condition_77751)
    # SSA begins for if statement (line 713)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Obtaining the type of the subscript
    str_77752 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 49), 'str', 'externals')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 714)
    groupcounter_77753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 35), 'groupcounter')
    # Getting the type of 'groupcache' (line 714)
    groupcache_77754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 24), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 714)
    getitem___77755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 714, 24), groupcache_77754, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 714)
    subscript_call_result_77756 = invoke(stypy.reporting.localization.Localization(__file__, 714, 24), getitem___77755, groupcounter_77753)
    
    # Obtaining the member '__getitem__' of a type (line 714)
    getitem___77757 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 714, 24), subscript_call_result_77756, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 714)
    subscript_call_result_77758 = invoke(stypy.reporting.localization.Localization(__file__, 714, 24), getitem___77757, str_77752)
    
    # Testing the type of a for loop iterable (line 714)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 714, 12), subscript_call_result_77758)
    # Getting the type of the for loop variable (line 714)
    for_loop_var_77759 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 714, 12), subscript_call_result_77758)
    # Assigning a type to the variable 'name' (line 714)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 714, 12), 'name', for_loop_var_77759)
    # SSA begins for a for statement (line 714)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'name' (line 715)
    name_77760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 19), 'name')
    # Getting the type of 'invbadnames' (line 715)
    invbadnames_77761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 27), 'invbadnames')
    # Applying the binary operator 'in' (line 715)
    result_contains_77762 = python_operator(stypy.reporting.localization.Localization(__file__, 715, 19), 'in', name_77760, invbadnames_77761)
    
    # Testing the type of an if condition (line 715)
    if_condition_77763 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 715, 16), result_contains_77762)
    # Assigning a type to the variable 'if_condition_77763' (line 715)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 715, 16), 'if_condition_77763', if_condition_77763)
    # SSA begins for if statement (line 715)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 716):
    
    # Assigning a Subscript to a Name (line 716):
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 716)
    name_77764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 39), 'name')
    # Getting the type of 'invbadnames' (line 716)
    invbadnames_77765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 27), 'invbadnames')
    # Obtaining the member '__getitem__' of a type (line 716)
    getitem___77766 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 716, 27), invbadnames_77765, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 716)
    subscript_call_result_77767 = invoke(stypy.reporting.localization.Localization(__file__, 716, 27), getitem___77766, name_77764)
    
    # Assigning a type to the variable 'name' (line 716)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 716, 20), 'name', subscript_call_result_77767)
    # SSA join for if statement (line 715)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    str_77768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 19), 'str', 'interfaced')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 717)
    groupcounter_77769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 46), 'groupcounter')
    # Getting the type of 'groupcache' (line 717)
    groupcache_77770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 35), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 717)
    getitem___77771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 35), groupcache_77770, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 717)
    subscript_call_result_77772 = invoke(stypy.reporting.localization.Localization(__file__, 717, 35), getitem___77771, groupcounter_77769)
    
    # Applying the binary operator 'in' (line 717)
    result_contains_77773 = python_operator(stypy.reporting.localization.Localization(__file__, 717, 19), 'in', str_77768, subscript_call_result_77772)
    
    
    # Getting the type of 'name' (line 717)
    name_77774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 64), 'name')
    
    # Obtaining the type of the subscript
    str_77775 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 97), 'str', 'interfaced')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 717)
    groupcounter_77776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 83), 'groupcounter')
    # Getting the type of 'groupcache' (line 717)
    groupcache_77777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 72), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 717)
    getitem___77778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 72), groupcache_77777, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 717)
    subscript_call_result_77779 = invoke(stypy.reporting.localization.Localization(__file__, 717, 72), getitem___77778, groupcounter_77776)
    
    # Obtaining the member '__getitem__' of a type (line 717)
    getitem___77780 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 72), subscript_call_result_77779, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 717)
    subscript_call_result_77781 = invoke(stypy.reporting.localization.Localization(__file__, 717, 72), getitem___77780, str_77775)
    
    # Applying the binary operator 'in' (line 717)
    result_contains_77782 = python_operator(stypy.reporting.localization.Localization(__file__, 717, 64), 'in', name_77774, subscript_call_result_77781)
    
    # Applying the binary operator 'and' (line 717)
    result_and_keyword_77783 = python_operator(stypy.reporting.localization.Localization(__file__, 717, 19), 'and', result_contains_77773, result_contains_77782)
    
    # Testing the type of an if condition (line 717)
    if_condition_77784 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 717, 16), result_and_keyword_77783)
    # Assigning a type to the variable 'if_condition_77784' (line 717)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 717, 16), 'if_condition_77784', if_condition_77784)
    # SSA begins for if statement (line 717)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 717)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 719):
    
    # Assigning a Call to a Name (line 719):
    
    # Call to match(...): (line 719)
    # Processing the call arguments (line 719)
    str_77787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 20), 'str', '(?P<before>[^"]*)\\b%s\\b\\s*@\\(@(?P<args>[^@]*)@\\)@.*\\Z')
    # Getting the type of 'name' (line 720)
    name_77788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 79), 'name', False)
    # Applying the binary operator '%' (line 720)
    result_mod_77789 = python_operator(stypy.reporting.localization.Localization(__file__, 720, 20), '%', str_77787, name_77788)
    
    
    # Call to markouterparen(...): (line 720)
    # Processing the call arguments (line 720)
    # Getting the type of 'line' (line 720)
    line_77791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 100), 'line', False)
    # Processing the call keyword arguments (line 720)
    kwargs_77792 = {}
    # Getting the type of 'markouterparen' (line 720)
    markouterparen_77790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 85), 'markouterparen', False)
    # Calling markouterparen(args, kwargs) (line 720)
    markouterparen_call_result_77793 = invoke(stypy.reporting.localization.Localization(__file__, 720, 85), markouterparen_77790, *[line_77791], **kwargs_77792)
    
    # Getting the type of 're' (line 720)
    re_77794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 107), 're', False)
    # Obtaining the member 'I' of a type (line 720)
    I_77795 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 720, 107), re_77794, 'I')
    # Processing the call keyword arguments (line 719)
    kwargs_77796 = {}
    # Getting the type of 're' (line 719)
    re_77785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 21), 're', False)
    # Obtaining the member 'match' of a type (line 719)
    match_77786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 719, 21), re_77785, 'match')
    # Calling match(args, kwargs) (line 719)
    match_call_result_77797 = invoke(stypy.reporting.localization.Localization(__file__, 719, 21), match_77786, *[result_mod_77789, markouterparen_call_result_77793, I_77795], **kwargs_77796)
    
    # Assigning a type to the variable 'm1' (line 719)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 719, 16), 'm1', match_call_result_77797)
    
    # Getting the type of 'm1' (line 721)
    m1_77798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 19), 'm1')
    # Testing the type of an if condition (line 721)
    if_condition_77799 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 721, 16), m1_77798)
    # Assigning a type to the variable 'if_condition_77799' (line 721)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 721, 16), 'if_condition_77799', if_condition_77799)
    # SSA begins for if statement (line 721)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 722):
    
    # Assigning a Call to a Name (line 722):
    
    # Call to match(...): (line 722)
    # Processing the call arguments (line 722)
    
    # Call to group(...): (line 722)
    # Processing the call arguments (line 722)
    str_77804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 45), 'str', 'before')
    # Processing the call keyword arguments (line 722)
    kwargs_77805 = {}
    # Getting the type of 'm1' (line 722)
    m1_77802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 36), 'm1', False)
    # Obtaining the member 'group' of a type (line 722)
    group_77803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 36), m1_77802, 'group')
    # Calling group(args, kwargs) (line 722)
    group_call_result_77806 = invoke(stypy.reporting.localization.Localization(__file__, 722, 36), group_77803, *[str_77804], **kwargs_77805)
    
    # Processing the call keyword arguments (line 722)
    kwargs_77807 = {}
    # Getting the type of 're_1' (line 722)
    re_1_77800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 25), 're_1', False)
    # Obtaining the member 'match' of a type (line 722)
    match_77801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 25), re_1_77800, 'match')
    # Calling match(args, kwargs) (line 722)
    match_call_result_77808 = invoke(stypy.reporting.localization.Localization(__file__, 722, 25), match_77801, *[group_call_result_77806], **kwargs_77807)
    
    # Assigning a type to the variable 'm2' (line 722)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 20), 'm2', match_call_result_77808)
    
    # Assigning a Call to a Name (line 723):
    
    # Assigning a Call to a Name (line 723):
    
    # Call to _simplifyargs(...): (line 723)
    # Processing the call arguments (line 723)
    
    # Call to group(...): (line 723)
    # Processing the call arguments (line 723)
    str_77812 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 723, 47), 'str', 'args')
    # Processing the call keyword arguments (line 723)
    kwargs_77813 = {}
    # Getting the type of 'm1' (line 723)
    m1_77810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 38), 'm1', False)
    # Obtaining the member 'group' of a type (line 723)
    group_77811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 38), m1_77810, 'group')
    # Calling group(args, kwargs) (line 723)
    group_call_result_77814 = invoke(stypy.reporting.localization.Localization(__file__, 723, 38), group_77811, *[str_77812], **kwargs_77813)
    
    # Processing the call keyword arguments (line 723)
    kwargs_77815 = {}
    # Getting the type of '_simplifyargs' (line 723)
    _simplifyargs_77809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 24), '_simplifyargs', False)
    # Calling _simplifyargs(args, kwargs) (line 723)
    _simplifyargs_call_result_77816 = invoke(stypy.reporting.localization.Localization(__file__, 723, 24), _simplifyargs_77809, *[group_call_result_77814], **kwargs_77815)
    
    # Assigning a type to the variable 'a' (line 723)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 723, 20), 'a', _simplifyargs_call_result_77816)
    
    # Getting the type of 'm2' (line 724)
    m2_77817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 23), 'm2')
    # Testing the type of an if condition (line 724)
    if_condition_77818 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 724, 20), m2_77817)
    # Assigning a type to the variable 'if_condition_77818' (line 724)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 724, 20), 'if_condition_77818', if_condition_77818)
    # SSA begins for if statement (line 724)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 725):
    
    # Assigning a BinOp to a Name (line 725):
    str_77819 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 31), 'str', 'callfun %s(%s) result (%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 726)
    tuple_77820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 28), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 726)
    # Adding element type (line 726)
    # Getting the type of 'name' (line 726)
    name_77821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 28), 'name')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 726, 28), tuple_77820, name_77821)
    # Adding element type (line 726)
    # Getting the type of 'a' (line 726)
    a_77822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 34), 'a')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 726, 28), tuple_77820, a_77822)
    # Adding element type (line 726)
    
    # Call to group(...): (line 726)
    # Processing the call arguments (line 726)
    str_77825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 46), 'str', 'result')
    # Processing the call keyword arguments (line 726)
    kwargs_77826 = {}
    # Getting the type of 'm2' (line 726)
    m2_77823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 37), 'm2', False)
    # Obtaining the member 'group' of a type (line 726)
    group_77824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 726, 37), m2_77823, 'group')
    # Calling group(args, kwargs) (line 726)
    group_call_result_77827 = invoke(stypy.reporting.localization.Localization(__file__, 726, 37), group_77824, *[str_77825], **kwargs_77826)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 726, 28), tuple_77820, group_call_result_77827)
    
    # Applying the binary operator '%' (line 725)
    result_mod_77828 = python_operator(stypy.reporting.localization.Localization(__file__, 725, 31), '%', str_77819, tuple_77820)
    
    # Assigning a type to the variable 'line' (line 725)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 725, 24), 'line', result_mod_77828)
    # SSA branch for the else part of an if statement (line 724)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 728):
    
    # Assigning a BinOp to a Name (line 728):
    str_77829 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 31), 'str', 'callfun %s(%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 728)
    tuple_77830 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 51), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 728)
    # Adding element type (line 728)
    # Getting the type of 'name' (line 728)
    name_77831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 51), 'name')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 51), tuple_77830, name_77831)
    # Adding element type (line 728)
    # Getting the type of 'a' (line 728)
    a_77832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 57), 'a')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 51), tuple_77830, a_77832)
    
    # Applying the binary operator '%' (line 728)
    result_mod_77833 = python_operator(stypy.reporting.localization.Localization(__file__, 728, 31), '%', str_77829, tuple_77830)
    
    # Assigning a type to the variable 'line' (line 728)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 728, 24), 'line', result_mod_77833)
    # SSA join for if statement (line 724)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 729):
    
    # Assigning a Call to a Name (line 729):
    
    # Call to match(...): (line 729)
    # Processing the call arguments (line 729)
    # Getting the type of 'line' (line 729)
    line_77839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 48), 'line', False)
    # Processing the call keyword arguments (line 729)
    kwargs_77840 = {}
    
    # Obtaining the type of the subscript
    int_77834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 39), 'int')
    # Getting the type of 'callfunpattern' (line 729)
    callfunpattern_77835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 24), 'callfunpattern', False)
    # Obtaining the member '__getitem__' of a type (line 729)
    getitem___77836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 24), callfunpattern_77835, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 729)
    subscript_call_result_77837 = invoke(stypy.reporting.localization.Localization(__file__, 729, 24), getitem___77836, int_77834)
    
    # Obtaining the member 'match' of a type (line 729)
    match_77838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 24), subscript_call_result_77837, 'match')
    # Calling match(args, kwargs) (line 729)
    match_call_result_77841 = invoke(stypy.reporting.localization.Localization(__file__, 729, 24), match_77838, *[line_77839], **kwargs_77840)
    
    # Assigning a type to the variable 'm' (line 729)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 729, 20), 'm', match_call_result_77841)
    
    
    # Getting the type of 'm' (line 730)
    m_77842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 27), 'm')
    # Applying the 'not' unary operator (line 730)
    result_not__77843 = python_operator(stypy.reporting.localization.Localization(__file__, 730, 23), 'not', m_77842)
    
    # Testing the type of an if condition (line 730)
    if_condition_77844 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 730, 20), result_not__77843)
    # Assigning a type to the variable 'if_condition_77844' (line 730)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 730, 20), 'if_condition_77844', if_condition_77844)
    # SSA begins for if statement (line 730)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 731)
    # Processing the call arguments (line 731)
    str_77846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 28), 'str', 'crackline: could not resolve function call for line=%s.\n')
    
    # Call to repr(...): (line 732)
    # Processing the call arguments (line 732)
    # Getting the type of 'line' (line 732)
    line_77848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 95), 'line', False)
    # Processing the call keyword arguments (line 732)
    kwargs_77849 = {}
    # Getting the type of 'repr' (line 732)
    repr_77847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 90), 'repr', False)
    # Calling repr(args, kwargs) (line 732)
    repr_call_result_77850 = invoke(stypy.reporting.localization.Localization(__file__, 732, 90), repr_77847, *[line_77848], **kwargs_77849)
    
    # Applying the binary operator '%' (line 732)
    result_mod_77851 = python_operator(stypy.reporting.localization.Localization(__file__, 732, 28), '%', str_77846, repr_call_result_77850)
    
    # Processing the call keyword arguments (line 731)
    kwargs_77852 = {}
    # Getting the type of 'outmess' (line 731)
    outmess_77845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 24), 'outmess', False)
    # Calling outmess(args, kwargs) (line 731)
    outmess_call_result_77853 = invoke(stypy.reporting.localization.Localization(__file__, 731, 24), outmess_77845, *[result_mod_77851], **kwargs_77852)
    
    # Assigning a type to the variable 'stypy_return_type' (line 733)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 733, 24), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 730)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to analyzeline(...): (line 734)
    # Processing the call arguments (line 734)
    # Getting the type of 'm' (line 734)
    m_77855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 32), 'm', False)
    str_77856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 35), 'str', 'callfun')
    # Getting the type of 'line' (line 734)
    line_77857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 46), 'line', False)
    # Processing the call keyword arguments (line 734)
    kwargs_77858 = {}
    # Getting the type of 'analyzeline' (line 734)
    analyzeline_77854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 20), 'analyzeline', False)
    # Calling analyzeline(args, kwargs) (line 734)
    analyzeline_call_result_77859 = invoke(stypy.reporting.localization.Localization(__file__, 734, 20), analyzeline_77854, *[m_77855, str_77856, line_77857], **kwargs_77858)
    
    # Assigning a type to the variable 'stypy_return_type' (line 735)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 20), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 721)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 713)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'verbose' (line 736)
    verbose_77860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 11), 'verbose')
    int_77861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 21), 'int')
    # Applying the binary operator '>' (line 736)
    result_gt_77862 = python_operator(stypy.reporting.localization.Localization(__file__, 736, 11), '>', verbose_77860, int_77861)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'verbose' (line 736)
    verbose_77863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 27), 'verbose')
    int_77864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 38), 'int')
    # Applying the binary operator '==' (line 736)
    result_eq_77865 = python_operator(stypy.reporting.localization.Localization(__file__, 736, 27), '==', verbose_77863, int_77864)
    
    
    # Call to endswith(...): (line 736)
    # Processing the call arguments (line 736)
    str_77871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 77), 'str', '.pyf')
    # Processing the call keyword arguments (line 736)
    kwargs_77872 = {}
    
    # Call to lower(...): (line 736)
    # Processing the call keyword arguments (line 736)
    kwargs_77868 = {}
    # Getting the type of 'currentfilename' (line 736)
    currentfilename_77866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 44), 'currentfilename', False)
    # Obtaining the member 'lower' of a type (line 736)
    lower_77867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 736, 44), currentfilename_77866, 'lower')
    # Calling lower(args, kwargs) (line 736)
    lower_call_result_77869 = invoke(stypy.reporting.localization.Localization(__file__, 736, 44), lower_77867, *[], **kwargs_77868)
    
    # Obtaining the member 'endswith' of a type (line 736)
    endswith_77870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 736, 44), lower_call_result_77869, 'endswith')
    # Calling endswith(args, kwargs) (line 736)
    endswith_call_result_77873 = invoke(stypy.reporting.localization.Localization(__file__, 736, 44), endswith_77870, *[str_77871], **kwargs_77872)
    
    # Applying the binary operator 'and' (line 736)
    result_and_keyword_77874 = python_operator(stypy.reporting.localization.Localization(__file__, 736, 27), 'and', result_eq_77865, endswith_call_result_77873)
    
    # Applying the binary operator 'or' (line 736)
    result_or_keyword_77875 = python_operator(stypy.reporting.localization.Localization(__file__, 736, 11), 'or', result_gt_77862, result_and_keyword_77874)
    
    # Testing the type of an if condition (line 736)
    if_condition_77876 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 736, 8), result_or_keyword_77875)
    # Assigning a type to the variable 'if_condition_77876' (line 736)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 736, 8), 'if_condition_77876', if_condition_77876)
    # SSA begins for if statement (line 736)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 737):
    
    # Assigning a Name to a Name (line 737):
    # Getting the type of 'None' (line 737)
    None_77877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 31), 'None')
    # Assigning a type to the variable 'previous_context' (line 737)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 737, 12), 'previous_context', None_77877)
    
    # Call to outmess(...): (line 738)
    # Processing the call arguments (line 738)
    str_77879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 20), 'str', 'crackline:%d: No pattern for line\n')
    # Getting the type of 'groupcounter' (line 738)
    groupcounter_77880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 61), 'groupcounter', False)
    # Applying the binary operator '%' (line 738)
    result_mod_77881 = python_operator(stypy.reporting.localization.Localization(__file__, 738, 20), '%', str_77879, groupcounter_77880)
    
    # Processing the call keyword arguments (line 738)
    kwargs_77882 = {}
    # Getting the type of 'outmess' (line 738)
    outmess_77878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 12), 'outmess', False)
    # Calling outmess(args, kwargs) (line 738)
    outmess_call_result_77883 = invoke(stypy.reporting.localization.Localization(__file__, 738, 12), outmess_77878, *[result_mod_77881], **kwargs_77882)
    
    # SSA join for if statement (line 736)
    module_type_store = module_type_store.join_ssa_context()
    
    # Assigning a type to the variable 'stypy_return_type' (line 739)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 739, 8), 'stypy_return_type', types.NoneType)
    # SSA branch for the else part of an if statement (line 709)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    int_77884 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 13), 'int')
    # Getting the type of 'pat' (line 740)
    pat_77885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 9), 'pat')
    # Obtaining the member '__getitem__' of a type (line 740)
    getitem___77886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 740, 9), pat_77885, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 740)
    subscript_call_result_77887 = invoke(stypy.reporting.localization.Localization(__file__, 740, 9), getitem___77886, int_77884)
    
    str_77888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 19), 'str', 'end')
    # Applying the binary operator '==' (line 740)
    result_eq_77889 = python_operator(stypy.reporting.localization.Localization(__file__, 740, 9), '==', subscript_call_result_77887, str_77888)
    
    # Testing the type of an if condition (line 740)
    if_condition_77890 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 740, 9), result_eq_77889)
    # Assigning a type to the variable 'if_condition_77890' (line 740)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 740, 9), 'if_condition_77890', if_condition_77890)
    # SSA begins for if statement (line 740)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    int_77891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 741, 11), 'int')
    # Getting the type of 'skipblocksuntil' (line 741)
    skipblocksuntil_77892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 16), 'skipblocksuntil')
    # Applying the binary operator '<=' (line 741)
    result_le_77893 = python_operator(stypy.reporting.localization.Localization(__file__, 741, 11), '<=', int_77891, skipblocksuntil_77892)
    # Getting the type of 'groupcounter' (line 741)
    groupcounter_77894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 34), 'groupcounter')
    # Applying the binary operator '<' (line 741)
    result_lt_77895 = python_operator(stypy.reporting.localization.Localization(__file__, 741, 11), '<', skipblocksuntil_77892, groupcounter_77894)
    # Applying the binary operator '&' (line 741)
    result_and__77896 = python_operator(stypy.reporting.localization.Localization(__file__, 741, 11), '&', result_le_77893, result_lt_77895)
    
    # Testing the type of an if condition (line 741)
    if_condition_77897 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 741, 8), result_and__77896)
    # Assigning a type to the variable 'if_condition_77897' (line 741)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 741, 8), 'if_condition_77897', if_condition_77897)
    # SSA begins for if statement (line 741)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 742):
    
    # Assigning a BinOp to a Name (line 742):
    # Getting the type of 'groupcounter' (line 742)
    groupcounter_77898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 27), 'groupcounter')
    int_77899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 742, 42), 'int')
    # Applying the binary operator '-' (line 742)
    result_sub_77900 = python_operator(stypy.reporting.localization.Localization(__file__, 742, 27), '-', groupcounter_77898, int_77899)
    
    # Assigning a type to the variable 'groupcounter' (line 742)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 742, 12), 'groupcounter', result_sub_77900)
    
    
    # Getting the type of 'skipblocksuntil' (line 743)
    skipblocksuntil_77901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 15), 'skipblocksuntil')
    # Getting the type of 'groupcounter' (line 743)
    groupcounter_77902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 34), 'groupcounter')
    # Applying the binary operator '<=' (line 743)
    result_le_77903 = python_operator(stypy.reporting.localization.Localization(__file__, 743, 15), '<=', skipblocksuntil_77901, groupcounter_77902)
    
    # Testing the type of an if condition (line 743)
    if_condition_77904 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 743, 12), result_le_77903)
    # Assigning a type to the variable 'if_condition_77904' (line 743)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 743, 12), 'if_condition_77904', if_condition_77904)
    # SSA begins for if statement (line 743)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Assigning a type to the variable 'stypy_return_type' (line 744)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 744, 16), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 743)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 741)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'groupcounter' (line 745)
    groupcounter_77905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 11), 'groupcounter')
    int_77906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 745, 27), 'int')
    # Applying the binary operator '<=' (line 745)
    result_le_77907 = python_operator(stypy.reporting.localization.Localization(__file__, 745, 11), '<=', groupcounter_77905, int_77906)
    
    # Testing the type of an if condition (line 745)
    if_condition_77908 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 745, 8), result_le_77907)
    # Assigning a type to the variable 'if_condition_77908' (line 745)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 745, 8), 'if_condition_77908', if_condition_77908)
    # SSA begins for if statement (line 745)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to Exception(...): (line 746)
    # Processing the call arguments (line 746)
    str_77910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 28), 'str', 'crackline: groupcounter(=%s) is nonpositive. Check the blocks.')
    # Getting the type of 'groupcounter' (line 748)
    groupcounter_77911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 31), 'groupcounter', False)
    # Applying the binary operator '%' (line 746)
    result_mod_77912 = python_operator(stypy.reporting.localization.Localization(__file__, 746, 28), '%', str_77910, groupcounter_77911)
    
    # Processing the call keyword arguments (line 746)
    kwargs_77913 = {}
    # Getting the type of 'Exception' (line 746)
    Exception_77909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 18), 'Exception', False)
    # Calling Exception(args, kwargs) (line 746)
    Exception_call_result_77914 = invoke(stypy.reporting.localization.Localization(__file__, 746, 18), Exception_77909, *[result_mod_77912], **kwargs_77913)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 746, 12), Exception_call_result_77914, 'raise parameter', BaseException)
    # SSA join for if statement (line 745)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 749):
    
    # Assigning a Call to a Name (line 749):
    
    # Call to match(...): (line 749)
    # Processing the call arguments (line 749)
    # Getting the type of 'line' (line 749)
    line_77920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 36), 'line', False)
    # Processing the call keyword arguments (line 749)
    kwargs_77921 = {}
    
    # Obtaining the type of the subscript
    int_77915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 749, 26), 'int')
    # Getting the type of 'beginpattern' (line 749)
    beginpattern_77916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 13), 'beginpattern', False)
    # Obtaining the member '__getitem__' of a type (line 749)
    getitem___77917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 13), beginpattern_77916, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 749)
    subscript_call_result_77918 = invoke(stypy.reporting.localization.Localization(__file__, 749, 13), getitem___77917, int_77915)
    
    # Obtaining the member 'match' of a type (line 749)
    match_77919 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 13), subscript_call_result_77918, 'match')
    # Calling match(args, kwargs) (line 749)
    match_call_result_77922 = invoke(stypy.reporting.localization.Localization(__file__, 749, 13), match_77919, *[line_77920], **kwargs_77921)
    
    # Assigning a type to the variable 'm1' (line 749)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 749, 8), 'm1', match_call_result_77922)
    
    
    # Evaluating a boolean operation
    # Getting the type of 'm1' (line 750)
    m1_77923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 12), 'm1')
    
    
    
    # Call to group(...): (line 750)
    # Processing the call arguments (line 750)
    str_77926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 750, 34), 'str', 'this')
    # Processing the call keyword arguments (line 750)
    kwargs_77927 = {}
    # Getting the type of 'm1' (line 750)
    m1_77924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 25), 'm1', False)
    # Obtaining the member 'group' of a type (line 750)
    group_77925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 750, 25), m1_77924, 'group')
    # Calling group(args, kwargs) (line 750)
    group_call_result_77928 = invoke(stypy.reporting.localization.Localization(__file__, 750, 25), group_77925, *[str_77926], **kwargs_77927)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 750)
    groupcounter_77929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 55), 'groupcounter')
    # Getting the type of 'groupname' (line 750)
    groupname_77930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 45), 'groupname')
    # Obtaining the member '__getitem__' of a type (line 750)
    getitem___77931 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 750, 45), groupname_77930, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 750)
    subscript_call_result_77932 = invoke(stypy.reporting.localization.Localization(__file__, 750, 45), getitem___77931, groupcounter_77929)
    
    # Applying the binary operator '==' (line 750)
    result_eq_77933 = python_operator(stypy.reporting.localization.Localization(__file__, 750, 25), '==', group_call_result_77928, subscript_call_result_77932)
    
    # Applying the 'not' unary operator (line 750)
    result_not__77934 = python_operator(stypy.reporting.localization.Localization(__file__, 750, 21), 'not', result_eq_77933)
    
    # Applying the binary operator 'and' (line 750)
    result_and_keyword_77935 = python_operator(stypy.reporting.localization.Localization(__file__, 750, 11), 'and', m1_77923, result_not__77934)
    
    # Testing the type of an if condition (line 750)
    if_condition_77936 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 750, 8), result_and_keyword_77935)
    # Assigning a type to the variable 'if_condition_77936' (line 750)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 750, 8), 'if_condition_77936', if_condition_77936)
    # SSA begins for if statement (line 750)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to Exception(...): (line 751)
    # Processing the call arguments (line 751)
    str_77938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 751, 28), 'str', 'crackline: End group %s does not match with previous Begin group %s\n\t%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 753)
    tuple_77939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 29), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 753)
    # Adding element type (line 753)
    
    # Call to repr(...): (line 753)
    # Processing the call arguments (line 753)
    
    # Call to group(...): (line 753)
    # Processing the call arguments (line 753)
    str_77943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 43), 'str', 'this')
    # Processing the call keyword arguments (line 753)
    kwargs_77944 = {}
    # Getting the type of 'm1' (line 753)
    m1_77941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 34), 'm1', False)
    # Obtaining the member 'group' of a type (line 753)
    group_77942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 753, 34), m1_77941, 'group')
    # Calling group(args, kwargs) (line 753)
    group_call_result_77945 = invoke(stypy.reporting.localization.Localization(__file__, 753, 34), group_77942, *[str_77943], **kwargs_77944)
    
    # Processing the call keyword arguments (line 753)
    kwargs_77946 = {}
    # Getting the type of 'repr' (line 753)
    repr_77940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 29), 'repr', False)
    # Calling repr(args, kwargs) (line 753)
    repr_call_result_77947 = invoke(stypy.reporting.localization.Localization(__file__, 753, 29), repr_77940, *[group_call_result_77945], **kwargs_77946)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 29), tuple_77939, repr_call_result_77947)
    # Adding element type (line 753)
    
    # Call to repr(...): (line 753)
    # Processing the call arguments (line 753)
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 753)
    groupcounter_77949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 68), 'groupcounter', False)
    # Getting the type of 'groupname' (line 753)
    groupname_77950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 58), 'groupname', False)
    # Obtaining the member '__getitem__' of a type (line 753)
    getitem___77951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 753, 58), groupname_77950, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 753)
    subscript_call_result_77952 = invoke(stypy.reporting.localization.Localization(__file__, 753, 58), getitem___77951, groupcounter_77949)
    
    # Processing the call keyword arguments (line 753)
    kwargs_77953 = {}
    # Getting the type of 'repr' (line 753)
    repr_77948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 53), 'repr', False)
    # Calling repr(args, kwargs) (line 753)
    repr_call_result_77954 = invoke(stypy.reporting.localization.Localization(__file__, 753, 53), repr_77948, *[subscript_call_result_77952], **kwargs_77953)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 29), tuple_77939, repr_call_result_77954)
    # Adding element type (line 753)
    # Getting the type of 'filepositiontext' (line 754)
    filepositiontext_77955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 29), 'filepositiontext', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 29), tuple_77939, filepositiontext_77955)
    
    # Applying the binary operator '%' (line 751)
    result_mod_77956 = python_operator(stypy.reporting.localization.Localization(__file__, 751, 28), '%', str_77938, tuple_77939)
    
    # Processing the call keyword arguments (line 751)
    kwargs_77957 = {}
    # Getting the type of 'Exception' (line 751)
    Exception_77937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 18), 'Exception', False)
    # Calling Exception(args, kwargs) (line 751)
    Exception_call_result_77958 = invoke(stypy.reporting.localization.Localization(__file__, 751, 18), Exception_77937, *[result_mod_77956], **kwargs_77957)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 751, 12), Exception_call_result_77958, 'raise parameter', BaseException)
    # SSA join for if statement (line 750)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'skipblocksuntil' (line 756)
    skipblocksuntil_77959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 11), 'skipblocksuntil')
    # Getting the type of 'groupcounter' (line 756)
    groupcounter_77960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 30), 'groupcounter')
    # Applying the binary operator '==' (line 756)
    result_eq_77961 = python_operator(stypy.reporting.localization.Localization(__file__, 756, 11), '==', skipblocksuntil_77959, groupcounter_77960)
    
    # Testing the type of an if condition (line 756)
    if_condition_77962 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 756, 8), result_eq_77961)
    # Assigning a type to the variable 'if_condition_77962' (line 756)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 756, 8), 'if_condition_77962', if_condition_77962)
    # SSA begins for if statement (line 756)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 757):
    
    # Assigning a Num to a Name (line 757):
    int_77963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 757, 30), 'int')
    # Assigning a type to the variable 'skipblocksuntil' (line 757)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 757, 12), 'skipblocksuntil', int_77963)
    # SSA join for if statement (line 756)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 758)
    # Processing the call arguments (line 758)
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 758)
    groupcounter_77971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 54), 'groupcounter', False)
    # Getting the type of 'groupcache' (line 758)
    groupcache_77972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 43), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 758)
    getitem___77973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 758, 43), groupcache_77972, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 758)
    subscript_call_result_77974 = invoke(stypy.reporting.localization.Localization(__file__, 758, 43), getitem___77973, groupcounter_77971)
    
    # Processing the call keyword arguments (line 758)
    kwargs_77975 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 758)
    groupcounter_77964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 18), 'groupcounter', False)
    int_77965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 758, 33), 'int')
    # Applying the binary operator '-' (line 758)
    result_sub_77966 = python_operator(stypy.reporting.localization.Localization(__file__, 758, 18), '-', groupcounter_77964, int_77965)
    
    # Getting the type of 'grouplist' (line 758)
    grouplist_77967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 8), 'grouplist', False)
    # Obtaining the member '__getitem__' of a type (line 758)
    getitem___77968 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 758, 8), grouplist_77967, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 758)
    subscript_call_result_77969 = invoke(stypy.reporting.localization.Localization(__file__, 758, 8), getitem___77968, result_sub_77966)
    
    # Obtaining the member 'append' of a type (line 758)
    append_77970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 758, 8), subscript_call_result_77969, 'append')
    # Calling append(args, kwargs) (line 758)
    append_call_result_77976 = invoke(stypy.reporting.localization.Localization(__file__, 758, 8), append_77970, *[subscript_call_result_77974], **kwargs_77975)
    
    
    # Assigning a Subscript to a Subscript (line 759):
    
    # Assigning a Subscript to a Subscript (line 759):
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 759)
    groupcounter_77977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 60), 'groupcounter')
    # Getting the type of 'grouplist' (line 759)
    grouplist_77978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 50), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 759)
    getitem___77979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 759, 50), grouplist_77978, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 759)
    subscript_call_result_77980 = invoke(stypy.reporting.localization.Localization(__file__, 759, 50), getitem___77979, groupcounter_77977)
    
    
    # Obtaining the type of the subscript
    int_77981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 36), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 759)
    groupcounter_77982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 18), 'groupcounter')
    int_77983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 33), 'int')
    # Applying the binary operator '-' (line 759)
    result_sub_77984 = python_operator(stypy.reporting.localization.Localization(__file__, 759, 18), '-', groupcounter_77982, int_77983)
    
    # Getting the type of 'grouplist' (line 759)
    grouplist_77985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 8), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 759)
    getitem___77986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 759, 8), grouplist_77985, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 759)
    subscript_call_result_77987 = invoke(stypy.reporting.localization.Localization(__file__, 759, 8), getitem___77986, result_sub_77984)
    
    # Obtaining the member '__getitem__' of a type (line 759)
    getitem___77988 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 759, 8), subscript_call_result_77987, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 759)
    subscript_call_result_77989 = invoke(stypy.reporting.localization.Localization(__file__, 759, 8), getitem___77988, int_77981)
    
    str_77990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 40), 'str', 'body')
    # Storing an element on a container (line 759)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 8), subscript_call_result_77989, (str_77990, subscript_call_result_77980))
    # Deleting a member
    # Getting the type of 'grouplist' (line 760)
    grouplist_77991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 12), 'grouplist')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 760)
    groupcounter_77992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 22), 'groupcounter')
    # Getting the type of 'grouplist' (line 760)
    grouplist_77993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 12), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 760)
    getitem___77994 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 760, 12), grouplist_77993, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 760)
    subscript_call_result_77995 = invoke(stypy.reporting.localization.Localization(__file__, 760, 12), getitem___77994, groupcounter_77992)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 760, 8), grouplist_77991, subscript_call_result_77995)
    
    # Assigning a BinOp to a Name (line 761):
    
    # Assigning a BinOp to a Name (line 761):
    # Getting the type of 'groupcounter' (line 761)
    groupcounter_77996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 23), 'groupcounter')
    int_77997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 761, 38), 'int')
    # Applying the binary operator '-' (line 761)
    result_sub_77998 = python_operator(stypy.reporting.localization.Localization(__file__, 761, 23), '-', groupcounter_77996, int_77997)
    
    # Assigning a type to the variable 'groupcounter' (line 761)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 761, 8), 'groupcounter', result_sub_77998)
    
    
    # Getting the type of 'skipemptyends' (line 762)
    skipemptyends_77999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 762, 15), 'skipemptyends')
    # Applying the 'not' unary operator (line 762)
    result_not__78000 = python_operator(stypy.reporting.localization.Localization(__file__, 762, 11), 'not', skipemptyends_77999)
    
    # Testing the type of an if condition (line 762)
    if_condition_78001 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 762, 8), result_not__78000)
    # Assigning a type to the variable 'if_condition_78001' (line 762)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 762, 8), 'if_condition_78001', if_condition_78001)
    # SSA begins for if statement (line 762)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 763):
    
    # Assigning a Num to a Name (line 763):
    int_78002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 763, 26), 'int')
    # Assigning a type to the variable 'expectbegin' (line 763)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 763, 12), 'expectbegin', int_78002)
    # SSA join for if statement (line 762)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 740)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    int_78003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 764, 13), 'int')
    # Getting the type of 'pat' (line 764)
    pat_78004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 9), 'pat')
    # Obtaining the member '__getitem__' of a type (line 764)
    getitem___78005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 764, 9), pat_78004, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 764)
    subscript_call_result_78006 = invoke(stypy.reporting.localization.Localization(__file__, 764, 9), getitem___78005, int_78003)
    
    str_78007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 764, 19), 'str', 'begin')
    # Applying the binary operator '==' (line 764)
    result_eq_78008 = python_operator(stypy.reporting.localization.Localization(__file__, 764, 9), '==', subscript_call_result_78006, str_78007)
    
    # Testing the type of an if condition (line 764)
    if_condition_78009 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 764, 9), result_eq_78008)
    # Assigning a type to the variable 'if_condition_78009' (line 764)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 764, 9), 'if_condition_78009', if_condition_78009)
    # SSA begins for if statement (line 764)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    int_78010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 765, 11), 'int')
    # Getting the type of 'skipblocksuntil' (line 765)
    skipblocksuntil_78011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 16), 'skipblocksuntil')
    # Applying the binary operator '<=' (line 765)
    result_le_78012 = python_operator(stypy.reporting.localization.Localization(__file__, 765, 11), '<=', int_78010, skipblocksuntil_78011)
    # Getting the type of 'groupcounter' (line 765)
    groupcounter_78013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 35), 'groupcounter')
    # Applying the binary operator '<=' (line 765)
    result_le_78014 = python_operator(stypy.reporting.localization.Localization(__file__, 765, 11), '<=', skipblocksuntil_78011, groupcounter_78013)
    # Applying the binary operator '&' (line 765)
    result_and__78015 = python_operator(stypy.reporting.localization.Localization(__file__, 765, 11), '&', result_le_78012, result_le_78014)
    
    # Testing the type of an if condition (line 765)
    if_condition_78016 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 765, 8), result_and__78015)
    # Assigning a type to the variable 'if_condition_78016' (line 765)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 765, 8), 'if_condition_78016', if_condition_78016)
    # SSA begins for if statement (line 765)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 766):
    
    # Assigning a BinOp to a Name (line 766):
    # Getting the type of 'groupcounter' (line 766)
    groupcounter_78017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 27), 'groupcounter')
    int_78018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 42), 'int')
    # Applying the binary operator '+' (line 766)
    result_add_78019 = python_operator(stypy.reporting.localization.Localization(__file__, 766, 27), '+', groupcounter_78017, int_78018)
    
    # Assigning a type to the variable 'groupcounter' (line 766)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 766, 12), 'groupcounter', result_add_78019)
    # Assigning a type to the variable 'stypy_return_type' (line 767)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 767, 12), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 765)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Num to a Name (line 768):
    
    # Assigning a Num to a Name (line 768):
    int_78020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 768, 22), 'int')
    # Assigning a type to the variable 'gotnextfile' (line 768)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 768, 8), 'gotnextfile', int_78020)
    
    # Call to analyzeline(...): (line 769)
    # Processing the call arguments (line 769)
    # Getting the type of 'm' (line 769)
    m_78022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 20), 'm', False)
    
    # Obtaining the type of the subscript
    int_78023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 769, 27), 'int')
    # Getting the type of 'pat' (line 769)
    pat_78024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 23), 'pat', False)
    # Obtaining the member '__getitem__' of a type (line 769)
    getitem___78025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 769, 23), pat_78024, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 769)
    subscript_call_result_78026 = invoke(stypy.reporting.localization.Localization(__file__, 769, 23), getitem___78025, int_78023)
    
    # Getting the type of 'line' (line 769)
    line_78027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 31), 'line', False)
    # Processing the call keyword arguments (line 769)
    kwargs_78028 = {}
    # Getting the type of 'analyzeline' (line 769)
    analyzeline_78021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 8), 'analyzeline', False)
    # Calling analyzeline(args, kwargs) (line 769)
    analyzeline_call_result_78029 = invoke(stypy.reporting.localization.Localization(__file__, 769, 8), analyzeline_78021, *[m_78022, subscript_call_result_78026, line_78027], **kwargs_78028)
    
    
    # Assigning a Num to a Name (line 770):
    
    # Assigning a Num to a Name (line 770):
    int_78030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 770, 22), 'int')
    # Assigning a type to the variable 'expectbegin' (line 770)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 770, 8), 'expectbegin', int_78030)
    # SSA branch for the else part of an if statement (line 764)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    int_78031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 771, 13), 'int')
    # Getting the type of 'pat' (line 771)
    pat_78032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 9), 'pat')
    # Obtaining the member '__getitem__' of a type (line 771)
    getitem___78033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 771, 9), pat_78032, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 771)
    subscript_call_result_78034 = invoke(stypy.reporting.localization.Localization(__file__, 771, 9), getitem___78033, int_78031)
    
    str_78035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 771, 19), 'str', 'endif')
    # Applying the binary operator '==' (line 771)
    result_eq_78036 = python_operator(stypy.reporting.localization.Localization(__file__, 771, 9), '==', subscript_call_result_78034, str_78035)
    
    # Testing the type of an if condition (line 771)
    if_condition_78037 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 771, 9), result_eq_78036)
    # Assigning a type to the variable 'if_condition_78037' (line 771)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 771, 9), 'if_condition_78037', if_condition_78037)
    # SSA begins for if statement (line 771)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    pass
    # SSA branch for the else part of an if statement (line 771)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    int_78038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 13), 'int')
    # Getting the type of 'pat' (line 773)
    pat_78039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 9), 'pat')
    # Obtaining the member '__getitem__' of a type (line 773)
    getitem___78040 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 9), pat_78039, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 773)
    subscript_call_result_78041 = invoke(stypy.reporting.localization.Localization(__file__, 773, 9), getitem___78040, int_78038)
    
    str_78042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 19), 'str', 'contains')
    # Applying the binary operator '==' (line 773)
    result_eq_78043 = python_operator(stypy.reporting.localization.Localization(__file__, 773, 9), '==', subscript_call_result_78041, str_78042)
    
    # Testing the type of an if condition (line 773)
    if_condition_78044 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 773, 9), result_eq_78043)
    # Assigning a type to the variable 'if_condition_78044' (line 773)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 773, 9), 'if_condition_78044', if_condition_78044)
    # SSA begins for if statement (line 773)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'ignorecontains' (line 774)
    ignorecontains_78045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 11), 'ignorecontains')
    # Testing the type of an if condition (line 774)
    if_condition_78046 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 774, 8), ignorecontains_78045)
    # Assigning a type to the variable 'if_condition_78046' (line 774)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 774, 8), 'if_condition_78046', if_condition_78046)
    # SSA begins for if statement (line 774)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Assigning a type to the variable 'stypy_return_type' (line 775)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 775, 12), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 774)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    int_78047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 11), 'int')
    # Getting the type of 'skipblocksuntil' (line 776)
    skipblocksuntil_78048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 16), 'skipblocksuntil')
    # Applying the binary operator '<=' (line 776)
    result_le_78049 = python_operator(stypy.reporting.localization.Localization(__file__, 776, 11), '<=', int_78047, skipblocksuntil_78048)
    # Getting the type of 'groupcounter' (line 776)
    groupcounter_78050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 35), 'groupcounter')
    # Applying the binary operator '<=' (line 776)
    result_le_78051 = python_operator(stypy.reporting.localization.Localization(__file__, 776, 11), '<=', skipblocksuntil_78048, groupcounter_78050)
    # Applying the binary operator '&' (line 776)
    result_and__78052 = python_operator(stypy.reporting.localization.Localization(__file__, 776, 11), '&', result_le_78049, result_le_78051)
    
    # Testing the type of an if condition (line 776)
    if_condition_78053 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 776, 8), result_and__78052)
    # Assigning a type to the variable 'if_condition_78053' (line 776)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 776, 8), 'if_condition_78053', if_condition_78053)
    # SSA begins for if statement (line 776)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Assigning a type to the variable 'stypy_return_type' (line 777)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 777, 12), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 776)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 778):
    
    # Assigning a Name to a Name (line 778):
    # Getting the type of 'groupcounter' (line 778)
    groupcounter_78054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 26), 'groupcounter')
    # Assigning a type to the variable 'skipblocksuntil' (line 778)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 778, 8), 'skipblocksuntil', groupcounter_78054)
    # SSA branch for the else part of an if statement (line 773)
    module_type_store.open_ssa_branch('else')
    
    
    int_78055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 780, 11), 'int')
    # Getting the type of 'skipblocksuntil' (line 780)
    skipblocksuntil_78056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 16), 'skipblocksuntil')
    # Applying the binary operator '<=' (line 780)
    result_le_78057 = python_operator(stypy.reporting.localization.Localization(__file__, 780, 11), '<=', int_78055, skipblocksuntil_78056)
    # Getting the type of 'groupcounter' (line 780)
    groupcounter_78058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 35), 'groupcounter')
    # Applying the binary operator '<=' (line 780)
    result_le_78059 = python_operator(stypy.reporting.localization.Localization(__file__, 780, 11), '<=', skipblocksuntil_78056, groupcounter_78058)
    # Applying the binary operator '&' (line 780)
    result_and__78060 = python_operator(stypy.reporting.localization.Localization(__file__, 780, 11), '&', result_le_78057, result_le_78059)
    
    # Testing the type of an if condition (line 780)
    if_condition_78061 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 780, 8), result_and__78060)
    # Assigning a type to the variable 'if_condition_78061' (line 780)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 8), 'if_condition_78061', if_condition_78061)
    # SSA begins for if statement (line 780)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Assigning a type to the variable 'stypy_return_type' (line 781)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 781, 12), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 780)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to analyzeline(...): (line 782)
    # Processing the call arguments (line 782)
    # Getting the type of 'm' (line 782)
    m_78063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 20), 'm', False)
    
    # Obtaining the type of the subscript
    int_78064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 782, 27), 'int')
    # Getting the type of 'pat' (line 782)
    pat_78065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 23), 'pat', False)
    # Obtaining the member '__getitem__' of a type (line 782)
    getitem___78066 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 782, 23), pat_78065, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 782)
    subscript_call_result_78067 = invoke(stypy.reporting.localization.Localization(__file__, 782, 23), getitem___78066, int_78064)
    
    # Getting the type of 'line' (line 782)
    line_78068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 31), 'line', False)
    # Processing the call keyword arguments (line 782)
    kwargs_78069 = {}
    # Getting the type of 'analyzeline' (line 782)
    analyzeline_78062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 8), 'analyzeline', False)
    # Calling analyzeline(args, kwargs) (line 782)
    analyzeline_call_result_78070 = invoke(stypy.reporting.localization.Localization(__file__, 782, 8), analyzeline_78062, *[m_78063, subscript_call_result_78067, line_78068], **kwargs_78069)
    
    # SSA join for if statement (line 773)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 771)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 764)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 740)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 709)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'crackline(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'crackline' in the type store
    # Getting the type of 'stypy_return_type' (line 634)
    stypy_return_type_78071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_78071)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'crackline'
    return stypy_return_type_78071

# Assigning a type to the variable 'crackline' (line 634)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 0), 'crackline', crackline)

@norecursion
def markouterparen(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'markouterparen'
    module_type_store = module_type_store.open_function_context('markouterparen', 785, 0, False)
    
    # Passed parameters checking function
    markouterparen.stypy_localization = localization
    markouterparen.stypy_type_of_self = None
    markouterparen.stypy_type_store = module_type_store
    markouterparen.stypy_function_name = 'markouterparen'
    markouterparen.stypy_param_names_list = ['line']
    markouterparen.stypy_varargs_param_name = None
    markouterparen.stypy_kwargs_param_name = None
    markouterparen.stypy_call_defaults = defaults
    markouterparen.stypy_call_varargs = varargs
    markouterparen.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'markouterparen', ['line'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'markouterparen', localization, ['line'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'markouterparen(...)' code ##################

    
    # Assigning a Str to a Name (line 786):
    
    # Assigning a Str to a Name (line 786):
    str_78072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 8), 'str', '')
    # Assigning a type to the variable 'l' (line 786)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 786, 4), 'l', str_78072)
    
    # Assigning a Num to a Name (line 787):
    
    # Assigning a Num to a Name (line 787):
    int_78073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 787, 8), 'int')
    # Assigning a type to the variable 'f' (line 787)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 787, 4), 'f', int_78073)
    
    # Getting the type of 'line' (line 788)
    line_78074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 13), 'line')
    # Testing the type of a for loop iterable (line 788)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 788, 4), line_78074)
    # Getting the type of the for loop variable (line 788)
    for_loop_var_78075 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 788, 4), line_78074)
    # Assigning a type to the variable 'c' (line 788)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 788, 4), 'c', for_loop_var_78075)
    # SSA begins for a for statement (line 788)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'c' (line 789)
    c_78076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 11), 'c')
    str_78077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 789, 16), 'str', '(')
    # Applying the binary operator '==' (line 789)
    result_eq_78078 = python_operator(stypy.reporting.localization.Localization(__file__, 789, 11), '==', c_78076, str_78077)
    
    # Testing the type of an if condition (line 789)
    if_condition_78079 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 789, 8), result_eq_78078)
    # Assigning a type to the variable 'if_condition_78079' (line 789)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 789, 8), 'if_condition_78079', if_condition_78079)
    # SSA begins for if statement (line 789)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 790):
    
    # Assigning a BinOp to a Name (line 790):
    # Getting the type of 'f' (line 790)
    f_78080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 16), 'f')
    int_78081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 790, 20), 'int')
    # Applying the binary operator '+' (line 790)
    result_add_78082 = python_operator(stypy.reporting.localization.Localization(__file__, 790, 16), '+', f_78080, int_78081)
    
    # Assigning a type to the variable 'f' (line 790)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 790, 12), 'f', result_add_78082)
    
    
    # Getting the type of 'f' (line 791)
    f_78083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 791, 15), 'f')
    int_78084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 791, 20), 'int')
    # Applying the binary operator '==' (line 791)
    result_eq_78085 = python_operator(stypy.reporting.localization.Localization(__file__, 791, 15), '==', f_78083, int_78084)
    
    # Testing the type of an if condition (line 791)
    if_condition_78086 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 791, 12), result_eq_78085)
    # Assigning a type to the variable 'if_condition_78086' (line 791)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 791, 12), 'if_condition_78086', if_condition_78086)
    # SSA begins for if statement (line 791)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 792):
    
    # Assigning a BinOp to a Name (line 792):
    # Getting the type of 'l' (line 792)
    l_78087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 792, 20), 'l')
    str_78088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 792, 24), 'str', '@(@')
    # Applying the binary operator '+' (line 792)
    result_add_78089 = python_operator(stypy.reporting.localization.Localization(__file__, 792, 20), '+', l_78087, str_78088)
    
    # Assigning a type to the variable 'l' (line 792)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 792, 16), 'l', result_add_78089)
    # SSA join for if statement (line 791)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 789)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'c' (line 794)
    c_78090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 13), 'c')
    str_78091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 18), 'str', ')')
    # Applying the binary operator '==' (line 794)
    result_eq_78092 = python_operator(stypy.reporting.localization.Localization(__file__, 794, 13), '==', c_78090, str_78091)
    
    # Testing the type of an if condition (line 794)
    if_condition_78093 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 794, 13), result_eq_78092)
    # Assigning a type to the variable 'if_condition_78093' (line 794)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 794, 13), 'if_condition_78093', if_condition_78093)
    # SSA begins for if statement (line 794)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 795):
    
    # Assigning a BinOp to a Name (line 795):
    # Getting the type of 'f' (line 795)
    f_78094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 16), 'f')
    int_78095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 795, 20), 'int')
    # Applying the binary operator '-' (line 795)
    result_sub_78096 = python_operator(stypy.reporting.localization.Localization(__file__, 795, 16), '-', f_78094, int_78095)
    
    # Assigning a type to the variable 'f' (line 795)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 795, 12), 'f', result_sub_78096)
    
    
    # Getting the type of 'f' (line 796)
    f_78097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 15), 'f')
    int_78098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 796, 20), 'int')
    # Applying the binary operator '==' (line 796)
    result_eq_78099 = python_operator(stypy.reporting.localization.Localization(__file__, 796, 15), '==', f_78097, int_78098)
    
    # Testing the type of an if condition (line 796)
    if_condition_78100 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 796, 12), result_eq_78099)
    # Assigning a type to the variable 'if_condition_78100' (line 796)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 796, 12), 'if_condition_78100', if_condition_78100)
    # SSA begins for if statement (line 796)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 797):
    
    # Assigning a BinOp to a Name (line 797):
    # Getting the type of 'l' (line 797)
    l_78101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 20), 'l')
    str_78102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 797, 24), 'str', '@)@')
    # Applying the binary operator '+' (line 797)
    result_add_78103 = python_operator(stypy.reporting.localization.Localization(__file__, 797, 20), '+', l_78101, str_78102)
    
    # Assigning a type to the variable 'l' (line 797)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 797, 16), 'l', result_add_78103)
    # SSA join for if statement (line 796)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 794)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 789)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 799):
    
    # Assigning a BinOp to a Name (line 799):
    # Getting the type of 'l' (line 799)
    l_78104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 12), 'l')
    # Getting the type of 'c' (line 799)
    c_78105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 16), 'c')
    # Applying the binary operator '+' (line 799)
    result_add_78106 = python_operator(stypy.reporting.localization.Localization(__file__, 799, 12), '+', l_78104, c_78105)
    
    # Assigning a type to the variable 'l' (line 799)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 799, 8), 'l', result_add_78106)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'l' (line 800)
    l_78107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 11), 'l')
    # Assigning a type to the variable 'stypy_return_type' (line 800)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 800, 4), 'stypy_return_type', l_78107)
    
    # ################# End of 'markouterparen(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'markouterparen' in the type store
    # Getting the type of 'stypy_return_type' (line 785)
    stypy_return_type_78108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_78108)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'markouterparen'
    return stypy_return_type_78108

# Assigning a type to the variable 'markouterparen' (line 785)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 785, 0), 'markouterparen', markouterparen)

@norecursion
def markoutercomma(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    str_78109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 803, 31), 'str', ',')
    defaults = [str_78109]
    # Create a new context for function 'markoutercomma'
    module_type_store = module_type_store.open_function_context('markoutercomma', 803, 0, False)
    
    # Passed parameters checking function
    markoutercomma.stypy_localization = localization
    markoutercomma.stypy_type_of_self = None
    markoutercomma.stypy_type_store = module_type_store
    markoutercomma.stypy_function_name = 'markoutercomma'
    markoutercomma.stypy_param_names_list = ['line', 'comma']
    markoutercomma.stypy_varargs_param_name = None
    markoutercomma.stypy_kwargs_param_name = None
    markoutercomma.stypy_call_defaults = defaults
    markoutercomma.stypy_call_varargs = varargs
    markoutercomma.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'markoutercomma', ['line', 'comma'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'markoutercomma', localization, ['line', 'comma'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'markoutercomma(...)' code ##################

    
    # Assigning a Str to a Name (line 804):
    
    # Assigning a Str to a Name (line 804):
    str_78110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 804, 8), 'str', '')
    # Assigning a type to the variable 'l' (line 804)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 804, 4), 'l', str_78110)
    
    # Assigning a Num to a Name (line 805):
    
    # Assigning a Num to a Name (line 805):
    int_78111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 805, 8), 'int')
    # Assigning a type to the variable 'f' (line 805)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 805, 4), 'f', int_78111)
    
    # Assigning a Str to a Name (line 806):
    
    # Assigning a Str to a Name (line 806):
    str_78112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 9), 'str', '')
    # Assigning a type to the variable 'cc' (line 806)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 806, 4), 'cc', str_78112)
    
    # Getting the type of 'line' (line 807)
    line_78113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 807, 13), 'line')
    # Testing the type of a for loop iterable (line 807)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 807, 4), line_78113)
    # Getting the type of the for loop variable (line 807)
    for_loop_var_78114 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 807, 4), line_78113)
    # Assigning a type to the variable 'c' (line 807)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 807, 4), 'c', for_loop_var_78114)
    # SSA begins for a for statement (line 807)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    # Evaluating a boolean operation
    
    # Getting the type of 'cc' (line 808)
    cc_78115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 16), 'cc')
    # Applying the 'not' unary operator (line 808)
    result_not__78116 = python_operator(stypy.reporting.localization.Localization(__file__, 808, 12), 'not', cc_78115)
    
    
    # Getting the type of 'cc' (line 808)
    cc_78117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 22), 'cc')
    str_78118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 808, 28), 'str', ')')
    # Applying the binary operator '==' (line 808)
    result_eq_78119 = python_operator(stypy.reporting.localization.Localization(__file__, 808, 22), '==', cc_78117, str_78118)
    
    # Applying the binary operator 'or' (line 808)
    result_or_keyword_78120 = python_operator(stypy.reporting.localization.Localization(__file__, 808, 12), 'or', result_not__78116, result_eq_78119)
    
    
    # Getting the type of 'c' (line 808)
    c_78121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 37), 'c')
    str_78122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 808, 42), 'str', '(')
    # Applying the binary operator '==' (line 808)
    result_eq_78123 = python_operator(stypy.reporting.localization.Localization(__file__, 808, 37), '==', c_78121, str_78122)
    
    # Applying the binary operator 'and' (line 808)
    result_and_keyword_78124 = python_operator(stypy.reporting.localization.Localization(__file__, 808, 11), 'and', result_or_keyword_78120, result_eq_78123)
    
    # Testing the type of an if condition (line 808)
    if_condition_78125 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 808, 8), result_and_keyword_78124)
    # Assigning a type to the variable 'if_condition_78125' (line 808)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 808, 8), 'if_condition_78125', if_condition_78125)
    # SSA begins for if statement (line 808)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 809):
    
    # Assigning a BinOp to a Name (line 809):
    # Getting the type of 'f' (line 809)
    f_78126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 16), 'f')
    int_78127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 809, 20), 'int')
    # Applying the binary operator '+' (line 809)
    result_add_78128 = python_operator(stypy.reporting.localization.Localization(__file__, 809, 16), '+', f_78126, int_78127)
    
    # Assigning a type to the variable 'f' (line 809)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 809, 12), 'f', result_add_78128)
    
    # Assigning a Str to a Name (line 810):
    
    # Assigning a Str to a Name (line 810):
    str_78129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 810, 17), 'str', ')')
    # Assigning a type to the variable 'cc' (line 810)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 810, 12), 'cc', str_78129)
    # SSA branch for the else part of an if statement (line 808)
    module_type_store.open_ssa_branch('else')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'cc' (line 811)
    cc_78130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 17), 'cc')
    # Applying the 'not' unary operator (line 811)
    result_not__78131 = python_operator(stypy.reporting.localization.Localization(__file__, 811, 13), 'not', cc_78130)
    
    
    # Getting the type of 'c' (line 811)
    c_78132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 24), 'c')
    str_78133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 811, 29), 'str', "'")
    # Applying the binary operator '==' (line 811)
    result_eq_78134 = python_operator(stypy.reporting.localization.Localization(__file__, 811, 24), '==', c_78132, str_78133)
    
    # Applying the binary operator 'and' (line 811)
    result_and_keyword_78135 = python_operator(stypy.reporting.localization.Localization(__file__, 811, 13), 'and', result_not__78131, result_eq_78134)
    
    # Evaluating a boolean operation
    
    # Getting the type of 'l' (line 811)
    l_78136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 43), 'l')
    # Applying the 'not' unary operator (line 811)
    result_not__78137 = python_operator(stypy.reporting.localization.Localization(__file__, 811, 39), 'not', l_78136)
    
    
    
    # Obtaining the type of the subscript
    int_78138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 811, 50), 'int')
    # Getting the type of 'l' (line 811)
    l_78139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 48), 'l')
    # Obtaining the member '__getitem__' of a type (line 811)
    getitem___78140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 811, 48), l_78139, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 811)
    subscript_call_result_78141 = invoke(stypy.reporting.localization.Localization(__file__, 811, 48), getitem___78140, int_78138)
    
    str_78142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 811, 57), 'str', '\\')
    # Applying the binary operator '!=' (line 811)
    result_ne_78143 = python_operator(stypy.reporting.localization.Localization(__file__, 811, 48), '!=', subscript_call_result_78141, str_78142)
    
    # Applying the binary operator 'or' (line 811)
    result_or_keyword_78144 = python_operator(stypy.reporting.localization.Localization(__file__, 811, 39), 'or', result_not__78137, result_ne_78143)
    
    # Applying the binary operator 'and' (line 811)
    result_and_keyword_78145 = python_operator(stypy.reporting.localization.Localization(__file__, 811, 13), 'and', result_and_keyword_78135, result_or_keyword_78144)
    
    # Testing the type of an if condition (line 811)
    if_condition_78146 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 811, 13), result_and_keyword_78145)
    # Assigning a type to the variable 'if_condition_78146' (line 811)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 811, 13), 'if_condition_78146', if_condition_78146)
    # SSA begins for if statement (line 811)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 812):
    
    # Assigning a BinOp to a Name (line 812):
    # Getting the type of 'f' (line 812)
    f_78147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 16), 'f')
    int_78148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 20), 'int')
    # Applying the binary operator '+' (line 812)
    result_add_78149 = python_operator(stypy.reporting.localization.Localization(__file__, 812, 16), '+', f_78147, int_78148)
    
    # Assigning a type to the variable 'f' (line 812)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 812, 12), 'f', result_add_78149)
    
    # Assigning a Str to a Name (line 813):
    
    # Assigning a Str to a Name (line 813):
    str_78150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 17), 'str', "'")
    # Assigning a type to the variable 'cc' (line 813)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 813, 12), 'cc', str_78150)
    # SSA branch for the else part of an if statement (line 811)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'c' (line 814)
    c_78151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 814, 13), 'c')
    # Getting the type of 'cc' (line 814)
    cc_78152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 814, 18), 'cc')
    # Applying the binary operator '==' (line 814)
    result_eq_78153 = python_operator(stypy.reporting.localization.Localization(__file__, 814, 13), '==', c_78151, cc_78152)
    
    # Testing the type of an if condition (line 814)
    if_condition_78154 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 814, 13), result_eq_78153)
    # Assigning a type to the variable 'if_condition_78154' (line 814)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 814, 13), 'if_condition_78154', if_condition_78154)
    # SSA begins for if statement (line 814)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 815):
    
    # Assigning a BinOp to a Name (line 815):
    # Getting the type of 'f' (line 815)
    f_78155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 16), 'f')
    int_78156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 20), 'int')
    # Applying the binary operator '-' (line 815)
    result_sub_78157 = python_operator(stypy.reporting.localization.Localization(__file__, 815, 16), '-', f_78155, int_78156)
    
    # Assigning a type to the variable 'f' (line 815)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 815, 12), 'f', result_sub_78157)
    
    
    # Getting the type of 'f' (line 816)
    f_78158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 15), 'f')
    int_78159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 20), 'int')
    # Applying the binary operator '==' (line 816)
    result_eq_78160 = python_operator(stypy.reporting.localization.Localization(__file__, 816, 15), '==', f_78158, int_78159)
    
    # Testing the type of an if condition (line 816)
    if_condition_78161 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 816, 12), result_eq_78160)
    # Assigning a type to the variable 'if_condition_78161' (line 816)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 816, 12), 'if_condition_78161', if_condition_78161)
    # SSA begins for if statement (line 816)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 817):
    
    # Assigning a Str to a Name (line 817):
    str_78162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 21), 'str', '')
    # Assigning a type to the variable 'cc' (line 817)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 817, 16), 'cc', str_78162)
    # SSA join for if statement (line 816)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 814)
    module_type_store.open_ssa_branch('else')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'c' (line 818)
    c_78163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 13), 'c')
    # Getting the type of 'comma' (line 818)
    comma_78164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 18), 'comma')
    # Applying the binary operator '==' (line 818)
    result_eq_78165 = python_operator(stypy.reporting.localization.Localization(__file__, 818, 13), '==', c_78163, comma_78164)
    
    
    # Getting the type of 'f' (line 818)
    f_78166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 28), 'f')
    int_78167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 818, 33), 'int')
    # Applying the binary operator '==' (line 818)
    result_eq_78168 = python_operator(stypy.reporting.localization.Localization(__file__, 818, 28), '==', f_78166, int_78167)
    
    # Applying the binary operator 'and' (line 818)
    result_and_keyword_78169 = python_operator(stypy.reporting.localization.Localization(__file__, 818, 13), 'and', result_eq_78165, result_eq_78168)
    
    # Testing the type of an if condition (line 818)
    if_condition_78170 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 818, 13), result_and_keyword_78169)
    # Assigning a type to the variable 'if_condition_78170' (line 818)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 818, 13), 'if_condition_78170', if_condition_78170)
    # SSA begins for if statement (line 818)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 819):
    
    # Assigning a BinOp to a Name (line 819):
    # Getting the type of 'l' (line 819)
    l_78171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 16), 'l')
    str_78172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 819, 20), 'str', '@')
    # Applying the binary operator '+' (line 819)
    result_add_78173 = python_operator(stypy.reporting.localization.Localization(__file__, 819, 16), '+', l_78171, str_78172)
    
    # Getting the type of 'comma' (line 819)
    comma_78174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 26), 'comma')
    # Applying the binary operator '+' (line 819)
    result_add_78175 = python_operator(stypy.reporting.localization.Localization(__file__, 819, 24), '+', result_add_78173, comma_78174)
    
    str_78176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 819, 34), 'str', '@')
    # Applying the binary operator '+' (line 819)
    result_add_78177 = python_operator(stypy.reporting.localization.Localization(__file__, 819, 32), '+', result_add_78175, str_78176)
    
    # Assigning a type to the variable 'l' (line 819)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 819, 12), 'l', result_add_78177)
    # SSA join for if statement (line 818)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 814)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 811)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 808)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 821):
    
    # Assigning a BinOp to a Name (line 821):
    # Getting the type of 'l' (line 821)
    l_78178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 12), 'l')
    # Getting the type of 'c' (line 821)
    c_78179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 16), 'c')
    # Applying the binary operator '+' (line 821)
    result_add_78180 = python_operator(stypy.reporting.localization.Localization(__file__, 821, 12), '+', l_78178, c_78179)
    
    # Assigning a type to the variable 'l' (line 821)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 821, 8), 'l', result_add_78180)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Evaluating assert statement condition
    
    # Getting the type of 'f' (line 822)
    f_78181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 15), 'f')
    # Applying the 'not' unary operator (line 822)
    result_not__78182 = python_operator(stypy.reporting.localization.Localization(__file__, 822, 11), 'not', f_78181)
    
    # Getting the type of 'l' (line 823)
    l_78183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 11), 'l')
    # Assigning a type to the variable 'stypy_return_type' (line 823)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 823, 4), 'stypy_return_type', l_78183)
    
    # ################# End of 'markoutercomma(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'markoutercomma' in the type store
    # Getting the type of 'stypy_return_type' (line 803)
    stypy_return_type_78184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_78184)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'markoutercomma'
    return stypy_return_type_78184

# Assigning a type to the variable 'markoutercomma' (line 803)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 803, 0), 'markoutercomma', markoutercomma)

@norecursion
def unmarkouterparen(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'unmarkouterparen'
    module_type_store = module_type_store.open_function_context('unmarkouterparen', 826, 0, False)
    
    # Passed parameters checking function
    unmarkouterparen.stypy_localization = localization
    unmarkouterparen.stypy_type_of_self = None
    unmarkouterparen.stypy_type_store = module_type_store
    unmarkouterparen.stypy_function_name = 'unmarkouterparen'
    unmarkouterparen.stypy_param_names_list = ['line']
    unmarkouterparen.stypy_varargs_param_name = None
    unmarkouterparen.stypy_kwargs_param_name = None
    unmarkouterparen.stypy_call_defaults = defaults
    unmarkouterparen.stypy_call_varargs = varargs
    unmarkouterparen.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'unmarkouterparen', ['line'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'unmarkouterparen', localization, ['line'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'unmarkouterparen(...)' code ##################

    
    # Assigning a Call to a Name (line 827):
    
    # Assigning a Call to a Name (line 827):
    
    # Call to replace(...): (line 827)
    # Processing the call arguments (line 827)
    str_78192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 41), 'str', '@)@')
    str_78193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 48), 'str', ')')
    # Processing the call keyword arguments (line 827)
    kwargs_78194 = {}
    
    # Call to replace(...): (line 827)
    # Processing the call arguments (line 827)
    str_78187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 21), 'str', '@(@')
    str_78188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 28), 'str', '(')
    # Processing the call keyword arguments (line 827)
    kwargs_78189 = {}
    # Getting the type of 'line' (line 827)
    line_78185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 8), 'line', False)
    # Obtaining the member 'replace' of a type (line 827)
    replace_78186 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 827, 8), line_78185, 'replace')
    # Calling replace(args, kwargs) (line 827)
    replace_call_result_78190 = invoke(stypy.reporting.localization.Localization(__file__, 827, 8), replace_78186, *[str_78187, str_78188], **kwargs_78189)
    
    # Obtaining the member 'replace' of a type (line 827)
    replace_78191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 827, 8), replace_call_result_78190, 'replace')
    # Calling replace(args, kwargs) (line 827)
    replace_call_result_78195 = invoke(stypy.reporting.localization.Localization(__file__, 827, 8), replace_78191, *[str_78192, str_78193], **kwargs_78194)
    
    # Assigning a type to the variable 'r' (line 827)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 827, 4), 'r', replace_call_result_78195)
    # Getting the type of 'r' (line 828)
    r_78196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 11), 'r')
    # Assigning a type to the variable 'stypy_return_type' (line 828)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 828, 4), 'stypy_return_type', r_78196)
    
    # ################# End of 'unmarkouterparen(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'unmarkouterparen' in the type store
    # Getting the type of 'stypy_return_type' (line 826)
    stypy_return_type_78197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_78197)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'unmarkouterparen'
    return stypy_return_type_78197

# Assigning a type to the variable 'unmarkouterparen' (line 826)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 826, 0), 'unmarkouterparen', unmarkouterparen)

@norecursion
def appenddecl(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    int_78198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 34), 'int')
    defaults = [int_78198]
    # Create a new context for function 'appenddecl'
    module_type_store = module_type_store.open_function_context('appenddecl', 831, 0, False)
    
    # Passed parameters checking function
    appenddecl.stypy_localization = localization
    appenddecl.stypy_type_of_self = None
    appenddecl.stypy_type_store = module_type_store
    appenddecl.stypy_function_name = 'appenddecl'
    appenddecl.stypy_param_names_list = ['decl', 'decl2', 'force']
    appenddecl.stypy_varargs_param_name = None
    appenddecl.stypy_kwargs_param_name = None
    appenddecl.stypy_call_defaults = defaults
    appenddecl.stypy_call_varargs = varargs
    appenddecl.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'appenddecl', ['decl', 'decl2', 'force'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'appenddecl', localization, ['decl', 'decl2', 'force'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'appenddecl(...)' code ##################

    
    
    # Getting the type of 'decl' (line 832)
    decl_78199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 11), 'decl')
    # Applying the 'not' unary operator (line 832)
    result_not__78200 = python_operator(stypy.reporting.localization.Localization(__file__, 832, 7), 'not', decl_78199)
    
    # Testing the type of an if condition (line 832)
    if_condition_78201 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 832, 4), result_not__78200)
    # Assigning a type to the variable 'if_condition_78201' (line 832)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 832, 4), 'if_condition_78201', if_condition_78201)
    # SSA begins for if statement (line 832)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Dict to a Name (line 833):
    
    # Assigning a Dict to a Name (line 833):
    
    # Obtaining an instance of the builtin type 'dict' (line 833)
    dict_78202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 15), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 833)
    
    # Assigning a type to the variable 'decl' (line 833)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 8), 'decl', dict_78202)
    # SSA join for if statement (line 832)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'decl2' (line 834)
    decl2_78203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 11), 'decl2')
    # Applying the 'not' unary operator (line 834)
    result_not__78204 = python_operator(stypy.reporting.localization.Localization(__file__, 834, 7), 'not', decl2_78203)
    
    # Testing the type of an if condition (line 834)
    if_condition_78205 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 834, 4), result_not__78204)
    # Assigning a type to the variable 'if_condition_78205' (line 834)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 834, 4), 'if_condition_78205', if_condition_78205)
    # SSA begins for if statement (line 834)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'decl' (line 835)
    decl_78206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 15), 'decl')
    # Assigning a type to the variable 'stypy_return_type' (line 835)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 8), 'stypy_return_type', decl_78206)
    # SSA join for if statement (line 834)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'decl' (line 836)
    decl_78207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 7), 'decl')
    # Getting the type of 'decl2' (line 836)
    decl2_78208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 15), 'decl2')
    # Applying the binary operator 'is' (line 836)
    result_is__78209 = python_operator(stypy.reporting.localization.Localization(__file__, 836, 7), 'is', decl_78207, decl2_78208)
    
    # Testing the type of an if condition (line 836)
    if_condition_78210 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 836, 4), result_is__78209)
    # Assigning a type to the variable 'if_condition_78210' (line 836)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 836, 4), 'if_condition_78210', if_condition_78210)
    # SSA begins for if statement (line 836)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'decl' (line 837)
    decl_78211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 15), 'decl')
    # Assigning a type to the variable 'stypy_return_type' (line 837)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 837, 8), 'stypy_return_type', decl_78211)
    # SSA join for if statement (line 836)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to list(...): (line 838)
    # Processing the call arguments (line 838)
    
    # Call to keys(...): (line 838)
    # Processing the call keyword arguments (line 838)
    kwargs_78215 = {}
    # Getting the type of 'decl2' (line 838)
    decl2_78213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 18), 'decl2', False)
    # Obtaining the member 'keys' of a type (line 838)
    keys_78214 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 838, 18), decl2_78213, 'keys')
    # Calling keys(args, kwargs) (line 838)
    keys_call_result_78216 = invoke(stypy.reporting.localization.Localization(__file__, 838, 18), keys_78214, *[], **kwargs_78215)
    
    # Processing the call keyword arguments (line 838)
    kwargs_78217 = {}
    # Getting the type of 'list' (line 838)
    list_78212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 13), 'list', False)
    # Calling list(args, kwargs) (line 838)
    list_call_result_78218 = invoke(stypy.reporting.localization.Localization(__file__, 838, 13), list_78212, *[keys_call_result_78216], **kwargs_78217)
    
    # Testing the type of a for loop iterable (line 838)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 838, 4), list_call_result_78218)
    # Getting the type of the for loop variable (line 838)
    for_loop_var_78219 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 838, 4), list_call_result_78218)
    # Assigning a type to the variable 'k' (line 838)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 838, 4), 'k', for_loop_var_78219)
    # SSA begins for a for statement (line 838)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'k' (line 839)
    k_78220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 11), 'k')
    str_78221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 16), 'str', 'typespec')
    # Applying the binary operator '==' (line 839)
    result_eq_78222 = python_operator(stypy.reporting.localization.Localization(__file__, 839, 11), '==', k_78220, str_78221)
    
    # Testing the type of an if condition (line 839)
    if_condition_78223 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 839, 8), result_eq_78222)
    # Assigning a type to the variable 'if_condition_78223' (line 839)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 839, 8), 'if_condition_78223', if_condition_78223)
    # SSA begins for if statement (line 839)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    # Getting the type of 'force' (line 840)
    force_78224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 15), 'force')
    
    # Getting the type of 'k' (line 840)
    k_78225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 24), 'k')
    # Getting the type of 'decl' (line 840)
    decl_78226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 33), 'decl')
    # Applying the binary operator 'notin' (line 840)
    result_contains_78227 = python_operator(stypy.reporting.localization.Localization(__file__, 840, 24), 'notin', k_78225, decl_78226)
    
    # Applying the binary operator 'or' (line 840)
    result_or_keyword_78228 = python_operator(stypy.reporting.localization.Localization(__file__, 840, 15), 'or', force_78224, result_contains_78227)
    
    # Testing the type of an if condition (line 840)
    if_condition_78229 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 840, 12), result_or_keyword_78228)
    # Assigning a type to the variable 'if_condition_78229' (line 840)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 840, 12), 'if_condition_78229', if_condition_78229)
    # SSA begins for if statement (line 840)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 841):
    
    # Assigning a Subscript to a Subscript (line 841):
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 841)
    k_78230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 32), 'k')
    # Getting the type of 'decl2' (line 841)
    decl2_78231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 26), 'decl2')
    # Obtaining the member '__getitem__' of a type (line 841)
    getitem___78232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 26), decl2_78231, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 841)
    subscript_call_result_78233 = invoke(stypy.reporting.localization.Localization(__file__, 841, 26), getitem___78232, k_78230)
    
    # Getting the type of 'decl' (line 841)
    decl_78234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 16), 'decl')
    # Getting the type of 'k' (line 841)
    k_78235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 21), 'k')
    # Storing an element on a container (line 841)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 16), decl_78234, (k_78235, subscript_call_result_78233))
    # SSA join for if statement (line 840)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 839)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'k' (line 842)
    k_78236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 13), 'k')
    str_78237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 18), 'str', 'attrspec')
    # Applying the binary operator '==' (line 842)
    result_eq_78238 = python_operator(stypy.reporting.localization.Localization(__file__, 842, 13), '==', k_78236, str_78237)
    
    # Testing the type of an if condition (line 842)
    if_condition_78239 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 842, 13), result_eq_78238)
    # Assigning a type to the variable 'if_condition_78239' (line 842)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 842, 13), 'if_condition_78239', if_condition_78239)
    # SSA begins for if statement (line 842)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 843)
    k_78240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 27), 'k')
    # Getting the type of 'decl2' (line 843)
    decl2_78241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 21), 'decl2')
    # Obtaining the member '__getitem__' of a type (line 843)
    getitem___78242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 21), decl2_78241, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 843)
    subscript_call_result_78243 = invoke(stypy.reporting.localization.Localization(__file__, 843, 21), getitem___78242, k_78240)
    
    # Testing the type of a for loop iterable (line 843)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 843, 12), subscript_call_result_78243)
    # Getting the type of the for loop variable (line 843)
    for_loop_var_78244 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 843, 12), subscript_call_result_78243)
    # Assigning a type to the variable 'l' (line 843)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 843, 12), 'l', for_loop_var_78244)
    # SSA begins for a for statement (line 843)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 844):
    
    # Assigning a Call to a Name (line 844):
    
    # Call to setattrspec(...): (line 844)
    # Processing the call arguments (line 844)
    # Getting the type of 'decl' (line 844)
    decl_78246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 35), 'decl', False)
    # Getting the type of 'l' (line 844)
    l_78247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 41), 'l', False)
    # Getting the type of 'force' (line 844)
    force_78248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 44), 'force', False)
    # Processing the call keyword arguments (line 844)
    kwargs_78249 = {}
    # Getting the type of 'setattrspec' (line 844)
    setattrspec_78245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 23), 'setattrspec', False)
    # Calling setattrspec(args, kwargs) (line 844)
    setattrspec_call_result_78250 = invoke(stypy.reporting.localization.Localization(__file__, 844, 23), setattrspec_78245, *[decl_78246, l_78247, force_78248], **kwargs_78249)
    
    # Assigning a type to the variable 'decl' (line 844)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 844, 16), 'decl', setattrspec_call_result_78250)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 842)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'k' (line 845)
    k_78251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 13), 'k')
    str_78252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 845, 18), 'str', 'kindselector')
    # Applying the binary operator '==' (line 845)
    result_eq_78253 = python_operator(stypy.reporting.localization.Localization(__file__, 845, 13), '==', k_78251, str_78252)
    
    # Testing the type of an if condition (line 845)
    if_condition_78254 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 845, 13), result_eq_78253)
    # Assigning a type to the variable 'if_condition_78254' (line 845)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 845, 13), 'if_condition_78254', if_condition_78254)
    # SSA begins for if statement (line 845)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 846):
    
    # Assigning a Call to a Name (line 846):
    
    # Call to setkindselector(...): (line 846)
    # Processing the call arguments (line 846)
    # Getting the type of 'decl' (line 846)
    decl_78256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 35), 'decl', False)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 846)
    k_78257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 47), 'k', False)
    # Getting the type of 'decl2' (line 846)
    decl2_78258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 41), 'decl2', False)
    # Obtaining the member '__getitem__' of a type (line 846)
    getitem___78259 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 846, 41), decl2_78258, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 846)
    subscript_call_result_78260 = invoke(stypy.reporting.localization.Localization(__file__, 846, 41), getitem___78259, k_78257)
    
    # Getting the type of 'force' (line 846)
    force_78261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 51), 'force', False)
    # Processing the call keyword arguments (line 846)
    kwargs_78262 = {}
    # Getting the type of 'setkindselector' (line 846)
    setkindselector_78255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 19), 'setkindselector', False)
    # Calling setkindselector(args, kwargs) (line 846)
    setkindselector_call_result_78263 = invoke(stypy.reporting.localization.Localization(__file__, 846, 19), setkindselector_78255, *[decl_78256, subscript_call_result_78260, force_78261], **kwargs_78262)
    
    # Assigning a type to the variable 'decl' (line 846)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 846, 12), 'decl', setkindselector_call_result_78263)
    # SSA branch for the else part of an if statement (line 845)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'k' (line 847)
    k_78264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 13), 'k')
    str_78265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 847, 18), 'str', 'charselector')
    # Applying the binary operator '==' (line 847)
    result_eq_78266 = python_operator(stypy.reporting.localization.Localization(__file__, 847, 13), '==', k_78264, str_78265)
    
    # Testing the type of an if condition (line 847)
    if_condition_78267 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 847, 13), result_eq_78266)
    # Assigning a type to the variable 'if_condition_78267' (line 847)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 847, 13), 'if_condition_78267', if_condition_78267)
    # SSA begins for if statement (line 847)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 848):
    
    # Assigning a Call to a Name (line 848):
    
    # Call to setcharselector(...): (line 848)
    # Processing the call arguments (line 848)
    # Getting the type of 'decl' (line 848)
    decl_78269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 35), 'decl', False)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 848)
    k_78270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 47), 'k', False)
    # Getting the type of 'decl2' (line 848)
    decl2_78271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 41), 'decl2', False)
    # Obtaining the member '__getitem__' of a type (line 848)
    getitem___78272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 848, 41), decl2_78271, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 848)
    subscript_call_result_78273 = invoke(stypy.reporting.localization.Localization(__file__, 848, 41), getitem___78272, k_78270)
    
    # Getting the type of 'force' (line 848)
    force_78274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 51), 'force', False)
    # Processing the call keyword arguments (line 848)
    kwargs_78275 = {}
    # Getting the type of 'setcharselector' (line 848)
    setcharselector_78268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 19), 'setcharselector', False)
    # Calling setcharselector(args, kwargs) (line 848)
    setcharselector_call_result_78276 = invoke(stypy.reporting.localization.Localization(__file__, 848, 19), setcharselector_78268, *[decl_78269, subscript_call_result_78273, force_78274], **kwargs_78275)
    
    # Assigning a type to the variable 'decl' (line 848)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'decl', setcharselector_call_result_78276)
    # SSA branch for the else part of an if statement (line 847)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'k' (line 849)
    k_78277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 13), 'k')
    
    # Obtaining an instance of the builtin type 'list' (line 849)
    list_78278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 849)
    # Adding element type (line 849)
    str_78279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 19), 'str', '=')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 849, 18), list_78278, str_78279)
    # Adding element type (line 849)
    str_78280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 24), 'str', 'typename')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 849, 18), list_78278, str_78280)
    
    # Applying the binary operator 'in' (line 849)
    result_contains_78281 = python_operator(stypy.reporting.localization.Localization(__file__, 849, 13), 'in', k_78277, list_78278)
    
    # Testing the type of an if condition (line 849)
    if_condition_78282 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 849, 13), result_contains_78281)
    # Assigning a type to the variable 'if_condition_78282' (line 849)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 13), 'if_condition_78282', if_condition_78282)
    # SSA begins for if statement (line 849)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    # Getting the type of 'force' (line 850)
    force_78283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 15), 'force')
    
    # Getting the type of 'k' (line 850)
    k_78284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 24), 'k')
    # Getting the type of 'decl' (line 850)
    decl_78285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 33), 'decl')
    # Applying the binary operator 'notin' (line 850)
    result_contains_78286 = python_operator(stypy.reporting.localization.Localization(__file__, 850, 24), 'notin', k_78284, decl_78285)
    
    # Applying the binary operator 'or' (line 850)
    result_or_keyword_78287 = python_operator(stypy.reporting.localization.Localization(__file__, 850, 15), 'or', force_78283, result_contains_78286)
    
    # Testing the type of an if condition (line 850)
    if_condition_78288 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 850, 12), result_or_keyword_78287)
    # Assigning a type to the variable 'if_condition_78288' (line 850)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 850, 12), 'if_condition_78288', if_condition_78288)
    # SSA begins for if statement (line 850)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 851):
    
    # Assigning a Subscript to a Subscript (line 851):
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 851)
    k_78289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 32), 'k')
    # Getting the type of 'decl2' (line 851)
    decl2_78290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 26), 'decl2')
    # Obtaining the member '__getitem__' of a type (line 851)
    getitem___78291 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 851, 26), decl2_78290, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 851)
    subscript_call_result_78292 = invoke(stypy.reporting.localization.Localization(__file__, 851, 26), getitem___78291, k_78289)
    
    # Getting the type of 'decl' (line 851)
    decl_78293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 16), 'decl')
    # Getting the type of 'k' (line 851)
    k_78294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 21), 'k')
    # Storing an element on a container (line 851)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 851, 16), decl_78293, (k_78294, subscript_call_result_78292))
    # SSA join for if statement (line 850)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 849)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'k' (line 852)
    k_78295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 13), 'k')
    str_78296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 18), 'str', 'note')
    # Applying the binary operator '==' (line 852)
    result_eq_78297 = python_operator(stypy.reporting.localization.Localization(__file__, 852, 13), '==', k_78295, str_78296)
    
    # Testing the type of an if condition (line 852)
    if_condition_78298 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 852, 13), result_eq_78297)
    # Assigning a type to the variable 'if_condition_78298' (line 852)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 852, 13), 'if_condition_78298', if_condition_78298)
    # SSA begins for if statement (line 852)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    pass
    # SSA branch for the else part of an if statement (line 852)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'k' (line 854)
    k_78299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 13), 'k')
    
    # Obtaining an instance of the builtin type 'list' (line 854)
    list_78300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 854)
    # Adding element type (line 854)
    str_78301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 19), 'str', 'intent')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 854, 18), list_78300, str_78301)
    # Adding element type (line 854)
    str_78302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 29), 'str', 'check')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 854, 18), list_78300, str_78302)
    # Adding element type (line 854)
    str_78303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 38), 'str', 'dimension')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 854, 18), list_78300, str_78303)
    # Adding element type (line 854)
    str_78304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 51), 'str', 'optional')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 854, 18), list_78300, str_78304)
    # Adding element type (line 854)
    str_78305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 63), 'str', 'required')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 854, 18), list_78300, str_78305)
    
    # Applying the binary operator 'in' (line 854)
    result_contains_78306 = python_operator(stypy.reporting.localization.Localization(__file__, 854, 13), 'in', k_78299, list_78300)
    
    # Testing the type of an if condition (line 854)
    if_condition_78307 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 854, 13), result_contains_78306)
    # Assigning a type to the variable 'if_condition_78307' (line 854)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 854, 13), 'if_condition_78307', if_condition_78307)
    # SSA begins for if statement (line 854)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to errmess(...): (line 855)
    # Processing the call arguments (line 855)
    str_78309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 855, 20), 'str', 'appenddecl: "%s" not implemented.\n')
    # Getting the type of 'k' (line 855)
    k_78310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 60), 'k', False)
    # Applying the binary operator '%' (line 855)
    result_mod_78311 = python_operator(stypy.reporting.localization.Localization(__file__, 855, 20), '%', str_78309, k_78310)
    
    # Processing the call keyword arguments (line 855)
    kwargs_78312 = {}
    # Getting the type of 'errmess' (line 855)
    errmess_78308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 12), 'errmess', False)
    # Calling errmess(args, kwargs) (line 855)
    errmess_call_result_78313 = invoke(stypy.reporting.localization.Localization(__file__, 855, 12), errmess_78308, *[result_mod_78311], **kwargs_78312)
    
    # SSA branch for the else part of an if statement (line 854)
    module_type_store.open_ssa_branch('else')
    
    # Call to Exception(...): (line 857)
    # Processing the call arguments (line 857)
    str_78315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 28), 'str', 'appenddecl: Unknown variable definition key:')
    
    # Call to str(...): (line 858)
    # Processing the call arguments (line 858)
    # Getting the type of 'k' (line 858)
    k_78317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 32), 'k', False)
    # Processing the call keyword arguments (line 858)
    kwargs_78318 = {}
    # Getting the type of 'str' (line 858)
    str_78316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 28), 'str', False)
    # Calling str(args, kwargs) (line 858)
    str_call_result_78319 = invoke(stypy.reporting.localization.Localization(__file__, 858, 28), str_78316, *[k_78317], **kwargs_78318)
    
    # Applying the binary operator '+' (line 857)
    result_add_78320 = python_operator(stypy.reporting.localization.Localization(__file__, 857, 28), '+', str_78315, str_call_result_78319)
    
    # Processing the call keyword arguments (line 857)
    kwargs_78321 = {}
    # Getting the type of 'Exception' (line 857)
    Exception_78314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 18), 'Exception', False)
    # Calling Exception(args, kwargs) (line 857)
    Exception_call_result_78322 = invoke(stypy.reporting.localization.Localization(__file__, 857, 18), Exception_78314, *[result_add_78320], **kwargs_78321)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 857, 12), Exception_call_result_78322, 'raise parameter', BaseException)
    # SSA join for if statement (line 854)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 852)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 849)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 847)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 845)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 842)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 839)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'decl' (line 859)
    decl_78323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 11), 'decl')
    # Assigning a type to the variable 'stypy_return_type' (line 859)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 859, 4), 'stypy_return_type', decl_78323)
    
    # ################# End of 'appenddecl(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'appenddecl' in the type store
    # Getting the type of 'stypy_return_type' (line 831)
    stypy_return_type_78324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_78324)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'appenddecl'
    return stypy_return_type_78324

# Assigning a type to the variable 'appenddecl' (line 831)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 831, 0), 'appenddecl', appenddecl)

# Assigning a Call to a Name (line 861):

# Assigning a Call to a Name (line 861):

# Call to compile(...): (line 861)
# Processing the call arguments (line 861)
str_78327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 862, 4), 'str', '\\s*(?P<this>(@\\(@.*?@\\)@|[*][\\d*]+|[*]\\s*@\\(@.*?@\\)@|))(?P<after>.*)\\Z')
# Getting the type of 're' (line 862)
re_78328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 79), 're', False)
# Obtaining the member 'I' of a type (line 862)
I_78329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 862, 79), re_78328, 'I')
# Processing the call keyword arguments (line 861)
kwargs_78330 = {}
# Getting the type of 're' (line 861)
re_78325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 16), 're', False)
# Obtaining the member 'compile' of a type (line 861)
compile_78326 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 861, 16), re_78325, 'compile')
# Calling compile(args, kwargs) (line 861)
compile_call_result_78331 = invoke(stypy.reporting.localization.Localization(__file__, 861, 16), compile_78326, *[str_78327, I_78329], **kwargs_78330)

# Assigning a type to the variable 'selectpattern' (line 861)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 861, 0), 'selectpattern', compile_call_result_78331)

# Assigning a Call to a Name (line 863):

# Assigning a Call to a Name (line 863):

# Call to compile(...): (line 863)
# Processing the call arguments (line 863)
str_78334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 864, 4), 'str', '\\s*(?P<name>\\b[\\w$]+\\b)\\s*(@\\(@\\s*(?P<args>[\\w\\s,]*)\\s*@\\)@|)\\s*((result(\\s*@\\(@\\s*(?P<result>\\b[\\w$]+\\b)\\s*@\\)@|))|(bind\\s*@\\(@\\s*(?P<bind>.*)\\s*@\\)@))*\\s*\\Z')
# Getting the type of 're' (line 864)
re_78335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 167), 're', False)
# Obtaining the member 'I' of a type (line 864)
I_78336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 864, 167), re_78335, 'I')
# Processing the call keyword arguments (line 863)
kwargs_78337 = {}
# Getting the type of 're' (line 863)
re_78332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 18), 're', False)
# Obtaining the member 'compile' of a type (line 863)
compile_78333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 18), re_78332, 'compile')
# Calling compile(args, kwargs) (line 863)
compile_call_result_78338 = invoke(stypy.reporting.localization.Localization(__file__, 863, 18), compile_78333, *[str_78334, I_78336], **kwargs_78337)

# Assigning a type to the variable 'nameargspattern' (line 863)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 863, 0), 'nameargspattern', compile_call_result_78338)

# Assigning a Call to a Name (line 865):

# Assigning a Call to a Name (line 865):

# Call to compile(...): (line 865)
# Processing the call arguments (line 865)
str_78341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 866, 4), 'str', '\\s*(?P<name>\\b[\\w$]+\\b)\\s*@\\(@\\s*(?P<args>.*)\\s*@\\)@\\s*\\Z')
# Getting the type of 're' (line 866)
re_78342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 66), 're', False)
# Obtaining the member 'I' of a type (line 866)
I_78343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 866, 66), re_78342, 'I')
# Processing the call keyword arguments (line 865)
kwargs_78344 = {}
# Getting the type of 're' (line 865)
re_78339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 22), 're', False)
# Obtaining the member 'compile' of a type (line 865)
compile_78340 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 22), re_78339, 'compile')
# Calling compile(args, kwargs) (line 865)
compile_call_result_78345 = invoke(stypy.reporting.localization.Localization(__file__, 865, 22), compile_78340, *[str_78341, I_78343], **kwargs_78344)

# Assigning a type to the variable 'callnameargspattern' (line 865)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 865, 0), 'callnameargspattern', compile_call_result_78345)

# Assigning a Call to a Name (line 867):

# Assigning a Call to a Name (line 867):

# Call to compile(...): (line 867)
# Processing the call arguments (line 867)
str_78348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 868, 4), 'str', '([-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[dD]((?:[-+]?\\d+)?)')
# Processing the call keyword arguments (line 867)
kwargs_78349 = {}
# Getting the type of 're' (line 867)
re_78346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 16), 're', False)
# Obtaining the member 'compile' of a type (line 867)
compile_78347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 867, 16), re_78346, 'compile')
# Calling compile(args, kwargs) (line 867)
compile_call_result_78350 = invoke(stypy.reporting.localization.Localization(__file__, 867, 16), compile_78347, *[str_78348], **kwargs_78349)

# Assigning a type to the variable 'real16pattern' (line 867)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 867, 0), 'real16pattern', compile_call_result_78350)

# Assigning a Call to a Name (line 869):

# Assigning a Call to a Name (line 869):

# Call to compile(...): (line 869)
# Processing the call arguments (line 869)
str_78353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 870, 4), 'str', '([-+]?((?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[eE]((?:[-+]?\\d+)?)|(\\d+\\.\\d*))')
# Processing the call keyword arguments (line 869)
kwargs_78354 = {}
# Getting the type of 're' (line 869)
re_78351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 15), 're', False)
# Obtaining the member 'compile' of a type (line 869)
compile_78352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 869, 15), re_78351, 'compile')
# Calling compile(args, kwargs) (line 869)
compile_call_result_78355 = invoke(stypy.reporting.localization.Localization(__file__, 869, 15), compile_78352, *[str_78353], **kwargs_78354)

# Assigning a type to the variable 'real8pattern' (line 869)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 869, 0), 'real8pattern', compile_call_result_78355)

# Assigning a Call to a Name (line 872):

# Assigning a Call to a Name (line 872):

# Call to compile(...): (line 872)
# Processing the call arguments (line 872)
str_78358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 36), 'str', 'intent\\s*\\(.*?\\bcallback\\b')
# Getting the type of 're' (line 872)
re_78359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 67), 're', False)
# Obtaining the member 'I' of a type (line 872)
I_78360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 67), re_78359, 'I')
# Processing the call keyword arguments (line 872)
kwargs_78361 = {}
# Getting the type of 're' (line 872)
re_78356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 25), 're', False)
# Obtaining the member 'compile' of a type (line 872)
compile_78357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 25), re_78356, 'compile')
# Calling compile(args, kwargs) (line 872)
compile_call_result_78362 = invoke(stypy.reporting.localization.Localization(__file__, 872, 25), compile_78357, *[str_78358, I_78360], **kwargs_78361)

# Assigning a type to the variable '_intentcallbackpattern' (line 872)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 872, 0), '_intentcallbackpattern', compile_call_result_78362)

@norecursion
def _is_intent_callback(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_is_intent_callback'
    module_type_store = module_type_store.open_function_context('_is_intent_callback', 875, 0, False)
    
    # Passed parameters checking function
    _is_intent_callback.stypy_localization = localization
    _is_intent_callback.stypy_type_of_self = None
    _is_intent_callback.stypy_type_store = module_type_store
    _is_intent_callback.stypy_function_name = '_is_intent_callback'
    _is_intent_callback.stypy_param_names_list = ['vdecl']
    _is_intent_callback.stypy_varargs_param_name = None
    _is_intent_callback.stypy_kwargs_param_name = None
    _is_intent_callback.stypy_call_defaults = defaults
    _is_intent_callback.stypy_call_varargs = varargs
    _is_intent_callback.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_is_intent_callback', ['vdecl'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_is_intent_callback', localization, ['vdecl'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_is_intent_callback(...)' code ##################

    
    
    # Call to get(...): (line 876)
    # Processing the call arguments (line 876)
    str_78365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 876, 23), 'str', 'attrspec')
    
    # Obtaining an instance of the builtin type 'list' (line 876)
    list_78366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 876, 35), 'list')
    # Adding type elements to the builtin type 'list' instance (line 876)
    
    # Processing the call keyword arguments (line 876)
    kwargs_78367 = {}
    # Getting the type of 'vdecl' (line 876)
    vdecl_78363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 13), 'vdecl', False)
    # Obtaining the member 'get' of a type (line 876)
    get_78364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 876, 13), vdecl_78363, 'get')
    # Calling get(args, kwargs) (line 876)
    get_call_result_78368 = invoke(stypy.reporting.localization.Localization(__file__, 876, 13), get_78364, *[str_78365, list_78366], **kwargs_78367)
    
    # Testing the type of a for loop iterable (line 876)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 876, 4), get_call_result_78368)
    # Getting the type of the for loop variable (line 876)
    for_loop_var_78369 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 876, 4), get_call_result_78368)
    # Assigning a type to the variable 'a' (line 876)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 876, 4), 'a', for_loop_var_78369)
    # SSA begins for a for statement (line 876)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to match(...): (line 877)
    # Processing the call arguments (line 877)
    # Getting the type of 'a' (line 877)
    a_78372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 40), 'a', False)
    # Processing the call keyword arguments (line 877)
    kwargs_78373 = {}
    # Getting the type of '_intentcallbackpattern' (line 877)
    _intentcallbackpattern_78370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 11), '_intentcallbackpattern', False)
    # Obtaining the member 'match' of a type (line 877)
    match_78371 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 877, 11), _intentcallbackpattern_78370, 'match')
    # Calling match(args, kwargs) (line 877)
    match_call_result_78374 = invoke(stypy.reporting.localization.Localization(__file__, 877, 11), match_78371, *[a_78372], **kwargs_78373)
    
    # Testing the type of an if condition (line 877)
    if_condition_78375 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 877, 8), match_call_result_78374)
    # Assigning a type to the variable 'if_condition_78375' (line 877)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 877, 8), 'if_condition_78375', if_condition_78375)
    # SSA begins for if statement (line 877)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    int_78376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 878, 19), 'int')
    # Assigning a type to the variable 'stypy_return_type' (line 878)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 878, 12), 'stypy_return_type', int_78376)
    # SSA join for if statement (line 877)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    int_78377 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 879, 11), 'int')
    # Assigning a type to the variable 'stypy_return_type' (line 879)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 879, 4), 'stypy_return_type', int_78377)
    
    # ################# End of '_is_intent_callback(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_is_intent_callback' in the type store
    # Getting the type of 'stypy_return_type' (line 875)
    stypy_return_type_78378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_78378)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_is_intent_callback'
    return stypy_return_type_78378

# Assigning a type to the variable '_is_intent_callback' (line 875)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 875, 0), '_is_intent_callback', _is_intent_callback)

@norecursion
def _resolvenameargspattern(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_resolvenameargspattern'
    module_type_store = module_type_store.open_function_context('_resolvenameargspattern', 882, 0, False)
    
    # Passed parameters checking function
    _resolvenameargspattern.stypy_localization = localization
    _resolvenameargspattern.stypy_type_of_self = None
    _resolvenameargspattern.stypy_type_store = module_type_store
    _resolvenameargspattern.stypy_function_name = '_resolvenameargspattern'
    _resolvenameargspattern.stypy_param_names_list = ['line']
    _resolvenameargspattern.stypy_varargs_param_name = None
    _resolvenameargspattern.stypy_kwargs_param_name = None
    _resolvenameargspattern.stypy_call_defaults = defaults
    _resolvenameargspattern.stypy_call_varargs = varargs
    _resolvenameargspattern.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_resolvenameargspattern', ['line'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_resolvenameargspattern', localization, ['line'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_resolvenameargspattern(...)' code ##################

    
    # Assigning a Call to a Name (line 883):
    
    # Assigning a Call to a Name (line 883):
    
    # Call to markouterparen(...): (line 883)
    # Processing the call arguments (line 883)
    # Getting the type of 'line' (line 883)
    line_78380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 26), 'line', False)
    # Processing the call keyword arguments (line 883)
    kwargs_78381 = {}
    # Getting the type of 'markouterparen' (line 883)
    markouterparen_78379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 11), 'markouterparen', False)
    # Calling markouterparen(args, kwargs) (line 883)
    markouterparen_call_result_78382 = invoke(stypy.reporting.localization.Localization(__file__, 883, 11), markouterparen_78379, *[line_78380], **kwargs_78381)
    
    # Assigning a type to the variable 'line' (line 883)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 883, 4), 'line', markouterparen_call_result_78382)
    
    # Assigning a Call to a Name (line 884):
    
    # Assigning a Call to a Name (line 884):
    
    # Call to match(...): (line 884)
    # Processing the call arguments (line 884)
    # Getting the type of 'line' (line 884)
    line_78385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 31), 'line', False)
    # Processing the call keyword arguments (line 884)
    kwargs_78386 = {}
    # Getting the type of 'nameargspattern' (line 884)
    nameargspattern_78383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 9), 'nameargspattern', False)
    # Obtaining the member 'match' of a type (line 884)
    match_78384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 884, 9), nameargspattern_78383, 'match')
    # Calling match(args, kwargs) (line 884)
    match_call_result_78387 = invoke(stypy.reporting.localization.Localization(__file__, 884, 9), match_78384, *[line_78385], **kwargs_78386)
    
    # Assigning a type to the variable 'm1' (line 884)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 884, 4), 'm1', match_call_result_78387)
    
    # Getting the type of 'm1' (line 885)
    m1_78388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 885, 7), 'm1')
    # Testing the type of an if condition (line 885)
    if_condition_78389 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 885, 4), m1_78388)
    # Assigning a type to the variable 'if_condition_78389' (line 885)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 885, 4), 'if_condition_78389', if_condition_78389)
    # SSA begins for if statement (line 885)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Obtaining an instance of the builtin type 'tuple' (line 886)
    tuple_78390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 15), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 886)
    # Adding element type (line 886)
    
    # Call to group(...): (line 886)
    # Processing the call arguments (line 886)
    str_78393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 24), 'str', 'name')
    # Processing the call keyword arguments (line 886)
    kwargs_78394 = {}
    # Getting the type of 'm1' (line 886)
    m1_78391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 15), 'm1', False)
    # Obtaining the member 'group' of a type (line 886)
    group_78392 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 15), m1_78391, 'group')
    # Calling group(args, kwargs) (line 886)
    group_call_result_78395 = invoke(stypy.reporting.localization.Localization(__file__, 886, 15), group_78392, *[str_78393], **kwargs_78394)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 886, 15), tuple_78390, group_call_result_78395)
    # Adding element type (line 886)
    
    # Call to group(...): (line 886)
    # Processing the call arguments (line 886)
    str_78398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 42), 'str', 'args')
    # Processing the call keyword arguments (line 886)
    kwargs_78399 = {}
    # Getting the type of 'm1' (line 886)
    m1_78396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 33), 'm1', False)
    # Obtaining the member 'group' of a type (line 886)
    group_78397 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 33), m1_78396, 'group')
    # Calling group(args, kwargs) (line 886)
    group_call_result_78400 = invoke(stypy.reporting.localization.Localization(__file__, 886, 33), group_78397, *[str_78398], **kwargs_78399)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 886, 15), tuple_78390, group_call_result_78400)
    # Adding element type (line 886)
    
    # Call to group(...): (line 886)
    # Processing the call arguments (line 886)
    str_78403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 60), 'str', 'result')
    # Processing the call keyword arguments (line 886)
    kwargs_78404 = {}
    # Getting the type of 'm1' (line 886)
    m1_78401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 51), 'm1', False)
    # Obtaining the member 'group' of a type (line 886)
    group_78402 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 51), m1_78401, 'group')
    # Calling group(args, kwargs) (line 886)
    group_call_result_78405 = invoke(stypy.reporting.localization.Localization(__file__, 886, 51), group_78402, *[str_78403], **kwargs_78404)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 886, 15), tuple_78390, group_call_result_78405)
    # Adding element type (line 886)
    
    # Call to group(...): (line 886)
    # Processing the call arguments (line 886)
    str_78408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 80), 'str', 'bind')
    # Processing the call keyword arguments (line 886)
    kwargs_78409 = {}
    # Getting the type of 'm1' (line 886)
    m1_78406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 71), 'm1', False)
    # Obtaining the member 'group' of a type (line 886)
    group_78407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 71), m1_78406, 'group')
    # Calling group(args, kwargs) (line 886)
    group_call_result_78410 = invoke(stypy.reporting.localization.Localization(__file__, 886, 71), group_78407, *[str_78408], **kwargs_78409)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 886, 15), tuple_78390, group_call_result_78410)
    
    # Assigning a type to the variable 'stypy_return_type' (line 886)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 886, 8), 'stypy_return_type', tuple_78390)
    # SSA join for if statement (line 885)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 887):
    
    # Assigning a Call to a Name (line 887):
    
    # Call to match(...): (line 887)
    # Processing the call arguments (line 887)
    # Getting the type of 'line' (line 887)
    line_78413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 35), 'line', False)
    # Processing the call keyword arguments (line 887)
    kwargs_78414 = {}
    # Getting the type of 'callnameargspattern' (line 887)
    callnameargspattern_78411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 9), 'callnameargspattern', False)
    # Obtaining the member 'match' of a type (line 887)
    match_78412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 887, 9), callnameargspattern_78411, 'match')
    # Calling match(args, kwargs) (line 887)
    match_call_result_78415 = invoke(stypy.reporting.localization.Localization(__file__, 887, 9), match_78412, *[line_78413], **kwargs_78414)
    
    # Assigning a type to the variable 'm1' (line 887)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 887, 4), 'm1', match_call_result_78415)
    
    # Getting the type of 'm1' (line 888)
    m1_78416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 7), 'm1')
    # Testing the type of an if condition (line 888)
    if_condition_78417 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 888, 4), m1_78416)
    # Assigning a type to the variable 'if_condition_78417' (line 888)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 888, 4), 'if_condition_78417', if_condition_78417)
    # SSA begins for if statement (line 888)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Obtaining an instance of the builtin type 'tuple' (line 889)
    tuple_78418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 15), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 889)
    # Adding element type (line 889)
    
    # Call to group(...): (line 889)
    # Processing the call arguments (line 889)
    str_78421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 24), 'str', 'name')
    # Processing the call keyword arguments (line 889)
    kwargs_78422 = {}
    # Getting the type of 'm1' (line 889)
    m1_78419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 15), 'm1', False)
    # Obtaining the member 'group' of a type (line 889)
    group_78420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 889, 15), m1_78419, 'group')
    # Calling group(args, kwargs) (line 889)
    group_call_result_78423 = invoke(stypy.reporting.localization.Localization(__file__, 889, 15), group_78420, *[str_78421], **kwargs_78422)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 889, 15), tuple_78418, group_call_result_78423)
    # Adding element type (line 889)
    
    # Call to group(...): (line 889)
    # Processing the call arguments (line 889)
    str_78426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 42), 'str', 'args')
    # Processing the call keyword arguments (line 889)
    kwargs_78427 = {}
    # Getting the type of 'm1' (line 889)
    m1_78424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 33), 'm1', False)
    # Obtaining the member 'group' of a type (line 889)
    group_78425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 889, 33), m1_78424, 'group')
    # Calling group(args, kwargs) (line 889)
    group_call_result_78428 = invoke(stypy.reporting.localization.Localization(__file__, 889, 33), group_78425, *[str_78426], **kwargs_78427)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 889, 15), tuple_78418, group_call_result_78428)
    # Adding element type (line 889)
    # Getting the type of 'None' (line 889)
    None_78429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 51), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 889, 15), tuple_78418, None_78429)
    # Adding element type (line 889)
    # Getting the type of 'None' (line 889)
    None_78430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 57), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 889, 15), tuple_78418, None_78430)
    
    # Assigning a type to the variable 'stypy_return_type' (line 889)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 889, 8), 'stypy_return_type', tuple_78418)
    # SSA join for if statement (line 888)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 890)
    tuple_78431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 890)
    # Adding element type (line 890)
    # Getting the type of 'None' (line 890)
    None_78432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 11), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 890, 11), tuple_78431, None_78432)
    # Adding element type (line 890)
    
    # Obtaining an instance of the builtin type 'list' (line 890)
    list_78433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 890)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 890, 11), tuple_78431, list_78433)
    # Adding element type (line 890)
    # Getting the type of 'None' (line 890)
    None_78434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 21), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 890, 11), tuple_78431, None_78434)
    # Adding element type (line 890)
    # Getting the type of 'None' (line 890)
    None_78435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 27), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 890, 11), tuple_78431, None_78435)
    
    # Assigning a type to the variable 'stypy_return_type' (line 890)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 890, 4), 'stypy_return_type', tuple_78431)
    
    # ################# End of '_resolvenameargspattern(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_resolvenameargspattern' in the type store
    # Getting the type of 'stypy_return_type' (line 882)
    stypy_return_type_78436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_78436)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_resolvenameargspattern'
    return stypy_return_type_78436

# Assigning a type to the variable '_resolvenameargspattern' (line 882)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 882, 0), '_resolvenameargspattern', _resolvenameargspattern)

@norecursion
def analyzeline(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'analyzeline'
    module_type_store = module_type_store.open_function_context('analyzeline', 893, 0, False)
    
    # Passed parameters checking function
    analyzeline.stypy_localization = localization
    analyzeline.stypy_type_of_self = None
    analyzeline.stypy_type_store = module_type_store
    analyzeline.stypy_function_name = 'analyzeline'
    analyzeline.stypy_param_names_list = ['m', 'case', 'line']
    analyzeline.stypy_varargs_param_name = None
    analyzeline.stypy_kwargs_param_name = None
    analyzeline.stypy_call_defaults = defaults
    analyzeline.stypy_call_varargs = varargs
    analyzeline.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'analyzeline', ['m', 'case', 'line'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'analyzeline', localization, ['m', 'case', 'line'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'analyzeline(...)' code ##################

    # Marking variables as global (line 894)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 894, 4), 'groupcounter')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 894, 4), 'groupname')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 894, 4), 'groupcache')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 894, 4), 'grouplist')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 894, 4), 'filepositiontext')
    # Marking variables as global (line 895)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 895, 4), 'currentfilename')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 895, 4), 'f77modulename')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 895, 4), 'neededinterface')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 895, 4), 'neededmodule')
    # Marking variables as global (line 896)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 896, 4), 'expectbegin')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 896, 4), 'gotnextfile')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 896, 4), 'previous_context')
    
    # Assigning a Call to a Name (line 898):
    
    # Assigning a Call to a Name (line 898):
    
    # Call to group(...): (line 898)
    # Processing the call arguments (line 898)
    str_78439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 20), 'str', 'this')
    # Processing the call keyword arguments (line 898)
    kwargs_78440 = {}
    # Getting the type of 'm' (line 898)
    m_78437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 12), 'm', False)
    # Obtaining the member 'group' of a type (line 898)
    group_78438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 898, 12), m_78437, 'group')
    # Calling group(args, kwargs) (line 898)
    group_call_result_78441 = invoke(stypy.reporting.localization.Localization(__file__, 898, 12), group_78438, *[str_78439], **kwargs_78440)
    
    # Assigning a type to the variable 'block' (line 898)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 898, 4), 'block', group_call_result_78441)
    
    
    # Getting the type of 'case' (line 899)
    case_78442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 7), 'case')
    str_78443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 899, 15), 'str', 'multiline')
    # Applying the binary operator '!=' (line 899)
    result_ne_78444 = python_operator(stypy.reporting.localization.Localization(__file__, 899, 7), '!=', case_78442, str_78443)
    
    # Testing the type of an if condition (line 899)
    if_condition_78445 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 899, 4), result_ne_78444)
    # Assigning a type to the variable 'if_condition_78445' (line 899)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 899, 4), 'if_condition_78445', if_condition_78445)
    # SSA begins for if statement (line 899)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 900):
    
    # Assigning a Name to a Name (line 900):
    # Getting the type of 'None' (line 900)
    None_78446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 27), 'None')
    # Assigning a type to the variable 'previous_context' (line 900)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 900, 8), 'previous_context', None_78446)
    # SSA join for if statement (line 899)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    # Getting the type of 'expectbegin' (line 901)
    expectbegin_78447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 7), 'expectbegin')
    
    # Getting the type of 'case' (line 901)
    case_78448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 23), 'case')
    
    # Obtaining an instance of the builtin type 'list' (line 901)
    list_78449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 35), 'list')
    # Adding type elements to the builtin type 'list' instance (line 901)
    # Adding element type (line 901)
    str_78450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 36), 'str', 'begin')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 35), list_78449, str_78450)
    # Adding element type (line 901)
    str_78451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 45), 'str', 'call')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 35), list_78449, str_78451)
    # Adding element type (line 901)
    str_78452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 53), 'str', 'callfun')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 35), list_78449, str_78452)
    # Adding element type (line 901)
    str_78453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 64), 'str', 'type')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 35), list_78449, str_78453)
    
    # Applying the binary operator 'notin' (line 901)
    result_contains_78454 = python_operator(stypy.reporting.localization.Localization(__file__, 901, 23), 'notin', case_78448, list_78449)
    
    # Applying the binary operator 'and' (line 901)
    result_and_keyword_78455 = python_operator(stypy.reporting.localization.Localization(__file__, 901, 7), 'and', expectbegin_78447, result_contains_78454)
    
    # Getting the type of 'skipemptyends' (line 902)
    skipemptyends_78456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 15), 'skipemptyends')
    # Applying the 'not' unary operator (line 902)
    result_not__78457 = python_operator(stypy.reporting.localization.Localization(__file__, 902, 11), 'not', skipemptyends_78456)
    
    # Applying the binary operator 'and' (line 901)
    result_and_keyword_78458 = python_operator(stypy.reporting.localization.Localization(__file__, 901, 7), 'and', result_and_keyword_78455, result_not__78457)
    
    # Getting the type of 'groupcounter' (line 902)
    groupcounter_78459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 33), 'groupcounter')
    int_78460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 902, 48), 'int')
    # Applying the binary operator '<' (line 902)
    result_lt_78461 = python_operator(stypy.reporting.localization.Localization(__file__, 902, 33), '<', groupcounter_78459, int_78460)
    
    # Applying the binary operator 'and' (line 901)
    result_and_keyword_78462 = python_operator(stypy.reporting.localization.Localization(__file__, 901, 7), 'and', result_and_keyword_78458, result_lt_78461)
    
    # Testing the type of an if condition (line 901)
    if_condition_78463 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 901, 4), result_and_keyword_78462)
    # Assigning a type to the variable 'if_condition_78463' (line 901)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 901, 4), 'if_condition_78463', if_condition_78463)
    # SSA begins for if statement (line 901)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 903):
    
    # Assigning a Subscript to a Name (line 903):
    
    # Obtaining the type of the subscript
    int_78464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 63), 'int')
    
    # Call to split(...): (line 903)
    # Processing the call arguments (line 903)
    str_78472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 58), 'str', '.')
    # Processing the call keyword arguments (line 903)
    kwargs_78473 = {}
    
    # Call to basename(...): (line 903)
    # Processing the call arguments (line 903)
    # Getting the type of 'currentfilename' (line 903)
    currentfilename_78468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 903, 35), 'currentfilename', False)
    # Processing the call keyword arguments (line 903)
    kwargs_78469 = {}
    # Getting the type of 'os' (line 903)
    os_78465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 903, 18), 'os', False)
    # Obtaining the member 'path' of a type (line 903)
    path_78466 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 903, 18), os_78465, 'path')
    # Obtaining the member 'basename' of a type (line 903)
    basename_78467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 903, 18), path_78466, 'basename')
    # Calling basename(args, kwargs) (line 903)
    basename_call_result_78470 = invoke(stypy.reporting.localization.Localization(__file__, 903, 18), basename_78467, *[currentfilename_78468], **kwargs_78469)
    
    # Obtaining the member 'split' of a type (line 903)
    split_78471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 903, 18), basename_call_result_78470, 'split')
    # Calling split(args, kwargs) (line 903)
    split_call_result_78474 = invoke(stypy.reporting.localization.Localization(__file__, 903, 18), split_78471, *[str_78472], **kwargs_78473)
    
    # Obtaining the member '__getitem__' of a type (line 903)
    getitem___78475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 903, 18), split_call_result_78474, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 903)
    subscript_call_result_78476 = invoke(stypy.reporting.localization.Localization(__file__, 903, 18), getitem___78475, int_78464)
    
    # Assigning a type to the variable 'newname' (line 903)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 903, 8), 'newname', subscript_call_result_78476)
    
    # Call to outmess(...): (line 904)
    # Processing the call arguments (line 904)
    str_78478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 905, 12), 'str', 'analyzeline: no group yet. Creating program group with name "%s".\n')
    # Getting the type of 'newname' (line 905)
    newname_78479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 905, 84), 'newname', False)
    # Applying the binary operator '%' (line 905)
    result_mod_78480 = python_operator(stypy.reporting.localization.Localization(__file__, 905, 12), '%', str_78478, newname_78479)
    
    # Processing the call keyword arguments (line 904)
    kwargs_78481 = {}
    # Getting the type of 'outmess' (line 904)
    outmess_78477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 904, 8), 'outmess', False)
    # Calling outmess(args, kwargs) (line 904)
    outmess_call_result_78482 = invoke(stypy.reporting.localization.Localization(__file__, 904, 8), outmess_78477, *[result_mod_78480], **kwargs_78481)
    
    
    # Assigning a Num to a Name (line 906):
    
    # Assigning a Num to a Name (line 906):
    int_78483 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 906, 22), 'int')
    # Assigning a type to the variable 'gotnextfile' (line 906)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 906, 8), 'gotnextfile', int_78483)
    
    # Assigning a BinOp to a Name (line 907):
    
    # Assigning a BinOp to a Name (line 907):
    # Getting the type of 'groupcounter' (line 907)
    groupcounter_78484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 907, 23), 'groupcounter')
    int_78485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 907, 38), 'int')
    # Applying the binary operator '+' (line 907)
    result_add_78486 = python_operator(stypy.reporting.localization.Localization(__file__, 907, 23), '+', groupcounter_78484, int_78485)
    
    # Assigning a type to the variable 'groupcounter' (line 907)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 907, 8), 'groupcounter', result_add_78486)
    
    # Assigning a Str to a Subscript (line 908):
    
    # Assigning a Str to a Subscript (line 908):
    str_78487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 908, 34), 'str', 'program')
    # Getting the type of 'groupname' (line 908)
    groupname_78488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 8), 'groupname')
    # Getting the type of 'groupcounter' (line 908)
    groupcounter_78489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 18), 'groupcounter')
    # Storing an element on a container (line 908)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 908, 8), groupname_78488, (groupcounter_78489, str_78487))
    
    # Assigning a Dict to a Subscript (line 909):
    
    # Assigning a Dict to a Subscript (line 909):
    
    # Obtaining an instance of the builtin type 'dict' (line 909)
    dict_78490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 909, 35), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 909)
    
    # Getting the type of 'groupcache' (line 909)
    groupcache_78491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 8), 'groupcache')
    # Getting the type of 'groupcounter' (line 909)
    groupcounter_78492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 19), 'groupcounter')
    # Storing an element on a container (line 909)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 909, 8), groupcache_78491, (groupcounter_78492, dict_78490))
    
    # Assigning a List to a Subscript (line 910):
    
    # Assigning a List to a Subscript (line 910):
    
    # Obtaining an instance of the builtin type 'list' (line 910)
    list_78493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 910, 34), 'list')
    # Adding type elements to the builtin type 'list' instance (line 910)
    
    # Getting the type of 'grouplist' (line 910)
    grouplist_78494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 8), 'grouplist')
    # Getting the type of 'groupcounter' (line 910)
    groupcounter_78495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 18), 'groupcounter')
    # Storing an element on a container (line 910)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 910, 8), grouplist_78494, (groupcounter_78495, list_78493))
    
    # Assigning a List to a Subscript (line 911):
    
    # Assigning a List to a Subscript (line 911):
    
    # Obtaining an instance of the builtin type 'list' (line 911)
    list_78496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 911, 43), 'list')
    # Adding type elements to the builtin type 'list' instance (line 911)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 911)
    groupcounter_78497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 911, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 911)
    groupcache_78498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 911, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 911)
    getitem___78499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 911, 8), groupcache_78498, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 911)
    subscript_call_result_78500 = invoke(stypy.reporting.localization.Localization(__file__, 911, 8), getitem___78499, groupcounter_78497)
    
    str_78501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 911, 33), 'str', 'body')
    # Storing an element on a container (line 911)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 911, 8), subscript_call_result_78500, (str_78501, list_78496))
    
    # Assigning a Dict to a Subscript (line 912):
    
    # Assigning a Dict to a Subscript (line 912):
    
    # Obtaining an instance of the builtin type 'dict' (line 912)
    dict_78502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 912, 43), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 912)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 912)
    groupcounter_78503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 912)
    groupcache_78504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 912)
    getitem___78505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 912, 8), groupcache_78504, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 912)
    subscript_call_result_78506 = invoke(stypy.reporting.localization.Localization(__file__, 912, 8), getitem___78505, groupcounter_78503)
    
    str_78507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 912, 33), 'str', 'vars')
    # Storing an element on a container (line 912)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 8), subscript_call_result_78506, (str_78507, dict_78502))
    
    # Assigning a Str to a Subscript (line 913):
    
    # Assigning a Str to a Subscript (line 913):
    str_78508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 913, 44), 'str', 'program')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 913)
    groupcounter_78509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 913)
    groupcache_78510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 913)
    getitem___78511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 913, 8), groupcache_78510, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 913)
    subscript_call_result_78512 = invoke(stypy.reporting.localization.Localization(__file__, 913, 8), getitem___78511, groupcounter_78509)
    
    str_78513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 913, 33), 'str', 'block')
    # Storing an element on a container (line 913)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 913, 8), subscript_call_result_78512, (str_78513, str_78508))
    
    # Assigning a Name to a Subscript (line 914):
    
    # Assigning a Name to a Subscript (line 914):
    # Getting the type of 'newname' (line 914)
    newname_78514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 43), 'newname')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 914)
    groupcounter_78515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 914)
    groupcache_78516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 914)
    getitem___78517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 914, 8), groupcache_78516, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 914)
    subscript_call_result_78518 = invoke(stypy.reporting.localization.Localization(__file__, 914, 8), getitem___78517, groupcounter_78515)
    
    str_78519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 914, 33), 'str', 'name')
    # Storing an element on a container (line 914)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 914, 8), subscript_call_result_78518, (str_78519, newname_78514))
    
    # Assigning a Str to a Subscript (line 915):
    
    # Assigning a Str to a Subscript (line 915):
    str_78520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 43), 'str', 'fromsky')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 915)
    groupcounter_78521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 915)
    groupcache_78522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 915)
    getitem___78523 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 915, 8), groupcache_78522, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 915)
    subscript_call_result_78524 = invoke(stypy.reporting.localization.Localization(__file__, 915, 8), getitem___78523, groupcounter_78521)
    
    str_78525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 33), 'str', 'from')
    # Storing an element on a container (line 915)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 915, 8), subscript_call_result_78524, (str_78525, str_78520))
    
    # Assigning a Num to a Name (line 916):
    
    # Assigning a Num to a Name (line 916):
    int_78526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 916, 22), 'int')
    # Assigning a type to the variable 'expectbegin' (line 916)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 916, 8), 'expectbegin', int_78526)
    # SSA join for if statement (line 901)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'case' (line 917)
    case_78527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 917, 7), 'case')
    
    # Obtaining an instance of the builtin type 'list' (line 917)
    list_78528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 917, 15), 'list')
    # Adding type elements to the builtin type 'list' instance (line 917)
    # Adding element type (line 917)
    str_78529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 917, 16), 'str', 'begin')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 917, 15), list_78528, str_78529)
    # Adding element type (line 917)
    str_78530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 917, 25), 'str', 'call')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 917, 15), list_78528, str_78530)
    # Adding element type (line 917)
    str_78531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 917, 33), 'str', 'callfun')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 917, 15), list_78528, str_78531)
    
    # Applying the binary operator 'in' (line 917)
    result_contains_78532 = python_operator(stypy.reporting.localization.Localization(__file__, 917, 7), 'in', case_78527, list_78528)
    
    # Testing the type of an if condition (line 917)
    if_condition_78533 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 917, 4), result_contains_78532)
    # Assigning a type to the variable 'if_condition_78533' (line 917)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 917, 4), 'if_condition_78533', if_condition_78533)
    # SSA begins for if statement (line 917)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 919):
    
    # Assigning a Call to a Name (line 919):
    
    # Call to lower(...): (line 919)
    # Processing the call keyword arguments (line 919)
    kwargs_78536 = {}
    # Getting the type of 'block' (line 919)
    block_78534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 919, 16), 'block', False)
    # Obtaining the member 'lower' of a type (line 919)
    lower_78535 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 919, 16), block_78534, 'lower')
    # Calling lower(args, kwargs) (line 919)
    lower_call_result_78537 = invoke(stypy.reporting.localization.Localization(__file__, 919, 16), lower_78535, *[], **kwargs_78536)
    
    # Assigning a type to the variable 'block' (line 919)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 919, 8), 'block', lower_call_result_78537)
    
    
    # Call to match(...): (line 920)
    # Processing the call arguments (line 920)
    str_78540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 920, 20), 'str', 'block\\s*data')
    # Getting the type of 'block' (line 920)
    block_78541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 37), 'block', False)
    # Getting the type of 're' (line 920)
    re_78542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 44), 're', False)
    # Obtaining the member 'I' of a type (line 920)
    I_78543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 920, 44), re_78542, 'I')
    # Processing the call keyword arguments (line 920)
    kwargs_78544 = {}
    # Getting the type of 're' (line 920)
    re_78538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 11), 're', False)
    # Obtaining the member 'match' of a type (line 920)
    match_78539 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 920, 11), re_78538, 'match')
    # Calling match(args, kwargs) (line 920)
    match_call_result_78545 = invoke(stypy.reporting.localization.Localization(__file__, 920, 11), match_78539, *[str_78540, block_78541, I_78543], **kwargs_78544)
    
    # Testing the type of an if condition (line 920)
    if_condition_78546 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 920, 8), match_call_result_78545)
    # Assigning a type to the variable 'if_condition_78546' (line 920)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 920, 8), 'if_condition_78546', if_condition_78546)
    # SSA begins for if statement (line 920)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 921):
    
    # Assigning a Str to a Name (line 921):
    str_78547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 921, 20), 'str', 'block data')
    # Assigning a type to the variable 'block' (line 921)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 921, 12), 'block', str_78547)
    # SSA join for if statement (line 920)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to match(...): (line 922)
    # Processing the call arguments (line 922)
    str_78550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 922, 20), 'str', 'python\\s*module')
    # Getting the type of 'block' (line 922)
    block_78551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 40), 'block', False)
    # Getting the type of 're' (line 922)
    re_78552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 47), 're', False)
    # Obtaining the member 'I' of a type (line 922)
    I_78553 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 922, 47), re_78552, 'I')
    # Processing the call keyword arguments (line 922)
    kwargs_78554 = {}
    # Getting the type of 're' (line 922)
    re_78548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 11), 're', False)
    # Obtaining the member 'match' of a type (line 922)
    match_78549 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 922, 11), re_78548, 'match')
    # Calling match(args, kwargs) (line 922)
    match_call_result_78555 = invoke(stypy.reporting.localization.Localization(__file__, 922, 11), match_78549, *[str_78550, block_78551, I_78553], **kwargs_78554)
    
    # Testing the type of an if condition (line 922)
    if_condition_78556 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 922, 8), match_call_result_78555)
    # Assigning a type to the variable 'if_condition_78556' (line 922)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'if_condition_78556', if_condition_78556)
    # SSA begins for if statement (line 922)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 923):
    
    # Assigning a Str to a Name (line 923):
    str_78557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 923, 20), 'str', 'python module')
    # Assigning a type to the variable 'block' (line 923)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 923, 12), 'block', str_78557)
    # SSA join for if statement (line 922)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Tuple (line 924):
    
    # Assigning a Call to a Name:
    
    # Call to _resolvenameargspattern(...): (line 924)
    # Processing the call arguments (line 924)
    
    # Call to group(...): (line 924)
    # Processing the call arguments (line 924)
    str_78561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 924, 67), 'str', 'after')
    # Processing the call keyword arguments (line 924)
    kwargs_78562 = {}
    # Getting the type of 'm' (line 924)
    m_78559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 59), 'm', False)
    # Obtaining the member 'group' of a type (line 924)
    group_78560 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 924, 59), m_78559, 'group')
    # Calling group(args, kwargs) (line 924)
    group_call_result_78563 = invoke(stypy.reporting.localization.Localization(__file__, 924, 59), group_78560, *[str_78561], **kwargs_78562)
    
    # Processing the call keyword arguments (line 924)
    kwargs_78564 = {}
    # Getting the type of '_resolvenameargspattern' (line 924)
    _resolvenameargspattern_78558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 35), '_resolvenameargspattern', False)
    # Calling _resolvenameargspattern(args, kwargs) (line 924)
    _resolvenameargspattern_call_result_78565 = invoke(stypy.reporting.localization.Localization(__file__, 924, 35), _resolvenameargspattern_78558, *[group_call_result_78563], **kwargs_78564)
    
    # Assigning a type to the variable 'call_assignment_75770' (line 924)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 924, 8), 'call_assignment_75770', _resolvenameargspattern_call_result_78565)
    
    # Assigning a Call to a Name (line 924):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_78568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 924, 8), 'int')
    # Processing the call keyword arguments
    kwargs_78569 = {}
    # Getting the type of 'call_assignment_75770' (line 924)
    call_assignment_75770_78566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 8), 'call_assignment_75770', False)
    # Obtaining the member '__getitem__' of a type (line 924)
    getitem___78567 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 924, 8), call_assignment_75770_78566, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_78570 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___78567, *[int_78568], **kwargs_78569)
    
    # Assigning a type to the variable 'call_assignment_75771' (line 924)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 924, 8), 'call_assignment_75771', getitem___call_result_78570)
    
    # Assigning a Name to a Name (line 924):
    # Getting the type of 'call_assignment_75771' (line 924)
    call_assignment_75771_78571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 8), 'call_assignment_75771')
    # Assigning a type to the variable 'name' (line 924)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 924, 8), 'name', call_assignment_75771_78571)
    
    # Assigning a Call to a Name (line 924):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_78574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 924, 8), 'int')
    # Processing the call keyword arguments
    kwargs_78575 = {}
    # Getting the type of 'call_assignment_75770' (line 924)
    call_assignment_75770_78572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 8), 'call_assignment_75770', False)
    # Obtaining the member '__getitem__' of a type (line 924)
    getitem___78573 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 924, 8), call_assignment_75770_78572, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_78576 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___78573, *[int_78574], **kwargs_78575)
    
    # Assigning a type to the variable 'call_assignment_75772' (line 924)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 924, 8), 'call_assignment_75772', getitem___call_result_78576)
    
    # Assigning a Name to a Name (line 924):
    # Getting the type of 'call_assignment_75772' (line 924)
    call_assignment_75772_78577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 8), 'call_assignment_75772')
    # Assigning a type to the variable 'args' (line 924)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 924, 14), 'args', call_assignment_75772_78577)
    
    # Assigning a Call to a Name (line 924):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_78580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 924, 8), 'int')
    # Processing the call keyword arguments
    kwargs_78581 = {}
    # Getting the type of 'call_assignment_75770' (line 924)
    call_assignment_75770_78578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 8), 'call_assignment_75770', False)
    # Obtaining the member '__getitem__' of a type (line 924)
    getitem___78579 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 924, 8), call_assignment_75770_78578, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_78582 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___78579, *[int_78580], **kwargs_78581)
    
    # Assigning a type to the variable 'call_assignment_75773' (line 924)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 924, 8), 'call_assignment_75773', getitem___call_result_78582)
    
    # Assigning a Name to a Name (line 924):
    # Getting the type of 'call_assignment_75773' (line 924)
    call_assignment_75773_78583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 8), 'call_assignment_75773')
    # Assigning a type to the variable 'result' (line 924)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 924, 20), 'result', call_assignment_75773_78583)
    
    # Assigning a Call to a Name (line 924):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_78586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 924, 8), 'int')
    # Processing the call keyword arguments
    kwargs_78587 = {}
    # Getting the type of 'call_assignment_75770' (line 924)
    call_assignment_75770_78584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 8), 'call_assignment_75770', False)
    # Obtaining the member '__getitem__' of a type (line 924)
    getitem___78585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 924, 8), call_assignment_75770_78584, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_78588 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___78585, *[int_78586], **kwargs_78587)
    
    # Assigning a type to the variable 'call_assignment_75774' (line 924)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 924, 8), 'call_assignment_75774', getitem___call_result_78588)
    
    # Assigning a Name to a Name (line 924):
    # Getting the type of 'call_assignment_75774' (line 924)
    call_assignment_75774_78589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 8), 'call_assignment_75774')
    # Assigning a type to the variable 'bind' (line 924)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 924, 28), 'bind', call_assignment_75774_78589)
    
    # Type idiom detected: calculating its left and rigth part (line 925)
    # Getting the type of 'name' (line 925)
    name_78590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 925, 11), 'name')
    # Getting the type of 'None' (line 925)
    None_78591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 925, 19), 'None')
    
    (may_be_78592, more_types_in_union_78593) = may_be_none(name_78590, None_78591)

    if may_be_78592:

        if more_types_in_union_78593:
            # Runtime conditional SSA (line 925)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        
        # Getting the type of 'block' (line 926)
        block_78594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 15), 'block')
        str_78595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 926, 24), 'str', 'block data')
        # Applying the binary operator '==' (line 926)
        result_eq_78596 = python_operator(stypy.reporting.localization.Localization(__file__, 926, 15), '==', block_78594, str_78595)
        
        # Testing the type of an if condition (line 926)
        if_condition_78597 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 926, 12), result_eq_78596)
        # Assigning a type to the variable 'if_condition_78597' (line 926)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 926, 12), 'if_condition_78597', if_condition_78597)
        # SSA begins for if statement (line 926)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Str to a Name (line 927):
        
        # Assigning a Str to a Name (line 927):
        str_78598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 927, 23), 'str', '_BLOCK_DATA_')
        # Assigning a type to the variable 'name' (line 927)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 927, 16), 'name', str_78598)
        # SSA branch for the else part of an if statement (line 926)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Str to a Name (line 929):
        
        # Assigning a Str to a Name (line 929):
        str_78599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 929, 23), 'str', '')
        # Assigning a type to the variable 'name' (line 929)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 929, 16), 'name', str_78599)
        # SSA join for if statement (line 926)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'block' (line 930)
        block_78600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 15), 'block')
        
        # Obtaining an instance of the builtin type 'list' (line 930)
        list_78601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 930)
        # Adding element type (line 930)
        str_78602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 29), 'str', 'interface')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 930, 28), list_78601, str_78602)
        # Adding element type (line 930)
        str_78603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 42), 'str', 'block data')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 930, 28), list_78601, str_78603)
        
        # Applying the binary operator 'notin' (line 930)
        result_contains_78604 = python_operator(stypy.reporting.localization.Localization(__file__, 930, 15), 'notin', block_78600, list_78601)
        
        # Testing the type of an if condition (line 930)
        if_condition_78605 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 930, 12), result_contains_78604)
        # Assigning a type to the variable 'if_condition_78605' (line 930)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 930, 12), 'if_condition_78605', if_condition_78605)
        # SSA begins for if statement (line 930)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to outmess(...): (line 931)
        # Processing the call arguments (line 931)
        str_78607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 931, 24), 'str', 'analyzeline: No name/args pattern found for line.\n')
        # Processing the call keyword arguments (line 931)
        kwargs_78608 = {}
        # Getting the type of 'outmess' (line 931)
        outmess_78606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 931, 16), 'outmess', False)
        # Calling outmess(args, kwargs) (line 931)
        outmess_call_result_78609 = invoke(stypy.reporting.localization.Localization(__file__, 931, 16), outmess_78606, *[str_78607], **kwargs_78608)
        
        # SSA join for if statement (line 930)
        module_type_store = module_type_store.join_ssa_context()
        

        if more_types_in_union_78593:
            # SSA join for if statement (line 925)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Tuple to a Name (line 933):
    
    # Assigning a Tuple to a Name (line 933):
    
    # Obtaining an instance of the builtin type 'tuple' (line 933)
    tuple_78610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 28), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 933)
    # Adding element type (line 933)
    # Getting the type of 'block' (line 933)
    block_78611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 28), 'block')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 28), tuple_78610, block_78611)
    # Adding element type (line 933)
    # Getting the type of 'name' (line 933)
    name_78612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 35), 'name')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 28), tuple_78610, name_78612)
    # Adding element type (line 933)
    # Getting the type of 'groupcounter' (line 933)
    groupcounter_78613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 41), 'groupcounter')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 933, 28), tuple_78610, groupcounter_78613)
    
    # Assigning a type to the variable 'previous_context' (line 933)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 933, 8), 'previous_context', tuple_78610)
    
    # Getting the type of 'args' (line 934)
    args_78614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 11), 'args')
    # Testing the type of an if condition (line 934)
    if_condition_78615 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 934, 8), args_78614)
    # Assigning a type to the variable 'if_condition_78615' (line 934)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 934, 8), 'if_condition_78615', if_condition_78615)
    # SSA begins for if statement (line 934)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 935):
    
    # Assigning a Call to a Name (line 935):
    
    # Call to rmbadname(...): (line 935)
    # Processing the call arguments (line 935)
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to split(...): (line 936)
    # Processing the call arguments (line 936)
    str_78626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 936, 66), 'str', '@,@')
    # Processing the call keyword arguments (line 936)
    kwargs_78627 = {}
    
    # Call to markoutercomma(...): (line 936)
    # Processing the call arguments (line 936)
    # Getting the type of 'args' (line 936)
    args_78622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 54), 'args', False)
    # Processing the call keyword arguments (line 936)
    kwargs_78623 = {}
    # Getting the type of 'markoutercomma' (line 936)
    markoutercomma_78621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 39), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 936)
    markoutercomma_call_result_78624 = invoke(stypy.reporting.localization.Localization(__file__, 936, 39), markoutercomma_78621, *[args_78622], **kwargs_78623)
    
    # Obtaining the member 'split' of a type (line 936)
    split_78625 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 936, 39), markoutercomma_call_result_78624, 'split')
    # Calling split(args, kwargs) (line 936)
    split_call_result_78628 = invoke(stypy.reporting.localization.Localization(__file__, 936, 39), split_78625, *[str_78626], **kwargs_78627)
    
    comprehension_78629 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 935, 30), split_call_result_78628)
    # Assigning a type to the variable 'x' (line 935)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 935, 30), 'x', comprehension_78629)
    
    # Call to strip(...): (line 935)
    # Processing the call keyword arguments (line 935)
    kwargs_78619 = {}
    # Getting the type of 'x' (line 935)
    x_78617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 30), 'x', False)
    # Obtaining the member 'strip' of a type (line 935)
    strip_78618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 935, 30), x_78617, 'strip')
    # Calling strip(args, kwargs) (line 935)
    strip_call_result_78620 = invoke(stypy.reporting.localization.Localization(__file__, 935, 30), strip_78618, *[], **kwargs_78619)
    
    list_78630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 935, 30), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 935, 30), list_78630, strip_call_result_78620)
    # Processing the call keyword arguments (line 935)
    kwargs_78631 = {}
    # Getting the type of 'rmbadname' (line 935)
    rmbadname_78616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 19), 'rmbadname', False)
    # Calling rmbadname(args, kwargs) (line 935)
    rmbadname_call_result_78632 = invoke(stypy.reporting.localization.Localization(__file__, 935, 19), rmbadname_78616, *[list_78630], **kwargs_78631)
    
    # Assigning a type to the variable 'args' (line 935)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 935, 12), 'args', rmbadname_call_result_78632)
    # SSA branch for the else part of an if statement (line 934)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a List to a Name (line 938):
    
    # Assigning a List to a Name (line 938):
    
    # Obtaining an instance of the builtin type 'list' (line 938)
    list_78633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 19), 'list')
    # Adding type elements to the builtin type 'list' instance (line 938)
    
    # Assigning a type to the variable 'args' (line 938)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 12), 'args', list_78633)
    # SSA join for if statement (line 934)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_78634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 939, 11), 'str', '')
    # Getting the type of 'args' (line 939)
    args_78635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 17), 'args')
    # Applying the binary operator 'in' (line 939)
    result_contains_78636 = python_operator(stypy.reporting.localization.Localization(__file__, 939, 11), 'in', str_78634, args_78635)
    
    # Testing the type of an if condition (line 939)
    if_condition_78637 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 939, 8), result_contains_78636)
    # Assigning a type to the variable 'if_condition_78637' (line 939)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 939, 8), 'if_condition_78637', if_condition_78637)
    # SSA begins for if statement (line 939)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    str_78638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 940, 18), 'str', '')
    # Getting the type of 'args' (line 940)
    args_78639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 24), 'args')
    # Applying the binary operator 'in' (line 940)
    result_contains_78640 = python_operator(stypy.reporting.localization.Localization(__file__, 940, 18), 'in', str_78638, args_78639)
    
    # Testing the type of an if condition (line 940)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 940, 12), result_contains_78640)
    # SSA begins for while statement (line 940)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    # Call to remove(...): (line 941)
    # Processing the call arguments (line 941)
    str_78643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 941, 28), 'str', '')
    # Processing the call keyword arguments (line 941)
    kwargs_78644 = {}
    # Getting the type of 'args' (line 941)
    args_78641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 941, 16), 'args', False)
    # Obtaining the member 'remove' of a type (line 941)
    remove_78642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 941, 16), args_78641, 'remove')
    # Calling remove(args, kwargs) (line 941)
    remove_call_result_78645 = invoke(stypy.reporting.localization.Localization(__file__, 941, 16), remove_78642, *[str_78643], **kwargs_78644)
    
    # SSA join for while statement (line 940)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to outmess(...): (line 942)
    # Processing the call arguments (line 942)
    str_78647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 16), 'str', 'analyzeline: argument list is malformed (missing argument).\n')
    # Processing the call keyword arguments (line 942)
    kwargs_78648 = {}
    # Getting the type of 'outmess' (line 942)
    outmess_78646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 942, 12), 'outmess', False)
    # Calling outmess(args, kwargs) (line 942)
    outmess_call_result_78649 = invoke(stypy.reporting.localization.Localization(__file__, 942, 12), outmess_78646, *[str_78647], **kwargs_78648)
    
    # SSA join for if statement (line 939)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Num to a Name (line 946):
    
    # Assigning a Num to a Name (line 946):
    int_78650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 946, 21), 'int')
    # Assigning a type to the variable 'needmodule' (line 946)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 946, 8), 'needmodule', int_78650)
    
    # Assigning a Num to a Name (line 947):
    
    # Assigning a Num to a Name (line 947):
    int_78651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 947, 24), 'int')
    # Assigning a type to the variable 'needinterface' (line 947)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 947, 8), 'needinterface', int_78651)
    
    
    # Getting the type of 'case' (line 949)
    case_78652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 11), 'case')
    
    # Obtaining an instance of the builtin type 'list' (line 949)
    list_78653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 949, 19), 'list')
    # Adding type elements to the builtin type 'list' instance (line 949)
    # Adding element type (line 949)
    str_78654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 949, 20), 'str', 'call')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 949, 19), list_78653, str_78654)
    # Adding element type (line 949)
    str_78655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 949, 28), 'str', 'callfun')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 949, 19), list_78653, str_78655)
    
    # Applying the binary operator 'in' (line 949)
    result_contains_78656 = python_operator(stypy.reporting.localization.Localization(__file__, 949, 11), 'in', case_78652, list_78653)
    
    # Testing the type of an if condition (line 949)
    if_condition_78657 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 949, 8), result_contains_78656)
    # Assigning a type to the variable 'if_condition_78657' (line 949)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 949, 8), 'if_condition_78657', if_condition_78657)
    # SSA begins for if statement (line 949)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 950):
    
    # Assigning a Num to a Name (line 950):
    int_78658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 950, 28), 'int')
    # Assigning a type to the variable 'needinterface' (line 950)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 950, 12), 'needinterface', int_78658)
    
    
    str_78659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 951, 15), 'str', 'args')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 951)
    groupcounter_78660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 951, 40), 'groupcounter')
    # Getting the type of 'groupcache' (line 951)
    groupcache_78661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 951, 29), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 951)
    getitem___78662 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 951, 29), groupcache_78661, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 951)
    subscript_call_result_78663 = invoke(stypy.reporting.localization.Localization(__file__, 951, 29), getitem___78662, groupcounter_78660)
    
    # Applying the binary operator 'notin' (line 951)
    result_contains_78664 = python_operator(stypy.reporting.localization.Localization(__file__, 951, 15), 'notin', str_78659, subscript_call_result_78663)
    
    # Testing the type of an if condition (line 951)
    if_condition_78665 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 951, 12), result_contains_78664)
    # Assigning a type to the variable 'if_condition_78665' (line 951)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 951, 12), 'if_condition_78665', if_condition_78665)
    # SSA begins for if statement (line 951)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Assigning a type to the variable 'stypy_return_type' (line 952)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 952, 16), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 951)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'name' (line 953)
    name_78666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 15), 'name')
    
    # Obtaining the type of the subscript
    str_78667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 953, 52), 'str', 'args')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 953)
    groupcounter_78668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 38), 'groupcounter')
    # Getting the type of 'groupcache' (line 953)
    groupcache_78669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 27), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 953)
    getitem___78670 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 953, 27), groupcache_78669, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 953)
    subscript_call_result_78671 = invoke(stypy.reporting.localization.Localization(__file__, 953, 27), getitem___78670, groupcounter_78668)
    
    # Obtaining the member '__getitem__' of a type (line 953)
    getitem___78672 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 953, 27), subscript_call_result_78671, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 953)
    subscript_call_result_78673 = invoke(stypy.reporting.localization.Localization(__file__, 953, 27), getitem___78672, str_78667)
    
    # Applying the binary operator 'notin' (line 953)
    result_contains_78674 = python_operator(stypy.reporting.localization.Localization(__file__, 953, 15), 'notin', name_78666, subscript_call_result_78673)
    
    # Testing the type of an if condition (line 953)
    if_condition_78675 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 953, 12), result_contains_78674)
    # Assigning a type to the variable 'if_condition_78675' (line 953)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 953, 12), 'if_condition_78675', if_condition_78675)
    # SSA begins for if statement (line 953)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Assigning a type to the variable 'stypy_return_type' (line 954)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 954, 16), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 953)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 955)
    groupcounter_78676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 32), 'groupcounter')
    # Getting the type of 'grouplist' (line 955)
    grouplist_78677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 22), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 955)
    getitem___78678 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 955, 22), grouplist_78677, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 955)
    subscript_call_result_78679 = invoke(stypy.reporting.localization.Localization(__file__, 955, 22), getitem___78678, groupcounter_78676)
    
    # Testing the type of a for loop iterable (line 955)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 955, 12), subscript_call_result_78679)
    # Getting the type of the for loop variable (line 955)
    for_loop_var_78680 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 955, 12), subscript_call_result_78679)
    # Assigning a type to the variable 'it' (line 955)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 955, 12), 'it', for_loop_var_78680)
    # SSA begins for a for statement (line 955)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Obtaining the type of the subscript
    str_78681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 956, 22), 'str', 'name')
    # Getting the type of 'it' (line 956)
    it_78682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 19), 'it')
    # Obtaining the member '__getitem__' of a type (line 956)
    getitem___78683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 956, 19), it_78682, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 956)
    subscript_call_result_78684 = invoke(stypy.reporting.localization.Localization(__file__, 956, 19), getitem___78683, str_78681)
    
    # Getting the type of 'name' (line 956)
    name_78685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 33), 'name')
    # Applying the binary operator '==' (line 956)
    result_eq_78686 = python_operator(stypy.reporting.localization.Localization(__file__, 956, 19), '==', subscript_call_result_78684, name_78685)
    
    # Testing the type of an if condition (line 956)
    if_condition_78687 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 956, 16), result_eq_78686)
    # Assigning a type to the variable 'if_condition_78687' (line 956)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 956, 16), 'if_condition_78687', if_condition_78687)
    # SSA begins for if statement (line 956)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Assigning a type to the variable 'stypy_return_type' (line 957)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 957, 20), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 956)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'name' (line 958)
    name_78688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 15), 'name')
    
    # Obtaining the type of the subscript
    str_78689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 958, 48), 'str', 'interfaced')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 958)
    groupcounter_78690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 34), 'groupcounter')
    # Getting the type of 'groupcache' (line 958)
    groupcache_78691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 23), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 958)
    getitem___78692 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 958, 23), groupcache_78691, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 958)
    subscript_call_result_78693 = invoke(stypy.reporting.localization.Localization(__file__, 958, 23), getitem___78692, groupcounter_78690)
    
    # Obtaining the member '__getitem__' of a type (line 958)
    getitem___78694 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 958, 23), subscript_call_result_78693, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 958)
    subscript_call_result_78695 = invoke(stypy.reporting.localization.Localization(__file__, 958, 23), getitem___78694, str_78689)
    
    # Applying the binary operator 'in' (line 958)
    result_contains_78696 = python_operator(stypy.reporting.localization.Localization(__file__, 958, 15), 'in', name_78688, subscript_call_result_78695)
    
    # Testing the type of an if condition (line 958)
    if_condition_78697 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 958, 12), result_contains_78696)
    # Assigning a type to the variable 'if_condition_78697' (line 958)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 958, 12), 'if_condition_78697', if_condition_78697)
    # SSA begins for if statement (line 958)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Assigning a type to the variable 'stypy_return_type' (line 959)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 959, 16), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 958)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Name (line 960):
    
    # Assigning a Subscript to a Name (line 960):
    
    # Obtaining the type of the subscript
    # Getting the type of 'case' (line 960)
    case_78698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 66), 'case')
    
    # Obtaining an instance of the builtin type 'dict' (line 960)
    dict_78699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 960, 20), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 960)
    # Adding element type (key, value) (line 960)
    str_78700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 960, 21), 'str', 'call')
    str_78701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 960, 29), 'str', 'subroutine')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 960, 20), dict_78699, (str_78700, str_78701))
    # Adding element type (key, value) (line 960)
    str_78702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 960, 43), 'str', 'callfun')
    str_78703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 960, 54), 'str', 'function')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 960, 20), dict_78699, (str_78702, str_78703))
    
    # Obtaining the member '__getitem__' of a type (line 960)
    getitem___78704 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 960, 20), dict_78699, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 960)
    subscript_call_result_78705 = invoke(stypy.reporting.localization.Localization(__file__, 960, 20), getitem___78704, case_78698)
    
    # Assigning a type to the variable 'block' (line 960)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 960, 12), 'block', subscript_call_result_78705)
    # SSA join for if statement (line 949)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    # Getting the type of 'f77modulename' (line 961)
    f77modulename_78706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 11), 'f77modulename')
    
    # Getting the type of 'neededmodule' (line 961)
    neededmodule_78707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 29), 'neededmodule')
    int_78708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 961, 45), 'int')
    # Applying the binary operator '==' (line 961)
    result_eq_78709 = python_operator(stypy.reporting.localization.Localization(__file__, 961, 29), '==', neededmodule_78707, int_78708)
    
    # Applying the binary operator 'and' (line 961)
    result_and_keyword_78710 = python_operator(stypy.reporting.localization.Localization(__file__, 961, 11), 'and', f77modulename_78706, result_eq_78709)
    
    # Getting the type of 'groupcounter' (line 961)
    groupcounter_78711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 52), 'groupcounter')
    int_78712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 961, 68), 'int')
    # Applying the binary operator '<=' (line 961)
    result_le_78713 = python_operator(stypy.reporting.localization.Localization(__file__, 961, 52), '<=', groupcounter_78711, int_78712)
    
    # Applying the binary operator 'and' (line 961)
    result_and_keyword_78714 = python_operator(stypy.reporting.localization.Localization(__file__, 961, 11), 'and', result_and_keyword_78710, result_le_78713)
    
    # Testing the type of an if condition (line 961)
    if_condition_78715 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 961, 8), result_and_keyword_78714)
    # Assigning a type to the variable 'if_condition_78715' (line 961)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 961, 8), 'if_condition_78715', if_condition_78715)
    # SSA begins for if statement (line 961)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 962):
    
    # Assigning a BinOp to a Name (line 962):
    # Getting the type of 'groupcounter' (line 962)
    groupcounter_78716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 27), 'groupcounter')
    int_78717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 962, 42), 'int')
    # Applying the binary operator '+' (line 962)
    result_add_78718 = python_operator(stypy.reporting.localization.Localization(__file__, 962, 27), '+', groupcounter_78716, int_78717)
    
    # Assigning a type to the variable 'neededmodule' (line 962)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 962, 12), 'neededmodule', result_add_78718)
    
    # Assigning a Num to a Name (line 963):
    
    # Assigning a Num to a Name (line 963):
    int_78719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 963, 25), 'int')
    # Assigning a type to the variable 'needmodule' (line 963)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 963, 12), 'needmodule', int_78719)
    
    
    # Getting the type of 'block' (line 964)
    block_78720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 964, 15), 'block')
    str_78721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 964, 24), 'str', 'interface')
    # Applying the binary operator '!=' (line 964)
    result_ne_78722 = python_operator(stypy.reporting.localization.Localization(__file__, 964, 15), '!=', block_78720, str_78721)
    
    # Testing the type of an if condition (line 964)
    if_condition_78723 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 964, 12), result_ne_78722)
    # Assigning a type to the variable 'if_condition_78723' (line 964)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 964, 12), 'if_condition_78723', if_condition_78723)
    # SSA begins for if statement (line 964)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 965):
    
    # Assigning a Num to a Name (line 965):
    int_78724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 32), 'int')
    # Assigning a type to the variable 'needinterface' (line 965)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 965, 16), 'needinterface', int_78724)
    # SSA join for if statement (line 964)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 961)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 967):
    
    # Assigning a BinOp to a Name (line 967):
    # Getting the type of 'groupcounter' (line 967)
    groupcounter_78725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 967, 23), 'groupcounter')
    int_78726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 967, 38), 'int')
    # Applying the binary operator '+' (line 967)
    result_add_78727 = python_operator(stypy.reporting.localization.Localization(__file__, 967, 23), '+', groupcounter_78725, int_78726)
    
    # Assigning a type to the variable 'groupcounter' (line 967)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 967, 8), 'groupcounter', result_add_78727)
    
    # Assigning a Dict to a Subscript (line 968):
    
    # Assigning a Dict to a Subscript (line 968):
    
    # Obtaining an instance of the builtin type 'dict' (line 968)
    dict_78728 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 968, 35), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 968)
    
    # Getting the type of 'groupcache' (line 968)
    groupcache_78729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 8), 'groupcache')
    # Getting the type of 'groupcounter' (line 968)
    groupcounter_78730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 19), 'groupcounter')
    # Storing an element on a container (line 968)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 968, 8), groupcache_78729, (groupcounter_78730, dict_78728))
    
    # Assigning a List to a Subscript (line 969):
    
    # Assigning a List to a Subscript (line 969):
    
    # Obtaining an instance of the builtin type 'list' (line 969)
    list_78731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 969, 34), 'list')
    # Adding type elements to the builtin type 'list' instance (line 969)
    
    # Getting the type of 'grouplist' (line 969)
    grouplist_78732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 8), 'grouplist')
    # Getting the type of 'groupcounter' (line 969)
    groupcounter_78733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 18), 'groupcounter')
    # Storing an element on a container (line 969)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 969, 8), grouplist_78732, (groupcounter_78733, list_78731))
    
    # Getting the type of 'needmodule' (line 970)
    needmodule_78734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 11), 'needmodule')
    # Testing the type of an if condition (line 970)
    if_condition_78735 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 970, 8), needmodule_78734)
    # Assigning a type to the variable 'if_condition_78735' (line 970)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 970, 8), 'if_condition_78735', if_condition_78735)
    # SSA begins for if statement (line 970)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'verbose' (line 971)
    verbose_78736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 15), 'verbose')
    int_78737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 971, 25), 'int')
    # Applying the binary operator '>' (line 971)
    result_gt_78738 = python_operator(stypy.reporting.localization.Localization(__file__, 971, 15), '>', verbose_78736, int_78737)
    
    # Testing the type of an if condition (line 971)
    if_condition_78739 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 971, 12), result_gt_78738)
    # Assigning a type to the variable 'if_condition_78739' (line 971)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 971, 12), 'if_condition_78739', if_condition_78739)
    # SSA begins for if statement (line 971)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 972)
    # Processing the call arguments (line 972)
    str_78741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 972, 24), 'str', 'analyzeline: Creating module block %s\n')
    
    # Call to repr(...): (line 973)
    # Processing the call arguments (line 973)
    # Getting the type of 'f77modulename' (line 973)
    f77modulename_78743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 29), 'f77modulename', False)
    # Processing the call keyword arguments (line 973)
    kwargs_78744 = {}
    # Getting the type of 'repr' (line 973)
    repr_78742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 24), 'repr', False)
    # Calling repr(args, kwargs) (line 973)
    repr_call_result_78745 = invoke(stypy.reporting.localization.Localization(__file__, 973, 24), repr_78742, *[f77modulename_78743], **kwargs_78744)
    
    # Applying the binary operator '%' (line 972)
    result_mod_78746 = python_operator(stypy.reporting.localization.Localization(__file__, 972, 24), '%', str_78741, repr_call_result_78745)
    
    int_78747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 45), 'int')
    # Processing the call keyword arguments (line 972)
    kwargs_78748 = {}
    # Getting the type of 'outmess' (line 972)
    outmess_78740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 972, 16), 'outmess', False)
    # Calling outmess(args, kwargs) (line 972)
    outmess_call_result_78749 = invoke(stypy.reporting.localization.Localization(__file__, 972, 16), outmess_78740, *[result_mod_78746, int_78747], **kwargs_78748)
    
    # SSA join for if statement (line 971)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Str to a Subscript (line 974):
    
    # Assigning a Str to a Subscript (line 974):
    str_78750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 974, 38), 'str', 'module')
    # Getting the type of 'groupname' (line 974)
    groupname_78751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 12), 'groupname')
    # Getting the type of 'groupcounter' (line 974)
    groupcounter_78752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 22), 'groupcounter')
    # Storing an element on a container (line 974)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 974, 12), groupname_78751, (groupcounter_78752, str_78750))
    
    # Assigning a Str to a Subscript (line 975):
    
    # Assigning a Str to a Subscript (line 975):
    str_78753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 975, 48), 'str', 'python module')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 975)
    groupcounter_78754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 975, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 975)
    groupcache_78755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 975, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 975)
    getitem___78756 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 975, 12), groupcache_78755, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 975)
    subscript_call_result_78757 = invoke(stypy.reporting.localization.Localization(__file__, 975, 12), getitem___78756, groupcounter_78754)
    
    str_78758 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 975, 37), 'str', 'block')
    # Storing an element on a container (line 975)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 975, 12), subscript_call_result_78757, (str_78758, str_78753))
    
    # Assigning a Name to a Subscript (line 976):
    
    # Assigning a Name to a Subscript (line 976):
    # Getting the type of 'f77modulename' (line 976)
    f77modulename_78759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 47), 'f77modulename')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 976)
    groupcounter_78760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 976)
    groupcache_78761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 976)
    getitem___78762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 976, 12), groupcache_78761, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 976)
    subscript_call_result_78763 = invoke(stypy.reporting.localization.Localization(__file__, 976, 12), getitem___78762, groupcounter_78760)
    
    str_78764 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 37), 'str', 'name')
    # Storing an element on a container (line 976)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 976, 12), subscript_call_result_78763, (str_78764, f77modulename_78759))
    
    # Assigning a Str to a Subscript (line 977):
    
    # Assigning a Str to a Subscript (line 977):
    str_78765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 977, 47), 'str', '')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 977)
    groupcounter_78766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 977)
    groupcache_78767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 977)
    getitem___78768 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 977, 12), groupcache_78767, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 977)
    subscript_call_result_78769 = invoke(stypy.reporting.localization.Localization(__file__, 977, 12), getitem___78768, groupcounter_78766)
    
    str_78770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 977, 37), 'str', 'from')
    # Storing an element on a container (line 977)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 977, 12), subscript_call_result_78769, (str_78770, str_78765))
    
    # Assigning a List to a Subscript (line 978):
    
    # Assigning a List to a Subscript (line 978):
    
    # Obtaining an instance of the builtin type 'list' (line 978)
    list_78771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 978, 47), 'list')
    # Adding type elements to the builtin type 'list' instance (line 978)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 978)
    groupcounter_78772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 978)
    groupcache_78773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 978)
    getitem___78774 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 978, 12), groupcache_78773, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 978)
    subscript_call_result_78775 = invoke(stypy.reporting.localization.Localization(__file__, 978, 12), getitem___78774, groupcounter_78772)
    
    str_78776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 978, 37), 'str', 'body')
    # Storing an element on a container (line 978)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 978, 12), subscript_call_result_78775, (str_78776, list_78771))
    
    # Assigning a List to a Subscript (line 979):
    
    # Assigning a List to a Subscript (line 979):
    
    # Obtaining an instance of the builtin type 'list' (line 979)
    list_78777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 979, 52), 'list')
    # Adding type elements to the builtin type 'list' instance (line 979)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 979)
    groupcounter_78778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 979)
    groupcache_78779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 979)
    getitem___78780 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 12), groupcache_78779, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 979)
    subscript_call_result_78781 = invoke(stypy.reporting.localization.Localization(__file__, 979, 12), getitem___78780, groupcounter_78778)
    
    str_78782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 979, 37), 'str', 'externals')
    # Storing an element on a container (line 979)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 979, 12), subscript_call_result_78781, (str_78782, list_78777))
    
    # Assigning a List to a Subscript (line 980):
    
    # Assigning a List to a Subscript (line 980):
    
    # Obtaining an instance of the builtin type 'list' (line 980)
    list_78783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 980, 53), 'list')
    # Adding type elements to the builtin type 'list' instance (line 980)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 980)
    groupcounter_78784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 980)
    groupcache_78785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 980)
    getitem___78786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 980, 12), groupcache_78785, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 980)
    subscript_call_result_78787 = invoke(stypy.reporting.localization.Localization(__file__, 980, 12), getitem___78786, groupcounter_78784)
    
    str_78788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 980, 37), 'str', 'interfaced')
    # Storing an element on a container (line 980)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 980, 12), subscript_call_result_78787, (str_78788, list_78783))
    
    # Assigning a Dict to a Subscript (line 981):
    
    # Assigning a Dict to a Subscript (line 981):
    
    # Obtaining an instance of the builtin type 'dict' (line 981)
    dict_78789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 981, 47), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 981)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 981)
    groupcounter_78790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 981)
    groupcache_78791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 981)
    getitem___78792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 981, 12), groupcache_78791, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 981)
    subscript_call_result_78793 = invoke(stypy.reporting.localization.Localization(__file__, 981, 12), getitem___78792, groupcounter_78790)
    
    str_78794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 981, 37), 'str', 'vars')
    # Storing an element on a container (line 981)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 981, 12), subscript_call_result_78793, (str_78794, dict_78789))
    
    # Assigning a BinOp to a Name (line 982):
    
    # Assigning a BinOp to a Name (line 982):
    # Getting the type of 'groupcounter' (line 982)
    groupcounter_78795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 27), 'groupcounter')
    int_78796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 982, 42), 'int')
    # Applying the binary operator '+' (line 982)
    result_add_78797 = python_operator(stypy.reporting.localization.Localization(__file__, 982, 27), '+', groupcounter_78795, int_78796)
    
    # Assigning a type to the variable 'groupcounter' (line 982)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 982, 12), 'groupcounter', result_add_78797)
    
    # Assigning a Dict to a Subscript (line 983):
    
    # Assigning a Dict to a Subscript (line 983):
    
    # Obtaining an instance of the builtin type 'dict' (line 983)
    dict_78798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 983, 39), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 983)
    
    # Getting the type of 'groupcache' (line 983)
    groupcache_78799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 12), 'groupcache')
    # Getting the type of 'groupcounter' (line 983)
    groupcounter_78800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 23), 'groupcounter')
    # Storing an element on a container (line 983)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 983, 12), groupcache_78799, (groupcounter_78800, dict_78798))
    
    # Assigning a List to a Subscript (line 984):
    
    # Assigning a List to a Subscript (line 984):
    
    # Obtaining an instance of the builtin type 'list' (line 984)
    list_78801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 984, 38), 'list')
    # Adding type elements to the builtin type 'list' instance (line 984)
    
    # Getting the type of 'grouplist' (line 984)
    grouplist_78802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 12), 'grouplist')
    # Getting the type of 'groupcounter' (line 984)
    groupcounter_78803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 22), 'groupcounter')
    # Storing an element on a container (line 984)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 984, 12), grouplist_78802, (groupcounter_78803, list_78801))
    # SSA join for if statement (line 970)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'needinterface' (line 985)
    needinterface_78804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 11), 'needinterface')
    # Testing the type of an if condition (line 985)
    if_condition_78805 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 985, 8), needinterface_78804)
    # Assigning a type to the variable 'if_condition_78805' (line 985)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 985, 8), 'if_condition_78805', if_condition_78805)
    # SSA begins for if statement (line 985)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'verbose' (line 986)
    verbose_78806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 15), 'verbose')
    int_78807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 986, 25), 'int')
    # Applying the binary operator '>' (line 986)
    result_gt_78808 = python_operator(stypy.reporting.localization.Localization(__file__, 986, 15), '>', verbose_78806, int_78807)
    
    # Testing the type of an if condition (line 986)
    if_condition_78809 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 986, 12), result_gt_78808)
    # Assigning a type to the variable 'if_condition_78809' (line 986)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 986, 12), 'if_condition_78809', if_condition_78809)
    # SSA begins for if statement (line 986)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 987)
    # Processing the call arguments (line 987)
    str_78811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 987, 24), 'str', 'analyzeline: Creating additional interface block (groupcounter=%s).\n')
    # Getting the type of 'groupcounter' (line 988)
    groupcounter_78812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 20), 'groupcounter', False)
    # Applying the binary operator '%' (line 987)
    result_mod_78813 = python_operator(stypy.reporting.localization.Localization(__file__, 987, 24), '%', str_78811, groupcounter_78812)
    
    int_78814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 988, 35), 'int')
    # Processing the call keyword arguments (line 987)
    kwargs_78815 = {}
    # Getting the type of 'outmess' (line 987)
    outmess_78810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 16), 'outmess', False)
    # Calling outmess(args, kwargs) (line 987)
    outmess_call_result_78816 = invoke(stypy.reporting.localization.Localization(__file__, 987, 16), outmess_78810, *[result_mod_78813, int_78814], **kwargs_78815)
    
    # SSA join for if statement (line 986)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Str to a Subscript (line 989):
    
    # Assigning a Str to a Subscript (line 989):
    str_78817 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 38), 'str', 'interface')
    # Getting the type of 'groupname' (line 989)
    groupname_78818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 12), 'groupname')
    # Getting the type of 'groupcounter' (line 989)
    groupcounter_78819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 22), 'groupcounter')
    # Storing an element on a container (line 989)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 989, 12), groupname_78818, (groupcounter_78819, str_78817))
    
    # Assigning a Str to a Subscript (line 990):
    
    # Assigning a Str to a Subscript (line 990):
    str_78820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 990, 48), 'str', 'interface')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 990)
    groupcounter_78821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 990)
    groupcache_78822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 990)
    getitem___78823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 990, 12), groupcache_78822, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 990)
    subscript_call_result_78824 = invoke(stypy.reporting.localization.Localization(__file__, 990, 12), getitem___78823, groupcounter_78821)
    
    str_78825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 990, 37), 'str', 'block')
    # Storing an element on a container (line 990)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 990, 12), subscript_call_result_78824, (str_78825, str_78820))
    
    # Assigning a Str to a Subscript (line 991):
    
    # Assigning a Str to a Subscript (line 991):
    str_78826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 991, 47), 'str', 'unknown_interface')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 991)
    groupcounter_78827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 991)
    groupcache_78828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 991)
    getitem___78829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 991, 12), groupcache_78828, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 991)
    subscript_call_result_78830 = invoke(stypy.reporting.localization.Localization(__file__, 991, 12), getitem___78829, groupcounter_78827)
    
    str_78831 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 991, 37), 'str', 'name')
    # Storing an element on a container (line 991)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 991, 12), subscript_call_result_78830, (str_78831, str_78826))
    
    # Assigning a BinOp to a Subscript (line 992):
    
    # Assigning a BinOp to a Subscript (line 992):
    str_78832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 992, 47), 'str', '%s:%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 993)
    tuple_78833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 16), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 993)
    # Adding element type (line 993)
    
    # Obtaining the type of the subscript
    str_78834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 45), 'str', 'from')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 993)
    groupcounter_78835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 27), 'groupcounter')
    int_78836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 42), 'int')
    # Applying the binary operator '-' (line 993)
    result_sub_78837 = python_operator(stypy.reporting.localization.Localization(__file__, 993, 27), '-', groupcounter_78835, int_78836)
    
    # Getting the type of 'groupcache' (line 993)
    groupcache_78838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 16), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 993)
    getitem___78839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 993, 16), groupcache_78838, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 993)
    subscript_call_result_78840 = invoke(stypy.reporting.localization.Localization(__file__, 993, 16), getitem___78839, result_sub_78837)
    
    # Obtaining the member '__getitem__' of a type (line 993)
    getitem___78841 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 993, 16), subscript_call_result_78840, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 993)
    subscript_call_result_78842 = invoke(stypy.reporting.localization.Localization(__file__, 993, 16), getitem___78841, str_78834)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 993, 16), tuple_78833, subscript_call_result_78842)
    # Adding element type (line 993)
    
    # Obtaining the type of the subscript
    str_78843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 83), 'str', 'name')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 993)
    groupcounter_78844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 65), 'groupcounter')
    int_78845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 80), 'int')
    # Applying the binary operator '-' (line 993)
    result_sub_78846 = python_operator(stypy.reporting.localization.Localization(__file__, 993, 65), '-', groupcounter_78844, int_78845)
    
    # Getting the type of 'groupcache' (line 993)
    groupcache_78847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 54), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 993)
    getitem___78848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 993, 54), groupcache_78847, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 993)
    subscript_call_result_78849 = invoke(stypy.reporting.localization.Localization(__file__, 993, 54), getitem___78848, result_sub_78846)
    
    # Obtaining the member '__getitem__' of a type (line 993)
    getitem___78850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 993, 54), subscript_call_result_78849, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 993)
    subscript_call_result_78851 = invoke(stypy.reporting.localization.Localization(__file__, 993, 54), getitem___78850, str_78843)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 993, 16), tuple_78833, subscript_call_result_78851)
    
    # Applying the binary operator '%' (line 992)
    result_mod_78852 = python_operator(stypy.reporting.localization.Localization(__file__, 992, 47), '%', str_78832, tuple_78833)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 992)
    groupcounter_78853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 992)
    groupcache_78854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 992)
    getitem___78855 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 992, 12), groupcache_78854, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 992)
    subscript_call_result_78856 = invoke(stypy.reporting.localization.Localization(__file__, 992, 12), getitem___78855, groupcounter_78853)
    
    str_78857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 992, 37), 'str', 'from')
    # Storing an element on a container (line 992)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 992, 12), subscript_call_result_78856, (str_78857, result_mod_78852))
    
    # Assigning a List to a Subscript (line 994):
    
    # Assigning a List to a Subscript (line 994):
    
    # Obtaining an instance of the builtin type 'list' (line 994)
    list_78858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 994, 47), 'list')
    # Adding type elements to the builtin type 'list' instance (line 994)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 994)
    groupcounter_78859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 994)
    groupcache_78860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 994)
    getitem___78861 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 994, 12), groupcache_78860, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 994)
    subscript_call_result_78862 = invoke(stypy.reporting.localization.Localization(__file__, 994, 12), getitem___78861, groupcounter_78859)
    
    str_78863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 994, 37), 'str', 'body')
    # Storing an element on a container (line 994)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 994, 12), subscript_call_result_78862, (str_78863, list_78858))
    
    # Assigning a List to a Subscript (line 995):
    
    # Assigning a List to a Subscript (line 995):
    
    # Obtaining an instance of the builtin type 'list' (line 995)
    list_78864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 995, 52), 'list')
    # Adding type elements to the builtin type 'list' instance (line 995)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 995)
    groupcounter_78865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 995, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 995)
    groupcache_78866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 995, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 995)
    getitem___78867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 995, 12), groupcache_78866, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 995)
    subscript_call_result_78868 = invoke(stypy.reporting.localization.Localization(__file__, 995, 12), getitem___78867, groupcounter_78865)
    
    str_78869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 995, 37), 'str', 'externals')
    # Storing an element on a container (line 995)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 995, 12), subscript_call_result_78868, (str_78869, list_78864))
    
    # Assigning a List to a Subscript (line 996):
    
    # Assigning a List to a Subscript (line 996):
    
    # Obtaining an instance of the builtin type 'list' (line 996)
    list_78870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 996, 53), 'list')
    # Adding type elements to the builtin type 'list' instance (line 996)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 996)
    groupcounter_78871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 996)
    groupcache_78872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 996)
    getitem___78873 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 12), groupcache_78872, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 996)
    subscript_call_result_78874 = invoke(stypy.reporting.localization.Localization(__file__, 996, 12), getitem___78873, groupcounter_78871)
    
    str_78875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 996, 37), 'str', 'interfaced')
    # Storing an element on a container (line 996)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 996, 12), subscript_call_result_78874, (str_78875, list_78870))
    
    # Assigning a Dict to a Subscript (line 997):
    
    # Assigning a Dict to a Subscript (line 997):
    
    # Obtaining an instance of the builtin type 'dict' (line 997)
    dict_78876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 997, 47), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 997)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 997)
    groupcounter_78877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 997)
    groupcache_78878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 997)
    getitem___78879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 997, 12), groupcache_78878, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 997)
    subscript_call_result_78880 = invoke(stypy.reporting.localization.Localization(__file__, 997, 12), getitem___78879, groupcounter_78877)
    
    str_78881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 997, 37), 'str', 'vars')
    # Storing an element on a container (line 997)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 997, 12), subscript_call_result_78880, (str_78881, dict_78876))
    
    # Assigning a BinOp to a Name (line 998):
    
    # Assigning a BinOp to a Name (line 998):
    # Getting the type of 'groupcounter' (line 998)
    groupcounter_78882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 27), 'groupcounter')
    int_78883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 998, 42), 'int')
    # Applying the binary operator '+' (line 998)
    result_add_78884 = python_operator(stypy.reporting.localization.Localization(__file__, 998, 27), '+', groupcounter_78882, int_78883)
    
    # Assigning a type to the variable 'groupcounter' (line 998)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 998, 12), 'groupcounter', result_add_78884)
    
    # Assigning a Dict to a Subscript (line 999):
    
    # Assigning a Dict to a Subscript (line 999):
    
    # Obtaining an instance of the builtin type 'dict' (line 999)
    dict_78885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 39), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 999)
    
    # Getting the type of 'groupcache' (line 999)
    groupcache_78886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 12), 'groupcache')
    # Getting the type of 'groupcounter' (line 999)
    groupcounter_78887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 23), 'groupcounter')
    # Storing an element on a container (line 999)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 999, 12), groupcache_78886, (groupcounter_78887, dict_78885))
    
    # Assigning a List to a Subscript (line 1000):
    
    # Assigning a List to a Subscript (line 1000):
    
    # Obtaining an instance of the builtin type 'list' (line 1000)
    list_78888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1000, 38), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1000)
    
    # Getting the type of 'grouplist' (line 1000)
    grouplist_78889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 12), 'grouplist')
    # Getting the type of 'groupcounter' (line 1000)
    groupcounter_78890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 22), 'groupcounter')
    # Storing an element on a container (line 1000)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1000, 12), grouplist_78889, (groupcounter_78890, list_78888))
    # SSA join for if statement (line 985)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 1001):
    
    # Assigning a Name to a Subscript (line 1001):
    # Getting the type of 'block' (line 1001)
    block_78891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 34), 'block')
    # Getting the type of 'groupname' (line 1001)
    groupname_78892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 8), 'groupname')
    # Getting the type of 'groupcounter' (line 1001)
    groupcounter_78893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 18), 'groupcounter')
    # Storing an element on a container (line 1001)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1001, 8), groupname_78892, (groupcounter_78893, block_78891))
    
    # Assigning a Name to a Subscript (line 1002):
    
    # Assigning a Name to a Subscript (line 1002):
    # Getting the type of 'block' (line 1002)
    block_78894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 44), 'block')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1002)
    groupcounter_78895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 1002)
    groupcache_78896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1002)
    getitem___78897 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1002, 8), groupcache_78896, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1002)
    subscript_call_result_78898 = invoke(stypy.reporting.localization.Localization(__file__, 1002, 8), getitem___78897, groupcounter_78895)
    
    str_78899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1002, 33), 'str', 'block')
    # Storing an element on a container (line 1002)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1002, 8), subscript_call_result_78898, (str_78899, block_78894))
    
    
    # Getting the type of 'name' (line 1003)
    name_78900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 15), 'name')
    # Applying the 'not' unary operator (line 1003)
    result_not__78901 = python_operator(stypy.reporting.localization.Localization(__file__, 1003, 11), 'not', name_78900)
    
    # Testing the type of an if condition (line 1003)
    if_condition_78902 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1003, 8), result_not__78901)
    # Assigning a type to the variable 'if_condition_78902' (line 1003)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1003, 8), 'if_condition_78902', if_condition_78902)
    # SSA begins for if statement (line 1003)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1004):
    
    # Assigning a BinOp to a Name (line 1004):
    str_78903 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1004, 19), 'str', 'unknown_')
    # Getting the type of 'block' (line 1004)
    block_78904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 32), 'block')
    # Applying the binary operator '+' (line 1004)
    result_add_78905 = python_operator(stypy.reporting.localization.Localization(__file__, 1004, 19), '+', str_78903, block_78904)
    
    # Assigning a type to the variable 'name' (line 1004)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1004, 12), 'name', result_add_78905)
    # SSA join for if statement (line 1003)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Subscript (line 1005):
    
    # Assigning a Call to a Subscript (line 1005):
    
    # Call to group(...): (line 1005)
    # Processing the call arguments (line 1005)
    str_78908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 53), 'str', 'before')
    # Processing the call keyword arguments (line 1005)
    kwargs_78909 = {}
    # Getting the type of 'm' (line 1005)
    m_78906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 45), 'm', False)
    # Obtaining the member 'group' of a type (line 1005)
    group_78907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1005, 45), m_78906, 'group')
    # Calling group(args, kwargs) (line 1005)
    group_call_result_78910 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 45), group_78907, *[str_78908], **kwargs_78909)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1005)
    groupcounter_78911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 1005)
    groupcache_78912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1005)
    getitem___78913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1005, 8), groupcache_78912, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1005)
    subscript_call_result_78914 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 8), getitem___78913, groupcounter_78911)
    
    str_78915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 33), 'str', 'prefix')
    # Storing an element on a container (line 1005)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1005, 8), subscript_call_result_78914, (str_78915, group_call_result_78910))
    
    # Assigning a Call to a Subscript (line 1006):
    
    # Assigning a Call to a Subscript (line 1006):
    
    # Call to rmbadname1(...): (line 1006)
    # Processing the call arguments (line 1006)
    # Getting the type of 'name' (line 1006)
    name_78917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 54), 'name', False)
    # Processing the call keyword arguments (line 1006)
    kwargs_78918 = {}
    # Getting the type of 'rmbadname1' (line 1006)
    rmbadname1_78916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 43), 'rmbadname1', False)
    # Calling rmbadname1(args, kwargs) (line 1006)
    rmbadname1_call_result_78919 = invoke(stypy.reporting.localization.Localization(__file__, 1006, 43), rmbadname1_78916, *[name_78917], **kwargs_78918)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1006)
    groupcounter_78920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 1006)
    groupcache_78921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1006)
    getitem___78922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1006, 8), groupcache_78921, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1006)
    subscript_call_result_78923 = invoke(stypy.reporting.localization.Localization(__file__, 1006, 8), getitem___78922, groupcounter_78920)
    
    str_78924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1006, 33), 'str', 'name')
    # Storing an element on a container (line 1006)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1006, 8), subscript_call_result_78923, (str_78924, rmbadname1_call_result_78919))
    
    # Assigning a Name to a Subscript (line 1007):
    
    # Assigning a Name to a Subscript (line 1007):
    # Getting the type of 'result' (line 1007)
    result_78925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 45), 'result')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1007)
    groupcounter_78926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 1007)
    groupcache_78927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1007)
    getitem___78928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1007, 8), groupcache_78927, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1007)
    subscript_call_result_78929 = invoke(stypy.reporting.localization.Localization(__file__, 1007, 8), getitem___78928, groupcounter_78926)
    
    str_78930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1007, 33), 'str', 'result')
    # Storing an element on a container (line 1007)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1007, 8), subscript_call_result_78929, (str_78930, result_78925))
    
    
    # Getting the type of 'groupcounter' (line 1008)
    groupcounter_78931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 11), 'groupcounter')
    int_78932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1008, 27), 'int')
    # Applying the binary operator '==' (line 1008)
    result_eq_78933 = python_operator(stypy.reporting.localization.Localization(__file__, 1008, 11), '==', groupcounter_78931, int_78932)
    
    # Testing the type of an if condition (line 1008)
    if_condition_78934 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1008, 8), result_eq_78933)
    # Assigning a type to the variable 'if_condition_78934' (line 1008)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1008, 8), 'if_condition_78934', if_condition_78934)
    # SSA begins for if statement (line 1008)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Subscript (line 1009):
    
    # Assigning a Name to a Subscript (line 1009):
    # Getting the type of 'currentfilename' (line 1009)
    currentfilename_78935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 47), 'currentfilename')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1009)
    groupcounter_78936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 1009)
    groupcache_78937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1009)
    getitem___78938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1009, 12), groupcache_78937, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1009)
    subscript_call_result_78939 = invoke(stypy.reporting.localization.Localization(__file__, 1009, 12), getitem___78938, groupcounter_78936)
    
    str_78940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1009, 37), 'str', 'from')
    # Storing an element on a container (line 1009)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1009, 12), subscript_call_result_78939, (str_78940, currentfilename_78935))
    # SSA branch for the else part of an if statement (line 1008)
    module_type_store.open_ssa_branch('else')
    
    
    # Evaluating a boolean operation
    # Getting the type of 'f77modulename' (line 1011)
    f77modulename_78941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1011, 15), 'f77modulename')
    
    # Getting the type of 'groupcounter' (line 1011)
    groupcounter_78942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1011, 33), 'groupcounter')
    int_78943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1011, 49), 'int')
    # Applying the binary operator '==' (line 1011)
    result_eq_78944 = python_operator(stypy.reporting.localization.Localization(__file__, 1011, 33), '==', groupcounter_78942, int_78943)
    
    # Applying the binary operator 'and' (line 1011)
    result_and_keyword_78945 = python_operator(stypy.reporting.localization.Localization(__file__, 1011, 15), 'and', f77modulename_78941, result_eq_78944)
    
    # Testing the type of an if condition (line 1011)
    if_condition_78946 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1011, 12), result_and_keyword_78945)
    # Assigning a type to the variable 'if_condition_78946' (line 1011)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1011, 12), 'if_condition_78946', if_condition_78946)
    # SSA begins for if statement (line 1011)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Subscript (line 1012):
    
    # Assigning a BinOp to a Subscript (line 1012):
    str_78947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1012, 51), 'str', '%s:%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1013)
    tuple_78948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 20), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1013)
    # Adding element type (line 1013)
    
    # Obtaining the type of the subscript
    str_78949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 49), 'str', 'from')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1013)
    groupcounter_78950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 31), 'groupcounter')
    int_78951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 46), 'int')
    # Applying the binary operator '-' (line 1013)
    result_sub_78952 = python_operator(stypy.reporting.localization.Localization(__file__, 1013, 31), '-', groupcounter_78950, int_78951)
    
    # Getting the type of 'groupcache' (line 1013)
    groupcache_78953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 20), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1013)
    getitem___78954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1013, 20), groupcache_78953, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1013)
    subscript_call_result_78955 = invoke(stypy.reporting.localization.Localization(__file__, 1013, 20), getitem___78954, result_sub_78952)
    
    # Obtaining the member '__getitem__' of a type (line 1013)
    getitem___78956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1013, 20), subscript_call_result_78955, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1013)
    subscript_call_result_78957 = invoke(stypy.reporting.localization.Localization(__file__, 1013, 20), getitem___78956, str_78949)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1013, 20), tuple_78948, subscript_call_result_78957)
    # Adding element type (line 1013)
    # Getting the type of 'currentfilename' (line 1013)
    currentfilename_78958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 58), 'currentfilename')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1013, 20), tuple_78948, currentfilename_78958)
    
    # Applying the binary operator '%' (line 1012)
    result_mod_78959 = python_operator(stypy.reporting.localization.Localization(__file__, 1012, 51), '%', str_78947, tuple_78948)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1012)
    groupcounter_78960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 27), 'groupcounter')
    # Getting the type of 'groupcache' (line 1012)
    groupcache_78961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 16), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1012)
    getitem___78962 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 16), groupcache_78961, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1012)
    subscript_call_result_78963 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 16), getitem___78962, groupcounter_78960)
    
    str_78964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1012, 41), 'str', 'from')
    # Storing an element on a container (line 1012)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1012, 16), subscript_call_result_78963, (str_78964, result_mod_78959))
    # SSA branch for the else part of an if statement (line 1011)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Subscript (line 1015):
    
    # Assigning a BinOp to a Subscript (line 1015):
    str_78965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1015, 51), 'str', '%s:%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1016)
    tuple_78966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1016, 20), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1016)
    # Adding element type (line 1016)
    
    # Obtaining the type of the subscript
    str_78967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1016, 49), 'str', 'from')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1016)
    groupcounter_78968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 31), 'groupcounter')
    int_78969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1016, 46), 'int')
    # Applying the binary operator '-' (line 1016)
    result_sub_78970 = python_operator(stypy.reporting.localization.Localization(__file__, 1016, 31), '-', groupcounter_78968, int_78969)
    
    # Getting the type of 'groupcache' (line 1016)
    groupcache_78971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 20), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1016)
    getitem___78972 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1016, 20), groupcache_78971, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1016)
    subscript_call_result_78973 = invoke(stypy.reporting.localization.Localization(__file__, 1016, 20), getitem___78972, result_sub_78970)
    
    # Obtaining the member '__getitem__' of a type (line 1016)
    getitem___78974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1016, 20), subscript_call_result_78973, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1016)
    subscript_call_result_78975 = invoke(stypy.reporting.localization.Localization(__file__, 1016, 20), getitem___78974, str_78967)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1016, 20), tuple_78966, subscript_call_result_78975)
    # Adding element type (line 1016)
    
    # Obtaining the type of the subscript
    str_78976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1016, 87), 'str', 'name')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1016)
    groupcounter_78977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 69), 'groupcounter')
    int_78978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1016, 84), 'int')
    # Applying the binary operator '-' (line 1016)
    result_sub_78979 = python_operator(stypy.reporting.localization.Localization(__file__, 1016, 69), '-', groupcounter_78977, int_78978)
    
    # Getting the type of 'groupcache' (line 1016)
    groupcache_78980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 58), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1016)
    getitem___78981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1016, 58), groupcache_78980, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1016)
    subscript_call_result_78982 = invoke(stypy.reporting.localization.Localization(__file__, 1016, 58), getitem___78981, result_sub_78979)
    
    # Obtaining the member '__getitem__' of a type (line 1016)
    getitem___78983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1016, 58), subscript_call_result_78982, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1016)
    subscript_call_result_78984 = invoke(stypy.reporting.localization.Localization(__file__, 1016, 58), getitem___78983, str_78976)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1016, 20), tuple_78966, subscript_call_result_78984)
    
    # Applying the binary operator '%' (line 1015)
    result_mod_78985 = python_operator(stypy.reporting.localization.Localization(__file__, 1015, 51), '%', str_78965, tuple_78966)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1015)
    groupcounter_78986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 27), 'groupcounter')
    # Getting the type of 'groupcache' (line 1015)
    groupcache_78987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 16), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1015)
    getitem___78988 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1015, 16), groupcache_78987, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1015)
    subscript_call_result_78989 = invoke(stypy.reporting.localization.Localization(__file__, 1015, 16), getitem___78988, groupcounter_78986)
    
    str_78990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1015, 41), 'str', 'from')
    # Storing an element on a container (line 1015)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1015, 16), subscript_call_result_78989, (str_78990, result_mod_78985))
    # SSA join for if statement (line 1011)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1008)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to list(...): (line 1017)
    # Processing the call arguments (line 1017)
    
    # Call to keys(...): (line 1017)
    # Processing the call keyword arguments (line 1017)
    kwargs_78997 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1017)
    groupcounter_78992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1017, 33), 'groupcounter', False)
    # Getting the type of 'groupcache' (line 1017)
    groupcache_78993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1017, 22), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 1017)
    getitem___78994 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1017, 22), groupcache_78993, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1017)
    subscript_call_result_78995 = invoke(stypy.reporting.localization.Localization(__file__, 1017, 22), getitem___78994, groupcounter_78992)
    
    # Obtaining the member 'keys' of a type (line 1017)
    keys_78996 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1017, 22), subscript_call_result_78995, 'keys')
    # Calling keys(args, kwargs) (line 1017)
    keys_call_result_78998 = invoke(stypy.reporting.localization.Localization(__file__, 1017, 22), keys_78996, *[], **kwargs_78997)
    
    # Processing the call keyword arguments (line 1017)
    kwargs_78999 = {}
    # Getting the type of 'list' (line 1017)
    list_78991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1017, 17), 'list', False)
    # Calling list(args, kwargs) (line 1017)
    list_call_result_79000 = invoke(stypy.reporting.localization.Localization(__file__, 1017, 17), list_78991, *[keys_call_result_78998], **kwargs_78999)
    
    # Testing the type of a for loop iterable (line 1017)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1017, 8), list_call_result_79000)
    # Getting the type of the for loop variable (line 1017)
    for_loop_var_79001 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1017, 8), list_call_result_79000)
    # Assigning a type to the variable 'k' (line 1017)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1017, 8), 'k', for_loop_var_79001)
    # SSA begins for a for statement (line 1017)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1018)
    k_79002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 44), 'k')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1018)
    groupcounter_79003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 30), 'groupcounter')
    # Getting the type of 'groupcache' (line 1018)
    groupcache_79004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 19), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1018)
    getitem___79005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1018, 19), groupcache_79004, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1018)
    subscript_call_result_79006 = invoke(stypy.reporting.localization.Localization(__file__, 1018, 19), getitem___79005, groupcounter_79003)
    
    # Obtaining the member '__getitem__' of a type (line 1018)
    getitem___79007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1018, 19), subscript_call_result_79006, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1018)
    subscript_call_result_79008 = invoke(stypy.reporting.localization.Localization(__file__, 1018, 19), getitem___79007, k_79002)
    
    # Applying the 'not' unary operator (line 1018)
    result_not__79009 = python_operator(stypy.reporting.localization.Localization(__file__, 1018, 15), 'not', subscript_call_result_79008)
    
    # Testing the type of an if condition (line 1018)
    if_condition_79010 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1018, 12), result_not__79009)
    # Assigning a type to the variable 'if_condition_79010' (line 1018)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1018, 12), 'if_condition_79010', if_condition_79010)
    # SSA begins for if statement (line 1018)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Deleting a member
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1019)
    groupcounter_79011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1019, 31), 'groupcounter')
    # Getting the type of 'groupcache' (line 1019)
    groupcache_79012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1019, 20), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1019)
    getitem___79013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1019, 20), groupcache_79012, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1019)
    subscript_call_result_79014 = invoke(stypy.reporting.localization.Localization(__file__, 1019, 20), getitem___79013, groupcounter_79011)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1019)
    k_79015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1019, 45), 'k')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1019)
    groupcounter_79016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1019, 31), 'groupcounter')
    # Getting the type of 'groupcache' (line 1019)
    groupcache_79017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1019, 20), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1019)
    getitem___79018 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1019, 20), groupcache_79017, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1019)
    subscript_call_result_79019 = invoke(stypy.reporting.localization.Localization(__file__, 1019, 20), getitem___79018, groupcounter_79016)
    
    # Obtaining the member '__getitem__' of a type (line 1019)
    getitem___79020 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1019, 20), subscript_call_result_79019, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1019)
    subscript_call_result_79021 = invoke(stypy.reporting.localization.Localization(__file__, 1019, 20), getitem___79020, k_79015)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1019, 16), subscript_call_result_79014, subscript_call_result_79021)
    # SSA join for if statement (line 1018)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 1021):
    
    # Assigning a Name to a Subscript (line 1021):
    # Getting the type of 'args' (line 1021)
    args_79022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 43), 'args')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1021)
    groupcounter_79023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 1021)
    groupcache_79024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1021)
    getitem___79025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1021, 8), groupcache_79024, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1021)
    subscript_call_result_79026 = invoke(stypy.reporting.localization.Localization(__file__, 1021, 8), getitem___79025, groupcounter_79023)
    
    str_79027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1021, 33), 'str', 'args')
    # Storing an element on a container (line 1021)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1021, 8), subscript_call_result_79026, (str_79027, args_79022))
    
    # Assigning a List to a Subscript (line 1022):
    
    # Assigning a List to a Subscript (line 1022):
    
    # Obtaining an instance of the builtin type 'list' (line 1022)
    list_79028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1022, 43), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1022)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1022)
    groupcounter_79029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 1022)
    groupcache_79030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1022)
    getitem___79031 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1022, 8), groupcache_79030, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1022)
    subscript_call_result_79032 = invoke(stypy.reporting.localization.Localization(__file__, 1022, 8), getitem___79031, groupcounter_79029)
    
    str_79033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1022, 33), 'str', 'body')
    # Storing an element on a container (line 1022)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1022, 8), subscript_call_result_79032, (str_79033, list_79028))
    
    # Assigning a List to a Subscript (line 1023):
    
    # Assigning a List to a Subscript (line 1023):
    
    # Obtaining an instance of the builtin type 'list' (line 1023)
    list_79034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1023, 48), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1023)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1023)
    groupcounter_79035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 1023)
    groupcache_79036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1023)
    getitem___79037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1023, 8), groupcache_79036, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1023)
    subscript_call_result_79038 = invoke(stypy.reporting.localization.Localization(__file__, 1023, 8), getitem___79037, groupcounter_79035)
    
    str_79039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1023, 33), 'str', 'externals')
    # Storing an element on a container (line 1023)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1023, 8), subscript_call_result_79038, (str_79039, list_79034))
    
    # Assigning a List to a Subscript (line 1024):
    
    # Assigning a List to a Subscript (line 1024):
    
    # Obtaining an instance of the builtin type 'list' (line 1024)
    list_79040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1024, 49), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1024)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1024)
    groupcounter_79041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 1024)
    groupcache_79042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1024)
    getitem___79043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1024, 8), groupcache_79042, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1024)
    subscript_call_result_79044 = invoke(stypy.reporting.localization.Localization(__file__, 1024, 8), getitem___79043, groupcounter_79041)
    
    str_79045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1024, 33), 'str', 'interfaced')
    # Storing an element on a container (line 1024)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1024, 8), subscript_call_result_79044, (str_79045, list_79040))
    
    # Assigning a Dict to a Subscript (line 1025):
    
    # Assigning a Dict to a Subscript (line 1025):
    
    # Obtaining an instance of the builtin type 'dict' (line 1025)
    dict_79046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1025, 43), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1025)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1025)
    groupcounter_79047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 1025)
    groupcache_79048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1025)
    getitem___79049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1025, 8), groupcache_79048, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1025)
    subscript_call_result_79050 = invoke(stypy.reporting.localization.Localization(__file__, 1025, 8), getitem___79049, groupcounter_79047)
    
    str_79051 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1025, 33), 'str', 'vars')
    # Storing an element on a container (line 1025)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1025, 8), subscript_call_result_79050, (str_79051, dict_79046))
    
    # Assigning a Dict to a Subscript (line 1026):
    
    # Assigning a Dict to a Subscript (line 1026):
    
    # Obtaining an instance of the builtin type 'dict' (line 1026)
    dict_79052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1026, 44), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1026)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1026)
    groupcounter_79053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 1026)
    groupcache_79054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1026)
    getitem___79055 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1026, 8), groupcache_79054, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1026)
    subscript_call_result_79056 = invoke(stypy.reporting.localization.Localization(__file__, 1026, 8), getitem___79055, groupcounter_79053)
    
    str_79057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1026, 33), 'str', 'entry')
    # Storing an element on a container (line 1026)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1026, 8), subscript_call_result_79056, (str_79057, dict_79052))
    
    
    # Getting the type of 'block' (line 1028)
    block_79058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 11), 'block')
    str_79059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1028, 20), 'str', 'type')
    # Applying the binary operator '==' (line 1028)
    result_eq_79060 = python_operator(stypy.reporting.localization.Localization(__file__, 1028, 11), '==', block_79058, str_79059)
    
    # Testing the type of an if condition (line 1028)
    if_condition_79061 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1028, 8), result_eq_79060)
    # Assigning a type to the variable 'if_condition_79061' (line 1028)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1028, 8), 'if_condition_79061', if_condition_79061)
    # SSA begins for if statement (line 1028)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Subscript (line 1029):
    
    # Assigning a List to a Subscript (line 1029):
    
    # Obtaining an instance of the builtin type 'list' (line 1029)
    list_79062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 51), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1029)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1029)
    groupcounter_79063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 1029)
    groupcache_79064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1029)
    getitem___79065 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1029, 12), groupcache_79064, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1029)
    subscript_call_result_79066 = invoke(stypy.reporting.localization.Localization(__file__, 1029, 12), getitem___79065, groupcounter_79063)
    
    str_79067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 37), 'str', 'varnames')
    # Storing an element on a container (line 1029)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1029, 12), subscript_call_result_79066, (str_79067, list_79062))
    # SSA join for if statement (line 1028)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'case' (line 1031)
    case_79068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1031, 11), 'case')
    
    # Obtaining an instance of the builtin type 'list' (line 1031)
    list_79069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1031, 19), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1031)
    # Adding element type (line 1031)
    str_79070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1031, 20), 'str', 'call')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1031, 19), list_79069, str_79070)
    # Adding element type (line 1031)
    str_79071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1031, 28), 'str', 'callfun')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1031, 19), list_79069, str_79071)
    
    # Applying the binary operator 'in' (line 1031)
    result_contains_79072 = python_operator(stypy.reporting.localization.Localization(__file__, 1031, 11), 'in', case_79068, list_79069)
    
    # Testing the type of an if condition (line 1031)
    if_condition_79073 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1031, 8), result_contains_79072)
    # Assigning a type to the variable 'if_condition_79073' (line 1031)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1031, 8), 'if_condition_79073', if_condition_79073)
    # SSA begins for if statement (line 1031)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'name' (line 1032)
    name_79074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 15), 'name')
    
    # Obtaining the type of the subscript
    str_79075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1032, 56), 'str', 'externals')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1032)
    groupcounter_79076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 38), 'groupcounter')
    int_79077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1032, 53), 'int')
    # Applying the binary operator '-' (line 1032)
    result_sub_79078 = python_operator(stypy.reporting.localization.Localization(__file__, 1032, 38), '-', groupcounter_79076, int_79077)
    
    # Getting the type of 'groupcache' (line 1032)
    groupcache_79079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 27), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1032)
    getitem___79080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1032, 27), groupcache_79079, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1032)
    subscript_call_result_79081 = invoke(stypy.reporting.localization.Localization(__file__, 1032, 27), getitem___79080, result_sub_79078)
    
    # Obtaining the member '__getitem__' of a type (line 1032)
    getitem___79082 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1032, 27), subscript_call_result_79081, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1032)
    subscript_call_result_79083 = invoke(stypy.reporting.localization.Localization(__file__, 1032, 27), getitem___79082, str_79075)
    
    # Applying the binary operator 'notin' (line 1032)
    result_contains_79084 = python_operator(stypy.reporting.localization.Localization(__file__, 1032, 15), 'notin', name_79074, subscript_call_result_79083)
    
    # Testing the type of an if condition (line 1032)
    if_condition_79085 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1032, 12), result_contains_79084)
    # Assigning a type to the variable 'if_condition_79085' (line 1032)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1032, 12), 'if_condition_79085', if_condition_79085)
    # SSA begins for if statement (line 1032)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1033)
    # Processing the call arguments (line 1033)
    # Getting the type of 'name' (line 1033)
    name_79096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 65), 'name', False)
    # Processing the call keyword arguments (line 1033)
    kwargs_79097 = {}
    
    # Obtaining the type of the subscript
    str_79086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1033, 45), 'str', 'externals')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1033)
    groupcounter_79087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 27), 'groupcounter', False)
    int_79088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1033, 42), 'int')
    # Applying the binary operator '-' (line 1033)
    result_sub_79089 = python_operator(stypy.reporting.localization.Localization(__file__, 1033, 27), '-', groupcounter_79087, int_79088)
    
    # Getting the type of 'groupcache' (line 1033)
    groupcache_79090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 16), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 1033)
    getitem___79091 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1033, 16), groupcache_79090, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1033)
    subscript_call_result_79092 = invoke(stypy.reporting.localization.Localization(__file__, 1033, 16), getitem___79091, result_sub_79089)
    
    # Obtaining the member '__getitem__' of a type (line 1033)
    getitem___79093 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1033, 16), subscript_call_result_79092, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1033)
    subscript_call_result_79094 = invoke(stypy.reporting.localization.Localization(__file__, 1033, 16), getitem___79093, str_79086)
    
    # Obtaining the member 'append' of a type (line 1033)
    append_79095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1033, 16), subscript_call_result_79094, 'append')
    # Calling append(args, kwargs) (line 1033)
    append_call_result_79098 = invoke(stypy.reporting.localization.Localization(__file__, 1033, 16), append_79095, *[name_79096], **kwargs_79097)
    
    # SSA join for if statement (line 1032)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Subscript (line 1034):
    
    # Assigning a Call to a Subscript (line 1034):
    
    # Call to deepcopy(...): (line 1034)
    # Processing the call arguments (line 1034)
    
    # Obtaining the type of the subscript
    str_79101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 45), 'str', 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1035)
    groupcounter_79102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 27), 'groupcounter', False)
    int_79103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 42), 'int')
    # Applying the binary operator '-' (line 1035)
    result_sub_79104 = python_operator(stypy.reporting.localization.Localization(__file__, 1035, 27), '-', groupcounter_79102, int_79103)
    
    # Getting the type of 'groupcache' (line 1035)
    groupcache_79105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 16), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 1035)
    getitem___79106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 16), groupcache_79105, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1035)
    subscript_call_result_79107 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 16), getitem___79106, result_sub_79104)
    
    # Obtaining the member '__getitem__' of a type (line 1035)
    getitem___79108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 16), subscript_call_result_79107, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1035)
    subscript_call_result_79109 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 16), getitem___79108, str_79101)
    
    # Processing the call keyword arguments (line 1034)
    kwargs_79110 = {}
    # Getting the type of 'copy' (line 1034)
    copy_79099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 47), 'copy', False)
    # Obtaining the member 'deepcopy' of a type (line 1034)
    deepcopy_79100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 47), copy_79099, 'deepcopy')
    # Calling deepcopy(args, kwargs) (line 1034)
    deepcopy_call_result_79111 = invoke(stypy.reporting.localization.Localization(__file__, 1034, 47), deepcopy_79100, *[subscript_call_result_79109], **kwargs_79110)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1034)
    groupcounter_79112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 1034)
    groupcache_79113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1034)
    getitem___79114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 12), groupcache_79113, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1034)
    subscript_call_result_79115 = invoke(stypy.reporting.localization.Localization(__file__, 1034, 12), getitem___79114, groupcounter_79112)
    
    str_79116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1034, 37), 'str', 'vars')
    # Storing an element on a container (line 1034)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1034, 12), subscript_call_result_79115, (str_79116, deepcopy_call_result_79111))
    
    
    # SSA begins for try-except statement (line 1036)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    # Deleting a member
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 1037)
    name_79117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 53), 'name')
    
    # Obtaining the type of the subscript
    str_79118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1037, 45), 'str', 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1037)
    groupcounter_79119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 31), 'groupcounter')
    # Getting the type of 'groupcache' (line 1037)
    groupcache_79120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 20), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1037)
    getitem___79121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1037, 20), groupcache_79120, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1037)
    subscript_call_result_79122 = invoke(stypy.reporting.localization.Localization(__file__, 1037, 20), getitem___79121, groupcounter_79119)
    
    # Obtaining the member '__getitem__' of a type (line 1037)
    getitem___79123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1037, 20), subscript_call_result_79122, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1037)
    subscript_call_result_79124 = invoke(stypy.reporting.localization.Localization(__file__, 1037, 20), getitem___79123, str_79118)
    
    # Obtaining the member '__getitem__' of a type (line 1037)
    getitem___79125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1037, 20), subscript_call_result_79124, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1037)
    subscript_call_result_79126 = invoke(stypy.reporting.localization.Localization(__file__, 1037, 20), getitem___79125, name_79117)
    
    
    # Obtaining the type of the subscript
    
    # Call to index(...): (line 1038)
    # Processing the call arguments (line 1038)
    str_79141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 77), 'str', 'external')
    # Processing the call keyword arguments (line 1038)
    kwargs_79142 = {}
    
    # Obtaining the type of the subscript
    str_79127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 59), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 1038)
    name_79128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 53), 'name', False)
    
    # Obtaining the type of the subscript
    str_79129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 45), 'str', 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1038)
    groupcounter_79130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 31), 'groupcounter', False)
    # Getting the type of 'groupcache' (line 1038)
    groupcache_79131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 20), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 1038)
    getitem___79132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1038, 20), groupcache_79131, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1038)
    subscript_call_result_79133 = invoke(stypy.reporting.localization.Localization(__file__, 1038, 20), getitem___79132, groupcounter_79130)
    
    # Obtaining the member '__getitem__' of a type (line 1038)
    getitem___79134 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1038, 20), subscript_call_result_79133, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1038)
    subscript_call_result_79135 = invoke(stypy.reporting.localization.Localization(__file__, 1038, 20), getitem___79134, str_79129)
    
    # Obtaining the member '__getitem__' of a type (line 1038)
    getitem___79136 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1038, 20), subscript_call_result_79135, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1038)
    subscript_call_result_79137 = invoke(stypy.reporting.localization.Localization(__file__, 1038, 20), getitem___79136, name_79128)
    
    # Obtaining the member '__getitem__' of a type (line 1038)
    getitem___79138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1038, 20), subscript_call_result_79137, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1038)
    subscript_call_result_79139 = invoke(stypy.reporting.localization.Localization(__file__, 1038, 20), getitem___79138, str_79127)
    
    # Obtaining the member 'index' of a type (line 1038)
    index_79140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1038, 20), subscript_call_result_79139, 'index')
    # Calling index(args, kwargs) (line 1038)
    index_call_result_79143 = invoke(stypy.reporting.localization.Localization(__file__, 1038, 20), index_79140, *[str_79141], **kwargs_79142)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 1037)
    name_79144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 53), 'name')
    
    # Obtaining the type of the subscript
    str_79145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1037, 45), 'str', 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1037)
    groupcounter_79146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 31), 'groupcounter')
    # Getting the type of 'groupcache' (line 1037)
    groupcache_79147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 20), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1037)
    getitem___79148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1037, 20), groupcache_79147, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1037)
    subscript_call_result_79149 = invoke(stypy.reporting.localization.Localization(__file__, 1037, 20), getitem___79148, groupcounter_79146)
    
    # Obtaining the member '__getitem__' of a type (line 1037)
    getitem___79150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1037, 20), subscript_call_result_79149, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1037)
    subscript_call_result_79151 = invoke(stypy.reporting.localization.Localization(__file__, 1037, 20), getitem___79150, str_79145)
    
    # Obtaining the member '__getitem__' of a type (line 1037)
    getitem___79152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1037, 20), subscript_call_result_79151, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1037)
    subscript_call_result_79153 = invoke(stypy.reporting.localization.Localization(__file__, 1037, 20), getitem___79152, name_79144)
    
    # Obtaining the member '__getitem__' of a type (line 1037)
    getitem___79154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1037, 20), subscript_call_result_79153, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1037)
    subscript_call_result_79155 = invoke(stypy.reporting.localization.Localization(__file__, 1037, 20), getitem___79154, index_call_result_79143)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1037, 16), subscript_call_result_79126, subscript_call_result_79155)
    # SSA branch for the except part of a try statement (line 1036)
    # SSA branch for the except '<any exception>' branch of a try statement (line 1036)
    module_type_store.open_ssa_branch('except')
    pass
    # SSA join for try-except statement (line 1036)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1031)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'block' (line 1041)
    block_79156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 11), 'block')
    
    # Obtaining an instance of the builtin type 'list' (line 1041)
    list_79157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1041, 20), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1041)
    # Adding element type (line 1041)
    str_79158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1041, 21), 'str', 'function')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1041, 20), list_79157, str_79158)
    # Adding element type (line 1041)
    str_79159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1041, 33), 'str', 'subroutine')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1041, 20), list_79157, str_79159)
    
    # Applying the binary operator 'in' (line 1041)
    result_contains_79160 = python_operator(stypy.reporting.localization.Localization(__file__, 1041, 11), 'in', block_79156, list_79157)
    
    # Testing the type of an if condition (line 1041)
    if_condition_79161 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1041, 8), result_contains_79160)
    # Assigning a type to the variable 'if_condition_79161' (line 1041)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1041, 8), 'if_condition_79161', if_condition_79161)
    # SSA begins for if statement (line 1041)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # SSA begins for try-except statement (line 1042)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Subscript (line 1043):
    
    # Assigning a Call to a Subscript (line 1043):
    
    # Call to appenddecl(...): (line 1043)
    # Processing the call arguments (line 1043)
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 1044)
    name_79163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1044, 53), 'name', False)
    
    # Obtaining the type of the subscript
    str_79164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 45), 'str', 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1044)
    groupcounter_79165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1044, 31), 'groupcounter', False)
    # Getting the type of 'groupcache' (line 1044)
    groupcache_79166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1044, 20), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 1044)
    getitem___79167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1044, 20), groupcache_79166, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1044)
    subscript_call_result_79168 = invoke(stypy.reporting.localization.Localization(__file__, 1044, 20), getitem___79167, groupcounter_79165)
    
    # Obtaining the member '__getitem__' of a type (line 1044)
    getitem___79169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1044, 20), subscript_call_result_79168, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1044)
    subscript_call_result_79170 = invoke(stypy.reporting.localization.Localization(__file__, 1044, 20), getitem___79169, str_79164)
    
    # Obtaining the member '__getitem__' of a type (line 1044)
    getitem___79171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1044, 20), subscript_call_result_79170, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1044)
    subscript_call_result_79172 = invoke(stypy.reporting.localization.Localization(__file__, 1044, 20), getitem___79171, name_79163)
    
    
    # Obtaining the type of the subscript
    str_79173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 97), 'str', '')
    
    # Obtaining the type of the subscript
    str_79174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 89), 'str', 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1044)
    groupcounter_79175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1044, 71), 'groupcounter', False)
    int_79176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 86), 'int')
    # Applying the binary operator '-' (line 1044)
    result_sub_79177 = python_operator(stypy.reporting.localization.Localization(__file__, 1044, 71), '-', groupcounter_79175, int_79176)
    
    # Getting the type of 'groupcache' (line 1044)
    groupcache_79178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1044, 60), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 1044)
    getitem___79179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1044, 60), groupcache_79178, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1044)
    subscript_call_result_79180 = invoke(stypy.reporting.localization.Localization(__file__, 1044, 60), getitem___79179, result_sub_79177)
    
    # Obtaining the member '__getitem__' of a type (line 1044)
    getitem___79181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1044, 60), subscript_call_result_79180, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1044)
    subscript_call_result_79182 = invoke(stypy.reporting.localization.Localization(__file__, 1044, 60), getitem___79181, str_79174)
    
    # Obtaining the member '__getitem__' of a type (line 1044)
    getitem___79183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1044, 60), subscript_call_result_79182, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1044)
    subscript_call_result_79184 = invoke(stypy.reporting.localization.Localization(__file__, 1044, 60), getitem___79183, str_79173)
    
    # Processing the call keyword arguments (line 1043)
    kwargs_79185 = {}
    # Getting the type of 'appenddecl' (line 1043)
    appenddecl_79162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 57), 'appenddecl', False)
    # Calling appenddecl(args, kwargs) (line 1043)
    appenddecl_call_result_79186 = invoke(stypy.reporting.localization.Localization(__file__, 1043, 57), appenddecl_79162, *[subscript_call_result_79172, subscript_call_result_79184], **kwargs_79185)
    
    
    # Obtaining the type of the subscript
    str_79187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1043, 41), 'str', 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1043)
    groupcounter_79188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 27), 'groupcounter')
    # Getting the type of 'groupcache' (line 1043)
    groupcache_79189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 16), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1043)
    getitem___79190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1043, 16), groupcache_79189, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1043)
    subscript_call_result_79191 = invoke(stypy.reporting.localization.Localization(__file__, 1043, 16), getitem___79190, groupcounter_79188)
    
    # Obtaining the member '__getitem__' of a type (line 1043)
    getitem___79192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1043, 16), subscript_call_result_79191, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1043)
    subscript_call_result_79193 = invoke(stypy.reporting.localization.Localization(__file__, 1043, 16), getitem___79192, str_79187)
    
    # Getting the type of 'name' (line 1043)
    name_79194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 49), 'name')
    # Storing an element on a container (line 1043)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1043, 16), subscript_call_result_79193, (name_79194, appenddecl_call_result_79186))
    # SSA branch for the except part of a try statement (line 1042)
    # SSA branch for the except '<any exception>' branch of a try statement (line 1042)
    module_type_store.open_ssa_branch('except')
    pass
    # SSA join for try-except statement (line 1042)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'case' (line 1047)
    case_79195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 15), 'case')
    str_79196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1047, 23), 'str', 'callfun')
    # Applying the binary operator '==' (line 1047)
    result_eq_79197 = python_operator(stypy.reporting.localization.Localization(__file__, 1047, 15), '==', case_79195, str_79196)
    
    # Testing the type of an if condition (line 1047)
    if_condition_79198 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1047, 12), result_eq_79197)
    # Assigning a type to the variable 'if_condition_79198' (line 1047)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1047, 12), 'if_condition_79198', if_condition_79198)
    # SSA begins for if statement (line 1047)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    # Getting the type of 'result' (line 1048)
    result_79199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 19), 'result')
    
    # Getting the type of 'result' (line 1048)
    result_79200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 30), 'result')
    
    # Obtaining the type of the subscript
    str_79201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1048, 65), 'str', 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1048)
    groupcounter_79202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 51), 'groupcounter')
    # Getting the type of 'groupcache' (line 1048)
    groupcache_79203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 40), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1048)
    getitem___79204 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1048, 40), groupcache_79203, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1048)
    subscript_call_result_79205 = invoke(stypy.reporting.localization.Localization(__file__, 1048, 40), getitem___79204, groupcounter_79202)
    
    # Obtaining the member '__getitem__' of a type (line 1048)
    getitem___79206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1048, 40), subscript_call_result_79205, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1048)
    subscript_call_result_79207 = invoke(stypy.reporting.localization.Localization(__file__, 1048, 40), getitem___79206, str_79201)
    
    # Applying the binary operator 'in' (line 1048)
    result_contains_79208 = python_operator(stypy.reporting.localization.Localization(__file__, 1048, 30), 'in', result_79200, subscript_call_result_79207)
    
    # Applying the binary operator 'and' (line 1048)
    result_and_keyword_79209 = python_operator(stypy.reporting.localization.Localization(__file__, 1048, 19), 'and', result_79199, result_contains_79208)
    
    # Testing the type of an if condition (line 1048)
    if_condition_79210 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1048, 16), result_and_keyword_79209)
    # Assigning a type to the variable 'if_condition_79210' (line 1048)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1048, 16), 'if_condition_79210', if_condition_79210)
    # SSA begins for if statement (line 1048)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Getting the type of 'name' (line 1049)
    name_79211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 27), 'name')
    # Getting the type of 'result' (line 1049)
    result_79212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 35), 'result')
    # Applying the binary operator '==' (line 1049)
    result_eq_79213 = python_operator(stypy.reporting.localization.Localization(__file__, 1049, 27), '==', name_79211, result_79212)
    
    # Applying the 'not' unary operator (line 1049)
    result_not__79214 = python_operator(stypy.reporting.localization.Localization(__file__, 1049, 23), 'not', result_eq_79213)
    
    # Testing the type of an if condition (line 1049)
    if_condition_79215 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1049, 20), result_not__79214)
    # Assigning a type to the variable 'if_condition_79215' (line 1049)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1049, 20), 'if_condition_79215', if_condition_79215)
    # SSA begins for if statement (line 1049)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Subscript (line 1050):
    
    # Assigning a Call to a Subscript (line 1050):
    
    # Call to appenddecl(...): (line 1050)
    # Processing the call arguments (line 1050)
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 1051)
    name_79217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 61), 'name', False)
    
    # Obtaining the type of the subscript
    str_79218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1051, 53), 'str', 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1051)
    groupcounter_79219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 39), 'groupcounter', False)
    # Getting the type of 'groupcache' (line 1051)
    groupcache_79220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 28), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 1051)
    getitem___79221 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1051, 28), groupcache_79220, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1051)
    subscript_call_result_79222 = invoke(stypy.reporting.localization.Localization(__file__, 1051, 28), getitem___79221, groupcounter_79219)
    
    # Obtaining the member '__getitem__' of a type (line 1051)
    getitem___79223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1051, 28), subscript_call_result_79222, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1051)
    subscript_call_result_79224 = invoke(stypy.reporting.localization.Localization(__file__, 1051, 28), getitem___79223, str_79218)
    
    # Obtaining the member '__getitem__' of a type (line 1051)
    getitem___79225 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1051, 28), subscript_call_result_79224, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1051)
    subscript_call_result_79226 = invoke(stypy.reporting.localization.Localization(__file__, 1051, 28), getitem___79225, name_79217)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'result' (line 1051)
    result_79227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 101), 'result', False)
    
    # Obtaining the type of the subscript
    str_79228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1051, 93), 'str', 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1051)
    groupcounter_79229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 79), 'groupcounter', False)
    # Getting the type of 'groupcache' (line 1051)
    groupcache_79230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 68), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 1051)
    getitem___79231 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1051, 68), groupcache_79230, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1051)
    subscript_call_result_79232 = invoke(stypy.reporting.localization.Localization(__file__, 1051, 68), getitem___79231, groupcounter_79229)
    
    # Obtaining the member '__getitem__' of a type (line 1051)
    getitem___79233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1051, 68), subscript_call_result_79232, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1051)
    subscript_call_result_79234 = invoke(stypy.reporting.localization.Localization(__file__, 1051, 68), getitem___79233, str_79228)
    
    # Obtaining the member '__getitem__' of a type (line 1051)
    getitem___79235 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1051, 68), subscript_call_result_79234, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1051)
    subscript_call_result_79236 = invoke(stypy.reporting.localization.Localization(__file__, 1051, 68), getitem___79235, result_79227)
    
    # Processing the call keyword arguments (line 1050)
    kwargs_79237 = {}
    # Getting the type of 'appenddecl' (line 1050)
    appenddecl_79216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 65), 'appenddecl', False)
    # Calling appenddecl(args, kwargs) (line 1050)
    appenddecl_call_result_79238 = invoke(stypy.reporting.localization.Localization(__file__, 1050, 65), appenddecl_79216, *[subscript_call_result_79226, subscript_call_result_79236], **kwargs_79237)
    
    
    # Obtaining the type of the subscript
    str_79239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1050, 49), 'str', 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1050)
    groupcounter_79240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 35), 'groupcounter')
    # Getting the type of 'groupcache' (line 1050)
    groupcache_79241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 24), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1050)
    getitem___79242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1050, 24), groupcache_79241, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1050)
    subscript_call_result_79243 = invoke(stypy.reporting.localization.Localization(__file__, 1050, 24), getitem___79242, groupcounter_79240)
    
    # Obtaining the member '__getitem__' of a type (line 1050)
    getitem___79244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1050, 24), subscript_call_result_79243, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1050)
    subscript_call_result_79245 = invoke(stypy.reporting.localization.Localization(__file__, 1050, 24), getitem___79244, str_79239)
    
    # Getting the type of 'name' (line 1050)
    name_79246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 57), 'name')
    # Storing an element on a container (line 1050)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1050, 24), subscript_call_result_79245, (name_79246, appenddecl_call_result_79238))
    # SSA join for if statement (line 1049)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1048)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1047)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # SSA begins for try-except statement (line 1053)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to append(...): (line 1054)
    # Processing the call arguments (line 1054)
    # Getting the type of 'name' (line 1054)
    name_79257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 66), 'name', False)
    # Processing the call keyword arguments (line 1054)
    kwargs_79258 = {}
    
    # Obtaining the type of the subscript
    str_79247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1054, 45), 'str', 'interfaced')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1054)
    groupcounter_79248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 27), 'groupcounter', False)
    int_79249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1054, 42), 'int')
    # Applying the binary operator '-' (line 1054)
    result_sub_79250 = python_operator(stypy.reporting.localization.Localization(__file__, 1054, 27), '-', groupcounter_79248, int_79249)
    
    # Getting the type of 'groupcache' (line 1054)
    groupcache_79251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 16), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 1054)
    getitem___79252 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1054, 16), groupcache_79251, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1054)
    subscript_call_result_79253 = invoke(stypy.reporting.localization.Localization(__file__, 1054, 16), getitem___79252, result_sub_79250)
    
    # Obtaining the member '__getitem__' of a type (line 1054)
    getitem___79254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1054, 16), subscript_call_result_79253, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1054)
    subscript_call_result_79255 = invoke(stypy.reporting.localization.Localization(__file__, 1054, 16), getitem___79254, str_79247)
    
    # Obtaining the member 'append' of a type (line 1054)
    append_79256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1054, 16), subscript_call_result_79255, 'append')
    # Calling append(args, kwargs) (line 1054)
    append_call_result_79259 = invoke(stypy.reporting.localization.Localization(__file__, 1054, 16), append_79256, *[name_79257], **kwargs_79258)
    
    # SSA branch for the except part of a try statement (line 1053)
    # SSA branch for the except '<any exception>' branch of a try statement (line 1053)
    module_type_store.open_ssa_branch('except')
    pass
    # SSA join for try-except statement (line 1053)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1041)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'block' (line 1057)
    block_79260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 11), 'block')
    str_79261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1057, 20), 'str', 'function')
    # Applying the binary operator '==' (line 1057)
    result_eq_79262 = python_operator(stypy.reporting.localization.Localization(__file__, 1057, 11), '==', block_79260, str_79261)
    
    # Testing the type of an if condition (line 1057)
    if_condition_79263 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1057, 8), result_eq_79262)
    # Assigning a type to the variable 'if_condition_79263' (line 1057)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1057, 8), 'if_condition_79263', if_condition_79263)
    # SSA begins for if statement (line 1057)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1058):
    
    # Assigning a Call to a Name (line 1058):
    
    # Call to match(...): (line 1058)
    # Processing the call arguments (line 1058)
    
    # Call to group(...): (line 1058)
    # Processing the call arguments (line 1058)
    str_79271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1058, 46), 'str', 'before')
    # Processing the call keyword arguments (line 1058)
    kwargs_79272 = {}
    # Getting the type of 'm' (line 1058)
    m_79269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1058, 38), 'm', False)
    # Obtaining the member 'group' of a type (line 1058)
    group_79270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1058, 38), m_79269, 'group')
    # Calling group(args, kwargs) (line 1058)
    group_call_result_79273 = invoke(stypy.reporting.localization.Localization(__file__, 1058, 38), group_79270, *[str_79271], **kwargs_79272)
    
    str_79274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1058, 58), 'str', ' ')
    # Applying the binary operator '+' (line 1058)
    result_add_79275 = python_operator(stypy.reporting.localization.Localization(__file__, 1058, 38), '+', group_call_result_79273, str_79274)
    
    # Getting the type of 'name' (line 1058)
    name_79276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1058, 64), 'name', False)
    # Applying the binary operator '+' (line 1058)
    result_add_79277 = python_operator(stypy.reporting.localization.Localization(__file__, 1058, 62), '+', result_add_79275, name_79276)
    
    # Processing the call keyword arguments (line 1058)
    kwargs_79278 = {}
    
    # Obtaining the type of the subscript
    int_79264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1058, 29), 'int')
    # Getting the type of 'typespattern' (line 1058)
    typespattern_79265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1058, 16), 'typespattern', False)
    # Obtaining the member '__getitem__' of a type (line 1058)
    getitem___79266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1058, 16), typespattern_79265, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1058)
    subscript_call_result_79267 = invoke(stypy.reporting.localization.Localization(__file__, 1058, 16), getitem___79266, int_79264)
    
    # Obtaining the member 'match' of a type (line 1058)
    match_79268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1058, 16), subscript_call_result_79267, 'match')
    # Calling match(args, kwargs) (line 1058)
    match_call_result_79279 = invoke(stypy.reporting.localization.Localization(__file__, 1058, 16), match_79268, *[result_add_79277], **kwargs_79278)
    
    # Assigning a type to the variable 't' (line 1058)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1058, 12), 't', match_call_result_79279)
    
    # Getting the type of 't' (line 1059)
    t_79280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1059, 15), 't')
    # Testing the type of an if condition (line 1059)
    if_condition_79281 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1059, 12), t_79280)
    # Assigning a type to the variable 'if_condition_79281' (line 1059)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1059, 12), 'if_condition_79281', if_condition_79281)
    # SSA begins for if statement (line 1059)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Tuple (line 1060):
    
    # Assigning a Call to a Name:
    
    # Call to cracktypespec0(...): (line 1060)
    # Processing the call arguments (line 1060)
    
    # Call to group(...): (line 1061)
    # Processing the call arguments (line 1061)
    str_79285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1061, 28), 'str', 'this')
    # Processing the call keyword arguments (line 1061)
    kwargs_79286 = {}
    # Getting the type of 't' (line 1061)
    t_79283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 20), 't', False)
    # Obtaining the member 'group' of a type (line 1061)
    group_79284 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1061, 20), t_79283, 'group')
    # Calling group(args, kwargs) (line 1061)
    group_call_result_79287 = invoke(stypy.reporting.localization.Localization(__file__, 1061, 20), group_79284, *[str_79285], **kwargs_79286)
    
    
    # Call to group(...): (line 1061)
    # Processing the call arguments (line 1061)
    str_79290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1061, 45), 'str', 'after')
    # Processing the call keyword arguments (line 1061)
    kwargs_79291 = {}
    # Getting the type of 't' (line 1061)
    t_79288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 37), 't', False)
    # Obtaining the member 'group' of a type (line 1061)
    group_79289 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1061, 37), t_79288, 'group')
    # Calling group(args, kwargs) (line 1061)
    group_call_result_79292 = invoke(stypy.reporting.localization.Localization(__file__, 1061, 37), group_79289, *[str_79290], **kwargs_79291)
    
    # Processing the call keyword arguments (line 1060)
    kwargs_79293 = {}
    # Getting the type of 'cracktypespec0' (line 1060)
    cracktypespec0_79282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 50), 'cracktypespec0', False)
    # Calling cracktypespec0(args, kwargs) (line 1060)
    cracktypespec0_call_result_79294 = invoke(stypy.reporting.localization.Localization(__file__, 1060, 50), cracktypespec0_79282, *[group_call_result_79287, group_call_result_79292], **kwargs_79293)
    
    # Assigning a type to the variable 'call_assignment_75775' (line 1060)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1060, 16), 'call_assignment_75775', cracktypespec0_call_result_79294)
    
    # Assigning a Call to a Name (line 1060):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_79297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1060, 16), 'int')
    # Processing the call keyword arguments
    kwargs_79298 = {}
    # Getting the type of 'call_assignment_75775' (line 1060)
    call_assignment_75775_79295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 16), 'call_assignment_75775', False)
    # Obtaining the member '__getitem__' of a type (line 1060)
    getitem___79296 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1060, 16), call_assignment_75775_79295, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_79299 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___79296, *[int_79297], **kwargs_79298)
    
    # Assigning a type to the variable 'call_assignment_75776' (line 1060)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1060, 16), 'call_assignment_75776', getitem___call_result_79299)
    
    # Assigning a Name to a Name (line 1060):
    # Getting the type of 'call_assignment_75776' (line 1060)
    call_assignment_75776_79300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 16), 'call_assignment_75776')
    # Assigning a type to the variable 'typespec' (line 1060)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1060, 16), 'typespec', call_assignment_75776_79300)
    
    # Assigning a Call to a Name (line 1060):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_79303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1060, 16), 'int')
    # Processing the call keyword arguments
    kwargs_79304 = {}
    # Getting the type of 'call_assignment_75775' (line 1060)
    call_assignment_75775_79301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 16), 'call_assignment_75775', False)
    # Obtaining the member '__getitem__' of a type (line 1060)
    getitem___79302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1060, 16), call_assignment_75775_79301, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_79305 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___79302, *[int_79303], **kwargs_79304)
    
    # Assigning a type to the variable 'call_assignment_75777' (line 1060)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1060, 16), 'call_assignment_75777', getitem___call_result_79305)
    
    # Assigning a Name to a Name (line 1060):
    # Getting the type of 'call_assignment_75777' (line 1060)
    call_assignment_75777_79306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 16), 'call_assignment_75777')
    # Assigning a type to the variable 'selector' (line 1060)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1060, 26), 'selector', call_assignment_75777_79306)
    
    # Assigning a Call to a Name (line 1060):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_79309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1060, 16), 'int')
    # Processing the call keyword arguments
    kwargs_79310 = {}
    # Getting the type of 'call_assignment_75775' (line 1060)
    call_assignment_75775_79307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 16), 'call_assignment_75775', False)
    # Obtaining the member '__getitem__' of a type (line 1060)
    getitem___79308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1060, 16), call_assignment_75775_79307, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_79311 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___79308, *[int_79309], **kwargs_79310)
    
    # Assigning a type to the variable 'call_assignment_75778' (line 1060)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1060, 16), 'call_assignment_75778', getitem___call_result_79311)
    
    # Assigning a Name to a Name (line 1060):
    # Getting the type of 'call_assignment_75778' (line 1060)
    call_assignment_75778_79312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 16), 'call_assignment_75778')
    # Assigning a type to the variable 'attr' (line 1060)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1060, 36), 'attr', call_assignment_75778_79312)
    
    # Assigning a Call to a Name (line 1060):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_79315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1060, 16), 'int')
    # Processing the call keyword arguments
    kwargs_79316 = {}
    # Getting the type of 'call_assignment_75775' (line 1060)
    call_assignment_75775_79313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 16), 'call_assignment_75775', False)
    # Obtaining the member '__getitem__' of a type (line 1060)
    getitem___79314 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1060, 16), call_assignment_75775_79313, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_79317 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___79314, *[int_79315], **kwargs_79316)
    
    # Assigning a type to the variable 'call_assignment_75779' (line 1060)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1060, 16), 'call_assignment_75779', getitem___call_result_79317)
    
    # Assigning a Name to a Name (line 1060):
    # Getting the type of 'call_assignment_75779' (line 1060)
    call_assignment_75779_79318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 16), 'call_assignment_75779')
    # Assigning a type to the variable 'edecl' (line 1060)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1060, 42), 'edecl', call_assignment_75779_79318)
    
    # Call to updatevars(...): (line 1062)
    # Processing the call arguments (line 1062)
    # Getting the type of 'typespec' (line 1062)
    typespec_79320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1062, 27), 'typespec', False)
    # Getting the type of 'selector' (line 1062)
    selector_79321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1062, 37), 'selector', False)
    # Getting the type of 'attr' (line 1062)
    attr_79322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1062, 47), 'attr', False)
    # Getting the type of 'edecl' (line 1062)
    edecl_79323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1062, 53), 'edecl', False)
    # Processing the call keyword arguments (line 1062)
    kwargs_79324 = {}
    # Getting the type of 'updatevars' (line 1062)
    updatevars_79319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1062, 16), 'updatevars', False)
    # Calling updatevars(args, kwargs) (line 1062)
    updatevars_call_result_79325 = invoke(stypy.reporting.localization.Localization(__file__, 1062, 16), updatevars_79319, *[typespec_79320, selector_79321, attr_79322, edecl_79323], **kwargs_79324)
    
    # SSA join for if statement (line 1059)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1057)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'case' (line 1064)
    case_79326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1064, 11), 'case')
    
    # Obtaining an instance of the builtin type 'list' (line 1064)
    list_79327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1064, 19), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1064)
    # Adding element type (line 1064)
    str_79328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1064, 20), 'str', 'call')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1064, 19), list_79327, str_79328)
    # Adding element type (line 1064)
    str_79329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1064, 28), 'str', 'callfun')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1064, 19), list_79327, str_79329)
    
    # Applying the binary operator 'in' (line 1064)
    result_contains_79330 = python_operator(stypy.reporting.localization.Localization(__file__, 1064, 11), 'in', case_79326, list_79327)
    
    # Testing the type of an if condition (line 1064)
    if_condition_79331 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1064, 8), result_contains_79330)
    # Assigning a type to the variable 'if_condition_79331' (line 1064)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1064, 8), 'if_condition_79331', if_condition_79331)
    # SSA begins for if statement (line 1064)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1065)
    # Processing the call arguments (line 1065)
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1065)
    groupcounter_79339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1065, 58), 'groupcounter', False)
    # Getting the type of 'groupcache' (line 1065)
    groupcache_79340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1065, 47), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 1065)
    getitem___79341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1065, 47), groupcache_79340, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1065)
    subscript_call_result_79342 = invoke(stypy.reporting.localization.Localization(__file__, 1065, 47), getitem___79341, groupcounter_79339)
    
    # Processing the call keyword arguments (line 1065)
    kwargs_79343 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1065)
    groupcounter_79332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1065, 22), 'groupcounter', False)
    int_79333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1065, 37), 'int')
    # Applying the binary operator '-' (line 1065)
    result_sub_79334 = python_operator(stypy.reporting.localization.Localization(__file__, 1065, 22), '-', groupcounter_79332, int_79333)
    
    # Getting the type of 'grouplist' (line 1065)
    grouplist_79335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1065, 12), 'grouplist', False)
    # Obtaining the member '__getitem__' of a type (line 1065)
    getitem___79336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1065, 12), grouplist_79335, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1065)
    subscript_call_result_79337 = invoke(stypy.reporting.localization.Localization(__file__, 1065, 12), getitem___79336, result_sub_79334)
    
    # Obtaining the member 'append' of a type (line 1065)
    append_79338 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1065, 12), subscript_call_result_79337, 'append')
    # Calling append(args, kwargs) (line 1065)
    append_call_result_79344 = invoke(stypy.reporting.localization.Localization(__file__, 1065, 12), append_79338, *[subscript_call_result_79342], **kwargs_79343)
    
    
    # Assigning a Subscript to a Subscript (line 1066):
    
    # Assigning a Subscript to a Subscript (line 1066):
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1066)
    groupcounter_79345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1066, 64), 'groupcounter')
    # Getting the type of 'grouplist' (line 1066)
    grouplist_79346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1066, 54), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 1066)
    getitem___79347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1066, 54), grouplist_79346, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1066)
    subscript_call_result_79348 = invoke(stypy.reporting.localization.Localization(__file__, 1066, 54), getitem___79347, groupcounter_79345)
    
    
    # Obtaining the type of the subscript
    int_79349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1066, 40), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1066)
    groupcounter_79350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1066, 22), 'groupcounter')
    int_79351 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1066, 37), 'int')
    # Applying the binary operator '-' (line 1066)
    result_sub_79352 = python_operator(stypy.reporting.localization.Localization(__file__, 1066, 22), '-', groupcounter_79350, int_79351)
    
    # Getting the type of 'grouplist' (line 1066)
    grouplist_79353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1066, 12), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 1066)
    getitem___79354 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1066, 12), grouplist_79353, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1066)
    subscript_call_result_79355 = invoke(stypy.reporting.localization.Localization(__file__, 1066, 12), getitem___79354, result_sub_79352)
    
    # Obtaining the member '__getitem__' of a type (line 1066)
    getitem___79356 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1066, 12), subscript_call_result_79355, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1066)
    subscript_call_result_79357 = invoke(stypy.reporting.localization.Localization(__file__, 1066, 12), getitem___79356, int_79349)
    
    str_79358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1066, 44), 'str', 'body')
    # Storing an element on a container (line 1066)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1066, 12), subscript_call_result_79357, (str_79358, subscript_call_result_79348))
    # Deleting a member
    # Getting the type of 'grouplist' (line 1067)
    grouplist_79359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 16), 'grouplist')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1067)
    groupcounter_79360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 26), 'groupcounter')
    # Getting the type of 'grouplist' (line 1067)
    grouplist_79361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 16), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 1067)
    getitem___79362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1067, 16), grouplist_79361, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1067)
    subscript_call_result_79363 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 16), getitem___79362, groupcounter_79360)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1067, 12), grouplist_79359, subscript_call_result_79363)
    
    # Assigning a BinOp to a Name (line 1068):
    
    # Assigning a BinOp to a Name (line 1068):
    # Getting the type of 'groupcounter' (line 1068)
    groupcounter_79364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 27), 'groupcounter')
    int_79365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1068, 42), 'int')
    # Applying the binary operator '-' (line 1068)
    result_sub_79366 = python_operator(stypy.reporting.localization.Localization(__file__, 1068, 27), '-', groupcounter_79364, int_79365)
    
    # Assigning a type to the variable 'groupcounter' (line 1068)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1068, 12), 'groupcounter', result_sub_79366)
    
    # Call to append(...): (line 1069)
    # Processing the call arguments (line 1069)
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1069)
    groupcounter_79374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 58), 'groupcounter', False)
    # Getting the type of 'groupcache' (line 1069)
    groupcache_79375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 47), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 1069)
    getitem___79376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1069, 47), groupcache_79375, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1069)
    subscript_call_result_79377 = invoke(stypy.reporting.localization.Localization(__file__, 1069, 47), getitem___79376, groupcounter_79374)
    
    # Processing the call keyword arguments (line 1069)
    kwargs_79378 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1069)
    groupcounter_79367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 22), 'groupcounter', False)
    int_79368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1069, 37), 'int')
    # Applying the binary operator '-' (line 1069)
    result_sub_79369 = python_operator(stypy.reporting.localization.Localization(__file__, 1069, 22), '-', groupcounter_79367, int_79368)
    
    # Getting the type of 'grouplist' (line 1069)
    grouplist_79370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 12), 'grouplist', False)
    # Obtaining the member '__getitem__' of a type (line 1069)
    getitem___79371 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1069, 12), grouplist_79370, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1069)
    subscript_call_result_79372 = invoke(stypy.reporting.localization.Localization(__file__, 1069, 12), getitem___79371, result_sub_79369)
    
    # Obtaining the member 'append' of a type (line 1069)
    append_79373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1069, 12), subscript_call_result_79372, 'append')
    # Calling append(args, kwargs) (line 1069)
    append_call_result_79379 = invoke(stypy.reporting.localization.Localization(__file__, 1069, 12), append_79373, *[subscript_call_result_79377], **kwargs_79378)
    
    
    # Assigning a Subscript to a Subscript (line 1070):
    
    # Assigning a Subscript to a Subscript (line 1070):
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1070)
    groupcounter_79380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1070, 64), 'groupcounter')
    # Getting the type of 'grouplist' (line 1070)
    grouplist_79381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1070, 54), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 1070)
    getitem___79382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1070, 54), grouplist_79381, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1070)
    subscript_call_result_79383 = invoke(stypy.reporting.localization.Localization(__file__, 1070, 54), getitem___79382, groupcounter_79380)
    
    
    # Obtaining the type of the subscript
    int_79384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1070, 40), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1070)
    groupcounter_79385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1070, 22), 'groupcounter')
    int_79386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1070, 37), 'int')
    # Applying the binary operator '-' (line 1070)
    result_sub_79387 = python_operator(stypy.reporting.localization.Localization(__file__, 1070, 22), '-', groupcounter_79385, int_79386)
    
    # Getting the type of 'grouplist' (line 1070)
    grouplist_79388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1070, 12), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 1070)
    getitem___79389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1070, 12), grouplist_79388, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1070)
    subscript_call_result_79390 = invoke(stypy.reporting.localization.Localization(__file__, 1070, 12), getitem___79389, result_sub_79387)
    
    # Obtaining the member '__getitem__' of a type (line 1070)
    getitem___79391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1070, 12), subscript_call_result_79390, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1070)
    subscript_call_result_79392 = invoke(stypy.reporting.localization.Localization(__file__, 1070, 12), getitem___79391, int_79384)
    
    str_79393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1070, 44), 'str', 'body')
    # Storing an element on a container (line 1070)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1070, 12), subscript_call_result_79392, (str_79393, subscript_call_result_79383))
    # Deleting a member
    # Getting the type of 'grouplist' (line 1071)
    grouplist_79394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 16), 'grouplist')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1071)
    groupcounter_79395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 26), 'groupcounter')
    # Getting the type of 'grouplist' (line 1071)
    grouplist_79396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 16), 'grouplist')
    # Obtaining the member '__getitem__' of a type (line 1071)
    getitem___79397 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1071, 16), grouplist_79396, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1071)
    subscript_call_result_79398 = invoke(stypy.reporting.localization.Localization(__file__, 1071, 16), getitem___79397, groupcounter_79395)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1071, 12), grouplist_79394, subscript_call_result_79398)
    
    # Assigning a BinOp to a Name (line 1072):
    
    # Assigning a BinOp to a Name (line 1072):
    # Getting the type of 'groupcounter' (line 1072)
    groupcounter_79399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1072, 27), 'groupcounter')
    int_79400 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1072, 42), 'int')
    # Applying the binary operator '-' (line 1072)
    result_sub_79401 = python_operator(stypy.reporting.localization.Localization(__file__, 1072, 27), '-', groupcounter_79399, int_79400)
    
    # Assigning a type to the variable 'groupcounter' (line 1072)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1072, 12), 'groupcounter', result_sub_79401)
    # SSA join for if statement (line 1064)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 917)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'case' (line 1074)
    case_79402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1074, 9), 'case')
    str_79403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1074, 17), 'str', 'entry')
    # Applying the binary operator '==' (line 1074)
    result_eq_79404 = python_operator(stypy.reporting.localization.Localization(__file__, 1074, 9), '==', case_79402, str_79403)
    
    # Testing the type of an if condition (line 1074)
    if_condition_79405 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1074, 9), result_eq_79404)
    # Assigning a type to the variable 'if_condition_79405' (line 1074)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1074, 9), 'if_condition_79405', if_condition_79405)
    # SSA begins for if statement (line 1074)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Tuple (line 1075):
    
    # Assigning a Call to a Name:
    
    # Call to _resolvenameargspattern(...): (line 1075)
    # Processing the call arguments (line 1075)
    
    # Call to group(...): (line 1075)
    # Processing the call arguments (line 1075)
    str_79409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1075, 67), 'str', 'after')
    # Processing the call keyword arguments (line 1075)
    kwargs_79410 = {}
    # Getting the type of 'm' (line 1075)
    m_79407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 59), 'm', False)
    # Obtaining the member 'group' of a type (line 1075)
    group_79408 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1075, 59), m_79407, 'group')
    # Calling group(args, kwargs) (line 1075)
    group_call_result_79411 = invoke(stypy.reporting.localization.Localization(__file__, 1075, 59), group_79408, *[str_79409], **kwargs_79410)
    
    # Processing the call keyword arguments (line 1075)
    kwargs_79412 = {}
    # Getting the type of '_resolvenameargspattern' (line 1075)
    _resolvenameargspattern_79406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 35), '_resolvenameargspattern', False)
    # Calling _resolvenameargspattern(args, kwargs) (line 1075)
    _resolvenameargspattern_call_result_79413 = invoke(stypy.reporting.localization.Localization(__file__, 1075, 35), _resolvenameargspattern_79406, *[group_call_result_79411], **kwargs_79412)
    
    # Assigning a type to the variable 'call_assignment_75780' (line 1075)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1075, 8), 'call_assignment_75780', _resolvenameargspattern_call_result_79413)
    
    # Assigning a Call to a Name (line 1075):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_79416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1075, 8), 'int')
    # Processing the call keyword arguments
    kwargs_79417 = {}
    # Getting the type of 'call_assignment_75780' (line 1075)
    call_assignment_75780_79414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 8), 'call_assignment_75780', False)
    # Obtaining the member '__getitem__' of a type (line 1075)
    getitem___79415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1075, 8), call_assignment_75780_79414, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_79418 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___79415, *[int_79416], **kwargs_79417)
    
    # Assigning a type to the variable 'call_assignment_75781' (line 1075)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1075, 8), 'call_assignment_75781', getitem___call_result_79418)
    
    # Assigning a Name to a Name (line 1075):
    # Getting the type of 'call_assignment_75781' (line 1075)
    call_assignment_75781_79419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 8), 'call_assignment_75781')
    # Assigning a type to the variable 'name' (line 1075)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1075, 8), 'name', call_assignment_75781_79419)
    
    # Assigning a Call to a Name (line 1075):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_79422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1075, 8), 'int')
    # Processing the call keyword arguments
    kwargs_79423 = {}
    # Getting the type of 'call_assignment_75780' (line 1075)
    call_assignment_75780_79420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 8), 'call_assignment_75780', False)
    # Obtaining the member '__getitem__' of a type (line 1075)
    getitem___79421 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1075, 8), call_assignment_75780_79420, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_79424 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___79421, *[int_79422], **kwargs_79423)
    
    # Assigning a type to the variable 'call_assignment_75782' (line 1075)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1075, 8), 'call_assignment_75782', getitem___call_result_79424)
    
    # Assigning a Name to a Name (line 1075):
    # Getting the type of 'call_assignment_75782' (line 1075)
    call_assignment_75782_79425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 8), 'call_assignment_75782')
    # Assigning a type to the variable 'args' (line 1075)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1075, 14), 'args', call_assignment_75782_79425)
    
    # Assigning a Call to a Name (line 1075):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_79428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1075, 8), 'int')
    # Processing the call keyword arguments
    kwargs_79429 = {}
    # Getting the type of 'call_assignment_75780' (line 1075)
    call_assignment_75780_79426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 8), 'call_assignment_75780', False)
    # Obtaining the member '__getitem__' of a type (line 1075)
    getitem___79427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1075, 8), call_assignment_75780_79426, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_79430 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___79427, *[int_79428], **kwargs_79429)
    
    # Assigning a type to the variable 'call_assignment_75783' (line 1075)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1075, 8), 'call_assignment_75783', getitem___call_result_79430)
    
    # Assigning a Name to a Name (line 1075):
    # Getting the type of 'call_assignment_75783' (line 1075)
    call_assignment_75783_79431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 8), 'call_assignment_75783')
    # Assigning a type to the variable 'result' (line 1075)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1075, 20), 'result', call_assignment_75783_79431)
    
    # Assigning a Call to a Name (line 1075):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_79434 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1075, 8), 'int')
    # Processing the call keyword arguments
    kwargs_79435 = {}
    # Getting the type of 'call_assignment_75780' (line 1075)
    call_assignment_75780_79432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 8), 'call_assignment_75780', False)
    # Obtaining the member '__getitem__' of a type (line 1075)
    getitem___79433 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1075, 8), call_assignment_75780_79432, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_79436 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___79433, *[int_79434], **kwargs_79435)
    
    # Assigning a type to the variable 'call_assignment_75784' (line 1075)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1075, 8), 'call_assignment_75784', getitem___call_result_79436)
    
    # Assigning a Name to a Name (line 1075):
    # Getting the type of 'call_assignment_75784' (line 1075)
    call_assignment_75784_79437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 8), 'call_assignment_75784')
    # Assigning a type to the variable 'bind' (line 1075)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1075, 28), 'bind', call_assignment_75784_79437)
    
    # Type idiom detected: calculating its left and rigth part (line 1076)
    # Getting the type of 'name' (line 1076)
    name_79438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 8), 'name')
    # Getting the type of 'None' (line 1076)
    None_79439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 23), 'None')
    
    (may_be_79440, more_types_in_union_79441) = may_not_be_none(name_79438, None_79439)

    if may_be_79440:

        if more_types_in_union_79441:
            # Runtime conditional SSA (line 1076)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Getting the type of 'args' (line 1077)
        args_79442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1077, 15), 'args')
        # Testing the type of an if condition (line 1077)
        if_condition_79443 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1077, 12), args_79442)
        # Assigning a type to the variable 'if_condition_79443' (line 1077)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1077, 12), 'if_condition_79443', if_condition_79443)
        # SSA begins for if statement (line 1077)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1078):
        
        # Assigning a Call to a Name (line 1078):
        
        # Call to rmbadname(...): (line 1078)
        # Processing the call arguments (line 1078)
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to split(...): (line 1079)
        # Processing the call arguments (line 1079)
        str_79454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1079, 70), 'str', '@,@')
        # Processing the call keyword arguments (line 1079)
        kwargs_79455 = {}
        
        # Call to markoutercomma(...): (line 1079)
        # Processing the call arguments (line 1079)
        # Getting the type of 'args' (line 1079)
        args_79450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1079, 58), 'args', False)
        # Processing the call keyword arguments (line 1079)
        kwargs_79451 = {}
        # Getting the type of 'markoutercomma' (line 1079)
        markoutercomma_79449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1079, 43), 'markoutercomma', False)
        # Calling markoutercomma(args, kwargs) (line 1079)
        markoutercomma_call_result_79452 = invoke(stypy.reporting.localization.Localization(__file__, 1079, 43), markoutercomma_79449, *[args_79450], **kwargs_79451)
        
        # Obtaining the member 'split' of a type (line 1079)
        split_79453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1079, 43), markoutercomma_call_result_79452, 'split')
        # Calling split(args, kwargs) (line 1079)
        split_call_result_79456 = invoke(stypy.reporting.localization.Localization(__file__, 1079, 43), split_79453, *[str_79454], **kwargs_79455)
        
        comprehension_79457 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1078, 34), split_call_result_79456)
        # Assigning a type to the variable 'x' (line 1078)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1078, 34), 'x', comprehension_79457)
        
        # Call to strip(...): (line 1078)
        # Processing the call keyword arguments (line 1078)
        kwargs_79447 = {}
        # Getting the type of 'x' (line 1078)
        x_79445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 34), 'x', False)
        # Obtaining the member 'strip' of a type (line 1078)
        strip_79446 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1078, 34), x_79445, 'strip')
        # Calling strip(args, kwargs) (line 1078)
        strip_call_result_79448 = invoke(stypy.reporting.localization.Localization(__file__, 1078, 34), strip_79446, *[], **kwargs_79447)
        
        list_79458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1078, 34), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1078, 34), list_79458, strip_call_result_79448)
        # Processing the call keyword arguments (line 1078)
        kwargs_79459 = {}
        # Getting the type of 'rmbadname' (line 1078)
        rmbadname_79444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 23), 'rmbadname', False)
        # Calling rmbadname(args, kwargs) (line 1078)
        rmbadname_call_result_79460 = invoke(stypy.reporting.localization.Localization(__file__, 1078, 23), rmbadname_79444, *[list_79458], **kwargs_79459)
        
        # Assigning a type to the variable 'args' (line 1078)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1078, 16), 'args', rmbadname_call_result_79460)
        # SSA branch for the else part of an if statement (line 1077)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a List to a Name (line 1081):
        
        # Assigning a List to a Name (line 1081):
        
        # Obtaining an instance of the builtin type 'list' (line 1081)
        list_79461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1081, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1081)
        
        # Assigning a type to the variable 'args' (line 1081)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1081, 16), 'args', list_79461)
        # SSA join for if statement (line 1077)
        module_type_store = module_type_store.join_ssa_context()
        
        # Evaluating assert statement condition
        
        # Getting the type of 'result' (line 1082)
        result_79462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1082, 19), 'result')
        # Getting the type of 'None' (line 1082)
        None_79463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1082, 29), 'None')
        # Applying the binary operator 'is' (line 1082)
        result_is__79464 = python_operator(stypy.reporting.localization.Localization(__file__, 1082, 19), 'is', result_79462, None_79463)
        
        
        # Assigning a Name to a Subscript (line 1083):
        
        # Assigning a Name to a Subscript (line 1083):
        # Getting the type of 'args' (line 1083)
        args_79465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1083, 54), 'args')
        
        # Obtaining the type of the subscript
        str_79466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1083, 37), 'str', 'entry')
        
        # Obtaining the type of the subscript
        # Getting the type of 'groupcounter' (line 1083)
        groupcounter_79467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1083, 23), 'groupcounter')
        # Getting the type of 'groupcache' (line 1083)
        groupcache_79468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1083, 12), 'groupcache')
        # Obtaining the member '__getitem__' of a type (line 1083)
        getitem___79469 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1083, 12), groupcache_79468, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1083)
        subscript_call_result_79470 = invoke(stypy.reporting.localization.Localization(__file__, 1083, 12), getitem___79469, groupcounter_79467)
        
        # Obtaining the member '__getitem__' of a type (line 1083)
        getitem___79471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1083, 12), subscript_call_result_79470, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1083)
        subscript_call_result_79472 = invoke(stypy.reporting.localization.Localization(__file__, 1083, 12), getitem___79471, str_79466)
        
        # Getting the type of 'name' (line 1083)
        name_79473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1083, 46), 'name')
        # Storing an element on a container (line 1083)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1083, 12), subscript_call_result_79472, (name_79473, args_79465))
        
        # Assigning a Tuple to a Name (line 1084):
        
        # Assigning a Tuple to a Name (line 1084):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1084)
        tuple_79474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1084, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1084)
        # Adding element type (line 1084)
        str_79475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1084, 32), 'str', 'entry')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1084, 32), tuple_79474, str_79475)
        # Adding element type (line 1084)
        # Getting the type of 'name' (line 1084)
        name_79476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1084, 41), 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1084, 32), tuple_79474, name_79476)
        # Adding element type (line 1084)
        # Getting the type of 'groupcounter' (line 1084)
        groupcounter_79477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1084, 47), 'groupcounter')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1084, 32), tuple_79474, groupcounter_79477)
        
        # Assigning a type to the variable 'previous_context' (line 1084)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1084, 12), 'previous_context', tuple_79474)

        if more_types_in_union_79441:
            # SSA join for if statement (line 1076)
            module_type_store = module_type_store.join_ssa_context()


    
    # SSA branch for the else part of an if statement (line 1074)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'case' (line 1085)
    case_79478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1085, 9), 'case')
    str_79479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1085, 17), 'str', 'type')
    # Applying the binary operator '==' (line 1085)
    result_eq_79480 = python_operator(stypy.reporting.localization.Localization(__file__, 1085, 9), '==', case_79478, str_79479)
    
    # Testing the type of an if condition (line 1085)
    if_condition_79481 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1085, 9), result_eq_79480)
    # Assigning a type to the variable 'if_condition_79481' (line 1085)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1085, 9), 'if_condition_79481', if_condition_79481)
    # SSA begins for if statement (line 1085)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Tuple (line 1086):
    
    # Assigning a Call to a Name:
    
    # Call to cracktypespec0(...): (line 1086)
    # Processing the call arguments (line 1086)
    # Getting the type of 'block' (line 1087)
    block_79483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1087, 12), 'block', False)
    
    # Call to group(...): (line 1087)
    # Processing the call arguments (line 1087)
    str_79486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1087, 27), 'str', 'after')
    # Processing the call keyword arguments (line 1087)
    kwargs_79487 = {}
    # Getting the type of 'm' (line 1087)
    m_79484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1087, 19), 'm', False)
    # Obtaining the member 'group' of a type (line 1087)
    group_79485 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1087, 19), m_79484, 'group')
    # Calling group(args, kwargs) (line 1087)
    group_call_result_79488 = invoke(stypy.reporting.localization.Localization(__file__, 1087, 19), group_79485, *[str_79486], **kwargs_79487)
    
    # Processing the call keyword arguments (line 1086)
    kwargs_79489 = {}
    # Getting the type of 'cracktypespec0' (line 1086)
    cracktypespec0_79482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1086, 42), 'cracktypespec0', False)
    # Calling cracktypespec0(args, kwargs) (line 1086)
    cracktypespec0_call_result_79490 = invoke(stypy.reporting.localization.Localization(__file__, 1086, 42), cracktypespec0_79482, *[block_79483, group_call_result_79488], **kwargs_79489)
    
    # Assigning a type to the variable 'call_assignment_75785' (line 1086)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1086, 8), 'call_assignment_75785', cracktypespec0_call_result_79490)
    
    # Assigning a Call to a Name (line 1086):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_79493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1086, 8), 'int')
    # Processing the call keyword arguments
    kwargs_79494 = {}
    # Getting the type of 'call_assignment_75785' (line 1086)
    call_assignment_75785_79491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1086, 8), 'call_assignment_75785', False)
    # Obtaining the member '__getitem__' of a type (line 1086)
    getitem___79492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1086, 8), call_assignment_75785_79491, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_79495 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___79492, *[int_79493], **kwargs_79494)
    
    # Assigning a type to the variable 'call_assignment_75786' (line 1086)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1086, 8), 'call_assignment_75786', getitem___call_result_79495)
    
    # Assigning a Name to a Name (line 1086):
    # Getting the type of 'call_assignment_75786' (line 1086)
    call_assignment_75786_79496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1086, 8), 'call_assignment_75786')
    # Assigning a type to the variable 'typespec' (line 1086)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1086, 8), 'typespec', call_assignment_75786_79496)
    
    # Assigning a Call to a Name (line 1086):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_79499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1086, 8), 'int')
    # Processing the call keyword arguments
    kwargs_79500 = {}
    # Getting the type of 'call_assignment_75785' (line 1086)
    call_assignment_75785_79497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1086, 8), 'call_assignment_75785', False)
    # Obtaining the member '__getitem__' of a type (line 1086)
    getitem___79498 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1086, 8), call_assignment_75785_79497, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_79501 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___79498, *[int_79499], **kwargs_79500)
    
    # Assigning a type to the variable 'call_assignment_75787' (line 1086)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1086, 8), 'call_assignment_75787', getitem___call_result_79501)
    
    # Assigning a Name to a Name (line 1086):
    # Getting the type of 'call_assignment_75787' (line 1086)
    call_assignment_75787_79502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1086, 8), 'call_assignment_75787')
    # Assigning a type to the variable 'selector' (line 1086)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1086, 18), 'selector', call_assignment_75787_79502)
    
    # Assigning a Call to a Name (line 1086):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_79505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1086, 8), 'int')
    # Processing the call keyword arguments
    kwargs_79506 = {}
    # Getting the type of 'call_assignment_75785' (line 1086)
    call_assignment_75785_79503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1086, 8), 'call_assignment_75785', False)
    # Obtaining the member '__getitem__' of a type (line 1086)
    getitem___79504 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1086, 8), call_assignment_75785_79503, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_79507 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___79504, *[int_79505], **kwargs_79506)
    
    # Assigning a type to the variable 'call_assignment_75788' (line 1086)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1086, 8), 'call_assignment_75788', getitem___call_result_79507)
    
    # Assigning a Name to a Name (line 1086):
    # Getting the type of 'call_assignment_75788' (line 1086)
    call_assignment_75788_79508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1086, 8), 'call_assignment_75788')
    # Assigning a type to the variable 'attr' (line 1086)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1086, 28), 'attr', call_assignment_75788_79508)
    
    # Assigning a Call to a Name (line 1086):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_79511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1086, 8), 'int')
    # Processing the call keyword arguments
    kwargs_79512 = {}
    # Getting the type of 'call_assignment_75785' (line 1086)
    call_assignment_75785_79509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1086, 8), 'call_assignment_75785', False)
    # Obtaining the member '__getitem__' of a type (line 1086)
    getitem___79510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1086, 8), call_assignment_75785_79509, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_79513 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___79510, *[int_79511], **kwargs_79512)
    
    # Assigning a type to the variable 'call_assignment_75789' (line 1086)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1086, 8), 'call_assignment_75789', getitem___call_result_79513)
    
    # Assigning a Name to a Name (line 1086):
    # Getting the type of 'call_assignment_75789' (line 1086)
    call_assignment_75789_79514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1086, 8), 'call_assignment_75789')
    # Assigning a type to the variable 'edecl' (line 1086)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1086, 34), 'edecl', call_assignment_75789_79514)
    
    # Assigning a Call to a Name (line 1088):
    
    # Assigning a Call to a Name (line 1088):
    
    # Call to updatevars(...): (line 1088)
    # Processing the call arguments (line 1088)
    # Getting the type of 'typespec' (line 1088)
    typespec_79516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 31), 'typespec', False)
    # Getting the type of 'selector' (line 1088)
    selector_79517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 41), 'selector', False)
    # Getting the type of 'attr' (line 1088)
    attr_79518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 51), 'attr', False)
    # Getting the type of 'edecl' (line 1088)
    edecl_79519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 57), 'edecl', False)
    # Processing the call keyword arguments (line 1088)
    kwargs_79520 = {}
    # Getting the type of 'updatevars' (line 1088)
    updatevars_79515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 20), 'updatevars', False)
    # Calling updatevars(args, kwargs) (line 1088)
    updatevars_call_result_79521 = invoke(stypy.reporting.localization.Localization(__file__, 1088, 20), updatevars_79515, *[typespec_79516, selector_79517, attr_79518, edecl_79519], **kwargs_79520)
    
    # Assigning a type to the variable 'last_name' (line 1088)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1088, 8), 'last_name', updatevars_call_result_79521)
    
    # Type idiom detected: calculating its left and rigth part (line 1089)
    # Getting the type of 'last_name' (line 1089)
    last_name_79522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 8), 'last_name')
    # Getting the type of 'None' (line 1089)
    None_79523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 28), 'None')
    
    (may_be_79524, more_types_in_union_79525) = may_not_be_none(last_name_79522, None_79523)

    if may_be_79524:

        if more_types_in_union_79525:
            # Runtime conditional SSA (line 1089)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Tuple to a Name (line 1090):
        
        # Assigning a Tuple to a Name (line 1090):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1090)
        tuple_79526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1090, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1090)
        # Adding element type (line 1090)
        str_79527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1090, 32), 'str', 'variable')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1090, 32), tuple_79526, str_79527)
        # Adding element type (line 1090)
        # Getting the type of 'last_name' (line 1090)
        last_name_79528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1090, 44), 'last_name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1090, 32), tuple_79526, last_name_79528)
        # Adding element type (line 1090)
        # Getting the type of 'groupcounter' (line 1090)
        groupcounter_79529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1090, 55), 'groupcounter')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1090, 32), tuple_79526, groupcounter_79529)
        
        # Assigning a type to the variable 'previous_context' (line 1090)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1090, 12), 'previous_context', tuple_79526)

        if more_types_in_union_79525:
            # SSA join for if statement (line 1089)
            module_type_store = module_type_store.join_ssa_context()


    
    # SSA branch for the else part of an if statement (line 1085)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'case' (line 1091)
    case_79530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1091, 9), 'case')
    
    # Obtaining an instance of the builtin type 'list' (line 1091)
    list_79531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1091, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1091)
    # Adding element type (line 1091)
    str_79532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1091, 18), 'str', 'dimension')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1091, 17), list_79531, str_79532)
    # Adding element type (line 1091)
    str_79533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1091, 31), 'str', 'intent')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1091, 17), list_79531, str_79533)
    # Adding element type (line 1091)
    str_79534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1091, 41), 'str', 'optional')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1091, 17), list_79531, str_79534)
    # Adding element type (line 1091)
    str_79535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1091, 53), 'str', 'required')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1091, 17), list_79531, str_79535)
    # Adding element type (line 1091)
    str_79536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1091, 65), 'str', 'external')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1091, 17), list_79531, str_79536)
    # Adding element type (line 1091)
    str_79537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1091, 77), 'str', 'public')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1091, 17), list_79531, str_79537)
    # Adding element type (line 1091)
    str_79538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1091, 87), 'str', 'private')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1091, 17), list_79531, str_79538)
    # Adding element type (line 1091)
    str_79539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1091, 98), 'str', 'intrisic')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1091, 17), list_79531, str_79539)
    
    # Applying the binary operator 'in' (line 1091)
    result_contains_79540 = python_operator(stypy.reporting.localization.Localization(__file__, 1091, 9), 'in', case_79530, list_79531)
    
    # Testing the type of an if condition (line 1091)
    if_condition_79541 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1091, 9), result_contains_79540)
    # Assigning a type to the variable 'if_condition_79541' (line 1091)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1091, 9), 'if_condition_79541', if_condition_79541)
    # SSA begins for if statement (line 1091)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1092):
    
    # Assigning a Subscript to a Name (line 1092):
    
    # Obtaining the type of the subscript
    str_79542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1092, 41), 'str', 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1092)
    groupcounter_79543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1092, 27), 'groupcounter')
    # Getting the type of 'groupcache' (line 1092)
    groupcache_79544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1092, 16), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1092)
    getitem___79545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1092, 16), groupcache_79544, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1092)
    subscript_call_result_79546 = invoke(stypy.reporting.localization.Localization(__file__, 1092, 16), getitem___79545, groupcounter_79543)
    
    # Obtaining the member '__getitem__' of a type (line 1092)
    getitem___79547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1092, 16), subscript_call_result_79546, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1092)
    subscript_call_result_79548 = invoke(stypy.reporting.localization.Localization(__file__, 1092, 16), getitem___79547, str_79542)
    
    # Assigning a type to the variable 'edecl' (line 1092)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1092, 8), 'edecl', subscript_call_result_79548)
    
    # Assigning a Call to a Name (line 1093):
    
    # Assigning a Call to a Name (line 1093):
    
    # Call to strip(...): (line 1093)
    # Processing the call keyword arguments (line 1093)
    kwargs_79555 = {}
    
    # Call to group(...): (line 1093)
    # Processing the call arguments (line 1093)
    str_79551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1093, 21), 'str', 'after')
    # Processing the call keyword arguments (line 1093)
    kwargs_79552 = {}
    # Getting the type of 'm' (line 1093)
    m_79549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1093, 13), 'm', False)
    # Obtaining the member 'group' of a type (line 1093)
    group_79550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1093, 13), m_79549, 'group')
    # Calling group(args, kwargs) (line 1093)
    group_call_result_79553 = invoke(stypy.reporting.localization.Localization(__file__, 1093, 13), group_79550, *[str_79551], **kwargs_79552)
    
    # Obtaining the member 'strip' of a type (line 1093)
    strip_79554 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1093, 13), group_call_result_79553, 'strip')
    # Calling strip(args, kwargs) (line 1093)
    strip_call_result_79556 = invoke(stypy.reporting.localization.Localization(__file__, 1093, 13), strip_79554, *[], **kwargs_79555)
    
    # Assigning a type to the variable 'll' (line 1093)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1093, 8), 'll', strip_call_result_79556)
    
    # Assigning a Call to a Name (line 1094):
    
    # Assigning a Call to a Name (line 1094):
    
    # Call to find(...): (line 1094)
    # Processing the call arguments (line 1094)
    str_79559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1094, 20), 'str', '::')
    # Processing the call keyword arguments (line 1094)
    kwargs_79560 = {}
    # Getting the type of 'll' (line 1094)
    ll_79557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1094, 12), 'll', False)
    # Obtaining the member 'find' of a type (line 1094)
    find_79558 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1094, 12), ll_79557, 'find')
    # Calling find(args, kwargs) (line 1094)
    find_call_result_79561 = invoke(stypy.reporting.localization.Localization(__file__, 1094, 12), find_79558, *[str_79559], **kwargs_79560)
    
    # Assigning a type to the variable 'i' (line 1094)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1094, 8), 'i', find_call_result_79561)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'i' (line 1095)
    i_79562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1095, 11), 'i')
    int_79563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1095, 15), 'int')
    # Applying the binary operator '<' (line 1095)
    result_lt_79564 = python_operator(stypy.reporting.localization.Localization(__file__, 1095, 11), '<', i_79562, int_79563)
    
    
    # Getting the type of 'case' (line 1095)
    case_79565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1095, 21), 'case')
    str_79566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1095, 29), 'str', 'intent')
    # Applying the binary operator '==' (line 1095)
    result_eq_79567 = python_operator(stypy.reporting.localization.Localization(__file__, 1095, 21), '==', case_79565, str_79566)
    
    # Applying the binary operator 'and' (line 1095)
    result_and_keyword_79568 = python_operator(stypy.reporting.localization.Localization(__file__, 1095, 11), 'and', result_lt_79564, result_eq_79567)
    
    # Testing the type of an if condition (line 1095)
    if_condition_79569 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1095, 8), result_and_keyword_79568)
    # Assigning a type to the variable 'if_condition_79569' (line 1095)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1095, 8), 'if_condition_79569', if_condition_79569)
    # SSA begins for if statement (line 1095)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1096):
    
    # Assigning a BinOp to a Name (line 1096):
    
    # Call to find(...): (line 1096)
    # Processing the call arguments (line 1096)
    str_79575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1096, 40), 'str', '@)@')
    # Processing the call keyword arguments (line 1096)
    kwargs_79576 = {}
    
    # Call to markouterparen(...): (line 1096)
    # Processing the call arguments (line 1096)
    # Getting the type of 'll' (line 1096)
    ll_79571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1096, 31), 'll', False)
    # Processing the call keyword arguments (line 1096)
    kwargs_79572 = {}
    # Getting the type of 'markouterparen' (line 1096)
    markouterparen_79570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1096, 16), 'markouterparen', False)
    # Calling markouterparen(args, kwargs) (line 1096)
    markouterparen_call_result_79573 = invoke(stypy.reporting.localization.Localization(__file__, 1096, 16), markouterparen_79570, *[ll_79571], **kwargs_79572)
    
    # Obtaining the member 'find' of a type (line 1096)
    find_79574 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1096, 16), markouterparen_call_result_79573, 'find')
    # Calling find(args, kwargs) (line 1096)
    find_call_result_79577 = invoke(stypy.reporting.localization.Localization(__file__, 1096, 16), find_79574, *[str_79575], **kwargs_79576)
    
    int_79578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1096, 49), 'int')
    # Applying the binary operator '-' (line 1096)
    result_sub_79579 = python_operator(stypy.reporting.localization.Localization(__file__, 1096, 16), '-', find_call_result_79577, int_79578)
    
    # Assigning a type to the variable 'i' (line 1096)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1096, 12), 'i', result_sub_79579)
    
    # Assigning a BinOp to a Name (line 1097):
    
    # Assigning a BinOp to a Name (line 1097):
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 1097)
    i_79580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1097, 21), 'i')
    int_79581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1097, 25), 'int')
    # Applying the binary operator '+' (line 1097)
    result_add_79582 = python_operator(stypy.reporting.localization.Localization(__file__, 1097, 21), '+', i_79580, int_79581)
    
    slice_79583 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1097, 17), None, result_add_79582, None)
    # Getting the type of 'll' (line 1097)
    ll_79584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1097, 17), 'll')
    # Obtaining the member '__getitem__' of a type (line 1097)
    getitem___79585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1097, 17), ll_79584, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1097)
    subscript_call_result_79586 = invoke(stypy.reporting.localization.Localization(__file__, 1097, 17), getitem___79585, slice_79583)
    
    str_79587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1097, 30), 'str', '::')
    # Applying the binary operator '+' (line 1097)
    result_add_79588 = python_operator(stypy.reporting.localization.Localization(__file__, 1097, 17), '+', subscript_call_result_79586, str_79587)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 1097)
    i_79589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1097, 40), 'i')
    int_79590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1097, 44), 'int')
    # Applying the binary operator '+' (line 1097)
    result_add_79591 = python_operator(stypy.reporting.localization.Localization(__file__, 1097, 40), '+', i_79589, int_79590)
    
    slice_79592 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1097, 37), result_add_79591, None, None)
    # Getting the type of 'll' (line 1097)
    ll_79593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1097, 37), 'll')
    # Obtaining the member '__getitem__' of a type (line 1097)
    getitem___79594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1097, 37), ll_79593, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1097)
    subscript_call_result_79595 = invoke(stypy.reporting.localization.Localization(__file__, 1097, 37), getitem___79594, slice_79592)
    
    # Applying the binary operator '+' (line 1097)
    result_add_79596 = python_operator(stypy.reporting.localization.Localization(__file__, 1097, 35), '+', result_add_79588, subscript_call_result_79595)
    
    # Assigning a type to the variable 'll' (line 1097)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1097, 12), 'll', result_add_79596)
    
    # Assigning a Call to a Name (line 1098):
    
    # Assigning a Call to a Name (line 1098):
    
    # Call to find(...): (line 1098)
    # Processing the call arguments (line 1098)
    str_79599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1098, 24), 'str', '::')
    # Processing the call keyword arguments (line 1098)
    kwargs_79600 = {}
    # Getting the type of 'll' (line 1098)
    ll_79597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1098, 16), 'll', False)
    # Obtaining the member 'find' of a type (line 1098)
    find_79598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1098, 16), ll_79597, 'find')
    # Calling find(args, kwargs) (line 1098)
    find_call_result_79601 = invoke(stypy.reporting.localization.Localization(__file__, 1098, 16), find_79598, *[str_79599], **kwargs_79600)
    
    # Assigning a type to the variable 'i' (line 1098)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1098, 12), 'i', find_call_result_79601)
    
    
    # Evaluating a boolean operation
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 1099)
    i_79602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1099, 18), 'i')
    slice_79603 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1099, 15), i_79602, None, None)
    # Getting the type of 'll' (line 1099)
    ll_79604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1099, 15), 'll')
    # Obtaining the member '__getitem__' of a type (line 1099)
    getitem___79605 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1099, 15), ll_79604, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1099)
    subscript_call_result_79606 = invoke(stypy.reporting.localization.Localization(__file__, 1099, 15), getitem___79605, slice_79603)
    
    str_79607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1099, 25), 'str', '::')
    # Applying the binary operator '==' (line 1099)
    result_eq_79608 = python_operator(stypy.reporting.localization.Localization(__file__, 1099, 15), '==', subscript_call_result_79606, str_79607)
    
    
    str_79609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1099, 34), 'str', 'args')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1099)
    groupcounter_79610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1099, 55), 'groupcounter')
    # Getting the type of 'groupcache' (line 1099)
    groupcache_79611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1099, 44), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1099)
    getitem___79612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1099, 44), groupcache_79611, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1099)
    subscript_call_result_79613 = invoke(stypy.reporting.localization.Localization(__file__, 1099, 44), getitem___79612, groupcounter_79610)
    
    # Applying the binary operator 'in' (line 1099)
    result_contains_79614 = python_operator(stypy.reporting.localization.Localization(__file__, 1099, 34), 'in', str_79609, subscript_call_result_79613)
    
    # Applying the binary operator 'and' (line 1099)
    result_and_keyword_79615 = python_operator(stypy.reporting.localization.Localization(__file__, 1099, 15), 'and', result_eq_79608, result_contains_79614)
    
    # Testing the type of an if condition (line 1099)
    if_condition_79616 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1099, 12), result_and_keyword_79615)
    # Assigning a type to the variable 'if_condition_79616' (line 1099)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1099, 12), 'if_condition_79616', if_condition_79616)
    # SSA begins for if statement (line 1099)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1100)
    # Processing the call arguments (line 1100)
    str_79618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1100, 24), 'str', 'All arguments will have attribute %s%s\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1101)
    tuple_79619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1101, 25), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1101)
    # Adding element type (line 1101)
    
    # Call to group(...): (line 1101)
    # Processing the call arguments (line 1101)
    str_79622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1101, 33), 'str', 'this')
    # Processing the call keyword arguments (line 1101)
    kwargs_79623 = {}
    # Getting the type of 'm' (line 1101)
    m_79620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 25), 'm', False)
    # Obtaining the member 'group' of a type (line 1101)
    group_79621 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1101, 25), m_79620, 'group')
    # Calling group(args, kwargs) (line 1101)
    group_call_result_79624 = invoke(stypy.reporting.localization.Localization(__file__, 1101, 25), group_79621, *[str_79622], **kwargs_79623)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1101, 25), tuple_79619, group_call_result_79624)
    # Adding element type (line 1101)
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 1101)
    i_79625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 46), 'i', False)
    slice_79626 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1101, 42), None, i_79625, None)
    # Getting the type of 'll' (line 1101)
    ll_79627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 42), 'll', False)
    # Obtaining the member '__getitem__' of a type (line 1101)
    getitem___79628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1101, 42), ll_79627, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1101)
    subscript_call_result_79629 = invoke(stypy.reporting.localization.Localization(__file__, 1101, 42), getitem___79628, slice_79626)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1101, 25), tuple_79619, subscript_call_result_79629)
    
    # Applying the binary operator '%' (line 1100)
    result_mod_79630 = python_operator(stypy.reporting.localization.Localization(__file__, 1100, 24), '%', str_79618, tuple_79619)
    
    # Processing the call keyword arguments (line 1100)
    kwargs_79631 = {}
    # Getting the type of 'outmess' (line 1100)
    outmess_79617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1100, 16), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1100)
    outmess_call_result_79632 = invoke(stypy.reporting.localization.Localization(__file__, 1100, 16), outmess_79617, *[result_mod_79630], **kwargs_79631)
    
    
    # Assigning a BinOp to a Name (line 1102):
    
    # Assigning a BinOp to a Name (line 1102):
    # Getting the type of 'll' (line 1102)
    ll_79633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 21), 'll')
    
    # Call to join(...): (line 1102)
    # Processing the call arguments (line 1102)
    
    # Obtaining the type of the subscript
    str_79636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1102, 60), 'str', 'args')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1102)
    groupcounter_79637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 46), 'groupcounter', False)
    # Getting the type of 'groupcache' (line 1102)
    groupcache_79638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 35), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 1102)
    getitem___79639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1102, 35), groupcache_79638, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1102)
    subscript_call_result_79640 = invoke(stypy.reporting.localization.Localization(__file__, 1102, 35), getitem___79639, groupcounter_79637)
    
    # Obtaining the member '__getitem__' of a type (line 1102)
    getitem___79641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1102, 35), subscript_call_result_79640, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1102)
    subscript_call_result_79642 = invoke(stypy.reporting.localization.Localization(__file__, 1102, 35), getitem___79641, str_79636)
    
    # Processing the call keyword arguments (line 1102)
    kwargs_79643 = {}
    str_79634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1102, 26), 'str', ',')
    # Obtaining the member 'join' of a type (line 1102)
    join_79635 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1102, 26), str_79634, 'join')
    # Calling join(args, kwargs) (line 1102)
    join_call_result_79644 = invoke(stypy.reporting.localization.Localization(__file__, 1102, 26), join_79635, *[subscript_call_result_79642], **kwargs_79643)
    
    # Applying the binary operator '+' (line 1102)
    result_add_79645 = python_operator(stypy.reporting.localization.Localization(__file__, 1102, 21), '+', ll_79633, join_call_result_79644)
    
    # Assigning a type to the variable 'll' (line 1102)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1102, 16), 'll', result_add_79645)
    # SSA join for if statement (line 1099)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1095)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'i' (line 1103)
    i_79646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 11), 'i')
    int_79647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1103, 15), 'int')
    # Applying the binary operator '<' (line 1103)
    result_lt_79648 = python_operator(stypy.reporting.localization.Localization(__file__, 1103, 11), '<', i_79646, int_79647)
    
    # Testing the type of an if condition (line 1103)
    if_condition_79649 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1103, 8), result_lt_79648)
    # Assigning a type to the variable 'if_condition_79649' (line 1103)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1103, 8), 'if_condition_79649', if_condition_79649)
    # SSA begins for if statement (line 1103)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 1104):
    
    # Assigning a Num to a Name (line 1104):
    int_79650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1104, 16), 'int')
    # Assigning a type to the variable 'i' (line 1104)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1104, 12), 'i', int_79650)
    
    # Assigning a Str to a Name (line 1105):
    
    # Assigning a Str to a Name (line 1105):
    str_79651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1105, 17), 'str', '')
    # Assigning a type to the variable 'pl' (line 1105)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 12), 'pl', str_79651)
    # SSA branch for the else part of an if statement (line 1103)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Name (line 1107):
    
    # Assigning a Call to a Name (line 1107):
    
    # Call to strip(...): (line 1107)
    # Processing the call keyword arguments (line 1107)
    kwargs_79658 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 1107)
    i_79652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 21), 'i', False)
    slice_79653 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1107, 17), None, i_79652, None)
    # Getting the type of 'll' (line 1107)
    ll_79654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 17), 'll', False)
    # Obtaining the member '__getitem__' of a type (line 1107)
    getitem___79655 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1107, 17), ll_79654, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1107)
    subscript_call_result_79656 = invoke(stypy.reporting.localization.Localization(__file__, 1107, 17), getitem___79655, slice_79653)
    
    # Obtaining the member 'strip' of a type (line 1107)
    strip_79657 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1107, 17), subscript_call_result_79656, 'strip')
    # Calling strip(args, kwargs) (line 1107)
    strip_call_result_79659 = invoke(stypy.reporting.localization.Localization(__file__, 1107, 17), strip_79657, *[], **kwargs_79658)
    
    # Assigning a type to the variable 'pl' (line 1107)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1107, 12), 'pl', strip_call_result_79659)
    
    # Assigning a Subscript to a Name (line 1108):
    
    # Assigning a Subscript to a Name (line 1108):
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 1108)
    i_79660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1108, 20), 'i')
    int_79661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1108, 24), 'int')
    # Applying the binary operator '+' (line 1108)
    result_add_79662 = python_operator(stypy.reporting.localization.Localization(__file__, 1108, 20), '+', i_79660, int_79661)
    
    slice_79663 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1108, 17), result_add_79662, None, None)
    # Getting the type of 'll' (line 1108)
    ll_79664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1108, 17), 'll')
    # Obtaining the member '__getitem__' of a type (line 1108)
    getitem___79665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1108, 17), ll_79664, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1108)
    subscript_call_result_79666 = invoke(stypy.reporting.localization.Localization(__file__, 1108, 17), getitem___79665, slice_79663)
    
    # Assigning a type to the variable 'll' (line 1108)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1108, 12), 'll', subscript_call_result_79666)
    # SSA join for if statement (line 1103)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1109):
    
    # Assigning a Call to a Name (line 1109):
    
    # Call to split(...): (line 1109)
    # Processing the call arguments (line 1109)
    str_79672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1109, 38), 'str', '@,@')
    # Processing the call keyword arguments (line 1109)
    kwargs_79673 = {}
    
    # Call to markoutercomma(...): (line 1109)
    # Processing the call arguments (line 1109)
    # Getting the type of 'pl' (line 1109)
    pl_79668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1109, 28), 'pl', False)
    # Processing the call keyword arguments (line 1109)
    kwargs_79669 = {}
    # Getting the type of 'markoutercomma' (line 1109)
    markoutercomma_79667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1109, 13), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 1109)
    markoutercomma_call_result_79670 = invoke(stypy.reporting.localization.Localization(__file__, 1109, 13), markoutercomma_79667, *[pl_79668], **kwargs_79669)
    
    # Obtaining the member 'split' of a type (line 1109)
    split_79671 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1109, 13), markoutercomma_call_result_79670, 'split')
    # Calling split(args, kwargs) (line 1109)
    split_call_result_79674 = invoke(stypy.reporting.localization.Localization(__file__, 1109, 13), split_79671, *[str_79672], **kwargs_79673)
    
    # Assigning a type to the variable 'ch' (line 1109)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1109, 8), 'ch', split_call_result_79674)
    
    
    
    # Call to len(...): (line 1110)
    # Processing the call arguments (line 1110)
    # Getting the type of 'ch' (line 1110)
    ch_79676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1110, 15), 'ch', False)
    # Processing the call keyword arguments (line 1110)
    kwargs_79677 = {}
    # Getting the type of 'len' (line 1110)
    len_79675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1110, 11), 'len', False)
    # Calling len(args, kwargs) (line 1110)
    len_call_result_79678 = invoke(stypy.reporting.localization.Localization(__file__, 1110, 11), len_79675, *[ch_79676], **kwargs_79677)
    
    int_79679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1110, 21), 'int')
    # Applying the binary operator '>' (line 1110)
    result_gt_79680 = python_operator(stypy.reporting.localization.Localization(__file__, 1110, 11), '>', len_call_result_79678, int_79679)
    
    # Testing the type of an if condition (line 1110)
    if_condition_79681 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1110, 8), result_gt_79680)
    # Assigning a type to the variable 'if_condition_79681' (line 1110)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1110, 8), 'if_condition_79681', if_condition_79681)
    # SSA begins for if statement (line 1110)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1111):
    
    # Assigning a Subscript to a Name (line 1111):
    
    # Obtaining the type of the subscript
    int_79682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1111, 20), 'int')
    # Getting the type of 'ch' (line 1111)
    ch_79683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1111, 17), 'ch')
    # Obtaining the member '__getitem__' of a type (line 1111)
    getitem___79684 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1111, 17), ch_79683, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1111)
    subscript_call_result_79685 = invoke(stypy.reporting.localization.Localization(__file__, 1111, 17), getitem___79684, int_79682)
    
    # Assigning a type to the variable 'pl' (line 1111)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1111, 12), 'pl', subscript_call_result_79685)
    
    # Call to outmess(...): (line 1112)
    # Processing the call arguments (line 1112)
    str_79687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1112, 20), 'str', 'analyzeline: cannot handle multiple attributes without type specification. Ignoring %r.\n')
    
    # Call to join(...): (line 1113)
    # Processing the call arguments (line 1113)
    
    # Obtaining the type of the subscript
    int_79690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1113, 28), 'int')
    slice_79691 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1113, 25), int_79690, None, None)
    # Getting the type of 'ch' (line 1113)
    ch_79692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1113, 25), 'ch', False)
    # Obtaining the member '__getitem__' of a type (line 1113)
    getitem___79693 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1113, 25), ch_79692, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1113)
    subscript_call_result_79694 = invoke(stypy.reporting.localization.Localization(__file__, 1113, 25), getitem___79693, slice_79691)
    
    # Processing the call keyword arguments (line 1113)
    kwargs_79695 = {}
    str_79688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1113, 16), 'str', ',')
    # Obtaining the member 'join' of a type (line 1113)
    join_79689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1113, 16), str_79688, 'join')
    # Calling join(args, kwargs) (line 1113)
    join_call_result_79696 = invoke(stypy.reporting.localization.Localization(__file__, 1113, 16), join_79689, *[subscript_call_result_79694], **kwargs_79695)
    
    # Applying the binary operator '%' (line 1112)
    result_mod_79697 = python_operator(stypy.reporting.localization.Localization(__file__, 1112, 20), '%', str_79687, join_call_result_79696)
    
    # Processing the call keyword arguments (line 1112)
    kwargs_79698 = {}
    # Getting the type of 'outmess' (line 1112)
    outmess_79686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 12), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1112)
    outmess_call_result_79699 = invoke(stypy.reporting.localization.Localization(__file__, 1112, 12), outmess_79686, *[result_mod_79697], **kwargs_79698)
    
    # SSA join for if statement (line 1110)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 1114):
    
    # Assigning a Name to a Name (line 1114):
    # Getting the type of 'None' (line 1114)
    None_79700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1114, 20), 'None')
    # Assigning a type to the variable 'last_name' (line 1114)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1114, 8), 'last_name', None_79700)
    
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to split(...): (line 1116)
    # Processing the call arguments (line 1116)
    str_79710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1116, 62), 'str', '@,@')
    # Processing the call keyword arguments (line 1116)
    kwargs_79711 = {}
    
    # Call to markoutercomma(...): (line 1116)
    # Processing the call arguments (line 1116)
    # Getting the type of 'll' (line 1116)
    ll_79706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 52), 'll', False)
    # Processing the call keyword arguments (line 1116)
    kwargs_79707 = {}
    # Getting the type of 'markoutercomma' (line 1116)
    markoutercomma_79705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 37), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 1116)
    markoutercomma_call_result_79708 = invoke(stypy.reporting.localization.Localization(__file__, 1116, 37), markoutercomma_79705, *[ll_79706], **kwargs_79707)
    
    # Obtaining the member 'split' of a type (line 1116)
    split_79709 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1116, 37), markoutercomma_call_result_79708, 'split')
    # Calling split(args, kwargs) (line 1116)
    split_call_result_79712 = invoke(stypy.reporting.localization.Localization(__file__, 1116, 37), split_79709, *[str_79710], **kwargs_79711)
    
    comprehension_79713 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1116, 18), split_call_result_79712)
    # Assigning a type to the variable 'x' (line 1116)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1116, 18), 'x', comprehension_79713)
    
    # Call to strip(...): (line 1116)
    # Processing the call keyword arguments (line 1116)
    kwargs_79703 = {}
    # Getting the type of 'x' (line 1116)
    x_79701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 18), 'x', False)
    # Obtaining the member 'strip' of a type (line 1116)
    strip_79702 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1116, 18), x_79701, 'strip')
    # Calling strip(args, kwargs) (line 1116)
    strip_call_result_79704 = invoke(stypy.reporting.localization.Localization(__file__, 1116, 18), strip_79702, *[], **kwargs_79703)
    
    list_79714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1116, 18), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1116, 18), list_79714, strip_call_result_79704)
    # Testing the type of a for loop iterable (line 1116)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1116, 8), list_79714)
    # Getting the type of the for loop variable (line 1116)
    for_loop_var_79715 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1116, 8), list_79714)
    # Assigning a type to the variable 'e' (line 1116)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1116, 8), 'e', for_loop_var_79715)
    # SSA begins for a for statement (line 1116)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 1117):
    
    # Assigning a Call to a Name (line 1117):
    
    # Call to match(...): (line 1117)
    # Processing the call arguments (line 1117)
    # Getting the type of 'e' (line 1117)
    e_79718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 35), 'e', False)
    # Processing the call keyword arguments (line 1117)
    kwargs_79719 = {}
    # Getting the type of 'namepattern' (line 1117)
    namepattern_79716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 17), 'namepattern', False)
    # Obtaining the member 'match' of a type (line 1117)
    match_79717 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1117, 17), namepattern_79716, 'match')
    # Calling match(args, kwargs) (line 1117)
    match_call_result_79720 = invoke(stypy.reporting.localization.Localization(__file__, 1117, 17), match_79717, *[e_79718], **kwargs_79719)
    
    # Assigning a type to the variable 'm1' (line 1117)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1117, 12), 'm1', match_call_result_79720)
    
    
    # Getting the type of 'm1' (line 1118)
    m1_79721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 19), 'm1')
    # Applying the 'not' unary operator (line 1118)
    result_not__79722 = python_operator(stypy.reporting.localization.Localization(__file__, 1118, 15), 'not', m1_79721)
    
    # Testing the type of an if condition (line 1118)
    if_condition_79723 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1118, 12), result_not__79722)
    # Assigning a type to the variable 'if_condition_79723' (line 1118)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1118, 12), 'if_condition_79723', if_condition_79723)
    # SSA begins for if statement (line 1118)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'case' (line 1119)
    case_79724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 19), 'case')
    
    # Obtaining an instance of the builtin type 'list' (line 1119)
    list_79725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1119, 27), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1119)
    # Adding element type (line 1119)
    str_79726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1119, 28), 'str', 'public')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1119, 27), list_79725, str_79726)
    # Adding element type (line 1119)
    str_79727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1119, 38), 'str', 'private')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1119, 27), list_79725, str_79727)
    
    # Applying the binary operator 'in' (line 1119)
    result_contains_79728 = python_operator(stypy.reporting.localization.Localization(__file__, 1119, 19), 'in', case_79724, list_79725)
    
    # Testing the type of an if condition (line 1119)
    if_condition_79729 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1119, 16), result_contains_79728)
    # Assigning a type to the variable 'if_condition_79729' (line 1119)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1119, 16), 'if_condition_79729', if_condition_79729)
    # SSA begins for if statement (line 1119)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 1120):
    
    # Assigning a Str to a Name (line 1120):
    str_79730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1120, 24), 'str', '')
    # Assigning a type to the variable 'k' (line 1120)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1120, 20), 'k', str_79730)
    # SSA branch for the else part of an if statement (line 1119)
    module_type_store.open_ssa_branch('else')
    
    # Call to print(...): (line 1122)
    # Processing the call arguments (line 1122)
    
    # Call to groupdict(...): (line 1122)
    # Processing the call keyword arguments (line 1122)
    kwargs_79734 = {}
    # Getting the type of 'm' (line 1122)
    m_79732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1122, 26), 'm', False)
    # Obtaining the member 'groupdict' of a type (line 1122)
    groupdict_79733 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1122, 26), m_79732, 'groupdict')
    # Calling groupdict(args, kwargs) (line 1122)
    groupdict_call_result_79735 = invoke(stypy.reporting.localization.Localization(__file__, 1122, 26), groupdict_79733, *[], **kwargs_79734)
    
    # Processing the call keyword arguments (line 1122)
    kwargs_79736 = {}
    # Getting the type of 'print' (line 1122)
    print_79731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1122, 20), 'print', False)
    # Calling print(args, kwargs) (line 1122)
    print_call_result_79737 = invoke(stypy.reporting.localization.Localization(__file__, 1122, 20), print_79731, *[groupdict_call_result_79735], **kwargs_79736)
    
    
    # Call to outmess(...): (line 1123)
    # Processing the call arguments (line 1123)
    str_79739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1123, 28), 'str', 'analyzeline: no name pattern found in %s statement for %s. Skipping.\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1124)
    tuple_79740 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1124, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1124)
    # Adding element type (line 1124)
    # Getting the type of 'case' (line 1124)
    case_79741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1124, 24), 'case', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1124, 24), tuple_79740, case_79741)
    # Adding element type (line 1124)
    
    # Call to repr(...): (line 1124)
    # Processing the call arguments (line 1124)
    # Getting the type of 'e' (line 1124)
    e_79743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1124, 35), 'e', False)
    # Processing the call keyword arguments (line 1124)
    kwargs_79744 = {}
    # Getting the type of 'repr' (line 1124)
    repr_79742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1124, 30), 'repr', False)
    # Calling repr(args, kwargs) (line 1124)
    repr_call_result_79745 = invoke(stypy.reporting.localization.Localization(__file__, 1124, 30), repr_79742, *[e_79743], **kwargs_79744)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1124, 24), tuple_79740, repr_call_result_79745)
    
    # Applying the binary operator '%' (line 1123)
    result_mod_79746 = python_operator(stypy.reporting.localization.Localization(__file__, 1123, 28), '%', str_79739, tuple_79740)
    
    # Processing the call keyword arguments (line 1123)
    kwargs_79747 = {}
    # Getting the type of 'outmess' (line 1123)
    outmess_79738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 20), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1123)
    outmess_call_result_79748 = invoke(stypy.reporting.localization.Localization(__file__, 1123, 20), outmess_79738, *[result_mod_79746], **kwargs_79747)
    
    # SSA join for if statement (line 1119)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1118)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Name (line 1127):
    
    # Assigning a Call to a Name (line 1127):
    
    # Call to rmbadname1(...): (line 1127)
    # Processing the call arguments (line 1127)
    
    # Call to group(...): (line 1127)
    # Processing the call arguments (line 1127)
    str_79752 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1127, 40), 'str', 'name')
    # Processing the call keyword arguments (line 1127)
    kwargs_79753 = {}
    # Getting the type of 'm1' (line 1127)
    m1_79750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1127, 31), 'm1', False)
    # Obtaining the member 'group' of a type (line 1127)
    group_79751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1127, 31), m1_79750, 'group')
    # Calling group(args, kwargs) (line 1127)
    group_call_result_79754 = invoke(stypy.reporting.localization.Localization(__file__, 1127, 31), group_79751, *[str_79752], **kwargs_79753)
    
    # Processing the call keyword arguments (line 1127)
    kwargs_79755 = {}
    # Getting the type of 'rmbadname1' (line 1127)
    rmbadname1_79749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1127, 20), 'rmbadname1', False)
    # Calling rmbadname1(args, kwargs) (line 1127)
    rmbadname1_call_result_79756 = invoke(stypy.reporting.localization.Localization(__file__, 1127, 20), rmbadname1_79749, *[group_call_result_79754], **kwargs_79755)
    
    # Assigning a type to the variable 'k' (line 1127)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1127, 16), 'k', rmbadname1_call_result_79756)
    # SSA join for if statement (line 1118)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'k' (line 1128)
    k_79757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1128, 15), 'k')
    # Getting the type of 'edecl' (line 1128)
    edecl_79758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1128, 24), 'edecl')
    # Applying the binary operator 'notin' (line 1128)
    result_contains_79759 = python_operator(stypy.reporting.localization.Localization(__file__, 1128, 15), 'notin', k_79757, edecl_79758)
    
    # Testing the type of an if condition (line 1128)
    if_condition_79760 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1128, 12), result_contains_79759)
    # Assigning a type to the variable 'if_condition_79760' (line 1128)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1128, 12), 'if_condition_79760', if_condition_79760)
    # SSA begins for if statement (line 1128)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Dict to a Subscript (line 1129):
    
    # Assigning a Dict to a Subscript (line 1129):
    
    # Obtaining an instance of the builtin type 'dict' (line 1129)
    dict_79761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1129, 27), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1129)
    
    # Getting the type of 'edecl' (line 1129)
    edecl_79762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1129, 16), 'edecl')
    # Getting the type of 'k' (line 1129)
    k_79763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1129, 22), 'k')
    # Storing an element on a container (line 1129)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1129, 16), edecl_79762, (k_79763, dict_79761))
    # SSA join for if statement (line 1128)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'case' (line 1130)
    case_79764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1130, 15), 'case')
    str_79765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1130, 23), 'str', 'dimension')
    # Applying the binary operator '==' (line 1130)
    result_eq_79766 = python_operator(stypy.reporting.localization.Localization(__file__, 1130, 15), '==', case_79764, str_79765)
    
    # Testing the type of an if condition (line 1130)
    if_condition_79767 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1130, 12), result_eq_79766)
    # Assigning a type to the variable 'if_condition_79767' (line 1130)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1130, 12), 'if_condition_79767', if_condition_79767)
    # SSA begins for if statement (line 1130)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1131):
    
    # Assigning a BinOp to a Name (line 1131):
    # Getting the type of 'case' (line 1131)
    case_79768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1131, 21), 'case')
    
    # Call to group(...): (line 1131)
    # Processing the call arguments (line 1131)
    str_79771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1131, 37), 'str', 'after')
    # Processing the call keyword arguments (line 1131)
    kwargs_79772 = {}
    # Getting the type of 'm1' (line 1131)
    m1_79769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1131, 28), 'm1', False)
    # Obtaining the member 'group' of a type (line 1131)
    group_79770 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1131, 28), m1_79769, 'group')
    # Calling group(args, kwargs) (line 1131)
    group_call_result_79773 = invoke(stypy.reporting.localization.Localization(__file__, 1131, 28), group_79770, *[str_79771], **kwargs_79772)
    
    # Applying the binary operator '+' (line 1131)
    result_add_79774 = python_operator(stypy.reporting.localization.Localization(__file__, 1131, 21), '+', case_79768, group_call_result_79773)
    
    # Assigning a type to the variable 'ap' (line 1131)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1131, 16), 'ap', result_add_79774)
    # SSA join for if statement (line 1130)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'case' (line 1132)
    case_79775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1132, 15), 'case')
    str_79776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1132, 23), 'str', 'intent')
    # Applying the binary operator '==' (line 1132)
    result_eq_79777 = python_operator(stypy.reporting.localization.Localization(__file__, 1132, 15), '==', case_79775, str_79776)
    
    # Testing the type of an if condition (line 1132)
    if_condition_79778 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1132, 12), result_eq_79777)
    # Assigning a type to the variable 'if_condition_79778' (line 1132)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1132, 12), 'if_condition_79778', if_condition_79778)
    # SSA begins for if statement (line 1132)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1133):
    
    # Assigning a BinOp to a Name (line 1133):
    
    # Call to group(...): (line 1133)
    # Processing the call arguments (line 1133)
    str_79781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1133, 29), 'str', 'this')
    # Processing the call keyword arguments (line 1133)
    kwargs_79782 = {}
    # Getting the type of 'm' (line 1133)
    m_79779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1133, 21), 'm', False)
    # Obtaining the member 'group' of a type (line 1133)
    group_79780 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1133, 21), m_79779, 'group')
    # Calling group(args, kwargs) (line 1133)
    group_call_result_79783 = invoke(stypy.reporting.localization.Localization(__file__, 1133, 21), group_79780, *[str_79781], **kwargs_79782)
    
    # Getting the type of 'pl' (line 1133)
    pl_79784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1133, 39), 'pl')
    # Applying the binary operator '+' (line 1133)
    result_add_79785 = python_operator(stypy.reporting.localization.Localization(__file__, 1133, 21), '+', group_call_result_79783, pl_79784)
    
    # Assigning a type to the variable 'ap' (line 1133)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1133, 16), 'ap', result_add_79785)
    
    
    # Call to match(...): (line 1134)
    # Processing the call arguments (line 1134)
    # Getting the type of 'ap' (line 1134)
    ap_79788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1134, 48), 'ap', False)
    # Processing the call keyword arguments (line 1134)
    kwargs_79789 = {}
    # Getting the type of '_intentcallbackpattern' (line 1134)
    _intentcallbackpattern_79786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1134, 19), '_intentcallbackpattern', False)
    # Obtaining the member 'match' of a type (line 1134)
    match_79787 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1134, 19), _intentcallbackpattern_79786, 'match')
    # Calling match(args, kwargs) (line 1134)
    match_call_result_79790 = invoke(stypy.reporting.localization.Localization(__file__, 1134, 19), match_79787, *[ap_79788], **kwargs_79789)
    
    # Testing the type of an if condition (line 1134)
    if_condition_79791 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1134, 16), match_call_result_79790)
    # Assigning a type to the variable 'if_condition_79791' (line 1134)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1134, 16), 'if_condition_79791', if_condition_79791)
    # SSA begins for if statement (line 1134)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'k' (line 1135)
    k_79792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1135, 23), 'k')
    
    # Obtaining the type of the subscript
    str_79793 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1135, 57), 'str', 'args')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1135)
    groupcounter_79794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1135, 43), 'groupcounter')
    # Getting the type of 'groupcache' (line 1135)
    groupcache_79795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1135, 32), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1135)
    getitem___79796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1135, 32), groupcache_79795, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1135)
    subscript_call_result_79797 = invoke(stypy.reporting.localization.Localization(__file__, 1135, 32), getitem___79796, groupcounter_79794)
    
    # Obtaining the member '__getitem__' of a type (line 1135)
    getitem___79798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1135, 32), subscript_call_result_79797, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1135)
    subscript_call_result_79799 = invoke(stypy.reporting.localization.Localization(__file__, 1135, 32), getitem___79798, str_79793)
    
    # Applying the binary operator 'notin' (line 1135)
    result_contains_79800 = python_operator(stypy.reporting.localization.Localization(__file__, 1135, 23), 'notin', k_79792, subscript_call_result_79799)
    
    # Testing the type of an if condition (line 1135)
    if_condition_79801 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1135, 20), result_contains_79800)
    # Assigning a type to the variable 'if_condition_79801' (line 1135)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1135, 20), 'if_condition_79801', if_condition_79801)
    # SSA begins for if statement (line 1135)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'groupcounter' (line 1136)
    groupcounter_79802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1136, 27), 'groupcounter')
    int_79803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1136, 42), 'int')
    # Applying the binary operator '>' (line 1136)
    result_gt_79804 = python_operator(stypy.reporting.localization.Localization(__file__, 1136, 27), '>', groupcounter_79802, int_79803)
    
    # Testing the type of an if condition (line 1136)
    if_condition_79805 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1136, 24), result_gt_79804)
    # Assigning a type to the variable 'if_condition_79805' (line 1136)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1136, 24), 'if_condition_79805', if_condition_79805)
    # SSA begins for if statement (line 1136)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    str_79806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1137, 31), 'str', '__user__')
    
    # Obtaining the type of the subscript
    str_79807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1137, 78), 'str', 'name')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1137)
    groupcounter_79808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1137, 60), 'groupcounter')
    int_79809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1137, 75), 'int')
    # Applying the binary operator '-' (line 1137)
    result_sub_79810 = python_operator(stypy.reporting.localization.Localization(__file__, 1137, 60), '-', groupcounter_79808, int_79809)
    
    # Getting the type of 'groupcache' (line 1137)
    groupcache_79811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1137, 49), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1137)
    getitem___79812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1137, 49), groupcache_79811, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1137)
    subscript_call_result_79813 = invoke(stypy.reporting.localization.Localization(__file__, 1137, 49), getitem___79812, result_sub_79810)
    
    # Obtaining the member '__getitem__' of a type (line 1137)
    getitem___79814 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1137, 49), subscript_call_result_79813, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1137)
    subscript_call_result_79815 = invoke(stypy.reporting.localization.Localization(__file__, 1137, 49), getitem___79814, str_79807)
    
    # Applying the binary operator 'notin' (line 1137)
    result_contains_79816 = python_operator(stypy.reporting.localization.Localization(__file__, 1137, 31), 'notin', str_79806, subscript_call_result_79815)
    
    # Testing the type of an if condition (line 1137)
    if_condition_79817 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1137, 28), result_contains_79816)
    # Assigning a type to the variable 'if_condition_79817' (line 1137)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1137, 28), 'if_condition_79817', if_condition_79817)
    # SSA begins for if statement (line 1137)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1138)
    # Processing the call arguments (line 1138)
    str_79819 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1139, 36), 'str', 'analyzeline: missing __user__ module (could be nothing)\n')
    # Processing the call keyword arguments (line 1138)
    kwargs_79820 = {}
    # Getting the type of 'outmess' (line 1138)
    outmess_79818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1138, 32), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1138)
    outmess_call_result_79821 = invoke(stypy.reporting.localization.Localization(__file__, 1138, 32), outmess_79818, *[str_79819], **kwargs_79820)
    
    # SSA join for if statement (line 1137)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'k' (line 1141)
    k_79822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1141, 31), 'k')
    
    # Obtaining the type of the subscript
    str_79823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1141, 61), 'str', 'name')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1141)
    groupcounter_79824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1141, 47), 'groupcounter')
    # Getting the type of 'groupcache' (line 1141)
    groupcache_79825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1141, 36), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1141)
    getitem___79826 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1141, 36), groupcache_79825, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1141)
    subscript_call_result_79827 = invoke(stypy.reporting.localization.Localization(__file__, 1141, 36), getitem___79826, groupcounter_79824)
    
    # Obtaining the member '__getitem__' of a type (line 1141)
    getitem___79828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1141, 36), subscript_call_result_79827, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1141)
    subscript_call_result_79829 = invoke(stypy.reporting.localization.Localization(__file__, 1141, 36), getitem___79828, str_79823)
    
    # Applying the binary operator '!=' (line 1141)
    result_ne_79830 = python_operator(stypy.reporting.localization.Localization(__file__, 1141, 31), '!=', k_79822, subscript_call_result_79829)
    
    # Testing the type of an if condition (line 1141)
    if_condition_79831 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1141, 28), result_ne_79830)
    # Assigning a type to the variable 'if_condition_79831' (line 1141)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1141, 28), 'if_condition_79831', if_condition_79831)
    # SSA begins for if statement (line 1141)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1142)
    # Processing the call arguments (line 1142)
    str_79833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1142, 40), 'str', 'analyzeline: appending intent(callback) %s to %s arguments\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1143)
    tuple_79834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1143, 64), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1143)
    # Adding element type (line 1143)
    # Getting the type of 'k' (line 1143)
    k_79835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1143, 64), 'k', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1143, 64), tuple_79834, k_79835)
    # Adding element type (line 1143)
    
    # Obtaining the type of the subscript
    str_79836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1143, 92), 'str', 'name')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1143)
    groupcounter_79837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1143, 78), 'groupcounter', False)
    # Getting the type of 'groupcache' (line 1143)
    groupcache_79838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1143, 67), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 1143)
    getitem___79839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1143, 67), groupcache_79838, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1143)
    subscript_call_result_79840 = invoke(stypy.reporting.localization.Localization(__file__, 1143, 67), getitem___79839, groupcounter_79837)
    
    # Obtaining the member '__getitem__' of a type (line 1143)
    getitem___79841 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1143, 67), subscript_call_result_79840, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1143)
    subscript_call_result_79842 = invoke(stypy.reporting.localization.Localization(__file__, 1143, 67), getitem___79841, str_79836)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1143, 64), tuple_79834, subscript_call_result_79842)
    
    # Applying the binary operator '%' (line 1142)
    result_mod_79843 = python_operator(stypy.reporting.localization.Localization(__file__, 1142, 40), '%', str_79833, tuple_79834)
    
    # Processing the call keyword arguments (line 1142)
    kwargs_79844 = {}
    # Getting the type of 'outmess' (line 1142)
    outmess_79832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 32), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1142)
    outmess_call_result_79845 = invoke(stypy.reporting.localization.Localization(__file__, 1142, 32), outmess_79832, *[result_mod_79843], **kwargs_79844)
    
    
    # Call to append(...): (line 1144)
    # Processing the call arguments (line 1144)
    # Getting the type of 'k' (line 1144)
    k_79854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1144, 72), 'k', False)
    # Processing the call keyword arguments (line 1144)
    kwargs_79855 = {}
    
    # Obtaining the type of the subscript
    str_79846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1144, 57), 'str', 'args')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1144)
    groupcounter_79847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1144, 43), 'groupcounter', False)
    # Getting the type of 'groupcache' (line 1144)
    groupcache_79848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1144, 32), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 1144)
    getitem___79849 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1144, 32), groupcache_79848, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1144)
    subscript_call_result_79850 = invoke(stypy.reporting.localization.Localization(__file__, 1144, 32), getitem___79849, groupcounter_79847)
    
    # Obtaining the member '__getitem__' of a type (line 1144)
    getitem___79851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1144, 32), subscript_call_result_79850, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1144)
    subscript_call_result_79852 = invoke(stypy.reporting.localization.Localization(__file__, 1144, 32), getitem___79851, str_79846)
    
    # Obtaining the member 'append' of a type (line 1144)
    append_79853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1144, 32), subscript_call_result_79852, 'append')
    # Calling append(args, kwargs) (line 1144)
    append_call_result_79856 = invoke(stypy.reporting.localization.Localization(__file__, 1144, 32), append_79853, *[k_79854], **kwargs_79855)
    
    # SSA join for if statement (line 1141)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1136)
    module_type_store.open_ssa_branch('else')
    
    # Call to errmess(...): (line 1146)
    # Processing the call arguments (line 1146)
    str_79858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1147, 32), 'str', 'analyzeline: intent(callback) %s is ignored')
    # Getting the type of 'k' (line 1147)
    k_79859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1147, 81), 'k', False)
    # Applying the binary operator '%' (line 1147)
    result_mod_79860 = python_operator(stypy.reporting.localization.Localization(__file__, 1147, 32), '%', str_79858, k_79859)
    
    # Processing the call keyword arguments (line 1146)
    kwargs_79861 = {}
    # Getting the type of 'errmess' (line 1146)
    errmess_79857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1146, 28), 'errmess', False)
    # Calling errmess(args, kwargs) (line 1146)
    errmess_call_result_79862 = invoke(stypy.reporting.localization.Localization(__file__, 1146, 28), errmess_79857, *[result_mod_79860], **kwargs_79861)
    
    # SSA join for if statement (line 1136)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1135)
    module_type_store.open_ssa_branch('else')
    
    # Call to errmess(...): (line 1149)
    # Processing the call arguments (line 1149)
    str_79864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 32), 'str', 'analyzeline: intent(callback) %s is already in argument list')
    # Getting the type of 'k' (line 1150)
    k_79865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1150, 55), 'k', False)
    # Applying the binary operator '%' (line 1149)
    result_mod_79866 = python_operator(stypy.reporting.localization.Localization(__file__, 1149, 32), '%', str_79864, k_79865)
    
    # Processing the call keyword arguments (line 1149)
    kwargs_79867 = {}
    # Getting the type of 'errmess' (line 1149)
    errmess_79863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1149, 24), 'errmess', False)
    # Calling errmess(args, kwargs) (line 1149)
    errmess_call_result_79868 = invoke(stypy.reporting.localization.Localization(__file__, 1149, 24), errmess_79863, *[result_mod_79866], **kwargs_79867)
    
    # SSA join for if statement (line 1135)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1134)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1132)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'case' (line 1151)
    case_79869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1151, 15), 'case')
    
    # Obtaining an instance of the builtin type 'list' (line 1151)
    list_79870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1151, 23), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1151)
    # Adding element type (line 1151)
    str_79871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1151, 24), 'str', 'optional')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1151, 23), list_79870, str_79871)
    # Adding element type (line 1151)
    str_79872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1151, 36), 'str', 'required')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1151, 23), list_79870, str_79872)
    # Adding element type (line 1151)
    str_79873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1151, 48), 'str', 'public')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1151, 23), list_79870, str_79873)
    # Adding element type (line 1151)
    str_79874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1151, 58), 'str', 'external')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1151, 23), list_79870, str_79874)
    # Adding element type (line 1151)
    str_79875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1151, 70), 'str', 'private')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1151, 23), list_79870, str_79875)
    # Adding element type (line 1151)
    str_79876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1151, 81), 'str', 'intrisic')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1151, 23), list_79870, str_79876)
    
    # Applying the binary operator 'in' (line 1151)
    result_contains_79877 = python_operator(stypy.reporting.localization.Localization(__file__, 1151, 15), 'in', case_79869, list_79870)
    
    # Testing the type of an if condition (line 1151)
    if_condition_79878 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1151, 12), result_contains_79877)
    # Assigning a type to the variable 'if_condition_79878' (line 1151)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1151, 12), 'if_condition_79878', if_condition_79878)
    # SSA begins for if statement (line 1151)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 1152):
    
    # Assigning a Name to a Name (line 1152):
    # Getting the type of 'case' (line 1152)
    case_79879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 21), 'case')
    # Assigning a type to the variable 'ap' (line 1152)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1152, 16), 'ap', case_79879)
    # SSA join for if statement (line 1151)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_79880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1153, 15), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1153)
    k_79881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1153, 35), 'k')
    # Getting the type of 'edecl' (line 1153)
    edecl_79882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1153, 29), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1153)
    getitem___79883 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1153, 29), edecl_79882, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1153)
    subscript_call_result_79884 = invoke(stypy.reporting.localization.Localization(__file__, 1153, 29), getitem___79883, k_79881)
    
    # Applying the binary operator 'in' (line 1153)
    result_contains_79885 = python_operator(stypy.reporting.localization.Localization(__file__, 1153, 15), 'in', str_79880, subscript_call_result_79884)
    
    # Testing the type of an if condition (line 1153)
    if_condition_79886 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1153, 12), result_contains_79885)
    # Assigning a type to the variable 'if_condition_79886' (line 1153)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1153, 12), 'if_condition_79886', if_condition_79886)
    # SSA begins for if statement (line 1153)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1154)
    # Processing the call arguments (line 1154)
    # Getting the type of 'ap' (line 1154)
    ap_79895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1154, 44), 'ap', False)
    # Processing the call keyword arguments (line 1154)
    kwargs_79896 = {}
    
    # Obtaining the type of the subscript
    str_79887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1154, 25), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1154)
    k_79888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1154, 22), 'k', False)
    # Getting the type of 'edecl' (line 1154)
    edecl_79889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1154, 16), 'edecl', False)
    # Obtaining the member '__getitem__' of a type (line 1154)
    getitem___79890 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1154, 16), edecl_79889, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1154)
    subscript_call_result_79891 = invoke(stypy.reporting.localization.Localization(__file__, 1154, 16), getitem___79890, k_79888)
    
    # Obtaining the member '__getitem__' of a type (line 1154)
    getitem___79892 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1154, 16), subscript_call_result_79891, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1154)
    subscript_call_result_79893 = invoke(stypy.reporting.localization.Localization(__file__, 1154, 16), getitem___79892, str_79887)
    
    # Obtaining the member 'append' of a type (line 1154)
    append_79894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1154, 16), subscript_call_result_79893, 'append')
    # Calling append(args, kwargs) (line 1154)
    append_call_result_79897 = invoke(stypy.reporting.localization.Localization(__file__, 1154, 16), append_79894, *[ap_79895], **kwargs_79896)
    
    # SSA branch for the else part of an if statement (line 1153)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a List to a Subscript (line 1156):
    
    # Assigning a List to a Subscript (line 1156):
    
    # Obtaining an instance of the builtin type 'list' (line 1156)
    list_79898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1156, 39), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1156)
    # Adding element type (line 1156)
    # Getting the type of 'ap' (line 1156)
    ap_79899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1156, 40), 'ap')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1156, 39), list_79898, ap_79899)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1156)
    k_79900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1156, 22), 'k')
    # Getting the type of 'edecl' (line 1156)
    edecl_79901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1156, 16), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1156)
    getitem___79902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1156, 16), edecl_79901, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1156)
    subscript_call_result_79903 = invoke(stypy.reporting.localization.Localization(__file__, 1156, 16), getitem___79902, k_79900)
    
    str_79904 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1156, 25), 'str', 'attrspec')
    # Storing an element on a container (line 1156)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1156, 16), subscript_call_result_79903, (str_79904, list_79898))
    # SSA join for if statement (line 1153)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'case' (line 1157)
    case_79905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1157, 15), 'case')
    str_79906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1157, 23), 'str', 'external')
    # Applying the binary operator '==' (line 1157)
    result_eq_79907 = python_operator(stypy.reporting.localization.Localization(__file__, 1157, 15), '==', case_79905, str_79906)
    
    # Testing the type of an if condition (line 1157)
    if_condition_79908 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1157, 12), result_eq_79907)
    # Assigning a type to the variable 'if_condition_79908' (line 1157)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1157, 12), 'if_condition_79908', if_condition_79908)
    # SSA begins for if statement (line 1157)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Obtaining the type of the subscript
    str_79909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 44), 'str', 'block')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1158)
    groupcounter_79910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1158, 30), 'groupcounter')
    # Getting the type of 'groupcache' (line 1158)
    groupcache_79911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1158, 19), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1158)
    getitem___79912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1158, 19), groupcache_79911, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1158)
    subscript_call_result_79913 = invoke(stypy.reporting.localization.Localization(__file__, 1158, 19), getitem___79912, groupcounter_79910)
    
    # Obtaining the member '__getitem__' of a type (line 1158)
    getitem___79914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1158, 19), subscript_call_result_79913, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1158)
    subscript_call_result_79915 = invoke(stypy.reporting.localization.Localization(__file__, 1158, 19), getitem___79914, str_79909)
    
    str_79916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 56), 'str', 'program')
    # Applying the binary operator '==' (line 1158)
    result_eq_79917 = python_operator(stypy.reporting.localization.Localization(__file__, 1158, 19), '==', subscript_call_result_79915, str_79916)
    
    # Testing the type of an if condition (line 1158)
    if_condition_79918 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1158, 16), result_eq_79917)
    # Assigning a type to the variable 'if_condition_79918' (line 1158)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1158, 16), 'if_condition_79918', if_condition_79918)
    # SSA begins for if statement (line 1158)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1159)
    # Processing the call arguments (line 1159)
    str_79920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1159, 28), 'str', 'analyzeline: ignoring program arguments\n')
    # Processing the call keyword arguments (line 1159)
    kwargs_79921 = {}
    # Getting the type of 'outmess' (line 1159)
    outmess_79919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1159, 20), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1159)
    outmess_call_result_79922 = invoke(stypy.reporting.localization.Localization(__file__, 1159, 20), outmess_79919, *[str_79920], **kwargs_79921)
    
    # SSA join for if statement (line 1158)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'k' (line 1161)
    k_79923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1161, 19), 'k')
    
    # Obtaining the type of the subscript
    str_79924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1161, 53), 'str', 'args')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1161)
    groupcounter_79925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1161, 39), 'groupcounter')
    # Getting the type of 'groupcache' (line 1161)
    groupcache_79926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1161, 28), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1161)
    getitem___79927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1161, 28), groupcache_79926, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1161)
    subscript_call_result_79928 = invoke(stypy.reporting.localization.Localization(__file__, 1161, 28), getitem___79927, groupcounter_79925)
    
    # Obtaining the member '__getitem__' of a type (line 1161)
    getitem___79929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1161, 28), subscript_call_result_79928, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1161)
    subscript_call_result_79930 = invoke(stypy.reporting.localization.Localization(__file__, 1161, 28), getitem___79929, str_79924)
    
    # Applying the binary operator 'notin' (line 1161)
    result_contains_79931 = python_operator(stypy.reporting.localization.Localization(__file__, 1161, 19), 'notin', k_79923, subscript_call_result_79930)
    
    # Testing the type of an if condition (line 1161)
    if_condition_79932 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1161, 16), result_contains_79931)
    # Assigning a type to the variable 'if_condition_79932' (line 1161)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1161, 16), 'if_condition_79932', if_condition_79932)
    # SSA begins for if statement (line 1161)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 1161)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_79933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1163, 19), 'str', 'externals')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1163)
    groupcounter_79934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1163, 49), 'groupcounter')
    # Getting the type of 'groupcache' (line 1163)
    groupcache_79935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1163, 38), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1163)
    getitem___79936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1163, 38), groupcache_79935, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1163)
    subscript_call_result_79937 = invoke(stypy.reporting.localization.Localization(__file__, 1163, 38), getitem___79936, groupcounter_79934)
    
    # Applying the binary operator 'notin' (line 1163)
    result_contains_79938 = python_operator(stypy.reporting.localization.Localization(__file__, 1163, 19), 'notin', str_79933, subscript_call_result_79937)
    
    # Testing the type of an if condition (line 1163)
    if_condition_79939 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1163, 16), result_contains_79938)
    # Assigning a type to the variable 'if_condition_79939' (line 1163)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1163, 16), 'if_condition_79939', if_condition_79939)
    # SSA begins for if statement (line 1163)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Subscript (line 1164):
    
    # Assigning a List to a Subscript (line 1164):
    
    # Obtaining an instance of the builtin type 'list' (line 1164)
    list_79940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1164, 60), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1164)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1164)
    groupcounter_79941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 31), 'groupcounter')
    # Getting the type of 'groupcache' (line 1164)
    groupcache_79942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 20), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1164)
    getitem___79943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1164, 20), groupcache_79942, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1164)
    subscript_call_result_79944 = invoke(stypy.reporting.localization.Localization(__file__, 1164, 20), getitem___79943, groupcounter_79941)
    
    str_79945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1164, 45), 'str', 'externals')
    # Storing an element on a container (line 1164)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1164, 20), subscript_call_result_79944, (str_79945, list_79940))
    # SSA join for if statement (line 1163)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 1165)
    # Processing the call arguments (line 1165)
    # Getting the type of 'k' (line 1165)
    k_79954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1165, 61), 'k', False)
    # Processing the call keyword arguments (line 1165)
    kwargs_79955 = {}
    
    # Obtaining the type of the subscript
    str_79946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1165, 41), 'str', 'externals')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1165)
    groupcounter_79947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1165, 27), 'groupcounter', False)
    # Getting the type of 'groupcache' (line 1165)
    groupcache_79948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1165, 16), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 1165)
    getitem___79949 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1165, 16), groupcache_79948, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1165)
    subscript_call_result_79950 = invoke(stypy.reporting.localization.Localization(__file__, 1165, 16), getitem___79949, groupcounter_79947)
    
    # Obtaining the member '__getitem__' of a type (line 1165)
    getitem___79951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1165, 16), subscript_call_result_79950, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1165)
    subscript_call_result_79952 = invoke(stypy.reporting.localization.Localization(__file__, 1165, 16), getitem___79951, str_79946)
    
    # Obtaining the member 'append' of a type (line 1165)
    append_79953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1165, 16), subscript_call_result_79952, 'append')
    # Calling append(args, kwargs) (line 1165)
    append_call_result_79956 = invoke(stypy.reporting.localization.Localization(__file__, 1165, 16), append_79953, *[k_79954], **kwargs_79955)
    
    # SSA join for if statement (line 1157)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 1166):
    
    # Assigning a Name to a Name (line 1166):
    # Getting the type of 'k' (line 1166)
    k_79957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 24), 'k')
    # Assigning a type to the variable 'last_name' (line 1166)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1166, 12), 'last_name', k_79957)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 1167):
    
    # Assigning a Name to a Subscript (line 1167):
    # Getting the type of 'edecl' (line 1167)
    edecl_79958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 43), 'edecl')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1167)
    groupcounter_79959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 1167)
    groupcache_79960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1167)
    getitem___79961 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1167, 8), groupcache_79960, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1167)
    subscript_call_result_79962 = invoke(stypy.reporting.localization.Localization(__file__, 1167, 8), getitem___79961, groupcounter_79959)
    
    str_79963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1167, 33), 'str', 'vars')
    # Storing an element on a container (line 1167)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1167, 8), subscript_call_result_79962, (str_79963, edecl_79958))
    
    # Type idiom detected: calculating its left and rigth part (line 1168)
    # Getting the type of 'last_name' (line 1168)
    last_name_79964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1168, 8), 'last_name')
    # Getting the type of 'None' (line 1168)
    None_79965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1168, 28), 'None')
    
    (may_be_79966, more_types_in_union_79967) = may_not_be_none(last_name_79964, None_79965)

    if may_be_79966:

        if more_types_in_union_79967:
            # Runtime conditional SSA (line 1168)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Tuple to a Name (line 1169):
        
        # Assigning a Tuple to a Name (line 1169):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1169)
        tuple_79968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1169, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1169)
        # Adding element type (line 1169)
        str_79969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1169, 32), 'str', 'variable')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1169, 32), tuple_79968, str_79969)
        # Adding element type (line 1169)
        # Getting the type of 'last_name' (line 1169)
        last_name_79970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1169, 44), 'last_name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1169, 32), tuple_79968, last_name_79970)
        # Adding element type (line 1169)
        # Getting the type of 'groupcounter' (line 1169)
        groupcounter_79971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1169, 55), 'groupcounter')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1169, 32), tuple_79968, groupcounter_79971)
        
        # Assigning a type to the variable 'previous_context' (line 1169)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1169, 12), 'previous_context', tuple_79968)

        if more_types_in_union_79967:
            # SSA join for if statement (line 1168)
            module_type_store = module_type_store.join_ssa_context()


    
    # SSA branch for the else part of an if statement (line 1091)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'case' (line 1170)
    case_79972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1170, 9), 'case')
    str_79973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1170, 17), 'str', 'parameter')
    # Applying the binary operator '==' (line 1170)
    result_eq_79974 = python_operator(stypy.reporting.localization.Localization(__file__, 1170, 9), '==', case_79972, str_79973)
    
    # Testing the type of an if condition (line 1170)
    if_condition_79975 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1170, 9), result_eq_79974)
    # Assigning a type to the variable 'if_condition_79975' (line 1170)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1170, 9), 'if_condition_79975', if_condition_79975)
    # SSA begins for if statement (line 1170)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1171):
    
    # Assigning a Subscript to a Name (line 1171):
    
    # Obtaining the type of the subscript
    str_79976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1171, 41), 'str', 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1171)
    groupcounter_79977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 27), 'groupcounter')
    # Getting the type of 'groupcache' (line 1171)
    groupcache_79978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 16), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1171)
    getitem___79979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1171, 16), groupcache_79978, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1171)
    subscript_call_result_79980 = invoke(stypy.reporting.localization.Localization(__file__, 1171, 16), getitem___79979, groupcounter_79977)
    
    # Obtaining the member '__getitem__' of a type (line 1171)
    getitem___79981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1171, 16), subscript_call_result_79980, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1171)
    subscript_call_result_79982 = invoke(stypy.reporting.localization.Localization(__file__, 1171, 16), getitem___79981, str_79976)
    
    # Assigning a type to the variable 'edecl' (line 1171)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'edecl', subscript_call_result_79982)
    
    # Assigning a Subscript to a Name (line 1172):
    
    # Assigning a Subscript to a Name (line 1172):
    
    # Obtaining the type of the subscript
    int_79983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1172, 38), 'int')
    int_79984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1172, 40), 'int')
    slice_79985 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1172, 13), int_79983, int_79984, None)
    
    # Call to strip(...): (line 1172)
    # Processing the call keyword arguments (line 1172)
    kwargs_79992 = {}
    
    # Call to group(...): (line 1172)
    # Processing the call arguments (line 1172)
    str_79988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1172, 21), 'str', 'after')
    # Processing the call keyword arguments (line 1172)
    kwargs_79989 = {}
    # Getting the type of 'm' (line 1172)
    m_79986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 13), 'm', False)
    # Obtaining the member 'group' of a type (line 1172)
    group_79987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 13), m_79986, 'group')
    # Calling group(args, kwargs) (line 1172)
    group_call_result_79990 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 13), group_79987, *[str_79988], **kwargs_79989)
    
    # Obtaining the member 'strip' of a type (line 1172)
    strip_79991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 13), group_call_result_79990, 'strip')
    # Calling strip(args, kwargs) (line 1172)
    strip_call_result_79993 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 13), strip_79991, *[], **kwargs_79992)
    
    # Obtaining the member '__getitem__' of a type (line 1172)
    getitem___79994 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 13), strip_call_result_79993, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1172)
    subscript_call_result_79995 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 13), getitem___79994, slice_79985)
    
    # Assigning a type to the variable 'll' (line 1172)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1172, 8), 'll', subscript_call_result_79995)
    
    # Assigning a Name to a Name (line 1173):
    
    # Assigning a Name to a Name (line 1173):
    # Getting the type of 'None' (line 1173)
    None_79996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 20), 'None')
    # Assigning a type to the variable 'last_name' (line 1173)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1173, 8), 'last_name', None_79996)
    
    
    # Call to split(...): (line 1174)
    # Processing the call arguments (line 1174)
    str_80002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1174, 42), 'str', '@,@')
    # Processing the call keyword arguments (line 1174)
    kwargs_80003 = {}
    
    # Call to markoutercomma(...): (line 1174)
    # Processing the call arguments (line 1174)
    # Getting the type of 'll' (line 1174)
    ll_79998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1174, 32), 'll', False)
    # Processing the call keyword arguments (line 1174)
    kwargs_79999 = {}
    # Getting the type of 'markoutercomma' (line 1174)
    markoutercomma_79997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1174, 17), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 1174)
    markoutercomma_call_result_80000 = invoke(stypy.reporting.localization.Localization(__file__, 1174, 17), markoutercomma_79997, *[ll_79998], **kwargs_79999)
    
    # Obtaining the member 'split' of a type (line 1174)
    split_80001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1174, 17), markoutercomma_call_result_80000, 'split')
    # Calling split(args, kwargs) (line 1174)
    split_call_result_80004 = invoke(stypy.reporting.localization.Localization(__file__, 1174, 17), split_80001, *[str_80002], **kwargs_80003)
    
    # Testing the type of a for loop iterable (line 1174)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1174, 8), split_call_result_80004)
    # Getting the type of the for loop variable (line 1174)
    for_loop_var_80005 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1174, 8), split_call_result_80004)
    # Assigning a type to the variable 'e' (line 1174)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1174, 8), 'e', for_loop_var_80005)
    # SSA begins for a for statement (line 1174)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # SSA begins for try-except statement (line 1175)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a ListComp to a Tuple (line 1176):
    
    # Assigning a Subscript to a Name (line 1176):
    
    # Obtaining the type of the subscript
    int_80006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1176, 16), 'int')
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to split(...): (line 1176)
    # Processing the call arguments (line 1176)
    str_80013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1176, 58), 'str', '=')
    # Processing the call keyword arguments (line 1176)
    kwargs_80014 = {}
    # Getting the type of 'e' (line 1176)
    e_80011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 50), 'e', False)
    # Obtaining the member 'split' of a type (line 1176)
    split_80012 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1176, 50), e_80011, 'split')
    # Calling split(args, kwargs) (line 1176)
    split_call_result_80015 = invoke(stypy.reporting.localization.Localization(__file__, 1176, 50), split_80012, *[str_80013], **kwargs_80014)
    
    comprehension_80016 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1176, 31), split_call_result_80015)
    # Assigning a type to the variable 'x' (line 1176)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1176, 31), 'x', comprehension_80016)
    
    # Call to strip(...): (line 1176)
    # Processing the call keyword arguments (line 1176)
    kwargs_80009 = {}
    # Getting the type of 'x' (line 1176)
    x_80007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 31), 'x', False)
    # Obtaining the member 'strip' of a type (line 1176)
    strip_80008 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1176, 31), x_80007, 'strip')
    # Calling strip(args, kwargs) (line 1176)
    strip_call_result_80010 = invoke(stypy.reporting.localization.Localization(__file__, 1176, 31), strip_80008, *[], **kwargs_80009)
    
    list_80017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1176, 31), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1176, 31), list_80017, strip_call_result_80010)
    # Obtaining the member '__getitem__' of a type (line 1176)
    getitem___80018 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1176, 16), list_80017, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1176)
    subscript_call_result_80019 = invoke(stypy.reporting.localization.Localization(__file__, 1176, 16), getitem___80018, int_80006)
    
    # Assigning a type to the variable 'tuple_var_assignment_75790' (line 1176)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1176, 16), 'tuple_var_assignment_75790', subscript_call_result_80019)
    
    # Assigning a Subscript to a Name (line 1176):
    
    # Obtaining the type of the subscript
    int_80020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1176, 16), 'int')
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to split(...): (line 1176)
    # Processing the call arguments (line 1176)
    str_80027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1176, 58), 'str', '=')
    # Processing the call keyword arguments (line 1176)
    kwargs_80028 = {}
    # Getting the type of 'e' (line 1176)
    e_80025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 50), 'e', False)
    # Obtaining the member 'split' of a type (line 1176)
    split_80026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1176, 50), e_80025, 'split')
    # Calling split(args, kwargs) (line 1176)
    split_call_result_80029 = invoke(stypy.reporting.localization.Localization(__file__, 1176, 50), split_80026, *[str_80027], **kwargs_80028)
    
    comprehension_80030 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1176, 31), split_call_result_80029)
    # Assigning a type to the variable 'x' (line 1176)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1176, 31), 'x', comprehension_80030)
    
    # Call to strip(...): (line 1176)
    # Processing the call keyword arguments (line 1176)
    kwargs_80023 = {}
    # Getting the type of 'x' (line 1176)
    x_80021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 31), 'x', False)
    # Obtaining the member 'strip' of a type (line 1176)
    strip_80022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1176, 31), x_80021, 'strip')
    # Calling strip(args, kwargs) (line 1176)
    strip_call_result_80024 = invoke(stypy.reporting.localization.Localization(__file__, 1176, 31), strip_80022, *[], **kwargs_80023)
    
    list_80031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1176, 31), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1176, 31), list_80031, strip_call_result_80024)
    # Obtaining the member '__getitem__' of a type (line 1176)
    getitem___80032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1176, 16), list_80031, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1176)
    subscript_call_result_80033 = invoke(stypy.reporting.localization.Localization(__file__, 1176, 16), getitem___80032, int_80020)
    
    # Assigning a type to the variable 'tuple_var_assignment_75791' (line 1176)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1176, 16), 'tuple_var_assignment_75791', subscript_call_result_80033)
    
    # Assigning a Name to a Name (line 1176):
    # Getting the type of 'tuple_var_assignment_75790' (line 1176)
    tuple_var_assignment_75790_80034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 16), 'tuple_var_assignment_75790')
    # Assigning a type to the variable 'k' (line 1176)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1176, 16), 'k', tuple_var_assignment_75790_80034)
    
    # Assigning a Name to a Name (line 1176):
    # Getting the type of 'tuple_var_assignment_75791' (line 1176)
    tuple_var_assignment_75791_80035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 16), 'tuple_var_assignment_75791')
    # Assigning a type to the variable 'initexpr' (line 1176)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1176, 19), 'initexpr', tuple_var_assignment_75791_80035)
    # SSA branch for the except part of a try statement (line 1175)
    # SSA branch for the except '<any exception>' branch of a try statement (line 1175)
    module_type_store.open_ssa_branch('except')
    
    # Call to outmess(...): (line 1178)
    # Processing the call arguments (line 1178)
    str_80037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1179, 20), 'str', 'analyzeline: could not extract name,expr in parameter statement "%s" of "%s"\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1179)
    tuple_80038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1179, 104), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1179)
    # Adding element type (line 1179)
    # Getting the type of 'e' (line 1179)
    e_80039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1179, 104), 'e', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1179, 104), tuple_80038, e_80039)
    # Adding element type (line 1179)
    # Getting the type of 'll' (line 1179)
    ll_80040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1179, 107), 'll', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1179, 104), tuple_80038, ll_80040)
    
    # Applying the binary operator '%' (line 1179)
    result_mod_80041 = python_operator(stypy.reporting.localization.Localization(__file__, 1179, 20), '%', str_80037, tuple_80038)
    
    # Processing the call keyword arguments (line 1178)
    kwargs_80042 = {}
    # Getting the type of 'outmess' (line 1178)
    outmess_80036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1178, 16), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1178)
    outmess_call_result_80043 = invoke(stypy.reporting.localization.Localization(__file__, 1178, 16), outmess_80036, *[result_mod_80041], **kwargs_80042)
    
    # SSA join for try-except statement (line 1175)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1181):
    
    # Assigning a Call to a Name (line 1181):
    
    # Call to get_parameters(...): (line 1181)
    # Processing the call arguments (line 1181)
    # Getting the type of 'edecl' (line 1181)
    edecl_80045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1181, 36), 'edecl', False)
    # Processing the call keyword arguments (line 1181)
    kwargs_80046 = {}
    # Getting the type of 'get_parameters' (line 1181)
    get_parameters_80044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1181, 21), 'get_parameters', False)
    # Calling get_parameters(args, kwargs) (line 1181)
    get_parameters_call_result_80047 = invoke(stypy.reporting.localization.Localization(__file__, 1181, 21), get_parameters_80044, *[edecl_80045], **kwargs_80046)
    
    # Assigning a type to the variable 'params' (line 1181)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1181, 12), 'params', get_parameters_call_result_80047)
    
    # Assigning a Call to a Name (line 1182):
    
    # Assigning a Call to a Name (line 1182):
    
    # Call to rmbadname1(...): (line 1182)
    # Processing the call arguments (line 1182)
    # Getting the type of 'k' (line 1182)
    k_80049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1182, 27), 'k', False)
    # Processing the call keyword arguments (line 1182)
    kwargs_80050 = {}
    # Getting the type of 'rmbadname1' (line 1182)
    rmbadname1_80048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1182, 16), 'rmbadname1', False)
    # Calling rmbadname1(args, kwargs) (line 1182)
    rmbadname1_call_result_80051 = invoke(stypy.reporting.localization.Localization(__file__, 1182, 16), rmbadname1_80048, *[k_80049], **kwargs_80050)
    
    # Assigning a type to the variable 'k' (line 1182)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1182, 12), 'k', rmbadname1_call_result_80051)
    
    
    # Getting the type of 'k' (line 1183)
    k_80052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1183, 15), 'k')
    # Getting the type of 'edecl' (line 1183)
    edecl_80053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1183, 24), 'edecl')
    # Applying the binary operator 'notin' (line 1183)
    result_contains_80054 = python_operator(stypy.reporting.localization.Localization(__file__, 1183, 15), 'notin', k_80052, edecl_80053)
    
    # Testing the type of an if condition (line 1183)
    if_condition_80055 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1183, 12), result_contains_80054)
    # Assigning a type to the variable 'if_condition_80055' (line 1183)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1183, 12), 'if_condition_80055', if_condition_80055)
    # SSA begins for if statement (line 1183)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Dict to a Subscript (line 1184):
    
    # Assigning a Dict to a Subscript (line 1184):
    
    # Obtaining an instance of the builtin type 'dict' (line 1184)
    dict_80056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1184, 27), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1184)
    
    # Getting the type of 'edecl' (line 1184)
    edecl_80057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1184, 16), 'edecl')
    # Getting the type of 'k' (line 1184)
    k_80058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1184, 22), 'k')
    # Storing an element on a container (line 1184)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1184, 16), edecl_80057, (k_80058, dict_80056))
    # SSA join for if statement (line 1183)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    str_80059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1185, 15), 'str', '=')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1185)
    k_80060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 28), 'k')
    # Getting the type of 'edecl' (line 1185)
    edecl_80061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 22), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1185)
    getitem___80062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1185, 22), edecl_80061, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1185)
    subscript_call_result_80063 = invoke(stypy.reporting.localization.Localization(__file__, 1185, 22), getitem___80062, k_80060)
    
    # Applying the binary operator 'in' (line 1185)
    result_contains_80064 = python_operator(stypy.reporting.localization.Localization(__file__, 1185, 15), 'in', str_80059, subscript_call_result_80063)
    
    
    
    
    # Obtaining the type of the subscript
    str_80065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1185, 49), 'str', '=')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1185)
    k_80066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 46), 'k')
    # Getting the type of 'edecl' (line 1185)
    edecl_80067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 40), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1185)
    getitem___80068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1185, 40), edecl_80067, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1185)
    subscript_call_result_80069 = invoke(stypy.reporting.localization.Localization(__file__, 1185, 40), getitem___80068, k_80066)
    
    # Obtaining the member '__getitem__' of a type (line 1185)
    getitem___80070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1185, 40), subscript_call_result_80069, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1185)
    subscript_call_result_80071 = invoke(stypy.reporting.localization.Localization(__file__, 1185, 40), getitem___80070, str_80065)
    
    # Getting the type of 'initexpr' (line 1185)
    initexpr_80072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 57), 'initexpr')
    # Applying the binary operator '==' (line 1185)
    result_eq_80073 = python_operator(stypy.reporting.localization.Localization(__file__, 1185, 40), '==', subscript_call_result_80071, initexpr_80072)
    
    # Applying the 'not' unary operator (line 1185)
    result_not__80074 = python_operator(stypy.reporting.localization.Localization(__file__, 1185, 36), 'not', result_eq_80073)
    
    # Applying the binary operator 'and' (line 1185)
    result_and_keyword_80075 = python_operator(stypy.reporting.localization.Localization(__file__, 1185, 15), 'and', result_contains_80064, result_not__80074)
    
    # Testing the type of an if condition (line 1185)
    if_condition_80076 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1185, 12), result_and_keyword_80075)
    # Assigning a type to the variable 'if_condition_80076' (line 1185)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1185, 12), 'if_condition_80076', if_condition_80076)
    # SSA begins for if statement (line 1185)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1186)
    # Processing the call arguments (line 1186)
    str_80078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1186, 24), 'str', 'analyzeline: Overwriting the value of parameter "%s" ("%s") with "%s".\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1187)
    tuple_80079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1187, 20), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1187)
    # Adding element type (line 1187)
    # Getting the type of 'k' (line 1187)
    k_80080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1187, 20), 'k', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1187, 20), tuple_80079, k_80080)
    # Adding element type (line 1187)
    
    # Obtaining the type of the subscript
    str_80081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1187, 32), 'str', '=')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1187)
    k_80082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1187, 29), 'k', False)
    # Getting the type of 'edecl' (line 1187)
    edecl_80083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1187, 23), 'edecl', False)
    # Obtaining the member '__getitem__' of a type (line 1187)
    getitem___80084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1187, 23), edecl_80083, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1187)
    subscript_call_result_80085 = invoke(stypy.reporting.localization.Localization(__file__, 1187, 23), getitem___80084, k_80082)
    
    # Obtaining the member '__getitem__' of a type (line 1187)
    getitem___80086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1187, 23), subscript_call_result_80085, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1187)
    subscript_call_result_80087 = invoke(stypy.reporting.localization.Localization(__file__, 1187, 23), getitem___80086, str_80081)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1187, 20), tuple_80079, subscript_call_result_80087)
    # Adding element type (line 1187)
    # Getting the type of 'initexpr' (line 1187)
    initexpr_80088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1187, 38), 'initexpr', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1187, 20), tuple_80079, initexpr_80088)
    
    # Applying the binary operator '%' (line 1186)
    result_mod_80089 = python_operator(stypy.reporting.localization.Localization(__file__, 1186, 24), '%', str_80078, tuple_80079)
    
    # Processing the call keyword arguments (line 1186)
    kwargs_80090 = {}
    # Getting the type of 'outmess' (line 1186)
    outmess_80077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1186, 16), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1186)
    outmess_call_result_80091 = invoke(stypy.reporting.localization.Localization(__file__, 1186, 16), outmess_80077, *[result_mod_80089], **kwargs_80090)
    
    # SSA join for if statement (line 1185)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1188):
    
    # Assigning a Call to a Name (line 1188):
    
    # Call to determineexprtype(...): (line 1188)
    # Processing the call arguments (line 1188)
    # Getting the type of 'initexpr' (line 1188)
    initexpr_80093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1188, 34), 'initexpr', False)
    # Getting the type of 'params' (line 1188)
    params_80094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1188, 44), 'params', False)
    # Processing the call keyword arguments (line 1188)
    kwargs_80095 = {}
    # Getting the type of 'determineexprtype' (line 1188)
    determineexprtype_80092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1188, 16), 'determineexprtype', False)
    # Calling determineexprtype(args, kwargs) (line 1188)
    determineexprtype_call_result_80096 = invoke(stypy.reporting.localization.Localization(__file__, 1188, 16), determineexprtype_80092, *[initexpr_80093, params_80094], **kwargs_80095)
    
    # Assigning a type to the variable 't' (line 1188)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1188, 12), 't', determineexprtype_call_result_80096)
    
    # Getting the type of 't' (line 1189)
    t_80097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1189, 15), 't')
    # Testing the type of an if condition (line 1189)
    if_condition_80098 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1189, 12), t_80097)
    # Assigning a type to the variable 'if_condition_80098' (line 1189)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1189, 12), 'if_condition_80098', if_condition_80098)
    # SSA begins for if statement (line 1189)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Call to get(...): (line 1190)
    # Processing the call arguments (line 1190)
    str_80101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1190, 25), 'str', 'typespec')
    # Processing the call keyword arguments (line 1190)
    kwargs_80102 = {}
    # Getting the type of 't' (line 1190)
    t_80099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1190, 19), 't', False)
    # Obtaining the member 'get' of a type (line 1190)
    get_80100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1190, 19), t_80099, 'get')
    # Calling get(args, kwargs) (line 1190)
    get_call_result_80103 = invoke(stypy.reporting.localization.Localization(__file__, 1190, 19), get_80100, *[str_80101], **kwargs_80102)
    
    str_80104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1190, 40), 'str', 'real')
    # Applying the binary operator '==' (line 1190)
    result_eq_80105 = python_operator(stypy.reporting.localization.Localization(__file__, 1190, 19), '==', get_call_result_80103, str_80104)
    
    # Testing the type of an if condition (line 1190)
    if_condition_80106 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1190, 16), result_eq_80105)
    # Assigning a type to the variable 'if_condition_80106' (line 1190)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1190, 16), 'if_condition_80106', if_condition_80106)
    # SSA begins for if statement (line 1190)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1191):
    
    # Assigning a Call to a Name (line 1191):
    
    # Call to list(...): (line 1191)
    # Processing the call arguments (line 1191)
    # Getting the type of 'initexpr' (line 1191)
    initexpr_80108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1191, 30), 'initexpr', False)
    # Processing the call keyword arguments (line 1191)
    kwargs_80109 = {}
    # Getting the type of 'list' (line 1191)
    list_80107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1191, 25), 'list', False)
    # Calling list(args, kwargs) (line 1191)
    list_call_result_80110 = invoke(stypy.reporting.localization.Localization(__file__, 1191, 25), list_80107, *[initexpr_80108], **kwargs_80109)
    
    # Assigning a type to the variable 'tt' (line 1191)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1191, 20), 'tt', list_call_result_80110)
    
    
    # Call to finditer(...): (line 1192)
    # Processing the call arguments (line 1192)
    # Getting the type of 'initexpr' (line 1192)
    initexpr_80113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1192, 52), 'initexpr', False)
    # Processing the call keyword arguments (line 1192)
    kwargs_80114 = {}
    # Getting the type of 'real16pattern' (line 1192)
    real16pattern_80111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1192, 29), 'real16pattern', False)
    # Obtaining the member 'finditer' of a type (line 1192)
    finditer_80112 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1192, 29), real16pattern_80111, 'finditer')
    # Calling finditer(args, kwargs) (line 1192)
    finditer_call_result_80115 = invoke(stypy.reporting.localization.Localization(__file__, 1192, 29), finditer_80112, *[initexpr_80113], **kwargs_80114)
    
    # Testing the type of a for loop iterable (line 1192)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1192, 20), finditer_call_result_80115)
    # Getting the type of the for loop variable (line 1192)
    for_loop_var_80116 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1192, 20), finditer_call_result_80115)
    # Assigning a type to the variable 'm' (line 1192)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1192, 20), 'm', for_loop_var_80116)
    # SSA begins for a for statement (line 1192)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Subscript (line 1193):
    
    # Assigning a Call to a Subscript (line 1193):
    
    # Call to list(...): (line 1193)
    # Processing the call arguments (line 1193)
    
    # Call to replace(...): (line 1194)
    # Processing the call arguments (line 1194)
    str_80134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1194, 72), 'str', 'd')
    str_80135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1194, 77), 'str', 'e')
    # Processing the call keyword arguments (line 1194)
    kwargs_80136 = {}
    
    # Call to lower(...): (line 1194)
    # Processing the call keyword arguments (line 1194)
    kwargs_80131 = {}
    
    # Obtaining the type of the subscript
    
    # Call to start(...): (line 1194)
    # Processing the call keyword arguments (line 1194)
    kwargs_80120 = {}
    # Getting the type of 'm' (line 1194)
    m_80118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1194, 37), 'm', False)
    # Obtaining the member 'start' of a type (line 1194)
    start_80119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1194, 37), m_80118, 'start')
    # Calling start(args, kwargs) (line 1194)
    start_call_result_80121 = invoke(stypy.reporting.localization.Localization(__file__, 1194, 37), start_80119, *[], **kwargs_80120)
    
    
    # Call to end(...): (line 1194)
    # Processing the call keyword arguments (line 1194)
    kwargs_80124 = {}
    # Getting the type of 'm' (line 1194)
    m_80122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1194, 47), 'm', False)
    # Obtaining the member 'end' of a type (line 1194)
    end_80123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1194, 47), m_80122, 'end')
    # Calling end(args, kwargs) (line 1194)
    end_call_result_80125 = invoke(stypy.reporting.localization.Localization(__file__, 1194, 47), end_80123, *[], **kwargs_80124)
    
    slice_80126 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1194, 28), start_call_result_80121, end_call_result_80125, None)
    # Getting the type of 'initexpr' (line 1194)
    initexpr_80127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1194, 28), 'initexpr', False)
    # Obtaining the member '__getitem__' of a type (line 1194)
    getitem___80128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1194, 28), initexpr_80127, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1194)
    subscript_call_result_80129 = invoke(stypy.reporting.localization.Localization(__file__, 1194, 28), getitem___80128, slice_80126)
    
    # Obtaining the member 'lower' of a type (line 1194)
    lower_80130 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1194, 28), subscript_call_result_80129, 'lower')
    # Calling lower(args, kwargs) (line 1194)
    lower_call_result_80132 = invoke(stypy.reporting.localization.Localization(__file__, 1194, 28), lower_80130, *[], **kwargs_80131)
    
    # Obtaining the member 'replace' of a type (line 1194)
    replace_80133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1194, 28), lower_call_result_80132, 'replace')
    # Calling replace(args, kwargs) (line 1194)
    replace_call_result_80137 = invoke(stypy.reporting.localization.Localization(__file__, 1194, 28), replace_80133, *[str_80134, str_80135], **kwargs_80136)
    
    # Processing the call keyword arguments (line 1193)
    kwargs_80138 = {}
    # Getting the type of 'list' (line 1193)
    list_80117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1193, 48), 'list', False)
    # Calling list(args, kwargs) (line 1193)
    list_call_result_80139 = invoke(stypy.reporting.localization.Localization(__file__, 1193, 48), list_80117, *[replace_call_result_80137], **kwargs_80138)
    
    # Getting the type of 'tt' (line 1193)
    tt_80140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1193, 24), 'tt')
    
    # Call to start(...): (line 1193)
    # Processing the call keyword arguments (line 1193)
    kwargs_80143 = {}
    # Getting the type of 'm' (line 1193)
    m_80141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1193, 27), 'm', False)
    # Obtaining the member 'start' of a type (line 1193)
    start_80142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1193, 27), m_80141, 'start')
    # Calling start(args, kwargs) (line 1193)
    start_call_result_80144 = invoke(stypy.reporting.localization.Localization(__file__, 1193, 27), start_80142, *[], **kwargs_80143)
    
    
    # Call to end(...): (line 1193)
    # Processing the call keyword arguments (line 1193)
    kwargs_80147 = {}
    # Getting the type of 'm' (line 1193)
    m_80145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1193, 37), 'm', False)
    # Obtaining the member 'end' of a type (line 1193)
    end_80146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1193, 37), m_80145, 'end')
    # Calling end(args, kwargs) (line 1193)
    end_call_result_80148 = invoke(stypy.reporting.localization.Localization(__file__, 1193, 37), end_80146, *[], **kwargs_80147)
    
    slice_80149 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1193, 24), start_call_result_80144, end_call_result_80148, None)
    # Storing an element on a container (line 1193)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1193, 24), tt_80140, (slice_80149, list_call_result_80139))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1195):
    
    # Assigning a Call to a Name (line 1195):
    
    # Call to join(...): (line 1195)
    # Processing the call arguments (line 1195)
    # Getting the type of 'tt' (line 1195)
    tt_80152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1195, 39), 'tt', False)
    # Processing the call keyword arguments (line 1195)
    kwargs_80153 = {}
    str_80150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1195, 31), 'str', '')
    # Obtaining the member 'join' of a type (line 1195)
    join_80151 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1195, 31), str_80150, 'join')
    # Calling join(args, kwargs) (line 1195)
    join_call_result_80154 = invoke(stypy.reporting.localization.Localization(__file__, 1195, 31), join_80151, *[tt_80152], **kwargs_80153)
    
    # Assigning a type to the variable 'initexpr' (line 1195)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1195, 20), 'initexpr', join_call_result_80154)
    # SSA branch for the else part of an if statement (line 1190)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Call to get(...): (line 1196)
    # Processing the call arguments (line 1196)
    str_80157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1196, 27), 'str', 'typespec')
    # Processing the call keyword arguments (line 1196)
    kwargs_80158 = {}
    # Getting the type of 't' (line 1196)
    t_80155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1196, 21), 't', False)
    # Obtaining the member 'get' of a type (line 1196)
    get_80156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1196, 21), t_80155, 'get')
    # Calling get(args, kwargs) (line 1196)
    get_call_result_80159 = invoke(stypy.reporting.localization.Localization(__file__, 1196, 21), get_80156, *[str_80157], **kwargs_80158)
    
    str_80160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1196, 42), 'str', 'complex')
    # Applying the binary operator '==' (line 1196)
    result_eq_80161 = python_operator(stypy.reporting.localization.Localization(__file__, 1196, 21), '==', get_call_result_80159, str_80160)
    
    # Testing the type of an if condition (line 1196)
    if_condition_80162 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1196, 21), result_eq_80161)
    # Assigning a type to the variable 'if_condition_80162' (line 1196)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1196, 21), 'if_condition_80162', if_condition_80162)
    # SSA begins for if statement (line 1196)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1197):
    
    # Assigning a Call to a Name (line 1197):
    
    # Call to replace(...): (line 1197)
    # Processing the call arguments (line 1197)
    str_80177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1198, 32), 'str', ',')
    str_80178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1198, 37), 'str', '+1j*(')
    # Processing the call keyword arguments (line 1197)
    kwargs_80179 = {}
    
    # Call to replace(...): (line 1197)
    # Processing the call arguments (line 1197)
    str_80172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1197, 60), 'str', 'd')
    str_80173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1197, 65), 'str', 'e')
    # Processing the call keyword arguments (line 1197)
    kwargs_80174 = {}
    
    # Call to lower(...): (line 1197)
    # Processing the call keyword arguments (line 1197)
    kwargs_80169 = {}
    
    # Obtaining the type of the subscript
    int_80163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1197, 40), 'int')
    slice_80164 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1197, 31), int_80163, None, None)
    # Getting the type of 'initexpr' (line 1197)
    initexpr_80165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1197, 31), 'initexpr', False)
    # Obtaining the member '__getitem__' of a type (line 1197)
    getitem___80166 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1197, 31), initexpr_80165, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1197)
    subscript_call_result_80167 = invoke(stypy.reporting.localization.Localization(__file__, 1197, 31), getitem___80166, slice_80164)
    
    # Obtaining the member 'lower' of a type (line 1197)
    lower_80168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1197, 31), subscript_call_result_80167, 'lower')
    # Calling lower(args, kwargs) (line 1197)
    lower_call_result_80170 = invoke(stypy.reporting.localization.Localization(__file__, 1197, 31), lower_80168, *[], **kwargs_80169)
    
    # Obtaining the member 'replace' of a type (line 1197)
    replace_80171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1197, 31), lower_call_result_80170, 'replace')
    # Calling replace(args, kwargs) (line 1197)
    replace_call_result_80175 = invoke(stypy.reporting.localization.Localization(__file__, 1197, 31), replace_80171, *[str_80172, str_80173], **kwargs_80174)
    
    # Obtaining the member 'replace' of a type (line 1197)
    replace_80176 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1197, 31), replace_call_result_80175, 'replace')
    # Calling replace(args, kwargs) (line 1197)
    replace_call_result_80180 = invoke(stypy.reporting.localization.Localization(__file__, 1197, 31), replace_80176, *[str_80177, str_80178], **kwargs_80179)
    
    # Assigning a type to the variable 'initexpr' (line 1197)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1197, 20), 'initexpr', replace_call_result_80180)
    # SSA join for if statement (line 1196)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1190)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1189)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # SSA begins for try-except statement (line 1199)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 1200):
    
    # Assigning a Call to a Name (line 1200):
    
    # Call to eval(...): (line 1200)
    # Processing the call arguments (line 1200)
    # Getting the type of 'initexpr' (line 1200)
    initexpr_80182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1200, 25), 'initexpr', False)
    
    # Obtaining an instance of the builtin type 'dict' (line 1200)
    dict_80183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1200, 35), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1200)
    
    # Getting the type of 'params' (line 1200)
    params_80184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1200, 39), 'params', False)
    # Processing the call keyword arguments (line 1200)
    kwargs_80185 = {}
    # Getting the type of 'eval' (line 1200)
    eval_80181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1200, 20), 'eval', False)
    # Calling eval(args, kwargs) (line 1200)
    eval_call_result_80186 = invoke(stypy.reporting.localization.Localization(__file__, 1200, 20), eval_80181, *[initexpr_80182, dict_80183, params_80184], **kwargs_80185)
    
    # Assigning a type to the variable 'v' (line 1200)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1200, 16), 'v', eval_call_result_80186)
    # SSA branch for the except part of a try statement (line 1199)
    # SSA branch for the except 'Tuple' branch of a try statement (line 1199)
    # Storing handler type
    module_type_store.open_ssa_branch('except')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1201)
    tuple_80187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1201, 20), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1201)
    # Adding element type (line 1201)
    # Getting the type of 'SyntaxError' (line 1201)
    SyntaxError_80188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 20), 'SyntaxError')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1201, 20), tuple_80187, SyntaxError_80188)
    # Adding element type (line 1201)
    # Getting the type of 'NameError' (line 1201)
    NameError_80189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 33), 'NameError')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1201, 20), tuple_80187, NameError_80189)
    # Adding element type (line 1201)
    # Getting the type of 'TypeError' (line 1201)
    TypeError_80190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 44), 'TypeError')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1201, 20), tuple_80187, TypeError_80190)
    
    # Assigning a type to the variable 'msg' (line 1201)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1201, 12), 'msg', tuple_80187)
    
    # Call to errmess(...): (line 1202)
    # Processing the call arguments (line 1202)
    str_80192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1202, 24), 'str', 'analyzeline: Failed to evaluate %r. Ignoring: %s\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1203)
    tuple_80193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1203, 27), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1203)
    # Adding element type (line 1203)
    # Getting the type of 'initexpr' (line 1203)
    initexpr_80194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 27), 'initexpr', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1203, 27), tuple_80193, initexpr_80194)
    # Adding element type (line 1203)
    # Getting the type of 'msg' (line 1203)
    msg_80195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 37), 'msg', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1203, 27), tuple_80193, msg_80195)
    
    # Applying the binary operator '%' (line 1202)
    result_mod_80196 = python_operator(stypy.reporting.localization.Localization(__file__, 1202, 24), '%', str_80192, tuple_80193)
    
    # Processing the call keyword arguments (line 1202)
    kwargs_80197 = {}
    # Getting the type of 'errmess' (line 1202)
    errmess_80191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 16), 'errmess', False)
    # Calling errmess(args, kwargs) (line 1202)
    errmess_call_result_80198 = invoke(stypy.reporting.localization.Localization(__file__, 1202, 16), errmess_80191, *[result_mod_80196], **kwargs_80197)
    
    # SSA join for try-except statement (line 1199)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Subscript (line 1205):
    
    # Assigning a Call to a Subscript (line 1205):
    
    # Call to repr(...): (line 1205)
    # Processing the call arguments (line 1205)
    # Getting the type of 'v' (line 1205)
    v_80200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1205, 33), 'v', False)
    # Processing the call keyword arguments (line 1205)
    kwargs_80201 = {}
    # Getting the type of 'repr' (line 1205)
    repr_80199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1205, 28), 'repr', False)
    # Calling repr(args, kwargs) (line 1205)
    repr_call_result_80202 = invoke(stypy.reporting.localization.Localization(__file__, 1205, 28), repr_80199, *[v_80200], **kwargs_80201)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1205)
    k_80203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1205, 18), 'k')
    # Getting the type of 'edecl' (line 1205)
    edecl_80204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1205, 12), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1205)
    getitem___80205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1205, 12), edecl_80204, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1205)
    subscript_call_result_80206 = invoke(stypy.reporting.localization.Localization(__file__, 1205, 12), getitem___80205, k_80203)
    
    str_80207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1205, 21), 'str', '=')
    # Storing an element on a container (line 1205)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1205, 12), subscript_call_result_80206, (str_80207, repr_call_result_80202))
    
    
    str_80208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1206, 15), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1206)
    k_80209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1206, 35), 'k')
    # Getting the type of 'edecl' (line 1206)
    edecl_80210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1206, 29), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1206)
    getitem___80211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1206, 29), edecl_80210, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1206)
    subscript_call_result_80212 = invoke(stypy.reporting.localization.Localization(__file__, 1206, 29), getitem___80211, k_80209)
    
    # Applying the binary operator 'in' (line 1206)
    result_contains_80213 = python_operator(stypy.reporting.localization.Localization(__file__, 1206, 15), 'in', str_80208, subscript_call_result_80212)
    
    # Testing the type of an if condition (line 1206)
    if_condition_80214 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1206, 12), result_contains_80213)
    # Assigning a type to the variable 'if_condition_80214' (line 1206)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1206, 12), 'if_condition_80214', if_condition_80214)
    # SSA begins for if statement (line 1206)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1207)
    # Processing the call arguments (line 1207)
    str_80223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1207, 44), 'str', 'parameter')
    # Processing the call keyword arguments (line 1207)
    kwargs_80224 = {}
    
    # Obtaining the type of the subscript
    str_80215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1207, 25), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1207)
    k_80216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 22), 'k', False)
    # Getting the type of 'edecl' (line 1207)
    edecl_80217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 16), 'edecl', False)
    # Obtaining the member '__getitem__' of a type (line 1207)
    getitem___80218 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1207, 16), edecl_80217, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1207)
    subscript_call_result_80219 = invoke(stypy.reporting.localization.Localization(__file__, 1207, 16), getitem___80218, k_80216)
    
    # Obtaining the member '__getitem__' of a type (line 1207)
    getitem___80220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1207, 16), subscript_call_result_80219, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1207)
    subscript_call_result_80221 = invoke(stypy.reporting.localization.Localization(__file__, 1207, 16), getitem___80220, str_80215)
    
    # Obtaining the member 'append' of a type (line 1207)
    append_80222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1207, 16), subscript_call_result_80221, 'append')
    # Calling append(args, kwargs) (line 1207)
    append_call_result_80225 = invoke(stypy.reporting.localization.Localization(__file__, 1207, 16), append_80222, *[str_80223], **kwargs_80224)
    
    # SSA branch for the else part of an if statement (line 1206)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a List to a Subscript (line 1209):
    
    # Assigning a List to a Subscript (line 1209):
    
    # Obtaining an instance of the builtin type 'list' (line 1209)
    list_80226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1209, 39), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1209)
    # Adding element type (line 1209)
    str_80227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1209, 40), 'str', 'parameter')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1209, 39), list_80226, str_80227)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1209)
    k_80228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1209, 22), 'k')
    # Getting the type of 'edecl' (line 1209)
    edecl_80229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1209, 16), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1209)
    getitem___80230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1209, 16), edecl_80229, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1209)
    subscript_call_result_80231 = invoke(stypy.reporting.localization.Localization(__file__, 1209, 16), getitem___80230, k_80228)
    
    str_80232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1209, 25), 'str', 'attrspec')
    # Storing an element on a container (line 1209)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1209, 16), subscript_call_result_80231, (str_80232, list_80226))
    # SSA join for if statement (line 1206)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 1210):
    
    # Assigning a Name to a Name (line 1210):
    # Getting the type of 'k' (line 1210)
    k_80233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1210, 24), 'k')
    # Assigning a type to the variable 'last_name' (line 1210)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1210, 12), 'last_name', k_80233)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 1211):
    
    # Assigning a Name to a Subscript (line 1211):
    # Getting the type of 'edecl' (line 1211)
    edecl_80234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1211, 43), 'edecl')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1211)
    groupcounter_80235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1211, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 1211)
    groupcache_80236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1211, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1211)
    getitem___80237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1211, 8), groupcache_80236, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1211)
    subscript_call_result_80238 = invoke(stypy.reporting.localization.Localization(__file__, 1211, 8), getitem___80237, groupcounter_80235)
    
    str_80239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1211, 33), 'str', 'vars')
    # Storing an element on a container (line 1211)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1211, 8), subscript_call_result_80238, (str_80239, edecl_80234))
    
    # Type idiom detected: calculating its left and rigth part (line 1212)
    # Getting the type of 'last_name' (line 1212)
    last_name_80240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 8), 'last_name')
    # Getting the type of 'None' (line 1212)
    None_80241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 28), 'None')
    
    (may_be_80242, more_types_in_union_80243) = may_not_be_none(last_name_80240, None_80241)

    if may_be_80242:

        if more_types_in_union_80243:
            # Runtime conditional SSA (line 1212)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Tuple to a Name (line 1213):
        
        # Assigning a Tuple to a Name (line 1213):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1213)
        tuple_80244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1213, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1213)
        # Adding element type (line 1213)
        str_80245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1213, 32), 'str', 'variable')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1213, 32), tuple_80244, str_80245)
        # Adding element type (line 1213)
        # Getting the type of 'last_name' (line 1213)
        last_name_80246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1213, 44), 'last_name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1213, 32), tuple_80244, last_name_80246)
        # Adding element type (line 1213)
        # Getting the type of 'groupcounter' (line 1213)
        groupcounter_80247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1213, 55), 'groupcounter')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1213, 32), tuple_80244, groupcounter_80247)
        
        # Assigning a type to the variable 'previous_context' (line 1213)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1213, 12), 'previous_context', tuple_80244)

        if more_types_in_union_80243:
            # SSA join for if statement (line 1212)
            module_type_store = module_type_store.join_ssa_context()


    
    # SSA branch for the else part of an if statement (line 1170)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'case' (line 1214)
    case_80248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1214, 9), 'case')
    str_80249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1214, 17), 'str', 'implicit')
    # Applying the binary operator '==' (line 1214)
    result_eq_80250 = python_operator(stypy.reporting.localization.Localization(__file__, 1214, 9), '==', case_80248, str_80249)
    
    # Testing the type of an if condition (line 1214)
    if_condition_80251 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1214, 9), result_eq_80250)
    # Assigning a type to the variable 'if_condition_80251' (line 1214)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1214, 9), 'if_condition_80251', if_condition_80251)
    # SSA begins for if statement (line 1214)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Call to lower(...): (line 1215)
    # Processing the call keyword arguments (line 1215)
    kwargs_80261 = {}
    
    # Call to strip(...): (line 1215)
    # Processing the call keyword arguments (line 1215)
    kwargs_80258 = {}
    
    # Call to group(...): (line 1215)
    # Processing the call arguments (line 1215)
    str_80254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1215, 19), 'str', 'after')
    # Processing the call keyword arguments (line 1215)
    kwargs_80255 = {}
    # Getting the type of 'm' (line 1215)
    m_80252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1215, 11), 'm', False)
    # Obtaining the member 'group' of a type (line 1215)
    group_80253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1215, 11), m_80252, 'group')
    # Calling group(args, kwargs) (line 1215)
    group_call_result_80256 = invoke(stypy.reporting.localization.Localization(__file__, 1215, 11), group_80253, *[str_80254], **kwargs_80255)
    
    # Obtaining the member 'strip' of a type (line 1215)
    strip_80257 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1215, 11), group_call_result_80256, 'strip')
    # Calling strip(args, kwargs) (line 1215)
    strip_call_result_80259 = invoke(stypy.reporting.localization.Localization(__file__, 1215, 11), strip_80257, *[], **kwargs_80258)
    
    # Obtaining the member 'lower' of a type (line 1215)
    lower_80260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1215, 11), strip_call_result_80259, 'lower')
    # Calling lower(args, kwargs) (line 1215)
    lower_call_result_80262 = invoke(stypy.reporting.localization.Localization(__file__, 1215, 11), lower_80260, *[], **kwargs_80261)
    
    str_80263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1215, 47), 'str', 'none')
    # Applying the binary operator '==' (line 1215)
    result_eq_80264 = python_operator(stypy.reporting.localization.Localization(__file__, 1215, 11), '==', lower_call_result_80262, str_80263)
    
    # Testing the type of an if condition (line 1215)
    if_condition_80265 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1215, 8), result_eq_80264)
    # Assigning a type to the variable 'if_condition_80265' (line 1215)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1215, 8), 'if_condition_80265', if_condition_80265)
    # SSA begins for if statement (line 1215)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Subscript (line 1216):
    
    # Assigning a Name to a Subscript (line 1216):
    # Getting the type of 'None' (line 1216)
    None_80266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1216, 51), 'None')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1216)
    groupcounter_80267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1216, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 1216)
    groupcache_80268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1216, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1216)
    getitem___80269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1216, 12), groupcache_80268, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1216)
    subscript_call_result_80270 = invoke(stypy.reporting.localization.Localization(__file__, 1216, 12), getitem___80269, groupcounter_80267)
    
    str_80271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1216, 37), 'str', 'implicit')
    # Storing an element on a container (line 1216)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1216, 12), subscript_call_result_80270, (str_80271, None_80266))
    # SSA branch for the else part of an if statement (line 1215)
    module_type_store.open_ssa_branch('else')
    
    
    # Call to group(...): (line 1217)
    # Processing the call arguments (line 1217)
    str_80274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1217, 21), 'str', 'after')
    # Processing the call keyword arguments (line 1217)
    kwargs_80275 = {}
    # Getting the type of 'm' (line 1217)
    m_80272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1217, 13), 'm', False)
    # Obtaining the member 'group' of a type (line 1217)
    group_80273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1217, 13), m_80272, 'group')
    # Calling group(args, kwargs) (line 1217)
    group_call_result_80276 = invoke(stypy.reporting.localization.Localization(__file__, 1217, 13), group_80273, *[str_80274], **kwargs_80275)
    
    # Testing the type of an if condition (line 1217)
    if_condition_80277 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1217, 13), group_call_result_80276)
    # Assigning a type to the variable 'if_condition_80277' (line 1217)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1217, 13), 'if_condition_80277', if_condition_80277)
    # SSA begins for if statement (line 1217)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    str_80278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1218, 15), 'str', 'implicit')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1218)
    groupcounter_80279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1218, 40), 'groupcounter')
    # Getting the type of 'groupcache' (line 1218)
    groupcache_80280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1218, 29), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1218)
    getitem___80281 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1218, 29), groupcache_80280, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1218)
    subscript_call_result_80282 = invoke(stypy.reporting.localization.Localization(__file__, 1218, 29), getitem___80281, groupcounter_80279)
    
    # Applying the binary operator 'in' (line 1218)
    result_contains_80283 = python_operator(stypy.reporting.localization.Localization(__file__, 1218, 15), 'in', str_80278, subscript_call_result_80282)
    
    # Testing the type of an if condition (line 1218)
    if_condition_80284 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1218, 12), result_contains_80283)
    # Assigning a type to the variable 'if_condition_80284' (line 1218)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1218, 12), 'if_condition_80284', if_condition_80284)
    # SSA begins for if statement (line 1218)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1219):
    
    # Assigning a Subscript to a Name (line 1219):
    
    # Obtaining the type of the subscript
    str_80285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1219, 48), 'str', 'implicit')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1219)
    groupcounter_80286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1219, 34), 'groupcounter')
    # Getting the type of 'groupcache' (line 1219)
    groupcache_80287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1219, 23), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1219)
    getitem___80288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 23), groupcache_80287, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1219)
    subscript_call_result_80289 = invoke(stypy.reporting.localization.Localization(__file__, 1219, 23), getitem___80288, groupcounter_80286)
    
    # Obtaining the member '__getitem__' of a type (line 1219)
    getitem___80290 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1219, 23), subscript_call_result_80289, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1219)
    subscript_call_result_80291 = invoke(stypy.reporting.localization.Localization(__file__, 1219, 23), getitem___80290, str_80285)
    
    # Assigning a type to the variable 'impl' (line 1219)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1219, 16), 'impl', subscript_call_result_80291)
    # SSA branch for the else part of an if statement (line 1218)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Dict to a Name (line 1221):
    
    # Assigning a Dict to a Name (line 1221):
    
    # Obtaining an instance of the builtin type 'dict' (line 1221)
    dict_80292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1221, 23), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1221)
    
    # Assigning a type to the variable 'impl' (line 1221)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1221, 16), 'impl', dict_80292)
    # SSA join for if statement (line 1218)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Type idiom detected: calculating its left and rigth part (line 1222)
    # Getting the type of 'impl' (line 1222)
    impl_80293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1222, 15), 'impl')
    # Getting the type of 'None' (line 1222)
    None_80294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1222, 23), 'None')
    
    (may_be_80295, more_types_in_union_80296) = may_be_none(impl_80293, None_80294)

    if may_be_80295:

        if more_types_in_union_80296:
            # Runtime conditional SSA (line 1222)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Call to outmess(...): (line 1223)
        # Processing the call arguments (line 1223)
        str_80298 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1224, 20), 'str', 'analyzeline: Overwriting earlier "implicit none" statement.\n')
        # Processing the call keyword arguments (line 1223)
        kwargs_80299 = {}
        # Getting the type of 'outmess' (line 1223)
        outmess_80297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1223, 16), 'outmess', False)
        # Calling outmess(args, kwargs) (line 1223)
        outmess_call_result_80300 = invoke(stypy.reporting.localization.Localization(__file__, 1223, 16), outmess_80297, *[str_80298], **kwargs_80299)
        
        
        # Assigning a Dict to a Name (line 1225):
        
        # Assigning a Dict to a Name (line 1225):
        
        # Obtaining an instance of the builtin type 'dict' (line 1225)
        dict_80301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1225, 23), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1225)
        
        # Assigning a type to the variable 'impl' (line 1225)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1225, 16), 'impl', dict_80301)

        if more_types_in_union_80296:
            # SSA join for if statement (line 1222)
            module_type_store = module_type_store.join_ssa_context()


    
    
    
    # Call to split(...): (line 1226)
    # Processing the call arguments (line 1226)
    str_80311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1226, 60), 'str', '@,@')
    # Processing the call keyword arguments (line 1226)
    kwargs_80312 = {}
    
    # Call to markoutercomma(...): (line 1226)
    # Processing the call arguments (line 1226)
    
    # Call to group(...): (line 1226)
    # Processing the call arguments (line 1226)
    str_80305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1226, 44), 'str', 'after')
    # Processing the call keyword arguments (line 1226)
    kwargs_80306 = {}
    # Getting the type of 'm' (line 1226)
    m_80303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1226, 36), 'm', False)
    # Obtaining the member 'group' of a type (line 1226)
    group_80304 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1226, 36), m_80303, 'group')
    # Calling group(args, kwargs) (line 1226)
    group_call_result_80307 = invoke(stypy.reporting.localization.Localization(__file__, 1226, 36), group_80304, *[str_80305], **kwargs_80306)
    
    # Processing the call keyword arguments (line 1226)
    kwargs_80308 = {}
    # Getting the type of 'markoutercomma' (line 1226)
    markoutercomma_80302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1226, 21), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 1226)
    markoutercomma_call_result_80309 = invoke(stypy.reporting.localization.Localization(__file__, 1226, 21), markoutercomma_80302, *[group_call_result_80307], **kwargs_80308)
    
    # Obtaining the member 'split' of a type (line 1226)
    split_80310 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1226, 21), markoutercomma_call_result_80309, 'split')
    # Calling split(args, kwargs) (line 1226)
    split_call_result_80313 = invoke(stypy.reporting.localization.Localization(__file__, 1226, 21), split_80310, *[str_80311], **kwargs_80312)
    
    # Testing the type of a for loop iterable (line 1226)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1226, 12), split_call_result_80313)
    # Getting the type of the for loop variable (line 1226)
    for_loop_var_80314 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1226, 12), split_call_result_80313)
    # Assigning a type to the variable 'e' (line 1226)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1226, 12), 'e', for_loop_var_80314)
    # SSA begins for a for statement (line 1226)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Dict to a Name (line 1227):
    
    # Assigning a Dict to a Name (line 1227):
    
    # Obtaining an instance of the builtin type 'dict' (line 1227)
    dict_80315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1227, 23), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1227)
    
    # Assigning a type to the variable 'decl' (line 1227)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1227, 16), 'decl', dict_80315)
    
    # Assigning a Call to a Name (line 1228):
    
    # Assigning a Call to a Name (line 1228):
    
    # Call to match(...): (line 1228)
    # Processing the call arguments (line 1228)
    str_80318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1229, 20), 'str', '\\s*(?P<this>.*?)\\s*(\\(\\s*(?P<after>[a-z-, ]+)\\s*\\)\\s*|)\\Z')
    # Getting the type of 'e' (line 1229)
    e_80319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 82), 'e', False)
    # Getting the type of 're' (line 1229)
    re_80320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 85), 're', False)
    # Obtaining the member 'I' of a type (line 1229)
    I_80321 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1229, 85), re_80320, 'I')
    # Processing the call keyword arguments (line 1228)
    kwargs_80322 = {}
    # Getting the type of 're' (line 1228)
    re_80316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1228, 21), 're', False)
    # Obtaining the member 'match' of a type (line 1228)
    match_80317 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1228, 21), re_80316, 'match')
    # Calling match(args, kwargs) (line 1228)
    match_call_result_80323 = invoke(stypy.reporting.localization.Localization(__file__, 1228, 21), match_80317, *[str_80318, e_80319, I_80321], **kwargs_80322)
    
    # Assigning a type to the variable 'm1' (line 1228)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1228, 16), 'm1', match_call_result_80323)
    
    
    # Getting the type of 'm1' (line 1230)
    m1_80324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1230, 23), 'm1')
    # Applying the 'not' unary operator (line 1230)
    result_not__80325 = python_operator(stypy.reporting.localization.Localization(__file__, 1230, 19), 'not', m1_80324)
    
    # Testing the type of an if condition (line 1230)
    if_condition_80326 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1230, 16), result_not__80325)
    # Assigning a type to the variable 'if_condition_80326' (line 1230)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1230, 16), 'if_condition_80326', if_condition_80326)
    # SSA begins for if statement (line 1230)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1231)
    # Processing the call arguments (line 1231)
    str_80328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1232, 24), 'str', 'analyzeline: could not extract info of implicit statement part "%s"\n')
    # Getting the type of 'e' (line 1232)
    e_80329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1232, 99), 'e', False)
    # Applying the binary operator '%' (line 1232)
    result_mod_80330 = python_operator(stypy.reporting.localization.Localization(__file__, 1232, 24), '%', str_80328, e_80329)
    
    # Processing the call keyword arguments (line 1231)
    kwargs_80331 = {}
    # Getting the type of 'outmess' (line 1231)
    outmess_80327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1231, 20), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1231)
    outmess_call_result_80332 = invoke(stypy.reporting.localization.Localization(__file__, 1231, 20), outmess_80327, *[result_mod_80330], **kwargs_80331)
    
    # SSA join for if statement (line 1230)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1234):
    
    # Assigning a Call to a Name (line 1234):
    
    # Call to match(...): (line 1234)
    # Processing the call arguments (line 1234)
    
    # Call to group(...): (line 1234)
    # Processing the call arguments (line 1234)
    str_80337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1234, 58), 'str', 'this')
    # Processing the call keyword arguments (line 1234)
    kwargs_80338 = {}
    # Getting the type of 'm1' (line 1234)
    m1_80335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1234, 49), 'm1', False)
    # Obtaining the member 'group' of a type (line 1234)
    group_80336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1234, 49), m1_80335, 'group')
    # Calling group(args, kwargs) (line 1234)
    group_call_result_80339 = invoke(stypy.reporting.localization.Localization(__file__, 1234, 49), group_80336, *[str_80337], **kwargs_80338)
    
    # Processing the call keyword arguments (line 1234)
    kwargs_80340 = {}
    # Getting the type of 'typespattern4implicit' (line 1234)
    typespattern4implicit_80333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1234, 21), 'typespattern4implicit', False)
    # Obtaining the member 'match' of a type (line 1234)
    match_80334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1234, 21), typespattern4implicit_80333, 'match')
    # Calling match(args, kwargs) (line 1234)
    match_call_result_80341 = invoke(stypy.reporting.localization.Localization(__file__, 1234, 21), match_80334, *[group_call_result_80339], **kwargs_80340)
    
    # Assigning a type to the variable 'm2' (line 1234)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1234, 16), 'm2', match_call_result_80341)
    
    
    # Getting the type of 'm2' (line 1235)
    m2_80342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1235, 23), 'm2')
    # Applying the 'not' unary operator (line 1235)
    result_not__80343 = python_operator(stypy.reporting.localization.Localization(__file__, 1235, 19), 'not', m2_80342)
    
    # Testing the type of an if condition (line 1235)
    if_condition_80344 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1235, 16), result_not__80343)
    # Assigning a type to the variable 'if_condition_80344' (line 1235)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1235, 16), 'if_condition_80344', if_condition_80344)
    # SSA begins for if statement (line 1235)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1236)
    # Processing the call arguments (line 1236)
    str_80346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1237, 24), 'str', 'analyzeline: could not extract types pattern of implicit statement part "%s"\n')
    # Getting the type of 'e' (line 1237)
    e_80347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1237, 108), 'e', False)
    # Applying the binary operator '%' (line 1237)
    result_mod_80348 = python_operator(stypy.reporting.localization.Localization(__file__, 1237, 24), '%', str_80346, e_80347)
    
    # Processing the call keyword arguments (line 1236)
    kwargs_80349 = {}
    # Getting the type of 'outmess' (line 1236)
    outmess_80345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 20), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1236)
    outmess_call_result_80350 = invoke(stypy.reporting.localization.Localization(__file__, 1236, 20), outmess_80345, *[result_mod_80348], **kwargs_80349)
    
    # SSA join for if statement (line 1235)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Tuple (line 1239):
    
    # Assigning a Call to a Name:
    
    # Call to cracktypespec0(...): (line 1239)
    # Processing the call arguments (line 1239)
    
    # Call to group(...): (line 1240)
    # Processing the call arguments (line 1240)
    str_80354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1240, 29), 'str', 'this')
    # Processing the call keyword arguments (line 1240)
    kwargs_80355 = {}
    # Getting the type of 'm2' (line 1240)
    m2_80352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 20), 'm2', False)
    # Obtaining the member 'group' of a type (line 1240)
    group_80353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1240, 20), m2_80352, 'group')
    # Calling group(args, kwargs) (line 1240)
    group_call_result_80356 = invoke(stypy.reporting.localization.Localization(__file__, 1240, 20), group_80353, *[str_80354], **kwargs_80355)
    
    
    # Call to group(...): (line 1240)
    # Processing the call arguments (line 1240)
    str_80359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1240, 47), 'str', 'after')
    # Processing the call keyword arguments (line 1240)
    kwargs_80360 = {}
    # Getting the type of 'm2' (line 1240)
    m2_80357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 38), 'm2', False)
    # Obtaining the member 'group' of a type (line 1240)
    group_80358 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1240, 38), m2_80357, 'group')
    # Calling group(args, kwargs) (line 1240)
    group_call_result_80361 = invoke(stypy.reporting.localization.Localization(__file__, 1240, 38), group_80358, *[str_80359], **kwargs_80360)
    
    # Processing the call keyword arguments (line 1239)
    kwargs_80362 = {}
    # Getting the type of 'cracktypespec0' (line 1239)
    cracktypespec0_80351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 50), 'cracktypespec0', False)
    # Calling cracktypespec0(args, kwargs) (line 1239)
    cracktypespec0_call_result_80363 = invoke(stypy.reporting.localization.Localization(__file__, 1239, 50), cracktypespec0_80351, *[group_call_result_80356, group_call_result_80361], **kwargs_80362)
    
    # Assigning a type to the variable 'call_assignment_75792' (line 1239)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1239, 16), 'call_assignment_75792', cracktypespec0_call_result_80363)
    
    # Assigning a Call to a Name (line 1239):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_80366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1239, 16), 'int')
    # Processing the call keyword arguments
    kwargs_80367 = {}
    # Getting the type of 'call_assignment_75792' (line 1239)
    call_assignment_75792_80364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 16), 'call_assignment_75792', False)
    # Obtaining the member '__getitem__' of a type (line 1239)
    getitem___80365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1239, 16), call_assignment_75792_80364, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_80368 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___80365, *[int_80366], **kwargs_80367)
    
    # Assigning a type to the variable 'call_assignment_75793' (line 1239)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1239, 16), 'call_assignment_75793', getitem___call_result_80368)
    
    # Assigning a Name to a Name (line 1239):
    # Getting the type of 'call_assignment_75793' (line 1239)
    call_assignment_75793_80369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 16), 'call_assignment_75793')
    # Assigning a type to the variable 'typespec' (line 1239)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1239, 16), 'typespec', call_assignment_75793_80369)
    
    # Assigning a Call to a Name (line 1239):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_80372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1239, 16), 'int')
    # Processing the call keyword arguments
    kwargs_80373 = {}
    # Getting the type of 'call_assignment_75792' (line 1239)
    call_assignment_75792_80370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 16), 'call_assignment_75792', False)
    # Obtaining the member '__getitem__' of a type (line 1239)
    getitem___80371 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1239, 16), call_assignment_75792_80370, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_80374 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___80371, *[int_80372], **kwargs_80373)
    
    # Assigning a type to the variable 'call_assignment_75794' (line 1239)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1239, 16), 'call_assignment_75794', getitem___call_result_80374)
    
    # Assigning a Name to a Name (line 1239):
    # Getting the type of 'call_assignment_75794' (line 1239)
    call_assignment_75794_80375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 16), 'call_assignment_75794')
    # Assigning a type to the variable 'selector' (line 1239)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1239, 26), 'selector', call_assignment_75794_80375)
    
    # Assigning a Call to a Name (line 1239):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_80378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1239, 16), 'int')
    # Processing the call keyword arguments
    kwargs_80379 = {}
    # Getting the type of 'call_assignment_75792' (line 1239)
    call_assignment_75792_80376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 16), 'call_assignment_75792', False)
    # Obtaining the member '__getitem__' of a type (line 1239)
    getitem___80377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1239, 16), call_assignment_75792_80376, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_80380 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___80377, *[int_80378], **kwargs_80379)
    
    # Assigning a type to the variable 'call_assignment_75795' (line 1239)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1239, 16), 'call_assignment_75795', getitem___call_result_80380)
    
    # Assigning a Name to a Name (line 1239):
    # Getting the type of 'call_assignment_75795' (line 1239)
    call_assignment_75795_80381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 16), 'call_assignment_75795')
    # Assigning a type to the variable 'attr' (line 1239)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1239, 36), 'attr', call_assignment_75795_80381)
    
    # Assigning a Call to a Name (line 1239):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_80384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1239, 16), 'int')
    # Processing the call keyword arguments
    kwargs_80385 = {}
    # Getting the type of 'call_assignment_75792' (line 1239)
    call_assignment_75792_80382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 16), 'call_assignment_75792', False)
    # Obtaining the member '__getitem__' of a type (line 1239)
    getitem___80383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1239, 16), call_assignment_75792_80382, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_80386 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___80383, *[int_80384], **kwargs_80385)
    
    # Assigning a type to the variable 'call_assignment_75796' (line 1239)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1239, 16), 'call_assignment_75796', getitem___call_result_80386)
    
    # Assigning a Name to a Name (line 1239):
    # Getting the type of 'call_assignment_75796' (line 1239)
    call_assignment_75796_80387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 16), 'call_assignment_75796')
    # Assigning a type to the variable 'edecl' (line 1239)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1239, 42), 'edecl', call_assignment_75796_80387)
    
    # Assigning a Call to a Tuple (line 1241):
    
    # Assigning a Call to a Name:
    
    # Call to cracktypespec(...): (line 1241)
    # Processing the call arguments (line 1241)
    # Getting the type of 'typespec' (line 1242)
    typespec_80389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1242, 20), 'typespec', False)
    # Getting the type of 'selector' (line 1242)
    selector_80390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1242, 30), 'selector', False)
    # Processing the call keyword arguments (line 1241)
    kwargs_80391 = {}
    # Getting the type of 'cracktypespec' (line 1241)
    cracktypespec_80388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1241, 51), 'cracktypespec', False)
    # Calling cracktypespec(args, kwargs) (line 1241)
    cracktypespec_call_result_80392 = invoke(stypy.reporting.localization.Localization(__file__, 1241, 51), cracktypespec_80388, *[typespec_80389, selector_80390], **kwargs_80391)
    
    # Assigning a type to the variable 'call_assignment_75797' (line 1241)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1241, 16), 'call_assignment_75797', cracktypespec_call_result_80392)
    
    # Assigning a Call to a Name (line 1241):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_80395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1241, 16), 'int')
    # Processing the call keyword arguments
    kwargs_80396 = {}
    # Getting the type of 'call_assignment_75797' (line 1241)
    call_assignment_75797_80393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1241, 16), 'call_assignment_75797', False)
    # Obtaining the member '__getitem__' of a type (line 1241)
    getitem___80394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1241, 16), call_assignment_75797_80393, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_80397 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___80394, *[int_80395], **kwargs_80396)
    
    # Assigning a type to the variable 'call_assignment_75798' (line 1241)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1241, 16), 'call_assignment_75798', getitem___call_result_80397)
    
    # Assigning a Name to a Name (line 1241):
    # Getting the type of 'call_assignment_75798' (line 1241)
    call_assignment_75798_80398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1241, 16), 'call_assignment_75798')
    # Assigning a type to the variable 'kindselect' (line 1241)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1241, 16), 'kindselect', call_assignment_75798_80398)
    
    # Assigning a Call to a Name (line 1241):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_80401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1241, 16), 'int')
    # Processing the call keyword arguments
    kwargs_80402 = {}
    # Getting the type of 'call_assignment_75797' (line 1241)
    call_assignment_75797_80399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1241, 16), 'call_assignment_75797', False)
    # Obtaining the member '__getitem__' of a type (line 1241)
    getitem___80400 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1241, 16), call_assignment_75797_80399, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_80403 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___80400, *[int_80401], **kwargs_80402)
    
    # Assigning a type to the variable 'call_assignment_75799' (line 1241)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1241, 16), 'call_assignment_75799', getitem___call_result_80403)
    
    # Assigning a Name to a Name (line 1241):
    # Getting the type of 'call_assignment_75799' (line 1241)
    call_assignment_75799_80404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1241, 16), 'call_assignment_75799')
    # Assigning a type to the variable 'charselect' (line 1241)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1241, 28), 'charselect', call_assignment_75799_80404)
    
    # Assigning a Call to a Name (line 1241):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_80407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1241, 16), 'int')
    # Processing the call keyword arguments
    kwargs_80408 = {}
    # Getting the type of 'call_assignment_75797' (line 1241)
    call_assignment_75797_80405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1241, 16), 'call_assignment_75797', False)
    # Obtaining the member '__getitem__' of a type (line 1241)
    getitem___80406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1241, 16), call_assignment_75797_80405, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_80409 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___80406, *[int_80407], **kwargs_80408)
    
    # Assigning a type to the variable 'call_assignment_75800' (line 1241)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1241, 16), 'call_assignment_75800', getitem___call_result_80409)
    
    # Assigning a Name to a Name (line 1241):
    # Getting the type of 'call_assignment_75800' (line 1241)
    call_assignment_75800_80410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1241, 16), 'call_assignment_75800')
    # Assigning a type to the variable 'typename' (line 1241)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1241, 40), 'typename', call_assignment_75800_80410)
    
    # Assigning a Name to a Subscript (line 1243):
    
    # Assigning a Name to a Subscript (line 1243):
    # Getting the type of 'typespec' (line 1243)
    typespec_80411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1243, 35), 'typespec')
    # Getting the type of 'decl' (line 1243)
    decl_80412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1243, 16), 'decl')
    str_80413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1243, 21), 'str', 'typespec')
    # Storing an element on a container (line 1243)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1243, 16), decl_80412, (str_80413, typespec_80411))
    
    # Assigning a Name to a Subscript (line 1244):
    
    # Assigning a Name to a Subscript (line 1244):
    # Getting the type of 'kindselect' (line 1244)
    kindselect_80414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1244, 39), 'kindselect')
    # Getting the type of 'decl' (line 1244)
    decl_80415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1244, 16), 'decl')
    str_80416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1244, 21), 'str', 'kindselector')
    # Storing an element on a container (line 1244)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1244, 16), decl_80415, (str_80416, kindselect_80414))
    
    # Assigning a Name to a Subscript (line 1245):
    
    # Assigning a Name to a Subscript (line 1245):
    # Getting the type of 'charselect' (line 1245)
    charselect_80417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 39), 'charselect')
    # Getting the type of 'decl' (line 1245)
    decl_80418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 16), 'decl')
    str_80419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1245, 21), 'str', 'charselector')
    # Storing an element on a container (line 1245)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1245, 16), decl_80418, (str_80419, charselect_80417))
    
    # Assigning a Name to a Subscript (line 1246):
    
    # Assigning a Name to a Subscript (line 1246):
    # Getting the type of 'typename' (line 1246)
    typename_80420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 35), 'typename')
    # Getting the type of 'decl' (line 1246)
    decl_80421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 16), 'decl')
    str_80422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1246, 21), 'str', 'typename')
    # Storing an element on a container (line 1246)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1246, 16), decl_80421, (str_80422, typename_80420))
    
    
    # Call to list(...): (line 1247)
    # Processing the call arguments (line 1247)
    
    # Call to keys(...): (line 1247)
    # Processing the call keyword arguments (line 1247)
    kwargs_80426 = {}
    # Getting the type of 'decl' (line 1247)
    decl_80424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1247, 30), 'decl', False)
    # Obtaining the member 'keys' of a type (line 1247)
    keys_80425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1247, 30), decl_80424, 'keys')
    # Calling keys(args, kwargs) (line 1247)
    keys_call_result_80427 = invoke(stypy.reporting.localization.Localization(__file__, 1247, 30), keys_80425, *[], **kwargs_80426)
    
    # Processing the call keyword arguments (line 1247)
    kwargs_80428 = {}
    # Getting the type of 'list' (line 1247)
    list_80423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1247, 25), 'list', False)
    # Calling list(args, kwargs) (line 1247)
    list_call_result_80429 = invoke(stypy.reporting.localization.Localization(__file__, 1247, 25), list_80423, *[keys_call_result_80427], **kwargs_80428)
    
    # Testing the type of a for loop iterable (line 1247)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1247, 16), list_call_result_80429)
    # Getting the type of the for loop variable (line 1247)
    for_loop_var_80430 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1247, 16), list_call_result_80429)
    # Assigning a type to the variable 'k' (line 1247)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1247, 16), 'k', for_loop_var_80430)
    # SSA begins for a for statement (line 1247)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1248)
    k_80431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1248, 32), 'k')
    # Getting the type of 'decl' (line 1248)
    decl_80432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1248, 27), 'decl')
    # Obtaining the member '__getitem__' of a type (line 1248)
    getitem___80433 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1248, 27), decl_80432, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1248)
    subscript_call_result_80434 = invoke(stypy.reporting.localization.Localization(__file__, 1248, 27), getitem___80433, k_80431)
    
    # Applying the 'not' unary operator (line 1248)
    result_not__80435 = python_operator(stypy.reporting.localization.Localization(__file__, 1248, 23), 'not', subscript_call_result_80434)
    
    # Testing the type of an if condition (line 1248)
    if_condition_80436 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1248, 20), result_not__80435)
    # Assigning a type to the variable 'if_condition_80436' (line 1248)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1248, 20), 'if_condition_80436', if_condition_80436)
    # SSA begins for if statement (line 1248)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Deleting a member
    # Getting the type of 'decl' (line 1249)
    decl_80437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1249, 28), 'decl')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1249)
    k_80438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1249, 33), 'k')
    # Getting the type of 'decl' (line 1249)
    decl_80439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1249, 28), 'decl')
    # Obtaining the member '__getitem__' of a type (line 1249)
    getitem___80440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1249, 28), decl_80439, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1249)
    subscript_call_result_80441 = invoke(stypy.reporting.localization.Localization(__file__, 1249, 28), getitem___80440, k_80438)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1249, 24), decl_80437, subscript_call_result_80441)
    # SSA join for if statement (line 1248)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to split(...): (line 1250)
    # Processing the call arguments (line 1250)
    str_80451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1250, 65), 'str', '@,@')
    # Processing the call keyword arguments (line 1250)
    kwargs_80452 = {}
    
    # Call to markoutercomma(...): (line 1250)
    # Processing the call arguments (line 1250)
    
    # Call to group(...): (line 1250)
    # Processing the call arguments (line 1250)
    str_80445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1250, 49), 'str', 'after')
    # Processing the call keyword arguments (line 1250)
    kwargs_80446 = {}
    # Getting the type of 'm1' (line 1250)
    m1_80443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1250, 40), 'm1', False)
    # Obtaining the member 'group' of a type (line 1250)
    group_80444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1250, 40), m1_80443, 'group')
    # Calling group(args, kwargs) (line 1250)
    group_call_result_80447 = invoke(stypy.reporting.localization.Localization(__file__, 1250, 40), group_80444, *[str_80445], **kwargs_80446)
    
    # Processing the call keyword arguments (line 1250)
    kwargs_80448 = {}
    # Getting the type of 'markoutercomma' (line 1250)
    markoutercomma_80442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1250, 25), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 1250)
    markoutercomma_call_result_80449 = invoke(stypy.reporting.localization.Localization(__file__, 1250, 25), markoutercomma_80442, *[group_call_result_80447], **kwargs_80448)
    
    # Obtaining the member 'split' of a type (line 1250)
    split_80450 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1250, 25), markoutercomma_call_result_80449, 'split')
    # Calling split(args, kwargs) (line 1250)
    split_call_result_80453 = invoke(stypy.reporting.localization.Localization(__file__, 1250, 25), split_80450, *[str_80451], **kwargs_80452)
    
    # Testing the type of a for loop iterable (line 1250)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1250, 16), split_call_result_80453)
    # Getting the type of the for loop variable (line 1250)
    for_loop_var_80454 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1250, 16), split_call_result_80453)
    # Assigning a type to the variable 'r' (line 1250)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1250, 16), 'r', for_loop_var_80454)
    # SSA begins for a for statement (line 1250)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    str_80455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1251, 23), 'str', '-')
    # Getting the type of 'r' (line 1251)
    r_80456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1251, 30), 'r')
    # Applying the binary operator 'in' (line 1251)
    result_contains_80457 = python_operator(stypy.reporting.localization.Localization(__file__, 1251, 23), 'in', str_80455, r_80456)
    
    # Testing the type of an if condition (line 1251)
    if_condition_80458 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1251, 20), result_contains_80457)
    # Assigning a type to the variable 'if_condition_80458' (line 1251)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1251, 20), 'if_condition_80458', if_condition_80458)
    # SSA begins for if statement (line 1251)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # SSA begins for try-except statement (line 1252)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a ListComp to a Tuple (line 1253):
    
    # Assigning a Subscript to a Name (line 1253):
    
    # Obtaining the type of the subscript
    int_80459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1253, 28), 'int')
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to split(...): (line 1253)
    # Processing the call arguments (line 1253)
    str_80466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1253, 69), 'str', '-')
    # Processing the call keyword arguments (line 1253)
    kwargs_80467 = {}
    # Getting the type of 'r' (line 1253)
    r_80464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 61), 'r', False)
    # Obtaining the member 'split' of a type (line 1253)
    split_80465 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1253, 61), r_80464, 'split')
    # Calling split(args, kwargs) (line 1253)
    split_call_result_80468 = invoke(stypy.reporting.localization.Localization(__file__, 1253, 61), split_80465, *[str_80466], **kwargs_80467)
    
    comprehension_80469 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1253, 42), split_call_result_80468)
    # Assigning a type to the variable 'x' (line 1253)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1253, 42), 'x', comprehension_80469)
    
    # Call to strip(...): (line 1253)
    # Processing the call keyword arguments (line 1253)
    kwargs_80462 = {}
    # Getting the type of 'x' (line 1253)
    x_80460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 42), 'x', False)
    # Obtaining the member 'strip' of a type (line 1253)
    strip_80461 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1253, 42), x_80460, 'strip')
    # Calling strip(args, kwargs) (line 1253)
    strip_call_result_80463 = invoke(stypy.reporting.localization.Localization(__file__, 1253, 42), strip_80461, *[], **kwargs_80462)
    
    list_80470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1253, 42), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1253, 42), list_80470, strip_call_result_80463)
    # Obtaining the member '__getitem__' of a type (line 1253)
    getitem___80471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1253, 28), list_80470, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1253)
    subscript_call_result_80472 = invoke(stypy.reporting.localization.Localization(__file__, 1253, 28), getitem___80471, int_80459)
    
    # Assigning a type to the variable 'tuple_var_assignment_75801' (line 1253)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1253, 28), 'tuple_var_assignment_75801', subscript_call_result_80472)
    
    # Assigning a Subscript to a Name (line 1253):
    
    # Obtaining the type of the subscript
    int_80473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1253, 28), 'int')
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to split(...): (line 1253)
    # Processing the call arguments (line 1253)
    str_80480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1253, 69), 'str', '-')
    # Processing the call keyword arguments (line 1253)
    kwargs_80481 = {}
    # Getting the type of 'r' (line 1253)
    r_80478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 61), 'r', False)
    # Obtaining the member 'split' of a type (line 1253)
    split_80479 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1253, 61), r_80478, 'split')
    # Calling split(args, kwargs) (line 1253)
    split_call_result_80482 = invoke(stypy.reporting.localization.Localization(__file__, 1253, 61), split_80479, *[str_80480], **kwargs_80481)
    
    comprehension_80483 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1253, 42), split_call_result_80482)
    # Assigning a type to the variable 'x' (line 1253)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1253, 42), 'x', comprehension_80483)
    
    # Call to strip(...): (line 1253)
    # Processing the call keyword arguments (line 1253)
    kwargs_80476 = {}
    # Getting the type of 'x' (line 1253)
    x_80474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 42), 'x', False)
    # Obtaining the member 'strip' of a type (line 1253)
    strip_80475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1253, 42), x_80474, 'strip')
    # Calling strip(args, kwargs) (line 1253)
    strip_call_result_80477 = invoke(stypy.reporting.localization.Localization(__file__, 1253, 42), strip_80475, *[], **kwargs_80476)
    
    list_80484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1253, 42), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1253, 42), list_80484, strip_call_result_80477)
    # Obtaining the member '__getitem__' of a type (line 1253)
    getitem___80485 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1253, 28), list_80484, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1253)
    subscript_call_result_80486 = invoke(stypy.reporting.localization.Localization(__file__, 1253, 28), getitem___80485, int_80473)
    
    # Assigning a type to the variable 'tuple_var_assignment_75802' (line 1253)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1253, 28), 'tuple_var_assignment_75802', subscript_call_result_80486)
    
    # Assigning a Name to a Name (line 1253):
    # Getting the type of 'tuple_var_assignment_75801' (line 1253)
    tuple_var_assignment_75801_80487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 28), 'tuple_var_assignment_75801')
    # Assigning a type to the variable 'begc' (line 1253)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1253, 28), 'begc', tuple_var_assignment_75801_80487)
    
    # Assigning a Name to a Name (line 1253):
    # Getting the type of 'tuple_var_assignment_75802' (line 1253)
    tuple_var_assignment_75802_80488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 28), 'tuple_var_assignment_75802')
    # Assigning a type to the variable 'endc' (line 1253)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1253, 34), 'endc', tuple_var_assignment_75802_80488)
    # SSA branch for the except part of a try statement (line 1252)
    # SSA branch for the except '<any exception>' branch of a try statement (line 1252)
    module_type_store.open_ssa_branch('except')
    
    # Call to outmess(...): (line 1255)
    # Processing the call arguments (line 1255)
    str_80490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1256, 32), 'str', 'analyzeline: expected "<char>-<char>" instead of "%s" in range list of implicit statement\n')
    # Getting the type of 'r' (line 1256)
    r_80491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1256, 128), 'r', False)
    # Applying the binary operator '%' (line 1256)
    result_mod_80492 = python_operator(stypy.reporting.localization.Localization(__file__, 1256, 32), '%', str_80490, r_80491)
    
    # Processing the call keyword arguments (line 1255)
    kwargs_80493 = {}
    # Getting the type of 'outmess' (line 1255)
    outmess_80489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 28), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1255)
    outmess_call_result_80494 = invoke(stypy.reporting.localization.Localization(__file__, 1255, 28), outmess_80489, *[result_mod_80492], **kwargs_80493)
    
    # SSA join for try-except statement (line 1252)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1251)
    module_type_store.open_ssa_branch('else')
    
    # Multiple assignment of 2 elements.
    
    # Assigning a Call to a Name (line 1259):
    
    # Call to strip(...): (line 1259)
    # Processing the call keyword arguments (line 1259)
    kwargs_80497 = {}
    # Getting the type of 'r' (line 1259)
    r_80495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 38), 'r', False)
    # Obtaining the member 'strip' of a type (line 1259)
    strip_80496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1259, 38), r_80495, 'strip')
    # Calling strip(args, kwargs) (line 1259)
    strip_call_result_80498 = invoke(stypy.reporting.localization.Localization(__file__, 1259, 38), strip_80496, *[], **kwargs_80497)
    
    # Assigning a type to the variable 'endc' (line 1259)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1259, 31), 'endc', strip_call_result_80498)
    
    # Assigning a Name to a Name (line 1259):
    # Getting the type of 'endc' (line 1259)
    endc_80499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 31), 'endc')
    # Assigning a type to the variable 'begc' (line 1259)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1259, 24), 'begc', endc_80499)
    # SSA join for if statement (line 1251)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    
    # Call to len(...): (line 1260)
    # Processing the call arguments (line 1260)
    # Getting the type of 'begc' (line 1260)
    begc_80501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 31), 'begc', False)
    # Processing the call keyword arguments (line 1260)
    kwargs_80502 = {}
    # Getting the type of 'len' (line 1260)
    len_80500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 27), 'len', False)
    # Calling len(args, kwargs) (line 1260)
    len_call_result_80503 = invoke(stypy.reporting.localization.Localization(__file__, 1260, 27), len_80500, *[begc_80501], **kwargs_80502)
    
    
    # Call to len(...): (line 1260)
    # Processing the call arguments (line 1260)
    # Getting the type of 'endc' (line 1260)
    endc_80505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 44), 'endc', False)
    # Processing the call keyword arguments (line 1260)
    kwargs_80506 = {}
    # Getting the type of 'len' (line 1260)
    len_80504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 40), 'len', False)
    # Calling len(args, kwargs) (line 1260)
    len_call_result_80507 = invoke(stypy.reporting.localization.Localization(__file__, 1260, 40), len_80504, *[endc_80505], **kwargs_80506)
    
    # Applying the binary operator '==' (line 1260)
    result_eq_80508 = python_operator(stypy.reporting.localization.Localization(__file__, 1260, 27), '==', len_call_result_80503, len_call_result_80507)
    int_80509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1260, 53), 'int')
    # Applying the binary operator '==' (line 1260)
    result_eq_80510 = python_operator(stypy.reporting.localization.Localization(__file__, 1260, 27), '==', len_call_result_80507, int_80509)
    # Applying the binary operator '&' (line 1260)
    result_and__80511 = python_operator(stypy.reporting.localization.Localization(__file__, 1260, 27), '&', result_eq_80508, result_eq_80510)
    
    # Applying the 'not' unary operator (line 1260)
    result_not__80512 = python_operator(stypy.reporting.localization.Localization(__file__, 1260, 23), 'not', result_and__80511)
    
    # Testing the type of an if condition (line 1260)
    if_condition_80513 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1260, 20), result_not__80512)
    # Assigning a type to the variable 'if_condition_80513' (line 1260)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1260, 20), 'if_condition_80513', if_condition_80513)
    # SSA begins for if statement (line 1260)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1261)
    # Processing the call arguments (line 1261)
    str_80515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1262, 28), 'str', 'analyzeline: expected "<char>-<char>" instead of "%s" in range list of implicit statement (2)\n')
    # Getting the type of 'r' (line 1262)
    r_80516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 128), 'r', False)
    # Applying the binary operator '%' (line 1262)
    result_mod_80517 = python_operator(stypy.reporting.localization.Localization(__file__, 1262, 28), '%', str_80515, r_80516)
    
    # Processing the call keyword arguments (line 1261)
    kwargs_80518 = {}
    # Getting the type of 'outmess' (line 1261)
    outmess_80514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 24), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1261)
    outmess_call_result_80519 = invoke(stypy.reporting.localization.Localization(__file__, 1261, 24), outmess_80514, *[result_mod_80517], **kwargs_80518)
    
    # SSA join for if statement (line 1260)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to range(...): (line 1264)
    # Processing the call arguments (line 1264)
    
    # Call to ord(...): (line 1264)
    # Processing the call arguments (line 1264)
    # Getting the type of 'begc' (line 1264)
    begc_80522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1264, 39), 'begc', False)
    # Processing the call keyword arguments (line 1264)
    kwargs_80523 = {}
    # Getting the type of 'ord' (line 1264)
    ord_80521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1264, 35), 'ord', False)
    # Calling ord(args, kwargs) (line 1264)
    ord_call_result_80524 = invoke(stypy.reporting.localization.Localization(__file__, 1264, 35), ord_80521, *[begc_80522], **kwargs_80523)
    
    
    # Call to ord(...): (line 1264)
    # Processing the call arguments (line 1264)
    # Getting the type of 'endc' (line 1264)
    endc_80526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1264, 50), 'endc', False)
    # Processing the call keyword arguments (line 1264)
    kwargs_80527 = {}
    # Getting the type of 'ord' (line 1264)
    ord_80525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1264, 46), 'ord', False)
    # Calling ord(args, kwargs) (line 1264)
    ord_call_result_80528 = invoke(stypy.reporting.localization.Localization(__file__, 1264, 46), ord_80525, *[endc_80526], **kwargs_80527)
    
    int_80529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1264, 58), 'int')
    # Applying the binary operator '+' (line 1264)
    result_add_80530 = python_operator(stypy.reporting.localization.Localization(__file__, 1264, 46), '+', ord_call_result_80528, int_80529)
    
    # Processing the call keyword arguments (line 1264)
    kwargs_80531 = {}
    # Getting the type of 'range' (line 1264)
    range_80520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1264, 29), 'range', False)
    # Calling range(args, kwargs) (line 1264)
    range_call_result_80532 = invoke(stypy.reporting.localization.Localization(__file__, 1264, 29), range_80520, *[ord_call_result_80524, result_add_80530], **kwargs_80531)
    
    # Testing the type of a for loop iterable (line 1264)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1264, 20), range_call_result_80532)
    # Getting the type of the for loop variable (line 1264)
    for_loop_var_80533 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1264, 20), range_call_result_80532)
    # Assigning a type to the variable 'o' (line 1264)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1264, 20), 'o', for_loop_var_80533)
    # SSA begins for a for statement (line 1264)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Name to a Subscript (line 1265):
    
    # Assigning a Name to a Subscript (line 1265):
    # Getting the type of 'decl' (line 1265)
    decl_80534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 39), 'decl')
    # Getting the type of 'impl' (line 1265)
    impl_80535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 24), 'impl')
    
    # Call to chr(...): (line 1265)
    # Processing the call arguments (line 1265)
    # Getting the type of 'o' (line 1265)
    o_80537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 33), 'o', False)
    # Processing the call keyword arguments (line 1265)
    kwargs_80538 = {}
    # Getting the type of 'chr' (line 1265)
    chr_80536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 29), 'chr', False)
    # Calling chr(args, kwargs) (line 1265)
    chr_call_result_80539 = invoke(stypy.reporting.localization.Localization(__file__, 1265, 29), chr_80536, *[o_80537], **kwargs_80538)
    
    # Storing an element on a container (line 1265)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1265, 24), impl_80535, (chr_call_result_80539, decl_80534))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 1266):
    
    # Assigning a Name to a Subscript (line 1266):
    # Getting the type of 'impl' (line 1266)
    impl_80540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1266, 51), 'impl')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1266)
    groupcounter_80541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1266, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 1266)
    groupcache_80542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1266, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1266)
    getitem___80543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1266, 12), groupcache_80542, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1266)
    subscript_call_result_80544 = invoke(stypy.reporting.localization.Localization(__file__, 1266, 12), getitem___80543, groupcounter_80541)
    
    str_80545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1266, 37), 'str', 'implicit')
    # Storing an element on a container (line 1266)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1266, 12), subscript_call_result_80544, (str_80545, impl_80540))
    # SSA join for if statement (line 1217)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1215)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1214)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'case' (line 1267)
    case_80546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1267, 9), 'case')
    str_80547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1267, 17), 'str', 'data')
    # Applying the binary operator '==' (line 1267)
    result_eq_80548 = python_operator(stypy.reporting.localization.Localization(__file__, 1267, 9), '==', case_80546, str_80547)
    
    # Testing the type of an if condition (line 1267)
    if_condition_80549 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1267, 9), result_eq_80548)
    # Assigning a type to the variable 'if_condition_80549' (line 1267)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1267, 9), 'if_condition_80549', if_condition_80549)
    # SSA begins for if statement (line 1267)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Name (line 1268):
    
    # Assigning a List to a Name (line 1268):
    
    # Obtaining an instance of the builtin type 'list' (line 1268)
    list_80550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1268, 13), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1268)
    
    # Assigning a type to the variable 'll' (line 1268)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1268, 8), 'll', list_80550)
    
    # Assigning a Str to a Name (line 1269):
    
    # Assigning a Str to a Name (line 1269):
    str_80551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1269, 13), 'str', '')
    # Assigning a type to the variable 'dl' (line 1269)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1269, 8), 'dl', str_80551)
    
    # Assigning a Str to a Name (line 1270):
    
    # Assigning a Str to a Name (line 1270):
    str_80552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1270, 13), 'str', '')
    # Assigning a type to the variable 'il' (line 1270)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1270, 8), 'il', str_80552)
    
    # Assigning a Num to a Name (line 1271):
    
    # Assigning a Num to a Name (line 1271):
    int_80553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1271, 12), 'int')
    # Assigning a type to the variable 'f' (line 1271)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1271, 8), 'f', int_80553)
    
    # Assigning a Num to a Name (line 1272):
    
    # Assigning a Num to a Name (line 1272):
    int_80554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1272, 13), 'int')
    # Assigning a type to the variable 'fc' (line 1272)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1272, 8), 'fc', int_80554)
    
    # Assigning a Num to a Name (line 1273):
    
    # Assigning a Num to a Name (line 1273):
    int_80555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1273, 14), 'int')
    # Assigning a type to the variable 'inp' (line 1273)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1273, 8), 'inp', int_80555)
    
    
    # Call to group(...): (line 1274)
    # Processing the call arguments (line 1274)
    str_80558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1274, 25), 'str', 'after')
    # Processing the call keyword arguments (line 1274)
    kwargs_80559 = {}
    # Getting the type of 'm' (line 1274)
    m_80556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1274, 17), 'm', False)
    # Obtaining the member 'group' of a type (line 1274)
    group_80557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1274, 17), m_80556, 'group')
    # Calling group(args, kwargs) (line 1274)
    group_call_result_80560 = invoke(stypy.reporting.localization.Localization(__file__, 1274, 17), group_80557, *[str_80558], **kwargs_80559)
    
    # Testing the type of a for loop iterable (line 1274)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1274, 8), group_call_result_80560)
    # Getting the type of the for loop variable (line 1274)
    for_loop_var_80561 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1274, 8), group_call_result_80560)
    # Assigning a type to the variable 'c' (line 1274)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1274, 8), 'c', for_loop_var_80561)
    # SSA begins for a for statement (line 1274)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'inp' (line 1275)
    inp_80562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1275, 19), 'inp')
    # Applying the 'not' unary operator (line 1275)
    result_not__80563 = python_operator(stypy.reporting.localization.Localization(__file__, 1275, 15), 'not', inp_80562)
    
    # Testing the type of an if condition (line 1275)
    if_condition_80564 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1275, 12), result_not__80563)
    # Assigning a type to the variable 'if_condition_80564' (line 1275)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1275, 12), 'if_condition_80564', if_condition_80564)
    # SSA begins for if statement (line 1275)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'c' (line 1276)
    c_80565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1276, 19), 'c')
    str_80566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1276, 24), 'str', "'")
    # Applying the binary operator '==' (line 1276)
    result_eq_80567 = python_operator(stypy.reporting.localization.Localization(__file__, 1276, 19), '==', c_80565, str_80566)
    
    # Testing the type of an if condition (line 1276)
    if_condition_80568 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1276, 16), result_eq_80567)
    # Assigning a type to the variable 'if_condition_80568' (line 1276)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1276, 16), 'if_condition_80568', if_condition_80568)
    # SSA begins for if statement (line 1276)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a UnaryOp to a Name (line 1277):
    
    # Assigning a UnaryOp to a Name (line 1277):
    
    # Getting the type of 'fc' (line 1277)
    fc_80569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1277, 29), 'fc')
    # Applying the 'not' unary operator (line 1277)
    result_not__80570 = python_operator(stypy.reporting.localization.Localization(__file__, 1277, 25), 'not', fc_80569)
    
    # Assigning a type to the variable 'fc' (line 1277)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1277, 20), 'fc', result_not__80570)
    # SSA join for if statement (line 1276)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'c' (line 1278)
    c_80571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1278, 19), 'c')
    str_80572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1278, 24), 'str', '/')
    # Applying the binary operator '==' (line 1278)
    result_eq_80573 = python_operator(stypy.reporting.localization.Localization(__file__, 1278, 19), '==', c_80571, str_80572)
    
    # Getting the type of 'fc' (line 1278)
    fc_80574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1278, 32), 'fc')
    # Applying the binary operator 'and' (line 1278)
    result_and_keyword_80575 = python_operator(stypy.reporting.localization.Localization(__file__, 1278, 19), 'and', result_eq_80573, fc_80574)
    
    # Testing the type of an if condition (line 1278)
    if_condition_80576 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1278, 16), result_and_keyword_80575)
    # Assigning a type to the variable 'if_condition_80576' (line 1278)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1278, 16), 'if_condition_80576', if_condition_80576)
    # SSA begins for if statement (line 1278)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1279):
    
    # Assigning a BinOp to a Name (line 1279):
    # Getting the type of 'f' (line 1279)
    f_80577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1279, 24), 'f')
    int_80578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1279, 28), 'int')
    # Applying the binary operator '+' (line 1279)
    result_add_80579 = python_operator(stypy.reporting.localization.Localization(__file__, 1279, 24), '+', f_80577, int_80578)
    
    # Assigning a type to the variable 'f' (line 1279)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1279, 20), 'f', result_add_80579)
    # SSA join for if statement (line 1278)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1275)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'c' (line 1281)
    c_80580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1281, 15), 'c')
    str_80581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1281, 20), 'str', '(')
    # Applying the binary operator '==' (line 1281)
    result_eq_80582 = python_operator(stypy.reporting.localization.Localization(__file__, 1281, 15), '==', c_80580, str_80581)
    
    # Testing the type of an if condition (line 1281)
    if_condition_80583 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1281, 12), result_eq_80582)
    # Assigning a type to the variable 'if_condition_80583' (line 1281)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1281, 12), 'if_condition_80583', if_condition_80583)
    # SSA begins for if statement (line 1281)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1282):
    
    # Assigning a BinOp to a Name (line 1282):
    # Getting the type of 'inp' (line 1282)
    inp_80584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1282, 22), 'inp')
    int_80585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1282, 28), 'int')
    # Applying the binary operator '+' (line 1282)
    result_add_80586 = python_operator(stypy.reporting.localization.Localization(__file__, 1282, 22), '+', inp_80584, int_80585)
    
    # Assigning a type to the variable 'inp' (line 1282)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1282, 16), 'inp', result_add_80586)
    # SSA branch for the else part of an if statement (line 1281)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'c' (line 1283)
    c_80587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1283, 17), 'c')
    str_80588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1283, 22), 'str', ')')
    # Applying the binary operator '==' (line 1283)
    result_eq_80589 = python_operator(stypy.reporting.localization.Localization(__file__, 1283, 17), '==', c_80587, str_80588)
    
    # Testing the type of an if condition (line 1283)
    if_condition_80590 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1283, 17), result_eq_80589)
    # Assigning a type to the variable 'if_condition_80590' (line 1283)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1283, 17), 'if_condition_80590', if_condition_80590)
    # SSA begins for if statement (line 1283)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1284):
    
    # Assigning a BinOp to a Name (line 1284):
    # Getting the type of 'inp' (line 1284)
    inp_80591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1284, 22), 'inp')
    int_80592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1284, 28), 'int')
    # Applying the binary operator '-' (line 1284)
    result_sub_80593 = python_operator(stypy.reporting.localization.Localization(__file__, 1284, 22), '-', inp_80591, int_80592)
    
    # Assigning a type to the variable 'inp' (line 1284)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1284, 16), 'inp', result_sub_80593)
    # SSA join for if statement (line 1283)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1281)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'f' (line 1285)
    f_80594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1285, 15), 'f')
    int_80595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1285, 20), 'int')
    # Applying the binary operator '==' (line 1285)
    result_eq_80596 = python_operator(stypy.reporting.localization.Localization(__file__, 1285, 15), '==', f_80594, int_80595)
    
    # Testing the type of an if condition (line 1285)
    if_condition_80597 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1285, 12), result_eq_80596)
    # Assigning a type to the variable 'if_condition_80597' (line 1285)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1285, 12), 'if_condition_80597', if_condition_80597)
    # SSA begins for if statement (line 1285)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1286):
    
    # Assigning a BinOp to a Name (line 1286):
    # Getting the type of 'dl' (line 1286)
    dl_80598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1286, 21), 'dl')
    # Getting the type of 'c' (line 1286)
    c_80599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1286, 26), 'c')
    # Applying the binary operator '+' (line 1286)
    result_add_80600 = python_operator(stypy.reporting.localization.Localization(__file__, 1286, 21), '+', dl_80598, c_80599)
    
    # Assigning a type to the variable 'dl' (line 1286)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1286, 16), 'dl', result_add_80600)
    # SSA branch for the else part of an if statement (line 1285)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'f' (line 1287)
    f_80601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 17), 'f')
    int_80602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1287, 22), 'int')
    # Applying the binary operator '==' (line 1287)
    result_eq_80603 = python_operator(stypy.reporting.localization.Localization(__file__, 1287, 17), '==', f_80601, int_80602)
    
    # Testing the type of an if condition (line 1287)
    if_condition_80604 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1287, 17), result_eq_80603)
    # Assigning a type to the variable 'if_condition_80604' (line 1287)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 17), 'if_condition_80604', if_condition_80604)
    # SSA begins for if statement (line 1287)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1288):
    
    # Assigning a BinOp to a Name (line 1288):
    # Getting the type of 'il' (line 1288)
    il_80605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 21), 'il')
    # Getting the type of 'c' (line 1288)
    c_80606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 26), 'c')
    # Applying the binary operator '+' (line 1288)
    result_add_80607 = python_operator(stypy.reporting.localization.Localization(__file__, 1288, 21), '+', il_80605, c_80606)
    
    # Assigning a type to the variable 'il' (line 1288)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1288, 16), 'il', result_add_80607)
    # SSA branch for the else part of an if statement (line 1287)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'f' (line 1289)
    f_80608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1289, 17), 'f')
    int_80609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1289, 22), 'int')
    # Applying the binary operator '==' (line 1289)
    result_eq_80610 = python_operator(stypy.reporting.localization.Localization(__file__, 1289, 17), '==', f_80608, int_80609)
    
    # Testing the type of an if condition (line 1289)
    if_condition_80611 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1289, 17), result_eq_80610)
    # Assigning a type to the variable 'if_condition_80611' (line 1289)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1289, 17), 'if_condition_80611', if_condition_80611)
    # SSA begins for if statement (line 1289)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1290):
    
    # Assigning a Call to a Name (line 1290):
    
    # Call to strip(...): (line 1290)
    # Processing the call keyword arguments (line 1290)
    kwargs_80614 = {}
    # Getting the type of 'dl' (line 1290)
    dl_80612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1290, 21), 'dl', False)
    # Obtaining the member 'strip' of a type (line 1290)
    strip_80613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1290, 21), dl_80612, 'strip')
    # Calling strip(args, kwargs) (line 1290)
    strip_call_result_80615 = invoke(stypy.reporting.localization.Localization(__file__, 1290, 21), strip_80613, *[], **kwargs_80614)
    
    # Assigning a type to the variable 'dl' (line 1290)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1290, 16), 'dl', strip_call_result_80615)
    
    
    # Call to startswith(...): (line 1291)
    # Processing the call arguments (line 1291)
    str_80618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1291, 33), 'str', ',')
    # Processing the call keyword arguments (line 1291)
    kwargs_80619 = {}
    # Getting the type of 'dl' (line 1291)
    dl_80616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1291, 19), 'dl', False)
    # Obtaining the member 'startswith' of a type (line 1291)
    startswith_80617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1291, 19), dl_80616, 'startswith')
    # Calling startswith(args, kwargs) (line 1291)
    startswith_call_result_80620 = invoke(stypy.reporting.localization.Localization(__file__, 1291, 19), startswith_80617, *[str_80618], **kwargs_80619)
    
    # Testing the type of an if condition (line 1291)
    if_condition_80621 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1291, 16), startswith_call_result_80620)
    # Assigning a type to the variable 'if_condition_80621' (line 1291)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1291, 16), 'if_condition_80621', if_condition_80621)
    # SSA begins for if statement (line 1291)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1292):
    
    # Assigning a Call to a Name (line 1292):
    
    # Call to strip(...): (line 1292)
    # Processing the call keyword arguments (line 1292)
    kwargs_80628 = {}
    
    # Obtaining the type of the subscript
    int_80622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1292, 28), 'int')
    slice_80623 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1292, 25), int_80622, None, None)
    # Getting the type of 'dl' (line 1292)
    dl_80624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1292, 25), 'dl', False)
    # Obtaining the member '__getitem__' of a type (line 1292)
    getitem___80625 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1292, 25), dl_80624, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1292)
    subscript_call_result_80626 = invoke(stypy.reporting.localization.Localization(__file__, 1292, 25), getitem___80625, slice_80623)
    
    # Obtaining the member 'strip' of a type (line 1292)
    strip_80627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1292, 25), subscript_call_result_80626, 'strip')
    # Calling strip(args, kwargs) (line 1292)
    strip_call_result_80629 = invoke(stypy.reporting.localization.Localization(__file__, 1292, 25), strip_80627, *[], **kwargs_80628)
    
    # Assigning a type to the variable 'dl' (line 1292)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1292, 20), 'dl', strip_call_result_80629)
    # SSA join for if statement (line 1291)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 1293)
    # Processing the call arguments (line 1293)
    
    # Obtaining an instance of the builtin type 'list' (line 1293)
    list_80632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1293, 26), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1293)
    # Adding element type (line 1293)
    # Getting the type of 'dl' (line 1293)
    dl_80633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 27), 'dl', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1293, 26), list_80632, dl_80633)
    # Adding element type (line 1293)
    # Getting the type of 'il' (line 1293)
    il_80634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 31), 'il', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1293, 26), list_80632, il_80634)
    
    # Processing the call keyword arguments (line 1293)
    kwargs_80635 = {}
    # Getting the type of 'll' (line 1293)
    ll_80630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 16), 'll', False)
    # Obtaining the member 'append' of a type (line 1293)
    append_80631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1293, 16), ll_80630, 'append')
    # Calling append(args, kwargs) (line 1293)
    append_call_result_80636 = invoke(stypy.reporting.localization.Localization(__file__, 1293, 16), append_80631, *[list_80632], **kwargs_80635)
    
    
    # Assigning a Name to a Name (line 1294):
    
    # Assigning a Name to a Name (line 1294):
    # Getting the type of 'c' (line 1294)
    c_80637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1294, 21), 'c')
    # Assigning a type to the variable 'dl' (line 1294)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1294, 16), 'dl', c_80637)
    
    # Assigning a Str to a Name (line 1295):
    
    # Assigning a Str to a Name (line 1295):
    str_80638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1295, 21), 'str', '')
    # Assigning a type to the variable 'il' (line 1295)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1295, 16), 'il', str_80638)
    
    # Assigning a Num to a Name (line 1296):
    
    # Assigning a Num to a Name (line 1296):
    int_80639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1296, 20), 'int')
    # Assigning a type to the variable 'f' (line 1296)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1296, 16), 'f', int_80639)
    # SSA join for if statement (line 1289)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1287)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1285)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'f' (line 1297)
    f_80640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 11), 'f')
    int_80641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1297, 16), 'int')
    # Applying the binary operator '==' (line 1297)
    result_eq_80642 = python_operator(stypy.reporting.localization.Localization(__file__, 1297, 11), '==', f_80640, int_80641)
    
    # Testing the type of an if condition (line 1297)
    if_condition_80643 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1297, 8), result_eq_80642)
    # Assigning a type to the variable 'if_condition_80643' (line 1297)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1297, 8), 'if_condition_80643', if_condition_80643)
    # SSA begins for if statement (line 1297)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1298):
    
    # Assigning a Call to a Name (line 1298):
    
    # Call to strip(...): (line 1298)
    # Processing the call keyword arguments (line 1298)
    kwargs_80646 = {}
    # Getting the type of 'dl' (line 1298)
    dl_80644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1298, 17), 'dl', False)
    # Obtaining the member 'strip' of a type (line 1298)
    strip_80645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1298, 17), dl_80644, 'strip')
    # Calling strip(args, kwargs) (line 1298)
    strip_call_result_80647 = invoke(stypy.reporting.localization.Localization(__file__, 1298, 17), strip_80645, *[], **kwargs_80646)
    
    # Assigning a type to the variable 'dl' (line 1298)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1298, 12), 'dl', strip_call_result_80647)
    
    
    # Call to startswith(...): (line 1299)
    # Processing the call arguments (line 1299)
    str_80650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1299, 29), 'str', ',')
    # Processing the call keyword arguments (line 1299)
    kwargs_80651 = {}
    # Getting the type of 'dl' (line 1299)
    dl_80648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 15), 'dl', False)
    # Obtaining the member 'startswith' of a type (line 1299)
    startswith_80649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1299, 15), dl_80648, 'startswith')
    # Calling startswith(args, kwargs) (line 1299)
    startswith_call_result_80652 = invoke(stypy.reporting.localization.Localization(__file__, 1299, 15), startswith_80649, *[str_80650], **kwargs_80651)
    
    # Testing the type of an if condition (line 1299)
    if_condition_80653 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1299, 12), startswith_call_result_80652)
    # Assigning a type to the variable 'if_condition_80653' (line 1299)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1299, 12), 'if_condition_80653', if_condition_80653)
    # SSA begins for if statement (line 1299)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1300):
    
    # Assigning a Call to a Name (line 1300):
    
    # Call to strip(...): (line 1300)
    # Processing the call keyword arguments (line 1300)
    kwargs_80660 = {}
    
    # Obtaining the type of the subscript
    int_80654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1300, 24), 'int')
    slice_80655 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1300, 21), int_80654, None, None)
    # Getting the type of 'dl' (line 1300)
    dl_80656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1300, 21), 'dl', False)
    # Obtaining the member '__getitem__' of a type (line 1300)
    getitem___80657 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1300, 21), dl_80656, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1300)
    subscript_call_result_80658 = invoke(stypy.reporting.localization.Localization(__file__, 1300, 21), getitem___80657, slice_80655)
    
    # Obtaining the member 'strip' of a type (line 1300)
    strip_80659 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1300, 21), subscript_call_result_80658, 'strip')
    # Calling strip(args, kwargs) (line 1300)
    strip_call_result_80661 = invoke(stypy.reporting.localization.Localization(__file__, 1300, 21), strip_80659, *[], **kwargs_80660)
    
    # Assigning a type to the variable 'dl' (line 1300)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1300, 16), 'dl', strip_call_result_80661)
    # SSA join for if statement (line 1299)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 1301)
    # Processing the call arguments (line 1301)
    
    # Obtaining an instance of the builtin type 'list' (line 1301)
    list_80664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1301, 22), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1301)
    # Adding element type (line 1301)
    # Getting the type of 'dl' (line 1301)
    dl_80665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1301, 23), 'dl', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1301, 22), list_80664, dl_80665)
    # Adding element type (line 1301)
    # Getting the type of 'il' (line 1301)
    il_80666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1301, 27), 'il', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1301, 22), list_80664, il_80666)
    
    # Processing the call keyword arguments (line 1301)
    kwargs_80667 = {}
    # Getting the type of 'll' (line 1301)
    ll_80662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1301, 12), 'll', False)
    # Obtaining the member 'append' of a type (line 1301)
    append_80663 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1301, 12), ll_80662, 'append')
    # Calling append(args, kwargs) (line 1301)
    append_call_result_80668 = invoke(stypy.reporting.localization.Localization(__file__, 1301, 12), append_80663, *[list_80664], **kwargs_80667)
    
    # SSA join for if statement (line 1297)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Dict to a Name (line 1302):
    
    # Assigning a Dict to a Name (line 1302):
    
    # Obtaining an instance of the builtin type 'dict' (line 1302)
    dict_80669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1302, 15), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1302)
    
    # Assigning a type to the variable 'vars' (line 1302)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1302, 8), 'vars', dict_80669)
    
    
    str_80670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1303, 11), 'str', 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1303)
    groupcounter_80671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1303, 32), 'groupcounter')
    # Getting the type of 'groupcache' (line 1303)
    groupcache_80672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1303, 21), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1303)
    getitem___80673 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1303, 21), groupcache_80672, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1303)
    subscript_call_result_80674 = invoke(stypy.reporting.localization.Localization(__file__, 1303, 21), getitem___80673, groupcounter_80671)
    
    # Applying the binary operator 'in' (line 1303)
    result_contains_80675 = python_operator(stypy.reporting.localization.Localization(__file__, 1303, 11), 'in', str_80670, subscript_call_result_80674)
    
    # Testing the type of an if condition (line 1303)
    if_condition_80676 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1303, 8), result_contains_80675)
    # Assigning a type to the variable 'if_condition_80676' (line 1303)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1303, 8), 'if_condition_80676', if_condition_80676)
    # SSA begins for if statement (line 1303)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1304):
    
    # Assigning a Subscript to a Name (line 1304):
    
    # Obtaining the type of the subscript
    str_80677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1304, 44), 'str', 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1304)
    groupcounter_80678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1304, 30), 'groupcounter')
    # Getting the type of 'groupcache' (line 1304)
    groupcache_80679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1304, 19), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1304)
    getitem___80680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1304, 19), groupcache_80679, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1304)
    subscript_call_result_80681 = invoke(stypy.reporting.localization.Localization(__file__, 1304, 19), getitem___80680, groupcounter_80678)
    
    # Obtaining the member '__getitem__' of a type (line 1304)
    getitem___80682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1304, 19), subscript_call_result_80681, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1304)
    subscript_call_result_80683 = invoke(stypy.reporting.localization.Localization(__file__, 1304, 19), getitem___80682, str_80677)
    
    # Assigning a type to the variable 'vars' (line 1304)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1304, 12), 'vars', subscript_call_result_80683)
    # SSA join for if statement (line 1303)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 1305):
    
    # Assigning a Name to a Name (line 1305):
    # Getting the type of 'None' (line 1305)
    None_80684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 20), 'None')
    # Assigning a type to the variable 'last_name' (line 1305)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1305, 8), 'last_name', None_80684)
    
    # Getting the type of 'll' (line 1306)
    ll_80685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1306, 17), 'll')
    # Testing the type of a for loop iterable (line 1306)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1306, 8), ll_80685)
    # Getting the type of the for loop variable (line 1306)
    for_loop_var_80686 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1306, 8), ll_80685)
    # Assigning a type to the variable 'l' (line 1306)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1306, 8), 'l', for_loop_var_80686)
    # SSA begins for a for statement (line 1306)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a ListComp to a Name (line 1307):
    
    # Assigning a ListComp to a Name (line 1307):
    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 'l' (line 1307)
    l_80691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1307, 36), 'l')
    comprehension_80692 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1307, 17), l_80691)
    # Assigning a type to the variable 'x' (line 1307)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1307, 17), 'x', comprehension_80692)
    
    # Call to strip(...): (line 1307)
    # Processing the call keyword arguments (line 1307)
    kwargs_80689 = {}
    # Getting the type of 'x' (line 1307)
    x_80687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1307, 17), 'x', False)
    # Obtaining the member 'strip' of a type (line 1307)
    strip_80688 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1307, 17), x_80687, 'strip')
    # Calling strip(args, kwargs) (line 1307)
    strip_call_result_80690 = invoke(stypy.reporting.localization.Localization(__file__, 1307, 17), strip_80688, *[], **kwargs_80689)
    
    list_80693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1307, 17), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1307, 17), list_80693, strip_call_result_80690)
    # Assigning a type to the variable 'l' (line 1307)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1307, 12), 'l', list_80693)
    
    
    
    # Obtaining the type of the subscript
    int_80694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1308, 20), 'int')
    
    # Obtaining the type of the subscript
    int_80695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1308, 17), 'int')
    # Getting the type of 'l' (line 1308)
    l_80696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1308, 15), 'l')
    # Obtaining the member '__getitem__' of a type (line 1308)
    getitem___80697 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1308, 15), l_80696, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1308)
    subscript_call_result_80698 = invoke(stypy.reporting.localization.Localization(__file__, 1308, 15), getitem___80697, int_80695)
    
    # Obtaining the member '__getitem__' of a type (line 1308)
    getitem___80699 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1308, 15), subscript_call_result_80698, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1308)
    subscript_call_result_80700 = invoke(stypy.reporting.localization.Localization(__file__, 1308, 15), getitem___80699, int_80694)
    
    str_80701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1308, 26), 'str', ',')
    # Applying the binary operator '==' (line 1308)
    result_eq_80702 = python_operator(stypy.reporting.localization.Localization(__file__, 1308, 15), '==', subscript_call_result_80700, str_80701)
    
    # Testing the type of an if condition (line 1308)
    if_condition_80703 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1308, 12), result_eq_80702)
    # Assigning a type to the variable 'if_condition_80703' (line 1308)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1308, 12), 'if_condition_80703', if_condition_80703)
    # SSA begins for if statement (line 1308)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 1309):
    
    # Assigning a Subscript to a Subscript (line 1309):
    
    # Obtaining the type of the subscript
    int_80704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1309, 28), 'int')
    slice_80705 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1309, 23), int_80704, None, None)
    
    # Obtaining the type of the subscript
    int_80706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1309, 25), 'int')
    # Getting the type of 'l' (line 1309)
    l_80707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1309, 23), 'l')
    # Obtaining the member '__getitem__' of a type (line 1309)
    getitem___80708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1309, 23), l_80707, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1309)
    subscript_call_result_80709 = invoke(stypy.reporting.localization.Localization(__file__, 1309, 23), getitem___80708, int_80706)
    
    # Obtaining the member '__getitem__' of a type (line 1309)
    getitem___80710 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1309, 23), subscript_call_result_80709, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1309)
    subscript_call_result_80711 = invoke(stypy.reporting.localization.Localization(__file__, 1309, 23), getitem___80710, slice_80705)
    
    # Getting the type of 'l' (line 1309)
    l_80712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1309, 16), 'l')
    int_80713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1309, 18), 'int')
    # Storing an element on a container (line 1309)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1309, 16), l_80712, (int_80713, subscript_call_result_80711))
    # SSA join for if statement (line 1308)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    int_80714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1310, 20), 'int')
    
    # Obtaining the type of the subscript
    int_80715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1310, 17), 'int')
    # Getting the type of 'l' (line 1310)
    l_80716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1310, 15), 'l')
    # Obtaining the member '__getitem__' of a type (line 1310)
    getitem___80717 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1310, 15), l_80716, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1310)
    subscript_call_result_80718 = invoke(stypy.reporting.localization.Localization(__file__, 1310, 15), getitem___80717, int_80715)
    
    # Obtaining the member '__getitem__' of a type (line 1310)
    getitem___80719 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1310, 15), subscript_call_result_80718, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1310)
    subscript_call_result_80720 = invoke(stypy.reporting.localization.Localization(__file__, 1310, 15), getitem___80719, int_80714)
    
    str_80721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1310, 26), 'str', '(')
    # Applying the binary operator '==' (line 1310)
    result_eq_80722 = python_operator(stypy.reporting.localization.Localization(__file__, 1310, 15), '==', subscript_call_result_80720, str_80721)
    
    # Testing the type of an if condition (line 1310)
    if_condition_80723 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1310, 12), result_eq_80722)
    # Assigning a type to the variable 'if_condition_80723' (line 1310)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1310, 12), 'if_condition_80723', if_condition_80723)
    # SSA begins for if statement (line 1310)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1311)
    # Processing the call arguments (line 1311)
    str_80725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1312, 20), 'str', 'analyzeline: implied-DO list "%s" is not supported. Skipping.\n')
    
    # Obtaining the type of the subscript
    int_80726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1312, 90), 'int')
    # Getting the type of 'l' (line 1312)
    l_80727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1312, 88), 'l', False)
    # Obtaining the member '__getitem__' of a type (line 1312)
    getitem___80728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1312, 88), l_80727, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1312)
    subscript_call_result_80729 = invoke(stypy.reporting.localization.Localization(__file__, 1312, 88), getitem___80728, int_80726)
    
    # Applying the binary operator '%' (line 1312)
    result_mod_80730 = python_operator(stypy.reporting.localization.Localization(__file__, 1312, 20), '%', str_80725, subscript_call_result_80729)
    
    # Processing the call keyword arguments (line 1311)
    kwargs_80731 = {}
    # Getting the type of 'outmess' (line 1311)
    outmess_80724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 16), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1311)
    outmess_call_result_80732 = invoke(stypy.reporting.localization.Localization(__file__, 1311, 16), outmess_80724, *[result_mod_80730], **kwargs_80731)
    
    # SSA join for if statement (line 1310)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Num to a Name (line 1314):
    
    # Assigning a Num to a Name (line 1314):
    int_80733 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1314, 16), 'int')
    # Assigning a type to the variable 'i' (line 1314)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1314, 12), 'i', int_80733)
    
    # Assigning a Num to a Name (line 1315):
    
    # Assigning a Num to a Name (line 1315):
    int_80734 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1315, 16), 'int')
    # Assigning a type to the variable 'j' (line 1315)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1315, 12), 'j', int_80734)
    
    # Assigning a Call to a Name (line 1316):
    
    # Assigning a Call to a Name (line 1316):
    
    # Call to len(...): (line 1316)
    # Processing the call arguments (line 1316)
    
    # Obtaining the type of the subscript
    int_80736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1316, 25), 'int')
    # Getting the type of 'l' (line 1316)
    l_80737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1316, 23), 'l', False)
    # Obtaining the member '__getitem__' of a type (line 1316)
    getitem___80738 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1316, 23), l_80737, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1316)
    subscript_call_result_80739 = invoke(stypy.reporting.localization.Localization(__file__, 1316, 23), getitem___80738, int_80736)
    
    # Processing the call keyword arguments (line 1316)
    kwargs_80740 = {}
    # Getting the type of 'len' (line 1316)
    len_80735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1316, 19), 'len', False)
    # Calling len(args, kwargs) (line 1316)
    len_call_result_80741 = invoke(stypy.reporting.localization.Localization(__file__, 1316, 19), len_80735, *[subscript_call_result_80739], **kwargs_80740)
    
    # Assigning a type to the variable 'llen' (line 1316)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1316, 12), 'llen', len_call_result_80741)
    
    
    # Call to rmbadname(...): (line 1317)
    # Processing the call arguments (line 1317)
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to split(...): (line 1317)
    # Processing the call arguments (line 1317)
    str_80755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1317, 78), 'str', '@,@')
    # Processing the call keyword arguments (line 1317)
    kwargs_80756 = {}
    
    # Call to markoutercomma(...): (line 1317)
    # Processing the call arguments (line 1317)
    
    # Obtaining the type of the subscript
    int_80748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1317, 68), 'int')
    # Getting the type of 'l' (line 1317)
    l_80749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1317, 66), 'l', False)
    # Obtaining the member '__getitem__' of a type (line 1317)
    getitem___80750 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1317, 66), l_80749, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1317)
    subscript_call_result_80751 = invoke(stypy.reporting.localization.Localization(__file__, 1317, 66), getitem___80750, int_80748)
    
    # Processing the call keyword arguments (line 1317)
    kwargs_80752 = {}
    # Getting the type of 'markoutercomma' (line 1317)
    markoutercomma_80747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1317, 51), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 1317)
    markoutercomma_call_result_80753 = invoke(stypy.reporting.localization.Localization(__file__, 1317, 51), markoutercomma_80747, *[subscript_call_result_80751], **kwargs_80752)
    
    # Obtaining the member 'split' of a type (line 1317)
    split_80754 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1317, 51), markoutercomma_call_result_80753, 'split')
    # Calling split(args, kwargs) (line 1317)
    split_call_result_80757 = invoke(stypy.reporting.localization.Localization(__file__, 1317, 51), split_80754, *[str_80755], **kwargs_80756)
    
    comprehension_80758 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1317, 32), split_call_result_80757)
    # Assigning a type to the variable 'x' (line 1317)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1317, 32), 'x', comprehension_80758)
    
    # Call to strip(...): (line 1317)
    # Processing the call keyword arguments (line 1317)
    kwargs_80745 = {}
    # Getting the type of 'x' (line 1317)
    x_80743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1317, 32), 'x', False)
    # Obtaining the member 'strip' of a type (line 1317)
    strip_80744 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1317, 32), x_80743, 'strip')
    # Calling strip(args, kwargs) (line 1317)
    strip_call_result_80746 = invoke(stypy.reporting.localization.Localization(__file__, 1317, 32), strip_80744, *[], **kwargs_80745)
    
    list_80759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1317, 32), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1317, 32), list_80759, strip_call_result_80746)
    # Processing the call keyword arguments (line 1317)
    kwargs_80760 = {}
    # Getting the type of 'rmbadname' (line 1317)
    rmbadname_80742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1317, 21), 'rmbadname', False)
    # Calling rmbadname(args, kwargs) (line 1317)
    rmbadname_call_result_80761 = invoke(stypy.reporting.localization.Localization(__file__, 1317, 21), rmbadname_80742, *[list_80759], **kwargs_80760)
    
    # Testing the type of a for loop iterable (line 1317)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1317, 12), rmbadname_call_result_80761)
    # Getting the type of the for loop variable (line 1317)
    for_loop_var_80762 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1317, 12), rmbadname_call_result_80761)
    # Assigning a type to the variable 'v' (line 1317)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1317, 12), 'v', for_loop_var_80762)
    # SSA begins for a for statement (line 1317)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Obtaining the type of the subscript
    int_80763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1318, 21), 'int')
    # Getting the type of 'v' (line 1318)
    v_80764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1318, 19), 'v')
    # Obtaining the member '__getitem__' of a type (line 1318)
    getitem___80765 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1318, 19), v_80764, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1318)
    subscript_call_result_80766 = invoke(stypy.reporting.localization.Localization(__file__, 1318, 19), getitem___80765, int_80763)
    
    str_80767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1318, 27), 'str', '(')
    # Applying the binary operator '==' (line 1318)
    result_eq_80768 = python_operator(stypy.reporting.localization.Localization(__file__, 1318, 19), '==', subscript_call_result_80766, str_80767)
    
    # Testing the type of an if condition (line 1318)
    if_condition_80769 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1318, 16), result_eq_80768)
    # Assigning a type to the variable 'if_condition_80769' (line 1318)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1318, 16), 'if_condition_80769', if_condition_80769)
    # SSA begins for if statement (line 1318)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1319)
    # Processing the call arguments (line 1319)
    str_80771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1320, 24), 'str', 'analyzeline: implied-DO list "%s" is not supported. Skipping.\n')
    # Getting the type of 'v' (line 1320)
    v_80772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1320, 92), 'v', False)
    # Applying the binary operator '%' (line 1320)
    result_mod_80773 = python_operator(stypy.reporting.localization.Localization(__file__, 1320, 24), '%', str_80771, v_80772)
    
    # Processing the call keyword arguments (line 1319)
    kwargs_80774 = {}
    # Getting the type of 'outmess' (line 1319)
    outmess_80770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1319, 20), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1319)
    outmess_call_result_80775 = invoke(stypy.reporting.localization.Localization(__file__, 1319, 20), outmess_80770, *[result_mod_80773], **kwargs_80774)
    
    # SSA join for if statement (line 1318)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Num to a Name (line 1325):
    
    # Assigning a Num to a Name (line 1325):
    int_80776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1325, 21), 'int')
    # Assigning a type to the variable 'fc' (line 1325)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1325, 16), 'fc', int_80776)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'i' (line 1326)
    i_80777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1326, 23), 'i')
    # Getting the type of 'llen' (line 1326)
    llen_80778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1326, 27), 'llen')
    # Applying the binary operator '<' (line 1326)
    result_lt_80779 = python_operator(stypy.reporting.localization.Localization(__file__, 1326, 23), '<', i_80777, llen_80778)
    
    
    # Evaluating a boolean operation
    # Getting the type of 'fc' (line 1326)
    fc_80780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1326, 38), 'fc')
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 1326)
    i_80781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1326, 53), 'i')
    
    # Obtaining the type of the subscript
    int_80782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1326, 50), 'int')
    # Getting the type of 'l' (line 1326)
    l_80783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1326, 48), 'l')
    # Obtaining the member '__getitem__' of a type (line 1326)
    getitem___80784 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1326, 48), l_80783, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1326)
    subscript_call_result_80785 = invoke(stypy.reporting.localization.Localization(__file__, 1326, 48), getitem___80784, int_80782)
    
    # Obtaining the member '__getitem__' of a type (line 1326)
    getitem___80786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1326, 48), subscript_call_result_80785, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1326)
    subscript_call_result_80787 = invoke(stypy.reporting.localization.Localization(__file__, 1326, 48), getitem___80786, i_80781)
    
    str_80788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1326, 59), 'str', ',')
    # Applying the binary operator '==' (line 1326)
    result_eq_80789 = python_operator(stypy.reporting.localization.Localization(__file__, 1326, 48), '==', subscript_call_result_80787, str_80788)
    
    # Applying the 'not' unary operator (line 1326)
    result_not__80790 = python_operator(stypy.reporting.localization.Localization(__file__, 1326, 44), 'not', result_eq_80789)
    
    # Applying the binary operator 'or' (line 1326)
    result_or_keyword_80791 = python_operator(stypy.reporting.localization.Localization(__file__, 1326, 38), 'or', fc_80780, result_not__80790)
    
    # Applying the binary operator 'and' (line 1326)
    result_and_keyword_80792 = python_operator(stypy.reporting.localization.Localization(__file__, 1326, 22), 'and', result_lt_80779, result_or_keyword_80791)
    
    # Testing the type of an if condition (line 1326)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1326, 16), result_and_keyword_80792)
    # SSA begins for while statement (line 1326)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 1327)
    i_80793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1327, 28), 'i')
    
    # Obtaining the type of the subscript
    int_80794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1327, 25), 'int')
    # Getting the type of 'l' (line 1327)
    l_80795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1327, 23), 'l')
    # Obtaining the member '__getitem__' of a type (line 1327)
    getitem___80796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1327, 23), l_80795, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1327)
    subscript_call_result_80797 = invoke(stypy.reporting.localization.Localization(__file__, 1327, 23), getitem___80796, int_80794)
    
    # Obtaining the member '__getitem__' of a type (line 1327)
    getitem___80798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1327, 23), subscript_call_result_80797, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1327)
    subscript_call_result_80799 = invoke(stypy.reporting.localization.Localization(__file__, 1327, 23), getitem___80798, i_80793)
    
    str_80800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1327, 34), 'str', "'")
    # Applying the binary operator '==' (line 1327)
    result_eq_80801 = python_operator(stypy.reporting.localization.Localization(__file__, 1327, 23), '==', subscript_call_result_80799, str_80800)
    
    # Testing the type of an if condition (line 1327)
    if_condition_80802 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1327, 20), result_eq_80801)
    # Assigning a type to the variable 'if_condition_80802' (line 1327)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1327, 20), 'if_condition_80802', if_condition_80802)
    # SSA begins for if statement (line 1327)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a UnaryOp to a Name (line 1328):
    
    # Assigning a UnaryOp to a Name (line 1328):
    
    # Getting the type of 'fc' (line 1328)
    fc_80803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1328, 33), 'fc')
    # Applying the 'not' unary operator (line 1328)
    result_not__80804 = python_operator(stypy.reporting.localization.Localization(__file__, 1328, 29), 'not', fc_80803)
    
    # Assigning a type to the variable 'fc' (line 1328)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1328, 24), 'fc', result_not__80804)
    # SSA join for if statement (line 1327)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 1329):
    
    # Assigning a BinOp to a Name (line 1329):
    # Getting the type of 'i' (line 1329)
    i_80805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1329, 24), 'i')
    int_80806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1329, 28), 'int')
    # Applying the binary operator '+' (line 1329)
    result_add_80807 = python_operator(stypy.reporting.localization.Localization(__file__, 1329, 24), '+', i_80805, int_80806)
    
    # Assigning a type to the variable 'i' (line 1329)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1329, 20), 'i', result_add_80807)
    # SSA join for while statement (line 1326)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 1330):
    
    # Assigning a BinOp to a Name (line 1330):
    # Getting the type of 'i' (line 1330)
    i_80808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1330, 20), 'i')
    int_80809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1330, 24), 'int')
    # Applying the binary operator '+' (line 1330)
    result_add_80810 = python_operator(stypy.reporting.localization.Localization(__file__, 1330, 20), '+', i_80808, int_80809)
    
    # Assigning a type to the variable 'i' (line 1330)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1330, 16), 'i', result_add_80810)
    
    
    # Getting the type of 'v' (line 1331)
    v_80811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1331, 19), 'v')
    # Getting the type of 'vars' (line 1331)
    vars_80812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1331, 28), 'vars')
    # Applying the binary operator 'notin' (line 1331)
    result_contains_80813 = python_operator(stypy.reporting.localization.Localization(__file__, 1331, 19), 'notin', v_80811, vars_80812)
    
    # Testing the type of an if condition (line 1331)
    if_condition_80814 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1331, 16), result_contains_80813)
    # Assigning a type to the variable 'if_condition_80814' (line 1331)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1331, 16), 'if_condition_80814', if_condition_80814)
    # SSA begins for if statement (line 1331)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Dict to a Subscript (line 1332):
    
    # Assigning a Dict to a Subscript (line 1332):
    
    # Obtaining an instance of the builtin type 'dict' (line 1332)
    dict_80815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1332, 30), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1332)
    
    # Getting the type of 'vars' (line 1332)
    vars_80816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 20), 'vars')
    # Getting the type of 'v' (line 1332)
    v_80817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 25), 'v')
    # Storing an element on a container (line 1332)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1332, 20), vars_80816, (v_80817, dict_80815))
    # SSA join for if statement (line 1331)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    str_80818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1333, 19), 'str', '=')
    
    # Obtaining the type of the subscript
    # Getting the type of 'v' (line 1333)
    v_80819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1333, 31), 'v')
    # Getting the type of 'vars' (line 1333)
    vars_80820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1333, 26), 'vars')
    # Obtaining the member '__getitem__' of a type (line 1333)
    getitem___80821 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1333, 26), vars_80820, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1333)
    subscript_call_result_80822 = invoke(stypy.reporting.localization.Localization(__file__, 1333, 26), getitem___80821, v_80819)
    
    # Applying the binary operator 'in' (line 1333)
    result_contains_80823 = python_operator(stypy.reporting.localization.Localization(__file__, 1333, 19), 'in', str_80818, subscript_call_result_80822)
    
    
    
    
    # Obtaining the type of the subscript
    str_80824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1333, 50), 'str', '=')
    
    # Obtaining the type of the subscript
    # Getting the type of 'v' (line 1333)
    v_80825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1333, 47), 'v')
    # Getting the type of 'vars' (line 1333)
    vars_80826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1333, 42), 'vars')
    # Obtaining the member '__getitem__' of a type (line 1333)
    getitem___80827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1333, 42), vars_80826, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1333)
    subscript_call_result_80828 = invoke(stypy.reporting.localization.Localization(__file__, 1333, 42), getitem___80827, v_80825)
    
    # Obtaining the member '__getitem__' of a type (line 1333)
    getitem___80829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1333, 42), subscript_call_result_80828, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1333)
    subscript_call_result_80830 = invoke(stypy.reporting.localization.Localization(__file__, 1333, 42), getitem___80829, str_80824)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'j' (line 1333)
    j_80831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1333, 63), 'j')
    # Getting the type of 'i' (line 1333)
    i_80832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1333, 65), 'i')
    int_80833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1333, 69), 'int')
    # Applying the binary operator '-' (line 1333)
    result_sub_80834 = python_operator(stypy.reporting.localization.Localization(__file__, 1333, 65), '-', i_80832, int_80833)
    
    slice_80835 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1333, 58), j_80831, result_sub_80834, None)
    
    # Obtaining the type of the subscript
    int_80836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1333, 60), 'int')
    # Getting the type of 'l' (line 1333)
    l_80837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1333, 58), 'l')
    # Obtaining the member '__getitem__' of a type (line 1333)
    getitem___80838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1333, 58), l_80837, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1333)
    subscript_call_result_80839 = invoke(stypy.reporting.localization.Localization(__file__, 1333, 58), getitem___80838, int_80836)
    
    # Obtaining the member '__getitem__' of a type (line 1333)
    getitem___80840 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1333, 58), subscript_call_result_80839, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1333)
    subscript_call_result_80841 = invoke(stypy.reporting.localization.Localization(__file__, 1333, 58), getitem___80840, slice_80835)
    
    # Applying the binary operator '==' (line 1333)
    result_eq_80842 = python_operator(stypy.reporting.localization.Localization(__file__, 1333, 42), '==', subscript_call_result_80830, subscript_call_result_80841)
    
    # Applying the 'not' unary operator (line 1333)
    result_not__80843 = python_operator(stypy.reporting.localization.Localization(__file__, 1333, 38), 'not', result_eq_80842)
    
    # Applying the binary operator 'and' (line 1333)
    result_and_keyword_80844 = python_operator(stypy.reporting.localization.Localization(__file__, 1333, 19), 'and', result_contains_80823, result_not__80843)
    
    # Testing the type of an if condition (line 1333)
    if_condition_80845 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1333, 16), result_and_keyword_80844)
    # Assigning a type to the variable 'if_condition_80845' (line 1333)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1333, 16), 'if_condition_80845', if_condition_80845)
    # SSA begins for if statement (line 1333)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1334)
    # Processing the call arguments (line 1334)
    str_80847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1334, 28), 'str', 'analyzeline: changing init expression of "%s" ("%s") to "%s"\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1335)
    tuple_80848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1335, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1335)
    # Adding element type (line 1335)
    # Getting the type of 'v' (line 1335)
    v_80849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1335, 24), 'v', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1335, 24), tuple_80848, v_80849)
    # Adding element type (line 1335)
    
    # Obtaining the type of the subscript
    str_80850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1335, 35), 'str', '=')
    
    # Obtaining the type of the subscript
    # Getting the type of 'v' (line 1335)
    v_80851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1335, 32), 'v', False)
    # Getting the type of 'vars' (line 1335)
    vars_80852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1335, 27), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 1335)
    getitem___80853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1335, 27), vars_80852, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1335)
    subscript_call_result_80854 = invoke(stypy.reporting.localization.Localization(__file__, 1335, 27), getitem___80853, v_80851)
    
    # Obtaining the member '__getitem__' of a type (line 1335)
    getitem___80855 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1335, 27), subscript_call_result_80854, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1335)
    subscript_call_result_80856 = invoke(stypy.reporting.localization.Localization(__file__, 1335, 27), getitem___80855, str_80850)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1335, 24), tuple_80848, subscript_call_result_80856)
    # Adding element type (line 1335)
    
    # Obtaining the type of the subscript
    # Getting the type of 'j' (line 1335)
    j_80857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1335, 46), 'j', False)
    # Getting the type of 'i' (line 1335)
    i_80858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1335, 48), 'i', False)
    int_80859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1335, 52), 'int')
    # Applying the binary operator '-' (line 1335)
    result_sub_80860 = python_operator(stypy.reporting.localization.Localization(__file__, 1335, 48), '-', i_80858, int_80859)
    
    slice_80861 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1335, 41), j_80857, result_sub_80860, None)
    
    # Obtaining the type of the subscript
    int_80862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1335, 43), 'int')
    # Getting the type of 'l' (line 1335)
    l_80863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1335, 41), 'l', False)
    # Obtaining the member '__getitem__' of a type (line 1335)
    getitem___80864 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1335, 41), l_80863, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1335)
    subscript_call_result_80865 = invoke(stypy.reporting.localization.Localization(__file__, 1335, 41), getitem___80864, int_80862)
    
    # Obtaining the member '__getitem__' of a type (line 1335)
    getitem___80866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1335, 41), subscript_call_result_80865, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1335)
    subscript_call_result_80867 = invoke(stypy.reporting.localization.Localization(__file__, 1335, 41), getitem___80866, slice_80861)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1335, 24), tuple_80848, subscript_call_result_80867)
    
    # Applying the binary operator '%' (line 1334)
    result_mod_80868 = python_operator(stypy.reporting.localization.Localization(__file__, 1334, 28), '%', str_80847, tuple_80848)
    
    # Processing the call keyword arguments (line 1334)
    kwargs_80869 = {}
    # Getting the type of 'outmess' (line 1334)
    outmess_80846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1334, 20), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1334)
    outmess_call_result_80870 = invoke(stypy.reporting.localization.Localization(__file__, 1334, 20), outmess_80846, *[result_mod_80868], **kwargs_80869)
    
    # SSA join for if statement (line 1333)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Subscript (line 1336):
    
    # Assigning a Subscript to a Subscript (line 1336):
    
    # Obtaining the type of the subscript
    # Getting the type of 'j' (line 1336)
    j_80871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1336, 36), 'j')
    # Getting the type of 'i' (line 1336)
    i_80872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1336, 38), 'i')
    int_80873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1336, 42), 'int')
    # Applying the binary operator '-' (line 1336)
    result_sub_80874 = python_operator(stypy.reporting.localization.Localization(__file__, 1336, 38), '-', i_80872, int_80873)
    
    slice_80875 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1336, 31), j_80871, result_sub_80874, None)
    
    # Obtaining the type of the subscript
    int_80876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1336, 33), 'int')
    # Getting the type of 'l' (line 1336)
    l_80877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1336, 31), 'l')
    # Obtaining the member '__getitem__' of a type (line 1336)
    getitem___80878 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1336, 31), l_80877, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1336)
    subscript_call_result_80879 = invoke(stypy.reporting.localization.Localization(__file__, 1336, 31), getitem___80878, int_80876)
    
    # Obtaining the member '__getitem__' of a type (line 1336)
    getitem___80880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1336, 31), subscript_call_result_80879, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1336)
    subscript_call_result_80881 = invoke(stypy.reporting.localization.Localization(__file__, 1336, 31), getitem___80880, slice_80875)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'v' (line 1336)
    v_80882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1336, 21), 'v')
    # Getting the type of 'vars' (line 1336)
    vars_80883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1336, 16), 'vars')
    # Obtaining the member '__getitem__' of a type (line 1336)
    getitem___80884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1336, 16), vars_80883, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1336)
    subscript_call_result_80885 = invoke(stypy.reporting.localization.Localization(__file__, 1336, 16), getitem___80884, v_80882)
    
    str_80886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1336, 24), 'str', '=')
    # Storing an element on a container (line 1336)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1336, 16), subscript_call_result_80885, (str_80886, subscript_call_result_80881))
    
    # Assigning a Name to a Name (line 1337):
    
    # Assigning a Name to a Name (line 1337):
    # Getting the type of 'i' (line 1337)
    i_80887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1337, 20), 'i')
    # Assigning a type to the variable 'j' (line 1337)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1337, 16), 'j', i_80887)
    
    # Assigning a Name to a Name (line 1338):
    
    # Assigning a Name to a Name (line 1338):
    # Getting the type of 'v' (line 1338)
    v_80888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1338, 28), 'v')
    # Assigning a type to the variable 'last_name' (line 1338)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1338, 16), 'last_name', v_80888)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 1339):
    
    # Assigning a Name to a Subscript (line 1339):
    # Getting the type of 'vars' (line 1339)
    vars_80889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1339, 43), 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1339)
    groupcounter_80890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1339, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 1339)
    groupcache_80891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1339, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1339)
    getitem___80892 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1339, 8), groupcache_80891, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1339)
    subscript_call_result_80893 = invoke(stypy.reporting.localization.Localization(__file__, 1339, 8), getitem___80892, groupcounter_80890)
    
    str_80894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1339, 33), 'str', 'vars')
    # Storing an element on a container (line 1339)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1339, 8), subscript_call_result_80893, (str_80894, vars_80889))
    
    # Type idiom detected: calculating its left and rigth part (line 1340)
    # Getting the type of 'last_name' (line 1340)
    last_name_80895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1340, 8), 'last_name')
    # Getting the type of 'None' (line 1340)
    None_80896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1340, 28), 'None')
    
    (may_be_80897, more_types_in_union_80898) = may_not_be_none(last_name_80895, None_80896)

    if may_be_80897:

        if more_types_in_union_80898:
            # Runtime conditional SSA (line 1340)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Tuple to a Name (line 1341):
        
        # Assigning a Tuple to a Name (line 1341):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1341)
        tuple_80899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1341, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1341)
        # Adding element type (line 1341)
        str_80900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1341, 32), 'str', 'variable')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1341, 32), tuple_80899, str_80900)
        # Adding element type (line 1341)
        # Getting the type of 'last_name' (line 1341)
        last_name_80901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1341, 44), 'last_name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1341, 32), tuple_80899, last_name_80901)
        # Adding element type (line 1341)
        # Getting the type of 'groupcounter' (line 1341)
        groupcounter_80902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1341, 55), 'groupcounter')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1341, 32), tuple_80899, groupcounter_80902)
        
        # Assigning a type to the variable 'previous_context' (line 1341)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1341, 12), 'previous_context', tuple_80899)

        if more_types_in_union_80898:
            # SSA join for if statement (line 1340)
            module_type_store = module_type_store.join_ssa_context()


    
    # SSA branch for the else part of an if statement (line 1267)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'case' (line 1342)
    case_80903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1342, 9), 'case')
    str_80904 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1342, 17), 'str', 'common')
    # Applying the binary operator '==' (line 1342)
    result_eq_80905 = python_operator(stypy.reporting.localization.Localization(__file__, 1342, 9), '==', case_80903, str_80904)
    
    # Testing the type of an if condition (line 1342)
    if_condition_80906 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1342, 9), result_eq_80905)
    # Assigning a type to the variable 'if_condition_80906' (line 1342)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1342, 9), 'if_condition_80906', if_condition_80906)
    # SSA begins for if statement (line 1342)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1343):
    
    # Assigning a Call to a Name (line 1343):
    
    # Call to strip(...): (line 1343)
    # Processing the call keyword arguments (line 1343)
    kwargs_80913 = {}
    
    # Call to group(...): (line 1343)
    # Processing the call arguments (line 1343)
    str_80909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1343, 23), 'str', 'after')
    # Processing the call keyword arguments (line 1343)
    kwargs_80910 = {}
    # Getting the type of 'm' (line 1343)
    m_80907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1343, 15), 'm', False)
    # Obtaining the member 'group' of a type (line 1343)
    group_80908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1343, 15), m_80907, 'group')
    # Calling group(args, kwargs) (line 1343)
    group_call_result_80911 = invoke(stypy.reporting.localization.Localization(__file__, 1343, 15), group_80908, *[str_80909], **kwargs_80910)
    
    # Obtaining the member 'strip' of a type (line 1343)
    strip_80912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1343, 15), group_call_result_80911, 'strip')
    # Calling strip(args, kwargs) (line 1343)
    strip_call_result_80914 = invoke(stypy.reporting.localization.Localization(__file__, 1343, 15), strip_80912, *[], **kwargs_80913)
    
    # Assigning a type to the variable 'line' (line 1343)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1343, 8), 'line', strip_call_result_80914)
    
    
    
    
    # Obtaining the type of the subscript
    int_80915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 20), 'int')
    # Getting the type of 'line' (line 1344)
    line_80916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 15), 'line')
    # Obtaining the member '__getitem__' of a type (line 1344)
    getitem___80917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1344, 15), line_80916, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1344)
    subscript_call_result_80918 = invoke(stypy.reporting.localization.Localization(__file__, 1344, 15), getitem___80917, int_80915)
    
    str_80919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 26), 'str', '/')
    # Applying the binary operator '==' (line 1344)
    result_eq_80920 = python_operator(stypy.reporting.localization.Localization(__file__, 1344, 15), '==', subscript_call_result_80918, str_80919)
    
    # Applying the 'not' unary operator (line 1344)
    result_not__80921 = python_operator(stypy.reporting.localization.Localization(__file__, 1344, 11), 'not', result_eq_80920)
    
    # Testing the type of an if condition (line 1344)
    if_condition_80922 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1344, 8), result_not__80921)
    # Assigning a type to the variable 'if_condition_80922' (line 1344)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1344, 8), 'if_condition_80922', if_condition_80922)
    # SSA begins for if statement (line 1344)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1345):
    
    # Assigning a BinOp to a Name (line 1345):
    str_80923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1345, 19), 'str', '//')
    # Getting the type of 'line' (line 1345)
    line_80924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 26), 'line')
    # Applying the binary operator '+' (line 1345)
    result_add_80925 = python_operator(stypy.reporting.localization.Localization(__file__, 1345, 19), '+', str_80923, line_80924)
    
    # Assigning a type to the variable 'line' (line 1345)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1345, 12), 'line', result_add_80925)
    # SSA join for if statement (line 1344)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a List to a Name (line 1346):
    
    # Assigning a List to a Name (line 1346):
    
    # Obtaining an instance of the builtin type 'list' (line 1346)
    list_80926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1346, 13), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1346)
    
    # Assigning a type to the variable 'cl' (line 1346)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1346, 8), 'cl', list_80926)
    
    # Assigning a Num to a Name (line 1347):
    
    # Assigning a Num to a Name (line 1347):
    int_80927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1347, 12), 'int')
    # Assigning a type to the variable 'f' (line 1347)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1347, 8), 'f', int_80927)
    
    # Assigning a Str to a Name (line 1348):
    
    # Assigning a Str to a Name (line 1348):
    str_80928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1348, 13), 'str', '')
    # Assigning a type to the variable 'bn' (line 1348)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1348, 8), 'bn', str_80928)
    
    # Assigning a Str to a Name (line 1349):
    
    # Assigning a Str to a Name (line 1349):
    str_80929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1349, 13), 'str', '')
    # Assigning a type to the variable 'ol' (line 1349)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1349, 8), 'ol', str_80929)
    
    # Getting the type of 'line' (line 1350)
    line_80930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 17), 'line')
    # Testing the type of a for loop iterable (line 1350)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1350, 8), line_80930)
    # Getting the type of the for loop variable (line 1350)
    for_loop_var_80931 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1350, 8), line_80930)
    # Assigning a type to the variable 'c' (line 1350)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1350, 8), 'c', for_loop_var_80931)
    # SSA begins for a for statement (line 1350)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'c' (line 1351)
    c_80932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1351, 15), 'c')
    str_80933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1351, 20), 'str', '/')
    # Applying the binary operator '==' (line 1351)
    result_eq_80934 = python_operator(stypy.reporting.localization.Localization(__file__, 1351, 15), '==', c_80932, str_80933)
    
    # Testing the type of an if condition (line 1351)
    if_condition_80935 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1351, 12), result_eq_80934)
    # Assigning a type to the variable 'if_condition_80935' (line 1351)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1351, 12), 'if_condition_80935', if_condition_80935)
    # SSA begins for if statement (line 1351)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1352):
    
    # Assigning a BinOp to a Name (line 1352):
    # Getting the type of 'f' (line 1352)
    f_80936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1352, 20), 'f')
    int_80937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1352, 24), 'int')
    # Applying the binary operator '+' (line 1352)
    result_add_80938 = python_operator(stypy.reporting.localization.Localization(__file__, 1352, 20), '+', f_80936, int_80937)
    
    # Assigning a type to the variable 'f' (line 1352)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1352, 16), 'f', result_add_80938)
    # SSA join for if statement (line 1351)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'f' (line 1354)
    f_80939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1354, 15), 'f')
    int_80940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1354, 20), 'int')
    # Applying the binary operator '>=' (line 1354)
    result_ge_80941 = python_operator(stypy.reporting.localization.Localization(__file__, 1354, 15), '>=', f_80939, int_80940)
    
    # Testing the type of an if condition (line 1354)
    if_condition_80942 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1354, 12), result_ge_80941)
    # Assigning a type to the variable 'if_condition_80942' (line 1354)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1354, 12), 'if_condition_80942', if_condition_80942)
    # SSA begins for if statement (line 1354)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1355):
    
    # Assigning a Call to a Name (line 1355):
    
    # Call to strip(...): (line 1355)
    # Processing the call keyword arguments (line 1355)
    kwargs_80945 = {}
    # Getting the type of 'bn' (line 1355)
    bn_80943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1355, 21), 'bn', False)
    # Obtaining the member 'strip' of a type (line 1355)
    strip_80944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1355, 21), bn_80943, 'strip')
    # Calling strip(args, kwargs) (line 1355)
    strip_call_result_80946 = invoke(stypy.reporting.localization.Localization(__file__, 1355, 21), strip_80944, *[], **kwargs_80945)
    
    # Assigning a type to the variable 'bn' (line 1355)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1355, 16), 'bn', strip_call_result_80946)
    
    
    # Getting the type of 'bn' (line 1356)
    bn_80947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1356, 23), 'bn')
    # Applying the 'not' unary operator (line 1356)
    result_not__80948 = python_operator(stypy.reporting.localization.Localization(__file__, 1356, 19), 'not', bn_80947)
    
    # Testing the type of an if condition (line 1356)
    if_condition_80949 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1356, 16), result_not__80948)
    # Assigning a type to the variable 'if_condition_80949' (line 1356)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1356, 16), 'if_condition_80949', if_condition_80949)
    # SSA begins for if statement (line 1356)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 1357):
    
    # Assigning a Str to a Name (line 1357):
    str_80950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1357, 25), 'str', '_BLNK_')
    # Assigning a type to the variable 'bn' (line 1357)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1357, 20), 'bn', str_80950)
    # SSA join for if statement (line 1356)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 1358)
    # Processing the call arguments (line 1358)
    
    # Obtaining an instance of the builtin type 'list' (line 1358)
    list_80953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1358, 26), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1358)
    # Adding element type (line 1358)
    # Getting the type of 'bn' (line 1358)
    bn_80954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1358, 27), 'bn', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1358, 26), list_80953, bn_80954)
    # Adding element type (line 1358)
    # Getting the type of 'ol' (line 1358)
    ol_80955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1358, 31), 'ol', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1358, 26), list_80953, ol_80955)
    
    # Processing the call keyword arguments (line 1358)
    kwargs_80956 = {}
    # Getting the type of 'cl' (line 1358)
    cl_80951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1358, 16), 'cl', False)
    # Obtaining the member 'append' of a type (line 1358)
    append_80952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1358, 16), cl_80951, 'append')
    # Calling append(args, kwargs) (line 1358)
    append_call_result_80957 = invoke(stypy.reporting.localization.Localization(__file__, 1358, 16), append_80952, *[list_80953], **kwargs_80956)
    
    
    # Assigning a BinOp to a Name (line 1359):
    
    # Assigning a BinOp to a Name (line 1359):
    # Getting the type of 'f' (line 1359)
    f_80958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1359, 20), 'f')
    int_80959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1359, 24), 'int')
    # Applying the binary operator '-' (line 1359)
    result_sub_80960 = python_operator(stypy.reporting.localization.Localization(__file__, 1359, 20), '-', f_80958, int_80959)
    
    # Assigning a type to the variable 'f' (line 1359)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1359, 16), 'f', result_sub_80960)
    
    # Assigning a Str to a Name (line 1360):
    
    # Assigning a Str to a Name (line 1360):
    str_80961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1360, 21), 'str', '')
    # Assigning a type to the variable 'bn' (line 1360)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1360, 16), 'bn', str_80961)
    
    # Assigning a Str to a Name (line 1361):
    
    # Assigning a Str to a Name (line 1361):
    str_80962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1361, 21), 'str', '')
    # Assigning a type to the variable 'ol' (line 1361)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1361, 16), 'ol', str_80962)
    # SSA join for if statement (line 1354)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'f' (line 1362)
    f_80963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1362, 15), 'f')
    int_80964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1362, 19), 'int')
    # Applying the binary operator '%' (line 1362)
    result_mod_80965 = python_operator(stypy.reporting.localization.Localization(__file__, 1362, 15), '%', f_80963, int_80964)
    
    # Testing the type of an if condition (line 1362)
    if_condition_80966 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1362, 12), result_mod_80965)
    # Assigning a type to the variable 'if_condition_80966' (line 1362)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1362, 12), 'if_condition_80966', if_condition_80966)
    # SSA begins for if statement (line 1362)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1363):
    
    # Assigning a BinOp to a Name (line 1363):
    # Getting the type of 'bn' (line 1363)
    bn_80967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1363, 21), 'bn')
    # Getting the type of 'c' (line 1363)
    c_80968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1363, 26), 'c')
    # Applying the binary operator '+' (line 1363)
    result_add_80969 = python_operator(stypy.reporting.localization.Localization(__file__, 1363, 21), '+', bn_80967, c_80968)
    
    # Assigning a type to the variable 'bn' (line 1363)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1363, 16), 'bn', result_add_80969)
    # SSA branch for the else part of an if statement (line 1362)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 1365):
    
    # Assigning a BinOp to a Name (line 1365):
    # Getting the type of 'ol' (line 1365)
    ol_80970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1365, 21), 'ol')
    # Getting the type of 'c' (line 1365)
    c_80971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1365, 26), 'c')
    # Applying the binary operator '+' (line 1365)
    result_add_80972 = python_operator(stypy.reporting.localization.Localization(__file__, 1365, 21), '+', ol_80970, c_80971)
    
    # Assigning a type to the variable 'ol' (line 1365)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1365, 16), 'ol', result_add_80972)
    # SSA join for if statement (line 1362)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1366):
    
    # Assigning a Call to a Name (line 1366):
    
    # Call to strip(...): (line 1366)
    # Processing the call keyword arguments (line 1366)
    kwargs_80975 = {}
    # Getting the type of 'bn' (line 1366)
    bn_80973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1366, 13), 'bn', False)
    # Obtaining the member 'strip' of a type (line 1366)
    strip_80974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1366, 13), bn_80973, 'strip')
    # Calling strip(args, kwargs) (line 1366)
    strip_call_result_80976 = invoke(stypy.reporting.localization.Localization(__file__, 1366, 13), strip_80974, *[], **kwargs_80975)
    
    # Assigning a type to the variable 'bn' (line 1366)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1366, 8), 'bn', strip_call_result_80976)
    
    
    # Getting the type of 'bn' (line 1367)
    bn_80977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1367, 15), 'bn')
    # Applying the 'not' unary operator (line 1367)
    result_not__80978 = python_operator(stypy.reporting.localization.Localization(__file__, 1367, 11), 'not', bn_80977)
    
    # Testing the type of an if condition (line 1367)
    if_condition_80979 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1367, 8), result_not__80978)
    # Assigning a type to the variable 'if_condition_80979' (line 1367)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1367, 8), 'if_condition_80979', if_condition_80979)
    # SSA begins for if statement (line 1367)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 1368):
    
    # Assigning a Str to a Name (line 1368):
    str_80980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1368, 17), 'str', '_BLNK_')
    # Assigning a type to the variable 'bn' (line 1368)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1368, 12), 'bn', str_80980)
    # SSA join for if statement (line 1367)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 1369)
    # Processing the call arguments (line 1369)
    
    # Obtaining an instance of the builtin type 'list' (line 1369)
    list_80983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1369, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1369)
    # Adding element type (line 1369)
    # Getting the type of 'bn' (line 1369)
    bn_80984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1369, 19), 'bn', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1369, 18), list_80983, bn_80984)
    # Adding element type (line 1369)
    # Getting the type of 'ol' (line 1369)
    ol_80985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1369, 23), 'ol', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1369, 18), list_80983, ol_80985)
    
    # Processing the call keyword arguments (line 1369)
    kwargs_80986 = {}
    # Getting the type of 'cl' (line 1369)
    cl_80981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1369, 8), 'cl', False)
    # Obtaining the member 'append' of a type (line 1369)
    append_80982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1369, 8), cl_80981, 'append')
    # Calling append(args, kwargs) (line 1369)
    append_call_result_80987 = invoke(stypy.reporting.localization.Localization(__file__, 1369, 8), append_80982, *[list_80983], **kwargs_80986)
    
    
    # Assigning a Dict to a Name (line 1370):
    
    # Assigning a Dict to a Name (line 1370):
    
    # Obtaining an instance of the builtin type 'dict' (line 1370)
    dict_80988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 20), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1370)
    
    # Assigning a type to the variable 'commonkey' (line 1370)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'commonkey', dict_80988)
    
    
    str_80989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1371, 11), 'str', 'common')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1371)
    groupcounter_80990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 34), 'groupcounter')
    # Getting the type of 'groupcache' (line 1371)
    groupcache_80991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 23), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1371)
    getitem___80992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1371, 23), groupcache_80991, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1371)
    subscript_call_result_80993 = invoke(stypy.reporting.localization.Localization(__file__, 1371, 23), getitem___80992, groupcounter_80990)
    
    # Applying the binary operator 'in' (line 1371)
    result_contains_80994 = python_operator(stypy.reporting.localization.Localization(__file__, 1371, 11), 'in', str_80989, subscript_call_result_80993)
    
    # Testing the type of an if condition (line 1371)
    if_condition_80995 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1371, 8), result_contains_80994)
    # Assigning a type to the variable 'if_condition_80995' (line 1371)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1371, 8), 'if_condition_80995', if_condition_80995)
    # SSA begins for if statement (line 1371)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1372):
    
    # Assigning a Subscript to a Name (line 1372):
    
    # Obtaining the type of the subscript
    str_80996 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1372, 49), 'str', 'common')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1372)
    groupcounter_80997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 35), 'groupcounter')
    # Getting the type of 'groupcache' (line 1372)
    groupcache_80998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 24), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1372)
    getitem___80999 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1372, 24), groupcache_80998, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1372)
    subscript_call_result_81000 = invoke(stypy.reporting.localization.Localization(__file__, 1372, 24), getitem___80999, groupcounter_80997)
    
    # Obtaining the member '__getitem__' of a type (line 1372)
    getitem___81001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1372, 24), subscript_call_result_81000, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1372)
    subscript_call_result_81002 = invoke(stypy.reporting.localization.Localization(__file__, 1372, 24), getitem___81001, str_80996)
    
    # Assigning a type to the variable 'commonkey' (line 1372)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1372, 12), 'commonkey', subscript_call_result_81002)
    # SSA join for if statement (line 1371)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'cl' (line 1373)
    cl_81003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1373, 17), 'cl')
    # Testing the type of a for loop iterable (line 1373)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1373, 8), cl_81003)
    # Getting the type of the for loop variable (line 1373)
    for_loop_var_81004 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1373, 8), cl_81003)
    # Assigning a type to the variable 'c' (line 1373)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1373, 8), 'c', for_loop_var_81004)
    # SSA begins for a for statement (line 1373)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Obtaining the type of the subscript
    int_81005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1374, 17), 'int')
    # Getting the type of 'c' (line 1374)
    c_81006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1374, 15), 'c')
    # Obtaining the member '__getitem__' of a type (line 1374)
    getitem___81007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1374, 15), c_81006, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1374)
    subscript_call_result_81008 = invoke(stypy.reporting.localization.Localization(__file__, 1374, 15), getitem___81007, int_81005)
    
    # Getting the type of 'commonkey' (line 1374)
    commonkey_81009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1374, 27), 'commonkey')
    # Applying the binary operator 'notin' (line 1374)
    result_contains_81010 = python_operator(stypy.reporting.localization.Localization(__file__, 1374, 15), 'notin', subscript_call_result_81008, commonkey_81009)
    
    # Testing the type of an if condition (line 1374)
    if_condition_81011 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1374, 12), result_contains_81010)
    # Assigning a type to the variable 'if_condition_81011' (line 1374)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1374, 12), 'if_condition_81011', if_condition_81011)
    # SSA begins for if statement (line 1374)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Subscript (line 1375):
    
    # Assigning a List to a Subscript (line 1375):
    
    # Obtaining an instance of the builtin type 'list' (line 1375)
    list_81012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1375, 34), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1375)
    
    # Getting the type of 'commonkey' (line 1375)
    commonkey_81013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1375, 16), 'commonkey')
    
    # Obtaining the type of the subscript
    int_81014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1375, 28), 'int')
    # Getting the type of 'c' (line 1375)
    c_81015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1375, 26), 'c')
    # Obtaining the member '__getitem__' of a type (line 1375)
    getitem___81016 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1375, 26), c_81015, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1375)
    subscript_call_result_81017 = invoke(stypy.reporting.localization.Localization(__file__, 1375, 26), getitem___81016, int_81014)
    
    # Storing an element on a container (line 1375)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1375, 16), commonkey_81013, (subscript_call_result_81017, list_81012))
    # SSA join for if statement (line 1374)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to split(...): (line 1376)
    # Processing the call arguments (line 1376)
    str_81030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1376, 68), 'str', '@,@')
    # Processing the call keyword arguments (line 1376)
    kwargs_81031 = {}
    
    # Call to markoutercomma(...): (line 1376)
    # Processing the call arguments (line 1376)
    
    # Obtaining the type of the subscript
    int_81023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1376, 58), 'int')
    # Getting the type of 'c' (line 1376)
    c_81024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1376, 56), 'c', False)
    # Obtaining the member '__getitem__' of a type (line 1376)
    getitem___81025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1376, 56), c_81024, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1376)
    subscript_call_result_81026 = invoke(stypy.reporting.localization.Localization(__file__, 1376, 56), getitem___81025, int_81023)
    
    # Processing the call keyword arguments (line 1376)
    kwargs_81027 = {}
    # Getting the type of 'markoutercomma' (line 1376)
    markoutercomma_81022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1376, 41), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 1376)
    markoutercomma_call_result_81028 = invoke(stypy.reporting.localization.Localization(__file__, 1376, 41), markoutercomma_81022, *[subscript_call_result_81026], **kwargs_81027)
    
    # Obtaining the member 'split' of a type (line 1376)
    split_81029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1376, 41), markoutercomma_call_result_81028, 'split')
    # Calling split(args, kwargs) (line 1376)
    split_call_result_81032 = invoke(stypy.reporting.localization.Localization(__file__, 1376, 41), split_81029, *[str_81030], **kwargs_81031)
    
    comprehension_81033 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1376, 22), split_call_result_81032)
    # Assigning a type to the variable 'x' (line 1376)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1376, 22), 'x', comprehension_81033)
    
    # Call to strip(...): (line 1376)
    # Processing the call keyword arguments (line 1376)
    kwargs_81020 = {}
    # Getting the type of 'x' (line 1376)
    x_81018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1376, 22), 'x', False)
    # Obtaining the member 'strip' of a type (line 1376)
    strip_81019 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1376, 22), x_81018, 'strip')
    # Calling strip(args, kwargs) (line 1376)
    strip_call_result_81021 = invoke(stypy.reporting.localization.Localization(__file__, 1376, 22), strip_81019, *[], **kwargs_81020)
    
    list_81034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1376, 22), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1376, 22), list_81034, strip_call_result_81021)
    # Testing the type of a for loop iterable (line 1376)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1376, 12), list_81034)
    # Getting the type of the for loop variable (line 1376)
    for_loop_var_81035 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1376, 12), list_81034)
    # Assigning a type to the variable 'i' (line 1376)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1376, 12), 'i', for_loop_var_81035)
    # SSA begins for a for statement (line 1376)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'i' (line 1377)
    i_81036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1377, 19), 'i')
    # Testing the type of an if condition (line 1377)
    if_condition_81037 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1377, 16), i_81036)
    # Assigning a type to the variable 'if_condition_81037' (line 1377)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1377, 16), 'if_condition_81037', if_condition_81037)
    # SSA begins for if statement (line 1377)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1378)
    # Processing the call arguments (line 1378)
    # Getting the type of 'i' (line 1378)
    i_81046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 43), 'i', False)
    # Processing the call keyword arguments (line 1378)
    kwargs_81047 = {}
    
    # Obtaining the type of the subscript
    
    # Obtaining the type of the subscript
    int_81038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1378, 32), 'int')
    # Getting the type of 'c' (line 1378)
    c_81039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 30), 'c', False)
    # Obtaining the member '__getitem__' of a type (line 1378)
    getitem___81040 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1378, 30), c_81039, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1378)
    subscript_call_result_81041 = invoke(stypy.reporting.localization.Localization(__file__, 1378, 30), getitem___81040, int_81038)
    
    # Getting the type of 'commonkey' (line 1378)
    commonkey_81042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 20), 'commonkey', False)
    # Obtaining the member '__getitem__' of a type (line 1378)
    getitem___81043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1378, 20), commonkey_81042, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1378)
    subscript_call_result_81044 = invoke(stypy.reporting.localization.Localization(__file__, 1378, 20), getitem___81043, subscript_call_result_81041)
    
    # Obtaining the member 'append' of a type (line 1378)
    append_81045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1378, 20), subscript_call_result_81044, 'append')
    # Calling append(args, kwargs) (line 1378)
    append_call_result_81048 = invoke(stypy.reporting.localization.Localization(__file__, 1378, 20), append_81045, *[i_81046], **kwargs_81047)
    
    # SSA join for if statement (line 1377)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 1379):
    
    # Assigning a Name to a Subscript (line 1379):
    # Getting the type of 'commonkey' (line 1379)
    commonkey_81049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1379, 45), 'commonkey')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1379)
    groupcounter_81050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1379, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 1379)
    groupcache_81051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1379, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1379)
    getitem___81052 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1379, 8), groupcache_81051, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1379)
    subscript_call_result_81053 = invoke(stypy.reporting.localization.Localization(__file__, 1379, 8), getitem___81052, groupcounter_81050)
    
    str_81054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1379, 33), 'str', 'common')
    # Storing an element on a container (line 1379)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1379, 8), subscript_call_result_81053, (str_81054, commonkey_81049))
    
    # Assigning a Tuple to a Name (line 1380):
    
    # Assigning a Tuple to a Name (line 1380):
    
    # Obtaining an instance of the builtin type 'tuple' (line 1380)
    tuple_81055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1380, 28), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1380)
    # Adding element type (line 1380)
    str_81056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1380, 28), 'str', 'common')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1380, 28), tuple_81055, str_81056)
    # Adding element type (line 1380)
    # Getting the type of 'bn' (line 1380)
    bn_81057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1380, 38), 'bn')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1380, 28), tuple_81055, bn_81057)
    # Adding element type (line 1380)
    # Getting the type of 'groupcounter' (line 1380)
    groupcounter_81058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1380, 42), 'groupcounter')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1380, 28), tuple_81055, groupcounter_81058)
    
    # Assigning a type to the variable 'previous_context' (line 1380)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1380, 8), 'previous_context', tuple_81055)
    # SSA branch for the else part of an if statement (line 1342)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'case' (line 1381)
    case_81059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1381, 9), 'case')
    str_81060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1381, 17), 'str', 'use')
    # Applying the binary operator '==' (line 1381)
    result_eq_81061 = python_operator(stypy.reporting.localization.Localization(__file__, 1381, 9), '==', case_81059, str_81060)
    
    # Testing the type of an if condition (line 1381)
    if_condition_81062 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1381, 9), result_eq_81061)
    # Assigning a type to the variable 'if_condition_81062' (line 1381)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1381, 9), 'if_condition_81062', if_condition_81062)
    # SSA begins for if statement (line 1381)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1382):
    
    # Assigning a Call to a Name (line 1382):
    
    # Call to match(...): (line 1382)
    # Processing the call arguments (line 1382)
    str_81065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1383, 12), 'str', '\\A\\s*(?P<name>\\b[\\w]+\\b)\\s*((,(\\s*\\bonly\\b\\s*:|(?P<notonly>))\\s*(?P<list>.*))|)\\s*\\Z')
    
    # Call to group(...): (line 1383)
    # Processing the call arguments (line 1383)
    str_81068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1383, 109), 'str', 'after')
    # Processing the call keyword arguments (line 1383)
    kwargs_81069 = {}
    # Getting the type of 'm' (line 1383)
    m_81066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1383, 101), 'm', False)
    # Obtaining the member 'group' of a type (line 1383)
    group_81067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1383, 101), m_81066, 'group')
    # Calling group(args, kwargs) (line 1383)
    group_call_result_81070 = invoke(stypy.reporting.localization.Localization(__file__, 1383, 101), group_81067, *[str_81068], **kwargs_81069)
    
    # Getting the type of 're' (line 1383)
    re_81071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1383, 119), 're', False)
    # Obtaining the member 'I' of a type (line 1383)
    I_81072 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1383, 119), re_81071, 'I')
    # Processing the call keyword arguments (line 1382)
    kwargs_81073 = {}
    # Getting the type of 're' (line 1382)
    re_81063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1382, 13), 're', False)
    # Obtaining the member 'match' of a type (line 1382)
    match_81064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1382, 13), re_81063, 'match')
    # Calling match(args, kwargs) (line 1382)
    match_call_result_81074 = invoke(stypy.reporting.localization.Localization(__file__, 1382, 13), match_81064, *[str_81065, group_call_result_81070, I_81072], **kwargs_81073)
    
    # Assigning a type to the variable 'm1' (line 1382)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1382, 8), 'm1', match_call_result_81074)
    
    # Getting the type of 'm1' (line 1384)
    m1_81075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1384, 11), 'm1')
    # Testing the type of an if condition (line 1384)
    if_condition_81076 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1384, 8), m1_81075)
    # Assigning a type to the variable 'if_condition_81076' (line 1384)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1384, 8), 'if_condition_81076', if_condition_81076)
    # SSA begins for if statement (line 1384)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1385):
    
    # Assigning a Call to a Name (line 1385):
    
    # Call to groupdict(...): (line 1385)
    # Processing the call keyword arguments (line 1385)
    kwargs_81079 = {}
    # Getting the type of 'm1' (line 1385)
    m1_81077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1385, 17), 'm1', False)
    # Obtaining the member 'groupdict' of a type (line 1385)
    groupdict_81078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1385, 17), m1_81077, 'groupdict')
    # Calling groupdict(args, kwargs) (line 1385)
    groupdict_call_result_81080 = invoke(stypy.reporting.localization.Localization(__file__, 1385, 17), groupdict_81078, *[], **kwargs_81079)
    
    # Assigning a type to the variable 'mm' (line 1385)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1385, 12), 'mm', groupdict_call_result_81080)
    
    
    str_81081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1386, 15), 'str', 'use')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1386)
    groupcounter_81082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1386, 39), 'groupcounter')
    # Getting the type of 'groupcache' (line 1386)
    groupcache_81083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1386, 28), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1386)
    getitem___81084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1386, 28), groupcache_81083, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1386)
    subscript_call_result_81085 = invoke(stypy.reporting.localization.Localization(__file__, 1386, 28), getitem___81084, groupcounter_81082)
    
    # Applying the binary operator 'notin' (line 1386)
    result_contains_81086 = python_operator(stypy.reporting.localization.Localization(__file__, 1386, 15), 'notin', str_81081, subscript_call_result_81085)
    
    # Testing the type of an if condition (line 1386)
    if_condition_81087 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1386, 12), result_contains_81086)
    # Assigning a type to the variable 'if_condition_81087' (line 1386)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1386, 12), 'if_condition_81087', if_condition_81087)
    # SSA begins for if statement (line 1386)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Dict to a Subscript (line 1387):
    
    # Assigning a Dict to a Subscript (line 1387):
    
    # Obtaining an instance of the builtin type 'dict' (line 1387)
    dict_81088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1387, 50), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1387)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1387)
    groupcounter_81089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1387, 27), 'groupcounter')
    # Getting the type of 'groupcache' (line 1387)
    groupcache_81090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1387, 16), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1387)
    getitem___81091 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1387, 16), groupcache_81090, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1387)
    subscript_call_result_81092 = invoke(stypy.reporting.localization.Localization(__file__, 1387, 16), getitem___81091, groupcounter_81089)
    
    str_81093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1387, 41), 'str', 'use')
    # Storing an element on a container (line 1387)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1387, 16), subscript_call_result_81092, (str_81093, dict_81088))
    # SSA join for if statement (line 1386)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1388):
    
    # Assigning a Call to a Name (line 1388):
    
    # Call to group(...): (line 1388)
    # Processing the call arguments (line 1388)
    str_81096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1388, 28), 'str', 'name')
    # Processing the call keyword arguments (line 1388)
    kwargs_81097 = {}
    # Getting the type of 'm1' (line 1388)
    m1_81094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1388, 19), 'm1', False)
    # Obtaining the member 'group' of a type (line 1388)
    group_81095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1388, 19), m1_81094, 'group')
    # Calling group(args, kwargs) (line 1388)
    group_call_result_81098 = invoke(stypy.reporting.localization.Localization(__file__, 1388, 19), group_81095, *[str_81096], **kwargs_81097)
    
    # Assigning a type to the variable 'name' (line 1388)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1388, 12), 'name', group_call_result_81098)
    
    # Assigning a Dict to a Subscript (line 1389):
    
    # Assigning a Dict to a Subscript (line 1389):
    
    # Obtaining an instance of the builtin type 'dict' (line 1389)
    dict_81099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1389, 52), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1389)
    
    
    # Obtaining the type of the subscript
    str_81100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1389, 37), 'str', 'use')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1389)
    groupcounter_81101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1389, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 1389)
    groupcache_81102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1389, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1389)
    getitem___81103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1389, 12), groupcache_81102, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1389)
    subscript_call_result_81104 = invoke(stypy.reporting.localization.Localization(__file__, 1389, 12), getitem___81103, groupcounter_81101)
    
    # Obtaining the member '__getitem__' of a type (line 1389)
    getitem___81105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1389, 12), subscript_call_result_81104, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1389)
    subscript_call_result_81106 = invoke(stypy.reporting.localization.Localization(__file__, 1389, 12), getitem___81105, str_81100)
    
    # Getting the type of 'name' (line 1389)
    name_81107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1389, 44), 'name')
    # Storing an element on a container (line 1389)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1389, 12), subscript_call_result_81106, (name_81107, dict_81099))
    
    # Assigning a Num to a Name (line 1390):
    
    # Assigning a Num to a Name (line 1390):
    int_81108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1390, 21), 'int')
    # Assigning a type to the variable 'isonly' (line 1390)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1390, 12), 'isonly', int_81108)
    
    
    # Evaluating a boolean operation
    
    str_81109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1391, 15), 'str', 'list')
    # Getting the type of 'mm' (line 1391)
    mm_81110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1391, 25), 'mm')
    # Applying the binary operator 'in' (line 1391)
    result_contains_81111 = python_operator(stypy.reporting.localization.Localization(__file__, 1391, 15), 'in', str_81109, mm_81110)
    
    
    
    # Obtaining the type of the subscript
    str_81112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1391, 35), 'str', 'list')
    # Getting the type of 'mm' (line 1391)
    mm_81113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1391, 32), 'mm')
    # Obtaining the member '__getitem__' of a type (line 1391)
    getitem___81114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1391, 32), mm_81113, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1391)
    subscript_call_result_81115 = invoke(stypy.reporting.localization.Localization(__file__, 1391, 32), getitem___81114, str_81112)
    
    # Getting the type of 'None' (line 1391)
    None_81116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1391, 50), 'None')
    # Applying the binary operator 'isnot' (line 1391)
    result_is_not_81117 = python_operator(stypy.reporting.localization.Localization(__file__, 1391, 32), 'isnot', subscript_call_result_81115, None_81116)
    
    # Applying the binary operator 'and' (line 1391)
    result_and_keyword_81118 = python_operator(stypy.reporting.localization.Localization(__file__, 1391, 15), 'and', result_contains_81111, result_is_not_81117)
    
    # Testing the type of an if condition (line 1391)
    if_condition_81119 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1391, 12), result_and_keyword_81118)
    # Assigning a type to the variable 'if_condition_81119' (line 1391)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1391, 12), 'if_condition_81119', if_condition_81119)
    # SSA begins for if statement (line 1391)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    
    str_81120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1392, 19), 'str', 'notonly')
    # Getting the type of 'mm' (line 1392)
    mm_81121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1392, 32), 'mm')
    # Applying the binary operator 'in' (line 1392)
    result_contains_81122 = python_operator(stypy.reporting.localization.Localization(__file__, 1392, 19), 'in', str_81120, mm_81121)
    
    
    
    # Obtaining the type of the subscript
    str_81123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1392, 42), 'str', 'notonly')
    # Getting the type of 'mm' (line 1392)
    mm_81124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1392, 39), 'mm')
    # Obtaining the member '__getitem__' of a type (line 1392)
    getitem___81125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1392, 39), mm_81124, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1392)
    subscript_call_result_81126 = invoke(stypy.reporting.localization.Localization(__file__, 1392, 39), getitem___81125, str_81123)
    
    # Getting the type of 'None' (line 1392)
    None_81127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1392, 56), 'None')
    # Applying the binary operator 'is' (line 1392)
    result_is__81128 = python_operator(stypy.reporting.localization.Localization(__file__, 1392, 39), 'is', subscript_call_result_81126, None_81127)
    
    # Applying the binary operator 'and' (line 1392)
    result_and_keyword_81129 = python_operator(stypy.reporting.localization.Localization(__file__, 1392, 19), 'and', result_contains_81122, result_is__81128)
    
    # Testing the type of an if condition (line 1392)
    if_condition_81130 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1392, 16), result_and_keyword_81129)
    # Assigning a type to the variable 'if_condition_81130' (line 1392)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1392, 16), 'if_condition_81130', if_condition_81130)
    # SSA begins for if statement (line 1392)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 1393):
    
    # Assigning a Num to a Name (line 1393):
    int_81131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1393, 29), 'int')
    # Assigning a type to the variable 'isonly' (line 1393)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1393, 20), 'isonly', int_81131)
    # SSA join for if statement (line 1392)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 1394):
    
    # Assigning a Name to a Subscript (line 1394):
    # Getting the type of 'isonly' (line 1394)
    isonly_81132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1394, 64), 'isonly')
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 1394)
    name_81133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1394, 48), 'name')
    
    # Obtaining the type of the subscript
    str_81134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1394, 41), 'str', 'use')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1394)
    groupcounter_81135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1394, 27), 'groupcounter')
    # Getting the type of 'groupcache' (line 1394)
    groupcache_81136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1394, 16), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1394)
    getitem___81137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1394, 16), groupcache_81136, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1394)
    subscript_call_result_81138 = invoke(stypy.reporting.localization.Localization(__file__, 1394, 16), getitem___81137, groupcounter_81135)
    
    # Obtaining the member '__getitem__' of a type (line 1394)
    getitem___81139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1394, 16), subscript_call_result_81138, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1394)
    subscript_call_result_81140 = invoke(stypy.reporting.localization.Localization(__file__, 1394, 16), getitem___81139, str_81134)
    
    # Obtaining the member '__getitem__' of a type (line 1394)
    getitem___81141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1394, 16), subscript_call_result_81140, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1394)
    subscript_call_result_81142 = invoke(stypy.reporting.localization.Localization(__file__, 1394, 16), getitem___81141, name_81133)
    
    str_81143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1394, 54), 'str', 'only')
    # Storing an element on a container (line 1394)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1394, 16), subscript_call_result_81142, (str_81143, isonly_81132))
    
    # Assigning a ListComp to a Name (line 1395):
    
    # Assigning a ListComp to a Name (line 1395):
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to split(...): (line 1395)
    # Processing the call arguments (line 1395)
    str_81153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1395, 58), 'str', ',')
    # Processing the call keyword arguments (line 1395)
    kwargs_81154 = {}
    
    # Obtaining the type of the subscript
    str_81148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1395, 44), 'str', 'list')
    # Getting the type of 'mm' (line 1395)
    mm_81149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1395, 41), 'mm', False)
    # Obtaining the member '__getitem__' of a type (line 1395)
    getitem___81150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1395, 41), mm_81149, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1395)
    subscript_call_result_81151 = invoke(stypy.reporting.localization.Localization(__file__, 1395, 41), getitem___81150, str_81148)
    
    # Obtaining the member 'split' of a type (line 1395)
    split_81152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1395, 41), subscript_call_result_81151, 'split')
    # Calling split(args, kwargs) (line 1395)
    split_call_result_81155 = invoke(stypy.reporting.localization.Localization(__file__, 1395, 41), split_81152, *[str_81153], **kwargs_81154)
    
    comprehension_81156 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1395, 22), split_call_result_81155)
    # Assigning a type to the variable 'x' (line 1395)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1395, 22), 'x', comprehension_81156)
    
    # Call to strip(...): (line 1395)
    # Processing the call keyword arguments (line 1395)
    kwargs_81146 = {}
    # Getting the type of 'x' (line 1395)
    x_81144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1395, 22), 'x', False)
    # Obtaining the member 'strip' of a type (line 1395)
    strip_81145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1395, 22), x_81144, 'strip')
    # Calling strip(args, kwargs) (line 1395)
    strip_call_result_81147 = invoke(stypy.reporting.localization.Localization(__file__, 1395, 22), strip_81145, *[], **kwargs_81146)
    
    list_81157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1395, 22), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1395, 22), list_81157, strip_call_result_81147)
    # Assigning a type to the variable 'll' (line 1395)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1395, 16), 'll', list_81157)
    
    # Assigning a Dict to a Name (line 1396):
    
    # Assigning a Dict to a Name (line 1396):
    
    # Obtaining an instance of the builtin type 'dict' (line 1396)
    dict_81158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1396, 21), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1396)
    
    # Assigning a type to the variable 'rl' (line 1396)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1396, 16), 'rl', dict_81158)
    
    # Getting the type of 'll' (line 1397)
    ll_81159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1397, 25), 'll')
    # Testing the type of a for loop iterable (line 1397)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1397, 16), ll_81159)
    # Getting the type of the for loop variable (line 1397)
    for_loop_var_81160 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1397, 16), ll_81159)
    # Assigning a type to the variable 'l' (line 1397)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1397, 16), 'l', for_loop_var_81160)
    # SSA begins for a for statement (line 1397)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    str_81161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1398, 23), 'str', '=')
    # Getting the type of 'l' (line 1398)
    l_81162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1398, 30), 'l')
    # Applying the binary operator 'in' (line 1398)
    result_contains_81163 = python_operator(stypy.reporting.localization.Localization(__file__, 1398, 23), 'in', str_81161, l_81162)
    
    # Testing the type of an if condition (line 1398)
    if_condition_81164 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1398, 20), result_contains_81163)
    # Assigning a type to the variable 'if_condition_81164' (line 1398)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1398, 20), 'if_condition_81164', if_condition_81164)
    # SSA begins for if statement (line 1398)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1399):
    
    # Assigning a Call to a Name (line 1399):
    
    # Call to match(...): (line 1399)
    # Processing the call arguments (line 1399)
    str_81167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1400, 28), 'str', '\\A\\s*(?P<local>\\b[\\w]+\\b)\\s*=\\s*>\\s*(?P<use>\\b[\\w]+\\b)\\s*\\Z')
    # Getting the type of 'l' (line 1400)
    l_81168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1400, 92), 'l', False)
    # Getting the type of 're' (line 1400)
    re_81169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1400, 95), 're', False)
    # Obtaining the member 'I' of a type (line 1400)
    I_81170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1400, 95), re_81169, 'I')
    # Processing the call keyword arguments (line 1399)
    kwargs_81171 = {}
    # Getting the type of 're' (line 1399)
    re_81165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1399, 29), 're', False)
    # Obtaining the member 'match' of a type (line 1399)
    match_81166 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1399, 29), re_81165, 'match')
    # Calling match(args, kwargs) (line 1399)
    match_call_result_81172 = invoke(stypy.reporting.localization.Localization(__file__, 1399, 29), match_81166, *[str_81167, l_81168, I_81170], **kwargs_81171)
    
    # Assigning a type to the variable 'm2' (line 1399)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1399, 24), 'm2', match_call_result_81172)
    
    # Getting the type of 'm2' (line 1401)
    m2_81173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1401, 27), 'm2')
    # Testing the type of an if condition (line 1401)
    if_condition_81174 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1401, 24), m2_81173)
    # Assigning a type to the variable 'if_condition_81174' (line 1401)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1401, 24), 'if_condition_81174', if_condition_81174)
    # SSA begins for if statement (line 1401)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Subscript (line 1402):
    
    # Assigning a Call to a Subscript (line 1402):
    
    # Call to strip(...): (line 1402)
    # Processing the call keyword arguments (line 1402)
    kwargs_81181 = {}
    
    # Call to group(...): (line 1402)
    # Processing the call arguments (line 1402)
    str_81177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1403, 32), 'str', 'use')
    # Processing the call keyword arguments (line 1402)
    kwargs_81178 = {}
    # Getting the type of 'm2' (line 1402)
    m2_81175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 60), 'm2', False)
    # Obtaining the member 'group' of a type (line 1402)
    group_81176 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1402, 60), m2_81175, 'group')
    # Calling group(args, kwargs) (line 1402)
    group_call_result_81179 = invoke(stypy.reporting.localization.Localization(__file__, 1402, 60), group_81176, *[str_81177], **kwargs_81178)
    
    # Obtaining the member 'strip' of a type (line 1402)
    strip_81180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1402, 60), group_call_result_81179, 'strip')
    # Calling strip(args, kwargs) (line 1402)
    strip_call_result_81182 = invoke(stypy.reporting.localization.Localization(__file__, 1402, 60), strip_81180, *[], **kwargs_81181)
    
    # Getting the type of 'rl' (line 1402)
    rl_81183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 28), 'rl')
    
    # Call to strip(...): (line 1402)
    # Processing the call keyword arguments (line 1402)
    kwargs_81190 = {}
    
    # Call to group(...): (line 1402)
    # Processing the call arguments (line 1402)
    str_81186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1402, 40), 'str', 'local')
    # Processing the call keyword arguments (line 1402)
    kwargs_81187 = {}
    # Getting the type of 'm2' (line 1402)
    m2_81184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 31), 'm2', False)
    # Obtaining the member 'group' of a type (line 1402)
    group_81185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1402, 31), m2_81184, 'group')
    # Calling group(args, kwargs) (line 1402)
    group_call_result_81188 = invoke(stypy.reporting.localization.Localization(__file__, 1402, 31), group_81185, *[str_81186], **kwargs_81187)
    
    # Obtaining the member 'strip' of a type (line 1402)
    strip_81189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1402, 31), group_call_result_81188, 'strip')
    # Calling strip(args, kwargs) (line 1402)
    strip_call_result_81191 = invoke(stypy.reporting.localization.Localization(__file__, 1402, 31), strip_81189, *[], **kwargs_81190)
    
    # Storing an element on a container (line 1402)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1402, 28), rl_81183, (strip_call_result_81191, strip_call_result_81182))
    # SSA branch for the else part of an if statement (line 1401)
    module_type_store.open_ssa_branch('else')
    
    # Call to outmess(...): (line 1405)
    # Processing the call arguments (line 1405)
    str_81193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1406, 32), 'str', 'analyzeline: Not local=>use pattern found in %s\n')
    
    # Call to repr(...): (line 1406)
    # Processing the call arguments (line 1406)
    # Getting the type of 'l' (line 1406)
    l_81195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1406, 91), 'l', False)
    # Processing the call keyword arguments (line 1406)
    kwargs_81196 = {}
    # Getting the type of 'repr' (line 1406)
    repr_81194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1406, 86), 'repr', False)
    # Calling repr(args, kwargs) (line 1406)
    repr_call_result_81197 = invoke(stypy.reporting.localization.Localization(__file__, 1406, 86), repr_81194, *[l_81195], **kwargs_81196)
    
    # Applying the binary operator '%' (line 1406)
    result_mod_81198 = python_operator(stypy.reporting.localization.Localization(__file__, 1406, 32), '%', str_81193, repr_call_result_81197)
    
    # Processing the call keyword arguments (line 1405)
    kwargs_81199 = {}
    # Getting the type of 'outmess' (line 1405)
    outmess_81192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1405, 28), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1405)
    outmess_call_result_81200 = invoke(stypy.reporting.localization.Localization(__file__, 1405, 28), outmess_81192, *[result_mod_81198], **kwargs_81199)
    
    # SSA join for if statement (line 1401)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1398)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Name to a Subscript (line 1408):
    
    # Assigning a Name to a Subscript (line 1408):
    # Getting the type of 'l' (line 1408)
    l_81201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1408, 32), 'l')
    # Getting the type of 'rl' (line 1408)
    rl_81202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1408, 24), 'rl')
    # Getting the type of 'l' (line 1408)
    l_81203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1408, 27), 'l')
    # Storing an element on a container (line 1408)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1408, 24), rl_81202, (l_81203, l_81201))
    # SSA join for if statement (line 1398)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 1409):
    
    # Assigning a Name to a Subscript (line 1409):
    # Getting the type of 'rl' (line 1409)
    rl_81204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 67), 'rl')
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 1409)
    name_81205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 52), 'name')
    
    # Obtaining the type of the subscript
    str_81206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1409, 45), 'str', 'use')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1409)
    groupcounter_81207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 31), 'groupcounter')
    # Getting the type of 'groupcache' (line 1409)
    groupcache_81208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 20), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1409)
    getitem___81209 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1409, 20), groupcache_81208, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1409)
    subscript_call_result_81210 = invoke(stypy.reporting.localization.Localization(__file__, 1409, 20), getitem___81209, groupcounter_81207)
    
    # Obtaining the member '__getitem__' of a type (line 1409)
    getitem___81211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1409, 20), subscript_call_result_81210, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1409)
    subscript_call_result_81212 = invoke(stypy.reporting.localization.Localization(__file__, 1409, 20), getitem___81211, str_81206)
    
    # Obtaining the member '__getitem__' of a type (line 1409)
    getitem___81213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1409, 20), subscript_call_result_81212, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1409)
    subscript_call_result_81214 = invoke(stypy.reporting.localization.Localization(__file__, 1409, 20), getitem___81213, name_81205)
    
    str_81215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1409, 58), 'str', 'map')
    # Storing an element on a container (line 1409)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1409, 20), subscript_call_result_81214, (str_81215, rl_81204))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1391)
    module_type_store.open_ssa_branch('else')
    pass
    # SSA join for if statement (line 1391)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1384)
    module_type_store.open_ssa_branch('else')
    
    # Call to print(...): (line 1413)
    # Processing the call arguments (line 1413)
    
    # Call to groupdict(...): (line 1413)
    # Processing the call keyword arguments (line 1413)
    kwargs_81219 = {}
    # Getting the type of 'm' (line 1413)
    m_81217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1413, 18), 'm', False)
    # Obtaining the member 'groupdict' of a type (line 1413)
    groupdict_81218 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1413, 18), m_81217, 'groupdict')
    # Calling groupdict(args, kwargs) (line 1413)
    groupdict_call_result_81220 = invoke(stypy.reporting.localization.Localization(__file__, 1413, 18), groupdict_81218, *[], **kwargs_81219)
    
    # Processing the call keyword arguments (line 1413)
    kwargs_81221 = {}
    # Getting the type of 'print' (line 1413)
    print_81216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1413, 12), 'print', False)
    # Calling print(args, kwargs) (line 1413)
    print_call_result_81222 = invoke(stypy.reporting.localization.Localization(__file__, 1413, 12), print_81216, *[groupdict_call_result_81220], **kwargs_81221)
    
    
    # Call to outmess(...): (line 1414)
    # Processing the call arguments (line 1414)
    str_81224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1414, 20), 'str', 'analyzeline: Could not crack the use statement.\n')
    # Processing the call keyword arguments (line 1414)
    kwargs_81225 = {}
    # Getting the type of 'outmess' (line 1414)
    outmess_81223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1414, 12), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1414)
    outmess_call_result_81226 = invoke(stypy.reporting.localization.Localization(__file__, 1414, 12), outmess_81223, *[str_81224], **kwargs_81225)
    
    # SSA join for if statement (line 1384)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1381)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'case' (line 1415)
    case_81227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1415, 9), 'case')
    
    # Obtaining an instance of the builtin type 'list' (line 1415)
    list_81228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1415, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1415)
    # Adding element type (line 1415)
    str_81229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1415, 18), 'str', 'f2pyenhancements')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1415, 17), list_81228, str_81229)
    
    # Applying the binary operator 'in' (line 1415)
    result_contains_81230 = python_operator(stypy.reporting.localization.Localization(__file__, 1415, 9), 'in', case_81227, list_81228)
    
    # Testing the type of an if condition (line 1415)
    if_condition_81231 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1415, 9), result_contains_81230)
    # Assigning a type to the variable 'if_condition_81231' (line 1415)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1415, 9), 'if_condition_81231', if_condition_81231)
    # SSA begins for if statement (line 1415)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    str_81232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1416, 11), 'str', 'f2pyenhancements')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1416)
    groupcounter_81233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 48), 'groupcounter')
    # Getting the type of 'groupcache' (line 1416)
    groupcache_81234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 37), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1416)
    getitem___81235 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1416, 37), groupcache_81234, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1416)
    subscript_call_result_81236 = invoke(stypy.reporting.localization.Localization(__file__, 1416, 37), getitem___81235, groupcounter_81233)
    
    # Applying the binary operator 'notin' (line 1416)
    result_contains_81237 = python_operator(stypy.reporting.localization.Localization(__file__, 1416, 11), 'notin', str_81232, subscript_call_result_81236)
    
    # Testing the type of an if condition (line 1416)
    if_condition_81238 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1416, 8), result_contains_81237)
    # Assigning a type to the variable 'if_condition_81238' (line 1416)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1416, 8), 'if_condition_81238', if_condition_81238)
    # SSA begins for if statement (line 1416)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Dict to a Subscript (line 1417):
    
    # Assigning a Dict to a Subscript (line 1417):
    
    # Obtaining an instance of the builtin type 'dict' (line 1417)
    dict_81239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1417, 59), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1417)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1417)
    groupcounter_81240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1417, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 1417)
    groupcache_81241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1417, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1417)
    getitem___81242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1417, 12), groupcache_81241, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1417)
    subscript_call_result_81243 = invoke(stypy.reporting.localization.Localization(__file__, 1417, 12), getitem___81242, groupcounter_81240)
    
    str_81244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1417, 37), 'str', 'f2pyenhancements')
    # Storing an element on a container (line 1417)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1417, 12), subscript_call_result_81243, (str_81244, dict_81239))
    # SSA join for if statement (line 1416)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Name (line 1418):
    
    # Assigning a Subscript to a Name (line 1418):
    
    # Obtaining the type of the subscript
    str_81245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1418, 37), 'str', 'f2pyenhancements')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1418)
    groupcounter_81246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1418, 23), 'groupcounter')
    # Getting the type of 'groupcache' (line 1418)
    groupcache_81247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1418, 12), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1418)
    getitem___81248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1418, 12), groupcache_81247, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1418)
    subscript_call_result_81249 = invoke(stypy.reporting.localization.Localization(__file__, 1418, 12), getitem___81248, groupcounter_81246)
    
    # Obtaining the member '__getitem__' of a type (line 1418)
    getitem___81250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1418, 12), subscript_call_result_81249, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1418)
    subscript_call_result_81251 = invoke(stypy.reporting.localization.Localization(__file__, 1418, 12), getitem___81250, str_81245)
    
    # Assigning a type to the variable 'd' (line 1418)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1418, 8), 'd', subscript_call_result_81251)
    
    
    # Evaluating a boolean operation
    
    
    # Call to group(...): (line 1419)
    # Processing the call arguments (line 1419)
    str_81254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1419, 19), 'str', 'this')
    # Processing the call keyword arguments (line 1419)
    kwargs_81255 = {}
    # Getting the type of 'm' (line 1419)
    m_81252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1419, 11), 'm', False)
    # Obtaining the member 'group' of a type (line 1419)
    group_81253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1419, 11), m_81252, 'group')
    # Calling group(args, kwargs) (line 1419)
    group_call_result_81256 = invoke(stypy.reporting.localization.Localization(__file__, 1419, 11), group_81253, *[str_81254], **kwargs_81255)
    
    str_81257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1419, 30), 'str', 'usercode')
    # Applying the binary operator '==' (line 1419)
    result_eq_81258 = python_operator(stypy.reporting.localization.Localization(__file__, 1419, 11), '==', group_call_result_81256, str_81257)
    
    
    str_81259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1419, 45), 'str', 'usercode')
    # Getting the type of 'd' (line 1419)
    d_81260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1419, 59), 'd')
    # Applying the binary operator 'in' (line 1419)
    result_contains_81261 = python_operator(stypy.reporting.localization.Localization(__file__, 1419, 45), 'in', str_81259, d_81260)
    
    # Applying the binary operator 'and' (line 1419)
    result_and_keyword_81262 = python_operator(stypy.reporting.localization.Localization(__file__, 1419, 11), 'and', result_eq_81258, result_contains_81261)
    
    # Testing the type of an if condition (line 1419)
    if_condition_81263 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1419, 8), result_and_keyword_81262)
    # Assigning a type to the variable 'if_condition_81263' (line 1419)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1419, 8), 'if_condition_81263', if_condition_81263)
    # SSA begins for if statement (line 1419)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Type idiom detected: calculating its left and rigth part (line 1420)
    # Getting the type of 'str' (line 1420)
    str_81264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1420, 41), 'str')
    
    # Obtaining the type of the subscript
    str_81265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1420, 28), 'str', 'usercode')
    # Getting the type of 'd' (line 1420)
    d_81266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1420, 26), 'd')
    # Obtaining the member '__getitem__' of a type (line 1420)
    getitem___81267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1420, 26), d_81266, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1420)
    subscript_call_result_81268 = invoke(stypy.reporting.localization.Localization(__file__, 1420, 26), getitem___81267, str_81265)
    
    
    (may_be_81269, more_types_in_union_81270) = may_be_subtype(str_81264, subscript_call_result_81268)

    if may_be_81269:

        if more_types_in_union_81270:
            # Runtime conditional SSA (line 1420)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a List to a Subscript (line 1421):
        
        # Assigning a List to a Subscript (line 1421):
        
        # Obtaining an instance of the builtin type 'list' (line 1421)
        list_81271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1421, 32), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1421)
        # Adding element type (line 1421)
        
        # Obtaining the type of the subscript
        str_81272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1421, 35), 'str', 'usercode')
        # Getting the type of 'd' (line 1421)
        d_81273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1421, 33), 'd')
        # Obtaining the member '__getitem__' of a type (line 1421)
        getitem___81274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1421, 33), d_81273, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1421)
        subscript_call_result_81275 = invoke(stypy.reporting.localization.Localization(__file__, 1421, 33), getitem___81274, str_81272)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1421, 32), list_81271, subscript_call_result_81275)
        
        # Getting the type of 'd' (line 1421)
        d_81276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1421, 16), 'd')
        str_81277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1421, 18), 'str', 'usercode')
        # Storing an element on a container (line 1421)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1421, 16), d_81276, (str_81277, list_81271))

        if more_types_in_union_81270:
            # SSA join for if statement (line 1420)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Call to append(...): (line 1422)
    # Processing the call arguments (line 1422)
    
    # Call to group(...): (line 1422)
    # Processing the call arguments (line 1422)
    str_81285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1422, 41), 'str', 'after')
    # Processing the call keyword arguments (line 1422)
    kwargs_81286 = {}
    # Getting the type of 'm' (line 1422)
    m_81283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1422, 33), 'm', False)
    # Obtaining the member 'group' of a type (line 1422)
    group_81284 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1422, 33), m_81283, 'group')
    # Calling group(args, kwargs) (line 1422)
    group_call_result_81287 = invoke(stypy.reporting.localization.Localization(__file__, 1422, 33), group_81284, *[str_81285], **kwargs_81286)
    
    # Processing the call keyword arguments (line 1422)
    kwargs_81288 = {}
    
    # Obtaining the type of the subscript
    str_81278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1422, 14), 'str', 'usercode')
    # Getting the type of 'd' (line 1422)
    d_81279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1422, 12), 'd', False)
    # Obtaining the member '__getitem__' of a type (line 1422)
    getitem___81280 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1422, 12), d_81279, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1422)
    subscript_call_result_81281 = invoke(stypy.reporting.localization.Localization(__file__, 1422, 12), getitem___81280, str_81278)
    
    # Obtaining the member 'append' of a type (line 1422)
    append_81282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1422, 12), subscript_call_result_81281, 'append')
    # Calling append(args, kwargs) (line 1422)
    append_call_result_81289 = invoke(stypy.reporting.localization.Localization(__file__, 1422, 12), append_81282, *[group_call_result_81287], **kwargs_81288)
    
    # SSA branch for the else part of an if statement (line 1419)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Subscript (line 1424):
    
    # Assigning a Call to a Subscript (line 1424):
    
    # Call to group(...): (line 1424)
    # Processing the call arguments (line 1424)
    str_81292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1424, 41), 'str', 'after')
    # Processing the call keyword arguments (line 1424)
    kwargs_81293 = {}
    # Getting the type of 'm' (line 1424)
    m_81290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 33), 'm', False)
    # Obtaining the member 'group' of a type (line 1424)
    group_81291 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1424, 33), m_81290, 'group')
    # Calling group(args, kwargs) (line 1424)
    group_call_result_81294 = invoke(stypy.reporting.localization.Localization(__file__, 1424, 33), group_81291, *[str_81292], **kwargs_81293)
    
    # Getting the type of 'd' (line 1424)
    d_81295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 12), 'd')
    
    # Call to group(...): (line 1424)
    # Processing the call arguments (line 1424)
    str_81298 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1424, 22), 'str', 'this')
    # Processing the call keyword arguments (line 1424)
    kwargs_81299 = {}
    # Getting the type of 'm' (line 1424)
    m_81296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 14), 'm', False)
    # Obtaining the member 'group' of a type (line 1424)
    group_81297 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1424, 14), m_81296, 'group')
    # Calling group(args, kwargs) (line 1424)
    group_call_result_81300 = invoke(stypy.reporting.localization.Localization(__file__, 1424, 14), group_81297, *[str_81298], **kwargs_81299)
    
    # Storing an element on a container (line 1424)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1424, 12), d_81295, (group_call_result_81300, group_call_result_81294))
    # SSA join for if statement (line 1419)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1415)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'case' (line 1425)
    case_81301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1425, 9), 'case')
    str_81302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1425, 17), 'str', 'multiline')
    # Applying the binary operator '==' (line 1425)
    result_eq_81303 = python_operator(stypy.reporting.localization.Localization(__file__, 1425, 9), '==', case_81301, str_81302)
    
    # Testing the type of an if condition (line 1425)
    if_condition_81304 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1425, 9), result_eq_81303)
    # Assigning a type to the variable 'if_condition_81304' (line 1425)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1425, 9), 'if_condition_81304', if_condition_81304)
    # SSA begins for if statement (line 1425)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Type idiom detected: calculating its left and rigth part (line 1426)
    # Getting the type of 'previous_context' (line 1426)
    previous_context_81305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1426, 11), 'previous_context')
    # Getting the type of 'None' (line 1426)
    None_81306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1426, 31), 'None')
    
    (may_be_81307, more_types_in_union_81308) = may_be_none(previous_context_81305, None_81306)

    if may_be_81307:

        if more_types_in_union_81308:
            # Runtime conditional SSA (line 1426)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Getting the type of 'verbose' (line 1427)
        verbose_81309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1427, 15), 'verbose')
        # Testing the type of an if condition (line 1427)
        if_condition_81310 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1427, 12), verbose_81309)
        # Assigning a type to the variable 'if_condition_81310' (line 1427)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1427, 12), 'if_condition_81310', if_condition_81310)
        # SSA begins for if statement (line 1427)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to outmess(...): (line 1428)
        # Processing the call arguments (line 1428)
        str_81312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1428, 24), 'str', 'analyzeline: No context for multiline block.\n')
        # Processing the call keyword arguments (line 1428)
        kwargs_81313 = {}
        # Getting the type of 'outmess' (line 1428)
        outmess_81311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1428, 16), 'outmess', False)
        # Calling outmess(args, kwargs) (line 1428)
        outmess_call_result_81314 = invoke(stypy.reporting.localization.Localization(__file__, 1428, 16), outmess_81311, *[str_81312], **kwargs_81313)
        
        # SSA join for if statement (line 1427)
        module_type_store = module_type_store.join_ssa_context()
        
        # Assigning a type to the variable 'stypy_return_type' (line 1429)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1429, 12), 'stypy_return_type', types.NoneType)

        if more_types_in_union_81308:
            # SSA join for if statement (line 1426)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Name to a Name (line 1430):
    
    # Assigning a Name to a Name (line 1430):
    # Getting the type of 'groupcounter' (line 1430)
    groupcounter_81315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1430, 13), 'groupcounter')
    # Assigning a type to the variable 'gc' (line 1430)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1430, 8), 'gc', groupcounter_81315)
    
    # Call to appendmultiline(...): (line 1431)
    # Processing the call arguments (line 1431)
    
    # Obtaining the type of the subscript
    # Getting the type of 'gc' (line 1431)
    gc_81317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1431, 35), 'gc', False)
    # Getting the type of 'groupcache' (line 1431)
    groupcache_81318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1431, 24), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 1431)
    getitem___81319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1431, 24), groupcache_81318, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1431)
    subscript_call_result_81320 = invoke(stypy.reporting.localization.Localization(__file__, 1431, 24), getitem___81319, gc_81317)
    
    
    # Obtaining the type of the subscript
    int_81321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1432, 42), 'int')
    slice_81322 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1432, 24), None, int_81321, None)
    # Getting the type of 'previous_context' (line 1432)
    previous_context_81323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1432, 24), 'previous_context', False)
    # Obtaining the member '__getitem__' of a type (line 1432)
    getitem___81324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1432, 24), previous_context_81323, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1432)
    subscript_call_result_81325 = invoke(stypy.reporting.localization.Localization(__file__, 1432, 24), getitem___81324, slice_81322)
    
    
    # Call to group(...): (line 1433)
    # Processing the call arguments (line 1433)
    str_81328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1433, 32), 'str', 'this')
    # Processing the call keyword arguments (line 1433)
    kwargs_81329 = {}
    # Getting the type of 'm' (line 1433)
    m_81326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1433, 24), 'm', False)
    # Obtaining the member 'group' of a type (line 1433)
    group_81327 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1433, 24), m_81326, 'group')
    # Calling group(args, kwargs) (line 1433)
    group_call_result_81330 = invoke(stypy.reporting.localization.Localization(__file__, 1433, 24), group_81327, *[str_81328], **kwargs_81329)
    
    # Processing the call keyword arguments (line 1431)
    kwargs_81331 = {}
    # Getting the type of 'appendmultiline' (line 1431)
    appendmultiline_81316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1431, 8), 'appendmultiline', False)
    # Calling appendmultiline(args, kwargs) (line 1431)
    appendmultiline_call_result_81332 = invoke(stypy.reporting.localization.Localization(__file__, 1431, 8), appendmultiline_81316, *[subscript_call_result_81320, subscript_call_result_81325, group_call_result_81330], **kwargs_81331)
    
    # SSA branch for the else part of an if statement (line 1425)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'verbose' (line 1435)
    verbose_81333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1435, 11), 'verbose')
    int_81334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1435, 21), 'int')
    # Applying the binary operator '>' (line 1435)
    result_gt_81335 = python_operator(stypy.reporting.localization.Localization(__file__, 1435, 11), '>', verbose_81333, int_81334)
    
    # Testing the type of an if condition (line 1435)
    if_condition_81336 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1435, 8), result_gt_81335)
    # Assigning a type to the variable 'if_condition_81336' (line 1435)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1435, 8), 'if_condition_81336', if_condition_81336)
    # SSA begins for if statement (line 1435)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to print(...): (line 1436)
    # Processing the call arguments (line 1436)
    
    # Call to groupdict(...): (line 1436)
    # Processing the call keyword arguments (line 1436)
    kwargs_81340 = {}
    # Getting the type of 'm' (line 1436)
    m_81338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1436, 18), 'm', False)
    # Obtaining the member 'groupdict' of a type (line 1436)
    groupdict_81339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1436, 18), m_81338, 'groupdict')
    # Calling groupdict(args, kwargs) (line 1436)
    groupdict_call_result_81341 = invoke(stypy.reporting.localization.Localization(__file__, 1436, 18), groupdict_81339, *[], **kwargs_81340)
    
    # Processing the call keyword arguments (line 1436)
    kwargs_81342 = {}
    # Getting the type of 'print' (line 1436)
    print_81337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1436, 12), 'print', False)
    # Calling print(args, kwargs) (line 1436)
    print_call_result_81343 = invoke(stypy.reporting.localization.Localization(__file__, 1436, 12), print_81337, *[groupdict_call_result_81341], **kwargs_81342)
    
    
    # Call to outmess(...): (line 1437)
    # Processing the call arguments (line 1437)
    str_81345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1437, 20), 'str', 'analyzeline: No code implemented for line.\n')
    # Processing the call keyword arguments (line 1437)
    kwargs_81346 = {}
    # Getting the type of 'outmess' (line 1437)
    outmess_81344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1437, 12), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1437)
    outmess_call_result_81347 = invoke(stypy.reporting.localization.Localization(__file__, 1437, 12), outmess_81344, *[str_81345], **kwargs_81346)
    
    # SSA join for if statement (line 1435)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1425)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1415)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1381)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1342)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1267)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1214)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1170)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1091)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1085)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1074)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 917)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'analyzeline(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'analyzeline' in the type store
    # Getting the type of 'stypy_return_type' (line 893)
    stypy_return_type_81348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_81348)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'analyzeline'
    return stypy_return_type_81348

# Assigning a type to the variable 'analyzeline' (line 893)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 0), 'analyzeline', analyzeline)

@norecursion
def appendmultiline(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'appendmultiline'
    module_type_store = module_type_store.open_function_context('appendmultiline', 1440, 0, False)
    
    # Passed parameters checking function
    appendmultiline.stypy_localization = localization
    appendmultiline.stypy_type_of_self = None
    appendmultiline.stypy_type_store = module_type_store
    appendmultiline.stypy_function_name = 'appendmultiline'
    appendmultiline.stypy_param_names_list = ['group', 'context_name', 'ml']
    appendmultiline.stypy_varargs_param_name = None
    appendmultiline.stypy_kwargs_param_name = None
    appendmultiline.stypy_call_defaults = defaults
    appendmultiline.stypy_call_varargs = varargs
    appendmultiline.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'appendmultiline', ['group', 'context_name', 'ml'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'appendmultiline', localization, ['group', 'context_name', 'ml'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'appendmultiline(...)' code ##################

    
    
    str_81349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1441, 7), 'str', 'f2pymultilines')
    # Getting the type of 'group' (line 1441)
    group_81350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1441, 31), 'group')
    # Applying the binary operator 'notin' (line 1441)
    result_contains_81351 = python_operator(stypy.reporting.localization.Localization(__file__, 1441, 7), 'notin', str_81349, group_81350)
    
    # Testing the type of an if condition (line 1441)
    if_condition_81352 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1441, 4), result_contains_81351)
    # Assigning a type to the variable 'if_condition_81352' (line 1441)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1441, 4), 'if_condition_81352', if_condition_81352)
    # SSA begins for if statement (line 1441)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Dict to a Subscript (line 1442):
    
    # Assigning a Dict to a Subscript (line 1442):
    
    # Obtaining an instance of the builtin type 'dict' (line 1442)
    dict_81353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1442, 34), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1442)
    
    # Getting the type of 'group' (line 1442)
    group_81354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1442, 8), 'group')
    str_81355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1442, 14), 'str', 'f2pymultilines')
    # Storing an element on a container (line 1442)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1442, 8), group_81354, (str_81355, dict_81353))
    # SSA join for if statement (line 1441)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Name (line 1443):
    
    # Assigning a Subscript to a Name (line 1443):
    
    # Obtaining the type of the subscript
    str_81356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1443, 14), 'str', 'f2pymultilines')
    # Getting the type of 'group' (line 1443)
    group_81357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1443, 8), 'group')
    # Obtaining the member '__getitem__' of a type (line 1443)
    getitem___81358 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1443, 8), group_81357, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1443)
    subscript_call_result_81359 = invoke(stypy.reporting.localization.Localization(__file__, 1443, 8), getitem___81358, str_81356)
    
    # Assigning a type to the variable 'd' (line 1443)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1443, 4), 'd', subscript_call_result_81359)
    
    
    # Getting the type of 'context_name' (line 1444)
    context_name_81360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1444, 7), 'context_name')
    # Getting the type of 'd' (line 1444)
    d_81361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1444, 27), 'd')
    # Applying the binary operator 'notin' (line 1444)
    result_contains_81362 = python_operator(stypy.reporting.localization.Localization(__file__, 1444, 7), 'notin', context_name_81360, d_81361)
    
    # Testing the type of an if condition (line 1444)
    if_condition_81363 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1444, 4), result_contains_81362)
    # Assigning a type to the variable 'if_condition_81363' (line 1444)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1444, 4), 'if_condition_81363', if_condition_81363)
    # SSA begins for if statement (line 1444)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Subscript (line 1445):
    
    # Assigning a List to a Subscript (line 1445):
    
    # Obtaining an instance of the builtin type 'list' (line 1445)
    list_81364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1445, 26), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1445)
    
    # Getting the type of 'd' (line 1445)
    d_81365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1445, 8), 'd')
    # Getting the type of 'context_name' (line 1445)
    context_name_81366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1445, 10), 'context_name')
    # Storing an element on a container (line 1445)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1445, 8), d_81365, (context_name_81366, list_81364))
    # SSA join for if statement (line 1444)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 1446)
    # Processing the call arguments (line 1446)
    # Getting the type of 'ml' (line 1446)
    ml_81372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1446, 27), 'ml', False)
    # Processing the call keyword arguments (line 1446)
    kwargs_81373 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'context_name' (line 1446)
    context_name_81367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1446, 6), 'context_name', False)
    # Getting the type of 'd' (line 1446)
    d_81368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1446, 4), 'd', False)
    # Obtaining the member '__getitem__' of a type (line 1446)
    getitem___81369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1446, 4), d_81368, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1446)
    subscript_call_result_81370 = invoke(stypy.reporting.localization.Localization(__file__, 1446, 4), getitem___81369, context_name_81367)
    
    # Obtaining the member 'append' of a type (line 1446)
    append_81371 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1446, 4), subscript_call_result_81370, 'append')
    # Calling append(args, kwargs) (line 1446)
    append_call_result_81374 = invoke(stypy.reporting.localization.Localization(__file__, 1446, 4), append_81371, *[ml_81372], **kwargs_81373)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1447)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1447, 4), 'stypy_return_type', types.NoneType)
    
    # ################# End of 'appendmultiline(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'appendmultiline' in the type store
    # Getting the type of 'stypy_return_type' (line 1440)
    stypy_return_type_81375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1440, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_81375)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'appendmultiline'
    return stypy_return_type_81375

# Assigning a type to the variable 'appendmultiline' (line 1440)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1440, 0), 'appendmultiline', appendmultiline)

@norecursion
def cracktypespec0(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'cracktypespec0'
    module_type_store = module_type_store.open_function_context('cracktypespec0', 1450, 0, False)
    
    # Passed parameters checking function
    cracktypespec0.stypy_localization = localization
    cracktypespec0.stypy_type_of_self = None
    cracktypespec0.stypy_type_store = module_type_store
    cracktypespec0.stypy_function_name = 'cracktypespec0'
    cracktypespec0.stypy_param_names_list = ['typespec', 'll']
    cracktypespec0.stypy_varargs_param_name = None
    cracktypespec0.stypy_kwargs_param_name = None
    cracktypespec0.stypy_call_defaults = defaults
    cracktypespec0.stypy_call_varargs = varargs
    cracktypespec0.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'cracktypespec0', ['typespec', 'll'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'cracktypespec0', localization, ['typespec', 'll'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'cracktypespec0(...)' code ##################

    
    # Assigning a Name to a Name (line 1451):
    
    # Assigning a Name to a Name (line 1451):
    # Getting the type of 'None' (line 1451)
    None_81376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1451, 15), 'None')
    # Assigning a type to the variable 'selector' (line 1451)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1451, 4), 'selector', None_81376)
    
    # Assigning a Name to a Name (line 1452):
    
    # Assigning a Name to a Name (line 1452):
    # Getting the type of 'None' (line 1452)
    None_81377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1452, 11), 'None')
    # Assigning a type to the variable 'attr' (line 1452)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1452, 4), 'attr', None_81377)
    
    
    # Call to match(...): (line 1453)
    # Processing the call arguments (line 1453)
    str_81380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1453, 16), 'str', 'double\\s*complex')
    # Getting the type of 'typespec' (line 1453)
    typespec_81381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1453, 37), 'typespec', False)
    # Getting the type of 're' (line 1453)
    re_81382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1453, 47), 're', False)
    # Obtaining the member 'I' of a type (line 1453)
    I_81383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1453, 47), re_81382, 'I')
    # Processing the call keyword arguments (line 1453)
    kwargs_81384 = {}
    # Getting the type of 're' (line 1453)
    re_81378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1453, 7), 're', False)
    # Obtaining the member 'match' of a type (line 1453)
    match_81379 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1453, 7), re_81378, 'match')
    # Calling match(args, kwargs) (line 1453)
    match_call_result_81385 = invoke(stypy.reporting.localization.Localization(__file__, 1453, 7), match_81379, *[str_81380, typespec_81381, I_81383], **kwargs_81384)
    
    # Testing the type of an if condition (line 1453)
    if_condition_81386 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1453, 4), match_call_result_81385)
    # Assigning a type to the variable 'if_condition_81386' (line 1453)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1453, 4), 'if_condition_81386', if_condition_81386)
    # SSA begins for if statement (line 1453)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 1454):
    
    # Assigning a Str to a Name (line 1454):
    str_81387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1454, 19), 'str', 'double complex')
    # Assigning a type to the variable 'typespec' (line 1454)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1454, 8), 'typespec', str_81387)
    # SSA branch for the else part of an if statement (line 1453)
    module_type_store.open_ssa_branch('else')
    
    
    # Call to match(...): (line 1455)
    # Processing the call arguments (line 1455)
    str_81390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1455, 18), 'str', 'double\\s*precision')
    # Getting the type of 'typespec' (line 1455)
    typespec_81391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1455, 41), 'typespec', False)
    # Getting the type of 're' (line 1455)
    re_81392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1455, 51), 're', False)
    # Obtaining the member 'I' of a type (line 1455)
    I_81393 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1455, 51), re_81392, 'I')
    # Processing the call keyword arguments (line 1455)
    kwargs_81394 = {}
    # Getting the type of 're' (line 1455)
    re_81388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1455, 9), 're', False)
    # Obtaining the member 'match' of a type (line 1455)
    match_81389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1455, 9), re_81388, 'match')
    # Calling match(args, kwargs) (line 1455)
    match_call_result_81395 = invoke(stypy.reporting.localization.Localization(__file__, 1455, 9), match_81389, *[str_81390, typespec_81391, I_81393], **kwargs_81394)
    
    # Testing the type of an if condition (line 1455)
    if_condition_81396 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1455, 9), match_call_result_81395)
    # Assigning a type to the variable 'if_condition_81396' (line 1455)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1455, 9), 'if_condition_81396', if_condition_81396)
    # SSA begins for if statement (line 1455)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 1456):
    
    # Assigning a Str to a Name (line 1456):
    str_81397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1456, 19), 'str', 'double precision')
    # Assigning a type to the variable 'typespec' (line 1456)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1456, 8), 'typespec', str_81397)
    # SSA branch for the else part of an if statement (line 1455)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Name (line 1458):
    
    # Assigning a Call to a Name (line 1458):
    
    # Call to lower(...): (line 1458)
    # Processing the call keyword arguments (line 1458)
    kwargs_81403 = {}
    
    # Call to strip(...): (line 1458)
    # Processing the call keyword arguments (line 1458)
    kwargs_81400 = {}
    # Getting the type of 'typespec' (line 1458)
    typespec_81398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1458, 19), 'typespec', False)
    # Obtaining the member 'strip' of a type (line 1458)
    strip_81399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1458, 19), typespec_81398, 'strip')
    # Calling strip(args, kwargs) (line 1458)
    strip_call_result_81401 = invoke(stypy.reporting.localization.Localization(__file__, 1458, 19), strip_81399, *[], **kwargs_81400)
    
    # Obtaining the member 'lower' of a type (line 1458)
    lower_81402 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1458, 19), strip_call_result_81401, 'lower')
    # Calling lower(args, kwargs) (line 1458)
    lower_call_result_81404 = invoke(stypy.reporting.localization.Localization(__file__, 1458, 19), lower_81402, *[], **kwargs_81403)
    
    # Assigning a type to the variable 'typespec' (line 1458)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1458, 8), 'typespec', lower_call_result_81404)
    # SSA join for if statement (line 1455)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1453)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1459):
    
    # Assigning a Call to a Name (line 1459):
    
    # Call to match(...): (line 1459)
    # Processing the call arguments (line 1459)
    
    # Call to markouterparen(...): (line 1459)
    # Processing the call arguments (line 1459)
    # Getting the type of 'll' (line 1459)
    ll_81408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1459, 44), 'll', False)
    # Processing the call keyword arguments (line 1459)
    kwargs_81409 = {}
    # Getting the type of 'markouterparen' (line 1459)
    markouterparen_81407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1459, 29), 'markouterparen', False)
    # Calling markouterparen(args, kwargs) (line 1459)
    markouterparen_call_result_81410 = invoke(stypy.reporting.localization.Localization(__file__, 1459, 29), markouterparen_81407, *[ll_81408], **kwargs_81409)
    
    # Processing the call keyword arguments (line 1459)
    kwargs_81411 = {}
    # Getting the type of 'selectpattern' (line 1459)
    selectpattern_81405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1459, 9), 'selectpattern', False)
    # Obtaining the member 'match' of a type (line 1459)
    match_81406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1459, 9), selectpattern_81405, 'match')
    # Calling match(args, kwargs) (line 1459)
    match_call_result_81412 = invoke(stypy.reporting.localization.Localization(__file__, 1459, 9), match_81406, *[markouterparen_call_result_81410], **kwargs_81411)
    
    # Assigning a type to the variable 'm1' (line 1459)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1459, 4), 'm1', match_call_result_81412)
    
    
    # Getting the type of 'm1' (line 1460)
    m1_81413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 11), 'm1')
    # Applying the 'not' unary operator (line 1460)
    result_not__81414 = python_operator(stypy.reporting.localization.Localization(__file__, 1460, 7), 'not', m1_81413)
    
    # Testing the type of an if condition (line 1460)
    if_condition_81415 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1460, 4), result_not__81414)
    # Assigning a type to the variable 'if_condition_81415' (line 1460)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1460, 4), 'if_condition_81415', if_condition_81415)
    # SSA begins for if statement (line 1460)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1461)
    # Processing the call arguments (line 1461)
    str_81417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1462, 12), 'str', 'cracktypespec0: no kind/char_selector pattern found for line.\n')
    # Processing the call keyword arguments (line 1461)
    kwargs_81418 = {}
    # Getting the type of 'outmess' (line 1461)
    outmess_81416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1461, 8), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1461)
    outmess_call_result_81419 = invoke(stypy.reporting.localization.Localization(__file__, 1461, 8), outmess_81416, *[str_81417], **kwargs_81418)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1463)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1463, 8), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 1460)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1464):
    
    # Assigning a Call to a Name (line 1464):
    
    # Call to groupdict(...): (line 1464)
    # Processing the call keyword arguments (line 1464)
    kwargs_81422 = {}
    # Getting the type of 'm1' (line 1464)
    m1_81420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1464, 8), 'm1', False)
    # Obtaining the member 'groupdict' of a type (line 1464)
    groupdict_81421 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1464, 8), m1_81420, 'groupdict')
    # Calling groupdict(args, kwargs) (line 1464)
    groupdict_call_result_81423 = invoke(stypy.reporting.localization.Localization(__file__, 1464, 8), groupdict_81421, *[], **kwargs_81422)
    
    # Assigning a type to the variable 'd' (line 1464)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1464, 4), 'd', groupdict_call_result_81423)
    
    
    # Call to list(...): (line 1465)
    # Processing the call arguments (line 1465)
    
    # Call to keys(...): (line 1465)
    # Processing the call keyword arguments (line 1465)
    kwargs_81427 = {}
    # Getting the type of 'd' (line 1465)
    d_81425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1465, 18), 'd', False)
    # Obtaining the member 'keys' of a type (line 1465)
    keys_81426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1465, 18), d_81425, 'keys')
    # Calling keys(args, kwargs) (line 1465)
    keys_call_result_81428 = invoke(stypy.reporting.localization.Localization(__file__, 1465, 18), keys_81426, *[], **kwargs_81427)
    
    # Processing the call keyword arguments (line 1465)
    kwargs_81429 = {}
    # Getting the type of 'list' (line 1465)
    list_81424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1465, 13), 'list', False)
    # Calling list(args, kwargs) (line 1465)
    list_call_result_81430 = invoke(stypy.reporting.localization.Localization(__file__, 1465, 13), list_81424, *[keys_call_result_81428], **kwargs_81429)
    
    # Testing the type of a for loop iterable (line 1465)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1465, 4), list_call_result_81430)
    # Getting the type of the for loop variable (line 1465)
    for_loop_var_81431 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1465, 4), list_call_result_81430)
    # Assigning a type to the variable 'k' (line 1465)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1465, 4), 'k', for_loop_var_81431)
    # SSA begins for a for statement (line 1465)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Subscript (line 1466):
    
    # Assigning a Call to a Subscript (line 1466):
    
    # Call to unmarkouterparen(...): (line 1466)
    # Processing the call arguments (line 1466)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1466)
    k_81433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1466, 34), 'k', False)
    # Getting the type of 'd' (line 1466)
    d_81434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1466, 32), 'd', False)
    # Obtaining the member '__getitem__' of a type (line 1466)
    getitem___81435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1466, 32), d_81434, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1466)
    subscript_call_result_81436 = invoke(stypy.reporting.localization.Localization(__file__, 1466, 32), getitem___81435, k_81433)
    
    # Processing the call keyword arguments (line 1466)
    kwargs_81437 = {}
    # Getting the type of 'unmarkouterparen' (line 1466)
    unmarkouterparen_81432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1466, 15), 'unmarkouterparen', False)
    # Calling unmarkouterparen(args, kwargs) (line 1466)
    unmarkouterparen_call_result_81438 = invoke(stypy.reporting.localization.Localization(__file__, 1466, 15), unmarkouterparen_81432, *[subscript_call_result_81436], **kwargs_81437)
    
    # Getting the type of 'd' (line 1466)
    d_81439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1466, 8), 'd')
    # Getting the type of 'k' (line 1466)
    k_81440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1466, 10), 'k')
    # Storing an element on a container (line 1466)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1466, 8), d_81439, (k_81440, unmarkouterparen_call_result_81438))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'typespec' (line 1467)
    typespec_81441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1467, 7), 'typespec')
    
    # Obtaining an instance of the builtin type 'list' (line 1467)
    list_81442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1467, 19), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1467)
    # Adding element type (line 1467)
    str_81443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1467, 20), 'str', 'complex')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1467, 19), list_81442, str_81443)
    # Adding element type (line 1467)
    str_81444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1467, 31), 'str', 'integer')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1467, 19), list_81442, str_81444)
    # Adding element type (line 1467)
    str_81445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1467, 42), 'str', 'logical')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1467, 19), list_81442, str_81445)
    # Adding element type (line 1467)
    str_81446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1467, 53), 'str', 'real')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1467, 19), list_81442, str_81446)
    # Adding element type (line 1467)
    str_81447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1467, 61), 'str', 'character')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1467, 19), list_81442, str_81447)
    # Adding element type (line 1467)
    str_81448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1467, 74), 'str', 'type')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1467, 19), list_81442, str_81448)
    
    # Applying the binary operator 'in' (line 1467)
    result_contains_81449 = python_operator(stypy.reporting.localization.Localization(__file__, 1467, 7), 'in', typespec_81441, list_81442)
    
    # Testing the type of an if condition (line 1467)
    if_condition_81450 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1467, 4), result_contains_81449)
    # Assigning a type to the variable 'if_condition_81450' (line 1467)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1467, 4), 'if_condition_81450', if_condition_81450)
    # SSA begins for if statement (line 1467)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1468):
    
    # Assigning a Subscript to a Name (line 1468):
    
    # Obtaining the type of the subscript
    str_81451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1468, 21), 'str', 'this')
    # Getting the type of 'd' (line 1468)
    d_81452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1468, 19), 'd')
    # Obtaining the member '__getitem__' of a type (line 1468)
    getitem___81453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1468, 19), d_81452, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1468)
    subscript_call_result_81454 = invoke(stypy.reporting.localization.Localization(__file__, 1468, 19), getitem___81453, str_81451)
    
    # Assigning a type to the variable 'selector' (line 1468)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1468, 8), 'selector', subscript_call_result_81454)
    
    # Assigning a Subscript to a Name (line 1469):
    
    # Assigning a Subscript to a Name (line 1469):
    
    # Obtaining the type of the subscript
    str_81455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1469, 15), 'str', 'after')
    # Getting the type of 'd' (line 1469)
    d_81456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 13), 'd')
    # Obtaining the member '__getitem__' of a type (line 1469)
    getitem___81457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1469, 13), d_81456, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1469)
    subscript_call_result_81458 = invoke(stypy.reporting.localization.Localization(__file__, 1469, 13), getitem___81457, str_81455)
    
    # Assigning a type to the variable 'll' (line 1469)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1469, 8), 'll', subscript_call_result_81458)
    # SSA join for if statement (line 1467)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1470):
    
    # Assigning a Call to a Name (line 1470):
    
    # Call to find(...): (line 1470)
    # Processing the call arguments (line 1470)
    str_81461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1470, 16), 'str', '::')
    # Processing the call keyword arguments (line 1470)
    kwargs_81462 = {}
    # Getting the type of 'll' (line 1470)
    ll_81459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 8), 'll', False)
    # Obtaining the member 'find' of a type (line 1470)
    find_81460 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1470, 8), ll_81459, 'find')
    # Calling find(args, kwargs) (line 1470)
    find_call_result_81463 = invoke(stypy.reporting.localization.Localization(__file__, 1470, 8), find_81460, *[str_81461], **kwargs_81462)
    
    # Assigning a type to the variable 'i' (line 1470)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1470, 4), 'i', find_call_result_81463)
    
    
    # Getting the type of 'i' (line 1471)
    i_81464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 7), 'i')
    int_81465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1471, 12), 'int')
    # Applying the binary operator '>=' (line 1471)
    result_ge_81466 = python_operator(stypy.reporting.localization.Localization(__file__, 1471, 7), '>=', i_81464, int_81465)
    
    # Testing the type of an if condition (line 1471)
    if_condition_81467 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1471, 4), result_ge_81466)
    # Assigning a type to the variable 'if_condition_81467' (line 1471)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1471, 4), 'if_condition_81467', if_condition_81467)
    # SSA begins for if statement (line 1471)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1472):
    
    # Assigning a Call to a Name (line 1472):
    
    # Call to strip(...): (line 1472)
    # Processing the call keyword arguments (line 1472)
    kwargs_81474 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 1472)
    i_81468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 19), 'i', False)
    slice_81469 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1472, 15), None, i_81468, None)
    # Getting the type of 'll' (line 1472)
    ll_81470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 15), 'll', False)
    # Obtaining the member '__getitem__' of a type (line 1472)
    getitem___81471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1472, 15), ll_81470, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1472)
    subscript_call_result_81472 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 15), getitem___81471, slice_81469)
    
    # Obtaining the member 'strip' of a type (line 1472)
    strip_81473 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1472, 15), subscript_call_result_81472, 'strip')
    # Calling strip(args, kwargs) (line 1472)
    strip_call_result_81475 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 15), strip_81473, *[], **kwargs_81474)
    
    # Assigning a type to the variable 'attr' (line 1472)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1472, 8), 'attr', strip_call_result_81475)
    
    # Assigning a Subscript to a Name (line 1473):
    
    # Assigning a Subscript to a Name (line 1473):
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 1473)
    i_81476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 16), 'i')
    int_81477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1473, 20), 'int')
    # Applying the binary operator '+' (line 1473)
    result_add_81478 = python_operator(stypy.reporting.localization.Localization(__file__, 1473, 16), '+', i_81476, int_81477)
    
    slice_81479 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1473, 13), result_add_81478, None, None)
    # Getting the type of 'll' (line 1473)
    ll_81480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 13), 'll')
    # Obtaining the member '__getitem__' of a type (line 1473)
    getitem___81481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1473, 13), ll_81480, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1473)
    subscript_call_result_81482 = invoke(stypy.reporting.localization.Localization(__file__, 1473, 13), getitem___81481, slice_81479)
    
    # Assigning a type to the variable 'll' (line 1473)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1473, 8), 'll', subscript_call_result_81482)
    # SSA join for if statement (line 1471)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 1474)
    tuple_81483 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1474, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1474)
    # Adding element type (line 1474)
    # Getting the type of 'typespec' (line 1474)
    typespec_81484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1474, 11), 'typespec')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1474, 11), tuple_81483, typespec_81484)
    # Adding element type (line 1474)
    # Getting the type of 'selector' (line 1474)
    selector_81485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1474, 21), 'selector')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1474, 11), tuple_81483, selector_81485)
    # Adding element type (line 1474)
    # Getting the type of 'attr' (line 1474)
    attr_81486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1474, 31), 'attr')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1474, 11), tuple_81483, attr_81486)
    # Adding element type (line 1474)
    # Getting the type of 'll' (line 1474)
    ll_81487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1474, 37), 'll')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1474, 11), tuple_81483, ll_81487)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1474)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1474, 4), 'stypy_return_type', tuple_81483)
    
    # ################# End of 'cracktypespec0(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'cracktypespec0' in the type store
    # Getting the type of 'stypy_return_type' (line 1450)
    stypy_return_type_81488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1450, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_81488)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'cracktypespec0'
    return stypy_return_type_81488

# Assigning a type to the variable 'cracktypespec0' (line 1450)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1450, 0), 'cracktypespec0', cracktypespec0)

# Assigning a Call to a Name (line 1476):

# Assigning a Call to a Name (line 1476):

# Call to compile(...): (line 1476)
# Processing the call arguments (line 1476)
str_81491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1476, 25), 'str', '\\s*(?P<name>\\b[\\w]+\\b)\\s*(?P<after>.*)\\s*\\Z')
# Getting the type of 're' (line 1476)
re_81492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1476, 73), 're', False)
# Obtaining the member 'I' of a type (line 1476)
I_81493 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1476, 73), re_81492, 'I')
# Processing the call keyword arguments (line 1476)
kwargs_81494 = {}
# Getting the type of 're' (line 1476)
re_81489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1476, 14), 're', False)
# Obtaining the member 'compile' of a type (line 1476)
compile_81490 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1476, 14), re_81489, 'compile')
# Calling compile(args, kwargs) (line 1476)
compile_call_result_81495 = invoke(stypy.reporting.localization.Localization(__file__, 1476, 14), compile_81490, *[str_81491, I_81493], **kwargs_81494)

# Assigning a type to the variable 'namepattern' (line 1476)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1476, 0), 'namepattern', compile_call_result_81495)

# Assigning a Call to a Name (line 1477):

# Assigning a Call to a Name (line 1477):

# Call to compile(...): (line 1477)
# Processing the call arguments (line 1477)
str_81498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1478, 4), 'str', '\\s*(\\(\\s*(kind\\s*=)?\\s*(?P<kind>.*)\\s*\\)|[*]\\s*(?P<kind2>.*?))\\s*\\Z')
# Getting the type of 're' (line 1478)
re_81499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1478, 76), 're', False)
# Obtaining the member 'I' of a type (line 1478)
I_81500 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1478, 76), re_81499, 'I')
# Processing the call keyword arguments (line 1477)
kwargs_81501 = {}
# Getting the type of 're' (line 1477)
re_81496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1477, 15), 're', False)
# Obtaining the member 'compile' of a type (line 1477)
compile_81497 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1477, 15), re_81496, 'compile')
# Calling compile(args, kwargs) (line 1477)
compile_call_result_81502 = invoke(stypy.reporting.localization.Localization(__file__, 1477, 15), compile_81497, *[str_81498, I_81500], **kwargs_81501)

# Assigning a type to the variable 'kindselector' (line 1477)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1477, 0), 'kindselector', compile_call_result_81502)

# Assigning a Call to a Name (line 1479):

# Assigning a Call to a Name (line 1479):

# Call to compile(...): (line 1479)
# Processing the call arguments (line 1479)
str_81505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1480, 4), 'str', '\\s*(\\((?P<lenkind>.*)\\)|[*]\\s*(?P<charlen>.*))\\s*\\Z')
# Getting the type of 're' (line 1480)
re_81506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1480, 60), 're', False)
# Obtaining the member 'I' of a type (line 1480)
I_81507 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1480, 60), re_81506, 'I')
# Processing the call keyword arguments (line 1479)
kwargs_81508 = {}
# Getting the type of 're' (line 1479)
re_81503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1479, 15), 're', False)
# Obtaining the member 'compile' of a type (line 1479)
compile_81504 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1479, 15), re_81503, 'compile')
# Calling compile(args, kwargs) (line 1479)
compile_call_result_81509 = invoke(stypy.reporting.localization.Localization(__file__, 1479, 15), compile_81504, *[str_81505, I_81507], **kwargs_81508)

# Assigning a type to the variable 'charselector' (line 1479)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1479, 0), 'charselector', compile_call_result_81509)

# Assigning a Call to a Name (line 1481):

# Assigning a Call to a Name (line 1481):

# Call to compile(...): (line 1481)
# Processing the call arguments (line 1481)
str_81512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1482, 4), 'str', '\\s*(kind\\s*=\\s*(?P<kind>.*?)\\s*(@,@\\s*len\\s*=\\s*(?P<len>.*)|)|(len\\s*=\\s*|)(?P<len2>.*?)\\s*(@,@\\s*(kind\\s*=\\s*|)(?P<kind2>.*)|))\\s*\\Z')
# Getting the type of 're' (line 1482)
re_81513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1482, 142), 're', False)
# Obtaining the member 'I' of a type (line 1482)
I_81514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1482, 142), re_81513, 'I')
# Processing the call keyword arguments (line 1481)
kwargs_81515 = {}
# Getting the type of 're' (line 1481)
re_81510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1481, 17), 're', False)
# Obtaining the member 'compile' of a type (line 1481)
compile_81511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1481, 17), re_81510, 'compile')
# Calling compile(args, kwargs) (line 1481)
compile_call_result_81516 = invoke(stypy.reporting.localization.Localization(__file__, 1481, 17), compile_81511, *[str_81512, I_81514], **kwargs_81515)

# Assigning a type to the variable 'lenkindpattern' (line 1481)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1481, 0), 'lenkindpattern', compile_call_result_81516)

# Assigning a Call to a Name (line 1483):

# Assigning a Call to a Name (line 1483):

# Call to compile(...): (line 1483)
# Processing the call arguments (line 1483)
str_81519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1484, 4), 'str', '\\s*(@\\(@\\s*(?!/)\\s*(?P<array>.*?)\\s*@\\)@\\s*[*]\\s*(?P<len>.*?)|([*]\\s*(?P<len2>.*?)|)\\s*(@\\(@\\s*(?!/)\\s*(?P<array2>.*?)\\s*@\\)@|))\\s*(=\\s*(?P<init>.*?)|(@\\(@|)/\\s*(?P<init2>.*?)\\s*/(@\\)@|)|)\\s*\\Z')
# Getting the type of 're' (line 1484)
re_81520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1484, 202), 're', False)
# Obtaining the member 'I' of a type (line 1484)
I_81521 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1484, 202), re_81520, 'I')
# Processing the call keyword arguments (line 1483)
kwargs_81522 = {}
# Getting the type of 're' (line 1483)
re_81517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 18), 're', False)
# Obtaining the member 'compile' of a type (line 1483)
compile_81518 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1483, 18), re_81517, 'compile')
# Calling compile(args, kwargs) (line 1483)
compile_call_result_81523 = invoke(stypy.reporting.localization.Localization(__file__, 1483, 18), compile_81518, *[str_81519, I_81521], **kwargs_81522)

# Assigning a type to the variable 'lenarraypattern' (line 1483)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1483, 0), 'lenarraypattern', compile_call_result_81523)

@norecursion
def removespaces(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'removespaces'
    module_type_store = module_type_store.open_function_context('removespaces', 1487, 0, False)
    
    # Passed parameters checking function
    removespaces.stypy_localization = localization
    removespaces.stypy_type_of_self = None
    removespaces.stypy_type_store = module_type_store
    removespaces.stypy_function_name = 'removespaces'
    removespaces.stypy_param_names_list = ['expr']
    removespaces.stypy_varargs_param_name = None
    removespaces.stypy_kwargs_param_name = None
    removespaces.stypy_call_defaults = defaults
    removespaces.stypy_call_varargs = varargs
    removespaces.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'removespaces', ['expr'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'removespaces', localization, ['expr'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'removespaces(...)' code ##################

    
    # Assigning a Call to a Name (line 1488):
    
    # Assigning a Call to a Name (line 1488):
    
    # Call to strip(...): (line 1488)
    # Processing the call keyword arguments (line 1488)
    kwargs_81526 = {}
    # Getting the type of 'expr' (line 1488)
    expr_81524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1488, 11), 'expr', False)
    # Obtaining the member 'strip' of a type (line 1488)
    strip_81525 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1488, 11), expr_81524, 'strip')
    # Calling strip(args, kwargs) (line 1488)
    strip_call_result_81527 = invoke(stypy.reporting.localization.Localization(__file__, 1488, 11), strip_81525, *[], **kwargs_81526)
    
    # Assigning a type to the variable 'expr' (line 1488)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1488, 4), 'expr', strip_call_result_81527)
    
    
    
    # Call to len(...): (line 1489)
    # Processing the call arguments (line 1489)
    # Getting the type of 'expr' (line 1489)
    expr_81529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1489, 11), 'expr', False)
    # Processing the call keyword arguments (line 1489)
    kwargs_81530 = {}
    # Getting the type of 'len' (line 1489)
    len_81528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1489, 7), 'len', False)
    # Calling len(args, kwargs) (line 1489)
    len_call_result_81531 = invoke(stypy.reporting.localization.Localization(__file__, 1489, 7), len_81528, *[expr_81529], **kwargs_81530)
    
    int_81532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1489, 20), 'int')
    # Applying the binary operator '<=' (line 1489)
    result_le_81533 = python_operator(stypy.reporting.localization.Localization(__file__, 1489, 7), '<=', len_call_result_81531, int_81532)
    
    # Testing the type of an if condition (line 1489)
    if_condition_81534 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1489, 4), result_le_81533)
    # Assigning a type to the variable 'if_condition_81534' (line 1489)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1489, 4), 'if_condition_81534', if_condition_81534)
    # SSA begins for if statement (line 1489)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'expr' (line 1490)
    expr_81535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1490, 15), 'expr')
    # Assigning a type to the variable 'stypy_return_type' (line 1490)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1490, 8), 'stypy_return_type', expr_81535)
    # SSA join for if statement (line 1489)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Name (line 1491):
    
    # Assigning a Subscript to a Name (line 1491):
    
    # Obtaining the type of the subscript
    int_81536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1491, 17), 'int')
    # Getting the type of 'expr' (line 1491)
    expr_81537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1491, 12), 'expr')
    # Obtaining the member '__getitem__' of a type (line 1491)
    getitem___81538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1491, 12), expr_81537, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1491)
    subscript_call_result_81539 = invoke(stypy.reporting.localization.Localization(__file__, 1491, 12), getitem___81538, int_81536)
    
    # Assigning a type to the variable 'expr2' (line 1491)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1491, 4), 'expr2', subscript_call_result_81539)
    
    
    # Call to range(...): (line 1492)
    # Processing the call arguments (line 1492)
    int_81541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1492, 19), 'int')
    
    # Call to len(...): (line 1492)
    # Processing the call arguments (line 1492)
    # Getting the type of 'expr' (line 1492)
    expr_81543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1492, 26), 'expr', False)
    # Processing the call keyword arguments (line 1492)
    kwargs_81544 = {}
    # Getting the type of 'len' (line 1492)
    len_81542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1492, 22), 'len', False)
    # Calling len(args, kwargs) (line 1492)
    len_call_result_81545 = invoke(stypy.reporting.localization.Localization(__file__, 1492, 22), len_81542, *[expr_81543], **kwargs_81544)
    
    int_81546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1492, 34), 'int')
    # Applying the binary operator '-' (line 1492)
    result_sub_81547 = python_operator(stypy.reporting.localization.Localization(__file__, 1492, 22), '-', len_call_result_81545, int_81546)
    
    # Processing the call keyword arguments (line 1492)
    kwargs_81548 = {}
    # Getting the type of 'range' (line 1492)
    range_81540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1492, 13), 'range', False)
    # Calling range(args, kwargs) (line 1492)
    range_call_result_81549 = invoke(stypy.reporting.localization.Localization(__file__, 1492, 13), range_81540, *[int_81541, result_sub_81547], **kwargs_81548)
    
    # Testing the type of a for loop iterable (line 1492)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1492, 4), range_call_result_81549)
    # Getting the type of the for loop variable (line 1492)
    for_loop_var_81550 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1492, 4), range_call_result_81549)
    # Assigning a type to the variable 'i' (line 1492)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1492, 4), 'i', for_loop_var_81550)
    # SSA begins for a for statement (line 1492)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 1493)
    i_81551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1493, 17), 'i')
    # Getting the type of 'expr' (line 1493)
    expr_81552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1493, 12), 'expr')
    # Obtaining the member '__getitem__' of a type (line 1493)
    getitem___81553 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1493, 12), expr_81552, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1493)
    subscript_call_result_81554 = invoke(stypy.reporting.localization.Localization(__file__, 1493, 12), getitem___81553, i_81551)
    
    str_81555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1493, 23), 'str', ' ')
    # Applying the binary operator '==' (line 1493)
    result_eq_81556 = python_operator(stypy.reporting.localization.Localization(__file__, 1493, 12), '==', subscript_call_result_81554, str_81555)
    
    
    # Evaluating a boolean operation
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 1494)
    i_81557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1494, 19), 'i')
    int_81558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1494, 23), 'int')
    # Applying the binary operator '+' (line 1494)
    result_add_81559 = python_operator(stypy.reporting.localization.Localization(__file__, 1494, 19), '+', i_81557, int_81558)
    
    # Getting the type of 'expr' (line 1494)
    expr_81560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1494, 14), 'expr')
    # Obtaining the member '__getitem__' of a type (line 1494)
    getitem___81561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1494, 14), expr_81560, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1494)
    subscript_call_result_81562 = invoke(stypy.reporting.localization.Localization(__file__, 1494, 14), getitem___81561, result_add_81559)
    
    str_81563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1494, 29), 'str', '()[]{}=+-/* ')
    # Applying the binary operator 'in' (line 1494)
    result_contains_81564 = python_operator(stypy.reporting.localization.Localization(__file__, 1494, 14), 'in', subscript_call_result_81562, str_81563)
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 1495)
    i_81565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1495, 22), 'i')
    int_81566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1495, 26), 'int')
    # Applying the binary operator '-' (line 1495)
    result_sub_81567 = python_operator(stypy.reporting.localization.Localization(__file__, 1495, 22), '-', i_81565, int_81566)
    
    # Getting the type of 'expr' (line 1495)
    expr_81568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1495, 17), 'expr')
    # Obtaining the member '__getitem__' of a type (line 1495)
    getitem___81569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1495, 17), expr_81568, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1495)
    subscript_call_result_81570 = invoke(stypy.reporting.localization.Localization(__file__, 1495, 17), getitem___81569, result_sub_81567)
    
    str_81571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1495, 32), 'str', '()[]{}=+-/* ')
    # Applying the binary operator 'in' (line 1495)
    result_contains_81572 = python_operator(stypy.reporting.localization.Localization(__file__, 1495, 17), 'in', subscript_call_result_81570, str_81571)
    
    # Applying the binary operator 'or' (line 1494)
    result_or_keyword_81573 = python_operator(stypy.reporting.localization.Localization(__file__, 1494, 13), 'or', result_contains_81564, result_contains_81572)
    
    # Applying the binary operator 'and' (line 1493)
    result_and_keyword_81574 = python_operator(stypy.reporting.localization.Localization(__file__, 1493, 12), 'and', result_eq_81556, result_or_keyword_81573)
    
    # Testing the type of an if condition (line 1493)
    if_condition_81575 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1493, 8), result_and_keyword_81574)
    # Assigning a type to the variable 'if_condition_81575' (line 1493)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1493, 8), 'if_condition_81575', if_condition_81575)
    # SSA begins for if statement (line 1493)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 1493)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 1497):
    
    # Assigning a BinOp to a Name (line 1497):
    # Getting the type of 'expr2' (line 1497)
    expr2_81576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 16), 'expr2')
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 1497)
    i_81577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 29), 'i')
    # Getting the type of 'expr' (line 1497)
    expr_81578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 24), 'expr')
    # Obtaining the member '__getitem__' of a type (line 1497)
    getitem___81579 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1497, 24), expr_81578, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1497)
    subscript_call_result_81580 = invoke(stypy.reporting.localization.Localization(__file__, 1497, 24), getitem___81579, i_81577)
    
    # Applying the binary operator '+' (line 1497)
    result_add_81581 = python_operator(stypy.reporting.localization.Localization(__file__, 1497, 16), '+', expr2_81576, subscript_call_result_81580)
    
    # Assigning a type to the variable 'expr2' (line 1497)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1497, 8), 'expr2', result_add_81581)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 1498):
    
    # Assigning a BinOp to a Name (line 1498):
    # Getting the type of 'expr2' (line 1498)
    expr2_81582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1498, 12), 'expr2')
    
    # Obtaining the type of the subscript
    int_81583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1498, 25), 'int')
    # Getting the type of 'expr' (line 1498)
    expr_81584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1498, 20), 'expr')
    # Obtaining the member '__getitem__' of a type (line 1498)
    getitem___81585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1498, 20), expr_81584, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1498)
    subscript_call_result_81586 = invoke(stypy.reporting.localization.Localization(__file__, 1498, 20), getitem___81585, int_81583)
    
    # Applying the binary operator '+' (line 1498)
    result_add_81587 = python_operator(stypy.reporting.localization.Localization(__file__, 1498, 12), '+', expr2_81582, subscript_call_result_81586)
    
    # Assigning a type to the variable 'expr2' (line 1498)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1498, 4), 'expr2', result_add_81587)
    # Getting the type of 'expr2' (line 1499)
    expr2_81588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1499, 11), 'expr2')
    # Assigning a type to the variable 'stypy_return_type' (line 1499)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1499, 4), 'stypy_return_type', expr2_81588)
    
    # ################# End of 'removespaces(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'removespaces' in the type store
    # Getting the type of 'stypy_return_type' (line 1487)
    stypy_return_type_81589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1487, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_81589)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'removespaces'
    return stypy_return_type_81589

# Assigning a type to the variable 'removespaces' (line 1487)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1487, 0), 'removespaces', removespaces)

@norecursion
def markinnerspaces(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'markinnerspaces'
    module_type_store = module_type_store.open_function_context('markinnerspaces', 1502, 0, False)
    
    # Passed parameters checking function
    markinnerspaces.stypy_localization = localization
    markinnerspaces.stypy_type_of_self = None
    markinnerspaces.stypy_type_store = module_type_store
    markinnerspaces.stypy_function_name = 'markinnerspaces'
    markinnerspaces.stypy_param_names_list = ['line']
    markinnerspaces.stypy_varargs_param_name = None
    markinnerspaces.stypy_kwargs_param_name = None
    markinnerspaces.stypy_call_defaults = defaults
    markinnerspaces.stypy_call_varargs = varargs
    markinnerspaces.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'markinnerspaces', ['line'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'markinnerspaces', localization, ['line'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'markinnerspaces(...)' code ##################

    
    # Assigning a Str to a Name (line 1503):
    
    # Assigning a Str to a Name (line 1503):
    str_81590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1503, 8), 'str', '')
    # Assigning a type to the variable 'l' (line 1503)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1503, 4), 'l', str_81590)
    
    # Assigning a Num to a Name (line 1504):
    
    # Assigning a Num to a Name (line 1504):
    int_81591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1504, 8), 'int')
    # Assigning a type to the variable 'f' (line 1504)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1504, 4), 'f', int_81591)
    
    # Assigning a Str to a Name (line 1505):
    
    # Assigning a Str to a Name (line 1505):
    str_81592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1505, 9), 'str', "'")
    # Assigning a type to the variable 'cc' (line 1505)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1505, 4), 'cc', str_81592)
    
    # Assigning a Str to a Name (line 1506):
    
    # Assigning a Str to a Name (line 1506):
    str_81593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1506, 9), 'str', '')
    # Assigning a type to the variable 'cb' (line 1506)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1506, 4), 'cb', str_81593)
    
    # Getting the type of 'line' (line 1507)
    line_81594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1507, 13), 'line')
    # Testing the type of a for loop iterable (line 1507)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1507, 4), line_81594)
    # Getting the type of the for loop variable (line 1507)
    for_loop_var_81595 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1507, 4), line_81594)
    # Assigning a type to the variable 'c' (line 1507)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1507, 4), 'c', for_loop_var_81595)
    # SSA begins for a for statement (line 1507)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'cb' (line 1508)
    cb_81596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1508, 11), 'cb')
    str_81597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1508, 17), 'str', '\\')
    # Applying the binary operator '==' (line 1508)
    result_eq_81598 = python_operator(stypy.reporting.localization.Localization(__file__, 1508, 11), '==', cb_81596, str_81597)
    
    
    # Getting the type of 'c' (line 1508)
    c_81599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1508, 26), 'c')
    
    # Obtaining an instance of the builtin type 'list' (line 1508)
    list_81600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1508, 31), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1508)
    # Adding element type (line 1508)
    str_81601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1508, 32), 'str', '\\')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1508, 31), list_81600, str_81601)
    # Adding element type (line 1508)
    str_81602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1508, 38), 'str', "'")
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1508, 31), list_81600, str_81602)
    # Adding element type (line 1508)
    str_81603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1508, 44), 'str', '"')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1508, 31), list_81600, str_81603)
    
    # Applying the binary operator 'in' (line 1508)
    result_contains_81604 = python_operator(stypy.reporting.localization.Localization(__file__, 1508, 26), 'in', c_81599, list_81600)
    
    # Applying the binary operator 'and' (line 1508)
    result_and_keyword_81605 = python_operator(stypy.reporting.localization.Localization(__file__, 1508, 11), 'and', result_eq_81598, result_contains_81604)
    
    # Testing the type of an if condition (line 1508)
    if_condition_81606 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1508, 8), result_and_keyword_81605)
    # Assigning a type to the variable 'if_condition_81606' (line 1508)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1508, 8), 'if_condition_81606', if_condition_81606)
    # SSA begins for if statement (line 1508)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1509):
    
    # Assigning a BinOp to a Name (line 1509):
    # Getting the type of 'l' (line 1509)
    l_81607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1509, 16), 'l')
    # Getting the type of 'c' (line 1509)
    c_81608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1509, 20), 'c')
    # Applying the binary operator '+' (line 1509)
    result_add_81609 = python_operator(stypy.reporting.localization.Localization(__file__, 1509, 16), '+', l_81607, c_81608)
    
    # Assigning a type to the variable 'l' (line 1509)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1509, 12), 'l', result_add_81609)
    
    # Assigning a Name to a Name (line 1510):
    
    # Assigning a Name to a Name (line 1510):
    # Getting the type of 'c' (line 1510)
    c_81610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1510, 17), 'c')
    # Assigning a type to the variable 'cb' (line 1510)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1510, 12), 'cb', c_81610)
    # SSA join for if statement (line 1508)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'f' (line 1512)
    f_81611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1512, 11), 'f')
    int_81612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1512, 16), 'int')
    # Applying the binary operator '==' (line 1512)
    result_eq_81613 = python_operator(stypy.reporting.localization.Localization(__file__, 1512, 11), '==', f_81611, int_81612)
    
    
    # Getting the type of 'c' (line 1512)
    c_81614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1512, 22), 'c')
    
    # Obtaining an instance of the builtin type 'list' (line 1512)
    list_81615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1512, 27), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1512)
    # Adding element type (line 1512)
    str_81616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1512, 28), 'str', "'")
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1512, 27), list_81615, str_81616)
    # Adding element type (line 1512)
    str_81617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1512, 34), 'str', '"')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1512, 27), list_81615, str_81617)
    
    # Applying the binary operator 'in' (line 1512)
    result_contains_81618 = python_operator(stypy.reporting.localization.Localization(__file__, 1512, 22), 'in', c_81614, list_81615)
    
    # Applying the binary operator 'and' (line 1512)
    result_and_keyword_81619 = python_operator(stypy.reporting.localization.Localization(__file__, 1512, 11), 'and', result_eq_81613, result_contains_81618)
    
    # Testing the type of an if condition (line 1512)
    if_condition_81620 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1512, 8), result_and_keyword_81619)
    # Assigning a type to the variable 'if_condition_81620' (line 1512)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1512, 8), 'if_condition_81620', if_condition_81620)
    # SSA begins for if statement (line 1512)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 1513):
    
    # Assigning a Name to a Name (line 1513):
    # Getting the type of 'c' (line 1513)
    c_81621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1513, 17), 'c')
    # Assigning a type to the variable 'cc' (line 1513)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1513, 12), 'cc', c_81621)
    # SSA join for if statement (line 1512)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'c' (line 1514)
    c_81622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1514, 11), 'c')
    # Getting the type of 'cc' (line 1514)
    cc_81623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1514, 16), 'cc')
    # Applying the binary operator '==' (line 1514)
    result_eq_81624 = python_operator(stypy.reporting.localization.Localization(__file__, 1514, 11), '==', c_81622, cc_81623)
    
    # Testing the type of an if condition (line 1514)
    if_condition_81625 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1514, 8), result_eq_81624)
    # Assigning a type to the variable 'if_condition_81625' (line 1514)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1514, 8), 'if_condition_81625', if_condition_81625)
    # SSA begins for if statement (line 1514)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1515):
    
    # Assigning a BinOp to a Name (line 1515):
    # Getting the type of 'f' (line 1515)
    f_81626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1515, 16), 'f')
    int_81627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1515, 20), 'int')
    # Applying the binary operator '+' (line 1515)
    result_add_81628 = python_operator(stypy.reporting.localization.Localization(__file__, 1515, 16), '+', f_81626, int_81627)
    
    # Assigning a type to the variable 'f' (line 1515)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1515, 12), 'f', result_add_81628)
    # SSA branch for the else part of an if statement (line 1514)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'c' (line 1516)
    c_81629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1516, 13), 'c')
    # Getting the type of 'cc' (line 1516)
    cc_81630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1516, 18), 'cc')
    # Applying the binary operator '==' (line 1516)
    result_eq_81631 = python_operator(stypy.reporting.localization.Localization(__file__, 1516, 13), '==', c_81629, cc_81630)
    
    # Testing the type of an if condition (line 1516)
    if_condition_81632 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1516, 13), result_eq_81631)
    # Assigning a type to the variable 'if_condition_81632' (line 1516)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1516, 13), 'if_condition_81632', if_condition_81632)
    # SSA begins for if statement (line 1516)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1517):
    
    # Assigning a BinOp to a Name (line 1517):
    # Getting the type of 'f' (line 1517)
    f_81633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1517, 16), 'f')
    int_81634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1517, 20), 'int')
    # Applying the binary operator '-' (line 1517)
    result_sub_81635 = python_operator(stypy.reporting.localization.Localization(__file__, 1517, 16), '-', f_81633, int_81634)
    
    # Assigning a type to the variable 'f' (line 1517)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1517, 12), 'f', result_sub_81635)
    # SSA branch for the else part of an if statement (line 1516)
    module_type_store.open_ssa_branch('else')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'c' (line 1518)
    c_81636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1518, 13), 'c')
    str_81637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1518, 18), 'str', ' ')
    # Applying the binary operator '==' (line 1518)
    result_eq_81638 = python_operator(stypy.reporting.localization.Localization(__file__, 1518, 13), '==', c_81636, str_81637)
    
    
    # Getting the type of 'f' (line 1518)
    f_81639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1518, 26), 'f')
    int_81640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1518, 31), 'int')
    # Applying the binary operator '==' (line 1518)
    result_eq_81641 = python_operator(stypy.reporting.localization.Localization(__file__, 1518, 26), '==', f_81639, int_81640)
    
    # Applying the binary operator 'and' (line 1518)
    result_and_keyword_81642 = python_operator(stypy.reporting.localization.Localization(__file__, 1518, 13), 'and', result_eq_81638, result_eq_81641)
    
    # Testing the type of an if condition (line 1518)
    if_condition_81643 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1518, 13), result_and_keyword_81642)
    # Assigning a type to the variable 'if_condition_81643' (line 1518)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1518, 13), 'if_condition_81643', if_condition_81643)
    # SSA begins for if statement (line 1518)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1519):
    
    # Assigning a BinOp to a Name (line 1519):
    # Getting the type of 'l' (line 1519)
    l_81644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1519, 16), 'l')
    str_81645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1519, 20), 'str', '@_@')
    # Applying the binary operator '+' (line 1519)
    result_add_81646 = python_operator(stypy.reporting.localization.Localization(__file__, 1519, 16), '+', l_81644, str_81645)
    
    # Assigning a type to the variable 'l' (line 1519)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1519, 12), 'l', result_add_81646)
    # SSA join for if statement (line 1518)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1516)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1514)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 1521):
    
    # Assigning a BinOp to a Name (line 1521):
    # Getting the type of 'l' (line 1521)
    l_81647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1521, 12), 'l')
    # Getting the type of 'c' (line 1521)
    c_81648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1521, 16), 'c')
    # Applying the binary operator '+' (line 1521)
    result_add_81649 = python_operator(stypy.reporting.localization.Localization(__file__, 1521, 12), '+', l_81647, c_81648)
    
    # Assigning a type to the variable 'l' (line 1521)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1521, 8), 'l', result_add_81649)
    
    # Assigning a Name to a Name (line 1522):
    
    # Assigning a Name to a Name (line 1522):
    # Getting the type of 'c' (line 1522)
    c_81650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1522, 13), 'c')
    # Assigning a type to the variable 'cb' (line 1522)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1522, 8), 'cb', c_81650)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'l' (line 1523)
    l_81651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1523, 11), 'l')
    # Assigning a type to the variable 'stypy_return_type' (line 1523)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1523, 4), 'stypy_return_type', l_81651)
    
    # ################# End of 'markinnerspaces(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'markinnerspaces' in the type store
    # Getting the type of 'stypy_return_type' (line 1502)
    stypy_return_type_81652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1502, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_81652)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'markinnerspaces'
    return stypy_return_type_81652

# Assigning a type to the variable 'markinnerspaces' (line 1502)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1502, 0), 'markinnerspaces', markinnerspaces)

@norecursion
def updatevars(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'updatevars'
    module_type_store = module_type_store.open_function_context('updatevars', 1526, 0, False)
    
    # Passed parameters checking function
    updatevars.stypy_localization = localization
    updatevars.stypy_type_of_self = None
    updatevars.stypy_type_store = module_type_store
    updatevars.stypy_function_name = 'updatevars'
    updatevars.stypy_param_names_list = ['typespec', 'selector', 'attrspec', 'entitydecl']
    updatevars.stypy_varargs_param_name = None
    updatevars.stypy_kwargs_param_name = None
    updatevars.stypy_call_defaults = defaults
    updatevars.stypy_call_varargs = varargs
    updatevars.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'updatevars', ['typespec', 'selector', 'attrspec', 'entitydecl'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'updatevars', localization, ['typespec', 'selector', 'attrspec', 'entitydecl'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'updatevars(...)' code ##################

    # Marking variables as global (line 1527)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 1527, 4), 'groupcache')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 1527, 4), 'groupcounter')
    
    # Assigning a Name to a Name (line 1529):
    
    # Assigning a Name to a Name (line 1529):
    # Getting the type of 'None' (line 1529)
    None_81653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1529, 16), 'None')
    # Assigning a type to the variable 'last_name' (line 1529)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1529, 4), 'last_name', None_81653)
    
    # Assigning a Call to a Tuple (line 1530):
    
    # Assigning a Call to a Name:
    
    # Call to cracktypespec(...): (line 1530)
    # Processing the call arguments (line 1530)
    # Getting the type of 'typespec' (line 1530)
    typespec_81655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1530, 53), 'typespec', False)
    # Getting the type of 'selector' (line 1530)
    selector_81656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1530, 63), 'selector', False)
    # Processing the call keyword arguments (line 1530)
    kwargs_81657 = {}
    # Getting the type of 'cracktypespec' (line 1530)
    cracktypespec_81654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1530, 39), 'cracktypespec', False)
    # Calling cracktypespec(args, kwargs) (line 1530)
    cracktypespec_call_result_81658 = invoke(stypy.reporting.localization.Localization(__file__, 1530, 39), cracktypespec_81654, *[typespec_81655, selector_81656], **kwargs_81657)
    
    # Assigning a type to the variable 'call_assignment_75803' (line 1530)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1530, 4), 'call_assignment_75803', cracktypespec_call_result_81658)
    
    # Assigning a Call to a Name (line 1530):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_81661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1530, 4), 'int')
    # Processing the call keyword arguments
    kwargs_81662 = {}
    # Getting the type of 'call_assignment_75803' (line 1530)
    call_assignment_75803_81659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1530, 4), 'call_assignment_75803', False)
    # Obtaining the member '__getitem__' of a type (line 1530)
    getitem___81660 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1530, 4), call_assignment_75803_81659, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_81663 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___81660, *[int_81661], **kwargs_81662)
    
    # Assigning a type to the variable 'call_assignment_75804' (line 1530)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1530, 4), 'call_assignment_75804', getitem___call_result_81663)
    
    # Assigning a Name to a Name (line 1530):
    # Getting the type of 'call_assignment_75804' (line 1530)
    call_assignment_75804_81664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1530, 4), 'call_assignment_75804')
    # Assigning a type to the variable 'kindselect' (line 1530)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1530, 4), 'kindselect', call_assignment_75804_81664)
    
    # Assigning a Call to a Name (line 1530):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_81667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1530, 4), 'int')
    # Processing the call keyword arguments
    kwargs_81668 = {}
    # Getting the type of 'call_assignment_75803' (line 1530)
    call_assignment_75803_81665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1530, 4), 'call_assignment_75803', False)
    # Obtaining the member '__getitem__' of a type (line 1530)
    getitem___81666 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1530, 4), call_assignment_75803_81665, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_81669 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___81666, *[int_81667], **kwargs_81668)
    
    # Assigning a type to the variable 'call_assignment_75805' (line 1530)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1530, 4), 'call_assignment_75805', getitem___call_result_81669)
    
    # Assigning a Name to a Name (line 1530):
    # Getting the type of 'call_assignment_75805' (line 1530)
    call_assignment_75805_81670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1530, 4), 'call_assignment_75805')
    # Assigning a type to the variable 'charselect' (line 1530)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1530, 16), 'charselect', call_assignment_75805_81670)
    
    # Assigning a Call to a Name (line 1530):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_81673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1530, 4), 'int')
    # Processing the call keyword arguments
    kwargs_81674 = {}
    # Getting the type of 'call_assignment_75803' (line 1530)
    call_assignment_75803_81671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1530, 4), 'call_assignment_75803', False)
    # Obtaining the member '__getitem__' of a type (line 1530)
    getitem___81672 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1530, 4), call_assignment_75803_81671, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_81675 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___81672, *[int_81673], **kwargs_81674)
    
    # Assigning a type to the variable 'call_assignment_75806' (line 1530)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1530, 4), 'call_assignment_75806', getitem___call_result_81675)
    
    # Assigning a Name to a Name (line 1530):
    # Getting the type of 'call_assignment_75806' (line 1530)
    call_assignment_75806_81676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1530, 4), 'call_assignment_75806')
    # Assigning a type to the variable 'typename' (line 1530)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1530, 28), 'typename', call_assignment_75806_81676)
    
    # Getting the type of 'attrspec' (line 1531)
    attrspec_81677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1531, 7), 'attrspec')
    # Testing the type of an if condition (line 1531)
    if_condition_81678 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1531, 4), attrspec_81677)
    # Assigning a type to the variable 'if_condition_81678' (line 1531)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1531, 4), 'if_condition_81678', if_condition_81678)
    # SSA begins for if statement (line 1531)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a ListComp to a Name (line 1532):
    
    # Assigning a ListComp to a Name (line 1532):
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to split(...): (line 1532)
    # Processing the call arguments (line 1532)
    str_81688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1532, 70), 'str', '@,@')
    # Processing the call keyword arguments (line 1532)
    kwargs_81689 = {}
    
    # Call to markoutercomma(...): (line 1532)
    # Processing the call arguments (line 1532)
    # Getting the type of 'attrspec' (line 1532)
    attrspec_81684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1532, 54), 'attrspec', False)
    # Processing the call keyword arguments (line 1532)
    kwargs_81685 = {}
    # Getting the type of 'markoutercomma' (line 1532)
    markoutercomma_81683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1532, 39), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 1532)
    markoutercomma_call_result_81686 = invoke(stypy.reporting.localization.Localization(__file__, 1532, 39), markoutercomma_81683, *[attrspec_81684], **kwargs_81685)
    
    # Obtaining the member 'split' of a type (line 1532)
    split_81687 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1532, 39), markoutercomma_call_result_81686, 'split')
    # Calling split(args, kwargs) (line 1532)
    split_call_result_81690 = invoke(stypy.reporting.localization.Localization(__file__, 1532, 39), split_81687, *[str_81688], **kwargs_81689)
    
    comprehension_81691 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1532, 20), split_call_result_81690)
    # Assigning a type to the variable 'x' (line 1532)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1532, 20), 'x', comprehension_81691)
    
    # Call to strip(...): (line 1532)
    # Processing the call keyword arguments (line 1532)
    kwargs_81681 = {}
    # Getting the type of 'x' (line 1532)
    x_81679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1532, 20), 'x', False)
    # Obtaining the member 'strip' of a type (line 1532)
    strip_81680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1532, 20), x_81679, 'strip')
    # Calling strip(args, kwargs) (line 1532)
    strip_call_result_81682 = invoke(stypy.reporting.localization.Localization(__file__, 1532, 20), strip_81680, *[], **kwargs_81681)
    
    list_81692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1532, 20), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1532, 20), list_81692, strip_call_result_81682)
    # Assigning a type to the variable 'attrspec' (line 1532)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1532, 8), 'attrspec', list_81692)
    
    # Assigning a List to a Name (line 1533):
    
    # Assigning a List to a Name (line 1533):
    
    # Obtaining an instance of the builtin type 'list' (line 1533)
    list_81693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1533, 12), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1533)
    
    # Assigning a type to the variable 'l' (line 1533)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1533, 8), 'l', list_81693)
    
    # Assigning a Call to a Name (line 1534):
    
    # Assigning a Call to a Name (line 1534):
    
    # Call to compile(...): (line 1534)
    # Processing the call arguments (line 1534)
    str_81696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1534, 23), 'str', '(?P<start>[a-zA-Z]+)')
    # Processing the call keyword arguments (line 1534)
    kwargs_81697 = {}
    # Getting the type of 're' (line 1534)
    re_81694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1534, 12), 're', False)
    # Obtaining the member 'compile' of a type (line 1534)
    compile_81695 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1534, 12), re_81694, 'compile')
    # Calling compile(args, kwargs) (line 1534)
    compile_call_result_81698 = invoke(stypy.reporting.localization.Localization(__file__, 1534, 12), compile_81695, *[str_81696], **kwargs_81697)
    
    # Assigning a type to the variable 'c' (line 1534)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1534, 8), 'c', compile_call_result_81698)
    
    # Getting the type of 'attrspec' (line 1535)
    attrspec_81699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1535, 17), 'attrspec')
    # Testing the type of a for loop iterable (line 1535)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1535, 8), attrspec_81699)
    # Getting the type of the for loop variable (line 1535)
    for_loop_var_81700 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1535, 8), attrspec_81699)
    # Assigning a type to the variable 'a' (line 1535)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1535, 8), 'a', for_loop_var_81700)
    # SSA begins for a for statement (line 1535)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'a' (line 1536)
    a_81701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1536, 19), 'a')
    # Applying the 'not' unary operator (line 1536)
    result_not__81702 = python_operator(stypy.reporting.localization.Localization(__file__, 1536, 15), 'not', a_81701)
    
    # Testing the type of an if condition (line 1536)
    if_condition_81703 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1536, 12), result_not__81702)
    # Assigning a type to the variable 'if_condition_81703' (line 1536)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1536, 12), 'if_condition_81703', if_condition_81703)
    # SSA begins for if statement (line 1536)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 1536)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1538):
    
    # Assigning a Call to a Name (line 1538):
    
    # Call to match(...): (line 1538)
    # Processing the call arguments (line 1538)
    # Getting the type of 'a' (line 1538)
    a_81706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1538, 24), 'a', False)
    # Processing the call keyword arguments (line 1538)
    kwargs_81707 = {}
    # Getting the type of 'c' (line 1538)
    c_81704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1538, 16), 'c', False)
    # Obtaining the member 'match' of a type (line 1538)
    match_81705 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1538, 16), c_81704, 'match')
    # Calling match(args, kwargs) (line 1538)
    match_call_result_81708 = invoke(stypy.reporting.localization.Localization(__file__, 1538, 16), match_81705, *[a_81706], **kwargs_81707)
    
    # Assigning a type to the variable 'm' (line 1538)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1538, 12), 'm', match_call_result_81708)
    
    # Getting the type of 'm' (line 1539)
    m_81709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1539, 15), 'm')
    # Testing the type of an if condition (line 1539)
    if_condition_81710 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1539, 12), m_81709)
    # Assigning a type to the variable 'if_condition_81710' (line 1539)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1539, 12), 'if_condition_81710', if_condition_81710)
    # SSA begins for if statement (line 1539)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1540):
    
    # Assigning a Call to a Name (line 1540):
    
    # Call to lower(...): (line 1540)
    # Processing the call keyword arguments (line 1540)
    kwargs_81717 = {}
    
    # Call to group(...): (line 1540)
    # Processing the call arguments (line 1540)
    str_81713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1540, 28), 'str', 'start')
    # Processing the call keyword arguments (line 1540)
    kwargs_81714 = {}
    # Getting the type of 'm' (line 1540)
    m_81711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1540, 20), 'm', False)
    # Obtaining the member 'group' of a type (line 1540)
    group_81712 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1540, 20), m_81711, 'group')
    # Calling group(args, kwargs) (line 1540)
    group_call_result_81715 = invoke(stypy.reporting.localization.Localization(__file__, 1540, 20), group_81712, *[str_81713], **kwargs_81714)
    
    # Obtaining the member 'lower' of a type (line 1540)
    lower_81716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1540, 20), group_call_result_81715, 'lower')
    # Calling lower(args, kwargs) (line 1540)
    lower_call_result_81718 = invoke(stypy.reporting.localization.Localization(__file__, 1540, 20), lower_81716, *[], **kwargs_81717)
    
    # Assigning a type to the variable 's' (line 1540)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1540, 16), 's', lower_call_result_81718)
    
    # Assigning a BinOp to a Name (line 1541):
    
    # Assigning a BinOp to a Name (line 1541):
    # Getting the type of 's' (line 1541)
    s_81719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1541, 20), 's')
    
    # Obtaining the type of the subscript
    
    # Call to len(...): (line 1541)
    # Processing the call arguments (line 1541)
    # Getting the type of 's' (line 1541)
    s_81721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1541, 30), 's', False)
    # Processing the call keyword arguments (line 1541)
    kwargs_81722 = {}
    # Getting the type of 'len' (line 1541)
    len_81720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1541, 26), 'len', False)
    # Calling len(args, kwargs) (line 1541)
    len_call_result_81723 = invoke(stypy.reporting.localization.Localization(__file__, 1541, 26), len_81720, *[s_81721], **kwargs_81722)
    
    slice_81724 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1541, 24), len_call_result_81723, None, None)
    # Getting the type of 'a' (line 1541)
    a_81725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1541, 24), 'a')
    # Obtaining the member '__getitem__' of a type (line 1541)
    getitem___81726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1541, 24), a_81725, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1541)
    subscript_call_result_81727 = invoke(stypy.reporting.localization.Localization(__file__, 1541, 24), getitem___81726, slice_81724)
    
    # Applying the binary operator '+' (line 1541)
    result_add_81728 = python_operator(stypy.reporting.localization.Localization(__file__, 1541, 20), '+', s_81719, subscript_call_result_81727)
    
    # Assigning a type to the variable 'a' (line 1541)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1541, 16), 'a', result_add_81728)
    # SSA join for if statement (line 1539)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 1542)
    # Processing the call arguments (line 1542)
    # Getting the type of 'a' (line 1542)
    a_81731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1542, 21), 'a', False)
    # Processing the call keyword arguments (line 1542)
    kwargs_81732 = {}
    # Getting the type of 'l' (line 1542)
    l_81729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1542, 12), 'l', False)
    # Obtaining the member 'append' of a type (line 1542)
    append_81730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1542, 12), l_81729, 'append')
    # Calling append(args, kwargs) (line 1542)
    append_call_result_81733 = invoke(stypy.reporting.localization.Localization(__file__, 1542, 12), append_81730, *[a_81731], **kwargs_81732)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 1543):
    
    # Assigning a Name to a Name (line 1543):
    # Getting the type of 'l' (line 1543)
    l_81734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1543, 19), 'l')
    # Assigning a type to the variable 'attrspec' (line 1543)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1543, 8), 'attrspec', l_81734)
    # SSA join for if statement (line 1531)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a ListComp to a Name (line 1544):
    
    # Assigning a ListComp to a Name (line 1544):
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to split(...): (line 1544)
    # Processing the call arguments (line 1544)
    str_81744 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1544, 62), 'str', '@,@')
    # Processing the call keyword arguments (line 1544)
    kwargs_81745 = {}
    
    # Call to markoutercomma(...): (line 1544)
    # Processing the call arguments (line 1544)
    # Getting the type of 'entitydecl' (line 1544)
    entitydecl_81740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1544, 44), 'entitydecl', False)
    # Processing the call keyword arguments (line 1544)
    kwargs_81741 = {}
    # Getting the type of 'markoutercomma' (line 1544)
    markoutercomma_81739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1544, 29), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 1544)
    markoutercomma_call_result_81742 = invoke(stypy.reporting.localization.Localization(__file__, 1544, 29), markoutercomma_81739, *[entitydecl_81740], **kwargs_81741)
    
    # Obtaining the member 'split' of a type (line 1544)
    split_81743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1544, 29), markoutercomma_call_result_81742, 'split')
    # Calling split(args, kwargs) (line 1544)
    split_call_result_81746 = invoke(stypy.reporting.localization.Localization(__file__, 1544, 29), split_81743, *[str_81744], **kwargs_81745)
    
    comprehension_81747 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1544, 10), split_call_result_81746)
    # Assigning a type to the variable 'x' (line 1544)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1544, 10), 'x', comprehension_81747)
    
    # Call to strip(...): (line 1544)
    # Processing the call keyword arguments (line 1544)
    kwargs_81737 = {}
    # Getting the type of 'x' (line 1544)
    x_81735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1544, 10), 'x', False)
    # Obtaining the member 'strip' of a type (line 1544)
    strip_81736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1544, 10), x_81735, 'strip')
    # Calling strip(args, kwargs) (line 1544)
    strip_call_result_81738 = invoke(stypy.reporting.localization.Localization(__file__, 1544, 10), strip_81736, *[], **kwargs_81737)
    
    list_81748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1544, 10), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1544, 10), list_81748, strip_call_result_81738)
    # Assigning a type to the variable 'el' (line 1544)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1544, 4), 'el', list_81748)
    
    # Assigning a List to a Name (line 1545):
    
    # Assigning a List to a Name (line 1545):
    
    # Obtaining an instance of the builtin type 'list' (line 1545)
    list_81749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1545, 10), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1545)
    
    # Assigning a type to the variable 'el1' (line 1545)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1545, 4), 'el1', list_81749)
    
    # Getting the type of 'el' (line 1546)
    el_81750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 13), 'el')
    # Testing the type of a for loop iterable (line 1546)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1546, 4), el_81750)
    # Getting the type of the for loop variable (line 1546)
    for_loop_var_81751 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1546, 4), el_81750)
    # Assigning a type to the variable 'e' (line 1546)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1546, 4), 'e', for_loop_var_81751)
    # SSA begins for a for statement (line 1546)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to split(...): (line 1547)
    # Processing the call arguments (line 1547)
    str_81769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1547, 104), 'str', '@ @')
    # Processing the call keyword arguments (line 1547)
    kwargs_81770 = {}
    
    # Call to markoutercomma(...): (line 1547)
    # Processing the call arguments (line 1547)
    
    # Call to removespaces(...): (line 1547)
    # Processing the call arguments (line 1547)
    
    # Call to markinnerspaces(...): (line 1547)
    # Processing the call arguments (line 1547)
    # Getting the type of 'e' (line 1547)
    e_81759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1547, 82), 'e', False)
    # Processing the call keyword arguments (line 1547)
    kwargs_81760 = {}
    # Getting the type of 'markinnerspaces' (line 1547)
    markinnerspaces_81758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1547, 66), 'markinnerspaces', False)
    # Calling markinnerspaces(args, kwargs) (line 1547)
    markinnerspaces_call_result_81761 = invoke(stypy.reporting.localization.Localization(__file__, 1547, 66), markinnerspaces_81758, *[e_81759], **kwargs_81760)
    
    # Processing the call keyword arguments (line 1547)
    kwargs_81762 = {}
    # Getting the type of 'removespaces' (line 1547)
    removespaces_81757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1547, 53), 'removespaces', False)
    # Calling removespaces(args, kwargs) (line 1547)
    removespaces_call_result_81763 = invoke(stypy.reporting.localization.Localization(__file__, 1547, 53), removespaces_81757, *[markinnerspaces_call_result_81761], **kwargs_81762)
    
    # Processing the call keyword arguments (line 1547)
    str_81764 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1547, 93), 'str', ' ')
    keyword_81765 = str_81764
    kwargs_81766 = {'comma': keyword_81765}
    # Getting the type of 'markoutercomma' (line 1547)
    markoutercomma_81756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1547, 38), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 1547)
    markoutercomma_call_result_81767 = invoke(stypy.reporting.localization.Localization(__file__, 1547, 38), markoutercomma_81756, *[removespaces_call_result_81763], **kwargs_81766)
    
    # Obtaining the member 'split' of a type (line 1547)
    split_81768 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1547, 38), markoutercomma_call_result_81767, 'split')
    # Calling split(args, kwargs) (line 1547)
    split_call_result_81771 = invoke(stypy.reporting.localization.Localization(__file__, 1547, 38), split_81768, *[str_81769], **kwargs_81770)
    
    comprehension_81772 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1547, 19), split_call_result_81771)
    # Assigning a type to the variable 'x' (line 1547)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1547, 19), 'x', comprehension_81772)
    
    # Call to strip(...): (line 1547)
    # Processing the call keyword arguments (line 1547)
    kwargs_81754 = {}
    # Getting the type of 'x' (line 1547)
    x_81752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1547, 19), 'x', False)
    # Obtaining the member 'strip' of a type (line 1547)
    strip_81753 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1547, 19), x_81752, 'strip')
    # Calling strip(args, kwargs) (line 1547)
    strip_call_result_81755 = invoke(stypy.reporting.localization.Localization(__file__, 1547, 19), strip_81753, *[], **kwargs_81754)
    
    list_81773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1547, 19), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1547, 19), list_81773, strip_call_result_81755)
    # Testing the type of a for loop iterable (line 1547)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1547, 8), list_81773)
    # Getting the type of the for loop variable (line 1547)
    for_loop_var_81774 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1547, 8), list_81773)
    # Assigning a type to the variable 'e1' (line 1547)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1547, 8), 'e1', for_loop_var_81774)
    # SSA begins for a for statement (line 1547)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'e1' (line 1548)
    e1_81775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1548, 15), 'e1')
    # Testing the type of an if condition (line 1548)
    if_condition_81776 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1548, 12), e1_81775)
    # Assigning a type to the variable 'if_condition_81776' (line 1548)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1548, 12), 'if_condition_81776', if_condition_81776)
    # SSA begins for if statement (line 1548)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1549)
    # Processing the call arguments (line 1549)
    
    # Call to replace(...): (line 1549)
    # Processing the call arguments (line 1549)
    str_81781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1549, 38), 'str', '@_@')
    str_81782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1549, 45), 'str', ' ')
    # Processing the call keyword arguments (line 1549)
    kwargs_81783 = {}
    # Getting the type of 'e1' (line 1549)
    e1_81779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1549, 27), 'e1', False)
    # Obtaining the member 'replace' of a type (line 1549)
    replace_81780 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1549, 27), e1_81779, 'replace')
    # Calling replace(args, kwargs) (line 1549)
    replace_call_result_81784 = invoke(stypy.reporting.localization.Localization(__file__, 1549, 27), replace_81780, *[str_81781, str_81782], **kwargs_81783)
    
    # Processing the call keyword arguments (line 1549)
    kwargs_81785 = {}
    # Getting the type of 'el1' (line 1549)
    el1_81777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1549, 16), 'el1', False)
    # Obtaining the member 'append' of a type (line 1549)
    append_81778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1549, 16), el1_81777, 'append')
    # Calling append(args, kwargs) (line 1549)
    append_call_result_81786 = invoke(stypy.reporting.localization.Localization(__file__, 1549, 16), append_81778, *[replace_call_result_81784], **kwargs_81785)
    
    # SSA join for if statement (line 1548)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'el1' (line 1550)
    el1_81787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1550, 13), 'el1')
    # Testing the type of a for loop iterable (line 1550)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1550, 4), el1_81787)
    # Getting the type of the for loop variable (line 1550)
    for_loop_var_81788 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1550, 4), el1_81787)
    # Assigning a type to the variable 'e' (line 1550)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1550, 4), 'e', for_loop_var_81788)
    # SSA begins for a for statement (line 1550)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 1551):
    
    # Assigning a Call to a Name (line 1551):
    
    # Call to match(...): (line 1551)
    # Processing the call arguments (line 1551)
    # Getting the type of 'e' (line 1551)
    e_81791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1551, 30), 'e', False)
    # Processing the call keyword arguments (line 1551)
    kwargs_81792 = {}
    # Getting the type of 'namepattern' (line 1551)
    namepattern_81789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1551, 12), 'namepattern', False)
    # Obtaining the member 'match' of a type (line 1551)
    match_81790 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1551, 12), namepattern_81789, 'match')
    # Calling match(args, kwargs) (line 1551)
    match_call_result_81793 = invoke(stypy.reporting.localization.Localization(__file__, 1551, 12), match_81790, *[e_81791], **kwargs_81792)
    
    # Assigning a type to the variable 'm' (line 1551)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1551, 8), 'm', match_call_result_81793)
    
    
    # Getting the type of 'm' (line 1552)
    m_81794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1552, 15), 'm')
    # Applying the 'not' unary operator (line 1552)
    result_not__81795 = python_operator(stypy.reporting.localization.Localization(__file__, 1552, 11), 'not', m_81794)
    
    # Testing the type of an if condition (line 1552)
    if_condition_81796 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1552, 8), result_not__81795)
    # Assigning a type to the variable 'if_condition_81796' (line 1552)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1552, 8), 'if_condition_81796', if_condition_81796)
    # SSA begins for if statement (line 1552)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1553)
    # Processing the call arguments (line 1553)
    str_81798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1554, 16), 'str', 'updatevars: no name pattern found for entity=%s. Skipping.\n')
    
    # Call to repr(...): (line 1554)
    # Processing the call arguments (line 1554)
    # Getting the type of 'e' (line 1554)
    e_81800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1554, 87), 'e', False)
    # Processing the call keyword arguments (line 1554)
    kwargs_81801 = {}
    # Getting the type of 'repr' (line 1554)
    repr_81799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1554, 82), 'repr', False)
    # Calling repr(args, kwargs) (line 1554)
    repr_call_result_81802 = invoke(stypy.reporting.localization.Localization(__file__, 1554, 82), repr_81799, *[e_81800], **kwargs_81801)
    
    # Applying the binary operator '%' (line 1554)
    result_mod_81803 = python_operator(stypy.reporting.localization.Localization(__file__, 1554, 16), '%', str_81798, repr_call_result_81802)
    
    # Processing the call keyword arguments (line 1553)
    kwargs_81804 = {}
    # Getting the type of 'outmess' (line 1553)
    outmess_81797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1553, 12), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1553)
    outmess_call_result_81805 = invoke(stypy.reporting.localization.Localization(__file__, 1553, 12), outmess_81797, *[result_mod_81803], **kwargs_81804)
    
    # SSA join for if statement (line 1552)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1556):
    
    # Assigning a Call to a Name (line 1556):
    
    # Call to rmbadname1(...): (line 1556)
    # Processing the call arguments (line 1556)
    
    # Call to group(...): (line 1556)
    # Processing the call arguments (line 1556)
    str_81809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1556, 35), 'str', 'name')
    # Processing the call keyword arguments (line 1556)
    kwargs_81810 = {}
    # Getting the type of 'm' (line 1556)
    m_81807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1556, 27), 'm', False)
    # Obtaining the member 'group' of a type (line 1556)
    group_81808 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1556, 27), m_81807, 'group')
    # Calling group(args, kwargs) (line 1556)
    group_call_result_81811 = invoke(stypy.reporting.localization.Localization(__file__, 1556, 27), group_81808, *[str_81809], **kwargs_81810)
    
    # Processing the call keyword arguments (line 1556)
    kwargs_81812 = {}
    # Getting the type of 'rmbadname1' (line 1556)
    rmbadname1_81806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1556, 16), 'rmbadname1', False)
    # Calling rmbadname1(args, kwargs) (line 1556)
    rmbadname1_call_result_81813 = invoke(stypy.reporting.localization.Localization(__file__, 1556, 16), rmbadname1_81806, *[group_call_result_81811], **kwargs_81812)
    
    # Assigning a type to the variable 'ename' (line 1556)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1556, 8), 'ename', rmbadname1_call_result_81813)
    
    # Assigning a Dict to a Name (line 1557):
    
    # Assigning a Dict to a Name (line 1557):
    
    # Obtaining an instance of the builtin type 'dict' (line 1557)
    dict_81814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1557, 16), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1557)
    
    # Assigning a type to the variable 'edecl' (line 1557)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1557, 8), 'edecl', dict_81814)
    
    
    # Getting the type of 'ename' (line 1558)
    ename_81815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1558, 11), 'ename')
    
    # Obtaining the type of the subscript
    str_81816 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1558, 45), 'str', 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1558)
    groupcounter_81817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1558, 31), 'groupcounter')
    # Getting the type of 'groupcache' (line 1558)
    groupcache_81818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1558, 20), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1558)
    getitem___81819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1558, 20), groupcache_81818, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1558)
    subscript_call_result_81820 = invoke(stypy.reporting.localization.Localization(__file__, 1558, 20), getitem___81819, groupcounter_81817)
    
    # Obtaining the member '__getitem__' of a type (line 1558)
    getitem___81821 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1558, 20), subscript_call_result_81820, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1558)
    subscript_call_result_81822 = invoke(stypy.reporting.localization.Localization(__file__, 1558, 20), getitem___81821, str_81816)
    
    # Applying the binary operator 'in' (line 1558)
    result_contains_81823 = python_operator(stypy.reporting.localization.Localization(__file__, 1558, 11), 'in', ename_81815, subscript_call_result_81822)
    
    # Testing the type of an if condition (line 1558)
    if_condition_81824 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1558, 8), result_contains_81823)
    # Assigning a type to the variable 'if_condition_81824' (line 1558)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1558, 8), 'if_condition_81824', if_condition_81824)
    # SSA begins for if statement (line 1558)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1559):
    
    # Assigning a Call to a Name (line 1559):
    
    # Call to copy(...): (line 1559)
    # Processing the call keyword arguments (line 1559)
    kwargs_81836 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'ename' (line 1559)
    ename_81825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 53), 'ename', False)
    
    # Obtaining the type of the subscript
    str_81826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1559, 45), 'str', 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1559)
    groupcounter_81827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 31), 'groupcounter', False)
    # Getting the type of 'groupcache' (line 1559)
    groupcache_81828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 20), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 1559)
    getitem___81829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1559, 20), groupcache_81828, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1559)
    subscript_call_result_81830 = invoke(stypy.reporting.localization.Localization(__file__, 1559, 20), getitem___81829, groupcounter_81827)
    
    # Obtaining the member '__getitem__' of a type (line 1559)
    getitem___81831 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1559, 20), subscript_call_result_81830, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1559)
    subscript_call_result_81832 = invoke(stypy.reporting.localization.Localization(__file__, 1559, 20), getitem___81831, str_81826)
    
    # Obtaining the member '__getitem__' of a type (line 1559)
    getitem___81833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1559, 20), subscript_call_result_81832, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1559)
    subscript_call_result_81834 = invoke(stypy.reporting.localization.Localization(__file__, 1559, 20), getitem___81833, ename_81825)
    
    # Obtaining the member 'copy' of a type (line 1559)
    copy_81835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1559, 20), subscript_call_result_81834, 'copy')
    # Calling copy(args, kwargs) (line 1559)
    copy_call_result_81837 = invoke(stypy.reporting.localization.Localization(__file__, 1559, 20), copy_81835, *[], **kwargs_81836)
    
    # Assigning a type to the variable 'edecl' (line 1559)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1559, 12), 'edecl', copy_call_result_81837)
    
    # Assigning a Compare to a Name (line 1560):
    
    # Assigning a Compare to a Name (line 1560):
    
    str_81838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1560, 31), 'str', 'typespec')
    # Getting the type of 'edecl' (line 1560)
    edecl_81839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1560, 49), 'edecl')
    # Applying the binary operator 'notin' (line 1560)
    result_contains_81840 = python_operator(stypy.reporting.localization.Localization(__file__, 1560, 31), 'notin', str_81838, edecl_81839)
    
    # Assigning a type to the variable 'not_has_typespec' (line 1560)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1560, 12), 'not_has_typespec', result_contains_81840)
    
    # Getting the type of 'not_has_typespec' (line 1561)
    not_has_typespec_81841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1561, 15), 'not_has_typespec')
    # Testing the type of an if condition (line 1561)
    if_condition_81842 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1561, 12), not_has_typespec_81841)
    # Assigning a type to the variable 'if_condition_81842' (line 1561)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1561, 12), 'if_condition_81842', if_condition_81842)
    # SSA begins for if statement (line 1561)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Subscript (line 1562):
    
    # Assigning a Name to a Subscript (line 1562):
    # Getting the type of 'typespec' (line 1562)
    typespec_81843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1562, 36), 'typespec')
    # Getting the type of 'edecl' (line 1562)
    edecl_81844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1562, 16), 'edecl')
    str_81845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1562, 22), 'str', 'typespec')
    # Storing an element on a container (line 1562)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1562, 16), edecl_81844, (str_81845, typespec_81843))
    # SSA branch for the else part of an if statement (line 1561)
    module_type_store.open_ssa_branch('else')
    
    
    # Evaluating a boolean operation
    # Getting the type of 'typespec' (line 1563)
    typespec_81846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1563, 17), 'typespec')
    
    
    # Getting the type of 'typespec' (line 1563)
    typespec_81847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1563, 35), 'typespec')
    
    # Obtaining the type of the subscript
    str_81848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1563, 53), 'str', 'typespec')
    # Getting the type of 'edecl' (line 1563)
    edecl_81849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1563, 47), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1563)
    getitem___81850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1563, 47), edecl_81849, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1563)
    subscript_call_result_81851 = invoke(stypy.reporting.localization.Localization(__file__, 1563, 47), getitem___81850, str_81848)
    
    # Applying the binary operator '==' (line 1563)
    result_eq_81852 = python_operator(stypy.reporting.localization.Localization(__file__, 1563, 35), '==', typespec_81847, subscript_call_result_81851)
    
    # Applying the 'not' unary operator (line 1563)
    result_not__81853 = python_operator(stypy.reporting.localization.Localization(__file__, 1563, 31), 'not', result_eq_81852)
    
    # Applying the binary operator 'and' (line 1563)
    result_and_keyword_81854 = python_operator(stypy.reporting.localization.Localization(__file__, 1563, 17), 'and', typespec_81846, result_not__81853)
    
    # Testing the type of an if condition (line 1563)
    if_condition_81855 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1563, 17), result_and_keyword_81854)
    # Assigning a type to the variable 'if_condition_81855' (line 1563)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1563, 17), 'if_condition_81855', if_condition_81855)
    # SSA begins for if statement (line 1563)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1564)
    # Processing the call arguments (line 1564)
    str_81857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1564, 24), 'str', 'updatevars: attempt to change the type of "%s" ("%s") to "%s". Ignoring.\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1565)
    tuple_81858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1565, 20), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1565)
    # Adding element type (line 1565)
    # Getting the type of 'ename' (line 1565)
    ename_81859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1565, 20), 'ename', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1565, 20), tuple_81858, ename_81859)
    # Adding element type (line 1565)
    
    # Obtaining the type of the subscript
    str_81860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1565, 33), 'str', 'typespec')
    # Getting the type of 'edecl' (line 1565)
    edecl_81861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1565, 27), 'edecl', False)
    # Obtaining the member '__getitem__' of a type (line 1565)
    getitem___81862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1565, 27), edecl_81861, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1565)
    subscript_call_result_81863 = invoke(stypy.reporting.localization.Localization(__file__, 1565, 27), getitem___81862, str_81860)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1565, 20), tuple_81858, subscript_call_result_81863)
    # Adding element type (line 1565)
    # Getting the type of 'typespec' (line 1565)
    typespec_81864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1565, 46), 'typespec', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1565, 20), tuple_81858, typespec_81864)
    
    # Applying the binary operator '%' (line 1564)
    result_mod_81865 = python_operator(stypy.reporting.localization.Localization(__file__, 1564, 24), '%', str_81857, tuple_81858)
    
    # Processing the call keyword arguments (line 1564)
    kwargs_81866 = {}
    # Getting the type of 'outmess' (line 1564)
    outmess_81856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1564, 16), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1564)
    outmess_call_result_81867 = invoke(stypy.reporting.localization.Localization(__file__, 1564, 16), outmess_81856, *[result_mod_81865], **kwargs_81866)
    
    # SSA join for if statement (line 1563)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1561)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_81868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1566, 15), 'str', 'kindselector')
    # Getting the type of 'edecl' (line 1566)
    edecl_81869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1566, 37), 'edecl')
    # Applying the binary operator 'notin' (line 1566)
    result_contains_81870 = python_operator(stypy.reporting.localization.Localization(__file__, 1566, 15), 'notin', str_81868, edecl_81869)
    
    # Testing the type of an if condition (line 1566)
    if_condition_81871 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1566, 12), result_contains_81870)
    # Assigning a type to the variable 'if_condition_81871' (line 1566)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1566, 12), 'if_condition_81871', if_condition_81871)
    # SSA begins for if statement (line 1566)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Subscript (line 1567):
    
    # Assigning a Call to a Subscript (line 1567):
    
    # Call to copy(...): (line 1567)
    # Processing the call arguments (line 1567)
    # Getting the type of 'kindselect' (line 1567)
    kindselect_81874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1567, 50), 'kindselect', False)
    # Processing the call keyword arguments (line 1567)
    kwargs_81875 = {}
    # Getting the type of 'copy' (line 1567)
    copy_81872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1567, 40), 'copy', False)
    # Obtaining the member 'copy' of a type (line 1567)
    copy_81873 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1567, 40), copy_81872, 'copy')
    # Calling copy(args, kwargs) (line 1567)
    copy_call_result_81876 = invoke(stypy.reporting.localization.Localization(__file__, 1567, 40), copy_81873, *[kindselect_81874], **kwargs_81875)
    
    # Getting the type of 'edecl' (line 1567)
    edecl_81877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1567, 16), 'edecl')
    str_81878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1567, 22), 'str', 'kindselector')
    # Storing an element on a container (line 1567)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1567, 16), edecl_81877, (str_81878, copy_call_result_81876))
    # SSA branch for the else part of an if statement (line 1566)
    module_type_store.open_ssa_branch('else')
    
    # Getting the type of 'kindselect' (line 1568)
    kindselect_81879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1568, 17), 'kindselect')
    # Testing the type of an if condition (line 1568)
    if_condition_81880 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1568, 17), kindselect_81879)
    # Assigning a type to the variable 'if_condition_81880' (line 1568)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1568, 17), 'if_condition_81880', if_condition_81880)
    # SSA begins for if statement (line 1568)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Call to list(...): (line 1569)
    # Processing the call arguments (line 1569)
    
    # Call to keys(...): (line 1569)
    # Processing the call keyword arguments (line 1569)
    kwargs_81884 = {}
    # Getting the type of 'kindselect' (line 1569)
    kindselect_81882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1569, 30), 'kindselect', False)
    # Obtaining the member 'keys' of a type (line 1569)
    keys_81883 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1569, 30), kindselect_81882, 'keys')
    # Calling keys(args, kwargs) (line 1569)
    keys_call_result_81885 = invoke(stypy.reporting.localization.Localization(__file__, 1569, 30), keys_81883, *[], **kwargs_81884)
    
    # Processing the call keyword arguments (line 1569)
    kwargs_81886 = {}
    # Getting the type of 'list' (line 1569)
    list_81881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1569, 25), 'list', False)
    # Calling list(args, kwargs) (line 1569)
    list_call_result_81887 = invoke(stypy.reporting.localization.Localization(__file__, 1569, 25), list_81881, *[keys_call_result_81885], **kwargs_81886)
    
    # Testing the type of a for loop iterable (line 1569)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1569, 16), list_call_result_81887)
    # Getting the type of the for loop variable (line 1569)
    for_loop_var_81888 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1569, 16), list_call_result_81887)
    # Assigning a type to the variable 'k' (line 1569)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1569, 16), 'k', for_loop_var_81888)
    # SSA begins for a for statement (line 1569)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'k' (line 1570)
    k_81889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1570, 23), 'k')
    
    # Obtaining the type of the subscript
    str_81890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1570, 34), 'str', 'kindselector')
    # Getting the type of 'edecl' (line 1570)
    edecl_81891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1570, 28), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1570)
    getitem___81892 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1570, 28), edecl_81891, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1570)
    subscript_call_result_81893 = invoke(stypy.reporting.localization.Localization(__file__, 1570, 28), getitem___81892, str_81890)
    
    # Applying the binary operator 'in' (line 1570)
    result_contains_81894 = python_operator(stypy.reporting.localization.Localization(__file__, 1570, 23), 'in', k_81889, subscript_call_result_81893)
    
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1570)
    k_81895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1570, 70), 'k')
    # Getting the type of 'kindselect' (line 1570)
    kindselect_81896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1570, 59), 'kindselect')
    # Obtaining the member '__getitem__' of a type (line 1570)
    getitem___81897 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1570, 59), kindselect_81896, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1570)
    subscript_call_result_81898 = invoke(stypy.reporting.localization.Localization(__file__, 1570, 59), getitem___81897, k_81895)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1570)
    k_81899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1570, 98), 'k')
    
    # Obtaining the type of the subscript
    str_81900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1570, 82), 'str', 'kindselector')
    # Getting the type of 'edecl' (line 1570)
    edecl_81901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1570, 76), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1570)
    getitem___81902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1570, 76), edecl_81901, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1570)
    subscript_call_result_81903 = invoke(stypy.reporting.localization.Localization(__file__, 1570, 76), getitem___81902, str_81900)
    
    # Obtaining the member '__getitem__' of a type (line 1570)
    getitem___81904 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1570, 76), subscript_call_result_81903, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1570)
    subscript_call_result_81905 = invoke(stypy.reporting.localization.Localization(__file__, 1570, 76), getitem___81904, k_81899)
    
    # Applying the binary operator '==' (line 1570)
    result_eq_81906 = python_operator(stypy.reporting.localization.Localization(__file__, 1570, 59), '==', subscript_call_result_81898, subscript_call_result_81905)
    
    # Applying the 'not' unary operator (line 1570)
    result_not__81907 = python_operator(stypy.reporting.localization.Localization(__file__, 1570, 55), 'not', result_eq_81906)
    
    # Applying the binary operator 'and' (line 1570)
    result_and_keyword_81908 = python_operator(stypy.reporting.localization.Localization(__file__, 1570, 23), 'and', result_contains_81894, result_not__81907)
    
    # Testing the type of an if condition (line 1570)
    if_condition_81909 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1570, 20), result_and_keyword_81908)
    # Assigning a type to the variable 'if_condition_81909' (line 1570)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1570, 20), 'if_condition_81909', if_condition_81909)
    # SSA begins for if statement (line 1570)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1571)
    # Processing the call arguments (line 1571)
    str_81911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1571, 32), 'str', 'updatevars: attempt to change the kindselector "%s" of "%s" ("%s") to "%s". Ignoring.\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1572)
    tuple_81912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1572, 28), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1572)
    # Adding element type (line 1572)
    # Getting the type of 'k' (line 1572)
    k_81913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1572, 28), 'k', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1572, 28), tuple_81912, k_81913)
    # Adding element type (line 1572)
    # Getting the type of 'ename' (line 1572)
    ename_81914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1572, 31), 'ename', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1572, 28), tuple_81912, ename_81914)
    # Adding element type (line 1572)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1572)
    k_81915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1572, 60), 'k', False)
    
    # Obtaining the type of the subscript
    str_81916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1572, 44), 'str', 'kindselector')
    # Getting the type of 'edecl' (line 1572)
    edecl_81917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1572, 38), 'edecl', False)
    # Obtaining the member '__getitem__' of a type (line 1572)
    getitem___81918 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1572, 38), edecl_81917, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1572)
    subscript_call_result_81919 = invoke(stypy.reporting.localization.Localization(__file__, 1572, 38), getitem___81918, str_81916)
    
    # Obtaining the member '__getitem__' of a type (line 1572)
    getitem___81920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1572, 38), subscript_call_result_81919, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1572)
    subscript_call_result_81921 = invoke(stypy.reporting.localization.Localization(__file__, 1572, 38), getitem___81920, k_81915)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1572, 28), tuple_81912, subscript_call_result_81921)
    # Adding element type (line 1572)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1572)
    k_81922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1572, 75), 'k', False)
    # Getting the type of 'kindselect' (line 1572)
    kindselect_81923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1572, 64), 'kindselect', False)
    # Obtaining the member '__getitem__' of a type (line 1572)
    getitem___81924 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1572, 64), kindselect_81923, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1572)
    subscript_call_result_81925 = invoke(stypy.reporting.localization.Localization(__file__, 1572, 64), getitem___81924, k_81922)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1572, 28), tuple_81912, subscript_call_result_81925)
    
    # Applying the binary operator '%' (line 1571)
    result_mod_81926 = python_operator(stypy.reporting.localization.Localization(__file__, 1571, 32), '%', str_81911, tuple_81912)
    
    # Processing the call keyword arguments (line 1571)
    kwargs_81927 = {}
    # Getting the type of 'outmess' (line 1571)
    outmess_81910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1571, 24), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1571)
    outmess_call_result_81928 = invoke(stypy.reporting.localization.Localization(__file__, 1571, 24), outmess_81910, *[result_mod_81926], **kwargs_81927)
    
    # SSA branch for the else part of an if statement (line 1570)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Subscript (line 1574):
    
    # Assigning a Call to a Subscript (line 1574):
    
    # Call to copy(...): (line 1574)
    # Processing the call arguments (line 1574)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1574)
    k_81931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1574, 72), 'k', False)
    # Getting the type of 'kindselect' (line 1574)
    kindselect_81932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1574, 61), 'kindselect', False)
    # Obtaining the member '__getitem__' of a type (line 1574)
    getitem___81933 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1574, 61), kindselect_81932, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1574)
    subscript_call_result_81934 = invoke(stypy.reporting.localization.Localization(__file__, 1574, 61), getitem___81933, k_81931)
    
    # Processing the call keyword arguments (line 1574)
    kwargs_81935 = {}
    # Getting the type of 'copy' (line 1574)
    copy_81929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1574, 51), 'copy', False)
    # Obtaining the member 'copy' of a type (line 1574)
    copy_81930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1574, 51), copy_81929, 'copy')
    # Calling copy(args, kwargs) (line 1574)
    copy_call_result_81936 = invoke(stypy.reporting.localization.Localization(__file__, 1574, 51), copy_81930, *[subscript_call_result_81934], **kwargs_81935)
    
    
    # Obtaining the type of the subscript
    str_81937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1574, 30), 'str', 'kindselector')
    # Getting the type of 'edecl' (line 1574)
    edecl_81938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1574, 24), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1574)
    getitem___81939 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1574, 24), edecl_81938, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1574)
    subscript_call_result_81940 = invoke(stypy.reporting.localization.Localization(__file__, 1574, 24), getitem___81939, str_81937)
    
    # Getting the type of 'k' (line 1574)
    k_81941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1574, 46), 'k')
    # Storing an element on a container (line 1574)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1574, 24), subscript_call_result_81940, (k_81941, copy_call_result_81936))
    # SSA join for if statement (line 1570)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1568)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1566)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    str_81942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1575, 15), 'str', 'charselector')
    # Getting the type of 'edecl' (line 1575)
    edecl_81943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1575, 37), 'edecl')
    # Applying the binary operator 'notin' (line 1575)
    result_contains_81944 = python_operator(stypy.reporting.localization.Localization(__file__, 1575, 15), 'notin', str_81942, edecl_81943)
    
    # Getting the type of 'charselect' (line 1575)
    charselect_81945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1575, 47), 'charselect')
    # Applying the binary operator 'and' (line 1575)
    result_and_keyword_81946 = python_operator(stypy.reporting.localization.Localization(__file__, 1575, 15), 'and', result_contains_81944, charselect_81945)
    
    # Testing the type of an if condition (line 1575)
    if_condition_81947 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1575, 12), result_and_keyword_81946)
    # Assigning a type to the variable 'if_condition_81947' (line 1575)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1575, 12), 'if_condition_81947', if_condition_81947)
    # SSA begins for if statement (line 1575)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'not_has_typespec' (line 1576)
    not_has_typespec_81948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1576, 19), 'not_has_typespec')
    # Testing the type of an if condition (line 1576)
    if_condition_81949 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1576, 16), not_has_typespec_81948)
    # Assigning a type to the variable 'if_condition_81949' (line 1576)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1576, 16), 'if_condition_81949', if_condition_81949)
    # SSA begins for if statement (line 1576)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Subscript (line 1577):
    
    # Assigning a Name to a Subscript (line 1577):
    # Getting the type of 'charselect' (line 1577)
    charselect_81950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1577, 44), 'charselect')
    # Getting the type of 'edecl' (line 1577)
    edecl_81951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1577, 20), 'edecl')
    str_81952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1577, 26), 'str', 'charselector')
    # Storing an element on a container (line 1577)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1577, 20), edecl_81951, (str_81952, charselect_81950))
    # SSA branch for the else part of an if statement (line 1576)
    module_type_store.open_ssa_branch('else')
    
    # Call to errmess(...): (line 1579)
    # Processing the call arguments (line 1579)
    str_81954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1579, 28), 'str', 'updatevars:%s: attempt to change empty charselector to %r. Ignoring.\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1580)
    tuple_81955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1580, 31), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1580)
    # Adding element type (line 1580)
    # Getting the type of 'ename' (line 1580)
    ename_81956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1580, 31), 'ename', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1580, 31), tuple_81955, ename_81956)
    # Adding element type (line 1580)
    # Getting the type of 'charselect' (line 1580)
    charselect_81957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1580, 38), 'charselect', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1580, 31), tuple_81955, charselect_81957)
    
    # Applying the binary operator '%' (line 1579)
    result_mod_81958 = python_operator(stypy.reporting.localization.Localization(__file__, 1579, 28), '%', str_81954, tuple_81955)
    
    # Processing the call keyword arguments (line 1579)
    kwargs_81959 = {}
    # Getting the type of 'errmess' (line 1579)
    errmess_81953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1579, 20), 'errmess', False)
    # Calling errmess(args, kwargs) (line 1579)
    errmess_call_result_81960 = invoke(stypy.reporting.localization.Localization(__file__, 1579, 20), errmess_81953, *[result_mod_81958], **kwargs_81959)
    
    # SSA join for if statement (line 1576)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1575)
    module_type_store.open_ssa_branch('else')
    
    # Getting the type of 'charselect' (line 1581)
    charselect_81961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1581, 17), 'charselect')
    # Testing the type of an if condition (line 1581)
    if_condition_81962 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1581, 17), charselect_81961)
    # Assigning a type to the variable 'if_condition_81962' (line 1581)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1581, 17), 'if_condition_81962', if_condition_81962)
    # SSA begins for if statement (line 1581)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Call to list(...): (line 1582)
    # Processing the call arguments (line 1582)
    
    # Call to keys(...): (line 1582)
    # Processing the call keyword arguments (line 1582)
    kwargs_81966 = {}
    # Getting the type of 'charselect' (line 1582)
    charselect_81964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1582, 30), 'charselect', False)
    # Obtaining the member 'keys' of a type (line 1582)
    keys_81965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1582, 30), charselect_81964, 'keys')
    # Calling keys(args, kwargs) (line 1582)
    keys_call_result_81967 = invoke(stypy.reporting.localization.Localization(__file__, 1582, 30), keys_81965, *[], **kwargs_81966)
    
    # Processing the call keyword arguments (line 1582)
    kwargs_81968 = {}
    # Getting the type of 'list' (line 1582)
    list_81963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1582, 25), 'list', False)
    # Calling list(args, kwargs) (line 1582)
    list_call_result_81969 = invoke(stypy.reporting.localization.Localization(__file__, 1582, 25), list_81963, *[keys_call_result_81967], **kwargs_81968)
    
    # Testing the type of a for loop iterable (line 1582)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1582, 16), list_call_result_81969)
    # Getting the type of the for loop variable (line 1582)
    for_loop_var_81970 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1582, 16), list_call_result_81969)
    # Assigning a type to the variable 'k' (line 1582)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1582, 16), 'k', for_loop_var_81970)
    # SSA begins for a for statement (line 1582)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'k' (line 1583)
    k_81971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1583, 23), 'k')
    
    # Obtaining the type of the subscript
    str_81972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1583, 34), 'str', 'charselector')
    # Getting the type of 'edecl' (line 1583)
    edecl_81973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1583, 28), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1583)
    getitem___81974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1583, 28), edecl_81973, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1583)
    subscript_call_result_81975 = invoke(stypy.reporting.localization.Localization(__file__, 1583, 28), getitem___81974, str_81972)
    
    # Applying the binary operator 'in' (line 1583)
    result_contains_81976 = python_operator(stypy.reporting.localization.Localization(__file__, 1583, 23), 'in', k_81971, subscript_call_result_81975)
    
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1583)
    k_81977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1583, 70), 'k')
    # Getting the type of 'charselect' (line 1583)
    charselect_81978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1583, 59), 'charselect')
    # Obtaining the member '__getitem__' of a type (line 1583)
    getitem___81979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1583, 59), charselect_81978, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1583)
    subscript_call_result_81980 = invoke(stypy.reporting.localization.Localization(__file__, 1583, 59), getitem___81979, k_81977)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1583)
    k_81981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1583, 98), 'k')
    
    # Obtaining the type of the subscript
    str_81982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1583, 82), 'str', 'charselector')
    # Getting the type of 'edecl' (line 1583)
    edecl_81983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1583, 76), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1583)
    getitem___81984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1583, 76), edecl_81983, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1583)
    subscript_call_result_81985 = invoke(stypy.reporting.localization.Localization(__file__, 1583, 76), getitem___81984, str_81982)
    
    # Obtaining the member '__getitem__' of a type (line 1583)
    getitem___81986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1583, 76), subscript_call_result_81985, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1583)
    subscript_call_result_81987 = invoke(stypy.reporting.localization.Localization(__file__, 1583, 76), getitem___81986, k_81981)
    
    # Applying the binary operator '==' (line 1583)
    result_eq_81988 = python_operator(stypy.reporting.localization.Localization(__file__, 1583, 59), '==', subscript_call_result_81980, subscript_call_result_81987)
    
    # Applying the 'not' unary operator (line 1583)
    result_not__81989 = python_operator(stypy.reporting.localization.Localization(__file__, 1583, 55), 'not', result_eq_81988)
    
    # Applying the binary operator 'and' (line 1583)
    result_and_keyword_81990 = python_operator(stypy.reporting.localization.Localization(__file__, 1583, 23), 'and', result_contains_81976, result_not__81989)
    
    # Testing the type of an if condition (line 1583)
    if_condition_81991 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1583, 20), result_and_keyword_81990)
    # Assigning a type to the variable 'if_condition_81991' (line 1583)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1583, 20), 'if_condition_81991', if_condition_81991)
    # SSA begins for if statement (line 1583)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1584)
    # Processing the call arguments (line 1584)
    str_81993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1584, 32), 'str', 'updatevars: attempt to change the charselector "%s" of "%s" ("%s") to "%s". Ignoring.\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1585)
    tuple_81994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1585, 28), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1585)
    # Adding element type (line 1585)
    # Getting the type of 'k' (line 1585)
    k_81995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 28), 'k', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1585, 28), tuple_81994, k_81995)
    # Adding element type (line 1585)
    # Getting the type of 'ename' (line 1585)
    ename_81996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 31), 'ename', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1585, 28), tuple_81994, ename_81996)
    # Adding element type (line 1585)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1585)
    k_81997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 60), 'k', False)
    
    # Obtaining the type of the subscript
    str_81998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1585, 44), 'str', 'charselector')
    # Getting the type of 'edecl' (line 1585)
    edecl_81999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 38), 'edecl', False)
    # Obtaining the member '__getitem__' of a type (line 1585)
    getitem___82000 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1585, 38), edecl_81999, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1585)
    subscript_call_result_82001 = invoke(stypy.reporting.localization.Localization(__file__, 1585, 38), getitem___82000, str_81998)
    
    # Obtaining the member '__getitem__' of a type (line 1585)
    getitem___82002 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1585, 38), subscript_call_result_82001, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1585)
    subscript_call_result_82003 = invoke(stypy.reporting.localization.Localization(__file__, 1585, 38), getitem___82002, k_81997)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1585, 28), tuple_81994, subscript_call_result_82003)
    # Adding element type (line 1585)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1585)
    k_82004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 75), 'k', False)
    # Getting the type of 'charselect' (line 1585)
    charselect_82005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 64), 'charselect', False)
    # Obtaining the member '__getitem__' of a type (line 1585)
    getitem___82006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1585, 64), charselect_82005, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1585)
    subscript_call_result_82007 = invoke(stypy.reporting.localization.Localization(__file__, 1585, 64), getitem___82006, k_82004)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1585, 28), tuple_81994, subscript_call_result_82007)
    
    # Applying the binary operator '%' (line 1584)
    result_mod_82008 = python_operator(stypy.reporting.localization.Localization(__file__, 1584, 32), '%', str_81993, tuple_81994)
    
    # Processing the call keyword arguments (line 1584)
    kwargs_82009 = {}
    # Getting the type of 'outmess' (line 1584)
    outmess_81992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1584, 24), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1584)
    outmess_call_result_82010 = invoke(stypy.reporting.localization.Localization(__file__, 1584, 24), outmess_81992, *[result_mod_82008], **kwargs_82009)
    
    # SSA branch for the else part of an if statement (line 1583)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Subscript (line 1587):
    
    # Assigning a Call to a Subscript (line 1587):
    
    # Call to copy(...): (line 1587)
    # Processing the call arguments (line 1587)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1587)
    k_82013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 72), 'k', False)
    # Getting the type of 'charselect' (line 1587)
    charselect_82014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 61), 'charselect', False)
    # Obtaining the member '__getitem__' of a type (line 1587)
    getitem___82015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1587, 61), charselect_82014, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1587)
    subscript_call_result_82016 = invoke(stypy.reporting.localization.Localization(__file__, 1587, 61), getitem___82015, k_82013)
    
    # Processing the call keyword arguments (line 1587)
    kwargs_82017 = {}
    # Getting the type of 'copy' (line 1587)
    copy_82011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 51), 'copy', False)
    # Obtaining the member 'copy' of a type (line 1587)
    copy_82012 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1587, 51), copy_82011, 'copy')
    # Calling copy(args, kwargs) (line 1587)
    copy_call_result_82018 = invoke(stypy.reporting.localization.Localization(__file__, 1587, 51), copy_82012, *[subscript_call_result_82016], **kwargs_82017)
    
    
    # Obtaining the type of the subscript
    str_82019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1587, 30), 'str', 'charselector')
    # Getting the type of 'edecl' (line 1587)
    edecl_82020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 24), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1587)
    getitem___82021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1587, 24), edecl_82020, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1587)
    subscript_call_result_82022 = invoke(stypy.reporting.localization.Localization(__file__, 1587, 24), getitem___82021, str_82019)
    
    # Getting the type of 'k' (line 1587)
    k_82023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 46), 'k')
    # Storing an element on a container (line 1587)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1587, 24), subscript_call_result_82022, (k_82023, copy_call_result_82018))
    # SSA join for if statement (line 1583)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1581)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1575)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_82024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1588, 15), 'str', 'typename')
    # Getting the type of 'edecl' (line 1588)
    edecl_82025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1588, 33), 'edecl')
    # Applying the binary operator 'notin' (line 1588)
    result_contains_82026 = python_operator(stypy.reporting.localization.Localization(__file__, 1588, 15), 'notin', str_82024, edecl_82025)
    
    # Testing the type of an if condition (line 1588)
    if_condition_82027 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1588, 12), result_contains_82026)
    # Assigning a type to the variable 'if_condition_82027' (line 1588)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1588, 12), 'if_condition_82027', if_condition_82027)
    # SSA begins for if statement (line 1588)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Subscript (line 1589):
    
    # Assigning a Name to a Subscript (line 1589):
    # Getting the type of 'typename' (line 1589)
    typename_82028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1589, 36), 'typename')
    # Getting the type of 'edecl' (line 1589)
    edecl_82029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1589, 16), 'edecl')
    str_82030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1589, 22), 'str', 'typename')
    # Storing an element on a container (line 1589)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1589, 16), edecl_82029, (str_82030, typename_82028))
    # SSA branch for the else part of an if statement (line 1588)
    module_type_store.open_ssa_branch('else')
    
    
    # Evaluating a boolean operation
    # Getting the type of 'typename' (line 1590)
    typename_82031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1590, 17), 'typename')
    
    
    
    # Obtaining the type of the subscript
    str_82032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1590, 41), 'str', 'typename')
    # Getting the type of 'edecl' (line 1590)
    edecl_82033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1590, 35), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1590)
    getitem___82034 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1590, 35), edecl_82033, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1590)
    subscript_call_result_82035 = invoke(stypy.reporting.localization.Localization(__file__, 1590, 35), getitem___82034, str_82032)
    
    # Getting the type of 'typename' (line 1590)
    typename_82036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1590, 56), 'typename')
    # Applying the binary operator '==' (line 1590)
    result_eq_82037 = python_operator(stypy.reporting.localization.Localization(__file__, 1590, 35), '==', subscript_call_result_82035, typename_82036)
    
    # Applying the 'not' unary operator (line 1590)
    result_not__82038 = python_operator(stypy.reporting.localization.Localization(__file__, 1590, 31), 'not', result_eq_82037)
    
    # Applying the binary operator 'and' (line 1590)
    result_and_keyword_82039 = python_operator(stypy.reporting.localization.Localization(__file__, 1590, 17), 'and', typename_82031, result_not__82038)
    
    # Testing the type of an if condition (line 1590)
    if_condition_82040 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1590, 17), result_and_keyword_82039)
    # Assigning a type to the variable 'if_condition_82040' (line 1590)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1590, 17), 'if_condition_82040', if_condition_82040)
    # SSA begins for if statement (line 1590)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1591)
    # Processing the call arguments (line 1591)
    str_82042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1591, 24), 'str', 'updatevars: attempt to change the typename of "%s" ("%s") to "%s". Ignoring.\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1592)
    tuple_82043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1592, 20), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1592)
    # Adding element type (line 1592)
    # Getting the type of 'ename' (line 1592)
    ename_82044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1592, 20), 'ename', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1592, 20), tuple_82043, ename_82044)
    # Adding element type (line 1592)
    
    # Obtaining the type of the subscript
    str_82045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1592, 33), 'str', 'typename')
    # Getting the type of 'edecl' (line 1592)
    edecl_82046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1592, 27), 'edecl', False)
    # Obtaining the member '__getitem__' of a type (line 1592)
    getitem___82047 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1592, 27), edecl_82046, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1592)
    subscript_call_result_82048 = invoke(stypy.reporting.localization.Localization(__file__, 1592, 27), getitem___82047, str_82045)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1592, 20), tuple_82043, subscript_call_result_82048)
    # Adding element type (line 1592)
    # Getting the type of 'typename' (line 1592)
    typename_82049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1592, 46), 'typename', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1592, 20), tuple_82043, typename_82049)
    
    # Applying the binary operator '%' (line 1591)
    result_mod_82050 = python_operator(stypy.reporting.localization.Localization(__file__, 1591, 24), '%', str_82042, tuple_82043)
    
    # Processing the call keyword arguments (line 1591)
    kwargs_82051 = {}
    # Getting the type of 'outmess' (line 1591)
    outmess_82041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1591, 16), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1591)
    outmess_call_result_82052 = invoke(stypy.reporting.localization.Localization(__file__, 1591, 16), outmess_82041, *[result_mod_82050], **kwargs_82051)
    
    # SSA join for if statement (line 1590)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1588)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_82053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1593, 15), 'str', 'attrspec')
    # Getting the type of 'edecl' (line 1593)
    edecl_82054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1593, 33), 'edecl')
    # Applying the binary operator 'notin' (line 1593)
    result_contains_82055 = python_operator(stypy.reporting.localization.Localization(__file__, 1593, 15), 'notin', str_82053, edecl_82054)
    
    # Testing the type of an if condition (line 1593)
    if_condition_82056 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1593, 12), result_contains_82055)
    # Assigning a type to the variable 'if_condition_82056' (line 1593)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1593, 12), 'if_condition_82056', if_condition_82056)
    # SSA begins for if statement (line 1593)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Subscript (line 1594):
    
    # Assigning a Call to a Subscript (line 1594):
    
    # Call to copy(...): (line 1594)
    # Processing the call arguments (line 1594)
    # Getting the type of 'attrspec' (line 1594)
    attrspec_82059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1594, 46), 'attrspec', False)
    # Processing the call keyword arguments (line 1594)
    kwargs_82060 = {}
    # Getting the type of 'copy' (line 1594)
    copy_82057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1594, 36), 'copy', False)
    # Obtaining the member 'copy' of a type (line 1594)
    copy_82058 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1594, 36), copy_82057, 'copy')
    # Calling copy(args, kwargs) (line 1594)
    copy_call_result_82061 = invoke(stypy.reporting.localization.Localization(__file__, 1594, 36), copy_82058, *[attrspec_82059], **kwargs_82060)
    
    # Getting the type of 'edecl' (line 1594)
    edecl_82062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1594, 16), 'edecl')
    str_82063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1594, 22), 'str', 'attrspec')
    # Storing an element on a container (line 1594)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1594, 16), edecl_82062, (str_82063, copy_call_result_82061))
    # SSA branch for the else part of an if statement (line 1593)
    module_type_store.open_ssa_branch('else')
    
    # Getting the type of 'attrspec' (line 1595)
    attrspec_82064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1595, 17), 'attrspec')
    # Testing the type of an if condition (line 1595)
    if_condition_82065 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1595, 17), attrspec_82064)
    # Assigning a type to the variable 'if_condition_82065' (line 1595)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1595, 17), 'if_condition_82065', if_condition_82065)
    # SSA begins for if statement (line 1595)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'attrspec' (line 1596)
    attrspec_82066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1596, 25), 'attrspec')
    # Testing the type of a for loop iterable (line 1596)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1596, 16), attrspec_82066)
    # Getting the type of the for loop variable (line 1596)
    for_loop_var_82067 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1596, 16), attrspec_82066)
    # Assigning a type to the variable 'a' (line 1596)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1596, 16), 'a', for_loop_var_82067)
    # SSA begins for a for statement (line 1596)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'a' (line 1597)
    a_82068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1597, 23), 'a')
    
    # Obtaining the type of the subscript
    str_82069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1597, 38), 'str', 'attrspec')
    # Getting the type of 'edecl' (line 1597)
    edecl_82070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1597, 32), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1597)
    getitem___82071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1597, 32), edecl_82070, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1597)
    subscript_call_result_82072 = invoke(stypy.reporting.localization.Localization(__file__, 1597, 32), getitem___82071, str_82069)
    
    # Applying the binary operator 'notin' (line 1597)
    result_contains_82073 = python_operator(stypy.reporting.localization.Localization(__file__, 1597, 23), 'notin', a_82068, subscript_call_result_82072)
    
    # Testing the type of an if condition (line 1597)
    if_condition_82074 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1597, 20), result_contains_82073)
    # Assigning a type to the variable 'if_condition_82074' (line 1597)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1597, 20), 'if_condition_82074', if_condition_82074)
    # SSA begins for if statement (line 1597)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1598)
    # Processing the call arguments (line 1598)
    # Getting the type of 'a' (line 1598)
    a_82080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1598, 49), 'a', False)
    # Processing the call keyword arguments (line 1598)
    kwargs_82081 = {}
    
    # Obtaining the type of the subscript
    str_82075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1598, 30), 'str', 'attrspec')
    # Getting the type of 'edecl' (line 1598)
    edecl_82076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1598, 24), 'edecl', False)
    # Obtaining the member '__getitem__' of a type (line 1598)
    getitem___82077 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1598, 24), edecl_82076, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1598)
    subscript_call_result_82078 = invoke(stypy.reporting.localization.Localization(__file__, 1598, 24), getitem___82077, str_82075)
    
    # Obtaining the member 'append' of a type (line 1598)
    append_82079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1598, 24), subscript_call_result_82078, 'append')
    # Calling append(args, kwargs) (line 1598)
    append_call_result_82082 = invoke(stypy.reporting.localization.Localization(__file__, 1598, 24), append_82079, *[a_82080], **kwargs_82081)
    
    # SSA join for if statement (line 1597)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1595)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1593)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1558)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Subscript (line 1600):
    
    # Assigning a Call to a Subscript (line 1600):
    
    # Call to copy(...): (line 1600)
    # Processing the call arguments (line 1600)
    # Getting the type of 'typespec' (line 1600)
    typespec_82085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1600, 42), 'typespec', False)
    # Processing the call keyword arguments (line 1600)
    kwargs_82086 = {}
    # Getting the type of 'copy' (line 1600)
    copy_82083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1600, 32), 'copy', False)
    # Obtaining the member 'copy' of a type (line 1600)
    copy_82084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1600, 32), copy_82083, 'copy')
    # Calling copy(args, kwargs) (line 1600)
    copy_call_result_82087 = invoke(stypy.reporting.localization.Localization(__file__, 1600, 32), copy_82084, *[typespec_82085], **kwargs_82086)
    
    # Getting the type of 'edecl' (line 1600)
    edecl_82088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1600, 12), 'edecl')
    str_82089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1600, 18), 'str', 'typespec')
    # Storing an element on a container (line 1600)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1600, 12), edecl_82088, (str_82089, copy_call_result_82087))
    
    # Assigning a Call to a Subscript (line 1601):
    
    # Assigning a Call to a Subscript (line 1601):
    
    # Call to copy(...): (line 1601)
    # Processing the call arguments (line 1601)
    # Getting the type of 'kindselect' (line 1601)
    kindselect_82092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1601, 46), 'kindselect', False)
    # Processing the call keyword arguments (line 1601)
    kwargs_82093 = {}
    # Getting the type of 'copy' (line 1601)
    copy_82090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1601, 36), 'copy', False)
    # Obtaining the member 'copy' of a type (line 1601)
    copy_82091 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1601, 36), copy_82090, 'copy')
    # Calling copy(args, kwargs) (line 1601)
    copy_call_result_82094 = invoke(stypy.reporting.localization.Localization(__file__, 1601, 36), copy_82091, *[kindselect_82092], **kwargs_82093)
    
    # Getting the type of 'edecl' (line 1601)
    edecl_82095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1601, 12), 'edecl')
    str_82096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1601, 18), 'str', 'kindselector')
    # Storing an element on a container (line 1601)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1601, 12), edecl_82095, (str_82096, copy_call_result_82094))
    
    # Assigning a Call to a Subscript (line 1602):
    
    # Assigning a Call to a Subscript (line 1602):
    
    # Call to copy(...): (line 1602)
    # Processing the call arguments (line 1602)
    # Getting the type of 'charselect' (line 1602)
    charselect_82099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1602, 46), 'charselect', False)
    # Processing the call keyword arguments (line 1602)
    kwargs_82100 = {}
    # Getting the type of 'copy' (line 1602)
    copy_82097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1602, 36), 'copy', False)
    # Obtaining the member 'copy' of a type (line 1602)
    copy_82098 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1602, 36), copy_82097, 'copy')
    # Calling copy(args, kwargs) (line 1602)
    copy_call_result_82101 = invoke(stypy.reporting.localization.Localization(__file__, 1602, 36), copy_82098, *[charselect_82099], **kwargs_82100)
    
    # Getting the type of 'edecl' (line 1602)
    edecl_82102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1602, 12), 'edecl')
    str_82103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1602, 18), 'str', 'charselector')
    # Storing an element on a container (line 1602)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1602, 12), edecl_82102, (str_82103, copy_call_result_82101))
    
    # Assigning a Name to a Subscript (line 1603):
    
    # Assigning a Name to a Subscript (line 1603):
    # Getting the type of 'typename' (line 1603)
    typename_82104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1603, 32), 'typename')
    # Getting the type of 'edecl' (line 1603)
    edecl_82105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1603, 12), 'edecl')
    str_82106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1603, 18), 'str', 'typename')
    # Storing an element on a container (line 1603)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1603, 12), edecl_82105, (str_82106, typename_82104))
    
    # Assigning a Call to a Subscript (line 1604):
    
    # Assigning a Call to a Subscript (line 1604):
    
    # Call to copy(...): (line 1604)
    # Processing the call arguments (line 1604)
    # Getting the type of 'attrspec' (line 1604)
    attrspec_82109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1604, 42), 'attrspec', False)
    # Processing the call keyword arguments (line 1604)
    kwargs_82110 = {}
    # Getting the type of 'copy' (line 1604)
    copy_82107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1604, 32), 'copy', False)
    # Obtaining the member 'copy' of a type (line 1604)
    copy_82108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1604, 32), copy_82107, 'copy')
    # Calling copy(args, kwargs) (line 1604)
    copy_call_result_82111 = invoke(stypy.reporting.localization.Localization(__file__, 1604, 32), copy_82108, *[attrspec_82109], **kwargs_82110)
    
    # Getting the type of 'edecl' (line 1604)
    edecl_82112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1604, 12), 'edecl')
    str_82113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1604, 18), 'str', 'attrspec')
    # Storing an element on a container (line 1604)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1604, 12), edecl_82112, (str_82113, copy_call_result_82111))
    # SSA join for if statement (line 1558)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to group(...): (line 1605)
    # Processing the call arguments (line 1605)
    str_82116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1605, 19), 'str', 'after')
    # Processing the call keyword arguments (line 1605)
    kwargs_82117 = {}
    # Getting the type of 'm' (line 1605)
    m_82114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1605, 11), 'm', False)
    # Obtaining the member 'group' of a type (line 1605)
    group_82115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1605, 11), m_82114, 'group')
    # Calling group(args, kwargs) (line 1605)
    group_call_result_82118 = invoke(stypy.reporting.localization.Localization(__file__, 1605, 11), group_82115, *[str_82116], **kwargs_82117)
    
    # Testing the type of an if condition (line 1605)
    if_condition_82119 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1605, 8), group_call_result_82118)
    # Assigning a type to the variable 'if_condition_82119' (line 1605)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1605, 8), 'if_condition_82119', if_condition_82119)
    # SSA begins for if statement (line 1605)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1606):
    
    # Assigning a Call to a Name (line 1606):
    
    # Call to match(...): (line 1606)
    # Processing the call arguments (line 1606)
    
    # Call to markouterparen(...): (line 1606)
    # Processing the call arguments (line 1606)
    
    # Call to group(...): (line 1606)
    # Processing the call arguments (line 1606)
    str_82125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1606, 62), 'str', 'after')
    # Processing the call keyword arguments (line 1606)
    kwargs_82126 = {}
    # Getting the type of 'm' (line 1606)
    m_82123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1606, 54), 'm', False)
    # Obtaining the member 'group' of a type (line 1606)
    group_82124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1606, 54), m_82123, 'group')
    # Calling group(args, kwargs) (line 1606)
    group_call_result_82127 = invoke(stypy.reporting.localization.Localization(__file__, 1606, 54), group_82124, *[str_82125], **kwargs_82126)
    
    # Processing the call keyword arguments (line 1606)
    kwargs_82128 = {}
    # Getting the type of 'markouterparen' (line 1606)
    markouterparen_82122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1606, 39), 'markouterparen', False)
    # Calling markouterparen(args, kwargs) (line 1606)
    markouterparen_call_result_82129 = invoke(stypy.reporting.localization.Localization(__file__, 1606, 39), markouterparen_82122, *[group_call_result_82127], **kwargs_82128)
    
    # Processing the call keyword arguments (line 1606)
    kwargs_82130 = {}
    # Getting the type of 'lenarraypattern' (line 1606)
    lenarraypattern_82120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1606, 17), 'lenarraypattern', False)
    # Obtaining the member 'match' of a type (line 1606)
    match_82121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1606, 17), lenarraypattern_82120, 'match')
    # Calling match(args, kwargs) (line 1606)
    match_call_result_82131 = invoke(stypy.reporting.localization.Localization(__file__, 1606, 17), match_82121, *[markouterparen_call_result_82129], **kwargs_82130)
    
    # Assigning a type to the variable 'm1' (line 1606)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1606, 12), 'm1', match_call_result_82131)
    
    # Getting the type of 'm1' (line 1607)
    m1_82132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1607, 15), 'm1')
    # Testing the type of an if condition (line 1607)
    if_condition_82133 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1607, 12), m1_82132)
    # Assigning a type to the variable 'if_condition_82133' (line 1607)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1607, 12), 'if_condition_82133', if_condition_82133)
    # SSA begins for if statement (line 1607)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1608):
    
    # Assigning a Call to a Name (line 1608):
    
    # Call to groupdict(...): (line 1608)
    # Processing the call keyword arguments (line 1608)
    kwargs_82136 = {}
    # Getting the type of 'm1' (line 1608)
    m1_82134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1608, 21), 'm1', False)
    # Obtaining the member 'groupdict' of a type (line 1608)
    groupdict_82135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1608, 21), m1_82134, 'groupdict')
    # Calling groupdict(args, kwargs) (line 1608)
    groupdict_call_result_82137 = invoke(stypy.reporting.localization.Localization(__file__, 1608, 21), groupdict_82135, *[], **kwargs_82136)
    
    # Assigning a type to the variable 'd1' (line 1608)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1608, 16), 'd1', groupdict_call_result_82137)
    
    
    # Obtaining an instance of the builtin type 'list' (line 1609)
    list_82138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1609, 26), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1609)
    # Adding element type (line 1609)
    str_82139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1609, 27), 'str', 'len')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1609, 26), list_82138, str_82139)
    # Adding element type (line 1609)
    str_82140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1609, 34), 'str', 'array')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1609, 26), list_82138, str_82140)
    # Adding element type (line 1609)
    str_82141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1609, 43), 'str', 'init')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1609, 26), list_82138, str_82141)
    
    # Testing the type of a for loop iterable (line 1609)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1609, 16), list_82138)
    # Getting the type of the for loop variable (line 1609)
    for_loop_var_82142 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1609, 16), list_82138)
    # Assigning a type to the variable 'lk' (line 1609)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1609, 16), 'lk', for_loop_var_82142)
    # SSA begins for a for statement (line 1609)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'lk' (line 1610)
    lk_82143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1610, 26), 'lk')
    str_82144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1610, 31), 'str', '2')
    # Applying the binary operator '+' (line 1610)
    result_add_82145 = python_operator(stypy.reporting.localization.Localization(__file__, 1610, 26), '+', lk_82143, str_82144)
    
    # Getting the type of 'd1' (line 1610)
    d1_82146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1610, 23), 'd1')
    # Obtaining the member '__getitem__' of a type (line 1610)
    getitem___82147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1610, 23), d1_82146, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1610)
    subscript_call_result_82148 = invoke(stypy.reporting.localization.Localization(__file__, 1610, 23), getitem___82147, result_add_82145)
    
    # Getting the type of 'None' (line 1610)
    None_82149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1610, 43), 'None')
    # Applying the binary operator 'isnot' (line 1610)
    result_is_not_82150 = python_operator(stypy.reporting.localization.Localization(__file__, 1610, 23), 'isnot', subscript_call_result_82148, None_82149)
    
    # Testing the type of an if condition (line 1610)
    if_condition_82151 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1610, 20), result_is_not_82150)
    # Assigning a type to the variable 'if_condition_82151' (line 1610)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1610, 20), 'if_condition_82151', if_condition_82151)
    # SSA begins for if statement (line 1610)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 1611):
    
    # Assigning a Subscript to a Subscript (line 1611):
    
    # Obtaining the type of the subscript
    # Getting the type of 'lk' (line 1611)
    lk_82152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1611, 36), 'lk')
    str_82153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1611, 41), 'str', '2')
    # Applying the binary operator '+' (line 1611)
    result_add_82154 = python_operator(stypy.reporting.localization.Localization(__file__, 1611, 36), '+', lk_82152, str_82153)
    
    # Getting the type of 'd1' (line 1611)
    d1_82155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1611, 33), 'd1')
    # Obtaining the member '__getitem__' of a type (line 1611)
    getitem___82156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1611, 33), d1_82155, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1611)
    subscript_call_result_82157 = invoke(stypy.reporting.localization.Localization(__file__, 1611, 33), getitem___82156, result_add_82154)
    
    # Getting the type of 'd1' (line 1611)
    d1_82158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1611, 24), 'd1')
    # Getting the type of 'lk' (line 1611)
    lk_82159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1611, 27), 'lk')
    # Storing an element on a container (line 1611)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1611, 24), d1_82158, (lk_82159, subscript_call_result_82157))
    # Deleting a member
    # Getting the type of 'd1' (line 1612)
    d1_82160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1612, 28), 'd1')
    
    # Obtaining the type of the subscript
    # Getting the type of 'lk' (line 1612)
    lk_82161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1612, 31), 'lk')
    str_82162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1612, 36), 'str', '2')
    # Applying the binary operator '+' (line 1612)
    result_add_82163 = python_operator(stypy.reporting.localization.Localization(__file__, 1612, 31), '+', lk_82161, str_82162)
    
    # Getting the type of 'd1' (line 1612)
    d1_82164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1612, 28), 'd1')
    # Obtaining the member '__getitem__' of a type (line 1612)
    getitem___82165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1612, 28), d1_82164, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1612)
    subscript_call_result_82166 = invoke(stypy.reporting.localization.Localization(__file__, 1612, 28), getitem___82165, result_add_82163)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1612, 24), d1_82160, subscript_call_result_82166)
    # SSA join for if statement (line 1610)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to list(...): (line 1613)
    # Processing the call arguments (line 1613)
    
    # Call to keys(...): (line 1613)
    # Processing the call keyword arguments (line 1613)
    kwargs_82170 = {}
    # Getting the type of 'd1' (line 1613)
    d1_82168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1613, 30), 'd1', False)
    # Obtaining the member 'keys' of a type (line 1613)
    keys_82169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1613, 30), d1_82168, 'keys')
    # Calling keys(args, kwargs) (line 1613)
    keys_call_result_82171 = invoke(stypy.reporting.localization.Localization(__file__, 1613, 30), keys_82169, *[], **kwargs_82170)
    
    # Processing the call keyword arguments (line 1613)
    kwargs_82172 = {}
    # Getting the type of 'list' (line 1613)
    list_82167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1613, 25), 'list', False)
    # Calling list(args, kwargs) (line 1613)
    list_call_result_82173 = invoke(stypy.reporting.localization.Localization(__file__, 1613, 25), list_82167, *[keys_call_result_82171], **kwargs_82172)
    
    # Testing the type of a for loop iterable (line 1613)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1613, 16), list_call_result_82173)
    # Getting the type of the for loop variable (line 1613)
    for_loop_var_82174 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1613, 16), list_call_result_82173)
    # Assigning a type to the variable 'k' (line 1613)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1613, 16), 'k', for_loop_var_82174)
    # SSA begins for a for statement (line 1613)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1614)
    k_82175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 26), 'k')
    # Getting the type of 'd1' (line 1614)
    d1_82176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 23), 'd1')
    # Obtaining the member '__getitem__' of a type (line 1614)
    getitem___82177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1614, 23), d1_82176, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1614)
    subscript_call_result_82178 = invoke(stypy.reporting.localization.Localization(__file__, 1614, 23), getitem___82177, k_82175)
    
    # Getting the type of 'None' (line 1614)
    None_82179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 36), 'None')
    # Applying the binary operator 'isnot' (line 1614)
    result_is_not_82180 = python_operator(stypy.reporting.localization.Localization(__file__, 1614, 23), 'isnot', subscript_call_result_82178, None_82179)
    
    # Testing the type of an if condition (line 1614)
    if_condition_82181 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1614, 20), result_is_not_82180)
    # Assigning a type to the variable 'if_condition_82181' (line 1614)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1614, 20), 'if_condition_82181', if_condition_82181)
    # SSA begins for if statement (line 1614)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Subscript (line 1615):
    
    # Assigning a Call to a Subscript (line 1615):
    
    # Call to unmarkouterparen(...): (line 1615)
    # Processing the call arguments (line 1615)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1615)
    k_82183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 52), 'k', False)
    # Getting the type of 'd1' (line 1615)
    d1_82184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 49), 'd1', False)
    # Obtaining the member '__getitem__' of a type (line 1615)
    getitem___82185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1615, 49), d1_82184, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1615)
    subscript_call_result_82186 = invoke(stypy.reporting.localization.Localization(__file__, 1615, 49), getitem___82185, k_82183)
    
    # Processing the call keyword arguments (line 1615)
    kwargs_82187 = {}
    # Getting the type of 'unmarkouterparen' (line 1615)
    unmarkouterparen_82182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 32), 'unmarkouterparen', False)
    # Calling unmarkouterparen(args, kwargs) (line 1615)
    unmarkouterparen_call_result_82188 = invoke(stypy.reporting.localization.Localization(__file__, 1615, 32), unmarkouterparen_82182, *[subscript_call_result_82186], **kwargs_82187)
    
    # Getting the type of 'd1' (line 1615)
    d1_82189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 24), 'd1')
    # Getting the type of 'k' (line 1615)
    k_82190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 27), 'k')
    # Storing an element on a container (line 1615)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1615, 24), d1_82189, (k_82190, unmarkouterparen_call_result_82188))
    # SSA branch for the else part of an if statement (line 1614)
    module_type_store.open_ssa_branch('else')
    # Deleting a member
    # Getting the type of 'd1' (line 1617)
    d1_82191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1617, 28), 'd1')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1617)
    k_82192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1617, 31), 'k')
    # Getting the type of 'd1' (line 1617)
    d1_82193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1617, 28), 'd1')
    # Obtaining the member '__getitem__' of a type (line 1617)
    getitem___82194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1617, 28), d1_82193, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1617)
    subscript_call_result_82195 = invoke(stypy.reporting.localization.Localization(__file__, 1617, 28), getitem___82194, k_82192)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1617, 24), d1_82191, subscript_call_result_82195)
    # SSA join for if statement (line 1614)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    str_82196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1618, 19), 'str', 'len')
    # Getting the type of 'd1' (line 1618)
    d1_82197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1618, 28), 'd1')
    # Applying the binary operator 'in' (line 1618)
    result_contains_82198 = python_operator(stypy.reporting.localization.Localization(__file__, 1618, 19), 'in', str_82196, d1_82197)
    
    
    str_82199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1618, 35), 'str', 'array')
    # Getting the type of 'd1' (line 1618)
    d1_82200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1618, 46), 'd1')
    # Applying the binary operator 'in' (line 1618)
    result_contains_82201 = python_operator(stypy.reporting.localization.Localization(__file__, 1618, 35), 'in', str_82199, d1_82200)
    
    # Applying the binary operator 'and' (line 1618)
    result_and_keyword_82202 = python_operator(stypy.reporting.localization.Localization(__file__, 1618, 19), 'and', result_contains_82198, result_contains_82201)
    
    # Testing the type of an if condition (line 1618)
    if_condition_82203 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1618, 16), result_and_keyword_82202)
    # Assigning a type to the variable 'if_condition_82203' (line 1618)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1618, 16), 'if_condition_82203', if_condition_82203)
    # SSA begins for if statement (line 1618)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Obtaining the type of the subscript
    str_82204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1619, 26), 'str', 'len')
    # Getting the type of 'd1' (line 1619)
    d1_82205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1619, 23), 'd1')
    # Obtaining the member '__getitem__' of a type (line 1619)
    getitem___82206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1619, 23), d1_82205, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1619)
    subscript_call_result_82207 = invoke(stypy.reporting.localization.Localization(__file__, 1619, 23), getitem___82206, str_82204)
    
    str_82208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1619, 36), 'str', '')
    # Applying the binary operator '==' (line 1619)
    result_eq_82209 = python_operator(stypy.reporting.localization.Localization(__file__, 1619, 23), '==', subscript_call_result_82207, str_82208)
    
    # Testing the type of an if condition (line 1619)
    if_condition_82210 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1619, 20), result_eq_82209)
    # Assigning a type to the variable 'if_condition_82210' (line 1619)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1619, 20), 'if_condition_82210', if_condition_82210)
    # SSA begins for if statement (line 1619)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 1620):
    
    # Assigning a Subscript to a Subscript (line 1620):
    
    # Obtaining the type of the subscript
    str_82211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1620, 39), 'str', 'array')
    # Getting the type of 'd1' (line 1620)
    d1_82212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1620, 36), 'd1')
    # Obtaining the member '__getitem__' of a type (line 1620)
    getitem___82213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1620, 36), d1_82212, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1620)
    subscript_call_result_82214 = invoke(stypy.reporting.localization.Localization(__file__, 1620, 36), getitem___82213, str_82211)
    
    # Getting the type of 'd1' (line 1620)
    d1_82215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1620, 24), 'd1')
    str_82216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1620, 27), 'str', 'len')
    # Storing an element on a container (line 1620)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1620, 24), d1_82215, (str_82216, subscript_call_result_82214))
    # Deleting a member
    # Getting the type of 'd1' (line 1621)
    d1_82217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1621, 28), 'd1')
    
    # Obtaining the type of the subscript
    str_82218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1621, 31), 'str', 'array')
    # Getting the type of 'd1' (line 1621)
    d1_82219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1621, 28), 'd1')
    # Obtaining the member '__getitem__' of a type (line 1621)
    getitem___82220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1621, 28), d1_82219, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1621)
    subscript_call_result_82221 = invoke(stypy.reporting.localization.Localization(__file__, 1621, 28), getitem___82220, str_82218)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1621, 24), d1_82217, subscript_call_result_82221)
    # SSA branch for the else part of an if statement (line 1619)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Subscript (line 1623):
    
    # Assigning a BinOp to a Subscript (line 1623):
    
    # Obtaining the type of the subscript
    str_82222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1623, 41), 'str', 'array')
    # Getting the type of 'd1' (line 1623)
    d1_82223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1623, 38), 'd1')
    # Obtaining the member '__getitem__' of a type (line 1623)
    getitem___82224 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1623, 38), d1_82223, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1623)
    subscript_call_result_82225 = invoke(stypy.reporting.localization.Localization(__file__, 1623, 38), getitem___82224, str_82222)
    
    str_82226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1623, 52), 'str', ',')
    # Applying the binary operator '+' (line 1623)
    result_add_82227 = python_operator(stypy.reporting.localization.Localization(__file__, 1623, 38), '+', subscript_call_result_82225, str_82226)
    
    
    # Obtaining the type of the subscript
    str_82228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1623, 61), 'str', 'len')
    # Getting the type of 'd1' (line 1623)
    d1_82229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1623, 58), 'd1')
    # Obtaining the member '__getitem__' of a type (line 1623)
    getitem___82230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1623, 58), d1_82229, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1623)
    subscript_call_result_82231 = invoke(stypy.reporting.localization.Localization(__file__, 1623, 58), getitem___82230, str_82228)
    
    # Applying the binary operator '+' (line 1623)
    result_add_82232 = python_operator(stypy.reporting.localization.Localization(__file__, 1623, 56), '+', result_add_82227, subscript_call_result_82231)
    
    # Getting the type of 'd1' (line 1623)
    d1_82233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1623, 24), 'd1')
    str_82234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1623, 27), 'str', 'array')
    # Storing an element on a container (line 1623)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1623, 24), d1_82233, (str_82234, result_add_82232))
    # Deleting a member
    # Getting the type of 'd1' (line 1624)
    d1_82235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1624, 28), 'd1')
    
    # Obtaining the type of the subscript
    str_82236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1624, 31), 'str', 'len')
    # Getting the type of 'd1' (line 1624)
    d1_82237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1624, 28), 'd1')
    # Obtaining the member '__getitem__' of a type (line 1624)
    getitem___82238 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1624, 28), d1_82237, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1624)
    subscript_call_result_82239 = invoke(stypy.reporting.localization.Localization(__file__, 1624, 28), getitem___82238, str_82236)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1624, 24), d1_82235, subscript_call_result_82239)
    
    # Call to errmess(...): (line 1625)
    # Processing the call arguments (line 1625)
    str_82241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1625, 32), 'str', 'updatevars: "%s %s" is mapped to "%s %s(%s)"\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1626)
    tuple_82242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1626, 28), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1626)
    # Adding element type (line 1626)
    # Getting the type of 'typespec' (line 1626)
    typespec_82243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1626, 28), 'typespec', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1626, 28), tuple_82242, typespec_82243)
    # Adding element type (line 1626)
    # Getting the type of 'e' (line 1626)
    e_82244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1626, 38), 'e', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1626, 28), tuple_82242, e_82244)
    # Adding element type (line 1626)
    # Getting the type of 'typespec' (line 1626)
    typespec_82245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1626, 41), 'typespec', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1626, 28), tuple_82242, typespec_82245)
    # Adding element type (line 1626)
    # Getting the type of 'ename' (line 1626)
    ename_82246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1626, 51), 'ename', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1626, 28), tuple_82242, ename_82246)
    # Adding element type (line 1626)
    
    # Obtaining the type of the subscript
    str_82247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1626, 61), 'str', 'array')
    # Getting the type of 'd1' (line 1626)
    d1_82248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1626, 58), 'd1', False)
    # Obtaining the member '__getitem__' of a type (line 1626)
    getitem___82249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1626, 58), d1_82248, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1626)
    subscript_call_result_82250 = invoke(stypy.reporting.localization.Localization(__file__, 1626, 58), getitem___82249, str_82247)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1626, 28), tuple_82242, subscript_call_result_82250)
    
    # Applying the binary operator '%' (line 1625)
    result_mod_82251 = python_operator(stypy.reporting.localization.Localization(__file__, 1625, 32), '%', str_82241, tuple_82242)
    
    # Processing the call keyword arguments (line 1625)
    kwargs_82252 = {}
    # Getting the type of 'errmess' (line 1625)
    errmess_82240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1625, 24), 'errmess', False)
    # Calling errmess(args, kwargs) (line 1625)
    errmess_call_result_82253 = invoke(stypy.reporting.localization.Localization(__file__, 1625, 24), errmess_82240, *[result_mod_82251], **kwargs_82252)
    
    # SSA join for if statement (line 1619)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1618)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_82254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1627, 19), 'str', 'array')
    # Getting the type of 'd1' (line 1627)
    d1_82255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1627, 30), 'd1')
    # Applying the binary operator 'in' (line 1627)
    result_contains_82256 = python_operator(stypy.reporting.localization.Localization(__file__, 1627, 19), 'in', str_82254, d1_82255)
    
    # Testing the type of an if condition (line 1627)
    if_condition_82257 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1627, 16), result_contains_82256)
    # Assigning a type to the variable 'if_condition_82257' (line 1627)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1627, 16), 'if_condition_82257', if_condition_82257)
    # SSA begins for if statement (line 1627)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1628):
    
    # Assigning a BinOp to a Name (line 1628):
    str_82258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1628, 25), 'str', 'dimension(%s)')
    
    # Obtaining the type of the subscript
    str_82259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1628, 46), 'str', 'array')
    # Getting the type of 'd1' (line 1628)
    d1_82260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1628, 43), 'd1')
    # Obtaining the member '__getitem__' of a type (line 1628)
    getitem___82261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1628, 43), d1_82260, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1628)
    subscript_call_result_82262 = invoke(stypy.reporting.localization.Localization(__file__, 1628, 43), getitem___82261, str_82259)
    
    # Applying the binary operator '%' (line 1628)
    result_mod_82263 = python_operator(stypy.reporting.localization.Localization(__file__, 1628, 25), '%', str_82258, subscript_call_result_82262)
    
    # Assigning a type to the variable 'dm' (line 1628)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1628, 20), 'dm', result_mod_82263)
    
    
    # Evaluating a boolean operation
    
    str_82264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1629, 23), 'str', 'attrspec')
    # Getting the type of 'edecl' (line 1629)
    edecl_82265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1629, 41), 'edecl')
    # Applying the binary operator 'notin' (line 1629)
    result_contains_82266 = python_operator(stypy.reporting.localization.Localization(__file__, 1629, 23), 'notin', str_82264, edecl_82265)
    
    
    
    # Obtaining the type of the subscript
    str_82267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1629, 61), 'str', 'attrspec')
    # Getting the type of 'edecl' (line 1629)
    edecl_82268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1629, 55), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1629)
    getitem___82269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1629, 55), edecl_82268, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1629)
    subscript_call_result_82270 = invoke(stypy.reporting.localization.Localization(__file__, 1629, 55), getitem___82269, str_82267)
    
    # Applying the 'not' unary operator (line 1629)
    result_not__82271 = python_operator(stypy.reporting.localization.Localization(__file__, 1629, 51), 'not', subscript_call_result_82270)
    
    # Applying the binary operator 'or' (line 1629)
    result_or_keyword_82272 = python_operator(stypy.reporting.localization.Localization(__file__, 1629, 23), 'or', result_contains_82266, result_not__82271)
    
    # Testing the type of an if condition (line 1629)
    if_condition_82273 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1629, 20), result_or_keyword_82272)
    # Assigning a type to the variable 'if_condition_82273' (line 1629)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1629, 20), 'if_condition_82273', if_condition_82273)
    # SSA begins for if statement (line 1629)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Subscript (line 1630):
    
    # Assigning a List to a Subscript (line 1630):
    
    # Obtaining an instance of the builtin type 'list' (line 1630)
    list_82274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1630, 44), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1630)
    # Adding element type (line 1630)
    # Getting the type of 'dm' (line 1630)
    dm_82275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1630, 45), 'dm')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1630, 44), list_82274, dm_82275)
    
    # Getting the type of 'edecl' (line 1630)
    edecl_82276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1630, 24), 'edecl')
    str_82277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1630, 30), 'str', 'attrspec')
    # Storing an element on a container (line 1630)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1630, 24), edecl_82276, (str_82277, list_82274))
    # SSA branch for the else part of an if statement (line 1629)
    module_type_store.open_ssa_branch('else')
    
    # Call to append(...): (line 1632)
    # Processing the call arguments (line 1632)
    # Getting the type of 'dm' (line 1632)
    dm_82283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1632, 49), 'dm', False)
    # Processing the call keyword arguments (line 1632)
    kwargs_82284 = {}
    
    # Obtaining the type of the subscript
    str_82278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1632, 30), 'str', 'attrspec')
    # Getting the type of 'edecl' (line 1632)
    edecl_82279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1632, 24), 'edecl', False)
    # Obtaining the member '__getitem__' of a type (line 1632)
    getitem___82280 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1632, 24), edecl_82279, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1632)
    subscript_call_result_82281 = invoke(stypy.reporting.localization.Localization(__file__, 1632, 24), getitem___82280, str_82278)
    
    # Obtaining the member 'append' of a type (line 1632)
    append_82282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1632, 24), subscript_call_result_82281, 'append')
    # Calling append(args, kwargs) (line 1632)
    append_call_result_82285 = invoke(stypy.reporting.localization.Localization(__file__, 1632, 24), append_82282, *[dm_82283], **kwargs_82284)
    
    
    
    # Obtaining the type of the subscript
    str_82286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1633, 41), 'str', 'attrspec')
    # Getting the type of 'edecl' (line 1633)
    edecl_82287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1633, 35), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1633)
    getitem___82288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1633, 35), edecl_82287, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1633)
    subscript_call_result_82289 = invoke(stypy.reporting.localization.Localization(__file__, 1633, 35), getitem___82288, str_82286)
    
    # Testing the type of a for loop iterable (line 1633)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1633, 24), subscript_call_result_82289)
    # Getting the type of the for loop variable (line 1633)
    for_loop_var_82290 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1633, 24), subscript_call_result_82289)
    # Assigning a type to the variable 'dm1' (line 1633)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1633, 24), 'dm1', for_loop_var_82290)
    # SSA begins for a for statement (line 1633)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    
    # Obtaining the type of the subscript
    int_82291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1634, 36), 'int')
    slice_82292 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1634, 31), None, int_82291, None)
    # Getting the type of 'dm1' (line 1634)
    dm1_82293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1634, 31), 'dm1')
    # Obtaining the member '__getitem__' of a type (line 1634)
    getitem___82294 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1634, 31), dm1_82293, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1634)
    subscript_call_result_82295 = invoke(stypy.reporting.localization.Localization(__file__, 1634, 31), getitem___82294, slice_82292)
    
    str_82296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1634, 42), 'str', 'dimension')
    # Applying the binary operator '==' (line 1634)
    result_eq_82297 = python_operator(stypy.reporting.localization.Localization(__file__, 1634, 31), '==', subscript_call_result_82295, str_82296)
    
    
    # Getting the type of 'dm1' (line 1634)
    dm1_82298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1634, 58), 'dm1')
    # Getting the type of 'dm' (line 1634)
    dm_82299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1634, 65), 'dm')
    # Applying the binary operator '!=' (line 1634)
    result_ne_82300 = python_operator(stypy.reporting.localization.Localization(__file__, 1634, 58), '!=', dm1_82298, dm_82299)
    
    # Applying the binary operator 'and' (line 1634)
    result_and_keyword_82301 = python_operator(stypy.reporting.localization.Localization(__file__, 1634, 31), 'and', result_eq_82297, result_ne_82300)
    
    # Testing the type of an if condition (line 1634)
    if_condition_82302 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1634, 28), result_and_keyword_82301)
    # Assigning a type to the variable 'if_condition_82302' (line 1634)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1634, 28), 'if_condition_82302', if_condition_82302)
    # SSA begins for if statement (line 1634)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Deleting a member
    
    # Obtaining the type of the subscript
    str_82303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1635, 42), 'str', 'attrspec')
    # Getting the type of 'edecl' (line 1635)
    edecl_82304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1635, 36), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1635)
    getitem___82305 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1635, 36), edecl_82304, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1635)
    subscript_call_result_82306 = invoke(stypy.reporting.localization.Localization(__file__, 1635, 36), getitem___82305, str_82303)
    
    
    # Obtaining the type of the subscript
    int_82307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1635, 54), 'int')
    
    # Obtaining the type of the subscript
    str_82308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1635, 42), 'str', 'attrspec')
    # Getting the type of 'edecl' (line 1635)
    edecl_82309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1635, 36), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1635)
    getitem___82310 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1635, 36), edecl_82309, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1635)
    subscript_call_result_82311 = invoke(stypy.reporting.localization.Localization(__file__, 1635, 36), getitem___82310, str_82308)
    
    # Obtaining the member '__getitem__' of a type (line 1635)
    getitem___82312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1635, 36), subscript_call_result_82311, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1635)
    subscript_call_result_82313 = invoke(stypy.reporting.localization.Localization(__file__, 1635, 36), getitem___82312, int_82307)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1635, 32), subscript_call_result_82306, subscript_call_result_82313)
    
    # Call to errmess(...): (line 1636)
    # Processing the call arguments (line 1636)
    str_82315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1636, 40), 'str', 'updatevars:%s: attempt to change %r to %r. Ignoring.\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1637)
    tuple_82316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1637, 43), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1637)
    # Adding element type (line 1637)
    # Getting the type of 'ename' (line 1637)
    ename_82317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1637, 43), 'ename', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1637, 43), tuple_82316, ename_82317)
    # Adding element type (line 1637)
    # Getting the type of 'dm1' (line 1637)
    dm1_82318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1637, 50), 'dm1', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1637, 43), tuple_82316, dm1_82318)
    # Adding element type (line 1637)
    # Getting the type of 'dm' (line 1637)
    dm_82319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1637, 55), 'dm', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1637, 43), tuple_82316, dm_82319)
    
    # Applying the binary operator '%' (line 1636)
    result_mod_82320 = python_operator(stypy.reporting.localization.Localization(__file__, 1636, 40), '%', str_82315, tuple_82316)
    
    # Processing the call keyword arguments (line 1636)
    kwargs_82321 = {}
    # Getting the type of 'errmess' (line 1636)
    errmess_82314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1636, 32), 'errmess', False)
    # Calling errmess(args, kwargs) (line 1636)
    errmess_call_result_82322 = invoke(stypy.reporting.localization.Localization(__file__, 1636, 32), errmess_82314, *[result_mod_82320], **kwargs_82321)
    
    # SSA join for if statement (line 1634)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1629)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1627)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_82323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1640, 19), 'str', 'len')
    # Getting the type of 'd1' (line 1640)
    d1_82324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1640, 28), 'd1')
    # Applying the binary operator 'in' (line 1640)
    result_contains_82325 = python_operator(stypy.reporting.localization.Localization(__file__, 1640, 19), 'in', str_82323, d1_82324)
    
    # Testing the type of an if condition (line 1640)
    if_condition_82326 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1640, 16), result_contains_82325)
    # Assigning a type to the variable 'if_condition_82326' (line 1640)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1640, 16), 'if_condition_82326', if_condition_82326)
    # SSA begins for if statement (line 1640)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'typespec' (line 1641)
    typespec_82327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1641, 23), 'typespec')
    
    # Obtaining an instance of the builtin type 'list' (line 1641)
    list_82328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1641, 35), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1641)
    # Adding element type (line 1641)
    str_82329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1641, 36), 'str', 'complex')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1641, 35), list_82328, str_82329)
    # Adding element type (line 1641)
    str_82330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1641, 47), 'str', 'integer')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1641, 35), list_82328, str_82330)
    # Adding element type (line 1641)
    str_82331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1641, 58), 'str', 'logical')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1641, 35), list_82328, str_82331)
    # Adding element type (line 1641)
    str_82332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1641, 69), 'str', 'real')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1641, 35), list_82328, str_82332)
    
    # Applying the binary operator 'in' (line 1641)
    result_contains_82333 = python_operator(stypy.reporting.localization.Localization(__file__, 1641, 23), 'in', typespec_82327, list_82328)
    
    # Testing the type of an if condition (line 1641)
    if_condition_82334 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1641, 20), result_contains_82333)
    # Assigning a type to the variable 'if_condition_82334' (line 1641)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1641, 20), 'if_condition_82334', if_condition_82334)
    # SSA begins for if statement (line 1641)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    
    str_82335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1642, 28), 'str', 'kindselector')
    # Getting the type of 'edecl' (line 1642)
    edecl_82336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1642, 50), 'edecl')
    # Applying the binary operator 'notin' (line 1642)
    result_contains_82337 = python_operator(stypy.reporting.localization.Localization(__file__, 1642, 28), 'notin', str_82335, edecl_82336)
    
    
    
    # Obtaining the type of the subscript
    str_82338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1642, 71), 'str', 'kindselector')
    # Getting the type of 'edecl' (line 1642)
    edecl_82339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1642, 65), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1642)
    getitem___82340 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1642, 65), edecl_82339, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1642)
    subscript_call_result_82341 = invoke(stypy.reporting.localization.Localization(__file__, 1642, 65), getitem___82340, str_82338)
    
    # Applying the 'not' unary operator (line 1642)
    result_not__82342 = python_operator(stypy.reporting.localization.Localization(__file__, 1642, 61), 'not', subscript_call_result_82341)
    
    # Applying the binary operator 'or' (line 1642)
    result_or_keyword_82343 = python_operator(stypy.reporting.localization.Localization(__file__, 1642, 27), 'or', result_contains_82337, result_not__82342)
    
    # Testing the type of an if condition (line 1642)
    if_condition_82344 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1642, 24), result_or_keyword_82343)
    # Assigning a type to the variable 'if_condition_82344' (line 1642)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1642, 24), 'if_condition_82344', if_condition_82344)
    # SSA begins for if statement (line 1642)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Dict to a Subscript (line 1643):
    
    # Assigning a Dict to a Subscript (line 1643):
    
    # Obtaining an instance of the builtin type 'dict' (line 1643)
    dict_82345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1643, 52), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1643)
    
    # Getting the type of 'edecl' (line 1643)
    edecl_82346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1643, 28), 'edecl')
    str_82347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1643, 34), 'str', 'kindselector')
    # Storing an element on a container (line 1643)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1643, 28), edecl_82346, (str_82347, dict_82345))
    # SSA join for if statement (line 1642)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Subscript (line 1644):
    
    # Assigning a Subscript to a Subscript (line 1644):
    
    # Obtaining the type of the subscript
    str_82348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1644, 56), 'str', 'len')
    # Getting the type of 'd1' (line 1644)
    d1_82349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1644, 53), 'd1')
    # Obtaining the member '__getitem__' of a type (line 1644)
    getitem___82350 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1644, 53), d1_82349, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1644)
    subscript_call_result_82351 = invoke(stypy.reporting.localization.Localization(__file__, 1644, 53), getitem___82350, str_82348)
    
    
    # Obtaining the type of the subscript
    str_82352 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1644, 30), 'str', 'kindselector')
    # Getting the type of 'edecl' (line 1644)
    edecl_82353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1644, 24), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1644)
    getitem___82354 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1644, 24), edecl_82353, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1644)
    subscript_call_result_82355 = invoke(stypy.reporting.localization.Localization(__file__, 1644, 24), getitem___82354, str_82352)
    
    str_82356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1644, 46), 'str', '*')
    # Storing an element on a container (line 1644)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1644, 24), subscript_call_result_82355, (str_82356, subscript_call_result_82351))
    # SSA branch for the else part of an if statement (line 1641)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'typespec' (line 1645)
    typespec_82357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1645, 25), 'typespec')
    str_82358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1645, 37), 'str', 'character')
    # Applying the binary operator '==' (line 1645)
    result_eq_82359 = python_operator(stypy.reporting.localization.Localization(__file__, 1645, 25), '==', typespec_82357, str_82358)
    
    # Testing the type of an if condition (line 1645)
    if_condition_82360 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1645, 25), result_eq_82359)
    # Assigning a type to the variable 'if_condition_82360' (line 1645)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1645, 25), 'if_condition_82360', if_condition_82360)
    # SSA begins for if statement (line 1645)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    
    str_82361 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1646, 28), 'str', 'charselector')
    # Getting the type of 'edecl' (line 1646)
    edecl_82362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1646, 50), 'edecl')
    # Applying the binary operator 'notin' (line 1646)
    result_contains_82363 = python_operator(stypy.reporting.localization.Localization(__file__, 1646, 28), 'notin', str_82361, edecl_82362)
    
    
    
    # Obtaining the type of the subscript
    str_82364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1646, 71), 'str', 'charselector')
    # Getting the type of 'edecl' (line 1646)
    edecl_82365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1646, 65), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1646)
    getitem___82366 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1646, 65), edecl_82365, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1646)
    subscript_call_result_82367 = invoke(stypy.reporting.localization.Localization(__file__, 1646, 65), getitem___82366, str_82364)
    
    # Applying the 'not' unary operator (line 1646)
    result_not__82368 = python_operator(stypy.reporting.localization.Localization(__file__, 1646, 61), 'not', subscript_call_result_82367)
    
    # Applying the binary operator 'or' (line 1646)
    result_or_keyword_82369 = python_operator(stypy.reporting.localization.Localization(__file__, 1646, 27), 'or', result_contains_82363, result_not__82368)
    
    # Testing the type of an if condition (line 1646)
    if_condition_82370 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1646, 24), result_or_keyword_82369)
    # Assigning a type to the variable 'if_condition_82370' (line 1646)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1646, 24), 'if_condition_82370', if_condition_82370)
    # SSA begins for if statement (line 1646)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Dict to a Subscript (line 1647):
    
    # Assigning a Dict to a Subscript (line 1647):
    
    # Obtaining an instance of the builtin type 'dict' (line 1647)
    dict_82371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1647, 52), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1647)
    
    # Getting the type of 'edecl' (line 1647)
    edecl_82372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1647, 28), 'edecl')
    str_82373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1647, 34), 'str', 'charselector')
    # Storing an element on a container (line 1647)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1647, 28), edecl_82372, (str_82373, dict_82371))
    # SSA join for if statement (line 1646)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_82374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1648, 27), 'str', 'len')
    
    # Obtaining the type of the subscript
    str_82375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1648, 42), 'str', 'charselector')
    # Getting the type of 'edecl' (line 1648)
    edecl_82376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 36), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1648)
    getitem___82377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1648, 36), edecl_82376, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1648)
    subscript_call_result_82378 = invoke(stypy.reporting.localization.Localization(__file__, 1648, 36), getitem___82377, str_82375)
    
    # Applying the binary operator 'in' (line 1648)
    result_contains_82379 = python_operator(stypy.reporting.localization.Localization(__file__, 1648, 27), 'in', str_82374, subscript_call_result_82378)
    
    # Testing the type of an if condition (line 1648)
    if_condition_82380 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1648, 24), result_contains_82379)
    # Assigning a type to the variable 'if_condition_82380' (line 1648)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1648, 24), 'if_condition_82380', if_condition_82380)
    # SSA begins for if statement (line 1648)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Deleting a member
    
    # Obtaining the type of the subscript
    str_82381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 38), 'str', 'charselector')
    # Getting the type of 'edecl' (line 1649)
    edecl_82382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 32), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1649)
    getitem___82383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 32), edecl_82382, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1649)
    subscript_call_result_82384 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 32), getitem___82383, str_82381)
    
    
    # Obtaining the type of the subscript
    str_82385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 54), 'str', 'len')
    
    # Obtaining the type of the subscript
    str_82386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 38), 'str', 'charselector')
    # Getting the type of 'edecl' (line 1649)
    edecl_82387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 32), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1649)
    getitem___82388 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 32), edecl_82387, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1649)
    subscript_call_result_82389 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 32), getitem___82388, str_82386)
    
    # Obtaining the member '__getitem__' of a type (line 1649)
    getitem___82390 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 32), subscript_call_result_82389, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1649)
    subscript_call_result_82391 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 32), getitem___82390, str_82385)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1649, 28), subscript_call_result_82384, subscript_call_result_82391)
    # SSA join for if statement (line 1648)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Subscript (line 1650):
    
    # Assigning a Subscript to a Subscript (line 1650):
    
    # Obtaining the type of the subscript
    str_82392 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1650, 56), 'str', 'len')
    # Getting the type of 'd1' (line 1650)
    d1_82393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1650, 53), 'd1')
    # Obtaining the member '__getitem__' of a type (line 1650)
    getitem___82394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1650, 53), d1_82393, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1650)
    subscript_call_result_82395 = invoke(stypy.reporting.localization.Localization(__file__, 1650, 53), getitem___82394, str_82392)
    
    
    # Obtaining the type of the subscript
    str_82396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1650, 30), 'str', 'charselector')
    # Getting the type of 'edecl' (line 1650)
    edecl_82397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1650, 24), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1650)
    getitem___82398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1650, 24), edecl_82397, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1650)
    subscript_call_result_82399 = invoke(stypy.reporting.localization.Localization(__file__, 1650, 24), getitem___82398, str_82396)
    
    str_82400 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1650, 46), 'str', '*')
    # Storing an element on a container (line 1650)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1650, 24), subscript_call_result_82399, (str_82400, subscript_call_result_82395))
    # SSA join for if statement (line 1645)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1641)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1640)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_82401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1651, 19), 'str', 'init')
    # Getting the type of 'd1' (line 1651)
    d1_82402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1651, 29), 'd1')
    # Applying the binary operator 'in' (line 1651)
    result_contains_82403 = python_operator(stypy.reporting.localization.Localization(__file__, 1651, 19), 'in', str_82401, d1_82402)
    
    # Testing the type of an if condition (line 1651)
    if_condition_82404 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1651, 16), result_contains_82403)
    # Assigning a type to the variable 'if_condition_82404' (line 1651)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1651, 16), 'if_condition_82404', if_condition_82404)
    # SSA begins for if statement (line 1651)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    
    str_82405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1652, 23), 'str', '=')
    # Getting the type of 'edecl' (line 1652)
    edecl_82406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1652, 30), 'edecl')
    # Applying the binary operator 'in' (line 1652)
    result_contains_82407 = python_operator(stypy.reporting.localization.Localization(__file__, 1652, 23), 'in', str_82405, edecl_82406)
    
    
    
    
    # Obtaining the type of the subscript
    str_82408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1652, 51), 'str', '=')
    # Getting the type of 'edecl' (line 1652)
    edecl_82409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1652, 45), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1652)
    getitem___82410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1652, 45), edecl_82409, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1652)
    subscript_call_result_82411 = invoke(stypy.reporting.localization.Localization(__file__, 1652, 45), getitem___82410, str_82408)
    
    
    # Obtaining the type of the subscript
    str_82412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1652, 62), 'str', 'init')
    # Getting the type of 'd1' (line 1652)
    d1_82413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1652, 59), 'd1')
    # Obtaining the member '__getitem__' of a type (line 1652)
    getitem___82414 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1652, 59), d1_82413, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1652)
    subscript_call_result_82415 = invoke(stypy.reporting.localization.Localization(__file__, 1652, 59), getitem___82414, str_82412)
    
    # Applying the binary operator '==' (line 1652)
    result_eq_82416 = python_operator(stypy.reporting.localization.Localization(__file__, 1652, 45), '==', subscript_call_result_82411, subscript_call_result_82415)
    
    # Applying the 'not' unary operator (line 1652)
    result_not__82417 = python_operator(stypy.reporting.localization.Localization(__file__, 1652, 41), 'not', result_eq_82416)
    
    # Applying the binary operator 'and' (line 1652)
    result_and_keyword_82418 = python_operator(stypy.reporting.localization.Localization(__file__, 1652, 23), 'and', result_contains_82407, result_not__82417)
    
    # Testing the type of an if condition (line 1652)
    if_condition_82419 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1652, 20), result_and_keyword_82418)
    # Assigning a type to the variable 'if_condition_82419' (line 1652)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1652, 20), 'if_condition_82419', if_condition_82419)
    # SSA begins for if statement (line 1652)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1653)
    # Processing the call arguments (line 1653)
    str_82421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1653, 32), 'str', 'updatevars: attempt to change the init expression of "%s" ("%s") to "%s". Ignoring.\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1654)
    tuple_82422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1654, 28), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1654)
    # Adding element type (line 1654)
    # Getting the type of 'ename' (line 1654)
    ename_82423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1654, 28), 'ename', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1654, 28), tuple_82422, ename_82423)
    # Adding element type (line 1654)
    
    # Obtaining the type of the subscript
    str_82424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1654, 41), 'str', '=')
    # Getting the type of 'edecl' (line 1654)
    edecl_82425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1654, 35), 'edecl', False)
    # Obtaining the member '__getitem__' of a type (line 1654)
    getitem___82426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1654, 35), edecl_82425, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1654)
    subscript_call_result_82427 = invoke(stypy.reporting.localization.Localization(__file__, 1654, 35), getitem___82426, str_82424)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1654, 28), tuple_82422, subscript_call_result_82427)
    # Adding element type (line 1654)
    
    # Obtaining the type of the subscript
    str_82428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1654, 50), 'str', 'init')
    # Getting the type of 'd1' (line 1654)
    d1_82429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1654, 47), 'd1', False)
    # Obtaining the member '__getitem__' of a type (line 1654)
    getitem___82430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1654, 47), d1_82429, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1654)
    subscript_call_result_82431 = invoke(stypy.reporting.localization.Localization(__file__, 1654, 47), getitem___82430, str_82428)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1654, 28), tuple_82422, subscript_call_result_82431)
    
    # Applying the binary operator '%' (line 1653)
    result_mod_82432 = python_operator(stypy.reporting.localization.Localization(__file__, 1653, 32), '%', str_82421, tuple_82422)
    
    # Processing the call keyword arguments (line 1653)
    kwargs_82433 = {}
    # Getting the type of 'outmess' (line 1653)
    outmess_82420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1653, 24), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1653)
    outmess_call_result_82434 = invoke(stypy.reporting.localization.Localization(__file__, 1653, 24), outmess_82420, *[result_mod_82432], **kwargs_82433)
    
    # SSA branch for the else part of an if statement (line 1652)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Subscript to a Subscript (line 1656):
    
    # Assigning a Subscript to a Subscript (line 1656):
    
    # Obtaining the type of the subscript
    str_82435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1656, 40), 'str', 'init')
    # Getting the type of 'd1' (line 1656)
    d1_82436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 37), 'd1')
    # Obtaining the member '__getitem__' of a type (line 1656)
    getitem___82437 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1656, 37), d1_82436, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1656)
    subscript_call_result_82438 = invoke(stypy.reporting.localization.Localization(__file__, 1656, 37), getitem___82437, str_82435)
    
    # Getting the type of 'edecl' (line 1656)
    edecl_82439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 24), 'edecl')
    str_82440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1656, 30), 'str', '=')
    # Storing an element on a container (line 1656)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1656, 24), edecl_82439, (str_82440, subscript_call_result_82438))
    # SSA join for if statement (line 1652)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1651)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1607)
    module_type_store.open_ssa_branch('else')
    
    # Call to outmess(...): (line 1658)
    # Processing the call arguments (line 1658)
    str_82442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1658, 24), 'str', 'updatevars: could not crack entity declaration "%s". Ignoring.\n')
    # Getting the type of 'ename' (line 1659)
    ename_82443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 20), 'ename', False)
    
    # Call to group(...): (line 1659)
    # Processing the call arguments (line 1659)
    str_82446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1659, 36), 'str', 'after')
    # Processing the call keyword arguments (line 1659)
    kwargs_82447 = {}
    # Getting the type of 'm' (line 1659)
    m_82444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 28), 'm', False)
    # Obtaining the member 'group' of a type (line 1659)
    group_82445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1659, 28), m_82444, 'group')
    # Calling group(args, kwargs) (line 1659)
    group_call_result_82448 = invoke(stypy.reporting.localization.Localization(__file__, 1659, 28), group_82445, *[str_82446], **kwargs_82447)
    
    # Applying the binary operator '+' (line 1659)
    result_add_82449 = python_operator(stypy.reporting.localization.Localization(__file__, 1659, 20), '+', ename_82443, group_call_result_82448)
    
    # Applying the binary operator '%' (line 1658)
    result_mod_82450 = python_operator(stypy.reporting.localization.Localization(__file__, 1658, 24), '%', str_82442, result_add_82449)
    
    # Processing the call keyword arguments (line 1658)
    kwargs_82451 = {}
    # Getting the type of 'outmess' (line 1658)
    outmess_82441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1658, 16), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1658)
    outmess_call_result_82452 = invoke(stypy.reporting.localization.Localization(__file__, 1658, 16), outmess_82441, *[result_mod_82450], **kwargs_82451)
    
    # SSA join for if statement (line 1607)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1605)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to list(...): (line 1660)
    # Processing the call arguments (line 1660)
    
    # Call to keys(...): (line 1660)
    # Processing the call keyword arguments (line 1660)
    kwargs_82456 = {}
    # Getting the type of 'edecl' (line 1660)
    edecl_82454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1660, 22), 'edecl', False)
    # Obtaining the member 'keys' of a type (line 1660)
    keys_82455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1660, 22), edecl_82454, 'keys')
    # Calling keys(args, kwargs) (line 1660)
    keys_call_result_82457 = invoke(stypy.reporting.localization.Localization(__file__, 1660, 22), keys_82455, *[], **kwargs_82456)
    
    # Processing the call keyword arguments (line 1660)
    kwargs_82458 = {}
    # Getting the type of 'list' (line 1660)
    list_82453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1660, 17), 'list', False)
    # Calling list(args, kwargs) (line 1660)
    list_call_result_82459 = invoke(stypy.reporting.localization.Localization(__file__, 1660, 17), list_82453, *[keys_call_result_82457], **kwargs_82458)
    
    # Testing the type of a for loop iterable (line 1660)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1660, 8), list_call_result_82459)
    # Getting the type of the for loop variable (line 1660)
    for_loop_var_82460 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1660, 8), list_call_result_82459)
    # Assigning a type to the variable 'k' (line 1660)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1660, 8), 'k', for_loop_var_82460)
    # SSA begins for a for statement (line 1660)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1661)
    k_82461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1661, 25), 'k')
    # Getting the type of 'edecl' (line 1661)
    edecl_82462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1661, 19), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1661)
    getitem___82463 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1661, 19), edecl_82462, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1661)
    subscript_call_result_82464 = invoke(stypy.reporting.localization.Localization(__file__, 1661, 19), getitem___82463, k_82461)
    
    # Applying the 'not' unary operator (line 1661)
    result_not__82465 = python_operator(stypy.reporting.localization.Localization(__file__, 1661, 15), 'not', subscript_call_result_82464)
    
    # Testing the type of an if condition (line 1661)
    if_condition_82466 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1661, 12), result_not__82465)
    # Assigning a type to the variable 'if_condition_82466' (line 1661)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1661, 12), 'if_condition_82466', if_condition_82466)
    # SSA begins for if statement (line 1661)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Deleting a member
    # Getting the type of 'edecl' (line 1662)
    edecl_82467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 20), 'edecl')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1662)
    k_82468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 26), 'k')
    # Getting the type of 'edecl' (line 1662)
    edecl_82469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 20), 'edecl')
    # Obtaining the member '__getitem__' of a type (line 1662)
    getitem___82470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1662, 20), edecl_82469, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1662)
    subscript_call_result_82471 = invoke(stypy.reporting.localization.Localization(__file__, 1662, 20), getitem___82470, k_82468)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1662, 16), edecl_82467, subscript_call_result_82471)
    # SSA join for if statement (line 1661)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 1663):
    
    # Assigning a Name to a Subscript (line 1663):
    # Getting the type of 'edecl' (line 1663)
    edecl_82472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1663, 50), 'edecl')
    
    # Obtaining the type of the subscript
    str_82473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1663, 33), 'str', 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1663)
    groupcounter_82474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1663, 19), 'groupcounter')
    # Getting the type of 'groupcache' (line 1663)
    groupcache_82475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1663, 8), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1663)
    getitem___82476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1663, 8), groupcache_82475, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1663)
    subscript_call_result_82477 = invoke(stypy.reporting.localization.Localization(__file__, 1663, 8), getitem___82476, groupcounter_82474)
    
    # Obtaining the member '__getitem__' of a type (line 1663)
    getitem___82478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1663, 8), subscript_call_result_82477, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1663)
    subscript_call_result_82479 = invoke(stypy.reporting.localization.Localization(__file__, 1663, 8), getitem___82478, str_82473)
    
    # Getting the type of 'ename' (line 1663)
    ename_82480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1663, 41), 'ename')
    # Storing an element on a container (line 1663)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1663, 8), subscript_call_result_82479, (ename_82480, edecl_82472))
    
    
    str_82481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1664, 11), 'str', 'varnames')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1664)
    groupcounter_82482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1664, 36), 'groupcounter')
    # Getting the type of 'groupcache' (line 1664)
    groupcache_82483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1664, 25), 'groupcache')
    # Obtaining the member '__getitem__' of a type (line 1664)
    getitem___82484 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1664, 25), groupcache_82483, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1664)
    subscript_call_result_82485 = invoke(stypy.reporting.localization.Localization(__file__, 1664, 25), getitem___82484, groupcounter_82482)
    
    # Applying the binary operator 'in' (line 1664)
    result_contains_82486 = python_operator(stypy.reporting.localization.Localization(__file__, 1664, 11), 'in', str_82481, subscript_call_result_82485)
    
    # Testing the type of an if condition (line 1664)
    if_condition_82487 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1664, 8), result_contains_82486)
    # Assigning a type to the variable 'if_condition_82487' (line 1664)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1664, 8), 'if_condition_82487', if_condition_82487)
    # SSA begins for if statement (line 1664)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1665)
    # Processing the call arguments (line 1665)
    # Getting the type of 'ename' (line 1665)
    ename_82496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1665, 56), 'ename', False)
    # Processing the call keyword arguments (line 1665)
    kwargs_82497 = {}
    
    # Obtaining the type of the subscript
    str_82488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1665, 37), 'str', 'varnames')
    
    # Obtaining the type of the subscript
    # Getting the type of 'groupcounter' (line 1665)
    groupcounter_82489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1665, 23), 'groupcounter', False)
    # Getting the type of 'groupcache' (line 1665)
    groupcache_82490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1665, 12), 'groupcache', False)
    # Obtaining the member '__getitem__' of a type (line 1665)
    getitem___82491 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1665, 12), groupcache_82490, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1665)
    subscript_call_result_82492 = invoke(stypy.reporting.localization.Localization(__file__, 1665, 12), getitem___82491, groupcounter_82489)
    
    # Obtaining the member '__getitem__' of a type (line 1665)
    getitem___82493 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1665, 12), subscript_call_result_82492, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1665)
    subscript_call_result_82494 = invoke(stypy.reporting.localization.Localization(__file__, 1665, 12), getitem___82493, str_82488)
    
    # Obtaining the member 'append' of a type (line 1665)
    append_82495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1665, 12), subscript_call_result_82494, 'append')
    # Calling append(args, kwargs) (line 1665)
    append_call_result_82498 = invoke(stypy.reporting.localization.Localization(__file__, 1665, 12), append_82495, *[ename_82496], **kwargs_82497)
    
    # SSA join for if statement (line 1664)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 1666):
    
    # Assigning a Name to a Name (line 1666):
    # Getting the type of 'ename' (line 1666)
    ename_82499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1666, 20), 'ename')
    # Assigning a type to the variable 'last_name' (line 1666)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1666, 8), 'last_name', ename_82499)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'last_name' (line 1667)
    last_name_82500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1667, 11), 'last_name')
    # Assigning a type to the variable 'stypy_return_type' (line 1667)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1667, 4), 'stypy_return_type', last_name_82500)
    
    # ################# End of 'updatevars(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'updatevars' in the type store
    # Getting the type of 'stypy_return_type' (line 1526)
    stypy_return_type_82501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1526, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_82501)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'updatevars'
    return stypy_return_type_82501

# Assigning a type to the variable 'updatevars' (line 1526)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1526, 0), 'updatevars', updatevars)

@norecursion
def cracktypespec(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'cracktypespec'
    module_type_store = module_type_store.open_function_context('cracktypespec', 1670, 0, False)
    
    # Passed parameters checking function
    cracktypespec.stypy_localization = localization
    cracktypespec.stypy_type_of_self = None
    cracktypespec.stypy_type_store = module_type_store
    cracktypespec.stypy_function_name = 'cracktypespec'
    cracktypespec.stypy_param_names_list = ['typespec', 'selector']
    cracktypespec.stypy_varargs_param_name = None
    cracktypespec.stypy_kwargs_param_name = None
    cracktypespec.stypy_call_defaults = defaults
    cracktypespec.stypy_call_varargs = varargs
    cracktypespec.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'cracktypespec', ['typespec', 'selector'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'cracktypespec', localization, ['typespec', 'selector'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'cracktypespec(...)' code ##################

    
    # Assigning a Name to a Name (line 1671):
    
    # Assigning a Name to a Name (line 1671):
    # Getting the type of 'None' (line 1671)
    None_82502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1671, 17), 'None')
    # Assigning a type to the variable 'kindselect' (line 1671)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1671, 4), 'kindselect', None_82502)
    
    # Assigning a Name to a Name (line 1672):
    
    # Assigning a Name to a Name (line 1672):
    # Getting the type of 'None' (line 1672)
    None_82503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1672, 17), 'None')
    # Assigning a type to the variable 'charselect' (line 1672)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1672, 4), 'charselect', None_82503)
    
    # Assigning a Name to a Name (line 1673):
    
    # Assigning a Name to a Name (line 1673):
    # Getting the type of 'None' (line 1673)
    None_82504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1673, 15), 'None')
    # Assigning a type to the variable 'typename' (line 1673)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1673, 4), 'typename', None_82504)
    
    # Getting the type of 'selector' (line 1674)
    selector_82505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1674, 7), 'selector')
    # Testing the type of an if condition (line 1674)
    if_condition_82506 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1674, 4), selector_82505)
    # Assigning a type to the variable 'if_condition_82506' (line 1674)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1674, 4), 'if_condition_82506', if_condition_82506)
    # SSA begins for if statement (line 1674)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'typespec' (line 1675)
    typespec_82507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1675, 11), 'typespec')
    
    # Obtaining an instance of the builtin type 'list' (line 1675)
    list_82508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1675, 23), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1675)
    # Adding element type (line 1675)
    str_82509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1675, 24), 'str', 'complex')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1675, 23), list_82508, str_82509)
    # Adding element type (line 1675)
    str_82510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1675, 35), 'str', 'integer')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1675, 23), list_82508, str_82510)
    # Adding element type (line 1675)
    str_82511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1675, 46), 'str', 'logical')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1675, 23), list_82508, str_82511)
    # Adding element type (line 1675)
    str_82512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1675, 57), 'str', 'real')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1675, 23), list_82508, str_82512)
    
    # Applying the binary operator 'in' (line 1675)
    result_contains_82513 = python_operator(stypy.reporting.localization.Localization(__file__, 1675, 11), 'in', typespec_82507, list_82508)
    
    # Testing the type of an if condition (line 1675)
    if_condition_82514 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1675, 8), result_contains_82513)
    # Assigning a type to the variable 'if_condition_82514' (line 1675)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1675, 8), 'if_condition_82514', if_condition_82514)
    # SSA begins for if statement (line 1675)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1676):
    
    # Assigning a Call to a Name (line 1676):
    
    # Call to match(...): (line 1676)
    # Processing the call arguments (line 1676)
    # Getting the type of 'selector' (line 1676)
    selector_82517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1676, 44), 'selector', False)
    # Processing the call keyword arguments (line 1676)
    kwargs_82518 = {}
    # Getting the type of 'kindselector' (line 1676)
    kindselector_82515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1676, 25), 'kindselector', False)
    # Obtaining the member 'match' of a type (line 1676)
    match_82516 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1676, 25), kindselector_82515, 'match')
    # Calling match(args, kwargs) (line 1676)
    match_call_result_82519 = invoke(stypy.reporting.localization.Localization(__file__, 1676, 25), match_82516, *[selector_82517], **kwargs_82518)
    
    # Assigning a type to the variable 'kindselect' (line 1676)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1676, 12), 'kindselect', match_call_result_82519)
    
    
    # Getting the type of 'kindselect' (line 1677)
    kindselect_82520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1677, 19), 'kindselect')
    # Applying the 'not' unary operator (line 1677)
    result_not__82521 = python_operator(stypy.reporting.localization.Localization(__file__, 1677, 15), 'not', kindselect_82520)
    
    # Testing the type of an if condition (line 1677)
    if_condition_82522 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1677, 12), result_not__82521)
    # Assigning a type to the variable 'if_condition_82522' (line 1677)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1677, 12), 'if_condition_82522', if_condition_82522)
    # SSA begins for if statement (line 1677)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1678)
    # Processing the call arguments (line 1678)
    str_82524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1679, 20), 'str', 'cracktypespec: no kindselector pattern found for %s\n')
    
    # Call to repr(...): (line 1679)
    # Processing the call arguments (line 1679)
    # Getting the type of 'selector' (line 1679)
    selector_82526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1679, 84), 'selector', False)
    # Processing the call keyword arguments (line 1679)
    kwargs_82527 = {}
    # Getting the type of 'repr' (line 1679)
    repr_82525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1679, 79), 'repr', False)
    # Calling repr(args, kwargs) (line 1679)
    repr_call_result_82528 = invoke(stypy.reporting.localization.Localization(__file__, 1679, 79), repr_82525, *[selector_82526], **kwargs_82527)
    
    # Applying the binary operator '%' (line 1679)
    result_mod_82529 = python_operator(stypy.reporting.localization.Localization(__file__, 1679, 20), '%', str_82524, repr_call_result_82528)
    
    # Processing the call keyword arguments (line 1678)
    kwargs_82530 = {}
    # Getting the type of 'outmess' (line 1678)
    outmess_82523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1678, 16), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1678)
    outmess_call_result_82531 = invoke(stypy.reporting.localization.Localization(__file__, 1678, 16), outmess_82523, *[result_mod_82529], **kwargs_82530)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1680)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1680, 16), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 1677)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1681):
    
    # Assigning a Call to a Name (line 1681):
    
    # Call to groupdict(...): (line 1681)
    # Processing the call keyword arguments (line 1681)
    kwargs_82534 = {}
    # Getting the type of 'kindselect' (line 1681)
    kindselect_82532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1681, 25), 'kindselect', False)
    # Obtaining the member 'groupdict' of a type (line 1681)
    groupdict_82533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1681, 25), kindselect_82532, 'groupdict')
    # Calling groupdict(args, kwargs) (line 1681)
    groupdict_call_result_82535 = invoke(stypy.reporting.localization.Localization(__file__, 1681, 25), groupdict_82533, *[], **kwargs_82534)
    
    # Assigning a type to the variable 'kindselect' (line 1681)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1681, 12), 'kindselect', groupdict_call_result_82535)
    
    # Assigning a Subscript to a Subscript (line 1682):
    
    # Assigning a Subscript to a Subscript (line 1682):
    
    # Obtaining the type of the subscript
    str_82536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1682, 41), 'str', 'kind2')
    # Getting the type of 'kindselect' (line 1682)
    kindselect_82537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1682, 30), 'kindselect')
    # Obtaining the member '__getitem__' of a type (line 1682)
    getitem___82538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1682, 30), kindselect_82537, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1682)
    subscript_call_result_82539 = invoke(stypy.reporting.localization.Localization(__file__, 1682, 30), getitem___82538, str_82536)
    
    # Getting the type of 'kindselect' (line 1682)
    kindselect_82540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1682, 12), 'kindselect')
    str_82541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1682, 23), 'str', '*')
    # Storing an element on a container (line 1682)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1682, 12), kindselect_82540, (str_82541, subscript_call_result_82539))
    # Deleting a member
    # Getting the type of 'kindselect' (line 1683)
    kindselect_82542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1683, 16), 'kindselect')
    
    # Obtaining the type of the subscript
    str_82543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1683, 27), 'str', 'kind2')
    # Getting the type of 'kindselect' (line 1683)
    kindselect_82544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1683, 16), 'kindselect')
    # Obtaining the member '__getitem__' of a type (line 1683)
    getitem___82545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1683, 16), kindselect_82544, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1683)
    subscript_call_result_82546 = invoke(stypy.reporting.localization.Localization(__file__, 1683, 16), getitem___82545, str_82543)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1683, 12), kindselect_82542, subscript_call_result_82546)
    
    
    # Call to list(...): (line 1684)
    # Processing the call arguments (line 1684)
    
    # Call to keys(...): (line 1684)
    # Processing the call keyword arguments (line 1684)
    kwargs_82550 = {}
    # Getting the type of 'kindselect' (line 1684)
    kindselect_82548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 26), 'kindselect', False)
    # Obtaining the member 'keys' of a type (line 1684)
    keys_82549 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1684, 26), kindselect_82548, 'keys')
    # Calling keys(args, kwargs) (line 1684)
    keys_call_result_82551 = invoke(stypy.reporting.localization.Localization(__file__, 1684, 26), keys_82549, *[], **kwargs_82550)
    
    # Processing the call keyword arguments (line 1684)
    kwargs_82552 = {}
    # Getting the type of 'list' (line 1684)
    list_82547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 21), 'list', False)
    # Calling list(args, kwargs) (line 1684)
    list_call_result_82553 = invoke(stypy.reporting.localization.Localization(__file__, 1684, 21), list_82547, *[keys_call_result_82551], **kwargs_82552)
    
    # Testing the type of a for loop iterable (line 1684)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1684, 12), list_call_result_82553)
    # Getting the type of the for loop variable (line 1684)
    for_loop_var_82554 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1684, 12), list_call_result_82553)
    # Assigning a type to the variable 'k' (line 1684)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1684, 12), 'k', for_loop_var_82554)
    # SSA begins for a for statement (line 1684)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1685)
    k_82555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1685, 34), 'k')
    # Getting the type of 'kindselect' (line 1685)
    kindselect_82556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1685, 23), 'kindselect')
    # Obtaining the member '__getitem__' of a type (line 1685)
    getitem___82557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1685, 23), kindselect_82556, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1685)
    subscript_call_result_82558 = invoke(stypy.reporting.localization.Localization(__file__, 1685, 23), getitem___82557, k_82555)
    
    # Applying the 'not' unary operator (line 1685)
    result_not__82559 = python_operator(stypy.reporting.localization.Localization(__file__, 1685, 19), 'not', subscript_call_result_82558)
    
    # Testing the type of an if condition (line 1685)
    if_condition_82560 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1685, 16), result_not__82559)
    # Assigning a type to the variable 'if_condition_82560' (line 1685)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1685, 16), 'if_condition_82560', if_condition_82560)
    # SSA begins for if statement (line 1685)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Deleting a member
    # Getting the type of 'kindselect' (line 1686)
    kindselect_82561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1686, 24), 'kindselect')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1686)
    k_82562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1686, 35), 'k')
    # Getting the type of 'kindselect' (line 1686)
    kindselect_82563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1686, 24), 'kindselect')
    # Obtaining the member '__getitem__' of a type (line 1686)
    getitem___82564 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1686, 24), kindselect_82563, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1686)
    subscript_call_result_82565 = invoke(stypy.reporting.localization.Localization(__file__, 1686, 24), getitem___82564, k_82562)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1686, 20), kindselect_82561, subscript_call_result_82565)
    # SSA join for if statement (line 1685)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to list(...): (line 1687)
    # Processing the call arguments (line 1687)
    
    # Call to items(...): (line 1687)
    # Processing the call keyword arguments (line 1687)
    kwargs_82569 = {}
    # Getting the type of 'kindselect' (line 1687)
    kindselect_82567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1687, 29), 'kindselect', False)
    # Obtaining the member 'items' of a type (line 1687)
    items_82568 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1687, 29), kindselect_82567, 'items')
    # Calling items(args, kwargs) (line 1687)
    items_call_result_82570 = invoke(stypy.reporting.localization.Localization(__file__, 1687, 29), items_82568, *[], **kwargs_82569)
    
    # Processing the call keyword arguments (line 1687)
    kwargs_82571 = {}
    # Getting the type of 'list' (line 1687)
    list_82566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1687, 24), 'list', False)
    # Calling list(args, kwargs) (line 1687)
    list_call_result_82572 = invoke(stypy.reporting.localization.Localization(__file__, 1687, 24), list_82566, *[items_call_result_82570], **kwargs_82571)
    
    # Testing the type of a for loop iterable (line 1687)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1687, 12), list_call_result_82572)
    # Getting the type of the for loop variable (line 1687)
    for_loop_var_82573 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1687, 12), list_call_result_82572)
    # Assigning a type to the variable 'k' (line 1687)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1687, 12), 'k', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1687, 12), for_loop_var_82573))
    # Assigning a type to the variable 'i' (line 1687)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1687, 12), 'i', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1687, 12), for_loop_var_82573))
    # SSA begins for a for statement (line 1687)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Subscript (line 1688):
    
    # Assigning a Call to a Subscript (line 1688):
    
    # Call to rmbadname1(...): (line 1688)
    # Processing the call arguments (line 1688)
    # Getting the type of 'i' (line 1688)
    i_82575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1688, 43), 'i', False)
    # Processing the call keyword arguments (line 1688)
    kwargs_82576 = {}
    # Getting the type of 'rmbadname1' (line 1688)
    rmbadname1_82574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1688, 32), 'rmbadname1', False)
    # Calling rmbadname1(args, kwargs) (line 1688)
    rmbadname1_call_result_82577 = invoke(stypy.reporting.localization.Localization(__file__, 1688, 32), rmbadname1_82574, *[i_82575], **kwargs_82576)
    
    # Getting the type of 'kindselect' (line 1688)
    kindselect_82578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1688, 16), 'kindselect')
    # Getting the type of 'k' (line 1688)
    k_82579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1688, 27), 'k')
    # Storing an element on a container (line 1688)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1688, 16), kindselect_82578, (k_82579, rmbadname1_call_result_82577))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1675)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'typespec' (line 1689)
    typespec_82580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1689, 13), 'typespec')
    str_82581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1689, 25), 'str', 'character')
    # Applying the binary operator '==' (line 1689)
    result_eq_82582 = python_operator(stypy.reporting.localization.Localization(__file__, 1689, 13), '==', typespec_82580, str_82581)
    
    # Testing the type of an if condition (line 1689)
    if_condition_82583 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1689, 13), result_eq_82582)
    # Assigning a type to the variable 'if_condition_82583' (line 1689)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1689, 13), 'if_condition_82583', if_condition_82583)
    # SSA begins for if statement (line 1689)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1690):
    
    # Assigning a Call to a Name (line 1690):
    
    # Call to match(...): (line 1690)
    # Processing the call arguments (line 1690)
    # Getting the type of 'selector' (line 1690)
    selector_82586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 44), 'selector', False)
    # Processing the call keyword arguments (line 1690)
    kwargs_82587 = {}
    # Getting the type of 'charselector' (line 1690)
    charselector_82584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 25), 'charselector', False)
    # Obtaining the member 'match' of a type (line 1690)
    match_82585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1690, 25), charselector_82584, 'match')
    # Calling match(args, kwargs) (line 1690)
    match_call_result_82588 = invoke(stypy.reporting.localization.Localization(__file__, 1690, 25), match_82585, *[selector_82586], **kwargs_82587)
    
    # Assigning a type to the variable 'charselect' (line 1690)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1690, 12), 'charselect', match_call_result_82588)
    
    
    # Getting the type of 'charselect' (line 1691)
    charselect_82589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 19), 'charselect')
    # Applying the 'not' unary operator (line 1691)
    result_not__82590 = python_operator(stypy.reporting.localization.Localization(__file__, 1691, 15), 'not', charselect_82589)
    
    # Testing the type of an if condition (line 1691)
    if_condition_82591 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1691, 12), result_not__82590)
    # Assigning a type to the variable 'if_condition_82591' (line 1691)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1691, 12), 'if_condition_82591', if_condition_82591)
    # SSA begins for if statement (line 1691)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1692)
    # Processing the call arguments (line 1692)
    str_82593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1693, 20), 'str', 'cracktypespec: no charselector pattern found for %s\n')
    
    # Call to repr(...): (line 1693)
    # Processing the call arguments (line 1693)
    # Getting the type of 'selector' (line 1693)
    selector_82595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 84), 'selector', False)
    # Processing the call keyword arguments (line 1693)
    kwargs_82596 = {}
    # Getting the type of 'repr' (line 1693)
    repr_82594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 79), 'repr', False)
    # Calling repr(args, kwargs) (line 1693)
    repr_call_result_82597 = invoke(stypy.reporting.localization.Localization(__file__, 1693, 79), repr_82594, *[selector_82595], **kwargs_82596)
    
    # Applying the binary operator '%' (line 1693)
    result_mod_82598 = python_operator(stypy.reporting.localization.Localization(__file__, 1693, 20), '%', str_82593, repr_call_result_82597)
    
    # Processing the call keyword arguments (line 1692)
    kwargs_82599 = {}
    # Getting the type of 'outmess' (line 1692)
    outmess_82592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1692, 16), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1692)
    outmess_call_result_82600 = invoke(stypy.reporting.localization.Localization(__file__, 1692, 16), outmess_82592, *[result_mod_82598], **kwargs_82599)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1694)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1694, 16), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 1691)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1695):
    
    # Assigning a Call to a Name (line 1695):
    
    # Call to groupdict(...): (line 1695)
    # Processing the call keyword arguments (line 1695)
    kwargs_82603 = {}
    # Getting the type of 'charselect' (line 1695)
    charselect_82601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1695, 25), 'charselect', False)
    # Obtaining the member 'groupdict' of a type (line 1695)
    groupdict_82602 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1695, 25), charselect_82601, 'groupdict')
    # Calling groupdict(args, kwargs) (line 1695)
    groupdict_call_result_82604 = invoke(stypy.reporting.localization.Localization(__file__, 1695, 25), groupdict_82602, *[], **kwargs_82603)
    
    # Assigning a type to the variable 'charselect' (line 1695)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1695, 12), 'charselect', groupdict_call_result_82604)
    
    # Assigning a Subscript to a Subscript (line 1696):
    
    # Assigning a Subscript to a Subscript (line 1696):
    
    # Obtaining the type of the subscript
    str_82605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1696, 41), 'str', 'charlen')
    # Getting the type of 'charselect' (line 1696)
    charselect_82606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1696, 30), 'charselect')
    # Obtaining the member '__getitem__' of a type (line 1696)
    getitem___82607 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1696, 30), charselect_82606, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1696)
    subscript_call_result_82608 = invoke(stypy.reporting.localization.Localization(__file__, 1696, 30), getitem___82607, str_82605)
    
    # Getting the type of 'charselect' (line 1696)
    charselect_82609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1696, 12), 'charselect')
    str_82610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1696, 23), 'str', '*')
    # Storing an element on a container (line 1696)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1696, 12), charselect_82609, (str_82610, subscript_call_result_82608))
    # Deleting a member
    # Getting the type of 'charselect' (line 1697)
    charselect_82611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1697, 16), 'charselect')
    
    # Obtaining the type of the subscript
    str_82612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1697, 27), 'str', 'charlen')
    # Getting the type of 'charselect' (line 1697)
    charselect_82613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1697, 16), 'charselect')
    # Obtaining the member '__getitem__' of a type (line 1697)
    getitem___82614 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1697, 16), charselect_82613, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1697)
    subscript_call_result_82615 = invoke(stypy.reporting.localization.Localization(__file__, 1697, 16), getitem___82614, str_82612)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1697, 12), charselect_82611, subscript_call_result_82615)
    
    
    # Obtaining the type of the subscript
    str_82616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1698, 26), 'str', 'lenkind')
    # Getting the type of 'charselect' (line 1698)
    charselect_82617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 15), 'charselect')
    # Obtaining the member '__getitem__' of a type (line 1698)
    getitem___82618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 15), charselect_82617, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1698)
    subscript_call_result_82619 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 15), getitem___82618, str_82616)
    
    # Testing the type of an if condition (line 1698)
    if_condition_82620 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1698, 12), subscript_call_result_82619)
    # Assigning a type to the variable 'if_condition_82620' (line 1698)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 12), 'if_condition_82620', if_condition_82620)
    # SSA begins for if statement (line 1698)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1699):
    
    # Assigning a Call to a Name (line 1699):
    
    # Call to match(...): (line 1699)
    # Processing the call arguments (line 1699)
    
    # Call to markoutercomma(...): (line 1700)
    # Processing the call arguments (line 1700)
    
    # Obtaining the type of the subscript
    str_82624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1700, 46), 'str', 'lenkind')
    # Getting the type of 'charselect' (line 1700)
    charselect_82625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1700, 35), 'charselect', False)
    # Obtaining the member '__getitem__' of a type (line 1700)
    getitem___82626 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1700, 35), charselect_82625, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1700)
    subscript_call_result_82627 = invoke(stypy.reporting.localization.Localization(__file__, 1700, 35), getitem___82626, str_82624)
    
    # Processing the call keyword arguments (line 1700)
    kwargs_82628 = {}
    # Getting the type of 'markoutercomma' (line 1700)
    markoutercomma_82623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1700, 20), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 1700)
    markoutercomma_call_result_82629 = invoke(stypy.reporting.localization.Localization(__file__, 1700, 20), markoutercomma_82623, *[subscript_call_result_82627], **kwargs_82628)
    
    # Processing the call keyword arguments (line 1699)
    kwargs_82630 = {}
    # Getting the type of 'lenkindpattern' (line 1699)
    lenkindpattern_82621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 26), 'lenkindpattern', False)
    # Obtaining the member 'match' of a type (line 1699)
    match_82622 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 26), lenkindpattern_82621, 'match')
    # Calling match(args, kwargs) (line 1699)
    match_call_result_82631 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 26), match_82622, *[markoutercomma_call_result_82629], **kwargs_82630)
    
    # Assigning a type to the variable 'lenkind' (line 1699)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1699, 16), 'lenkind', match_call_result_82631)
    
    # Assigning a Call to a Name (line 1701):
    
    # Assigning a Call to a Name (line 1701):
    
    # Call to groupdict(...): (line 1701)
    # Processing the call keyword arguments (line 1701)
    kwargs_82634 = {}
    # Getting the type of 'lenkind' (line 1701)
    lenkind_82632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1701, 26), 'lenkind', False)
    # Obtaining the member 'groupdict' of a type (line 1701)
    groupdict_82633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1701, 26), lenkind_82632, 'groupdict')
    # Calling groupdict(args, kwargs) (line 1701)
    groupdict_call_result_82635 = invoke(stypy.reporting.localization.Localization(__file__, 1701, 26), groupdict_82633, *[], **kwargs_82634)
    
    # Assigning a type to the variable 'lenkind' (line 1701)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1701, 16), 'lenkind', groupdict_call_result_82635)
    
    
    # Obtaining an instance of the builtin type 'list' (line 1702)
    list_82636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1702, 26), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1702)
    # Adding element type (line 1702)
    str_82637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1702, 27), 'str', 'len')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1702, 26), list_82636, str_82637)
    # Adding element type (line 1702)
    str_82638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1702, 34), 'str', 'kind')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1702, 26), list_82636, str_82638)
    
    # Testing the type of a for loop iterable (line 1702)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1702, 16), list_82636)
    # Getting the type of the for loop variable (line 1702)
    for_loop_var_82639 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1702, 16), list_82636)
    # Assigning a type to the variable 'lk' (line 1702)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1702, 16), 'lk', for_loop_var_82639)
    # SSA begins for a for statement (line 1702)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'lk' (line 1703)
    lk_82640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1703, 31), 'lk')
    str_82641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1703, 36), 'str', '2')
    # Applying the binary operator '+' (line 1703)
    result_add_82642 = python_operator(stypy.reporting.localization.Localization(__file__, 1703, 31), '+', lk_82640, str_82641)
    
    # Getting the type of 'lenkind' (line 1703)
    lenkind_82643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1703, 23), 'lenkind')
    # Obtaining the member '__getitem__' of a type (line 1703)
    getitem___82644 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1703, 23), lenkind_82643, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1703)
    subscript_call_result_82645 = invoke(stypy.reporting.localization.Localization(__file__, 1703, 23), getitem___82644, result_add_82642)
    
    # Testing the type of an if condition (line 1703)
    if_condition_82646 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1703, 20), subscript_call_result_82645)
    # Assigning a type to the variable 'if_condition_82646' (line 1703)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1703, 20), 'if_condition_82646', if_condition_82646)
    # SSA begins for if statement (line 1703)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 1704):
    
    # Assigning a Subscript to a Subscript (line 1704):
    
    # Obtaining the type of the subscript
    # Getting the type of 'lk' (line 1704)
    lk_82647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 46), 'lk')
    str_82648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1704, 51), 'str', '2')
    # Applying the binary operator '+' (line 1704)
    result_add_82649 = python_operator(stypy.reporting.localization.Localization(__file__, 1704, 46), '+', lk_82647, str_82648)
    
    # Getting the type of 'lenkind' (line 1704)
    lenkind_82650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 38), 'lenkind')
    # Obtaining the member '__getitem__' of a type (line 1704)
    getitem___82651 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1704, 38), lenkind_82650, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1704)
    subscript_call_result_82652 = invoke(stypy.reporting.localization.Localization(__file__, 1704, 38), getitem___82651, result_add_82649)
    
    # Getting the type of 'lenkind' (line 1704)
    lenkind_82653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 24), 'lenkind')
    # Getting the type of 'lk' (line 1704)
    lk_82654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 32), 'lk')
    # Storing an element on a container (line 1704)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1704, 24), lenkind_82653, (lk_82654, subscript_call_result_82652))
    # SSA join for if statement (line 1703)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Subscript (line 1705):
    
    # Assigning a Subscript to a Subscript (line 1705):
    
    # Obtaining the type of the subscript
    # Getting the type of 'lk' (line 1705)
    lk_82655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1705, 45), 'lk')
    # Getting the type of 'lenkind' (line 1705)
    lenkind_82656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1705, 37), 'lenkind')
    # Obtaining the member '__getitem__' of a type (line 1705)
    getitem___82657 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1705, 37), lenkind_82656, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1705)
    subscript_call_result_82658 = invoke(stypy.reporting.localization.Localization(__file__, 1705, 37), getitem___82657, lk_82655)
    
    # Getting the type of 'charselect' (line 1705)
    charselect_82659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1705, 20), 'charselect')
    # Getting the type of 'lk' (line 1705)
    lk_82660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1705, 31), 'lk')
    # Storing an element on a container (line 1705)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1705, 20), charselect_82659, (lk_82660, subscript_call_result_82658))
    # Deleting a member
    # Getting the type of 'lenkind' (line 1706)
    lenkind_82661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 24), 'lenkind')
    
    # Obtaining the type of the subscript
    # Getting the type of 'lk' (line 1706)
    lk_82662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 32), 'lk')
    str_82663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1706, 37), 'str', '2')
    # Applying the binary operator '+' (line 1706)
    result_add_82664 = python_operator(stypy.reporting.localization.Localization(__file__, 1706, 32), '+', lk_82662, str_82663)
    
    # Getting the type of 'lenkind' (line 1706)
    lenkind_82665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 24), 'lenkind')
    # Obtaining the member '__getitem__' of a type (line 1706)
    getitem___82666 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1706, 24), lenkind_82665, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1706)
    subscript_call_result_82667 = invoke(stypy.reporting.localization.Localization(__file__, 1706, 24), getitem___82666, result_add_82664)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1706, 20), lenkind_82661, subscript_call_result_82667)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1698)
    module_type_store = module_type_store.join_ssa_context()
    
    # Deleting a member
    # Getting the type of 'charselect' (line 1707)
    charselect_82668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 16), 'charselect')
    
    # Obtaining the type of the subscript
    str_82669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1707, 27), 'str', 'lenkind')
    # Getting the type of 'charselect' (line 1707)
    charselect_82670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 16), 'charselect')
    # Obtaining the member '__getitem__' of a type (line 1707)
    getitem___82671 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1707, 16), charselect_82670, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1707)
    subscript_call_result_82672 = invoke(stypy.reporting.localization.Localization(__file__, 1707, 16), getitem___82671, str_82669)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1707, 12), charselect_82668, subscript_call_result_82672)
    
    
    # Call to list(...): (line 1708)
    # Processing the call arguments (line 1708)
    
    # Call to keys(...): (line 1708)
    # Processing the call keyword arguments (line 1708)
    kwargs_82676 = {}
    # Getting the type of 'charselect' (line 1708)
    charselect_82674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1708, 26), 'charselect', False)
    # Obtaining the member 'keys' of a type (line 1708)
    keys_82675 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1708, 26), charselect_82674, 'keys')
    # Calling keys(args, kwargs) (line 1708)
    keys_call_result_82677 = invoke(stypy.reporting.localization.Localization(__file__, 1708, 26), keys_82675, *[], **kwargs_82676)
    
    # Processing the call keyword arguments (line 1708)
    kwargs_82678 = {}
    # Getting the type of 'list' (line 1708)
    list_82673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1708, 21), 'list', False)
    # Calling list(args, kwargs) (line 1708)
    list_call_result_82679 = invoke(stypy.reporting.localization.Localization(__file__, 1708, 21), list_82673, *[keys_call_result_82677], **kwargs_82678)
    
    # Testing the type of a for loop iterable (line 1708)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1708, 12), list_call_result_82679)
    # Getting the type of the for loop variable (line 1708)
    for_loop_var_82680 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1708, 12), list_call_result_82679)
    # Assigning a type to the variable 'k' (line 1708)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1708, 12), 'k', for_loop_var_82680)
    # SSA begins for a for statement (line 1708)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1709)
    k_82681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1709, 34), 'k')
    # Getting the type of 'charselect' (line 1709)
    charselect_82682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1709, 23), 'charselect')
    # Obtaining the member '__getitem__' of a type (line 1709)
    getitem___82683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1709, 23), charselect_82682, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1709)
    subscript_call_result_82684 = invoke(stypy.reporting.localization.Localization(__file__, 1709, 23), getitem___82683, k_82681)
    
    # Applying the 'not' unary operator (line 1709)
    result_not__82685 = python_operator(stypy.reporting.localization.Localization(__file__, 1709, 19), 'not', subscript_call_result_82684)
    
    # Testing the type of an if condition (line 1709)
    if_condition_82686 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1709, 16), result_not__82685)
    # Assigning a type to the variable 'if_condition_82686' (line 1709)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1709, 16), 'if_condition_82686', if_condition_82686)
    # SSA begins for if statement (line 1709)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Deleting a member
    # Getting the type of 'charselect' (line 1710)
    charselect_82687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1710, 24), 'charselect')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1710)
    k_82688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1710, 35), 'k')
    # Getting the type of 'charselect' (line 1710)
    charselect_82689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1710, 24), 'charselect')
    # Obtaining the member '__getitem__' of a type (line 1710)
    getitem___82690 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1710, 24), charselect_82689, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1710)
    subscript_call_result_82691 = invoke(stypy.reporting.localization.Localization(__file__, 1710, 24), getitem___82690, k_82688)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1710, 20), charselect_82687, subscript_call_result_82691)
    # SSA join for if statement (line 1709)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to list(...): (line 1711)
    # Processing the call arguments (line 1711)
    
    # Call to items(...): (line 1711)
    # Processing the call keyword arguments (line 1711)
    kwargs_82695 = {}
    # Getting the type of 'charselect' (line 1711)
    charselect_82693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1711, 29), 'charselect', False)
    # Obtaining the member 'items' of a type (line 1711)
    items_82694 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1711, 29), charselect_82693, 'items')
    # Calling items(args, kwargs) (line 1711)
    items_call_result_82696 = invoke(stypy.reporting.localization.Localization(__file__, 1711, 29), items_82694, *[], **kwargs_82695)
    
    # Processing the call keyword arguments (line 1711)
    kwargs_82697 = {}
    # Getting the type of 'list' (line 1711)
    list_82692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1711, 24), 'list', False)
    # Calling list(args, kwargs) (line 1711)
    list_call_result_82698 = invoke(stypy.reporting.localization.Localization(__file__, 1711, 24), list_82692, *[items_call_result_82696], **kwargs_82697)
    
    # Testing the type of a for loop iterable (line 1711)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1711, 12), list_call_result_82698)
    # Getting the type of the for loop variable (line 1711)
    for_loop_var_82699 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1711, 12), list_call_result_82698)
    # Assigning a type to the variable 'k' (line 1711)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1711, 12), 'k', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1711, 12), for_loop_var_82699))
    # Assigning a type to the variable 'i' (line 1711)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1711, 12), 'i', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1711, 12), for_loop_var_82699))
    # SSA begins for a for statement (line 1711)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Subscript (line 1712):
    
    # Assigning a Call to a Subscript (line 1712):
    
    # Call to rmbadname1(...): (line 1712)
    # Processing the call arguments (line 1712)
    # Getting the type of 'i' (line 1712)
    i_82701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1712, 43), 'i', False)
    # Processing the call keyword arguments (line 1712)
    kwargs_82702 = {}
    # Getting the type of 'rmbadname1' (line 1712)
    rmbadname1_82700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1712, 32), 'rmbadname1', False)
    # Calling rmbadname1(args, kwargs) (line 1712)
    rmbadname1_call_result_82703 = invoke(stypy.reporting.localization.Localization(__file__, 1712, 32), rmbadname1_82700, *[i_82701], **kwargs_82702)
    
    # Getting the type of 'charselect' (line 1712)
    charselect_82704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1712, 16), 'charselect')
    # Getting the type of 'k' (line 1712)
    k_82705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1712, 27), 'k')
    # Storing an element on a container (line 1712)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1712, 16), charselect_82704, (k_82705, rmbadname1_call_result_82703))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1689)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'typespec' (line 1713)
    typespec_82706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1713, 13), 'typespec')
    str_82707 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1713, 25), 'str', 'type')
    # Applying the binary operator '==' (line 1713)
    result_eq_82708 = python_operator(stypy.reporting.localization.Localization(__file__, 1713, 13), '==', typespec_82706, str_82707)
    
    # Testing the type of an if condition (line 1713)
    if_condition_82709 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1713, 13), result_eq_82708)
    # Assigning a type to the variable 'if_condition_82709' (line 1713)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1713, 13), 'if_condition_82709', if_condition_82709)
    # SSA begins for if statement (line 1713)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1714):
    
    # Assigning a Call to a Name (line 1714):
    
    # Call to match(...): (line 1714)
    # Processing the call arguments (line 1714)
    str_82712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1714, 32), 'str', '\\s*\\(\\s*(?P<name>\\w+)\\s*\\)')
    # Getting the type of 'selector' (line 1714)
    selector_82713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1714, 63), 'selector', False)
    # Getting the type of 're' (line 1714)
    re_82714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1714, 73), 're', False)
    # Obtaining the member 'I' of a type (line 1714)
    I_82715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1714, 73), re_82714, 'I')
    # Processing the call keyword arguments (line 1714)
    kwargs_82716 = {}
    # Getting the type of 're' (line 1714)
    re_82710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1714, 23), 're', False)
    # Obtaining the member 'match' of a type (line 1714)
    match_82711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1714, 23), re_82710, 'match')
    # Calling match(args, kwargs) (line 1714)
    match_call_result_82717 = invoke(stypy.reporting.localization.Localization(__file__, 1714, 23), match_82711, *[str_82712, selector_82713, I_82715], **kwargs_82716)
    
    # Assigning a type to the variable 'typename' (line 1714)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1714, 12), 'typename', match_call_result_82717)
    
    # Getting the type of 'typename' (line 1715)
    typename_82718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1715, 15), 'typename')
    # Testing the type of an if condition (line 1715)
    if_condition_82719 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1715, 12), typename_82718)
    # Assigning a type to the variable 'if_condition_82719' (line 1715)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1715, 12), 'if_condition_82719', if_condition_82719)
    # SSA begins for if statement (line 1715)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1716):
    
    # Assigning a Call to a Name (line 1716):
    
    # Call to group(...): (line 1716)
    # Processing the call arguments (line 1716)
    str_82722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1716, 42), 'str', 'name')
    # Processing the call keyword arguments (line 1716)
    kwargs_82723 = {}
    # Getting the type of 'typename' (line 1716)
    typename_82720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1716, 27), 'typename', False)
    # Obtaining the member 'group' of a type (line 1716)
    group_82721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1716, 27), typename_82720, 'group')
    # Calling group(args, kwargs) (line 1716)
    group_call_result_82724 = invoke(stypy.reporting.localization.Localization(__file__, 1716, 27), group_82721, *[str_82722], **kwargs_82723)
    
    # Assigning a type to the variable 'typename' (line 1716)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1716, 16), 'typename', group_call_result_82724)
    # SSA branch for the else part of an if statement (line 1715)
    module_type_store.open_ssa_branch('else')
    
    # Call to outmess(...): (line 1718)
    # Processing the call arguments (line 1718)
    str_82726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1718, 24), 'str', 'cracktypespec: no typename found in %s\n')
    
    # Call to repr(...): (line 1719)
    # Processing the call arguments (line 1719)
    # Getting the type of 'typespec' (line 1719)
    typespec_82728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1719, 30), 'typespec', False)
    # Getting the type of 'selector' (line 1719)
    selector_82729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1719, 41), 'selector', False)
    # Applying the binary operator '+' (line 1719)
    result_add_82730 = python_operator(stypy.reporting.localization.Localization(__file__, 1719, 30), '+', typespec_82728, selector_82729)
    
    # Processing the call keyword arguments (line 1719)
    kwargs_82731 = {}
    # Getting the type of 'repr' (line 1719)
    repr_82727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1719, 25), 'repr', False)
    # Calling repr(args, kwargs) (line 1719)
    repr_call_result_82732 = invoke(stypy.reporting.localization.Localization(__file__, 1719, 25), repr_82727, *[result_add_82730], **kwargs_82731)
    
    # Applying the binary operator '%' (line 1718)
    result_mod_82733 = python_operator(stypy.reporting.localization.Localization(__file__, 1718, 24), '%', str_82726, repr_call_result_82732)
    
    # Processing the call keyword arguments (line 1718)
    kwargs_82734 = {}
    # Getting the type of 'outmess' (line 1718)
    outmess_82725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1718, 16), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1718)
    outmess_call_result_82735 = invoke(stypy.reporting.localization.Localization(__file__, 1718, 16), outmess_82725, *[result_mod_82733], **kwargs_82734)
    
    # SSA join for if statement (line 1715)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1713)
    module_type_store.open_ssa_branch('else')
    
    # Call to outmess(...): (line 1721)
    # Processing the call arguments (line 1721)
    str_82737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1721, 20), 'str', 'cracktypespec: no selector used for %s\n')
    
    # Call to repr(...): (line 1722)
    # Processing the call arguments (line 1722)
    # Getting the type of 'selector' (line 1722)
    selector_82739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1722, 26), 'selector', False)
    # Processing the call keyword arguments (line 1722)
    kwargs_82740 = {}
    # Getting the type of 'repr' (line 1722)
    repr_82738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1722, 21), 'repr', False)
    # Calling repr(args, kwargs) (line 1722)
    repr_call_result_82741 = invoke(stypy.reporting.localization.Localization(__file__, 1722, 21), repr_82738, *[selector_82739], **kwargs_82740)
    
    # Applying the binary operator '%' (line 1721)
    result_mod_82742 = python_operator(stypy.reporting.localization.Localization(__file__, 1721, 20), '%', str_82737, repr_call_result_82741)
    
    # Processing the call keyword arguments (line 1721)
    kwargs_82743 = {}
    # Getting the type of 'outmess' (line 1721)
    outmess_82736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1721, 12), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1721)
    outmess_call_result_82744 = invoke(stypy.reporting.localization.Localization(__file__, 1721, 12), outmess_82736, *[result_mod_82742], **kwargs_82743)
    
    # SSA join for if statement (line 1713)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1689)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1675)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1674)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 1723)
    tuple_82745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1723, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1723)
    # Adding element type (line 1723)
    # Getting the type of 'kindselect' (line 1723)
    kindselect_82746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1723, 11), 'kindselect')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1723, 11), tuple_82745, kindselect_82746)
    # Adding element type (line 1723)
    # Getting the type of 'charselect' (line 1723)
    charselect_82747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1723, 23), 'charselect')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1723, 11), tuple_82745, charselect_82747)
    # Adding element type (line 1723)
    # Getting the type of 'typename' (line 1723)
    typename_82748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1723, 35), 'typename')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1723, 11), tuple_82745, typename_82748)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1723)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1723, 4), 'stypy_return_type', tuple_82745)
    
    # ################# End of 'cracktypespec(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'cracktypespec' in the type store
    # Getting the type of 'stypy_return_type' (line 1670)
    stypy_return_type_82749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1670, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_82749)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'cracktypespec'
    return stypy_return_type_82749

# Assigning a type to the variable 'cracktypespec' (line 1670)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1670, 0), 'cracktypespec', cracktypespec)

@norecursion
def setattrspec(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    int_82750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1727, 34), 'int')
    defaults = [int_82750]
    # Create a new context for function 'setattrspec'
    module_type_store = module_type_store.open_function_context('setattrspec', 1727, 0, False)
    
    # Passed parameters checking function
    setattrspec.stypy_localization = localization
    setattrspec.stypy_type_of_self = None
    setattrspec.stypy_type_store = module_type_store
    setattrspec.stypy_function_name = 'setattrspec'
    setattrspec.stypy_param_names_list = ['decl', 'attr', 'force']
    setattrspec.stypy_varargs_param_name = None
    setattrspec.stypy_kwargs_param_name = None
    setattrspec.stypy_call_defaults = defaults
    setattrspec.stypy_call_varargs = varargs
    setattrspec.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'setattrspec', ['decl', 'attr', 'force'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'setattrspec', localization, ['decl', 'attr', 'force'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'setattrspec(...)' code ##################

    
    
    # Getting the type of 'decl' (line 1728)
    decl_82751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1728, 11), 'decl')
    # Applying the 'not' unary operator (line 1728)
    result_not__82752 = python_operator(stypy.reporting.localization.Localization(__file__, 1728, 7), 'not', decl_82751)
    
    # Testing the type of an if condition (line 1728)
    if_condition_82753 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1728, 4), result_not__82752)
    # Assigning a type to the variable 'if_condition_82753' (line 1728)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1728, 4), 'if_condition_82753', if_condition_82753)
    # SSA begins for if statement (line 1728)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Dict to a Name (line 1729):
    
    # Assigning a Dict to a Name (line 1729):
    
    # Obtaining an instance of the builtin type 'dict' (line 1729)
    dict_82754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1729, 15), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1729)
    
    # Assigning a type to the variable 'decl' (line 1729)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1729, 8), 'decl', dict_82754)
    # SSA join for if statement (line 1728)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'attr' (line 1730)
    attr_82755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1730, 11), 'attr')
    # Applying the 'not' unary operator (line 1730)
    result_not__82756 = python_operator(stypy.reporting.localization.Localization(__file__, 1730, 7), 'not', attr_82755)
    
    # Testing the type of an if condition (line 1730)
    if_condition_82757 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1730, 4), result_not__82756)
    # Assigning a type to the variable 'if_condition_82757' (line 1730)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1730, 4), 'if_condition_82757', if_condition_82757)
    # SSA begins for if statement (line 1730)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'decl' (line 1731)
    decl_82758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 15), 'decl')
    # Assigning a type to the variable 'stypy_return_type' (line 1731)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1731, 8), 'stypy_return_type', decl_82758)
    # SSA join for if statement (line 1730)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_82759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1732, 7), 'str', 'attrspec')
    # Getting the type of 'decl' (line 1732)
    decl_82760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 25), 'decl')
    # Applying the binary operator 'notin' (line 1732)
    result_contains_82761 = python_operator(stypy.reporting.localization.Localization(__file__, 1732, 7), 'notin', str_82759, decl_82760)
    
    # Testing the type of an if condition (line 1732)
    if_condition_82762 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1732, 4), result_contains_82761)
    # Assigning a type to the variable 'if_condition_82762' (line 1732)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1732, 4), 'if_condition_82762', if_condition_82762)
    # SSA begins for if statement (line 1732)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Subscript (line 1733):
    
    # Assigning a List to a Subscript (line 1733):
    
    # Obtaining an instance of the builtin type 'list' (line 1733)
    list_82763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1733, 27), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1733)
    # Adding element type (line 1733)
    # Getting the type of 'attr' (line 1733)
    attr_82764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1733, 28), 'attr')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1733, 27), list_82763, attr_82764)
    
    # Getting the type of 'decl' (line 1733)
    decl_82765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1733, 8), 'decl')
    str_82766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1733, 13), 'str', 'attrspec')
    # Storing an element on a container (line 1733)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1733, 8), decl_82765, (str_82766, list_82763))
    # Getting the type of 'decl' (line 1734)
    decl_82767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1734, 15), 'decl')
    # Assigning a type to the variable 'stypy_return_type' (line 1734)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1734, 8), 'stypy_return_type', decl_82767)
    # SSA join for if statement (line 1732)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'force' (line 1735)
    force_82768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1735, 7), 'force')
    # Testing the type of an if condition (line 1735)
    if_condition_82769 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1735, 4), force_82768)
    # Assigning a type to the variable 'if_condition_82769' (line 1735)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1735, 4), 'if_condition_82769', if_condition_82769)
    # SSA begins for if statement (line 1735)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1736)
    # Processing the call arguments (line 1736)
    # Getting the type of 'attr' (line 1736)
    attr_82775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1736, 32), 'attr', False)
    # Processing the call keyword arguments (line 1736)
    kwargs_82776 = {}
    
    # Obtaining the type of the subscript
    str_82770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1736, 13), 'str', 'attrspec')
    # Getting the type of 'decl' (line 1736)
    decl_82771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1736, 8), 'decl', False)
    # Obtaining the member '__getitem__' of a type (line 1736)
    getitem___82772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1736, 8), decl_82771, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1736)
    subscript_call_result_82773 = invoke(stypy.reporting.localization.Localization(__file__, 1736, 8), getitem___82772, str_82770)
    
    # Obtaining the member 'append' of a type (line 1736)
    append_82774 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1736, 8), subscript_call_result_82773, 'append')
    # Calling append(args, kwargs) (line 1736)
    append_call_result_82777 = invoke(stypy.reporting.localization.Localization(__file__, 1736, 8), append_82774, *[attr_82775], **kwargs_82776)
    
    # SSA join for if statement (line 1735)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'attr' (line 1737)
    attr_82778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1737, 7), 'attr')
    
    # Obtaining the type of the subscript
    str_82779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1737, 20), 'str', 'attrspec')
    # Getting the type of 'decl' (line 1737)
    decl_82780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1737, 15), 'decl')
    # Obtaining the member '__getitem__' of a type (line 1737)
    getitem___82781 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1737, 15), decl_82780, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1737)
    subscript_call_result_82782 = invoke(stypy.reporting.localization.Localization(__file__, 1737, 15), getitem___82781, str_82779)
    
    # Applying the binary operator 'in' (line 1737)
    result_contains_82783 = python_operator(stypy.reporting.localization.Localization(__file__, 1737, 7), 'in', attr_82778, subscript_call_result_82782)
    
    # Testing the type of an if condition (line 1737)
    if_condition_82784 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1737, 4), result_contains_82783)
    # Assigning a type to the variable 'if_condition_82784' (line 1737)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1737, 4), 'if_condition_82784', if_condition_82784)
    # SSA begins for if statement (line 1737)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'decl' (line 1738)
    decl_82785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1738, 15), 'decl')
    # Assigning a type to the variable 'stypy_return_type' (line 1738)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1738, 8), 'stypy_return_type', decl_82785)
    # SSA join for if statement (line 1737)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'attr' (line 1739)
    attr_82786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1739, 7), 'attr')
    str_82787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1739, 15), 'str', 'static')
    # Applying the binary operator '==' (line 1739)
    result_eq_82788 = python_operator(stypy.reporting.localization.Localization(__file__, 1739, 7), '==', attr_82786, str_82787)
    
    
    str_82789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1739, 28), 'str', 'automatic')
    
    # Obtaining the type of the subscript
    str_82790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1739, 52), 'str', 'attrspec')
    # Getting the type of 'decl' (line 1739)
    decl_82791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1739, 47), 'decl')
    # Obtaining the member '__getitem__' of a type (line 1739)
    getitem___82792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1739, 47), decl_82791, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1739)
    subscript_call_result_82793 = invoke(stypy.reporting.localization.Localization(__file__, 1739, 47), getitem___82792, str_82790)
    
    # Applying the binary operator 'notin' (line 1739)
    result_contains_82794 = python_operator(stypy.reporting.localization.Localization(__file__, 1739, 28), 'notin', str_82789, subscript_call_result_82793)
    
    # Applying the binary operator 'and' (line 1739)
    result_and_keyword_82795 = python_operator(stypy.reporting.localization.Localization(__file__, 1739, 7), 'and', result_eq_82788, result_contains_82794)
    
    # Testing the type of an if condition (line 1739)
    if_condition_82796 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1739, 4), result_and_keyword_82795)
    # Assigning a type to the variable 'if_condition_82796' (line 1739)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1739, 4), 'if_condition_82796', if_condition_82796)
    # SSA begins for if statement (line 1739)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1740)
    # Processing the call arguments (line 1740)
    # Getting the type of 'attr' (line 1740)
    attr_82802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1740, 32), 'attr', False)
    # Processing the call keyword arguments (line 1740)
    kwargs_82803 = {}
    
    # Obtaining the type of the subscript
    str_82797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1740, 13), 'str', 'attrspec')
    # Getting the type of 'decl' (line 1740)
    decl_82798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1740, 8), 'decl', False)
    # Obtaining the member '__getitem__' of a type (line 1740)
    getitem___82799 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1740, 8), decl_82798, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1740)
    subscript_call_result_82800 = invoke(stypy.reporting.localization.Localization(__file__, 1740, 8), getitem___82799, str_82797)
    
    # Obtaining the member 'append' of a type (line 1740)
    append_82801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1740, 8), subscript_call_result_82800, 'append')
    # Calling append(args, kwargs) (line 1740)
    append_call_result_82804 = invoke(stypy.reporting.localization.Localization(__file__, 1740, 8), append_82801, *[attr_82802], **kwargs_82803)
    
    # SSA branch for the else part of an if statement (line 1739)
    module_type_store.open_ssa_branch('else')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'attr' (line 1741)
    attr_82805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1741, 9), 'attr')
    str_82806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1741, 17), 'str', 'automatic')
    # Applying the binary operator '==' (line 1741)
    result_eq_82807 = python_operator(stypy.reporting.localization.Localization(__file__, 1741, 9), '==', attr_82805, str_82806)
    
    
    str_82808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1741, 33), 'str', 'static')
    
    # Obtaining the type of the subscript
    str_82809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1741, 54), 'str', 'attrspec')
    # Getting the type of 'decl' (line 1741)
    decl_82810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1741, 49), 'decl')
    # Obtaining the member '__getitem__' of a type (line 1741)
    getitem___82811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1741, 49), decl_82810, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1741)
    subscript_call_result_82812 = invoke(stypy.reporting.localization.Localization(__file__, 1741, 49), getitem___82811, str_82809)
    
    # Applying the binary operator 'notin' (line 1741)
    result_contains_82813 = python_operator(stypy.reporting.localization.Localization(__file__, 1741, 33), 'notin', str_82808, subscript_call_result_82812)
    
    # Applying the binary operator 'and' (line 1741)
    result_and_keyword_82814 = python_operator(stypy.reporting.localization.Localization(__file__, 1741, 9), 'and', result_eq_82807, result_contains_82813)
    
    # Testing the type of an if condition (line 1741)
    if_condition_82815 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1741, 9), result_and_keyword_82814)
    # Assigning a type to the variable 'if_condition_82815' (line 1741)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1741, 9), 'if_condition_82815', if_condition_82815)
    # SSA begins for if statement (line 1741)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1742)
    # Processing the call arguments (line 1742)
    # Getting the type of 'attr' (line 1742)
    attr_82821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1742, 32), 'attr', False)
    # Processing the call keyword arguments (line 1742)
    kwargs_82822 = {}
    
    # Obtaining the type of the subscript
    str_82816 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1742, 13), 'str', 'attrspec')
    # Getting the type of 'decl' (line 1742)
    decl_82817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1742, 8), 'decl', False)
    # Obtaining the member '__getitem__' of a type (line 1742)
    getitem___82818 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1742, 8), decl_82817, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1742)
    subscript_call_result_82819 = invoke(stypy.reporting.localization.Localization(__file__, 1742, 8), getitem___82818, str_82816)
    
    # Obtaining the member 'append' of a type (line 1742)
    append_82820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1742, 8), subscript_call_result_82819, 'append')
    # Calling append(args, kwargs) (line 1742)
    append_call_result_82823 = invoke(stypy.reporting.localization.Localization(__file__, 1742, 8), append_82820, *[attr_82821], **kwargs_82822)
    
    # SSA branch for the else part of an if statement (line 1741)
    module_type_store.open_ssa_branch('else')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'attr' (line 1743)
    attr_82824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1743, 9), 'attr')
    str_82825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1743, 17), 'str', 'public')
    # Applying the binary operator '==' (line 1743)
    result_eq_82826 = python_operator(stypy.reporting.localization.Localization(__file__, 1743, 9), '==', attr_82824, str_82825)
    
    
    str_82827 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1743, 30), 'str', 'private')
    
    # Obtaining the type of the subscript
    str_82828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1743, 52), 'str', 'attrspec')
    # Getting the type of 'decl' (line 1743)
    decl_82829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1743, 47), 'decl')
    # Obtaining the member '__getitem__' of a type (line 1743)
    getitem___82830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1743, 47), decl_82829, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1743)
    subscript_call_result_82831 = invoke(stypy.reporting.localization.Localization(__file__, 1743, 47), getitem___82830, str_82828)
    
    # Applying the binary operator 'notin' (line 1743)
    result_contains_82832 = python_operator(stypy.reporting.localization.Localization(__file__, 1743, 30), 'notin', str_82827, subscript_call_result_82831)
    
    # Applying the binary operator 'and' (line 1743)
    result_and_keyword_82833 = python_operator(stypy.reporting.localization.Localization(__file__, 1743, 9), 'and', result_eq_82826, result_contains_82832)
    
    # Testing the type of an if condition (line 1743)
    if_condition_82834 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1743, 9), result_and_keyword_82833)
    # Assigning a type to the variable 'if_condition_82834' (line 1743)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1743, 9), 'if_condition_82834', if_condition_82834)
    # SSA begins for if statement (line 1743)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1744)
    # Processing the call arguments (line 1744)
    # Getting the type of 'attr' (line 1744)
    attr_82840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1744, 32), 'attr', False)
    # Processing the call keyword arguments (line 1744)
    kwargs_82841 = {}
    
    # Obtaining the type of the subscript
    str_82835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1744, 13), 'str', 'attrspec')
    # Getting the type of 'decl' (line 1744)
    decl_82836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1744, 8), 'decl', False)
    # Obtaining the member '__getitem__' of a type (line 1744)
    getitem___82837 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1744, 8), decl_82836, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1744)
    subscript_call_result_82838 = invoke(stypy.reporting.localization.Localization(__file__, 1744, 8), getitem___82837, str_82835)
    
    # Obtaining the member 'append' of a type (line 1744)
    append_82839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1744, 8), subscript_call_result_82838, 'append')
    # Calling append(args, kwargs) (line 1744)
    append_call_result_82842 = invoke(stypy.reporting.localization.Localization(__file__, 1744, 8), append_82839, *[attr_82840], **kwargs_82841)
    
    # SSA branch for the else part of an if statement (line 1743)
    module_type_store.open_ssa_branch('else')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'attr' (line 1745)
    attr_82843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1745, 9), 'attr')
    str_82844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1745, 17), 'str', 'private')
    # Applying the binary operator '==' (line 1745)
    result_eq_82845 = python_operator(stypy.reporting.localization.Localization(__file__, 1745, 9), '==', attr_82843, str_82844)
    
    
    str_82846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1745, 31), 'str', 'public')
    
    # Obtaining the type of the subscript
    str_82847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1745, 52), 'str', 'attrspec')
    # Getting the type of 'decl' (line 1745)
    decl_82848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1745, 47), 'decl')
    # Obtaining the member '__getitem__' of a type (line 1745)
    getitem___82849 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1745, 47), decl_82848, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1745)
    subscript_call_result_82850 = invoke(stypy.reporting.localization.Localization(__file__, 1745, 47), getitem___82849, str_82847)
    
    # Applying the binary operator 'notin' (line 1745)
    result_contains_82851 = python_operator(stypy.reporting.localization.Localization(__file__, 1745, 31), 'notin', str_82846, subscript_call_result_82850)
    
    # Applying the binary operator 'and' (line 1745)
    result_and_keyword_82852 = python_operator(stypy.reporting.localization.Localization(__file__, 1745, 9), 'and', result_eq_82845, result_contains_82851)
    
    # Testing the type of an if condition (line 1745)
    if_condition_82853 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1745, 9), result_and_keyword_82852)
    # Assigning a type to the variable 'if_condition_82853' (line 1745)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1745, 9), 'if_condition_82853', if_condition_82853)
    # SSA begins for if statement (line 1745)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1746)
    # Processing the call arguments (line 1746)
    # Getting the type of 'attr' (line 1746)
    attr_82859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1746, 32), 'attr', False)
    # Processing the call keyword arguments (line 1746)
    kwargs_82860 = {}
    
    # Obtaining the type of the subscript
    str_82854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1746, 13), 'str', 'attrspec')
    # Getting the type of 'decl' (line 1746)
    decl_82855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1746, 8), 'decl', False)
    # Obtaining the member '__getitem__' of a type (line 1746)
    getitem___82856 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1746, 8), decl_82855, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1746)
    subscript_call_result_82857 = invoke(stypy.reporting.localization.Localization(__file__, 1746, 8), getitem___82856, str_82854)
    
    # Obtaining the member 'append' of a type (line 1746)
    append_82858 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1746, 8), subscript_call_result_82857, 'append')
    # Calling append(args, kwargs) (line 1746)
    append_call_result_82861 = invoke(stypy.reporting.localization.Localization(__file__, 1746, 8), append_82858, *[attr_82859], **kwargs_82860)
    
    # SSA branch for the else part of an if statement (line 1745)
    module_type_store.open_ssa_branch('else')
    
    # Call to append(...): (line 1748)
    # Processing the call arguments (line 1748)
    # Getting the type of 'attr' (line 1748)
    attr_82867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1748, 32), 'attr', False)
    # Processing the call keyword arguments (line 1748)
    kwargs_82868 = {}
    
    # Obtaining the type of the subscript
    str_82862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1748, 13), 'str', 'attrspec')
    # Getting the type of 'decl' (line 1748)
    decl_82863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1748, 8), 'decl', False)
    # Obtaining the member '__getitem__' of a type (line 1748)
    getitem___82864 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1748, 8), decl_82863, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1748)
    subscript_call_result_82865 = invoke(stypy.reporting.localization.Localization(__file__, 1748, 8), getitem___82864, str_82862)
    
    # Obtaining the member 'append' of a type (line 1748)
    append_82866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1748, 8), subscript_call_result_82865, 'append')
    # Calling append(args, kwargs) (line 1748)
    append_call_result_82869 = invoke(stypy.reporting.localization.Localization(__file__, 1748, 8), append_82866, *[attr_82867], **kwargs_82868)
    
    # SSA join for if statement (line 1745)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1743)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1741)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1739)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'decl' (line 1749)
    decl_82870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1749, 11), 'decl')
    # Assigning a type to the variable 'stypy_return_type' (line 1749)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1749, 4), 'stypy_return_type', decl_82870)
    
    # ################# End of 'setattrspec(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'setattrspec' in the type store
    # Getting the type of 'stypy_return_type' (line 1727)
    stypy_return_type_82871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1727, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_82871)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'setattrspec'
    return stypy_return_type_82871

# Assigning a type to the variable 'setattrspec' (line 1727)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1727, 0), 'setattrspec', setattrspec)

@norecursion
def setkindselector(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    int_82872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1752, 37), 'int')
    defaults = [int_82872]
    # Create a new context for function 'setkindselector'
    module_type_store = module_type_store.open_function_context('setkindselector', 1752, 0, False)
    
    # Passed parameters checking function
    setkindselector.stypy_localization = localization
    setkindselector.stypy_type_of_self = None
    setkindselector.stypy_type_store = module_type_store
    setkindselector.stypy_function_name = 'setkindselector'
    setkindselector.stypy_param_names_list = ['decl', 'sel', 'force']
    setkindselector.stypy_varargs_param_name = None
    setkindselector.stypy_kwargs_param_name = None
    setkindselector.stypy_call_defaults = defaults
    setkindselector.stypy_call_varargs = varargs
    setkindselector.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'setkindselector', ['decl', 'sel', 'force'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'setkindselector', localization, ['decl', 'sel', 'force'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'setkindselector(...)' code ##################

    
    
    # Getting the type of 'decl' (line 1753)
    decl_82873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1753, 11), 'decl')
    # Applying the 'not' unary operator (line 1753)
    result_not__82874 = python_operator(stypy.reporting.localization.Localization(__file__, 1753, 7), 'not', decl_82873)
    
    # Testing the type of an if condition (line 1753)
    if_condition_82875 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1753, 4), result_not__82874)
    # Assigning a type to the variable 'if_condition_82875' (line 1753)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1753, 4), 'if_condition_82875', if_condition_82875)
    # SSA begins for if statement (line 1753)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Dict to a Name (line 1754):
    
    # Assigning a Dict to a Name (line 1754):
    
    # Obtaining an instance of the builtin type 'dict' (line 1754)
    dict_82876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1754, 15), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1754)
    
    # Assigning a type to the variable 'decl' (line 1754)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1754, 8), 'decl', dict_82876)
    # SSA join for if statement (line 1753)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'sel' (line 1755)
    sel_82877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1755, 11), 'sel')
    # Applying the 'not' unary operator (line 1755)
    result_not__82878 = python_operator(stypy.reporting.localization.Localization(__file__, 1755, 7), 'not', sel_82877)
    
    # Testing the type of an if condition (line 1755)
    if_condition_82879 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1755, 4), result_not__82878)
    # Assigning a type to the variable 'if_condition_82879' (line 1755)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1755, 4), 'if_condition_82879', if_condition_82879)
    # SSA begins for if statement (line 1755)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'decl' (line 1756)
    decl_82880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1756, 15), 'decl')
    # Assigning a type to the variable 'stypy_return_type' (line 1756)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1756, 8), 'stypy_return_type', decl_82880)
    # SSA join for if statement (line 1755)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_82881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1757, 7), 'str', 'kindselector')
    # Getting the type of 'decl' (line 1757)
    decl_82882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1757, 29), 'decl')
    # Applying the binary operator 'notin' (line 1757)
    result_contains_82883 = python_operator(stypy.reporting.localization.Localization(__file__, 1757, 7), 'notin', str_82881, decl_82882)
    
    # Testing the type of an if condition (line 1757)
    if_condition_82884 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1757, 4), result_contains_82883)
    # Assigning a type to the variable 'if_condition_82884' (line 1757)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1757, 4), 'if_condition_82884', if_condition_82884)
    # SSA begins for if statement (line 1757)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Subscript (line 1758):
    
    # Assigning a Name to a Subscript (line 1758):
    # Getting the type of 'sel' (line 1758)
    sel_82885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1758, 31), 'sel')
    # Getting the type of 'decl' (line 1758)
    decl_82886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1758, 8), 'decl')
    str_82887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1758, 13), 'str', 'kindselector')
    # Storing an element on a container (line 1758)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1758, 8), decl_82886, (str_82887, sel_82885))
    # Getting the type of 'decl' (line 1759)
    decl_82888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1759, 15), 'decl')
    # Assigning a type to the variable 'stypy_return_type' (line 1759)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1759, 8), 'stypy_return_type', decl_82888)
    # SSA join for if statement (line 1757)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to list(...): (line 1760)
    # Processing the call arguments (line 1760)
    
    # Call to keys(...): (line 1760)
    # Processing the call keyword arguments (line 1760)
    kwargs_82892 = {}
    # Getting the type of 'sel' (line 1760)
    sel_82890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1760, 18), 'sel', False)
    # Obtaining the member 'keys' of a type (line 1760)
    keys_82891 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1760, 18), sel_82890, 'keys')
    # Calling keys(args, kwargs) (line 1760)
    keys_call_result_82893 = invoke(stypy.reporting.localization.Localization(__file__, 1760, 18), keys_82891, *[], **kwargs_82892)
    
    # Processing the call keyword arguments (line 1760)
    kwargs_82894 = {}
    # Getting the type of 'list' (line 1760)
    list_82889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1760, 13), 'list', False)
    # Calling list(args, kwargs) (line 1760)
    list_call_result_82895 = invoke(stypy.reporting.localization.Localization(__file__, 1760, 13), list_82889, *[keys_call_result_82893], **kwargs_82894)
    
    # Testing the type of a for loop iterable (line 1760)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1760, 4), list_call_result_82895)
    # Getting the type of the for loop variable (line 1760)
    for_loop_var_82896 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1760, 4), list_call_result_82895)
    # Assigning a type to the variable 'k' (line 1760)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1760, 4), 'k', for_loop_var_82896)
    # SSA begins for a for statement (line 1760)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    # Getting the type of 'force' (line 1761)
    force_82897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1761, 11), 'force')
    
    # Getting the type of 'k' (line 1761)
    k_82898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1761, 20), 'k')
    
    # Obtaining the type of the subscript
    str_82899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1761, 34), 'str', 'kindselector')
    # Getting the type of 'decl' (line 1761)
    decl_82900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1761, 29), 'decl')
    # Obtaining the member '__getitem__' of a type (line 1761)
    getitem___82901 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1761, 29), decl_82900, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1761)
    subscript_call_result_82902 = invoke(stypy.reporting.localization.Localization(__file__, 1761, 29), getitem___82901, str_82899)
    
    # Applying the binary operator 'notin' (line 1761)
    result_contains_82903 = python_operator(stypy.reporting.localization.Localization(__file__, 1761, 20), 'notin', k_82898, subscript_call_result_82902)
    
    # Applying the binary operator 'or' (line 1761)
    result_or_keyword_82904 = python_operator(stypy.reporting.localization.Localization(__file__, 1761, 11), 'or', force_82897, result_contains_82903)
    
    # Testing the type of an if condition (line 1761)
    if_condition_82905 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1761, 8), result_or_keyword_82904)
    # Assigning a type to the variable 'if_condition_82905' (line 1761)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1761, 8), 'if_condition_82905', if_condition_82905)
    # SSA begins for if statement (line 1761)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 1762):
    
    # Assigning a Subscript to a Subscript (line 1762):
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1762)
    k_82906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1762, 42), 'k')
    # Getting the type of 'sel' (line 1762)
    sel_82907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1762, 38), 'sel')
    # Obtaining the member '__getitem__' of a type (line 1762)
    getitem___82908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1762, 38), sel_82907, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1762)
    subscript_call_result_82909 = invoke(stypy.reporting.localization.Localization(__file__, 1762, 38), getitem___82908, k_82906)
    
    
    # Obtaining the type of the subscript
    str_82910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1762, 17), 'str', 'kindselector')
    # Getting the type of 'decl' (line 1762)
    decl_82911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1762, 12), 'decl')
    # Obtaining the member '__getitem__' of a type (line 1762)
    getitem___82912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1762, 12), decl_82911, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1762)
    subscript_call_result_82913 = invoke(stypy.reporting.localization.Localization(__file__, 1762, 12), getitem___82912, str_82910)
    
    # Getting the type of 'k' (line 1762)
    k_82914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1762, 33), 'k')
    # Storing an element on a container (line 1762)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1762, 12), subscript_call_result_82913, (k_82914, subscript_call_result_82909))
    # SSA join for if statement (line 1761)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'decl' (line 1763)
    decl_82915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1763, 11), 'decl')
    # Assigning a type to the variable 'stypy_return_type' (line 1763)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1763, 4), 'stypy_return_type', decl_82915)
    
    # ################# End of 'setkindselector(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'setkindselector' in the type store
    # Getting the type of 'stypy_return_type' (line 1752)
    stypy_return_type_82916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1752, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_82916)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'setkindselector'
    return stypy_return_type_82916

# Assigning a type to the variable 'setkindselector' (line 1752)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1752, 0), 'setkindselector', setkindselector)

@norecursion
def setcharselector(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    int_82917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1766, 37), 'int')
    defaults = [int_82917]
    # Create a new context for function 'setcharselector'
    module_type_store = module_type_store.open_function_context('setcharselector', 1766, 0, False)
    
    # Passed parameters checking function
    setcharselector.stypy_localization = localization
    setcharselector.stypy_type_of_self = None
    setcharselector.stypy_type_store = module_type_store
    setcharselector.stypy_function_name = 'setcharselector'
    setcharselector.stypy_param_names_list = ['decl', 'sel', 'force']
    setcharselector.stypy_varargs_param_name = None
    setcharselector.stypy_kwargs_param_name = None
    setcharselector.stypy_call_defaults = defaults
    setcharselector.stypy_call_varargs = varargs
    setcharselector.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'setcharselector', ['decl', 'sel', 'force'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'setcharselector', localization, ['decl', 'sel', 'force'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'setcharselector(...)' code ##################

    
    
    # Getting the type of 'decl' (line 1767)
    decl_82918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1767, 11), 'decl')
    # Applying the 'not' unary operator (line 1767)
    result_not__82919 = python_operator(stypy.reporting.localization.Localization(__file__, 1767, 7), 'not', decl_82918)
    
    # Testing the type of an if condition (line 1767)
    if_condition_82920 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1767, 4), result_not__82919)
    # Assigning a type to the variable 'if_condition_82920' (line 1767)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1767, 4), 'if_condition_82920', if_condition_82920)
    # SSA begins for if statement (line 1767)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Dict to a Name (line 1768):
    
    # Assigning a Dict to a Name (line 1768):
    
    # Obtaining an instance of the builtin type 'dict' (line 1768)
    dict_82921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1768, 15), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1768)
    
    # Assigning a type to the variable 'decl' (line 1768)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1768, 8), 'decl', dict_82921)
    # SSA join for if statement (line 1767)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'sel' (line 1769)
    sel_82922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1769, 11), 'sel')
    # Applying the 'not' unary operator (line 1769)
    result_not__82923 = python_operator(stypy.reporting.localization.Localization(__file__, 1769, 7), 'not', sel_82922)
    
    # Testing the type of an if condition (line 1769)
    if_condition_82924 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1769, 4), result_not__82923)
    # Assigning a type to the variable 'if_condition_82924' (line 1769)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1769, 4), 'if_condition_82924', if_condition_82924)
    # SSA begins for if statement (line 1769)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'decl' (line 1770)
    decl_82925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1770, 15), 'decl')
    # Assigning a type to the variable 'stypy_return_type' (line 1770)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1770, 8), 'stypy_return_type', decl_82925)
    # SSA join for if statement (line 1769)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_82926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1771, 7), 'str', 'charselector')
    # Getting the type of 'decl' (line 1771)
    decl_82927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1771, 29), 'decl')
    # Applying the binary operator 'notin' (line 1771)
    result_contains_82928 = python_operator(stypy.reporting.localization.Localization(__file__, 1771, 7), 'notin', str_82926, decl_82927)
    
    # Testing the type of an if condition (line 1771)
    if_condition_82929 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1771, 4), result_contains_82928)
    # Assigning a type to the variable 'if_condition_82929' (line 1771)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1771, 4), 'if_condition_82929', if_condition_82929)
    # SSA begins for if statement (line 1771)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Subscript (line 1772):
    
    # Assigning a Name to a Subscript (line 1772):
    # Getting the type of 'sel' (line 1772)
    sel_82930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1772, 31), 'sel')
    # Getting the type of 'decl' (line 1772)
    decl_82931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1772, 8), 'decl')
    str_82932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1772, 13), 'str', 'charselector')
    # Storing an element on a container (line 1772)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1772, 8), decl_82931, (str_82932, sel_82930))
    # Getting the type of 'decl' (line 1773)
    decl_82933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 15), 'decl')
    # Assigning a type to the variable 'stypy_return_type' (line 1773)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1773, 8), 'stypy_return_type', decl_82933)
    # SSA join for if statement (line 1771)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to list(...): (line 1774)
    # Processing the call arguments (line 1774)
    
    # Call to keys(...): (line 1774)
    # Processing the call keyword arguments (line 1774)
    kwargs_82937 = {}
    # Getting the type of 'sel' (line 1774)
    sel_82935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1774, 18), 'sel', False)
    # Obtaining the member 'keys' of a type (line 1774)
    keys_82936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1774, 18), sel_82935, 'keys')
    # Calling keys(args, kwargs) (line 1774)
    keys_call_result_82938 = invoke(stypy.reporting.localization.Localization(__file__, 1774, 18), keys_82936, *[], **kwargs_82937)
    
    # Processing the call keyword arguments (line 1774)
    kwargs_82939 = {}
    # Getting the type of 'list' (line 1774)
    list_82934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1774, 13), 'list', False)
    # Calling list(args, kwargs) (line 1774)
    list_call_result_82940 = invoke(stypy.reporting.localization.Localization(__file__, 1774, 13), list_82934, *[keys_call_result_82938], **kwargs_82939)
    
    # Testing the type of a for loop iterable (line 1774)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1774, 4), list_call_result_82940)
    # Getting the type of the for loop variable (line 1774)
    for_loop_var_82941 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1774, 4), list_call_result_82940)
    # Assigning a type to the variable 'k' (line 1774)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1774, 4), 'k', for_loop_var_82941)
    # SSA begins for a for statement (line 1774)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    # Getting the type of 'force' (line 1775)
    force_82942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1775, 11), 'force')
    
    # Getting the type of 'k' (line 1775)
    k_82943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1775, 20), 'k')
    
    # Obtaining the type of the subscript
    str_82944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1775, 34), 'str', 'charselector')
    # Getting the type of 'decl' (line 1775)
    decl_82945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1775, 29), 'decl')
    # Obtaining the member '__getitem__' of a type (line 1775)
    getitem___82946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1775, 29), decl_82945, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1775)
    subscript_call_result_82947 = invoke(stypy.reporting.localization.Localization(__file__, 1775, 29), getitem___82946, str_82944)
    
    # Applying the binary operator 'notin' (line 1775)
    result_contains_82948 = python_operator(stypy.reporting.localization.Localization(__file__, 1775, 20), 'notin', k_82943, subscript_call_result_82947)
    
    # Applying the binary operator 'or' (line 1775)
    result_or_keyword_82949 = python_operator(stypy.reporting.localization.Localization(__file__, 1775, 11), 'or', force_82942, result_contains_82948)
    
    # Testing the type of an if condition (line 1775)
    if_condition_82950 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1775, 8), result_or_keyword_82949)
    # Assigning a type to the variable 'if_condition_82950' (line 1775)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1775, 8), 'if_condition_82950', if_condition_82950)
    # SSA begins for if statement (line 1775)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 1776):
    
    # Assigning a Subscript to a Subscript (line 1776):
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1776)
    k_82951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 42), 'k')
    # Getting the type of 'sel' (line 1776)
    sel_82952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 38), 'sel')
    # Obtaining the member '__getitem__' of a type (line 1776)
    getitem___82953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1776, 38), sel_82952, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1776)
    subscript_call_result_82954 = invoke(stypy.reporting.localization.Localization(__file__, 1776, 38), getitem___82953, k_82951)
    
    
    # Obtaining the type of the subscript
    str_82955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1776, 17), 'str', 'charselector')
    # Getting the type of 'decl' (line 1776)
    decl_82956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 12), 'decl')
    # Obtaining the member '__getitem__' of a type (line 1776)
    getitem___82957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1776, 12), decl_82956, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1776)
    subscript_call_result_82958 = invoke(stypy.reporting.localization.Localization(__file__, 1776, 12), getitem___82957, str_82955)
    
    # Getting the type of 'k' (line 1776)
    k_82959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 33), 'k')
    # Storing an element on a container (line 1776)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1776, 12), subscript_call_result_82958, (k_82959, subscript_call_result_82954))
    # SSA join for if statement (line 1775)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'decl' (line 1777)
    decl_82960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1777, 11), 'decl')
    # Assigning a type to the variable 'stypy_return_type' (line 1777)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1777, 4), 'stypy_return_type', decl_82960)
    
    # ################# End of 'setcharselector(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'setcharselector' in the type store
    # Getting the type of 'stypy_return_type' (line 1766)
    stypy_return_type_82961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1766, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_82961)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'setcharselector'
    return stypy_return_type_82961

# Assigning a type to the variable 'setcharselector' (line 1766)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1766, 0), 'setcharselector', setcharselector)

@norecursion
def getblockname(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    str_82962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1780, 32), 'str', 'unknown')
    defaults = [str_82962]
    # Create a new context for function 'getblockname'
    module_type_store = module_type_store.open_function_context('getblockname', 1780, 0, False)
    
    # Passed parameters checking function
    getblockname.stypy_localization = localization
    getblockname.stypy_type_of_self = None
    getblockname.stypy_type_store = module_type_store
    getblockname.stypy_function_name = 'getblockname'
    getblockname.stypy_param_names_list = ['block', 'unknown']
    getblockname.stypy_varargs_param_name = None
    getblockname.stypy_kwargs_param_name = None
    getblockname.stypy_call_defaults = defaults
    getblockname.stypy_call_varargs = varargs
    getblockname.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'getblockname', ['block', 'unknown'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'getblockname', localization, ['block', 'unknown'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'getblockname(...)' code ##################

    
    
    str_82963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1781, 7), 'str', 'name')
    # Getting the type of 'block' (line 1781)
    block_82964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1781, 17), 'block')
    # Applying the binary operator 'in' (line 1781)
    result_contains_82965 = python_operator(stypy.reporting.localization.Localization(__file__, 1781, 7), 'in', str_82963, block_82964)
    
    # Testing the type of an if condition (line 1781)
    if_condition_82966 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1781, 4), result_contains_82965)
    # Assigning a type to the variable 'if_condition_82966' (line 1781)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1781, 4), 'if_condition_82966', if_condition_82966)
    # SSA begins for if statement (line 1781)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Obtaining the type of the subscript
    str_82967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1782, 21), 'str', 'name')
    # Getting the type of 'block' (line 1782)
    block_82968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1782, 15), 'block')
    # Obtaining the member '__getitem__' of a type (line 1782)
    getitem___82969 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1782, 15), block_82968, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1782)
    subscript_call_result_82970 = invoke(stypy.reporting.localization.Localization(__file__, 1782, 15), getitem___82969, str_82967)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1782)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1782, 8), 'stypy_return_type', subscript_call_result_82970)
    # SSA join for if statement (line 1781)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'unknown' (line 1783)
    unknown_82971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1783, 11), 'unknown')
    # Assigning a type to the variable 'stypy_return_type' (line 1783)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1783, 4), 'stypy_return_type', unknown_82971)
    
    # ################# End of 'getblockname(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'getblockname' in the type store
    # Getting the type of 'stypy_return_type' (line 1780)
    stypy_return_type_82972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1780, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_82972)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'getblockname'
    return stypy_return_type_82972

# Assigning a type to the variable 'getblockname' (line 1780)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1780, 0), 'getblockname', getblockname)

@norecursion
def setmesstext(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'setmesstext'
    module_type_store = module_type_store.open_function_context('setmesstext', 1788, 0, False)
    
    # Passed parameters checking function
    setmesstext.stypy_localization = localization
    setmesstext.stypy_type_of_self = None
    setmesstext.stypy_type_store = module_type_store
    setmesstext.stypy_function_name = 'setmesstext'
    setmesstext.stypy_param_names_list = ['block']
    setmesstext.stypy_varargs_param_name = None
    setmesstext.stypy_kwargs_param_name = None
    setmesstext.stypy_call_defaults = defaults
    setmesstext.stypy_call_varargs = varargs
    setmesstext.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'setmesstext', ['block'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'setmesstext', localization, ['block'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'setmesstext(...)' code ##################

    # Marking variables as global (line 1789)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 1789, 4), 'filepositiontext')
    
    
    # SSA begins for try-except statement (line 1791)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a BinOp to a Name (line 1792):
    
    # Assigning a BinOp to a Name (line 1792):
    str_82973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1792, 27), 'str', 'In: %s:%s\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1792)
    tuple_82974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1792, 44), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1792)
    # Adding element type (line 1792)
    
    # Obtaining the type of the subscript
    str_82975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1792, 50), 'str', 'from')
    # Getting the type of 'block' (line 1792)
    block_82976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1792, 44), 'block')
    # Obtaining the member '__getitem__' of a type (line 1792)
    getitem___82977 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1792, 44), block_82976, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1792)
    subscript_call_result_82978 = invoke(stypy.reporting.localization.Localization(__file__, 1792, 44), getitem___82977, str_82975)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1792, 44), tuple_82974, subscript_call_result_82978)
    # Adding element type (line 1792)
    
    # Obtaining the type of the subscript
    str_82979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1792, 65), 'str', 'name')
    # Getting the type of 'block' (line 1792)
    block_82980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1792, 59), 'block')
    # Obtaining the member '__getitem__' of a type (line 1792)
    getitem___82981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1792, 59), block_82980, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1792)
    subscript_call_result_82982 = invoke(stypy.reporting.localization.Localization(__file__, 1792, 59), getitem___82981, str_82979)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1792, 44), tuple_82974, subscript_call_result_82982)
    
    # Applying the binary operator '%' (line 1792)
    result_mod_82983 = python_operator(stypy.reporting.localization.Localization(__file__, 1792, 27), '%', str_82973, tuple_82974)
    
    # Assigning a type to the variable 'filepositiontext' (line 1792)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1792, 8), 'filepositiontext', result_mod_82983)
    # SSA branch for the except part of a try statement (line 1791)
    # SSA branch for the except '<any exception>' branch of a try statement (line 1791)
    module_type_store.open_ssa_branch('except')
    pass
    # SSA join for try-except statement (line 1791)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'setmesstext(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'setmesstext' in the type store
    # Getting the type of 'stypy_return_type' (line 1788)
    stypy_return_type_82984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1788, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_82984)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'setmesstext'
    return stypy_return_type_82984

# Assigning a type to the variable 'setmesstext' (line 1788)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1788, 0), 'setmesstext', setmesstext)

@norecursion
def get_usedict(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'get_usedict'
    module_type_store = module_type_store.open_function_context('get_usedict', 1797, 0, False)
    
    # Passed parameters checking function
    get_usedict.stypy_localization = localization
    get_usedict.stypy_type_of_self = None
    get_usedict.stypy_type_store = module_type_store
    get_usedict.stypy_function_name = 'get_usedict'
    get_usedict.stypy_param_names_list = ['block']
    get_usedict.stypy_varargs_param_name = None
    get_usedict.stypy_kwargs_param_name = None
    get_usedict.stypy_call_defaults = defaults
    get_usedict.stypy_call_varargs = varargs
    get_usedict.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'get_usedict', ['block'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'get_usedict', localization, ['block'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'get_usedict(...)' code ##################

    
    # Assigning a Dict to a Name (line 1798):
    
    # Assigning a Dict to a Name (line 1798):
    
    # Obtaining an instance of the builtin type 'dict' (line 1798)
    dict_82985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1798, 14), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1798)
    
    # Assigning a type to the variable 'usedict' (line 1798)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1798, 4), 'usedict', dict_82985)
    
    
    str_82986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1799, 7), 'str', 'parent_block')
    # Getting the type of 'block' (line 1799)
    block_82987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1799, 25), 'block')
    # Applying the binary operator 'in' (line 1799)
    result_contains_82988 = python_operator(stypy.reporting.localization.Localization(__file__, 1799, 7), 'in', str_82986, block_82987)
    
    # Testing the type of an if condition (line 1799)
    if_condition_82989 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1799, 4), result_contains_82988)
    # Assigning a type to the variable 'if_condition_82989' (line 1799)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1799, 4), 'if_condition_82989', if_condition_82989)
    # SSA begins for if statement (line 1799)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1800):
    
    # Assigning a Call to a Name (line 1800):
    
    # Call to get_usedict(...): (line 1800)
    # Processing the call arguments (line 1800)
    
    # Obtaining the type of the subscript
    str_82991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1800, 36), 'str', 'parent_block')
    # Getting the type of 'block' (line 1800)
    block_82992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1800, 30), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 1800)
    getitem___82993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1800, 30), block_82992, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1800)
    subscript_call_result_82994 = invoke(stypy.reporting.localization.Localization(__file__, 1800, 30), getitem___82993, str_82991)
    
    # Processing the call keyword arguments (line 1800)
    kwargs_82995 = {}
    # Getting the type of 'get_usedict' (line 1800)
    get_usedict_82990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1800, 18), 'get_usedict', False)
    # Calling get_usedict(args, kwargs) (line 1800)
    get_usedict_call_result_82996 = invoke(stypy.reporting.localization.Localization(__file__, 1800, 18), get_usedict_82990, *[subscript_call_result_82994], **kwargs_82995)
    
    # Assigning a type to the variable 'usedict' (line 1800)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1800, 8), 'usedict', get_usedict_call_result_82996)
    # SSA join for if statement (line 1799)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_82997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1801, 7), 'str', 'use')
    # Getting the type of 'block' (line 1801)
    block_82998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1801, 16), 'block')
    # Applying the binary operator 'in' (line 1801)
    result_contains_82999 = python_operator(stypy.reporting.localization.Localization(__file__, 1801, 7), 'in', str_82997, block_82998)
    
    # Testing the type of an if condition (line 1801)
    if_condition_83000 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1801, 4), result_contains_82999)
    # Assigning a type to the variable 'if_condition_83000' (line 1801)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1801, 4), 'if_condition_83000', if_condition_83000)
    # SSA begins for if statement (line 1801)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to update(...): (line 1802)
    # Processing the call arguments (line 1802)
    
    # Obtaining the type of the subscript
    str_83003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1802, 29), 'str', 'use')
    # Getting the type of 'block' (line 1802)
    block_83004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1802, 23), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 1802)
    getitem___83005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1802, 23), block_83004, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1802)
    subscript_call_result_83006 = invoke(stypy.reporting.localization.Localization(__file__, 1802, 23), getitem___83005, str_83003)
    
    # Processing the call keyword arguments (line 1802)
    kwargs_83007 = {}
    # Getting the type of 'usedict' (line 1802)
    usedict_83001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1802, 8), 'usedict', False)
    # Obtaining the member 'update' of a type (line 1802)
    update_83002 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1802, 8), usedict_83001, 'update')
    # Calling update(args, kwargs) (line 1802)
    update_call_result_83008 = invoke(stypy.reporting.localization.Localization(__file__, 1802, 8), update_83002, *[subscript_call_result_83006], **kwargs_83007)
    
    # SSA join for if statement (line 1801)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'usedict' (line 1803)
    usedict_83009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1803, 11), 'usedict')
    # Assigning a type to the variable 'stypy_return_type' (line 1803)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1803, 4), 'stypy_return_type', usedict_83009)
    
    # ################# End of 'get_usedict(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'get_usedict' in the type store
    # Getting the type of 'stypy_return_type' (line 1797)
    stypy_return_type_83010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1797, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_83010)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'get_usedict'
    return stypy_return_type_83010

# Assigning a type to the variable 'get_usedict' (line 1797)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1797, 0), 'get_usedict', get_usedict)

@norecursion
def get_useparameters(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 1806)
    None_83011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1806, 39), 'None')
    defaults = [None_83011]
    # Create a new context for function 'get_useparameters'
    module_type_store = module_type_store.open_function_context('get_useparameters', 1806, 0, False)
    
    # Passed parameters checking function
    get_useparameters.stypy_localization = localization
    get_useparameters.stypy_type_of_self = None
    get_useparameters.stypy_type_store = module_type_store
    get_useparameters.stypy_function_name = 'get_useparameters'
    get_useparameters.stypy_param_names_list = ['block', 'param_map']
    get_useparameters.stypy_varargs_param_name = None
    get_useparameters.stypy_kwargs_param_name = None
    get_useparameters.stypy_call_defaults = defaults
    get_useparameters.stypy_call_varargs = varargs
    get_useparameters.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'get_useparameters', ['block', 'param_map'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'get_useparameters', localization, ['block', 'param_map'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'get_useparameters(...)' code ##################

    # Marking variables as global (line 1807)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 1807, 4), 'f90modulevars')
    
    # Type idiom detected: calculating its left and rigth part (line 1809)
    # Getting the type of 'param_map' (line 1809)
    param_map_83012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1809, 7), 'param_map')
    # Getting the type of 'None' (line 1809)
    None_83013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1809, 20), 'None')
    
    (may_be_83014, more_types_in_union_83015) = may_be_none(param_map_83012, None_83013)

    if may_be_83014:

        if more_types_in_union_83015:
            # Runtime conditional SSA (line 1809)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Dict to a Name (line 1810):
        
        # Assigning a Dict to a Name (line 1810):
        
        # Obtaining an instance of the builtin type 'dict' (line 1810)
        dict_83016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1810, 20), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1810)
        
        # Assigning a type to the variable 'param_map' (line 1810)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1810, 8), 'param_map', dict_83016)

        if more_types_in_union_83015:
            # SSA join for if statement (line 1809)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Name (line 1811):
    
    # Assigning a Call to a Name (line 1811):
    
    # Call to get_usedict(...): (line 1811)
    # Processing the call arguments (line 1811)
    # Getting the type of 'block' (line 1811)
    block_83018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1811, 26), 'block', False)
    # Processing the call keyword arguments (line 1811)
    kwargs_83019 = {}
    # Getting the type of 'get_usedict' (line 1811)
    get_usedict_83017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1811, 14), 'get_usedict', False)
    # Calling get_usedict(args, kwargs) (line 1811)
    get_usedict_call_result_83020 = invoke(stypy.reporting.localization.Localization(__file__, 1811, 14), get_usedict_83017, *[block_83018], **kwargs_83019)
    
    # Assigning a type to the variable 'usedict' (line 1811)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1811, 4), 'usedict', get_usedict_call_result_83020)
    
    
    # Getting the type of 'usedict' (line 1812)
    usedict_83021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1812, 11), 'usedict')
    # Applying the 'not' unary operator (line 1812)
    result_not__83022 = python_operator(stypy.reporting.localization.Localization(__file__, 1812, 7), 'not', usedict_83021)
    
    # Testing the type of an if condition (line 1812)
    if_condition_83023 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1812, 4), result_not__83022)
    # Assigning a type to the variable 'if_condition_83023' (line 1812)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1812, 4), 'if_condition_83023', if_condition_83023)
    # SSA begins for if statement (line 1812)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'param_map' (line 1813)
    param_map_83024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1813, 15), 'param_map')
    # Assigning a type to the variable 'stypy_return_type' (line 1813)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1813, 8), 'stypy_return_type', param_map_83024)
    # SSA join for if statement (line 1812)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to list(...): (line 1814)
    # Processing the call arguments (line 1814)
    
    # Call to items(...): (line 1814)
    # Processing the call keyword arguments (line 1814)
    kwargs_83028 = {}
    # Getting the type of 'usedict' (line 1814)
    usedict_83026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1814, 33), 'usedict', False)
    # Obtaining the member 'items' of a type (line 1814)
    items_83027 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1814, 33), usedict_83026, 'items')
    # Calling items(args, kwargs) (line 1814)
    items_call_result_83029 = invoke(stypy.reporting.localization.Localization(__file__, 1814, 33), items_83027, *[], **kwargs_83028)
    
    # Processing the call keyword arguments (line 1814)
    kwargs_83030 = {}
    # Getting the type of 'list' (line 1814)
    list_83025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1814, 28), 'list', False)
    # Calling list(args, kwargs) (line 1814)
    list_call_result_83031 = invoke(stypy.reporting.localization.Localization(__file__, 1814, 28), list_83025, *[items_call_result_83029], **kwargs_83030)
    
    # Testing the type of a for loop iterable (line 1814)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1814, 4), list_call_result_83031)
    # Getting the type of the for loop variable (line 1814)
    for_loop_var_83032 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1814, 4), list_call_result_83031)
    # Assigning a type to the variable 'usename' (line 1814)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1814, 4), 'usename', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1814, 4), for_loop_var_83032))
    # Assigning a type to the variable 'mapping' (line 1814)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1814, 4), 'mapping', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1814, 4), for_loop_var_83032))
    # SSA begins for a for statement (line 1814)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 1815):
    
    # Assigning a Call to a Name (line 1815):
    
    # Call to lower(...): (line 1815)
    # Processing the call keyword arguments (line 1815)
    kwargs_83035 = {}
    # Getting the type of 'usename' (line 1815)
    usename_83033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 18), 'usename', False)
    # Obtaining the member 'lower' of a type (line 1815)
    lower_83034 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1815, 18), usename_83033, 'lower')
    # Calling lower(args, kwargs) (line 1815)
    lower_call_result_83036 = invoke(stypy.reporting.localization.Localization(__file__, 1815, 18), lower_83034, *[], **kwargs_83035)
    
    # Assigning a type to the variable 'usename' (line 1815)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1815, 8), 'usename', lower_call_result_83036)
    
    
    # Getting the type of 'usename' (line 1816)
    usename_83037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1816, 11), 'usename')
    # Getting the type of 'f90modulevars' (line 1816)
    f90modulevars_83038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1816, 26), 'f90modulevars')
    # Applying the binary operator 'notin' (line 1816)
    result_contains_83039 = python_operator(stypy.reporting.localization.Localization(__file__, 1816, 11), 'notin', usename_83037, f90modulevars_83038)
    
    # Testing the type of an if condition (line 1816)
    if_condition_83040 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1816, 8), result_contains_83039)
    # Assigning a type to the variable 'if_condition_83040' (line 1816)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1816, 8), 'if_condition_83040', if_condition_83040)
    # SSA begins for if statement (line 1816)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1817)
    # Processing the call arguments (line 1817)
    str_83042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1817, 20), 'str', 'get_useparameters: no module %s info used by %s\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1818)
    tuple_83043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1818, 21), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1818)
    # Adding element type (line 1818)
    # Getting the type of 'usename' (line 1818)
    usename_83044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1818, 21), 'usename', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1818, 21), tuple_83043, usename_83044)
    # Adding element type (line 1818)
    
    # Call to get(...): (line 1818)
    # Processing the call arguments (line 1818)
    str_83047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1818, 40), 'str', 'name')
    # Processing the call keyword arguments (line 1818)
    kwargs_83048 = {}
    # Getting the type of 'block' (line 1818)
    block_83045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1818, 30), 'block', False)
    # Obtaining the member 'get' of a type (line 1818)
    get_83046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1818, 30), block_83045, 'get')
    # Calling get(args, kwargs) (line 1818)
    get_call_result_83049 = invoke(stypy.reporting.localization.Localization(__file__, 1818, 30), get_83046, *[str_83047], **kwargs_83048)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1818, 21), tuple_83043, get_call_result_83049)
    
    # Applying the binary operator '%' (line 1817)
    result_mod_83050 = python_operator(stypy.reporting.localization.Localization(__file__, 1817, 20), '%', str_83042, tuple_83043)
    
    # Processing the call keyword arguments (line 1817)
    kwargs_83051 = {}
    # Getting the type of 'outmess' (line 1817)
    outmess_83041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1817, 12), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1817)
    outmess_call_result_83052 = invoke(stypy.reporting.localization.Localization(__file__, 1817, 12), outmess_83041, *[result_mod_83050], **kwargs_83051)
    
    # SSA join for if statement (line 1816)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Name (line 1820):
    
    # Assigning a Subscript to a Name (line 1820):
    
    # Obtaining the type of the subscript
    # Getting the type of 'usename' (line 1820)
    usename_83053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1820, 30), 'usename')
    # Getting the type of 'f90modulevars' (line 1820)
    f90modulevars_83054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1820, 16), 'f90modulevars')
    # Obtaining the member '__getitem__' of a type (line 1820)
    getitem___83055 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1820, 16), f90modulevars_83054, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1820)
    subscript_call_result_83056 = invoke(stypy.reporting.localization.Localization(__file__, 1820, 16), getitem___83055, usename_83053)
    
    # Assigning a type to the variable 'mvars' (line 1820)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1820, 8), 'mvars', subscript_call_result_83056)
    
    # Assigning a Call to a Name (line 1821):
    
    # Assigning a Call to a Name (line 1821):
    
    # Call to get_parameters(...): (line 1821)
    # Processing the call arguments (line 1821)
    # Getting the type of 'mvars' (line 1821)
    mvars_83058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1821, 32), 'mvars', False)
    # Processing the call keyword arguments (line 1821)
    kwargs_83059 = {}
    # Getting the type of 'get_parameters' (line 1821)
    get_parameters_83057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1821, 17), 'get_parameters', False)
    # Calling get_parameters(args, kwargs) (line 1821)
    get_parameters_call_result_83060 = invoke(stypy.reporting.localization.Localization(__file__, 1821, 17), get_parameters_83057, *[mvars_83058], **kwargs_83059)
    
    # Assigning a type to the variable 'params' (line 1821)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1821, 8), 'params', get_parameters_call_result_83060)
    
    
    # Getting the type of 'params' (line 1822)
    params_83061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1822, 15), 'params')
    # Applying the 'not' unary operator (line 1822)
    result_not__83062 = python_operator(stypy.reporting.localization.Localization(__file__, 1822, 11), 'not', params_83061)
    
    # Testing the type of an if condition (line 1822)
    if_condition_83063 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1822, 8), result_not__83062)
    # Assigning a type to the variable 'if_condition_83063' (line 1822)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1822, 8), 'if_condition_83063', if_condition_83063)
    # SSA begins for if statement (line 1822)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 1822)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'mapping' (line 1825)
    mapping_83064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1825, 11), 'mapping')
    # Testing the type of an if condition (line 1825)
    if_condition_83065 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1825, 8), mapping_83064)
    # Assigning a type to the variable 'if_condition_83065' (line 1825)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1825, 8), 'if_condition_83065', if_condition_83065)
    # SSA begins for if statement (line 1825)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to errmess(...): (line 1826)
    # Processing the call arguments (line 1826)
    str_83067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1826, 20), 'str', 'get_useparameters: mapping for %s not impl.')
    # Getting the type of 'mapping' (line 1826)
    mapping_83068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1826, 69), 'mapping', False)
    # Applying the binary operator '%' (line 1826)
    result_mod_83069 = python_operator(stypy.reporting.localization.Localization(__file__, 1826, 20), '%', str_83067, mapping_83068)
    
    # Processing the call keyword arguments (line 1826)
    kwargs_83070 = {}
    # Getting the type of 'errmess' (line 1826)
    errmess_83066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1826, 12), 'errmess', False)
    # Calling errmess(args, kwargs) (line 1826)
    errmess_call_result_83071 = invoke(stypy.reporting.localization.Localization(__file__, 1826, 12), errmess_83066, *[result_mod_83069], **kwargs_83070)
    
    # SSA join for if statement (line 1825)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to list(...): (line 1827)
    # Processing the call arguments (line 1827)
    
    # Call to items(...): (line 1827)
    # Processing the call keyword arguments (line 1827)
    kwargs_83075 = {}
    # Getting the type of 'params' (line 1827)
    params_83073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1827, 25), 'params', False)
    # Obtaining the member 'items' of a type (line 1827)
    items_83074 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1827, 25), params_83073, 'items')
    # Calling items(args, kwargs) (line 1827)
    items_call_result_83076 = invoke(stypy.reporting.localization.Localization(__file__, 1827, 25), items_83074, *[], **kwargs_83075)
    
    # Processing the call keyword arguments (line 1827)
    kwargs_83077 = {}
    # Getting the type of 'list' (line 1827)
    list_83072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1827, 20), 'list', False)
    # Calling list(args, kwargs) (line 1827)
    list_call_result_83078 = invoke(stypy.reporting.localization.Localization(__file__, 1827, 20), list_83072, *[items_call_result_83076], **kwargs_83077)
    
    # Testing the type of a for loop iterable (line 1827)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1827, 8), list_call_result_83078)
    # Getting the type of the for loop variable (line 1827)
    for_loop_var_83079 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1827, 8), list_call_result_83078)
    # Assigning a type to the variable 'k' (line 1827)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1827, 8), 'k', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1827, 8), for_loop_var_83079))
    # Assigning a type to the variable 'v' (line 1827)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1827, 8), 'v', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1827, 8), for_loop_var_83079))
    # SSA begins for a for statement (line 1827)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'k' (line 1828)
    k_83080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1828, 15), 'k')
    # Getting the type of 'param_map' (line 1828)
    param_map_83081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1828, 20), 'param_map')
    # Applying the binary operator 'in' (line 1828)
    result_contains_83082 = python_operator(stypy.reporting.localization.Localization(__file__, 1828, 15), 'in', k_83080, param_map_83081)
    
    # Testing the type of an if condition (line 1828)
    if_condition_83083 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1828, 12), result_contains_83082)
    # Assigning a type to the variable 'if_condition_83083' (line 1828)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1828, 12), 'if_condition_83083', if_condition_83083)
    # SSA begins for if statement (line 1828)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1829)
    # Processing the call arguments (line 1829)
    str_83085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1829, 24), 'str', 'get_useparameters: overriding parameter %s with value from module %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1830)
    tuple_83086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1830, 51), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1830)
    # Adding element type (line 1830)
    
    # Call to repr(...): (line 1830)
    # Processing the call arguments (line 1830)
    # Getting the type of 'k' (line 1830)
    k_83088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1830, 56), 'k', False)
    # Processing the call keyword arguments (line 1830)
    kwargs_83089 = {}
    # Getting the type of 'repr' (line 1830)
    repr_83087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1830, 51), 'repr', False)
    # Calling repr(args, kwargs) (line 1830)
    repr_call_result_83090 = invoke(stypy.reporting.localization.Localization(__file__, 1830, 51), repr_83087, *[k_83088], **kwargs_83089)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1830, 51), tuple_83086, repr_call_result_83090)
    # Adding element type (line 1830)
    
    # Call to repr(...): (line 1830)
    # Processing the call arguments (line 1830)
    # Getting the type of 'usename' (line 1830)
    usename_83092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1830, 65), 'usename', False)
    # Processing the call keyword arguments (line 1830)
    kwargs_83093 = {}
    # Getting the type of 'repr' (line 1830)
    repr_83091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1830, 60), 'repr', False)
    # Calling repr(args, kwargs) (line 1830)
    repr_call_result_83094 = invoke(stypy.reporting.localization.Localization(__file__, 1830, 60), repr_83091, *[usename_83092], **kwargs_83093)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1830, 51), tuple_83086, repr_call_result_83094)
    
    # Applying the binary operator '%' (line 1829)
    result_mod_83095 = python_operator(stypy.reporting.localization.Localization(__file__, 1829, 24), '%', str_83085, tuple_83086)
    
    # Processing the call keyword arguments (line 1829)
    kwargs_83096 = {}
    # Getting the type of 'outmess' (line 1829)
    outmess_83084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1829, 16), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1829)
    outmess_call_result_83097 = invoke(stypy.reporting.localization.Localization(__file__, 1829, 16), outmess_83084, *[result_mod_83095], **kwargs_83096)
    
    # SSA join for if statement (line 1828)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 1831):
    
    # Assigning a Name to a Subscript (line 1831):
    # Getting the type of 'v' (line 1831)
    v_83098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1831, 27), 'v')
    # Getting the type of 'param_map' (line 1831)
    param_map_83099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1831, 12), 'param_map')
    # Getting the type of 'k' (line 1831)
    k_83100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1831, 22), 'k')
    # Storing an element on a container (line 1831)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1831, 12), param_map_83099, (k_83100, v_83098))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'param_map' (line 1833)
    param_map_83101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1833, 11), 'param_map')
    # Assigning a type to the variable 'stypy_return_type' (line 1833)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1833, 4), 'stypy_return_type', param_map_83101)
    
    # ################# End of 'get_useparameters(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'get_useparameters' in the type store
    # Getting the type of 'stypy_return_type' (line 1806)
    stypy_return_type_83102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1806, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_83102)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'get_useparameters'
    return stypy_return_type_83102

# Assigning a type to the variable 'get_useparameters' (line 1806)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1806, 0), 'get_useparameters', get_useparameters)

@norecursion
def postcrack2(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    str_83103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1836, 26), 'str', '')
    # Getting the type of 'None' (line 1836)
    None_83104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1836, 40), 'None')
    defaults = [str_83103, None_83104]
    # Create a new context for function 'postcrack2'
    module_type_store = module_type_store.open_function_context('postcrack2', 1836, 0, False)
    
    # Passed parameters checking function
    postcrack2.stypy_localization = localization
    postcrack2.stypy_type_of_self = None
    postcrack2.stypy_type_store = module_type_store
    postcrack2.stypy_function_name = 'postcrack2'
    postcrack2.stypy_param_names_list = ['block', 'tab', 'param_map']
    postcrack2.stypy_varargs_param_name = None
    postcrack2.stypy_kwargs_param_name = None
    postcrack2.stypy_call_defaults = defaults
    postcrack2.stypy_call_varargs = varargs
    postcrack2.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'postcrack2', ['block', 'tab', 'param_map'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'postcrack2', localization, ['block', 'tab', 'param_map'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'postcrack2(...)' code ##################

    # Marking variables as global (line 1837)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 1837, 4), 'f90modulevars')
    
    
    # Getting the type of 'f90modulevars' (line 1839)
    f90modulevars_83105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1839, 11), 'f90modulevars')
    # Applying the 'not' unary operator (line 1839)
    result_not__83106 = python_operator(stypy.reporting.localization.Localization(__file__, 1839, 7), 'not', f90modulevars_83105)
    
    # Testing the type of an if condition (line 1839)
    if_condition_83107 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1839, 4), result_not__83106)
    # Assigning a type to the variable 'if_condition_83107' (line 1839)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1839, 4), 'if_condition_83107', if_condition_83107)
    # SSA begins for if statement (line 1839)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'block' (line 1840)
    block_83108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1840, 15), 'block')
    # Assigning a type to the variable 'stypy_return_type' (line 1840)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1840, 8), 'stypy_return_type', block_83108)
    # SSA join for if statement (line 1839)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Type idiom detected: calculating its left and rigth part (line 1841)
    # Getting the type of 'list' (line 1841)
    list_83109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1841, 25), 'list')
    # Getting the type of 'block' (line 1841)
    block_83110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1841, 18), 'block')
    
    (may_be_83111, more_types_in_union_83112) = may_be_subtype(list_83109, block_83110)

    if may_be_83111:

        if more_types_in_union_83112:
            # Runtime conditional SSA (line 1841)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        # Assigning a type to the variable 'block' (line 1841)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1841, 4), 'block', remove_not_subtype_from_union(block_83110, list))
        
        # Assigning a List to a Name (line 1842):
        
        # Assigning a List to a Name (line 1842):
        
        # Obtaining an instance of the builtin type 'list' (line 1842)
        list_83113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1842, 14), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1842)
        
        # Assigning a type to the variable 'ret' (line 1842)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1842, 8), 'ret', list_83113)
        
        # Getting the type of 'block' (line 1843)
        block_83114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1843, 17), 'block')
        # Testing the type of a for loop iterable (line 1843)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1843, 8), block_83114)
        # Getting the type of the for loop variable (line 1843)
        for_loop_var_83115 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1843, 8), block_83114)
        # Assigning a type to the variable 'g' (line 1843)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1843, 8), 'g', for_loop_var_83115)
        # SSA begins for a for statement (line 1843)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 1844):
        
        # Assigning a Call to a Name (line 1844):
        
        # Call to postcrack2(...): (line 1844)
        # Processing the call arguments (line 1844)
        # Getting the type of 'g' (line 1844)
        g_83117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1844, 27), 'g', False)
        # Processing the call keyword arguments (line 1844)
        # Getting the type of 'tab' (line 1844)
        tab_83118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1844, 34), 'tab', False)
        str_83119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1844, 40), 'str', '\t')
        # Applying the binary operator '+' (line 1844)
        result_add_83120 = python_operator(stypy.reporting.localization.Localization(__file__, 1844, 34), '+', tab_83118, str_83119)
        
        keyword_83121 = result_add_83120
        # Getting the type of 'param_map' (line 1844)
        param_map_83122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1844, 56), 'param_map', False)
        keyword_83123 = param_map_83122
        kwargs_83124 = {'param_map': keyword_83123, 'tab': keyword_83121}
        # Getting the type of 'postcrack2' (line 1844)
        postcrack2_83116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1844, 16), 'postcrack2', False)
        # Calling postcrack2(args, kwargs) (line 1844)
        postcrack2_call_result_83125 = invoke(stypy.reporting.localization.Localization(__file__, 1844, 16), postcrack2_83116, *[g_83117], **kwargs_83124)
        
        # Assigning a type to the variable 'g' (line 1844)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1844, 12), 'g', postcrack2_call_result_83125)
        
        # Call to append(...): (line 1845)
        # Processing the call arguments (line 1845)
        # Getting the type of 'g' (line 1845)
        g_83128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1845, 23), 'g', False)
        # Processing the call keyword arguments (line 1845)
        kwargs_83129 = {}
        # Getting the type of 'ret' (line 1845)
        ret_83126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1845, 12), 'ret', False)
        # Obtaining the member 'append' of a type (line 1845)
        append_83127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1845, 12), ret_83126, 'append')
        # Calling append(args, kwargs) (line 1845)
        append_call_result_83130 = invoke(stypy.reporting.localization.Localization(__file__, 1845, 12), append_83127, *[g_83128], **kwargs_83129)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'ret' (line 1846)
        ret_83131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1846, 15), 'ret')
        # Assigning a type to the variable 'stypy_return_type' (line 1846)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1846, 8), 'stypy_return_type', ret_83131)

        if more_types_in_union_83112:
            # SSA join for if statement (line 1841)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Call to setmesstext(...): (line 1847)
    # Processing the call arguments (line 1847)
    # Getting the type of 'block' (line 1847)
    block_83133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1847, 16), 'block', False)
    # Processing the call keyword arguments (line 1847)
    kwargs_83134 = {}
    # Getting the type of 'setmesstext' (line 1847)
    setmesstext_83132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1847, 4), 'setmesstext', False)
    # Calling setmesstext(args, kwargs) (line 1847)
    setmesstext_call_result_83135 = invoke(stypy.reporting.localization.Localization(__file__, 1847, 4), setmesstext_83132, *[block_83133], **kwargs_83134)
    
    
    # Call to outmess(...): (line 1848)
    # Processing the call arguments (line 1848)
    str_83137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1848, 12), 'str', '%sBlock: %s\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1848)
    tuple_83138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1848, 31), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1848)
    # Adding element type (line 1848)
    # Getting the type of 'tab' (line 1848)
    tab_83139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1848, 31), 'tab', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1848, 31), tuple_83138, tab_83139)
    # Adding element type (line 1848)
    
    # Obtaining the type of the subscript
    str_83140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1848, 42), 'str', 'name')
    # Getting the type of 'block' (line 1848)
    block_83141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1848, 36), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 1848)
    getitem___83142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1848, 36), block_83141, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1848)
    subscript_call_result_83143 = invoke(stypy.reporting.localization.Localization(__file__, 1848, 36), getitem___83142, str_83140)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1848, 31), tuple_83138, subscript_call_result_83143)
    
    # Applying the binary operator '%' (line 1848)
    result_mod_83144 = python_operator(stypy.reporting.localization.Localization(__file__, 1848, 12), '%', str_83137, tuple_83138)
    
    int_83145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1848, 52), 'int')
    # Processing the call keyword arguments (line 1848)
    kwargs_83146 = {}
    # Getting the type of 'outmess' (line 1848)
    outmess_83136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1848, 4), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1848)
    outmess_call_result_83147 = invoke(stypy.reporting.localization.Localization(__file__, 1848, 4), outmess_83136, *[result_mod_83144, int_83145], **kwargs_83146)
    
    
    # Type idiom detected: calculating its left and rigth part (line 1850)
    # Getting the type of 'param_map' (line 1850)
    param_map_83148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1850, 7), 'param_map')
    # Getting the type of 'None' (line 1850)
    None_83149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1850, 20), 'None')
    
    (may_be_83150, more_types_in_union_83151) = may_be_none(param_map_83148, None_83149)

    if may_be_83150:

        if more_types_in_union_83151:
            # Runtime conditional SSA (line 1850)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 1851):
        
        # Assigning a Call to a Name (line 1851):
        
        # Call to get_useparameters(...): (line 1851)
        # Processing the call arguments (line 1851)
        # Getting the type of 'block' (line 1851)
        block_83153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1851, 38), 'block', False)
        # Processing the call keyword arguments (line 1851)
        kwargs_83154 = {}
        # Getting the type of 'get_useparameters' (line 1851)
        get_useparameters_83152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1851, 20), 'get_useparameters', False)
        # Calling get_useparameters(args, kwargs) (line 1851)
        get_useparameters_call_result_83155 = invoke(stypy.reporting.localization.Localization(__file__, 1851, 20), get_useparameters_83152, *[block_83153], **kwargs_83154)
        
        # Assigning a type to the variable 'param_map' (line 1851)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1851, 8), 'param_map', get_useparameters_call_result_83155)

        if more_types_in_union_83151:
            # SSA join for if statement (line 1850)
            module_type_store = module_type_store.join_ssa_context()


    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'param_map' (line 1853)
    param_map_83156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1853, 7), 'param_map')
    # Getting the type of 'None' (line 1853)
    None_83157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1853, 24), 'None')
    # Applying the binary operator 'isnot' (line 1853)
    result_is_not_83158 = python_operator(stypy.reporting.localization.Localization(__file__, 1853, 7), 'isnot', param_map_83156, None_83157)
    
    
    str_83159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1853, 33), 'str', 'vars')
    # Getting the type of 'block' (line 1853)
    block_83160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1853, 43), 'block')
    # Applying the binary operator 'in' (line 1853)
    result_contains_83161 = python_operator(stypy.reporting.localization.Localization(__file__, 1853, 33), 'in', str_83159, block_83160)
    
    # Applying the binary operator 'and' (line 1853)
    result_and_keyword_83162 = python_operator(stypy.reporting.localization.Localization(__file__, 1853, 7), 'and', result_is_not_83158, result_contains_83161)
    
    # Testing the type of an if condition (line 1853)
    if_condition_83163 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1853, 4), result_and_keyword_83162)
    # Assigning a type to the variable 'if_condition_83163' (line 1853)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1853, 4), 'if_condition_83163', if_condition_83163)
    # SSA begins for if statement (line 1853)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1854):
    
    # Assigning a Subscript to a Name (line 1854):
    
    # Obtaining the type of the subscript
    str_83164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1854, 21), 'str', 'vars')
    # Getting the type of 'block' (line 1854)
    block_83165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1854, 15), 'block')
    # Obtaining the member '__getitem__' of a type (line 1854)
    getitem___83166 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1854, 15), block_83165, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1854)
    subscript_call_result_83167 = invoke(stypy.reporting.localization.Localization(__file__, 1854, 15), getitem___83166, str_83164)
    
    # Assigning a type to the variable 'vars' (line 1854)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1854, 8), 'vars', subscript_call_result_83167)
    
    
    # Call to list(...): (line 1855)
    # Processing the call arguments (line 1855)
    
    # Call to keys(...): (line 1855)
    # Processing the call keyword arguments (line 1855)
    kwargs_83171 = {}
    # Getting the type of 'vars' (line 1855)
    vars_83169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1855, 22), 'vars', False)
    # Obtaining the member 'keys' of a type (line 1855)
    keys_83170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1855, 22), vars_83169, 'keys')
    # Calling keys(args, kwargs) (line 1855)
    keys_call_result_83172 = invoke(stypy.reporting.localization.Localization(__file__, 1855, 22), keys_83170, *[], **kwargs_83171)
    
    # Processing the call keyword arguments (line 1855)
    kwargs_83173 = {}
    # Getting the type of 'list' (line 1855)
    list_83168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1855, 17), 'list', False)
    # Calling list(args, kwargs) (line 1855)
    list_call_result_83174 = invoke(stypy.reporting.localization.Localization(__file__, 1855, 17), list_83168, *[keys_call_result_83172], **kwargs_83173)
    
    # Testing the type of a for loop iterable (line 1855)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1855, 8), list_call_result_83174)
    # Getting the type of the for loop variable (line 1855)
    for_loop_var_83175 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1855, 8), list_call_result_83174)
    # Assigning a type to the variable 'n' (line 1855)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1855, 8), 'n', for_loop_var_83175)
    # SSA begins for a for statement (line 1855)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Subscript to a Name (line 1856):
    
    # Assigning a Subscript to a Name (line 1856):
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 1856)
    n_83176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1856, 23), 'n')
    # Getting the type of 'vars' (line 1856)
    vars_83177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1856, 18), 'vars')
    # Obtaining the member '__getitem__' of a type (line 1856)
    getitem___83178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1856, 18), vars_83177, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1856)
    subscript_call_result_83179 = invoke(stypy.reporting.localization.Localization(__file__, 1856, 18), getitem___83178, n_83176)
    
    # Assigning a type to the variable 'var' (line 1856)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1856, 12), 'var', subscript_call_result_83179)
    
    
    str_83180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1857, 15), 'str', 'kindselector')
    # Getting the type of 'var' (line 1857)
    var_83181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1857, 33), 'var')
    # Applying the binary operator 'in' (line 1857)
    result_contains_83182 = python_operator(stypy.reporting.localization.Localization(__file__, 1857, 15), 'in', str_83180, var_83181)
    
    # Testing the type of an if condition (line 1857)
    if_condition_83183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1857, 12), result_contains_83182)
    # Assigning a type to the variable 'if_condition_83183' (line 1857)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1857, 12), 'if_condition_83183', if_condition_83183)
    # SSA begins for if statement (line 1857)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1858):
    
    # Assigning a Subscript to a Name (line 1858):
    
    # Obtaining the type of the subscript
    str_83184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1858, 27), 'str', 'kindselector')
    # Getting the type of 'var' (line 1858)
    var_83185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1858, 23), 'var')
    # Obtaining the member '__getitem__' of a type (line 1858)
    getitem___83186 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1858, 23), var_83185, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1858)
    subscript_call_result_83187 = invoke(stypy.reporting.localization.Localization(__file__, 1858, 23), getitem___83186, str_83184)
    
    # Assigning a type to the variable 'kind' (line 1858)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1858, 16), 'kind', subscript_call_result_83187)
    
    
    str_83188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1859, 19), 'str', 'kind')
    # Getting the type of 'kind' (line 1859)
    kind_83189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 29), 'kind')
    # Applying the binary operator 'in' (line 1859)
    result_contains_83190 = python_operator(stypy.reporting.localization.Localization(__file__, 1859, 19), 'in', str_83188, kind_83189)
    
    # Testing the type of an if condition (line 1859)
    if_condition_83191 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1859, 16), result_contains_83190)
    # Assigning a type to the variable 'if_condition_83191' (line 1859)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1859, 16), 'if_condition_83191', if_condition_83191)
    # SSA begins for if statement (line 1859)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1860):
    
    # Assigning a Subscript to a Name (line 1860):
    
    # Obtaining the type of the subscript
    str_83192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1860, 31), 'str', 'kind')
    # Getting the type of 'kind' (line 1860)
    kind_83193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1860, 26), 'kind')
    # Obtaining the member '__getitem__' of a type (line 1860)
    getitem___83194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1860, 26), kind_83193, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1860)
    subscript_call_result_83195 = invoke(stypy.reporting.localization.Localization(__file__, 1860, 26), getitem___83194, str_83192)
    
    # Assigning a type to the variable 'val' (line 1860)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1860, 20), 'val', subscript_call_result_83195)
    
    
    # Getting the type of 'val' (line 1861)
    val_83196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 23), 'val')
    # Getting the type of 'param_map' (line 1861)
    param_map_83197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 30), 'param_map')
    # Applying the binary operator 'in' (line 1861)
    result_contains_83198 = python_operator(stypy.reporting.localization.Localization(__file__, 1861, 23), 'in', val_83196, param_map_83197)
    
    # Testing the type of an if condition (line 1861)
    if_condition_83199 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1861, 20), result_contains_83198)
    # Assigning a type to the variable 'if_condition_83199' (line 1861)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1861, 20), 'if_condition_83199', if_condition_83199)
    # SSA begins for if statement (line 1861)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 1862):
    
    # Assigning a Subscript to a Subscript (line 1862):
    
    # Obtaining the type of the subscript
    # Getting the type of 'val' (line 1862)
    val_83200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1862, 49), 'val')
    # Getting the type of 'param_map' (line 1862)
    param_map_83201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1862, 39), 'param_map')
    # Obtaining the member '__getitem__' of a type (line 1862)
    getitem___83202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1862, 39), param_map_83201, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1862)
    subscript_call_result_83203 = invoke(stypy.reporting.localization.Localization(__file__, 1862, 39), getitem___83202, val_83200)
    
    # Getting the type of 'kind' (line 1862)
    kind_83204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1862, 24), 'kind')
    str_83205 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1862, 29), 'str', 'kind')
    # Storing an element on a container (line 1862)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1862, 24), kind_83204, (str_83205, subscript_call_result_83203))
    # SSA join for if statement (line 1861)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1859)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1857)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1853)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a List to a Name (line 1863):
    
    # Assigning a List to a Name (line 1863):
    
    # Obtaining an instance of the builtin type 'list' (line 1863)
    list_83206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1863, 15), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1863)
    
    # Assigning a type to the variable 'new_body' (line 1863)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1863, 4), 'new_body', list_83206)
    
    
    # Obtaining the type of the subscript
    str_83207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1864, 19), 'str', 'body')
    # Getting the type of 'block' (line 1864)
    block_83208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1864, 13), 'block')
    # Obtaining the member '__getitem__' of a type (line 1864)
    getitem___83209 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1864, 13), block_83208, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1864)
    subscript_call_result_83210 = invoke(stypy.reporting.localization.Localization(__file__, 1864, 13), getitem___83209, str_83207)
    
    # Testing the type of a for loop iterable (line 1864)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1864, 4), subscript_call_result_83210)
    # Getting the type of the for loop variable (line 1864)
    for_loop_var_83211 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1864, 4), subscript_call_result_83210)
    # Assigning a type to the variable 'b' (line 1864)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1864, 4), 'b', for_loop_var_83211)
    # SSA begins for a for statement (line 1864)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 1865):
    
    # Assigning a Call to a Name (line 1865):
    
    # Call to postcrack2(...): (line 1865)
    # Processing the call arguments (line 1865)
    # Getting the type of 'b' (line 1865)
    b_83213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1865, 23), 'b', False)
    # Processing the call keyword arguments (line 1865)
    # Getting the type of 'tab' (line 1865)
    tab_83214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1865, 30), 'tab', False)
    str_83215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1865, 36), 'str', '\t')
    # Applying the binary operator '+' (line 1865)
    result_add_83216 = python_operator(stypy.reporting.localization.Localization(__file__, 1865, 30), '+', tab_83214, str_83215)
    
    keyword_83217 = result_add_83216
    # Getting the type of 'param_map' (line 1865)
    param_map_83218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1865, 52), 'param_map', False)
    keyword_83219 = param_map_83218
    kwargs_83220 = {'param_map': keyword_83219, 'tab': keyword_83217}
    # Getting the type of 'postcrack2' (line 1865)
    postcrack2_83212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1865, 12), 'postcrack2', False)
    # Calling postcrack2(args, kwargs) (line 1865)
    postcrack2_call_result_83221 = invoke(stypy.reporting.localization.Localization(__file__, 1865, 12), postcrack2_83212, *[b_83213], **kwargs_83220)
    
    # Assigning a type to the variable 'b' (line 1865)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1865, 8), 'b', postcrack2_call_result_83221)
    
    # Call to append(...): (line 1866)
    # Processing the call arguments (line 1866)
    # Getting the type of 'b' (line 1866)
    b_83224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1866, 24), 'b', False)
    # Processing the call keyword arguments (line 1866)
    kwargs_83225 = {}
    # Getting the type of 'new_body' (line 1866)
    new_body_83222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1866, 8), 'new_body', False)
    # Obtaining the member 'append' of a type (line 1866)
    append_83223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1866, 8), new_body_83222, 'append')
    # Calling append(args, kwargs) (line 1866)
    append_call_result_83226 = invoke(stypy.reporting.localization.Localization(__file__, 1866, 8), append_83223, *[b_83224], **kwargs_83225)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 1867):
    
    # Assigning a Name to a Subscript (line 1867):
    # Getting the type of 'new_body' (line 1867)
    new_body_83227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1867, 20), 'new_body')
    # Getting the type of 'block' (line 1867)
    block_83228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1867, 4), 'block')
    str_83229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1867, 10), 'str', 'body')
    # Storing an element on a container (line 1867)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1867, 4), block_83228, (str_83229, new_body_83227))
    # Getting the type of 'block' (line 1869)
    block_83230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1869, 11), 'block')
    # Assigning a type to the variable 'stypy_return_type' (line 1869)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1869, 4), 'stypy_return_type', block_83230)
    
    # ################# End of 'postcrack2(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'postcrack2' in the type store
    # Getting the type of 'stypy_return_type' (line 1836)
    stypy_return_type_83231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1836, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_83231)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'postcrack2'
    return stypy_return_type_83231

# Assigning a type to the variable 'postcrack2' (line 1836)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1836, 0), 'postcrack2', postcrack2)

@norecursion
def postcrack(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 1872)
    None_83232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1872, 26), 'None')
    str_83233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1872, 36), 'str', '')
    defaults = [None_83232, str_83233]
    # Create a new context for function 'postcrack'
    module_type_store = module_type_store.open_function_context('postcrack', 1872, 0, False)
    
    # Passed parameters checking function
    postcrack.stypy_localization = localization
    postcrack.stypy_type_of_self = None
    postcrack.stypy_type_store = module_type_store
    postcrack.stypy_function_name = 'postcrack'
    postcrack.stypy_param_names_list = ['block', 'args', 'tab']
    postcrack.stypy_varargs_param_name = None
    postcrack.stypy_kwargs_param_name = None
    postcrack.stypy_call_defaults = defaults
    postcrack.stypy_call_varargs = varargs
    postcrack.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'postcrack', ['block', 'args', 'tab'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'postcrack', localization, ['block', 'args', 'tab'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'postcrack(...)' code ##################

    str_83234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1877, (-1)), 'str', '\n    TODO:\n          function return values\n          determine expression types if in argument list\n    ')
    # Marking variables as global (line 1878)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 1878, 4), 'usermodules')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 1878, 4), 'onlyfunctions')
    
    # Type idiom detected: calculating its left and rigth part (line 1880)
    # Getting the type of 'list' (line 1880)
    list_83235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1880, 25), 'list')
    # Getting the type of 'block' (line 1880)
    block_83236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1880, 18), 'block')
    
    (may_be_83237, more_types_in_union_83238) = may_be_subtype(list_83235, block_83236)

    if may_be_83237:

        if more_types_in_union_83238:
            # Runtime conditional SSA (line 1880)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        # Assigning a type to the variable 'block' (line 1880)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1880, 4), 'block', remove_not_subtype_from_union(block_83236, list))
        
        # Assigning a List to a Name (line 1881):
        
        # Assigning a List to a Name (line 1881):
        
        # Obtaining an instance of the builtin type 'list' (line 1881)
        list_83239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1881, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1881)
        
        # Assigning a type to the variable 'gret' (line 1881)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1881, 8), 'gret', list_83239)
        
        # Assigning a List to a Name (line 1882):
        
        # Assigning a List to a Name (line 1882):
        
        # Obtaining an instance of the builtin type 'list' (line 1882)
        list_83240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1882, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1882)
        
        # Assigning a type to the variable 'uret' (line 1882)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1882, 8), 'uret', list_83240)
        
        # Getting the type of 'block' (line 1883)
        block_83241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1883, 17), 'block')
        # Testing the type of a for loop iterable (line 1883)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1883, 8), block_83241)
        # Getting the type of the for loop variable (line 1883)
        for_loop_var_83242 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1883, 8), block_83241)
        # Assigning a type to the variable 'g' (line 1883)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1883, 8), 'g', for_loop_var_83242)
        # SSA begins for a for statement (line 1883)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to setmesstext(...): (line 1884)
        # Processing the call arguments (line 1884)
        # Getting the type of 'g' (line 1884)
        g_83244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1884, 24), 'g', False)
        # Processing the call keyword arguments (line 1884)
        kwargs_83245 = {}
        # Getting the type of 'setmesstext' (line 1884)
        setmesstext_83243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1884, 12), 'setmesstext', False)
        # Calling setmesstext(args, kwargs) (line 1884)
        setmesstext_call_result_83246 = invoke(stypy.reporting.localization.Localization(__file__, 1884, 12), setmesstext_83243, *[g_83244], **kwargs_83245)
        
        
        # Assigning a Call to a Name (line 1885):
        
        # Assigning a Call to a Name (line 1885):
        
        # Call to postcrack(...): (line 1885)
        # Processing the call arguments (line 1885)
        # Getting the type of 'g' (line 1885)
        g_83248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1885, 26), 'g', False)
        # Processing the call keyword arguments (line 1885)
        # Getting the type of 'tab' (line 1885)
        tab_83249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1885, 33), 'tab', False)
        str_83250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1885, 39), 'str', '\t')
        # Applying the binary operator '+' (line 1885)
        result_add_83251 = python_operator(stypy.reporting.localization.Localization(__file__, 1885, 33), '+', tab_83249, str_83250)
        
        keyword_83252 = result_add_83251
        kwargs_83253 = {'tab': keyword_83252}
        # Getting the type of 'postcrack' (line 1885)
        postcrack_83247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1885, 16), 'postcrack', False)
        # Calling postcrack(args, kwargs) (line 1885)
        postcrack_call_result_83254 = invoke(stypy.reporting.localization.Localization(__file__, 1885, 16), postcrack_83247, *[g_83248], **kwargs_83253)
        
        # Assigning a type to the variable 'g' (line 1885)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1885, 12), 'g', postcrack_call_result_83254)
        
        
        # Evaluating a boolean operation
        
        str_83255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1887, 15), 'str', 'name')
        # Getting the type of 'g' (line 1887)
        g_83256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1887, 25), 'g')
        # Applying the binary operator 'in' (line 1887)
        result_contains_83257 = python_operator(stypy.reporting.localization.Localization(__file__, 1887, 15), 'in', str_83255, g_83256)
        
        
        str_83258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1887, 31), 'str', '__user__')
        
        # Obtaining the type of the subscript
        str_83259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1887, 47), 'str', 'name')
        # Getting the type of 'g' (line 1887)
        g_83260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1887, 45), 'g')
        # Obtaining the member '__getitem__' of a type (line 1887)
        getitem___83261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1887, 45), g_83260, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1887)
        subscript_call_result_83262 = invoke(stypy.reporting.localization.Localization(__file__, 1887, 45), getitem___83261, str_83259)
        
        # Applying the binary operator 'in' (line 1887)
        result_contains_83263 = python_operator(stypy.reporting.localization.Localization(__file__, 1887, 31), 'in', str_83258, subscript_call_result_83262)
        
        # Applying the binary operator 'and' (line 1887)
        result_and_keyword_83264 = python_operator(stypy.reporting.localization.Localization(__file__, 1887, 15), 'and', result_contains_83257, result_contains_83263)
        
        # Testing the type of an if condition (line 1887)
        if_condition_83265 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1887, 12), result_and_keyword_83264)
        # Assigning a type to the variable 'if_condition_83265' (line 1887)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1887, 12), 'if_condition_83265', if_condition_83265)
        # SSA begins for if statement (line 1887)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to append(...): (line 1888)
        # Processing the call arguments (line 1888)
        # Getting the type of 'g' (line 1888)
        g_83268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1888, 28), 'g', False)
        # Processing the call keyword arguments (line 1888)
        kwargs_83269 = {}
        # Getting the type of 'uret' (line 1888)
        uret_83266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1888, 16), 'uret', False)
        # Obtaining the member 'append' of a type (line 1888)
        append_83267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1888, 16), uret_83266, 'append')
        # Calling append(args, kwargs) (line 1888)
        append_call_result_83270 = invoke(stypy.reporting.localization.Localization(__file__, 1888, 16), append_83267, *[g_83268], **kwargs_83269)
        
        # SSA branch for the else part of an if statement (line 1887)
        module_type_store.open_ssa_branch('else')
        
        # Call to append(...): (line 1890)
        # Processing the call arguments (line 1890)
        # Getting the type of 'g' (line 1890)
        g_83273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1890, 28), 'g', False)
        # Processing the call keyword arguments (line 1890)
        kwargs_83274 = {}
        # Getting the type of 'gret' (line 1890)
        gret_83271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1890, 16), 'gret', False)
        # Obtaining the member 'append' of a type (line 1890)
        append_83272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1890, 16), gret_83271, 'append')
        # Calling append(args, kwargs) (line 1890)
        append_call_result_83275 = invoke(stypy.reporting.localization.Localization(__file__, 1890, 16), append_83272, *[g_83273], **kwargs_83274)
        
        # SSA join for if statement (line 1887)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'uret' (line 1891)
        uret_83276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1891, 15), 'uret')
        # Getting the type of 'gret' (line 1891)
        gret_83277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1891, 22), 'gret')
        # Applying the binary operator '+' (line 1891)
        result_add_83278 = python_operator(stypy.reporting.localization.Localization(__file__, 1891, 15), '+', uret_83276, gret_83277)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1891)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1891, 8), 'stypy_return_type', result_add_83278)

        if more_types_in_union_83238:
            # SSA join for if statement (line 1880)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Call to setmesstext(...): (line 1892)
    # Processing the call arguments (line 1892)
    # Getting the type of 'block' (line 1892)
    block_83280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1892, 16), 'block', False)
    # Processing the call keyword arguments (line 1892)
    kwargs_83281 = {}
    # Getting the type of 'setmesstext' (line 1892)
    setmesstext_83279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1892, 4), 'setmesstext', False)
    # Calling setmesstext(args, kwargs) (line 1892)
    setmesstext_call_result_83282 = invoke(stypy.reporting.localization.Localization(__file__, 1892, 4), setmesstext_83279, *[block_83280], **kwargs_83281)
    
    
    
    # Evaluating a boolean operation
    
    
    # Call to isinstance(...): (line 1893)
    # Processing the call arguments (line 1893)
    # Getting the type of 'block' (line 1893)
    block_83284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1893, 22), 'block', False)
    # Getting the type of 'dict' (line 1893)
    dict_83285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1893, 29), 'dict', False)
    # Processing the call keyword arguments (line 1893)
    kwargs_83286 = {}
    # Getting the type of 'isinstance' (line 1893)
    isinstance_83283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1893, 11), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 1893)
    isinstance_call_result_83287 = invoke(stypy.reporting.localization.Localization(__file__, 1893, 11), isinstance_83283, *[block_83284, dict_83285], **kwargs_83286)
    
    # Applying the 'not' unary operator (line 1893)
    result_not__83288 = python_operator(stypy.reporting.localization.Localization(__file__, 1893, 7), 'not', isinstance_call_result_83287)
    
    
    str_83289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1893, 39), 'str', 'block')
    # Getting the type of 'block' (line 1893)
    block_83290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1893, 54), 'block')
    # Applying the binary operator 'notin' (line 1893)
    result_contains_83291 = python_operator(stypy.reporting.localization.Localization(__file__, 1893, 39), 'notin', str_83289, block_83290)
    
    # Applying the binary operator 'and' (line 1893)
    result_and_keyword_83292 = python_operator(stypy.reporting.localization.Localization(__file__, 1893, 7), 'and', result_not__83288, result_contains_83291)
    
    # Testing the type of an if condition (line 1893)
    if_condition_83293 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1893, 4), result_and_keyword_83292)
    # Assigning a type to the variable 'if_condition_83293' (line 1893)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1893, 4), 'if_condition_83293', if_condition_83293)
    # SSA begins for if statement (line 1893)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to Exception(...): (line 1894)
    # Processing the call arguments (line 1894)
    str_83295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1894, 24), 'str', 'postcrack: Expected block dictionary instead of ')
    
    # Call to str(...): (line 1895)
    # Processing the call arguments (line 1895)
    # Getting the type of 'block' (line 1895)
    block_83297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1895, 28), 'block', False)
    # Processing the call keyword arguments (line 1895)
    kwargs_83298 = {}
    # Getting the type of 'str' (line 1895)
    str_83296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1895, 24), 'str', False)
    # Calling str(args, kwargs) (line 1895)
    str_call_result_83299 = invoke(stypy.reporting.localization.Localization(__file__, 1895, 24), str_83296, *[block_83297], **kwargs_83298)
    
    # Applying the binary operator '+' (line 1894)
    result_add_83300 = python_operator(stypy.reporting.localization.Localization(__file__, 1894, 24), '+', str_83295, str_call_result_83299)
    
    # Processing the call keyword arguments (line 1894)
    kwargs_83301 = {}
    # Getting the type of 'Exception' (line 1894)
    Exception_83294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1894, 14), 'Exception', False)
    # Calling Exception(args, kwargs) (line 1894)
    Exception_call_result_83302 = invoke(stypy.reporting.localization.Localization(__file__, 1894, 14), Exception_83294, *[result_add_83300], **kwargs_83301)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1894, 8), Exception_call_result_83302, 'raise parameter', BaseException)
    # SSA join for if statement (line 1893)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    str_83303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1896, 7), 'str', 'name')
    # Getting the type of 'block' (line 1896)
    block_83304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1896, 17), 'block')
    # Applying the binary operator 'in' (line 1896)
    result_contains_83305 = python_operator(stypy.reporting.localization.Localization(__file__, 1896, 7), 'in', str_83303, block_83304)
    
    
    
    
    # Obtaining the type of the subscript
    str_83306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1896, 37), 'str', 'name')
    # Getting the type of 'block' (line 1896)
    block_83307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1896, 31), 'block')
    # Obtaining the member '__getitem__' of a type (line 1896)
    getitem___83308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1896, 31), block_83307, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1896)
    subscript_call_result_83309 = invoke(stypy.reporting.localization.Localization(__file__, 1896, 31), getitem___83308, str_83306)
    
    str_83310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1896, 48), 'str', 'unknown_interface')
    # Applying the binary operator '==' (line 1896)
    result_eq_83311 = python_operator(stypy.reporting.localization.Localization(__file__, 1896, 31), '==', subscript_call_result_83309, str_83310)
    
    # Applying the 'not' unary operator (line 1896)
    result_not__83312 = python_operator(stypy.reporting.localization.Localization(__file__, 1896, 27), 'not', result_eq_83311)
    
    # Applying the binary operator 'and' (line 1896)
    result_and_keyword_83313 = python_operator(stypy.reporting.localization.Localization(__file__, 1896, 7), 'and', result_contains_83305, result_not__83312)
    
    # Testing the type of an if condition (line 1896)
    if_condition_83314 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1896, 4), result_and_keyword_83313)
    # Assigning a type to the variable 'if_condition_83314' (line 1896)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1896, 4), 'if_condition_83314', if_condition_83314)
    # SSA begins for if statement (line 1896)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1897)
    # Processing the call arguments (line 1897)
    str_83316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1897, 16), 'str', '%sBlock: %s\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1897)
    tuple_83317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1897, 35), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1897)
    # Adding element type (line 1897)
    # Getting the type of 'tab' (line 1897)
    tab_83318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1897, 35), 'tab', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1897, 35), tuple_83317, tab_83318)
    # Adding element type (line 1897)
    
    # Obtaining the type of the subscript
    str_83319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1897, 46), 'str', 'name')
    # Getting the type of 'block' (line 1897)
    block_83320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1897, 40), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 1897)
    getitem___83321 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1897, 40), block_83320, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1897)
    subscript_call_result_83322 = invoke(stypy.reporting.localization.Localization(__file__, 1897, 40), getitem___83321, str_83319)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1897, 35), tuple_83317, subscript_call_result_83322)
    
    # Applying the binary operator '%' (line 1897)
    result_mod_83323 = python_operator(stypy.reporting.localization.Localization(__file__, 1897, 16), '%', str_83316, tuple_83317)
    
    int_83324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1897, 56), 'int')
    # Processing the call keyword arguments (line 1897)
    kwargs_83325 = {}
    # Getting the type of 'outmess' (line 1897)
    outmess_83315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1897, 8), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1897)
    outmess_call_result_83326 = invoke(stypy.reporting.localization.Localization(__file__, 1897, 8), outmess_83315, *[result_mod_83323, int_83324], **kwargs_83325)
    
    # SSA join for if statement (line 1896)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1898):
    
    # Assigning a Call to a Name (line 1898):
    
    # Call to analyzeargs(...): (line 1898)
    # Processing the call arguments (line 1898)
    # Getting the type of 'block' (line 1898)
    block_83328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1898, 24), 'block', False)
    # Processing the call keyword arguments (line 1898)
    kwargs_83329 = {}
    # Getting the type of 'analyzeargs' (line 1898)
    analyzeargs_83327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1898, 12), 'analyzeargs', False)
    # Calling analyzeargs(args, kwargs) (line 1898)
    analyzeargs_call_result_83330 = invoke(stypy.reporting.localization.Localization(__file__, 1898, 12), analyzeargs_83327, *[block_83328], **kwargs_83329)
    
    # Assigning a type to the variable 'block' (line 1898)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1898, 4), 'block', analyzeargs_call_result_83330)
    
    # Assigning a Call to a Name (line 1899):
    
    # Assigning a Call to a Name (line 1899):
    
    # Call to analyzecommon(...): (line 1899)
    # Processing the call arguments (line 1899)
    # Getting the type of 'block' (line 1899)
    block_83332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1899, 26), 'block', False)
    # Processing the call keyword arguments (line 1899)
    kwargs_83333 = {}
    # Getting the type of 'analyzecommon' (line 1899)
    analyzecommon_83331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1899, 12), 'analyzecommon', False)
    # Calling analyzecommon(args, kwargs) (line 1899)
    analyzecommon_call_result_83334 = invoke(stypy.reporting.localization.Localization(__file__, 1899, 12), analyzecommon_83331, *[block_83332], **kwargs_83333)
    
    # Assigning a type to the variable 'block' (line 1899)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1899, 4), 'block', analyzecommon_call_result_83334)
    
    # Assigning a Call to a Subscript (line 1900):
    
    # Assigning a Call to a Subscript (line 1900):
    
    # Call to analyzevars(...): (line 1900)
    # Processing the call arguments (line 1900)
    # Getting the type of 'block' (line 1900)
    block_83336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 32), 'block', False)
    # Processing the call keyword arguments (line 1900)
    kwargs_83337 = {}
    # Getting the type of 'analyzevars' (line 1900)
    analyzevars_83335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 20), 'analyzevars', False)
    # Calling analyzevars(args, kwargs) (line 1900)
    analyzevars_call_result_83338 = invoke(stypy.reporting.localization.Localization(__file__, 1900, 20), analyzevars_83335, *[block_83336], **kwargs_83337)
    
    # Getting the type of 'block' (line 1900)
    block_83339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 4), 'block')
    str_83340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1900, 10), 'str', 'vars')
    # Storing an element on a container (line 1900)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1900, 4), block_83339, (str_83340, analyzevars_call_result_83338))
    
    # Assigning a Call to a Subscript (line 1901):
    
    # Assigning a Call to a Subscript (line 1901):
    
    # Call to sortvarnames(...): (line 1901)
    # Processing the call arguments (line 1901)
    
    # Obtaining the type of the subscript
    str_83342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1901, 43), 'str', 'vars')
    # Getting the type of 'block' (line 1901)
    block_83343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 37), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 1901)
    getitem___83344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1901, 37), block_83343, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1901)
    subscript_call_result_83345 = invoke(stypy.reporting.localization.Localization(__file__, 1901, 37), getitem___83344, str_83342)
    
    # Processing the call keyword arguments (line 1901)
    kwargs_83346 = {}
    # Getting the type of 'sortvarnames' (line 1901)
    sortvarnames_83341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 24), 'sortvarnames', False)
    # Calling sortvarnames(args, kwargs) (line 1901)
    sortvarnames_call_result_83347 = invoke(stypy.reporting.localization.Localization(__file__, 1901, 24), sortvarnames_83341, *[subscript_call_result_83345], **kwargs_83346)
    
    # Getting the type of 'block' (line 1901)
    block_83348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 4), 'block')
    str_83349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1901, 10), 'str', 'sortvars')
    # Storing an element on a container (line 1901)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1901, 4), block_83348, (str_83349, sortvarnames_call_result_83347))
    
    
    # Evaluating a boolean operation
    
    str_83350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1902, 7), 'str', 'args')
    # Getting the type of 'block' (line 1902)
    block_83351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1902, 17), 'block')
    # Applying the binary operator 'in' (line 1902)
    result_contains_83352 = python_operator(stypy.reporting.localization.Localization(__file__, 1902, 7), 'in', str_83350, block_83351)
    
    
    # Obtaining the type of the subscript
    str_83353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1902, 33), 'str', 'args')
    # Getting the type of 'block' (line 1902)
    block_83354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1902, 27), 'block')
    # Obtaining the member '__getitem__' of a type (line 1902)
    getitem___83355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1902, 27), block_83354, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1902)
    subscript_call_result_83356 = invoke(stypy.reporting.localization.Localization(__file__, 1902, 27), getitem___83355, str_83353)
    
    # Applying the binary operator 'and' (line 1902)
    result_and_keyword_83357 = python_operator(stypy.reporting.localization.Localization(__file__, 1902, 7), 'and', result_contains_83352, subscript_call_result_83356)
    
    # Testing the type of an if condition (line 1902)
    if_condition_83358 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1902, 4), result_and_keyword_83357)
    # Assigning a type to the variable 'if_condition_83358' (line 1902)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1902, 4), 'if_condition_83358', if_condition_83358)
    # SSA begins for if statement (line 1902)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1903):
    
    # Assigning a Subscript to a Name (line 1903):
    
    # Obtaining the type of the subscript
    str_83359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1903, 21), 'str', 'args')
    # Getting the type of 'block' (line 1903)
    block_83360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1903, 15), 'block')
    # Obtaining the member '__getitem__' of a type (line 1903)
    getitem___83361 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1903, 15), block_83360, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1903)
    subscript_call_result_83362 = invoke(stypy.reporting.localization.Localization(__file__, 1903, 15), getitem___83361, str_83359)
    
    # Assigning a type to the variable 'args' (line 1903)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1903, 8), 'args', subscript_call_result_83362)
    # SSA join for if statement (line 1902)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Subscript (line 1904):
    
    # Assigning a Call to a Subscript (line 1904):
    
    # Call to analyzebody(...): (line 1904)
    # Processing the call arguments (line 1904)
    # Getting the type of 'block' (line 1904)
    block_83364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1904, 32), 'block', False)
    # Getting the type of 'args' (line 1904)
    args_83365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1904, 39), 'args', False)
    # Processing the call keyword arguments (line 1904)
    # Getting the type of 'tab' (line 1904)
    tab_83366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1904, 49), 'tab', False)
    keyword_83367 = tab_83366
    kwargs_83368 = {'tab': keyword_83367}
    # Getting the type of 'analyzebody' (line 1904)
    analyzebody_83363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1904, 20), 'analyzebody', False)
    # Calling analyzebody(args, kwargs) (line 1904)
    analyzebody_call_result_83369 = invoke(stypy.reporting.localization.Localization(__file__, 1904, 20), analyzebody_83363, *[block_83364, args_83365], **kwargs_83368)
    
    # Getting the type of 'block' (line 1904)
    block_83370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1904, 4), 'block')
    str_83371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1904, 10), 'str', 'body')
    # Storing an element on a container (line 1904)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1904, 4), block_83370, (str_83371, analyzebody_call_result_83369))
    
    # Assigning a List to a Name (line 1906):
    
    # Assigning a List to a Name (line 1906):
    
    # Obtaining an instance of the builtin type 'list' (line 1906)
    list_83372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1906, 20), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1906)
    
    # Assigning a type to the variable 'userisdefined' (line 1906)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1906, 4), 'userisdefined', list_83372)
    
    
    str_83373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1907, 7), 'str', 'use')
    # Getting the type of 'block' (line 1907)
    block_83374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1907, 16), 'block')
    # Applying the binary operator 'in' (line 1907)
    result_contains_83375 = python_operator(stypy.reporting.localization.Localization(__file__, 1907, 7), 'in', str_83373, block_83374)
    
    # Testing the type of an if condition (line 1907)
    if_condition_83376 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1907, 4), result_contains_83375)
    # Assigning a type to the variable 'if_condition_83376' (line 1907)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1907, 4), 'if_condition_83376', if_condition_83376)
    # SSA begins for if statement (line 1907)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1908):
    
    # Assigning a Subscript to a Name (line 1908):
    
    # Obtaining the type of the subscript
    str_83377 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1908, 25), 'str', 'use')
    # Getting the type of 'block' (line 1908)
    block_83378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1908, 19), 'block')
    # Obtaining the member '__getitem__' of a type (line 1908)
    getitem___83379 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1908, 19), block_83378, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1908)
    subscript_call_result_83380 = invoke(stypy.reporting.localization.Localization(__file__, 1908, 19), getitem___83379, str_83377)
    
    # Assigning a type to the variable 'useblock' (line 1908)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1908, 8), 'useblock', subscript_call_result_83380)
    
    
    # Call to list(...): (line 1909)
    # Processing the call arguments (line 1909)
    
    # Call to keys(...): (line 1909)
    # Processing the call keyword arguments (line 1909)
    kwargs_83384 = {}
    # Getting the type of 'useblock' (line 1909)
    useblock_83382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1909, 22), 'useblock', False)
    # Obtaining the member 'keys' of a type (line 1909)
    keys_83383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1909, 22), useblock_83382, 'keys')
    # Calling keys(args, kwargs) (line 1909)
    keys_call_result_83385 = invoke(stypy.reporting.localization.Localization(__file__, 1909, 22), keys_83383, *[], **kwargs_83384)
    
    # Processing the call keyword arguments (line 1909)
    kwargs_83386 = {}
    # Getting the type of 'list' (line 1909)
    list_83381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1909, 17), 'list', False)
    # Calling list(args, kwargs) (line 1909)
    list_call_result_83387 = invoke(stypy.reporting.localization.Localization(__file__, 1909, 17), list_83381, *[keys_call_result_83385], **kwargs_83386)
    
    # Testing the type of a for loop iterable (line 1909)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1909, 8), list_call_result_83387)
    # Getting the type of the for loop variable (line 1909)
    for_loop_var_83388 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1909, 8), list_call_result_83387)
    # Assigning a type to the variable 'k' (line 1909)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1909, 8), 'k', for_loop_var_83388)
    # SSA begins for a for statement (line 1909)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    str_83389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1910, 15), 'str', '__user__')
    # Getting the type of 'k' (line 1910)
    k_83390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1910, 29), 'k')
    # Applying the binary operator 'in' (line 1910)
    result_contains_83391 = python_operator(stypy.reporting.localization.Localization(__file__, 1910, 15), 'in', str_83389, k_83390)
    
    # Testing the type of an if condition (line 1910)
    if_condition_83392 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1910, 12), result_contains_83391)
    # Assigning a type to the variable 'if_condition_83392' (line 1910)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1910, 12), 'if_condition_83392', if_condition_83392)
    # SSA begins for if statement (line 1910)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1911)
    # Processing the call arguments (line 1911)
    # Getting the type of 'k' (line 1911)
    k_83395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1911, 37), 'k', False)
    # Processing the call keyword arguments (line 1911)
    kwargs_83396 = {}
    # Getting the type of 'userisdefined' (line 1911)
    userisdefined_83393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1911, 16), 'userisdefined', False)
    # Obtaining the member 'append' of a type (line 1911)
    append_83394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1911, 16), userisdefined_83393, 'append')
    # Calling append(args, kwargs) (line 1911)
    append_call_result_83397 = invoke(stypy.reporting.localization.Localization(__file__, 1911, 16), append_83394, *[k_83395], **kwargs_83396)
    
    # SSA join for if statement (line 1910)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1907)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Dict to a Name (line 1913):
    
    # Assigning a Dict to a Name (line 1913):
    
    # Obtaining an instance of the builtin type 'dict' (line 1913)
    dict_83398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1913, 19), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1913)
    
    # Assigning a type to the variable 'useblock' (line 1913)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1913, 8), 'useblock', dict_83398)
    # SSA join for if statement (line 1907)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Str to a Name (line 1914):
    
    # Assigning a Str to a Name (line 1914):
    str_83399 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1914, 11), 'str', '')
    # Assigning a type to the variable 'name' (line 1914)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1914, 4), 'name', str_83399)
    
    
    str_83400 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1915, 7), 'str', 'name')
    # Getting the type of 'block' (line 1915)
    block_83401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1915, 17), 'block')
    # Applying the binary operator 'in' (line 1915)
    result_contains_83402 = python_operator(stypy.reporting.localization.Localization(__file__, 1915, 7), 'in', str_83400, block_83401)
    
    # Testing the type of an if condition (line 1915)
    if_condition_83403 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1915, 4), result_contains_83402)
    # Assigning a type to the variable 'if_condition_83403' (line 1915)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1915, 4), 'if_condition_83403', if_condition_83403)
    # SSA begins for if statement (line 1915)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1916):
    
    # Assigning a Subscript to a Name (line 1916):
    
    # Obtaining the type of the subscript
    str_83404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1916, 21), 'str', 'name')
    # Getting the type of 'block' (line 1916)
    block_83405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1916, 15), 'block')
    # Obtaining the member '__getitem__' of a type (line 1916)
    getitem___83406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1916, 15), block_83405, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1916)
    subscript_call_result_83407 = invoke(stypy.reporting.localization.Localization(__file__, 1916, 15), getitem___83406, str_83404)
    
    # Assigning a type to the variable 'name' (line 1916)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1916, 8), 'name', subscript_call_result_83407)
    # SSA join for if statement (line 1915)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    str_83408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1918, 7), 'str', 'externals')
    # Getting the type of 'block' (line 1918)
    block_83409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1918, 22), 'block')
    # Applying the binary operator 'in' (line 1918)
    result_contains_83410 = python_operator(stypy.reporting.localization.Localization(__file__, 1918, 7), 'in', str_83408, block_83409)
    
    
    # Obtaining the type of the subscript
    str_83411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1918, 38), 'str', 'externals')
    # Getting the type of 'block' (line 1918)
    block_83412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1918, 32), 'block')
    # Obtaining the member '__getitem__' of a type (line 1918)
    getitem___83413 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1918, 32), block_83412, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1918)
    subscript_call_result_83414 = invoke(stypy.reporting.localization.Localization(__file__, 1918, 32), getitem___83413, str_83411)
    
    # Applying the binary operator 'and' (line 1918)
    result_and_keyword_83415 = python_operator(stypy.reporting.localization.Localization(__file__, 1918, 7), 'and', result_contains_83410, subscript_call_result_83414)
    
    # Testing the type of an if condition (line 1918)
    if_condition_83416 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1918, 4), result_and_keyword_83415)
    # Assigning a type to the variable 'if_condition_83416' (line 1918)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1918, 4), 'if_condition_83416', if_condition_83416)
    # SSA begins for if statement (line 1918)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Name (line 1919):
    
    # Assigning a List to a Name (line 1919):
    
    # Obtaining an instance of the builtin type 'list' (line 1919)
    list_83417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1919, 21), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1919)
    
    # Assigning a type to the variable 'interfaced' (line 1919)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1919, 8), 'interfaced', list_83417)
    
    
    str_83418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1920, 11), 'str', 'interfaced')
    # Getting the type of 'block' (line 1920)
    block_83419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1920, 27), 'block')
    # Applying the binary operator 'in' (line 1920)
    result_contains_83420 = python_operator(stypy.reporting.localization.Localization(__file__, 1920, 11), 'in', str_83418, block_83419)
    
    # Testing the type of an if condition (line 1920)
    if_condition_83421 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1920, 8), result_contains_83420)
    # Assigning a type to the variable 'if_condition_83421' (line 1920)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1920, 8), 'if_condition_83421', if_condition_83421)
    # SSA begins for if statement (line 1920)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1921):
    
    # Assigning a Subscript to a Name (line 1921):
    
    # Obtaining the type of the subscript
    str_83422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1921, 31), 'str', 'interfaced')
    # Getting the type of 'block' (line 1921)
    block_83423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1921, 25), 'block')
    # Obtaining the member '__getitem__' of a type (line 1921)
    getitem___83424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1921, 25), block_83423, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1921)
    subscript_call_result_83425 = invoke(stypy.reporting.localization.Localization(__file__, 1921, 25), getitem___83424, str_83422)
    
    # Assigning a type to the variable 'interfaced' (line 1921)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1921, 12), 'interfaced', subscript_call_result_83425)
    # SSA join for if statement (line 1920)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1922):
    
    # Assigning a Call to a Name (line 1922):
    
    # Call to copy(...): (line 1922)
    # Processing the call arguments (line 1922)
    
    # Obtaining the type of the subscript
    str_83428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1922, 32), 'str', 'vars')
    # Getting the type of 'block' (line 1922)
    block_83429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1922, 26), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 1922)
    getitem___83430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1922, 26), block_83429, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1922)
    subscript_call_result_83431 = invoke(stypy.reporting.localization.Localization(__file__, 1922, 26), getitem___83430, str_83428)
    
    # Processing the call keyword arguments (line 1922)
    kwargs_83432 = {}
    # Getting the type of 'copy' (line 1922)
    copy_83426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1922, 16), 'copy', False)
    # Obtaining the member 'copy' of a type (line 1922)
    copy_83427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1922, 16), copy_83426, 'copy')
    # Calling copy(args, kwargs) (line 1922)
    copy_call_result_83433 = invoke(stypy.reporting.localization.Localization(__file__, 1922, 16), copy_83427, *[subscript_call_result_83431], **kwargs_83432)
    
    # Assigning a type to the variable 'mvars' (line 1922)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1922, 8), 'mvars', copy_call_result_83433)
    
    # Getting the type of 'name' (line 1923)
    name_83434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1923, 11), 'name')
    # Testing the type of an if condition (line 1923)
    if_condition_83435 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1923, 8), name_83434)
    # Assigning a type to the variable 'if_condition_83435' (line 1923)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1923, 8), 'if_condition_83435', if_condition_83435)
    # SSA begins for if statement (line 1923)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1924):
    
    # Assigning a BinOp to a Name (line 1924):
    # Getting the type of 'name' (line 1924)
    name_83436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1924, 20), 'name')
    str_83437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1924, 27), 'str', '__user__routines')
    # Applying the binary operator '+' (line 1924)
    result_add_83438 = python_operator(stypy.reporting.localization.Localization(__file__, 1924, 20), '+', name_83436, str_83437)
    
    # Assigning a type to the variable 'mname' (line 1924)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1924, 12), 'mname', result_add_83438)
    # SSA branch for the else part of an if statement (line 1923)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Str to a Name (line 1926):
    
    # Assigning a Str to a Name (line 1926):
    str_83439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1926, 20), 'str', 'unknown__user__routines')
    # Assigning a type to the variable 'mname' (line 1926)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1926, 12), 'mname', str_83439)
    # SSA join for if statement (line 1923)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'mname' (line 1927)
    mname_83440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1927, 11), 'mname')
    # Getting the type of 'userisdefined' (line 1927)
    userisdefined_83441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1927, 20), 'userisdefined')
    # Applying the binary operator 'in' (line 1927)
    result_contains_83442 = python_operator(stypy.reporting.localization.Localization(__file__, 1927, 11), 'in', mname_83440, userisdefined_83441)
    
    # Testing the type of an if condition (line 1927)
    if_condition_83443 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1927, 8), result_contains_83442)
    # Assigning a type to the variable 'if_condition_83443' (line 1927)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1927, 8), 'if_condition_83443', if_condition_83443)
    # SSA begins for if statement (line 1927)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 1928):
    
    # Assigning a Num to a Name (line 1928):
    int_83444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1928, 16), 'int')
    # Assigning a type to the variable 'i' (line 1928)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1928, 12), 'i', int_83444)
    
    
    str_83445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1929, 18), 'str', '%s_%i')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1929)
    tuple_83446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1929, 29), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1929)
    # Adding element type (line 1929)
    # Getting the type of 'mname' (line 1929)
    mname_83447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1929, 29), 'mname')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1929, 29), tuple_83446, mname_83447)
    # Adding element type (line 1929)
    # Getting the type of 'i' (line 1929)
    i_83448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1929, 36), 'i')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1929, 29), tuple_83446, i_83448)
    
    # Applying the binary operator '%' (line 1929)
    result_mod_83449 = python_operator(stypy.reporting.localization.Localization(__file__, 1929, 18), '%', str_83445, tuple_83446)
    
    # Getting the type of 'userisdefined' (line 1929)
    userisdefined_83450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1929, 42), 'userisdefined')
    # Applying the binary operator 'in' (line 1929)
    result_contains_83451 = python_operator(stypy.reporting.localization.Localization(__file__, 1929, 18), 'in', result_mod_83449, userisdefined_83450)
    
    # Testing the type of an if condition (line 1929)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1929, 12), result_contains_83451)
    # SSA begins for while statement (line 1929)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    # Assigning a BinOp to a Name (line 1930):
    
    # Assigning a BinOp to a Name (line 1930):
    # Getting the type of 'i' (line 1930)
    i_83452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1930, 20), 'i')
    int_83453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1930, 24), 'int')
    # Applying the binary operator '+' (line 1930)
    result_add_83454 = python_operator(stypy.reporting.localization.Localization(__file__, 1930, 20), '+', i_83452, int_83453)
    
    # Assigning a type to the variable 'i' (line 1930)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1930, 16), 'i', result_add_83454)
    # SSA join for while statement (line 1929)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 1931):
    
    # Assigning a BinOp to a Name (line 1931):
    str_83455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1931, 20), 'str', '%s_%i')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1931)
    tuple_83456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1931, 31), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1931)
    # Adding element type (line 1931)
    # Getting the type of 'mname' (line 1931)
    mname_83457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1931, 31), 'mname')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1931, 31), tuple_83456, mname_83457)
    # Adding element type (line 1931)
    # Getting the type of 'i' (line 1931)
    i_83458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1931, 38), 'i')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1931, 31), tuple_83456, i_83458)
    
    # Applying the binary operator '%' (line 1931)
    result_mod_83459 = python_operator(stypy.reporting.localization.Localization(__file__, 1931, 20), '%', str_83455, tuple_83456)
    
    # Assigning a type to the variable 'mname' (line 1931)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1931, 12), 'mname', result_mod_83459)
    # SSA join for if statement (line 1927)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Dict to a Name (line 1932):
    
    # Assigning a Dict to a Name (line 1932):
    
    # Obtaining an instance of the builtin type 'dict' (line 1932)
    dict_83460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1932, 20), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1932)
    # Adding element type (key, value) (line 1932)
    str_83461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1932, 21), 'str', 'block')
    str_83462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1932, 30), 'str', 'interface')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1932, 20), dict_83460, (str_83461, str_83462))
    # Adding element type (key, value) (line 1932)
    str_83463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1932, 43), 'str', 'body')
    
    # Obtaining an instance of the builtin type 'list' (line 1932)
    list_83464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1932, 51), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1932)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1932, 20), dict_83460, (str_83463, list_83464))
    # Adding element type (key, value) (line 1932)
    str_83465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1933, 21), 'str', 'vars')
    
    # Obtaining an instance of the builtin type 'dict' (line 1933)
    dict_83466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1933, 29), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1933)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1932, 20), dict_83460, (str_83465, dict_83466))
    # Adding element type (key, value) (line 1932)
    str_83467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1933, 33), 'str', 'name')
    # Getting the type of 'name' (line 1933)
    name_83468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1933, 41), 'name')
    str_83469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1933, 48), 'str', '_user_interface')
    # Applying the binary operator '+' (line 1933)
    result_add_83470 = python_operator(stypy.reporting.localization.Localization(__file__, 1933, 41), '+', name_83468, str_83469)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1932, 20), dict_83460, (str_83467, result_add_83470))
    
    # Assigning a type to the variable 'interface' (line 1932)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1932, 8), 'interface', dict_83460)
    
    
    # Obtaining the type of the subscript
    str_83471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1934, 23), 'str', 'externals')
    # Getting the type of 'block' (line 1934)
    block_83472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1934, 17), 'block')
    # Obtaining the member '__getitem__' of a type (line 1934)
    getitem___83473 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1934, 17), block_83472, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1934)
    subscript_call_result_83474 = invoke(stypy.reporting.localization.Localization(__file__, 1934, 17), getitem___83473, str_83471)
    
    # Testing the type of a for loop iterable (line 1934)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1934, 8), subscript_call_result_83474)
    # Getting the type of the for loop variable (line 1934)
    for_loop_var_83475 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1934, 8), subscript_call_result_83474)
    # Assigning a type to the variable 'e' (line 1934)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1934, 8), 'e', for_loop_var_83475)
    # SSA begins for a for statement (line 1934)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'e' (line 1935)
    e_83476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1935, 15), 'e')
    # Getting the type of 'interfaced' (line 1935)
    interfaced_83477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1935, 20), 'interfaced')
    # Applying the binary operator 'in' (line 1935)
    result_contains_83478 = python_operator(stypy.reporting.localization.Localization(__file__, 1935, 15), 'in', e_83476, interfaced_83477)
    
    # Testing the type of an if condition (line 1935)
    if_condition_83479 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1935, 12), result_contains_83478)
    # Assigning a type to the variable 'if_condition_83479' (line 1935)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1935, 12), 'if_condition_83479', if_condition_83479)
    # SSA begins for if statement (line 1935)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Name (line 1936):
    
    # Assigning a List to a Name (line 1936):
    
    # Obtaining an instance of the builtin type 'list' (line 1936)
    list_83480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1936, 23), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1936)
    
    # Assigning a type to the variable 'edef' (line 1936)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1936, 16), 'edef', list_83480)
    
    # Assigning a Num to a Name (line 1937):
    
    # Assigning a Num to a Name (line 1937):
    int_83481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1937, 20), 'int')
    # Assigning a type to the variable 'j' (line 1937)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1937, 16), 'j', int_83481)
    
    
    # Obtaining the type of the subscript
    str_83482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1938, 31), 'str', 'body')
    # Getting the type of 'block' (line 1938)
    block_83483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1938, 25), 'block')
    # Obtaining the member '__getitem__' of a type (line 1938)
    getitem___83484 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1938, 25), block_83483, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1938)
    subscript_call_result_83485 = invoke(stypy.reporting.localization.Localization(__file__, 1938, 25), getitem___83484, str_83482)
    
    # Testing the type of a for loop iterable (line 1938)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1938, 16), subscript_call_result_83485)
    # Getting the type of the for loop variable (line 1938)
    for_loop_var_83486 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1938, 16), subscript_call_result_83485)
    # Assigning a type to the variable 'b' (line 1938)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1938, 16), 'b', for_loop_var_83486)
    # SSA begins for a for statement (line 1938)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a BinOp to a Name (line 1939):
    
    # Assigning a BinOp to a Name (line 1939):
    # Getting the type of 'j' (line 1939)
    j_83487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1939, 24), 'j')
    int_83488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1939, 28), 'int')
    # Applying the binary operator '+' (line 1939)
    result_add_83489 = python_operator(stypy.reporting.localization.Localization(__file__, 1939, 24), '+', j_83487, int_83488)
    
    # Assigning a type to the variable 'j' (line 1939)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1939, 20), 'j', result_add_83489)
    
    
    
    # Obtaining the type of the subscript
    str_83490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1940, 25), 'str', 'block')
    # Getting the type of 'b' (line 1940)
    b_83491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1940, 23), 'b')
    # Obtaining the member '__getitem__' of a type (line 1940)
    getitem___83492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1940, 23), b_83491, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1940)
    subscript_call_result_83493 = invoke(stypy.reporting.localization.Localization(__file__, 1940, 23), getitem___83492, str_83490)
    
    str_83494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1940, 37), 'str', 'interface')
    # Applying the binary operator '==' (line 1940)
    result_eq_83495 = python_operator(stypy.reporting.localization.Localization(__file__, 1940, 23), '==', subscript_call_result_83493, str_83494)
    
    # Testing the type of an if condition (line 1940)
    if_condition_83496 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1940, 20), result_eq_83495)
    # Assigning a type to the variable 'if_condition_83496' (line 1940)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1940, 20), 'if_condition_83496', if_condition_83496)
    # SSA begins for if statement (line 1940)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 1941):
    
    # Assigning a Num to a Name (line 1941):
    int_83497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1941, 28), 'int')
    # Assigning a type to the variable 'i' (line 1941)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1941, 24), 'i', int_83497)
    
    
    # Obtaining the type of the subscript
    str_83498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1942, 36), 'str', 'body')
    # Getting the type of 'b' (line 1942)
    b_83499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1942, 34), 'b')
    # Obtaining the member '__getitem__' of a type (line 1942)
    getitem___83500 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1942, 34), b_83499, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1942)
    subscript_call_result_83501 = invoke(stypy.reporting.localization.Localization(__file__, 1942, 34), getitem___83500, str_83498)
    
    # Testing the type of a for loop iterable (line 1942)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1942, 24), subscript_call_result_83501)
    # Getting the type of the for loop variable (line 1942)
    for_loop_var_83502 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1942, 24), subscript_call_result_83501)
    # Assigning a type to the variable 'bb' (line 1942)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1942, 24), 'bb', for_loop_var_83502)
    # SSA begins for a for statement (line 1942)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a BinOp to a Name (line 1943):
    
    # Assigning a BinOp to a Name (line 1943):
    # Getting the type of 'i' (line 1943)
    i_83503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1943, 32), 'i')
    int_83504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1943, 36), 'int')
    # Applying the binary operator '+' (line 1943)
    result_add_83505 = python_operator(stypy.reporting.localization.Localization(__file__, 1943, 32), '+', i_83503, int_83504)
    
    # Assigning a type to the variable 'i' (line 1943)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1943, 28), 'i', result_add_83505)
    
    
    # Evaluating a boolean operation
    
    str_83506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1944, 31), 'str', 'name')
    # Getting the type of 'bb' (line 1944)
    bb_83507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1944, 41), 'bb')
    # Applying the binary operator 'in' (line 1944)
    result_contains_83508 = python_operator(stypy.reporting.localization.Localization(__file__, 1944, 31), 'in', str_83506, bb_83507)
    
    
    
    # Obtaining the type of the subscript
    str_83509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1944, 51), 'str', 'name')
    # Getting the type of 'bb' (line 1944)
    bb_83510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1944, 48), 'bb')
    # Obtaining the member '__getitem__' of a type (line 1944)
    getitem___83511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1944, 48), bb_83510, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1944)
    subscript_call_result_83512 = invoke(stypy.reporting.localization.Localization(__file__, 1944, 48), getitem___83511, str_83509)
    
    # Getting the type of 'e' (line 1944)
    e_83513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1944, 62), 'e')
    # Applying the binary operator '==' (line 1944)
    result_eq_83514 = python_operator(stypy.reporting.localization.Localization(__file__, 1944, 48), '==', subscript_call_result_83512, e_83513)
    
    # Applying the binary operator 'and' (line 1944)
    result_and_keyword_83515 = python_operator(stypy.reporting.localization.Localization(__file__, 1944, 31), 'and', result_contains_83508, result_eq_83514)
    
    # Testing the type of an if condition (line 1944)
    if_condition_83516 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1944, 28), result_and_keyword_83515)
    # Assigning a type to the variable 'if_condition_83516' (line 1944)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1944, 28), 'if_condition_83516', if_condition_83516)
    # SSA begins for if statement (line 1944)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1945):
    
    # Assigning a Call to a Name (line 1945):
    
    # Call to copy(...): (line 1945)
    # Processing the call arguments (line 1945)
    # Getting the type of 'bb' (line 1945)
    bb_83519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 49), 'bb', False)
    # Processing the call keyword arguments (line 1945)
    kwargs_83520 = {}
    # Getting the type of 'copy' (line 1945)
    copy_83517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 39), 'copy', False)
    # Obtaining the member 'copy' of a type (line 1945)
    copy_83518 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1945, 39), copy_83517, 'copy')
    # Calling copy(args, kwargs) (line 1945)
    copy_call_result_83521 = invoke(stypy.reporting.localization.Localization(__file__, 1945, 39), copy_83518, *[bb_83519], **kwargs_83520)
    
    # Assigning a type to the variable 'edef' (line 1945)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1945, 32), 'edef', copy_call_result_83521)
    # Deleting a member
    
    # Obtaining the type of the subscript
    str_83522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1946, 38), 'str', 'body')
    # Getting the type of 'b' (line 1946)
    b_83523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 36), 'b')
    # Obtaining the member '__getitem__' of a type (line 1946)
    getitem___83524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1946, 36), b_83523, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1946)
    subscript_call_result_83525 = invoke(stypy.reporting.localization.Localization(__file__, 1946, 36), getitem___83524, str_83522)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 1946)
    i_83526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 46), 'i')
    
    # Obtaining the type of the subscript
    str_83527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1946, 38), 'str', 'body')
    # Getting the type of 'b' (line 1946)
    b_83528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 36), 'b')
    # Obtaining the member '__getitem__' of a type (line 1946)
    getitem___83529 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1946, 36), b_83528, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1946)
    subscript_call_result_83530 = invoke(stypy.reporting.localization.Localization(__file__, 1946, 36), getitem___83529, str_83527)
    
    # Obtaining the member '__getitem__' of a type (line 1946)
    getitem___83531 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1946, 36), subscript_call_result_83530, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1946)
    subscript_call_result_83532 = invoke(stypy.reporting.localization.Localization(__file__, 1946, 36), getitem___83531, i_83526)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1946, 32), subscript_call_result_83525, subscript_call_result_83532)
    # SSA join for if statement (line 1944)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'edef' (line 1948)
    edef_83533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1948, 27), 'edef')
    # Testing the type of an if condition (line 1948)
    if_condition_83534 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1948, 24), edef_83533)
    # Assigning a type to the variable 'if_condition_83534' (line 1948)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1948, 24), 'if_condition_83534', if_condition_83534)
    # SSA begins for if statement (line 1948)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Obtaining the type of the subscript
    str_83535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1949, 37), 'str', 'body')
    # Getting the type of 'b' (line 1949)
    b_83536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1949, 35), 'b')
    # Obtaining the member '__getitem__' of a type (line 1949)
    getitem___83537 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1949, 35), b_83536, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1949)
    subscript_call_result_83538 = invoke(stypy.reporting.localization.Localization(__file__, 1949, 35), getitem___83537, str_83535)
    
    # Applying the 'not' unary operator (line 1949)
    result_not__83539 = python_operator(stypy.reporting.localization.Localization(__file__, 1949, 31), 'not', subscript_call_result_83538)
    
    # Testing the type of an if condition (line 1949)
    if_condition_83540 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1949, 28), result_not__83539)
    # Assigning a type to the variable 'if_condition_83540' (line 1949)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1949, 28), 'if_condition_83540', if_condition_83540)
    # SSA begins for if statement (line 1949)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Deleting a member
    
    # Obtaining the type of the subscript
    str_83541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1950, 42), 'str', 'body')
    # Getting the type of 'block' (line 1950)
    block_83542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1950, 36), 'block')
    # Obtaining the member '__getitem__' of a type (line 1950)
    getitem___83543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1950, 36), block_83542, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1950)
    subscript_call_result_83544 = invoke(stypy.reporting.localization.Localization(__file__, 1950, 36), getitem___83543, str_83541)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'j' (line 1950)
    j_83545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1950, 50), 'j')
    
    # Obtaining the type of the subscript
    str_83546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1950, 42), 'str', 'body')
    # Getting the type of 'block' (line 1950)
    block_83547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1950, 36), 'block')
    # Obtaining the member '__getitem__' of a type (line 1950)
    getitem___83548 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1950, 36), block_83547, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1950)
    subscript_call_result_83549 = invoke(stypy.reporting.localization.Localization(__file__, 1950, 36), getitem___83548, str_83546)
    
    # Obtaining the member '__getitem__' of a type (line 1950)
    getitem___83550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1950, 36), subscript_call_result_83549, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1950)
    subscript_call_result_83551 = invoke(stypy.reporting.localization.Localization(__file__, 1950, 36), getitem___83550, j_83545)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1950, 32), subscript_call_result_83544, subscript_call_result_83551)
    # SSA join for if statement (line 1949)
    module_type_store = module_type_store.join_ssa_context()
    
    # Deleting a member
    # Getting the type of 'interfaced' (line 1951)
    interfaced_83552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1951, 32), 'interfaced')
    
    # Obtaining the type of the subscript
    
    # Call to index(...): (line 1951)
    # Processing the call arguments (line 1951)
    # Getting the type of 'e' (line 1951)
    e_83555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1951, 60), 'e', False)
    # Processing the call keyword arguments (line 1951)
    kwargs_83556 = {}
    # Getting the type of 'interfaced' (line 1951)
    interfaced_83553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1951, 43), 'interfaced', False)
    # Obtaining the member 'index' of a type (line 1951)
    index_83554 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1951, 43), interfaced_83553, 'index')
    # Calling index(args, kwargs) (line 1951)
    index_call_result_83557 = invoke(stypy.reporting.localization.Localization(__file__, 1951, 43), index_83554, *[e_83555], **kwargs_83556)
    
    # Getting the type of 'interfaced' (line 1951)
    interfaced_83558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1951, 32), 'interfaced')
    # Obtaining the member '__getitem__' of a type (line 1951)
    getitem___83559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1951, 32), interfaced_83558, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1951)
    subscript_call_result_83560 = invoke(stypy.reporting.localization.Localization(__file__, 1951, 32), getitem___83559, index_call_result_83557)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1951, 28), interfaced_83552, subscript_call_result_83560)
    # SSA join for if statement (line 1948)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1940)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 1953)
    # Processing the call arguments (line 1953)
    # Getting the type of 'edef' (line 1953)
    edef_83566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1953, 41), 'edef', False)
    # Processing the call keyword arguments (line 1953)
    kwargs_83567 = {}
    
    # Obtaining the type of the subscript
    str_83561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1953, 26), 'str', 'body')
    # Getting the type of 'interface' (line 1953)
    interface_83562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1953, 16), 'interface', False)
    # Obtaining the member '__getitem__' of a type (line 1953)
    getitem___83563 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1953, 16), interface_83562, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1953)
    subscript_call_result_83564 = invoke(stypy.reporting.localization.Localization(__file__, 1953, 16), getitem___83563, str_83561)
    
    # Obtaining the member 'append' of a type (line 1953)
    append_83565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1953, 16), subscript_call_result_83564, 'append')
    # Calling append(args, kwargs) (line 1953)
    append_call_result_83568 = invoke(stypy.reporting.localization.Localization(__file__, 1953, 16), append_83565, *[edef_83566], **kwargs_83567)
    
    # SSA branch for the else part of an if statement (line 1935)
    module_type_store.open_ssa_branch('else')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'e' (line 1955)
    e_83569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1955, 19), 'e')
    # Getting the type of 'mvars' (line 1955)
    mvars_83570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1955, 24), 'mvars')
    # Applying the binary operator 'in' (line 1955)
    result_contains_83571 = python_operator(stypy.reporting.localization.Localization(__file__, 1955, 19), 'in', e_83569, mvars_83570)
    
    
    
    # Call to isexternal(...): (line 1955)
    # Processing the call arguments (line 1955)
    
    # Obtaining the type of the subscript
    # Getting the type of 'e' (line 1955)
    e_83573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1955, 55), 'e', False)
    # Getting the type of 'mvars' (line 1955)
    mvars_83574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1955, 49), 'mvars', False)
    # Obtaining the member '__getitem__' of a type (line 1955)
    getitem___83575 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1955, 49), mvars_83574, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1955)
    subscript_call_result_83576 = invoke(stypy.reporting.localization.Localization(__file__, 1955, 49), getitem___83575, e_83573)
    
    # Processing the call keyword arguments (line 1955)
    kwargs_83577 = {}
    # Getting the type of 'isexternal' (line 1955)
    isexternal_83572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1955, 38), 'isexternal', False)
    # Calling isexternal(args, kwargs) (line 1955)
    isexternal_call_result_83578 = invoke(stypy.reporting.localization.Localization(__file__, 1955, 38), isexternal_83572, *[subscript_call_result_83576], **kwargs_83577)
    
    # Applying the 'not' unary operator (line 1955)
    result_not__83579 = python_operator(stypy.reporting.localization.Localization(__file__, 1955, 34), 'not', isexternal_call_result_83578)
    
    # Applying the binary operator 'and' (line 1955)
    result_and_keyword_83580 = python_operator(stypy.reporting.localization.Localization(__file__, 1955, 19), 'and', result_contains_83571, result_not__83579)
    
    # Testing the type of an if condition (line 1955)
    if_condition_83581 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1955, 16), result_and_keyword_83580)
    # Assigning a type to the variable 'if_condition_83581' (line 1955)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1955, 16), 'if_condition_83581', if_condition_83581)
    # SSA begins for if statement (line 1955)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 1956):
    
    # Assigning a Subscript to a Subscript (line 1956):
    
    # Obtaining the type of the subscript
    # Getting the type of 'e' (line 1956)
    e_83582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1956, 49), 'e')
    # Getting the type of 'mvars' (line 1956)
    mvars_83583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1956, 43), 'mvars')
    # Obtaining the member '__getitem__' of a type (line 1956)
    getitem___83584 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1956, 43), mvars_83583, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1956)
    subscript_call_result_83585 = invoke(stypy.reporting.localization.Localization(__file__, 1956, 43), getitem___83584, e_83582)
    
    
    # Obtaining the type of the subscript
    str_83586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1956, 30), 'str', 'vars')
    # Getting the type of 'interface' (line 1956)
    interface_83587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1956, 20), 'interface')
    # Obtaining the member '__getitem__' of a type (line 1956)
    getitem___83588 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1956, 20), interface_83587, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1956)
    subscript_call_result_83589 = invoke(stypy.reporting.localization.Localization(__file__, 1956, 20), getitem___83588, str_83586)
    
    # Getting the type of 'e' (line 1956)
    e_83590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1956, 38), 'e')
    # Storing an element on a container (line 1956)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1956, 20), subscript_call_result_83589, (e_83590, subscript_call_result_83585))
    # SSA join for if statement (line 1955)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1935)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Obtaining the type of the subscript
    str_83591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1957, 21), 'str', 'vars')
    # Getting the type of 'interface' (line 1957)
    interface_83592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 11), 'interface')
    # Obtaining the member '__getitem__' of a type (line 1957)
    getitem___83593 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1957, 11), interface_83592, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1957)
    subscript_call_result_83594 = invoke(stypy.reporting.localization.Localization(__file__, 1957, 11), getitem___83593, str_83591)
    
    
    # Obtaining the type of the subscript
    str_83595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1957, 42), 'str', 'body')
    # Getting the type of 'interface' (line 1957)
    interface_83596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 32), 'interface')
    # Obtaining the member '__getitem__' of a type (line 1957)
    getitem___83597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1957, 32), interface_83596, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1957)
    subscript_call_result_83598 = invoke(stypy.reporting.localization.Localization(__file__, 1957, 32), getitem___83597, str_83595)
    
    # Applying the binary operator 'or' (line 1957)
    result_or_keyword_83599 = python_operator(stypy.reporting.localization.Localization(__file__, 1957, 11), 'or', subscript_call_result_83594, subscript_call_result_83598)
    
    # Testing the type of an if condition (line 1957)
    if_condition_83600 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1957, 8), result_or_keyword_83599)
    # Assigning a type to the variable 'if_condition_83600' (line 1957)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1957, 8), 'if_condition_83600', if_condition_83600)
    # SSA begins for if statement (line 1957)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Subscript (line 1958):
    
    # Assigning a Name to a Subscript (line 1958):
    # Getting the type of 'interfaced' (line 1958)
    interfaced_83601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1958, 34), 'interfaced')
    # Getting the type of 'block' (line 1958)
    block_83602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1958, 12), 'block')
    str_83603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1958, 18), 'str', 'interfaced')
    # Storing an element on a container (line 1958)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1958, 12), block_83602, (str_83603, interfaced_83601))
    
    # Assigning a Dict to a Name (line 1959):
    
    # Assigning a Dict to a Name (line 1959):
    
    # Obtaining an instance of the builtin type 'dict' (line 1959)
    dict_83604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1959, 21), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1959)
    # Adding element type (key, value) (line 1959)
    str_83605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1959, 22), 'str', 'block')
    str_83606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1959, 31), 'str', 'python module')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1959, 21), dict_83604, (str_83605, str_83606))
    # Adding element type (key, value) (line 1959)
    str_83607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1959, 48), 'str', 'body')
    
    # Obtaining an instance of the builtin type 'list' (line 1959)
    list_83608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1959, 56), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1959)
    # Adding element type (line 1959)
    # Getting the type of 'interface' (line 1960)
    interface_83609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1960, 16), 'interface')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1959, 56), list_83608, interface_83609)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1959, 21), dict_83604, (str_83607, list_83608))
    # Adding element type (key, value) (line 1959)
    str_83610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1960, 28), 'str', 'vars')
    
    # Obtaining an instance of the builtin type 'dict' (line 1960)
    dict_83611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1960, 36), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1960)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1959, 21), dict_83604, (str_83610, dict_83611))
    # Adding element type (key, value) (line 1959)
    str_83612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1960, 40), 'str', 'name')
    # Getting the type of 'mname' (line 1960)
    mname_83613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1960, 48), 'mname')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1959, 21), dict_83604, (str_83612, mname_83613))
    # Adding element type (key, value) (line 1959)
    str_83614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1960, 55), 'str', 'interfaced')
    
    # Obtaining the type of the subscript
    str_83615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1960, 75), 'str', 'externals')
    # Getting the type of 'block' (line 1960)
    block_83616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1960, 69), 'block')
    # Obtaining the member '__getitem__' of a type (line 1960)
    getitem___83617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1960, 69), block_83616, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1960)
    subscript_call_result_83618 = invoke(stypy.reporting.localization.Localization(__file__, 1960, 69), getitem___83617, str_83615)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1959, 21), dict_83604, (str_83614, subscript_call_result_83618))
    
    # Assigning a type to the variable 'mblock' (line 1959)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1959, 12), 'mblock', dict_83604)
    
    # Assigning a Dict to a Subscript (line 1961):
    
    # Assigning a Dict to a Subscript (line 1961):
    
    # Obtaining an instance of the builtin type 'dict' (line 1961)
    dict_83619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1961, 30), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1961)
    
    # Getting the type of 'useblock' (line 1961)
    useblock_83620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1961, 12), 'useblock')
    # Getting the type of 'mname' (line 1961)
    mname_83621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1961, 21), 'mname')
    # Storing an element on a container (line 1961)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1961, 12), useblock_83620, (mname_83621, dict_83619))
    
    # Call to append(...): (line 1962)
    # Processing the call arguments (line 1962)
    # Getting the type of 'mblock' (line 1962)
    mblock_83624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1962, 31), 'mblock', False)
    # Processing the call keyword arguments (line 1962)
    kwargs_83625 = {}
    # Getting the type of 'usermodules' (line 1962)
    usermodules_83622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1962, 12), 'usermodules', False)
    # Obtaining the member 'append' of a type (line 1962)
    append_83623 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1962, 12), usermodules_83622, 'append')
    # Calling append(args, kwargs) (line 1962)
    append_call_result_83626 = invoke(stypy.reporting.localization.Localization(__file__, 1962, 12), append_83623, *[mblock_83624], **kwargs_83625)
    
    # SSA join for if statement (line 1957)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1918)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'useblock' (line 1963)
    useblock_83627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1963, 7), 'useblock')
    # Testing the type of an if condition (line 1963)
    if_condition_83628 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1963, 4), useblock_83627)
    # Assigning a type to the variable 'if_condition_83628' (line 1963)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1963, 4), 'if_condition_83628', if_condition_83628)
    # SSA begins for if statement (line 1963)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Subscript (line 1964):
    
    # Assigning a Name to a Subscript (line 1964):
    # Getting the type of 'useblock' (line 1964)
    useblock_83629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1964, 23), 'useblock')
    # Getting the type of 'block' (line 1964)
    block_83630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1964, 8), 'block')
    str_83631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1964, 14), 'str', 'use')
    # Storing an element on a container (line 1964)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1964, 8), block_83630, (str_83631, useblock_83629))
    # SSA join for if statement (line 1963)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'block' (line 1965)
    block_83632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1965, 11), 'block')
    # Assigning a type to the variable 'stypy_return_type' (line 1965)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1965, 4), 'stypy_return_type', block_83632)
    
    # ################# End of 'postcrack(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'postcrack' in the type store
    # Getting the type of 'stypy_return_type' (line 1872)
    stypy_return_type_83633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1872, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_83633)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'postcrack'
    return stypy_return_type_83633

# Assigning a type to the variable 'postcrack' (line 1872)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1872, 0), 'postcrack', postcrack)

@norecursion
def sortvarnames(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'sortvarnames'
    module_type_store = module_type_store.open_function_context('sortvarnames', 1968, 0, False)
    
    # Passed parameters checking function
    sortvarnames.stypy_localization = localization
    sortvarnames.stypy_type_of_self = None
    sortvarnames.stypy_type_store = module_type_store
    sortvarnames.stypy_function_name = 'sortvarnames'
    sortvarnames.stypy_param_names_list = ['vars']
    sortvarnames.stypy_varargs_param_name = None
    sortvarnames.stypy_kwargs_param_name = None
    sortvarnames.stypy_call_defaults = defaults
    sortvarnames.stypy_call_varargs = varargs
    sortvarnames.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'sortvarnames', ['vars'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'sortvarnames', localization, ['vars'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'sortvarnames(...)' code ##################

    
    # Assigning a List to a Name (line 1969):
    
    # Assigning a List to a Name (line 1969):
    
    # Obtaining an instance of the builtin type 'list' (line 1969)
    list_83634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1969, 12), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1969)
    
    # Assigning a type to the variable 'indep' (line 1969)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1969, 4), 'indep', list_83634)
    
    # Assigning a List to a Name (line 1970):
    
    # Assigning a List to a Name (line 1970):
    
    # Obtaining an instance of the builtin type 'list' (line 1970)
    list_83635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1970, 10), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1970)
    
    # Assigning a type to the variable 'dep' (line 1970)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1970, 4), 'dep', list_83635)
    
    
    # Call to list(...): (line 1971)
    # Processing the call arguments (line 1971)
    
    # Call to keys(...): (line 1971)
    # Processing the call keyword arguments (line 1971)
    kwargs_83639 = {}
    # Getting the type of 'vars' (line 1971)
    vars_83637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1971, 18), 'vars', False)
    # Obtaining the member 'keys' of a type (line 1971)
    keys_83638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1971, 18), vars_83637, 'keys')
    # Calling keys(args, kwargs) (line 1971)
    keys_call_result_83640 = invoke(stypy.reporting.localization.Localization(__file__, 1971, 18), keys_83638, *[], **kwargs_83639)
    
    # Processing the call keyword arguments (line 1971)
    kwargs_83641 = {}
    # Getting the type of 'list' (line 1971)
    list_83636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1971, 13), 'list', False)
    # Calling list(args, kwargs) (line 1971)
    list_call_result_83642 = invoke(stypy.reporting.localization.Localization(__file__, 1971, 13), list_83636, *[keys_call_result_83640], **kwargs_83641)
    
    # Testing the type of a for loop iterable (line 1971)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1971, 4), list_call_result_83642)
    # Getting the type of the for loop variable (line 1971)
    for_loop_var_83643 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1971, 4), list_call_result_83642)
    # Assigning a type to the variable 'v' (line 1971)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1971, 4), 'v', for_loop_var_83643)
    # SSA begins for a for statement (line 1971)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    str_83644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1972, 11), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'v' (line 1972)
    v_83645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1972, 28), 'v')
    # Getting the type of 'vars' (line 1972)
    vars_83646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1972, 23), 'vars')
    # Obtaining the member '__getitem__' of a type (line 1972)
    getitem___83647 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1972, 23), vars_83646, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1972)
    subscript_call_result_83648 = invoke(stypy.reporting.localization.Localization(__file__, 1972, 23), getitem___83647, v_83645)
    
    # Applying the binary operator 'in' (line 1972)
    result_contains_83649 = python_operator(stypy.reporting.localization.Localization(__file__, 1972, 11), 'in', str_83644, subscript_call_result_83648)
    
    
    # Obtaining the type of the subscript
    str_83650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1972, 43), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'v' (line 1972)
    v_83651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1972, 40), 'v')
    # Getting the type of 'vars' (line 1972)
    vars_83652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1972, 35), 'vars')
    # Obtaining the member '__getitem__' of a type (line 1972)
    getitem___83653 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1972, 35), vars_83652, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1972)
    subscript_call_result_83654 = invoke(stypy.reporting.localization.Localization(__file__, 1972, 35), getitem___83653, v_83651)
    
    # Obtaining the member '__getitem__' of a type (line 1972)
    getitem___83655 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1972, 35), subscript_call_result_83654, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1972)
    subscript_call_result_83656 = invoke(stypy.reporting.localization.Localization(__file__, 1972, 35), getitem___83655, str_83650)
    
    # Applying the binary operator 'and' (line 1972)
    result_and_keyword_83657 = python_operator(stypy.reporting.localization.Localization(__file__, 1972, 11), 'and', result_contains_83649, subscript_call_result_83656)
    
    # Testing the type of an if condition (line 1972)
    if_condition_83658 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1972, 8), result_and_keyword_83657)
    # Assigning a type to the variable 'if_condition_83658' (line 1972)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1972, 8), 'if_condition_83658', if_condition_83658)
    # SSA begins for if statement (line 1972)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1973)
    # Processing the call arguments (line 1973)
    # Getting the type of 'v' (line 1973)
    v_83661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1973, 23), 'v', False)
    # Processing the call keyword arguments (line 1973)
    kwargs_83662 = {}
    # Getting the type of 'dep' (line 1973)
    dep_83659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1973, 12), 'dep', False)
    # Obtaining the member 'append' of a type (line 1973)
    append_83660 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1973, 12), dep_83659, 'append')
    # Calling append(args, kwargs) (line 1973)
    append_call_result_83663 = invoke(stypy.reporting.localization.Localization(__file__, 1973, 12), append_83660, *[v_83661], **kwargs_83662)
    
    # SSA branch for the else part of an if statement (line 1972)
    module_type_store.open_ssa_branch('else')
    
    # Call to append(...): (line 1975)
    # Processing the call arguments (line 1975)
    # Getting the type of 'v' (line 1975)
    v_83666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1975, 25), 'v', False)
    # Processing the call keyword arguments (line 1975)
    kwargs_83667 = {}
    # Getting the type of 'indep' (line 1975)
    indep_83664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1975, 12), 'indep', False)
    # Obtaining the member 'append' of a type (line 1975)
    append_83665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1975, 12), indep_83664, 'append')
    # Calling append(args, kwargs) (line 1975)
    append_call_result_83668 = invoke(stypy.reporting.localization.Localization(__file__, 1975, 12), append_83665, *[v_83666], **kwargs_83667)
    
    # SSA join for if statement (line 1972)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1976):
    
    # Assigning a Call to a Name (line 1976):
    
    # Call to len(...): (line 1976)
    # Processing the call arguments (line 1976)
    # Getting the type of 'dep' (line 1976)
    dep_83670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1976, 12), 'dep', False)
    # Processing the call keyword arguments (line 1976)
    kwargs_83671 = {}
    # Getting the type of 'len' (line 1976)
    len_83669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1976, 8), 'len', False)
    # Calling len(args, kwargs) (line 1976)
    len_call_result_83672 = invoke(stypy.reporting.localization.Localization(__file__, 1976, 8), len_83669, *[dep_83670], **kwargs_83671)
    
    # Assigning a type to the variable 'n' (line 1976)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1976, 4), 'n', len_call_result_83672)
    
    # Assigning a Num to a Name (line 1977):
    
    # Assigning a Num to a Name (line 1977):
    int_83673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1977, 8), 'int')
    # Assigning a type to the variable 'i' (line 1977)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1977, 4), 'i', int_83673)
    
    # Getting the type of 'dep' (line 1978)
    dep_83674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1978, 10), 'dep')
    # Testing the type of an if condition (line 1978)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1978, 4), dep_83674)
    # SSA begins for while statement (line 1978)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    # Assigning a Subscript to a Name (line 1979):
    
    # Assigning a Subscript to a Name (line 1979):
    
    # Obtaining the type of the subscript
    int_83675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1979, 16), 'int')
    # Getting the type of 'dep' (line 1979)
    dep_83676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1979, 12), 'dep')
    # Obtaining the member '__getitem__' of a type (line 1979)
    getitem___83677 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1979, 12), dep_83676, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1979)
    subscript_call_result_83678 = invoke(stypy.reporting.localization.Localization(__file__, 1979, 12), getitem___83677, int_83675)
    
    # Assigning a type to the variable 'v' (line 1979)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1979, 8), 'v', subscript_call_result_83678)
    
    # Assigning a Num to a Name (line 1980):
    
    # Assigning a Num to a Name (line 1980):
    int_83679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1980, 13), 'int')
    # Assigning a type to the variable 'fl' (line 1980)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1980, 8), 'fl', int_83679)
    
    
    # Obtaining the type of the subscript
    int_83680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1981, 21), 'int')
    slice_83681 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1981, 17), int_83680, None, None)
    # Getting the type of 'dep' (line 1981)
    dep_83682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1981, 17), 'dep')
    # Obtaining the member '__getitem__' of a type (line 1981)
    getitem___83683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1981, 17), dep_83682, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1981)
    subscript_call_result_83684 = invoke(stypy.reporting.localization.Localization(__file__, 1981, 17), getitem___83683, slice_83681)
    
    # Testing the type of a for loop iterable (line 1981)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1981, 8), subscript_call_result_83684)
    # Getting the type of the for loop variable (line 1981)
    for_loop_var_83685 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1981, 8), subscript_call_result_83684)
    # Assigning a type to the variable 'w' (line 1981)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1981, 8), 'w', for_loop_var_83685)
    # SSA begins for a for statement (line 1981)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'w' (line 1982)
    w_83686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1982, 15), 'w')
    
    # Obtaining the type of the subscript
    str_83687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1982, 28), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'v' (line 1982)
    v_83688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1982, 25), 'v')
    # Getting the type of 'vars' (line 1982)
    vars_83689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1982, 20), 'vars')
    # Obtaining the member '__getitem__' of a type (line 1982)
    getitem___83690 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1982, 20), vars_83689, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1982)
    subscript_call_result_83691 = invoke(stypy.reporting.localization.Localization(__file__, 1982, 20), getitem___83690, v_83688)
    
    # Obtaining the member '__getitem__' of a type (line 1982)
    getitem___83692 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1982, 20), subscript_call_result_83691, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1982)
    subscript_call_result_83693 = invoke(stypy.reporting.localization.Localization(__file__, 1982, 20), getitem___83692, str_83687)
    
    # Applying the binary operator 'in' (line 1982)
    result_contains_83694 = python_operator(stypy.reporting.localization.Localization(__file__, 1982, 15), 'in', w_83686, subscript_call_result_83693)
    
    # Testing the type of an if condition (line 1982)
    if_condition_83695 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1982, 12), result_contains_83694)
    # Assigning a type to the variable 'if_condition_83695' (line 1982)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1982, 12), 'if_condition_83695', if_condition_83695)
    # SSA begins for if statement (line 1982)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 1983):
    
    # Assigning a Num to a Name (line 1983):
    int_83696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1983, 21), 'int')
    # Assigning a type to the variable 'fl' (line 1983)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1983, 16), 'fl', int_83696)
    # SSA join for if statement (line 1982)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'fl' (line 1985)
    fl_83697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1985, 11), 'fl')
    # Testing the type of an if condition (line 1985)
    if_condition_83698 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1985, 8), fl_83697)
    # Assigning a type to the variable 'if_condition_83698' (line 1985)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1985, 8), 'if_condition_83698', if_condition_83698)
    # SSA begins for if statement (line 1985)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1986):
    
    # Assigning a BinOp to a Name (line 1986):
    
    # Obtaining the type of the subscript
    int_83699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1986, 22), 'int')
    slice_83700 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1986, 18), int_83699, None, None)
    # Getting the type of 'dep' (line 1986)
    dep_83701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1986, 18), 'dep')
    # Obtaining the member '__getitem__' of a type (line 1986)
    getitem___83702 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1986, 18), dep_83701, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1986)
    subscript_call_result_83703 = invoke(stypy.reporting.localization.Localization(__file__, 1986, 18), getitem___83702, slice_83700)
    
    
    # Obtaining an instance of the builtin type 'list' (line 1986)
    list_83704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1986, 28), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1986)
    # Adding element type (line 1986)
    # Getting the type of 'v' (line 1986)
    v_83705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1986, 29), 'v')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1986, 28), list_83704, v_83705)
    
    # Applying the binary operator '+' (line 1986)
    result_add_83706 = python_operator(stypy.reporting.localization.Localization(__file__, 1986, 18), '+', subscript_call_result_83703, list_83704)
    
    # Assigning a type to the variable 'dep' (line 1986)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1986, 12), 'dep', result_add_83706)
    
    # Assigning a BinOp to a Name (line 1987):
    
    # Assigning a BinOp to a Name (line 1987):
    # Getting the type of 'i' (line 1987)
    i_83707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1987, 16), 'i')
    int_83708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1987, 20), 'int')
    # Applying the binary operator '+' (line 1987)
    result_add_83709 = python_operator(stypy.reporting.localization.Localization(__file__, 1987, 16), '+', i_83707, int_83708)
    
    # Assigning a type to the variable 'i' (line 1987)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1987, 12), 'i', result_add_83709)
    
    
    # Getting the type of 'i' (line 1988)
    i_83710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1988, 15), 'i')
    # Getting the type of 'n' (line 1988)
    n_83711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1988, 19), 'n')
    # Applying the binary operator '>' (line 1988)
    result_gt_83712 = python_operator(stypy.reporting.localization.Localization(__file__, 1988, 15), '>', i_83710, n_83711)
    
    # Testing the type of an if condition (line 1988)
    if_condition_83713 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1988, 12), result_gt_83712)
    # Assigning a type to the variable 'if_condition_83713' (line 1988)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1988, 12), 'if_condition_83713', if_condition_83713)
    # SSA begins for if statement (line 1988)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to errmess(...): (line 1989)
    # Processing the call arguments (line 1989)
    str_83715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1989, 24), 'str', 'sortvarnames: failed to compute dependencies because of cyclic dependencies between ')
    
    # Call to join(...): (line 1991)
    # Processing the call arguments (line 1991)
    # Getting the type of 'dep' (line 1991)
    dep_83718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1991, 36), 'dep', False)
    # Processing the call keyword arguments (line 1991)
    kwargs_83719 = {}
    str_83716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1991, 26), 'str', ', ')
    # Obtaining the member 'join' of a type (line 1991)
    join_83717 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1991, 26), str_83716, 'join')
    # Calling join(args, kwargs) (line 1991)
    join_call_result_83720 = invoke(stypy.reporting.localization.Localization(__file__, 1991, 26), join_83717, *[dep_83718], **kwargs_83719)
    
    # Applying the binary operator '+' (line 1989)
    result_add_83721 = python_operator(stypy.reporting.localization.Localization(__file__, 1989, 24), '+', str_83715, join_call_result_83720)
    
    str_83722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1991, 43), 'str', '\n')
    # Applying the binary operator '+' (line 1991)
    result_add_83723 = python_operator(stypy.reporting.localization.Localization(__file__, 1991, 41), '+', result_add_83721, str_83722)
    
    # Processing the call keyword arguments (line 1989)
    kwargs_83724 = {}
    # Getting the type of 'errmess' (line 1989)
    errmess_83714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1989, 16), 'errmess', False)
    # Calling errmess(args, kwargs) (line 1989)
    errmess_call_result_83725 = invoke(stypy.reporting.localization.Localization(__file__, 1989, 16), errmess_83714, *[result_add_83723], **kwargs_83724)
    
    
    # Assigning a BinOp to a Name (line 1992):
    
    # Assigning a BinOp to a Name (line 1992):
    # Getting the type of 'indep' (line 1992)
    indep_83726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1992, 24), 'indep')
    # Getting the type of 'dep' (line 1992)
    dep_83727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1992, 32), 'dep')
    # Applying the binary operator '+' (line 1992)
    result_add_83728 = python_operator(stypy.reporting.localization.Localization(__file__, 1992, 24), '+', indep_83726, dep_83727)
    
    # Assigning a type to the variable 'indep' (line 1992)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1992, 16), 'indep', result_add_83728)
    # SSA join for if statement (line 1988)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1985)
    module_type_store.open_ssa_branch('else')
    
    # Call to append(...): (line 1995)
    # Processing the call arguments (line 1995)
    # Getting the type of 'v' (line 1995)
    v_83731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1995, 25), 'v', False)
    # Processing the call keyword arguments (line 1995)
    kwargs_83732 = {}
    # Getting the type of 'indep' (line 1995)
    indep_83729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1995, 12), 'indep', False)
    # Obtaining the member 'append' of a type (line 1995)
    append_83730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1995, 12), indep_83729, 'append')
    # Calling append(args, kwargs) (line 1995)
    append_call_result_83733 = invoke(stypy.reporting.localization.Localization(__file__, 1995, 12), append_83730, *[v_83731], **kwargs_83732)
    
    
    # Assigning a Subscript to a Name (line 1996):
    
    # Assigning a Subscript to a Name (line 1996):
    
    # Obtaining the type of the subscript
    int_83734 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1996, 22), 'int')
    slice_83735 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1996, 18), int_83734, None, None)
    # Getting the type of 'dep' (line 1996)
    dep_83736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1996, 18), 'dep')
    # Obtaining the member '__getitem__' of a type (line 1996)
    getitem___83737 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1996, 18), dep_83736, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1996)
    subscript_call_result_83738 = invoke(stypy.reporting.localization.Localization(__file__, 1996, 18), getitem___83737, slice_83735)
    
    # Assigning a type to the variable 'dep' (line 1996)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1996, 12), 'dep', subscript_call_result_83738)
    
    # Assigning a Call to a Name (line 1997):
    
    # Assigning a Call to a Name (line 1997):
    
    # Call to len(...): (line 1997)
    # Processing the call arguments (line 1997)
    # Getting the type of 'dep' (line 1997)
    dep_83740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1997, 20), 'dep', False)
    # Processing the call keyword arguments (line 1997)
    kwargs_83741 = {}
    # Getting the type of 'len' (line 1997)
    len_83739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1997, 16), 'len', False)
    # Calling len(args, kwargs) (line 1997)
    len_call_result_83742 = invoke(stypy.reporting.localization.Localization(__file__, 1997, 16), len_83739, *[dep_83740], **kwargs_83741)
    
    # Assigning a type to the variable 'n' (line 1997)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1997, 12), 'n', len_call_result_83742)
    
    # Assigning a Num to a Name (line 1998):
    
    # Assigning a Num to a Name (line 1998):
    int_83743 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1998, 16), 'int')
    # Assigning a type to the variable 'i' (line 1998)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1998, 12), 'i', int_83743)
    # SSA join for if statement (line 1985)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for while statement (line 1978)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'indep' (line 1999)
    indep_83744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1999, 11), 'indep')
    # Assigning a type to the variable 'stypy_return_type' (line 1999)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1999, 4), 'stypy_return_type', indep_83744)
    
    # ################# End of 'sortvarnames(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'sortvarnames' in the type store
    # Getting the type of 'stypy_return_type' (line 1968)
    stypy_return_type_83745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1968, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_83745)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'sortvarnames'
    return stypy_return_type_83745

# Assigning a type to the variable 'sortvarnames' (line 1968)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1968, 0), 'sortvarnames', sortvarnames)

@norecursion
def analyzecommon(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'analyzecommon'
    module_type_store = module_type_store.open_function_context('analyzecommon', 2002, 0, False)
    
    # Passed parameters checking function
    analyzecommon.stypy_localization = localization
    analyzecommon.stypy_type_of_self = None
    analyzecommon.stypy_type_store = module_type_store
    analyzecommon.stypy_function_name = 'analyzecommon'
    analyzecommon.stypy_param_names_list = ['block']
    analyzecommon.stypy_varargs_param_name = None
    analyzecommon.stypy_kwargs_param_name = None
    analyzecommon.stypy_call_defaults = defaults
    analyzecommon.stypy_call_varargs = varargs
    analyzecommon.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'analyzecommon', ['block'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'analyzecommon', localization, ['block'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'analyzecommon(...)' code ##################

    
    
    
    # Call to hascommon(...): (line 2003)
    # Processing the call arguments (line 2003)
    # Getting the type of 'block' (line 2003)
    block_83747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2003, 21), 'block', False)
    # Processing the call keyword arguments (line 2003)
    kwargs_83748 = {}
    # Getting the type of 'hascommon' (line 2003)
    hascommon_83746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2003, 11), 'hascommon', False)
    # Calling hascommon(args, kwargs) (line 2003)
    hascommon_call_result_83749 = invoke(stypy.reporting.localization.Localization(__file__, 2003, 11), hascommon_83746, *[block_83747], **kwargs_83748)
    
    # Applying the 'not' unary operator (line 2003)
    result_not__83750 = python_operator(stypy.reporting.localization.Localization(__file__, 2003, 7), 'not', hascommon_call_result_83749)
    
    # Testing the type of an if condition (line 2003)
    if_condition_83751 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2003, 4), result_not__83750)
    # Assigning a type to the variable 'if_condition_83751' (line 2003)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2003, 4), 'if_condition_83751', if_condition_83751)
    # SSA begins for if statement (line 2003)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'block' (line 2004)
    block_83752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2004, 15), 'block')
    # Assigning a type to the variable 'stypy_return_type' (line 2004)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2004, 8), 'stypy_return_type', block_83752)
    # SSA join for if statement (line 2003)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a List to a Name (line 2005):
    
    # Assigning a List to a Name (line 2005):
    
    # Obtaining an instance of the builtin type 'list' (line 2005)
    list_83753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2005, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2005)
    
    # Assigning a type to the variable 'commonvars' (line 2005)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2005, 4), 'commonvars', list_83753)
    
    
    # Call to list(...): (line 2006)
    # Processing the call arguments (line 2006)
    
    # Call to keys(...): (line 2006)
    # Processing the call keyword arguments (line 2006)
    kwargs_83760 = {}
    
    # Obtaining the type of the subscript
    str_83755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2006, 24), 'str', 'common')
    # Getting the type of 'block' (line 2006)
    block_83756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2006, 18), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2006)
    getitem___83757 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2006, 18), block_83756, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2006)
    subscript_call_result_83758 = invoke(stypy.reporting.localization.Localization(__file__, 2006, 18), getitem___83757, str_83755)
    
    # Obtaining the member 'keys' of a type (line 2006)
    keys_83759 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2006, 18), subscript_call_result_83758, 'keys')
    # Calling keys(args, kwargs) (line 2006)
    keys_call_result_83761 = invoke(stypy.reporting.localization.Localization(__file__, 2006, 18), keys_83759, *[], **kwargs_83760)
    
    # Processing the call keyword arguments (line 2006)
    kwargs_83762 = {}
    # Getting the type of 'list' (line 2006)
    list_83754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2006, 13), 'list', False)
    # Calling list(args, kwargs) (line 2006)
    list_call_result_83763 = invoke(stypy.reporting.localization.Localization(__file__, 2006, 13), list_83754, *[keys_call_result_83761], **kwargs_83762)
    
    # Testing the type of a for loop iterable (line 2006)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2006, 4), list_call_result_83763)
    # Getting the type of the for loop variable (line 2006)
    for_loop_var_83764 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2006, 4), list_call_result_83763)
    # Assigning a type to the variable 'k' (line 2006)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2006, 4), 'k', for_loop_var_83764)
    # SSA begins for a for statement (line 2006)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a List to a Name (line 2007):
    
    # Assigning a List to a Name (line 2007):
    
    # Obtaining an instance of the builtin type 'list' (line 2007)
    list_83765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2007, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2007)
    
    # Assigning a type to the variable 'comvars' (line 2007)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2007, 8), 'comvars', list_83765)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 2008)
    k_83766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2008, 33), 'k')
    
    # Obtaining the type of the subscript
    str_83767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2008, 23), 'str', 'common')
    # Getting the type of 'block' (line 2008)
    block_83768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2008, 17), 'block')
    # Obtaining the member '__getitem__' of a type (line 2008)
    getitem___83769 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2008, 17), block_83768, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2008)
    subscript_call_result_83770 = invoke(stypy.reporting.localization.Localization(__file__, 2008, 17), getitem___83769, str_83767)
    
    # Obtaining the member '__getitem__' of a type (line 2008)
    getitem___83771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2008, 17), subscript_call_result_83770, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2008)
    subscript_call_result_83772 = invoke(stypy.reporting.localization.Localization(__file__, 2008, 17), getitem___83771, k_83766)
    
    # Testing the type of a for loop iterable (line 2008)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2008, 8), subscript_call_result_83772)
    # Getting the type of the for loop variable (line 2008)
    for_loop_var_83773 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2008, 8), subscript_call_result_83772)
    # Assigning a type to the variable 'e' (line 2008)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2008, 8), 'e', for_loop_var_83773)
    # SSA begins for a for statement (line 2008)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 2009):
    
    # Assigning a Call to a Name (line 2009):
    
    # Call to match(...): (line 2009)
    # Processing the call arguments (line 2009)
    str_83776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2010, 16), 'str', '\\A\\s*\\b(?P<name>.*?)\\b\\s*(\\((?P<dims>.*?)\\)|)\\s*\\Z')
    # Getting the type of 'e' (line 2010)
    e_83777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2010, 71), 'e', False)
    # Getting the type of 're' (line 2010)
    re_83778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2010, 74), 're', False)
    # Obtaining the member 'I' of a type (line 2010)
    I_83779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2010, 74), re_83778, 'I')
    # Processing the call keyword arguments (line 2009)
    kwargs_83780 = {}
    # Getting the type of 're' (line 2009)
    re_83774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2009, 16), 're', False)
    # Obtaining the member 'match' of a type (line 2009)
    match_83775 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2009, 16), re_83774, 'match')
    # Calling match(args, kwargs) (line 2009)
    match_call_result_83781 = invoke(stypy.reporting.localization.Localization(__file__, 2009, 16), match_83775, *[str_83776, e_83777, I_83779], **kwargs_83780)
    
    # Assigning a type to the variable 'm' (line 2009)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2009, 12), 'm', match_call_result_83781)
    
    # Getting the type of 'm' (line 2011)
    m_83782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2011, 15), 'm')
    # Testing the type of an if condition (line 2011)
    if_condition_83783 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2011, 12), m_83782)
    # Assigning a type to the variable 'if_condition_83783' (line 2011)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2011, 12), 'if_condition_83783', if_condition_83783)
    # SSA begins for if statement (line 2011)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Name (line 2012):
    
    # Assigning a List to a Name (line 2012):
    
    # Obtaining an instance of the builtin type 'list' (line 2012)
    list_83784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2012, 23), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2012)
    
    # Assigning a type to the variable 'dims' (line 2012)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2012, 16), 'dims', list_83784)
    
    
    # Call to group(...): (line 2013)
    # Processing the call arguments (line 2013)
    str_83787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2013, 27), 'str', 'dims')
    # Processing the call keyword arguments (line 2013)
    kwargs_83788 = {}
    # Getting the type of 'm' (line 2013)
    m_83785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2013, 19), 'm', False)
    # Obtaining the member 'group' of a type (line 2013)
    group_83786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2013, 19), m_83785, 'group')
    # Calling group(args, kwargs) (line 2013)
    group_call_result_83789 = invoke(stypy.reporting.localization.Localization(__file__, 2013, 19), group_83786, *[str_83787], **kwargs_83788)
    
    # Testing the type of an if condition (line 2013)
    if_condition_83790 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2013, 16), group_call_result_83789)
    # Assigning a type to the variable 'if_condition_83790' (line 2013)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2013, 16), 'if_condition_83790', if_condition_83790)
    # SSA begins for if statement (line 2013)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a ListComp to a Name (line 2014):
    
    # Assigning a ListComp to a Name (line 2014):
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to split(...): (line 2015)
    # Processing the call arguments (line 2015)
    str_83804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2015, 75), 'str', '@,@')
    # Processing the call keyword arguments (line 2015)
    kwargs_83805 = {}
    
    # Call to markoutercomma(...): (line 2015)
    # Processing the call arguments (line 2015)
    
    # Call to group(...): (line 2015)
    # Processing the call arguments (line 2015)
    str_83798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2015, 60), 'str', 'dims')
    # Processing the call keyword arguments (line 2015)
    kwargs_83799 = {}
    # Getting the type of 'm' (line 2015)
    m_83796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2015, 52), 'm', False)
    # Obtaining the member 'group' of a type (line 2015)
    group_83797 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2015, 52), m_83796, 'group')
    # Calling group(args, kwargs) (line 2015)
    group_call_result_83800 = invoke(stypy.reporting.localization.Localization(__file__, 2015, 52), group_83797, *[str_83798], **kwargs_83799)
    
    # Processing the call keyword arguments (line 2015)
    kwargs_83801 = {}
    # Getting the type of 'markoutercomma' (line 2015)
    markoutercomma_83795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2015, 37), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 2015)
    markoutercomma_call_result_83802 = invoke(stypy.reporting.localization.Localization(__file__, 2015, 37), markoutercomma_83795, *[group_call_result_83800], **kwargs_83801)
    
    # Obtaining the member 'split' of a type (line 2015)
    split_83803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2015, 37), markoutercomma_call_result_83802, 'split')
    # Calling split(args, kwargs) (line 2015)
    split_call_result_83806 = invoke(stypy.reporting.localization.Localization(__file__, 2015, 37), split_83803, *[str_83804], **kwargs_83805)
    
    comprehension_83807 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2014, 28), split_call_result_83806)
    # Assigning a type to the variable 'x' (line 2014)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2014, 28), 'x', comprehension_83807)
    
    # Call to strip(...): (line 2014)
    # Processing the call keyword arguments (line 2014)
    kwargs_83793 = {}
    # Getting the type of 'x' (line 2014)
    x_83791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2014, 28), 'x', False)
    # Obtaining the member 'strip' of a type (line 2014)
    strip_83792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2014, 28), x_83791, 'strip')
    # Calling strip(args, kwargs) (line 2014)
    strip_call_result_83794 = invoke(stypy.reporting.localization.Localization(__file__, 2014, 28), strip_83792, *[], **kwargs_83793)
    
    list_83808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2014, 28), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2014, 28), list_83808, strip_call_result_83794)
    # Assigning a type to the variable 'dims' (line 2014)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2014, 20), 'dims', list_83808)
    # SSA join for if statement (line 2013)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2016):
    
    # Assigning a Call to a Name (line 2016):
    
    # Call to strip(...): (line 2016)
    # Processing the call keyword arguments (line 2016)
    kwargs_83815 = {}
    
    # Call to group(...): (line 2016)
    # Processing the call arguments (line 2016)
    str_83811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2016, 28), 'str', 'name')
    # Processing the call keyword arguments (line 2016)
    kwargs_83812 = {}
    # Getting the type of 'm' (line 2016)
    m_83809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2016, 20), 'm', False)
    # Obtaining the member 'group' of a type (line 2016)
    group_83810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2016, 20), m_83809, 'group')
    # Calling group(args, kwargs) (line 2016)
    group_call_result_83813 = invoke(stypy.reporting.localization.Localization(__file__, 2016, 20), group_83810, *[str_83811], **kwargs_83812)
    
    # Obtaining the member 'strip' of a type (line 2016)
    strip_83814 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2016, 20), group_call_result_83813, 'strip')
    # Calling strip(args, kwargs) (line 2016)
    strip_call_result_83816 = invoke(stypy.reporting.localization.Localization(__file__, 2016, 20), strip_83814, *[], **kwargs_83815)
    
    # Assigning a type to the variable 'n' (line 2016)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2016, 16), 'n', strip_call_result_83816)
    
    
    # Getting the type of 'n' (line 2017)
    n_83817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2017, 19), 'n')
    
    # Obtaining the type of the subscript
    str_83818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2017, 30), 'str', 'vars')
    # Getting the type of 'block' (line 2017)
    block_83819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2017, 24), 'block')
    # Obtaining the member '__getitem__' of a type (line 2017)
    getitem___83820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2017, 24), block_83819, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2017)
    subscript_call_result_83821 = invoke(stypy.reporting.localization.Localization(__file__, 2017, 24), getitem___83820, str_83818)
    
    # Applying the binary operator 'in' (line 2017)
    result_contains_83822 = python_operator(stypy.reporting.localization.Localization(__file__, 2017, 19), 'in', n_83817, subscript_call_result_83821)
    
    # Testing the type of an if condition (line 2017)
    if_condition_83823 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2017, 16), result_contains_83822)
    # Assigning a type to the variable 'if_condition_83823' (line 2017)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2017, 16), 'if_condition_83823', if_condition_83823)
    # SSA begins for if statement (line 2017)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    str_83824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2018, 23), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2018)
    n_83825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2018, 51), 'n')
    
    # Obtaining the type of the subscript
    str_83826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2018, 43), 'str', 'vars')
    # Getting the type of 'block' (line 2018)
    block_83827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2018, 37), 'block')
    # Obtaining the member '__getitem__' of a type (line 2018)
    getitem___83828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2018, 37), block_83827, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2018)
    subscript_call_result_83829 = invoke(stypy.reporting.localization.Localization(__file__, 2018, 37), getitem___83828, str_83826)
    
    # Obtaining the member '__getitem__' of a type (line 2018)
    getitem___83830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2018, 37), subscript_call_result_83829, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2018)
    subscript_call_result_83831 = invoke(stypy.reporting.localization.Localization(__file__, 2018, 37), getitem___83830, n_83825)
    
    # Applying the binary operator 'in' (line 2018)
    result_contains_83832 = python_operator(stypy.reporting.localization.Localization(__file__, 2018, 23), 'in', str_83824, subscript_call_result_83831)
    
    # Testing the type of an if condition (line 2018)
    if_condition_83833 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2018, 20), result_contains_83832)
    # Assigning a type to the variable 'if_condition_83833' (line 2018)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2018, 20), 'if_condition_83833', if_condition_83833)
    # SSA begins for if statement (line 2018)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2019)
    # Processing the call arguments (line 2019)
    str_83845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2020, 28), 'str', 'dimension(%s)')
    
    # Call to join(...): (line 2020)
    # Processing the call arguments (line 2020)
    # Getting the type of 'dims' (line 2020)
    dims_83848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2020, 56), 'dims', False)
    # Processing the call keyword arguments (line 2020)
    kwargs_83849 = {}
    str_83846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2020, 47), 'str', ',')
    # Obtaining the member 'join' of a type (line 2020)
    join_83847 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2020, 47), str_83846, 'join')
    # Calling join(args, kwargs) (line 2020)
    join_call_result_83850 = invoke(stypy.reporting.localization.Localization(__file__, 2020, 47), join_83847, *[dims_83848], **kwargs_83849)
    
    # Applying the binary operator '%' (line 2020)
    result_mod_83851 = python_operator(stypy.reporting.localization.Localization(__file__, 2020, 28), '%', str_83845, join_call_result_83850)
    
    # Processing the call keyword arguments (line 2019)
    kwargs_83852 = {}
    
    # Obtaining the type of the subscript
    str_83834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2019, 41), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2019)
    n_83835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2019, 38), 'n', False)
    
    # Obtaining the type of the subscript
    str_83836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2019, 30), 'str', 'vars')
    # Getting the type of 'block' (line 2019)
    block_83837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2019, 24), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2019)
    getitem___83838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2019, 24), block_83837, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2019)
    subscript_call_result_83839 = invoke(stypy.reporting.localization.Localization(__file__, 2019, 24), getitem___83838, str_83836)
    
    # Obtaining the member '__getitem__' of a type (line 2019)
    getitem___83840 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2019, 24), subscript_call_result_83839, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2019)
    subscript_call_result_83841 = invoke(stypy.reporting.localization.Localization(__file__, 2019, 24), getitem___83840, n_83835)
    
    # Obtaining the member '__getitem__' of a type (line 2019)
    getitem___83842 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2019, 24), subscript_call_result_83841, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2019)
    subscript_call_result_83843 = invoke(stypy.reporting.localization.Localization(__file__, 2019, 24), getitem___83842, str_83834)
    
    # Obtaining the member 'append' of a type (line 2019)
    append_83844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2019, 24), subscript_call_result_83843, 'append')
    # Calling append(args, kwargs) (line 2019)
    append_call_result_83853 = invoke(stypy.reporting.localization.Localization(__file__, 2019, 24), append_83844, *[result_mod_83851], **kwargs_83852)
    
    # SSA branch for the else part of an if statement (line 2018)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a List to a Subscript (line 2022):
    
    # Assigning a List to a Subscript (line 2022):
    
    # Obtaining an instance of the builtin type 'list' (line 2022)
    list_83854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2022, 55), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2022)
    # Adding element type (line 2022)
    str_83855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2023, 28), 'str', 'dimension(%s)')
    
    # Call to join(...): (line 2023)
    # Processing the call arguments (line 2023)
    # Getting the type of 'dims' (line 2023)
    dims_83858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2023, 56), 'dims', False)
    # Processing the call keyword arguments (line 2023)
    kwargs_83859 = {}
    str_83856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2023, 47), 'str', ',')
    # Obtaining the member 'join' of a type (line 2023)
    join_83857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2023, 47), str_83856, 'join')
    # Calling join(args, kwargs) (line 2023)
    join_call_result_83860 = invoke(stypy.reporting.localization.Localization(__file__, 2023, 47), join_83857, *[dims_83858], **kwargs_83859)
    
    # Applying the binary operator '%' (line 2023)
    result_mod_83861 = python_operator(stypy.reporting.localization.Localization(__file__, 2023, 28), '%', str_83855, join_call_result_83860)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2022, 55), list_83854, result_mod_83861)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2022)
    n_83862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2022, 38), 'n')
    
    # Obtaining the type of the subscript
    str_83863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2022, 30), 'str', 'vars')
    # Getting the type of 'block' (line 2022)
    block_83864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2022, 24), 'block')
    # Obtaining the member '__getitem__' of a type (line 2022)
    getitem___83865 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2022, 24), block_83864, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2022)
    subscript_call_result_83866 = invoke(stypy.reporting.localization.Localization(__file__, 2022, 24), getitem___83865, str_83863)
    
    # Obtaining the member '__getitem__' of a type (line 2022)
    getitem___83867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2022, 24), subscript_call_result_83866, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2022)
    subscript_call_result_83868 = invoke(stypy.reporting.localization.Localization(__file__, 2022, 24), getitem___83867, n_83862)
    
    str_83869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2022, 41), 'str', 'attrspec')
    # Storing an element on a container (line 2022)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2022, 24), subscript_call_result_83868, (str_83869, list_83854))
    # SSA join for if statement (line 2018)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 2017)
    module_type_store.open_ssa_branch('else')
    
    # Getting the type of 'dims' (line 2025)
    dims_83870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2025, 23), 'dims')
    # Testing the type of an if condition (line 2025)
    if_condition_83871 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2025, 20), dims_83870)
    # Assigning a type to the variable 'if_condition_83871' (line 2025)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2025, 20), 'if_condition_83871', if_condition_83871)
    # SSA begins for if statement (line 2025)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Dict to a Subscript (line 2026):
    
    # Assigning a Dict to a Subscript (line 2026):
    
    # Obtaining an instance of the builtin type 'dict' (line 2026)
    dict_83872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2026, 43), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2026)
    # Adding element type (key, value) (line 2026)
    str_83873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2027, 28), 'str', 'attrspec')
    
    # Obtaining an instance of the builtin type 'list' (line 2027)
    list_83874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2027, 40), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2027)
    # Adding element type (line 2027)
    str_83875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2027, 41), 'str', 'dimension(%s)')
    
    # Call to join(...): (line 2027)
    # Processing the call arguments (line 2027)
    # Getting the type of 'dims' (line 2027)
    dims_83878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2027, 69), 'dims', False)
    # Processing the call keyword arguments (line 2027)
    kwargs_83879 = {}
    str_83876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2027, 60), 'str', ',')
    # Obtaining the member 'join' of a type (line 2027)
    join_83877 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2027, 60), str_83876, 'join')
    # Calling join(args, kwargs) (line 2027)
    join_call_result_83880 = invoke(stypy.reporting.localization.Localization(__file__, 2027, 60), join_83877, *[dims_83878], **kwargs_83879)
    
    # Applying the binary operator '%' (line 2027)
    result_mod_83881 = python_operator(stypy.reporting.localization.Localization(__file__, 2027, 41), '%', str_83875, join_call_result_83880)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2027, 40), list_83874, result_mod_83881)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2026, 43), dict_83872, (str_83873, list_83874))
    
    
    # Obtaining the type of the subscript
    str_83882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2026, 30), 'str', 'vars')
    # Getting the type of 'block' (line 2026)
    block_83883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2026, 24), 'block')
    # Obtaining the member '__getitem__' of a type (line 2026)
    getitem___83884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2026, 24), block_83883, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2026)
    subscript_call_result_83885 = invoke(stypy.reporting.localization.Localization(__file__, 2026, 24), getitem___83884, str_83882)
    
    # Getting the type of 'n' (line 2026)
    n_83886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2026, 38), 'n')
    # Storing an element on a container (line 2026)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2026, 24), subscript_call_result_83885, (n_83886, dict_83872))
    # SSA branch for the else part of an if statement (line 2025)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Dict to a Subscript (line 2029):
    
    # Assigning a Dict to a Subscript (line 2029):
    
    # Obtaining an instance of the builtin type 'dict' (line 2029)
    dict_83887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2029, 43), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2029)
    
    
    # Obtaining the type of the subscript
    str_83888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2029, 30), 'str', 'vars')
    # Getting the type of 'block' (line 2029)
    block_83889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2029, 24), 'block')
    # Obtaining the member '__getitem__' of a type (line 2029)
    getitem___83890 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2029, 24), block_83889, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2029)
    subscript_call_result_83891 = invoke(stypy.reporting.localization.Localization(__file__, 2029, 24), getitem___83890, str_83888)
    
    # Getting the type of 'n' (line 2029)
    n_83892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2029, 38), 'n')
    # Storing an element on a container (line 2029)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2029, 24), subscript_call_result_83891, (n_83892, dict_83887))
    # SSA join for if statement (line 2025)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2017)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'n' (line 2030)
    n_83893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2030, 19), 'n')
    # Getting the type of 'commonvars' (line 2030)
    commonvars_83894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2030, 28), 'commonvars')
    # Applying the binary operator 'notin' (line 2030)
    result_contains_83895 = python_operator(stypy.reporting.localization.Localization(__file__, 2030, 19), 'notin', n_83893, commonvars_83894)
    
    # Testing the type of an if condition (line 2030)
    if_condition_83896 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2030, 16), result_contains_83895)
    # Assigning a type to the variable 'if_condition_83896' (line 2030)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2030, 16), 'if_condition_83896', if_condition_83896)
    # SSA begins for if statement (line 2030)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2031)
    # Processing the call arguments (line 2031)
    # Getting the type of 'n' (line 2031)
    n_83899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2031, 38), 'n', False)
    # Processing the call keyword arguments (line 2031)
    kwargs_83900 = {}
    # Getting the type of 'commonvars' (line 2031)
    commonvars_83897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2031, 20), 'commonvars', False)
    # Obtaining the member 'append' of a type (line 2031)
    append_83898 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2031, 20), commonvars_83897, 'append')
    # Calling append(args, kwargs) (line 2031)
    append_call_result_83901 = invoke(stypy.reporting.localization.Localization(__file__, 2031, 20), append_83898, *[n_83899], **kwargs_83900)
    
    # SSA join for if statement (line 2030)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 2011)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Name to a Name (line 2033):
    
    # Assigning a Name to a Name (line 2033):
    # Getting the type of 'e' (line 2033)
    e_83902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2033, 20), 'e')
    # Assigning a type to the variable 'n' (line 2033)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2033, 16), 'n', e_83902)
    
    # Call to errmess(...): (line 2034)
    # Processing the call arguments (line 2034)
    str_83904 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2035, 20), 'str', 'analyzecommon: failed to extract "<name>[(<dims>)]" from "%s" in common /%s/.\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2035)
    tuple_83905 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2035, 105), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2035)
    # Adding element type (line 2035)
    # Getting the type of 'e' (line 2035)
    e_83906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2035, 105), 'e', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2035, 105), tuple_83905, e_83906)
    # Adding element type (line 2035)
    # Getting the type of 'k' (line 2035)
    k_83907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2035, 108), 'k', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2035, 105), tuple_83905, k_83907)
    
    # Applying the binary operator '%' (line 2035)
    result_mod_83908 = python_operator(stypy.reporting.localization.Localization(__file__, 2035, 20), '%', str_83904, tuple_83905)
    
    # Processing the call keyword arguments (line 2034)
    kwargs_83909 = {}
    # Getting the type of 'errmess' (line 2034)
    errmess_83903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2034, 16), 'errmess', False)
    # Calling errmess(args, kwargs) (line 2034)
    errmess_call_result_83910 = invoke(stypy.reporting.localization.Localization(__file__, 2034, 16), errmess_83903, *[result_mod_83908], **kwargs_83909)
    
    # SSA join for if statement (line 2011)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 2036)
    # Processing the call arguments (line 2036)
    # Getting the type of 'n' (line 2036)
    n_83913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2036, 27), 'n', False)
    # Processing the call keyword arguments (line 2036)
    kwargs_83914 = {}
    # Getting the type of 'comvars' (line 2036)
    comvars_83911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2036, 12), 'comvars', False)
    # Obtaining the member 'append' of a type (line 2036)
    append_83912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2036, 12), comvars_83911, 'append')
    # Calling append(args, kwargs) (line 2036)
    append_call_result_83915 = invoke(stypy.reporting.localization.Localization(__file__, 2036, 12), append_83912, *[n_83913], **kwargs_83914)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 2037):
    
    # Assigning a Name to a Subscript (line 2037):
    # Getting the type of 'comvars' (line 2037)
    comvars_83916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2037, 29), 'comvars')
    
    # Obtaining the type of the subscript
    str_83917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2037, 14), 'str', 'common')
    # Getting the type of 'block' (line 2037)
    block_83918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2037, 8), 'block')
    # Obtaining the member '__getitem__' of a type (line 2037)
    getitem___83919 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2037, 8), block_83918, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2037)
    subscript_call_result_83920 = invoke(stypy.reporting.localization.Localization(__file__, 2037, 8), getitem___83919, str_83917)
    
    # Getting the type of 'k' (line 2037)
    k_83921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2037, 24), 'k')
    # Storing an element on a container (line 2037)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2037, 8), subscript_call_result_83920, (k_83921, comvars_83916))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_83922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2038, 7), 'str', 'commonvars')
    # Getting the type of 'block' (line 2038)
    block_83923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2038, 27), 'block')
    # Applying the binary operator 'notin' (line 2038)
    result_contains_83924 = python_operator(stypy.reporting.localization.Localization(__file__, 2038, 7), 'notin', str_83922, block_83923)
    
    # Testing the type of an if condition (line 2038)
    if_condition_83925 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2038, 4), result_contains_83924)
    # Assigning a type to the variable 'if_condition_83925' (line 2038)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2038, 4), 'if_condition_83925', if_condition_83925)
    # SSA begins for if statement (line 2038)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Subscript (line 2039):
    
    # Assigning a Name to a Subscript (line 2039):
    # Getting the type of 'commonvars' (line 2039)
    commonvars_83926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2039, 30), 'commonvars')
    # Getting the type of 'block' (line 2039)
    block_83927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2039, 8), 'block')
    str_83928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2039, 14), 'str', 'commonvars')
    # Storing an element on a container (line 2039)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2039, 8), block_83927, (str_83928, commonvars_83926))
    # SSA branch for the else part of an if statement (line 2038)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Subscript (line 2041):
    
    # Assigning a BinOp to a Subscript (line 2041):
    
    # Obtaining the type of the subscript
    str_83929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2041, 36), 'str', 'commonvars')
    # Getting the type of 'block' (line 2041)
    block_83930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2041, 30), 'block')
    # Obtaining the member '__getitem__' of a type (line 2041)
    getitem___83931 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2041, 30), block_83930, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2041)
    subscript_call_result_83932 = invoke(stypy.reporting.localization.Localization(__file__, 2041, 30), getitem___83931, str_83929)
    
    # Getting the type of 'commonvars' (line 2041)
    commonvars_83933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2041, 52), 'commonvars')
    # Applying the binary operator '+' (line 2041)
    result_add_83934 = python_operator(stypy.reporting.localization.Localization(__file__, 2041, 30), '+', subscript_call_result_83932, commonvars_83933)
    
    # Getting the type of 'block' (line 2041)
    block_83935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2041, 8), 'block')
    str_83936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2041, 14), 'str', 'commonvars')
    # Storing an element on a container (line 2041)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2041, 8), block_83935, (str_83936, result_add_83934))
    # SSA join for if statement (line 2038)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'block' (line 2042)
    block_83937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2042, 11), 'block')
    # Assigning a type to the variable 'stypy_return_type' (line 2042)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2042, 4), 'stypy_return_type', block_83937)
    
    # ################# End of 'analyzecommon(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'analyzecommon' in the type store
    # Getting the type of 'stypy_return_type' (line 2002)
    stypy_return_type_83938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_83938)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'analyzecommon'
    return stypy_return_type_83938

# Assigning a type to the variable 'analyzecommon' (line 2002)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2002, 0), 'analyzecommon', analyzecommon)

@norecursion
def analyzebody(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    str_83939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2045, 33), 'str', '')
    defaults = [str_83939]
    # Create a new context for function 'analyzebody'
    module_type_store = module_type_store.open_function_context('analyzebody', 2045, 0, False)
    
    # Passed parameters checking function
    analyzebody.stypy_localization = localization
    analyzebody.stypy_type_of_self = None
    analyzebody.stypy_type_store = module_type_store
    analyzebody.stypy_function_name = 'analyzebody'
    analyzebody.stypy_param_names_list = ['block', 'args', 'tab']
    analyzebody.stypy_varargs_param_name = None
    analyzebody.stypy_kwargs_param_name = None
    analyzebody.stypy_call_defaults = defaults
    analyzebody.stypy_call_varargs = varargs
    analyzebody.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'analyzebody', ['block', 'args', 'tab'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'analyzebody', localization, ['block', 'args', 'tab'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'analyzebody(...)' code ##################

    # Marking variables as global (line 2046)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 2046, 4), 'usermodules')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 2046, 4), 'skipfuncs')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 2046, 4), 'onlyfuncs')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 2046, 4), 'f90modulevars')
    
    # Call to setmesstext(...): (line 2048)
    # Processing the call arguments (line 2048)
    # Getting the type of 'block' (line 2048)
    block_83941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2048, 16), 'block', False)
    # Processing the call keyword arguments (line 2048)
    kwargs_83942 = {}
    # Getting the type of 'setmesstext' (line 2048)
    setmesstext_83940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2048, 4), 'setmesstext', False)
    # Calling setmesstext(args, kwargs) (line 2048)
    setmesstext_call_result_83943 = invoke(stypy.reporting.localization.Localization(__file__, 2048, 4), setmesstext_83940, *[block_83941], **kwargs_83942)
    
    
    # Assigning a List to a Name (line 2049):
    
    # Assigning a List to a Name (line 2049):
    
    # Obtaining an instance of the builtin type 'list' (line 2049)
    list_83944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2049, 11), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2049)
    
    # Assigning a type to the variable 'body' (line 2049)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2049, 4), 'body', list_83944)
    
    
    # Obtaining the type of the subscript
    str_83945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2050, 19), 'str', 'body')
    # Getting the type of 'block' (line 2050)
    block_83946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2050, 13), 'block')
    # Obtaining the member '__getitem__' of a type (line 2050)
    getitem___83947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2050, 13), block_83946, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2050)
    subscript_call_result_83948 = invoke(stypy.reporting.localization.Localization(__file__, 2050, 13), getitem___83947, str_83945)
    
    # Testing the type of a for loop iterable (line 2050)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2050, 4), subscript_call_result_83948)
    # Getting the type of the for loop variable (line 2050)
    for_loop_var_83949 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2050, 4), subscript_call_result_83948)
    # Assigning a type to the variable 'b' (line 2050)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2050, 4), 'b', for_loop_var_83949)
    # SSA begins for a for statement (line 2050)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Name to a Subscript (line 2051):
    
    # Assigning a Name to a Subscript (line 2051):
    # Getting the type of 'block' (line 2051)
    block_83950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2051, 28), 'block')
    # Getting the type of 'b' (line 2051)
    b_83951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2051, 8), 'b')
    str_83952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2051, 10), 'str', 'parent_block')
    # Storing an element on a container (line 2051)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2051, 8), b_83951, (str_83952, block_83950))
    
    
    
    # Obtaining the type of the subscript
    str_83953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2052, 13), 'str', 'block')
    # Getting the type of 'b' (line 2052)
    b_83954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2052, 11), 'b')
    # Obtaining the member '__getitem__' of a type (line 2052)
    getitem___83955 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2052, 11), b_83954, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2052)
    subscript_call_result_83956 = invoke(stypy.reporting.localization.Localization(__file__, 2052, 11), getitem___83955, str_83953)
    
    
    # Obtaining an instance of the builtin type 'list' (line 2052)
    list_83957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2052, 25), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2052)
    # Adding element type (line 2052)
    str_83958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2052, 26), 'str', 'function')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2052, 25), list_83957, str_83958)
    # Adding element type (line 2052)
    str_83959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2052, 38), 'str', 'subroutine')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2052, 25), list_83957, str_83959)
    
    # Applying the binary operator 'in' (line 2052)
    result_contains_83960 = python_operator(stypy.reporting.localization.Localization(__file__, 2052, 11), 'in', subscript_call_result_83956, list_83957)
    
    # Testing the type of an if condition (line 2052)
    if_condition_83961 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2052, 8), result_contains_83960)
    # Assigning a type to the variable 'if_condition_83961' (line 2052)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2052, 8), 'if_condition_83961', if_condition_83961)
    # SSA begins for if statement (line 2052)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'args' (line 2053)
    args_83962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2053, 15), 'args')
    # Getting the type of 'None' (line 2053)
    None_83963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2053, 27), 'None')
    # Applying the binary operator 'isnot' (line 2053)
    result_is_not_83964 = python_operator(stypy.reporting.localization.Localization(__file__, 2053, 15), 'isnot', args_83962, None_83963)
    
    
    
    # Obtaining the type of the subscript
    str_83965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2053, 38), 'str', 'name')
    # Getting the type of 'b' (line 2053)
    b_83966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2053, 36), 'b')
    # Obtaining the member '__getitem__' of a type (line 2053)
    getitem___83967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2053, 36), b_83966, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2053)
    subscript_call_result_83968 = invoke(stypy.reporting.localization.Localization(__file__, 2053, 36), getitem___83967, str_83965)
    
    # Getting the type of 'args' (line 2053)
    args_83969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2053, 53), 'args')
    # Applying the binary operator 'notin' (line 2053)
    result_contains_83970 = python_operator(stypy.reporting.localization.Localization(__file__, 2053, 36), 'notin', subscript_call_result_83968, args_83969)
    
    # Applying the binary operator 'and' (line 2053)
    result_and_keyword_83971 = python_operator(stypy.reporting.localization.Localization(__file__, 2053, 15), 'and', result_is_not_83964, result_contains_83970)
    
    # Testing the type of an if condition (line 2053)
    if_condition_83972 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2053, 12), result_and_keyword_83971)
    # Assigning a type to the variable 'if_condition_83972' (line 2053)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2053, 12), 'if_condition_83972', if_condition_83972)
    # SSA begins for if statement (line 2053)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA branch for the else part of an if statement (line 2053)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Subscript to a Name (line 2056):
    
    # Assigning a Subscript to a Name (line 2056):
    
    # Obtaining the type of the subscript
    str_83973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2056, 24), 'str', 'args')
    # Getting the type of 'b' (line 2056)
    b_83974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2056, 22), 'b')
    # Obtaining the member '__getitem__' of a type (line 2056)
    getitem___83975 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2056, 22), b_83974, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2056)
    subscript_call_result_83976 = invoke(stypy.reporting.localization.Localization(__file__, 2056, 22), getitem___83975, str_83973)
    
    # Assigning a type to the variable 'as_' (line 2056)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2056, 16), 'as_', subscript_call_result_83976)
    # SSA join for if statement (line 2053)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    str_83977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2057, 17), 'str', 'name')
    # Getting the type of 'b' (line 2057)
    b_83978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2057, 15), 'b')
    # Obtaining the member '__getitem__' of a type (line 2057)
    getitem___83979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2057, 15), b_83978, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2057)
    subscript_call_result_83980 = invoke(stypy.reporting.localization.Localization(__file__, 2057, 15), getitem___83979, str_83977)
    
    # Getting the type of 'skipfuncs' (line 2057)
    skipfuncs_83981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2057, 28), 'skipfuncs')
    # Applying the binary operator 'in' (line 2057)
    result_contains_83982 = python_operator(stypy.reporting.localization.Localization(__file__, 2057, 15), 'in', subscript_call_result_83980, skipfuncs_83981)
    
    # Testing the type of an if condition (line 2057)
    if_condition_83983 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2057, 12), result_contains_83982)
    # Assigning a type to the variable 'if_condition_83983' (line 2057)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2057, 12), 'if_condition_83983', if_condition_83983)
    # SSA begins for if statement (line 2057)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 2057)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    # Getting the type of 'onlyfuncs' (line 2059)
    onlyfuncs_83984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2059, 15), 'onlyfuncs')
    
    
    # Obtaining the type of the subscript
    str_83985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2059, 31), 'str', 'name')
    # Getting the type of 'b' (line 2059)
    b_83986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2059, 29), 'b')
    # Obtaining the member '__getitem__' of a type (line 2059)
    getitem___83987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2059, 29), b_83986, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2059)
    subscript_call_result_83988 = invoke(stypy.reporting.localization.Localization(__file__, 2059, 29), getitem___83987, str_83985)
    
    # Getting the type of 'onlyfuncs' (line 2059)
    onlyfuncs_83989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2059, 46), 'onlyfuncs')
    # Applying the binary operator 'notin' (line 2059)
    result_contains_83990 = python_operator(stypy.reporting.localization.Localization(__file__, 2059, 29), 'notin', subscript_call_result_83988, onlyfuncs_83989)
    
    # Applying the binary operator 'and' (line 2059)
    result_and_keyword_83991 = python_operator(stypy.reporting.localization.Localization(__file__, 2059, 15), 'and', onlyfuncs_83984, result_contains_83990)
    
    # Testing the type of an if condition (line 2059)
    if_condition_83992 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2059, 12), result_and_keyword_83991)
    # Assigning a type to the variable 'if_condition_83992' (line 2059)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2059, 12), 'if_condition_83992', if_condition_83992)
    # SSA begins for if statement (line 2059)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 2059)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Subscript (line 2061):
    
    # Assigning a Call to a Subscript (line 2061):
    
    # Call to crack2fortrangen(...): (line 2061)
    # Processing the call arguments (line 2061)
    # Getting the type of 'b' (line 2062)
    b_83994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2062, 16), 'b', False)
    str_83995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2062, 19), 'str', '\n')
    str_83996 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2062, 26), 'str', ' ')
    int_83997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2062, 32), 'int')
    # Applying the binary operator '*' (line 2062)
    result_mul_83998 = python_operator(stypy.reporting.localization.Localization(__file__, 2062, 26), '*', str_83996, int_83997)
    
    # Applying the binary operator '+' (line 2062)
    result_add_83999 = python_operator(stypy.reporting.localization.Localization(__file__, 2062, 19), '+', str_83995, result_mul_83998)
    
    # Processing the call keyword arguments (line 2061)
    # Getting the type of 'True' (line 2062)
    True_84000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2062, 48), 'True', False)
    keyword_84001 = True_84000
    kwargs_84002 = {'as_interface': keyword_84001}
    # Getting the type of 'crack2fortrangen' (line 2061)
    crack2fortrangen_83993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2061, 35), 'crack2fortrangen', False)
    # Calling crack2fortrangen(args, kwargs) (line 2061)
    crack2fortrangen_call_result_84003 = invoke(stypy.reporting.localization.Localization(__file__, 2061, 35), crack2fortrangen_83993, *[b_83994, result_add_83999], **kwargs_84002)
    
    # Getting the type of 'b' (line 2061)
    b_84004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2061, 12), 'b')
    str_84005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2061, 14), 'str', 'saved_interface')
    # Storing an element on a container (line 2061)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2061, 12), b_84004, (str_84005, crack2fortrangen_call_result_84003))
    # SSA branch for the else part of an if statement (line 2052)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Name to a Name (line 2065):
    
    # Assigning a Name to a Name (line 2065):
    # Getting the type of 'args' (line 2065)
    args_84006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2065, 18), 'args')
    # Assigning a type to the variable 'as_' (line 2065)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2065, 12), 'as_', args_84006)
    # SSA join for if statement (line 2052)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2066):
    
    # Assigning a Call to a Name (line 2066):
    
    # Call to postcrack(...): (line 2066)
    # Processing the call arguments (line 2066)
    # Getting the type of 'b' (line 2066)
    b_84008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2066, 22), 'b', False)
    # Getting the type of 'as_' (line 2066)
    as__84009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2066, 25), 'as_', False)
    # Processing the call keyword arguments (line 2066)
    # Getting the type of 'tab' (line 2066)
    tab_84010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2066, 34), 'tab', False)
    str_84011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2066, 40), 'str', '\t')
    # Applying the binary operator '+' (line 2066)
    result_add_84012 = python_operator(stypy.reporting.localization.Localization(__file__, 2066, 34), '+', tab_84010, str_84011)
    
    keyword_84013 = result_add_84012
    kwargs_84014 = {'tab': keyword_84013}
    # Getting the type of 'postcrack' (line 2066)
    postcrack_84007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2066, 12), 'postcrack', False)
    # Calling postcrack(args, kwargs) (line 2066)
    postcrack_call_result_84015 = invoke(stypy.reporting.localization.Localization(__file__, 2066, 12), postcrack_84007, *[b_84008, as__84009], **kwargs_84014)
    
    # Assigning a type to the variable 'b' (line 2066)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2066, 8), 'b', postcrack_call_result_84015)
    
    
    # Evaluating a boolean operation
    
    
    # Obtaining the type of the subscript
    str_84016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2067, 13), 'str', 'block')
    # Getting the type of 'b' (line 2067)
    b_84017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2067, 11), 'b')
    # Obtaining the member '__getitem__' of a type (line 2067)
    getitem___84018 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2067, 11), b_84017, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2067)
    subscript_call_result_84019 = invoke(stypy.reporting.localization.Localization(__file__, 2067, 11), getitem___84018, str_84016)
    
    str_84020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2067, 25), 'str', 'interface')
    # Applying the binary operator '==' (line 2067)
    result_eq_84021 = python_operator(stypy.reporting.localization.Localization(__file__, 2067, 11), '==', subscript_call_result_84019, str_84020)
    
    
    
    # Obtaining the type of the subscript
    str_84022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2067, 47), 'str', 'body')
    # Getting the type of 'b' (line 2067)
    b_84023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2067, 45), 'b')
    # Obtaining the member '__getitem__' of a type (line 2067)
    getitem___84024 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2067, 45), b_84023, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2067)
    subscript_call_result_84025 = invoke(stypy.reporting.localization.Localization(__file__, 2067, 45), getitem___84024, str_84022)
    
    # Applying the 'not' unary operator (line 2067)
    result_not__84026 = python_operator(stypy.reporting.localization.Localization(__file__, 2067, 41), 'not', subscript_call_result_84025)
    
    # Applying the binary operator 'and' (line 2067)
    result_and_keyword_84027 = python_operator(stypy.reporting.localization.Localization(__file__, 2067, 11), 'and', result_eq_84021, result_not__84026)
    
    # Testing the type of an if condition (line 2067)
    if_condition_84028 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2067, 8), result_and_keyword_84027)
    # Assigning a type to the variable 'if_condition_84028' (line 2067)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2067, 8), 'if_condition_84028', if_condition_84028)
    # SSA begins for if statement (line 2067)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    str_84029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2068, 15), 'str', 'f2pyenhancements')
    # Getting the type of 'b' (line 2068)
    b_84030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2068, 41), 'b')
    # Applying the binary operator 'notin' (line 2068)
    result_contains_84031 = python_operator(stypy.reporting.localization.Localization(__file__, 2068, 15), 'notin', str_84029, b_84030)
    
    # Testing the type of an if condition (line 2068)
    if_condition_84032 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2068, 12), result_contains_84031)
    # Assigning a type to the variable 'if_condition_84032' (line 2068)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2068, 12), 'if_condition_84032', if_condition_84032)
    # SSA begins for if statement (line 2068)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 2068)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2067)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Call to replace(...): (line 2070)
    # Processing the call arguments (line 2070)
    str_84038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2070, 30), 'str', ' ')
    str_84039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2070, 35), 'str', '')
    # Processing the call keyword arguments (line 2070)
    kwargs_84040 = {}
    
    # Obtaining the type of the subscript
    str_84033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2070, 13), 'str', 'block')
    # Getting the type of 'b' (line 2070)
    b_84034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2070, 11), 'b', False)
    # Obtaining the member '__getitem__' of a type (line 2070)
    getitem___84035 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2070, 11), b_84034, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2070)
    subscript_call_result_84036 = invoke(stypy.reporting.localization.Localization(__file__, 2070, 11), getitem___84035, str_84033)
    
    # Obtaining the member 'replace' of a type (line 2070)
    replace_84037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2070, 11), subscript_call_result_84036, 'replace')
    # Calling replace(args, kwargs) (line 2070)
    replace_call_result_84041 = invoke(stypy.reporting.localization.Localization(__file__, 2070, 11), replace_84037, *[str_84038, str_84039], **kwargs_84040)
    
    str_84042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2070, 42), 'str', 'pythonmodule')
    # Applying the binary operator '==' (line 2070)
    result_eq_84043 = python_operator(stypy.reporting.localization.Localization(__file__, 2070, 11), '==', replace_call_result_84041, str_84042)
    
    # Testing the type of an if condition (line 2070)
    if_condition_84044 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2070, 8), result_eq_84043)
    # Assigning a type to the variable 'if_condition_84044' (line 2070)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2070, 8), 'if_condition_84044', if_condition_84044)
    # SSA begins for if statement (line 2070)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2071)
    # Processing the call arguments (line 2071)
    # Getting the type of 'b' (line 2071)
    b_84047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2071, 31), 'b', False)
    # Processing the call keyword arguments (line 2071)
    kwargs_84048 = {}
    # Getting the type of 'usermodules' (line 2071)
    usermodules_84045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2071, 12), 'usermodules', False)
    # Obtaining the member 'append' of a type (line 2071)
    append_84046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2071, 12), usermodules_84045, 'append')
    # Calling append(args, kwargs) (line 2071)
    append_call_result_84049 = invoke(stypy.reporting.localization.Localization(__file__, 2071, 12), append_84046, *[b_84047], **kwargs_84048)
    
    # SSA branch for the else part of an if statement (line 2070)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    str_84050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2073, 17), 'str', 'block')
    # Getting the type of 'b' (line 2073)
    b_84051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2073, 15), 'b')
    # Obtaining the member '__getitem__' of a type (line 2073)
    getitem___84052 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2073, 15), b_84051, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2073)
    subscript_call_result_84053 = invoke(stypy.reporting.localization.Localization(__file__, 2073, 15), getitem___84052, str_84050)
    
    str_84054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2073, 29), 'str', 'module')
    # Applying the binary operator '==' (line 2073)
    result_eq_84055 = python_operator(stypy.reporting.localization.Localization(__file__, 2073, 15), '==', subscript_call_result_84053, str_84054)
    
    # Testing the type of an if condition (line 2073)
    if_condition_84056 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2073, 12), result_eq_84055)
    # Assigning a type to the variable 'if_condition_84056' (line 2073)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2073, 12), 'if_condition_84056', if_condition_84056)
    # SSA begins for if statement (line 2073)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 2074):
    
    # Assigning a Subscript to a Subscript (line 2074):
    
    # Obtaining the type of the subscript
    str_84057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2074, 45), 'str', 'vars')
    # Getting the type of 'b' (line 2074)
    b_84058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2074, 43), 'b')
    # Obtaining the member '__getitem__' of a type (line 2074)
    getitem___84059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2074, 43), b_84058, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2074)
    subscript_call_result_84060 = invoke(stypy.reporting.localization.Localization(__file__, 2074, 43), getitem___84059, str_84057)
    
    # Getting the type of 'f90modulevars' (line 2074)
    f90modulevars_84061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2074, 16), 'f90modulevars')
    
    # Obtaining the type of the subscript
    str_84062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2074, 32), 'str', 'name')
    # Getting the type of 'b' (line 2074)
    b_84063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2074, 30), 'b')
    # Obtaining the member '__getitem__' of a type (line 2074)
    getitem___84064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2074, 30), b_84063, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2074)
    subscript_call_result_84065 = invoke(stypy.reporting.localization.Localization(__file__, 2074, 30), getitem___84064, str_84062)
    
    # Storing an element on a container (line 2074)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2074, 16), f90modulevars_84061, (subscript_call_result_84065, subscript_call_result_84060))
    # SSA join for if statement (line 2073)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 2075)
    # Processing the call arguments (line 2075)
    # Getting the type of 'b' (line 2075)
    b_84068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2075, 24), 'b', False)
    # Processing the call keyword arguments (line 2075)
    kwargs_84069 = {}
    # Getting the type of 'body' (line 2075)
    body_84066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2075, 12), 'body', False)
    # Obtaining the member 'append' of a type (line 2075)
    append_84067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2075, 12), body_84066, 'append')
    # Calling append(args, kwargs) (line 2075)
    append_call_result_84070 = invoke(stypy.reporting.localization.Localization(__file__, 2075, 12), append_84067, *[b_84068], **kwargs_84069)
    
    # SSA join for if statement (line 2070)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'body' (line 2076)
    body_84071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2076, 11), 'body')
    # Assigning a type to the variable 'stypy_return_type' (line 2076)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2076, 4), 'stypy_return_type', body_84071)
    
    # ################# End of 'analyzebody(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'analyzebody' in the type store
    # Getting the type of 'stypy_return_type' (line 2045)
    stypy_return_type_84072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2045, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_84072)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'analyzebody'
    return stypy_return_type_84072

# Assigning a type to the variable 'analyzebody' (line 2045)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2045, 0), 'analyzebody', analyzebody)

@norecursion
def buildimplicitrules(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'buildimplicitrules'
    module_type_store = module_type_store.open_function_context('buildimplicitrules', 2079, 0, False)
    
    # Passed parameters checking function
    buildimplicitrules.stypy_localization = localization
    buildimplicitrules.stypy_type_of_self = None
    buildimplicitrules.stypy_type_store = module_type_store
    buildimplicitrules.stypy_function_name = 'buildimplicitrules'
    buildimplicitrules.stypy_param_names_list = ['block']
    buildimplicitrules.stypy_varargs_param_name = None
    buildimplicitrules.stypy_kwargs_param_name = None
    buildimplicitrules.stypy_call_defaults = defaults
    buildimplicitrules.stypy_call_varargs = varargs
    buildimplicitrules.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'buildimplicitrules', ['block'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'buildimplicitrules', localization, ['block'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'buildimplicitrules(...)' code ##################

    
    # Call to setmesstext(...): (line 2080)
    # Processing the call arguments (line 2080)
    # Getting the type of 'block' (line 2080)
    block_84074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2080, 16), 'block', False)
    # Processing the call keyword arguments (line 2080)
    kwargs_84075 = {}
    # Getting the type of 'setmesstext' (line 2080)
    setmesstext_84073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2080, 4), 'setmesstext', False)
    # Calling setmesstext(args, kwargs) (line 2080)
    setmesstext_call_result_84076 = invoke(stypy.reporting.localization.Localization(__file__, 2080, 4), setmesstext_84073, *[block_84074], **kwargs_84075)
    
    
    # Assigning a Name to a Name (line 2081):
    
    # Assigning a Name to a Name (line 2081):
    # Getting the type of 'defaultimplicitrules' (line 2081)
    defaultimplicitrules_84077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2081, 20), 'defaultimplicitrules')
    # Assigning a type to the variable 'implicitrules' (line 2081)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2081, 4), 'implicitrules', defaultimplicitrules_84077)
    
    # Assigning a Dict to a Name (line 2082):
    
    # Assigning a Dict to a Name (line 2082):
    
    # Obtaining an instance of the builtin type 'dict' (line 2082)
    dict_84078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2082, 16), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2082)
    
    # Assigning a type to the variable 'attrrules' (line 2082)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2082, 4), 'attrrules', dict_84078)
    
    
    str_84079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2083, 7), 'str', 'implicit')
    # Getting the type of 'block' (line 2083)
    block_84080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2083, 21), 'block')
    # Applying the binary operator 'in' (line 2083)
    result_contains_84081 = python_operator(stypy.reporting.localization.Localization(__file__, 2083, 7), 'in', str_84079, block_84080)
    
    # Testing the type of an if condition (line 2083)
    if_condition_84082 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2083, 4), result_contains_84081)
    # Assigning a type to the variable 'if_condition_84082' (line 2083)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2083, 4), 'if_condition_84082', if_condition_84082)
    # SSA begins for if statement (line 2083)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Type idiom detected: calculating its left and rigth part (line 2084)
    
    # Obtaining the type of the subscript
    str_84083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2084, 17), 'str', 'implicit')
    # Getting the type of 'block' (line 2084)
    block_84084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2084, 11), 'block')
    # Obtaining the member '__getitem__' of a type (line 2084)
    getitem___84085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2084, 11), block_84084, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2084)
    subscript_call_result_84086 = invoke(stypy.reporting.localization.Localization(__file__, 2084, 11), getitem___84085, str_84083)
    
    # Getting the type of 'None' (line 2084)
    None_84087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2084, 32), 'None')
    
    (may_be_84088, more_types_in_union_84089) = may_be_none(subscript_call_result_84086, None_84087)

    if may_be_84088:

        if more_types_in_union_84089:
            # Runtime conditional SSA (line 2084)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Name to a Name (line 2085):
        
        # Assigning a Name to a Name (line 2085):
        # Getting the type of 'None' (line 2085)
        None_84090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2085, 28), 'None')
        # Assigning a type to the variable 'implicitrules' (line 2085)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2085, 12), 'implicitrules', None_84090)
        
        
        # Getting the type of 'verbose' (line 2086)
        verbose_84091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2086, 15), 'verbose')
        int_84092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2086, 25), 'int')
        # Applying the binary operator '>' (line 2086)
        result_gt_84093 = python_operator(stypy.reporting.localization.Localization(__file__, 2086, 15), '>', verbose_84091, int_84092)
        
        # Testing the type of an if condition (line 2086)
        if_condition_84094 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2086, 12), result_gt_84093)
        # Assigning a type to the variable 'if_condition_84094' (line 2086)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2086, 12), 'if_condition_84094', if_condition_84094)
        # SSA begins for if statement (line 2086)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to outmess(...): (line 2087)
        # Processing the call arguments (line 2087)
        str_84096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2088, 20), 'str', 'buildimplicitrules: no implicit rules for routine %s.\n')
        
        # Call to repr(...): (line 2088)
        # Processing the call arguments (line 2088)
        
        # Obtaining the type of the subscript
        str_84098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2088, 91), 'str', 'name')
        # Getting the type of 'block' (line 2088)
        block_84099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2088, 85), 'block', False)
        # Obtaining the member '__getitem__' of a type (line 2088)
        getitem___84100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2088, 85), block_84099, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2088)
        subscript_call_result_84101 = invoke(stypy.reporting.localization.Localization(__file__, 2088, 85), getitem___84100, str_84098)
        
        # Processing the call keyword arguments (line 2088)
        kwargs_84102 = {}
        # Getting the type of 'repr' (line 2088)
        repr_84097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2088, 80), 'repr', False)
        # Calling repr(args, kwargs) (line 2088)
        repr_call_result_84103 = invoke(stypy.reporting.localization.Localization(__file__, 2088, 80), repr_84097, *[subscript_call_result_84101], **kwargs_84102)
        
        # Applying the binary operator '%' (line 2088)
        result_mod_84104 = python_operator(stypy.reporting.localization.Localization(__file__, 2088, 20), '%', str_84096, repr_call_result_84103)
        
        # Processing the call keyword arguments (line 2087)
        kwargs_84105 = {}
        # Getting the type of 'outmess' (line 2087)
        outmess_84095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2087, 16), 'outmess', False)
        # Calling outmess(args, kwargs) (line 2087)
        outmess_call_result_84106 = invoke(stypy.reporting.localization.Localization(__file__, 2087, 16), outmess_84095, *[result_mod_84104], **kwargs_84105)
        
        # SSA join for if statement (line 2086)
        module_type_store = module_type_store.join_ssa_context()
        

        if more_types_in_union_84089:
            # Runtime conditional SSA for else branch (line 2084)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_84088) or more_types_in_union_84089):
        
        
        # Call to list(...): (line 2090)
        # Processing the call arguments (line 2090)
        
        # Call to keys(...): (line 2090)
        # Processing the call keyword arguments (line 2090)
        kwargs_84113 = {}
        
        # Obtaining the type of the subscript
        str_84108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2090, 32), 'str', 'implicit')
        # Getting the type of 'block' (line 2090)
        block_84109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2090, 26), 'block', False)
        # Obtaining the member '__getitem__' of a type (line 2090)
        getitem___84110 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2090, 26), block_84109, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2090)
        subscript_call_result_84111 = invoke(stypy.reporting.localization.Localization(__file__, 2090, 26), getitem___84110, str_84108)
        
        # Obtaining the member 'keys' of a type (line 2090)
        keys_84112 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2090, 26), subscript_call_result_84111, 'keys')
        # Calling keys(args, kwargs) (line 2090)
        keys_call_result_84114 = invoke(stypy.reporting.localization.Localization(__file__, 2090, 26), keys_84112, *[], **kwargs_84113)
        
        # Processing the call keyword arguments (line 2090)
        kwargs_84115 = {}
        # Getting the type of 'list' (line 2090)
        list_84107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2090, 21), 'list', False)
        # Calling list(args, kwargs) (line 2090)
        list_call_result_84116 = invoke(stypy.reporting.localization.Localization(__file__, 2090, 21), list_84107, *[keys_call_result_84114], **kwargs_84115)
        
        # Testing the type of a for loop iterable (line 2090)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2090, 12), list_call_result_84116)
        # Getting the type of the for loop variable (line 2090)
        for_loop_var_84117 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2090, 12), list_call_result_84116)
        # Assigning a type to the variable 'k' (line 2090)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2090, 12), 'k', for_loop_var_84117)
        # SSA begins for a for statement (line 2090)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        
        # Call to get(...): (line 2091)
        # Processing the call arguments (line 2091)
        str_84126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2091, 44), 'str', 'typespec')
        # Processing the call keyword arguments (line 2091)
        kwargs_84127 = {}
        
        # Obtaining the type of the subscript
        # Getting the type of 'k' (line 2091)
        k_84118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2091, 37), 'k', False)
        
        # Obtaining the type of the subscript
        str_84119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2091, 25), 'str', 'implicit')
        # Getting the type of 'block' (line 2091)
        block_84120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2091, 19), 'block', False)
        # Obtaining the member '__getitem__' of a type (line 2091)
        getitem___84121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2091, 19), block_84120, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2091)
        subscript_call_result_84122 = invoke(stypy.reporting.localization.Localization(__file__, 2091, 19), getitem___84121, str_84119)
        
        # Obtaining the member '__getitem__' of a type (line 2091)
        getitem___84123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2091, 19), subscript_call_result_84122, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2091)
        subscript_call_result_84124 = invoke(stypy.reporting.localization.Localization(__file__, 2091, 19), getitem___84123, k_84118)
        
        # Obtaining the member 'get' of a type (line 2091)
        get_84125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2091, 19), subscript_call_result_84124, 'get')
        # Calling get(args, kwargs) (line 2091)
        get_call_result_84128 = invoke(stypy.reporting.localization.Localization(__file__, 2091, 19), get_84125, *[str_84126], **kwargs_84127)
        
        
        # Obtaining an instance of the builtin type 'list' (line 2091)
        list_84129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2091, 63), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2091)
        # Adding element type (line 2091)
        str_84130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2091, 64), 'str', 'static')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2091, 63), list_84129, str_84130)
        # Adding element type (line 2091)
        str_84131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2091, 74), 'str', 'automatic')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2091, 63), list_84129, str_84131)
        
        # Applying the binary operator 'notin' (line 2091)
        result_contains_84132 = python_operator(stypy.reporting.localization.Localization(__file__, 2091, 19), 'notin', get_call_result_84128, list_84129)
        
        # Testing the type of an if condition (line 2091)
        if_condition_84133 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2091, 16), result_contains_84132)
        # Assigning a type to the variable 'if_condition_84133' (line 2091)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2091, 16), 'if_condition_84133', if_condition_84133)
        # SSA begins for if statement (line 2091)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Subscript (line 2092):
        
        # Assigning a Subscript to a Subscript (line 2092):
        
        # Obtaining the type of the subscript
        # Getting the type of 'k' (line 2092)
        k_84134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2092, 57), 'k')
        
        # Obtaining the type of the subscript
        str_84135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2092, 45), 'str', 'implicit')
        # Getting the type of 'block' (line 2092)
        block_84136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2092, 39), 'block')
        # Obtaining the member '__getitem__' of a type (line 2092)
        getitem___84137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2092, 39), block_84136, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2092)
        subscript_call_result_84138 = invoke(stypy.reporting.localization.Localization(__file__, 2092, 39), getitem___84137, str_84135)
        
        # Obtaining the member '__getitem__' of a type (line 2092)
        getitem___84139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2092, 39), subscript_call_result_84138, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2092)
        subscript_call_result_84140 = invoke(stypy.reporting.localization.Localization(__file__, 2092, 39), getitem___84139, k_84134)
        
        # Getting the type of 'implicitrules' (line 2092)
        implicitrules_84141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2092, 20), 'implicitrules')
        # Getting the type of 'k' (line 2092)
        k_84142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2092, 34), 'k')
        # Storing an element on a container (line 2092)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2092, 20), implicitrules_84141, (k_84142, subscript_call_result_84140))
        # SSA branch for the else part of an if statement (line 2091)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Subscript to a Subscript (line 2094):
        
        # Assigning a Subscript to a Subscript (line 2094):
        
        # Obtaining the type of the subscript
        str_84143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2094, 56), 'str', 'typespec')
        
        # Obtaining the type of the subscript
        # Getting the type of 'k' (line 2094)
        k_84144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2094, 53), 'k')
        
        # Obtaining the type of the subscript
        str_84145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2094, 41), 'str', 'implicit')
        # Getting the type of 'block' (line 2094)
        block_84146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2094, 35), 'block')
        # Obtaining the member '__getitem__' of a type (line 2094)
        getitem___84147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2094, 35), block_84146, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2094)
        subscript_call_result_84148 = invoke(stypy.reporting.localization.Localization(__file__, 2094, 35), getitem___84147, str_84145)
        
        # Obtaining the member '__getitem__' of a type (line 2094)
        getitem___84149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2094, 35), subscript_call_result_84148, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2094)
        subscript_call_result_84150 = invoke(stypy.reporting.localization.Localization(__file__, 2094, 35), getitem___84149, k_84144)
        
        # Obtaining the member '__getitem__' of a type (line 2094)
        getitem___84151 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2094, 35), subscript_call_result_84150, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2094)
        subscript_call_result_84152 = invoke(stypy.reporting.localization.Localization(__file__, 2094, 35), getitem___84151, str_84143)
        
        # Getting the type of 'attrrules' (line 2094)
        attrrules_84153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2094, 20), 'attrrules')
        # Getting the type of 'k' (line 2094)
        k_84154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2094, 30), 'k')
        # Storing an element on a container (line 2094)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2094, 20), attrrules_84153, (k_84154, subscript_call_result_84152))
        # SSA join for if statement (line 2091)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        

        if (may_be_84088 and more_types_in_union_84089):
            # SSA join for if statement (line 2084)
            module_type_store = module_type_store.join_ssa_context()


    
    # SSA join for if statement (line 2083)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 2095)
    tuple_84155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2095, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2095)
    # Adding element type (line 2095)
    # Getting the type of 'implicitrules' (line 2095)
    implicitrules_84156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2095, 11), 'implicitrules')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2095, 11), tuple_84155, implicitrules_84156)
    # Adding element type (line 2095)
    # Getting the type of 'attrrules' (line 2095)
    attrrules_84157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2095, 26), 'attrrules')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2095, 11), tuple_84155, attrrules_84157)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2095)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2095, 4), 'stypy_return_type', tuple_84155)
    
    # ################# End of 'buildimplicitrules(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'buildimplicitrules' in the type store
    # Getting the type of 'stypy_return_type' (line 2079)
    stypy_return_type_84158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2079, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_84158)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'buildimplicitrules'
    return stypy_return_type_84158

# Assigning a type to the variable 'buildimplicitrules' (line 2079)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2079, 0), 'buildimplicitrules', buildimplicitrules)

@norecursion
def myeval(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 2098)
    None_84159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2098, 16), 'None')
    # Getting the type of 'None' (line 2098)
    None_84160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2098, 24), 'None')
    defaults = [None_84159, None_84160]
    # Create a new context for function 'myeval'
    module_type_store = module_type_store.open_function_context('myeval', 2098, 0, False)
    
    # Passed parameters checking function
    myeval.stypy_localization = localization
    myeval.stypy_type_of_self = None
    myeval.stypy_type_store = module_type_store
    myeval.stypy_function_name = 'myeval'
    myeval.stypy_param_names_list = ['e', 'g', 'l']
    myeval.stypy_varargs_param_name = None
    myeval.stypy_kwargs_param_name = None
    myeval.stypy_call_defaults = defaults
    myeval.stypy_call_varargs = varargs
    myeval.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'myeval', ['e', 'g', 'l'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'myeval', localization, ['e', 'g', 'l'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'myeval(...)' code ##################

    
    # Assigning a Call to a Name (line 2099):
    
    # Assigning a Call to a Name (line 2099):
    
    # Call to eval(...): (line 2099)
    # Processing the call arguments (line 2099)
    # Getting the type of 'e' (line 2099)
    e_84162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2099, 13), 'e', False)
    # Getting the type of 'g' (line 2099)
    g_84163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2099, 16), 'g', False)
    # Getting the type of 'l' (line 2099)
    l_84164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2099, 19), 'l', False)
    # Processing the call keyword arguments (line 2099)
    kwargs_84165 = {}
    # Getting the type of 'eval' (line 2099)
    eval_84161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2099, 8), 'eval', False)
    # Calling eval(args, kwargs) (line 2099)
    eval_call_result_84166 = invoke(stypy.reporting.localization.Localization(__file__, 2099, 8), eval_84161, *[e_84162, g_84163, l_84164], **kwargs_84165)
    
    # Assigning a type to the variable 'r' (line 2099)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2099, 4), 'r', eval_call_result_84166)
    
    
    
    # Call to type(...): (line 2100)
    # Processing the call arguments (line 2100)
    # Getting the type of 'r' (line 2100)
    r_84168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2100, 12), 'r', False)
    # Processing the call keyword arguments (line 2100)
    kwargs_84169 = {}
    # Getting the type of 'type' (line 2100)
    type_84167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2100, 7), 'type', False)
    # Calling type(args, kwargs) (line 2100)
    type_call_result_84170 = invoke(stypy.reporting.localization.Localization(__file__, 2100, 7), type_84167, *[r_84168], **kwargs_84169)
    
    
    # Obtaining an instance of the builtin type 'list' (line 2100)
    list_84171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2100, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2100)
    # Adding element type (line 2100)
    
    # Call to type(...): (line 2100)
    # Processing the call arguments (line 2100)
    int_84173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2100, 24), 'int')
    # Processing the call keyword arguments (line 2100)
    kwargs_84174 = {}
    # Getting the type of 'type' (line 2100)
    type_84172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2100, 19), 'type', False)
    # Calling type(args, kwargs) (line 2100)
    type_call_result_84175 = invoke(stypy.reporting.localization.Localization(__file__, 2100, 19), type_84172, *[int_84173], **kwargs_84174)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2100, 18), list_84171, type_call_result_84175)
    # Adding element type (line 2100)
    
    # Call to type(...): (line 2100)
    # Processing the call arguments (line 2100)
    float_84177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2100, 33), 'float')
    # Processing the call keyword arguments (line 2100)
    kwargs_84178 = {}
    # Getting the type of 'type' (line 2100)
    type_84176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2100, 28), 'type', False)
    # Calling type(args, kwargs) (line 2100)
    type_call_result_84179 = invoke(stypy.reporting.localization.Localization(__file__, 2100, 28), type_84176, *[float_84177], **kwargs_84178)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2100, 18), list_84171, type_call_result_84179)
    
    # Applying the binary operator 'in' (line 2100)
    result_contains_84180 = python_operator(stypy.reporting.localization.Localization(__file__, 2100, 7), 'in', type_call_result_84170, list_84171)
    
    # Testing the type of an if condition (line 2100)
    if_condition_84181 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2100, 4), result_contains_84180)
    # Assigning a type to the variable 'if_condition_84181' (line 2100)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2100, 4), 'if_condition_84181', if_condition_84181)
    # SSA begins for if statement (line 2100)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'r' (line 2101)
    r_84182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2101, 15), 'r')
    # Assigning a type to the variable 'stypy_return_type' (line 2101)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2101, 8), 'stypy_return_type', r_84182)
    # SSA join for if statement (line 2100)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to ValueError(...): (line 2102)
    # Processing the call arguments (line 2102)
    str_84184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2102, 21), 'str', 'r=%r')
    # Getting the type of 'r' (line 2102)
    r_84185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2102, 31), 'r', False)
    # Applying the binary operator '%' (line 2102)
    result_mod_84186 = python_operator(stypy.reporting.localization.Localization(__file__, 2102, 21), '%', str_84184, r_84185)
    
    # Processing the call keyword arguments (line 2102)
    kwargs_84187 = {}
    # Getting the type of 'ValueError' (line 2102)
    ValueError_84183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2102, 10), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 2102)
    ValueError_call_result_84188 = invoke(stypy.reporting.localization.Localization(__file__, 2102, 10), ValueError_84183, *[result_mod_84186], **kwargs_84187)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2102, 4), ValueError_call_result_84188, 'raise parameter', BaseException)
    
    # ################# End of 'myeval(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'myeval' in the type store
    # Getting the type of 'stypy_return_type' (line 2098)
    stypy_return_type_84189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2098, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_84189)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'myeval'
    return stypy_return_type_84189

# Assigning a type to the variable 'myeval' (line 2098)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2098, 0), 'myeval', myeval)

# Assigning a Call to a Name (line 2104):

# Assigning a Call to a Name (line 2104):

# Call to compile(...): (line 2104)
# Processing the call arguments (line 2104)
str_84192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2104, 29), 'str', '\\A\\b\\w+\\b\\Z')
# Getting the type of 're' (line 2104)
re_84193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2104, 45), 're', False)
# Obtaining the member 'I' of a type (line 2104)
I_84194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2104, 45), re_84193, 'I')
# Processing the call keyword arguments (line 2104)
kwargs_84195 = {}
# Getting the type of 're' (line 2104)
re_84190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2104, 18), 're', False)
# Obtaining the member 'compile' of a type (line 2104)
compile_84191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2104, 18), re_84190, 'compile')
# Calling compile(args, kwargs) (line 2104)
compile_call_result_84196 = invoke(stypy.reporting.localization.Localization(__file__, 2104, 18), compile_84191, *[str_84192, I_84194], **kwargs_84195)

# Assigning a type to the variable 'getlincoef_re_1' (line 2104)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2104, 0), 'getlincoef_re_1', compile_call_result_84196)

@norecursion
def getlincoef(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'getlincoef'
    module_type_store = module_type_store.open_function_context('getlincoef', 2107, 0, False)
    
    # Passed parameters checking function
    getlincoef.stypy_localization = localization
    getlincoef.stypy_type_of_self = None
    getlincoef.stypy_type_store = module_type_store
    getlincoef.stypy_function_name = 'getlincoef'
    getlincoef.stypy_param_names_list = ['e', 'xset']
    getlincoef.stypy_varargs_param_name = None
    getlincoef.stypy_kwargs_param_name = None
    getlincoef.stypy_call_defaults = defaults
    getlincoef.stypy_call_varargs = varargs
    getlincoef.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'getlincoef', ['e', 'xset'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'getlincoef', localization, ['e', 'xset'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'getlincoef(...)' code ##################

    
    
    # SSA begins for try-except statement (line 2108)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 2109):
    
    # Assigning a Call to a Name (line 2109):
    
    # Call to int(...): (line 2109)
    # Processing the call arguments (line 2109)
    
    # Call to myeval(...): (line 2109)
    # Processing the call arguments (line 2109)
    # Getting the type of 'e' (line 2109)
    e_84199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2109, 23), 'e', False)
    
    # Obtaining an instance of the builtin type 'dict' (line 2109)
    dict_84200 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2109, 26), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2109)
    
    
    # Obtaining an instance of the builtin type 'dict' (line 2109)
    dict_84201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2109, 30), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2109)
    
    # Processing the call keyword arguments (line 2109)
    kwargs_84202 = {}
    # Getting the type of 'myeval' (line 2109)
    myeval_84198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2109, 16), 'myeval', False)
    # Calling myeval(args, kwargs) (line 2109)
    myeval_call_result_84203 = invoke(stypy.reporting.localization.Localization(__file__, 2109, 16), myeval_84198, *[e_84199, dict_84200, dict_84201], **kwargs_84202)
    
    # Processing the call keyword arguments (line 2109)
    kwargs_84204 = {}
    # Getting the type of 'int' (line 2109)
    int_84197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2109, 12), 'int', False)
    # Calling int(args, kwargs) (line 2109)
    int_call_result_84205 = invoke(stypy.reporting.localization.Localization(__file__, 2109, 12), int_84197, *[myeval_call_result_84203], **kwargs_84204)
    
    # Assigning a type to the variable 'c' (line 2109)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2109, 8), 'c', int_call_result_84205)
    
    # Obtaining an instance of the builtin type 'tuple' (line 2110)
    tuple_84206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2110, 15), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2110)
    # Adding element type (line 2110)
    int_84207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2110, 15), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2110, 15), tuple_84206, int_84207)
    # Adding element type (line 2110)
    # Getting the type of 'c' (line 2110)
    c_84208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2110, 18), 'c')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2110, 15), tuple_84206, c_84208)
    # Adding element type (line 2110)
    # Getting the type of 'None' (line 2110)
    None_84209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2110, 21), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2110, 15), tuple_84206, None_84209)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2110)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2110, 8), 'stypy_return_type', tuple_84206)
    # SSA branch for the except part of a try statement (line 2108)
    # SSA branch for the except '<any exception>' branch of a try statement (line 2108)
    module_type_store.open_ssa_branch('except')
    pass
    # SSA join for try-except statement (line 2108)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to match(...): (line 2113)
    # Processing the call arguments (line 2113)
    # Getting the type of 'e' (line 2113)
    e_84212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2113, 29), 'e', False)
    # Processing the call keyword arguments (line 2113)
    kwargs_84213 = {}
    # Getting the type of 'getlincoef_re_1' (line 2113)
    getlincoef_re_1_84210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2113, 7), 'getlincoef_re_1', False)
    # Obtaining the member 'match' of a type (line 2113)
    match_84211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2113, 7), getlincoef_re_1_84210, 'match')
    # Calling match(args, kwargs) (line 2113)
    match_call_result_84214 = invoke(stypy.reporting.localization.Localization(__file__, 2113, 7), match_84211, *[e_84212], **kwargs_84213)
    
    # Testing the type of an if condition (line 2113)
    if_condition_84215 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2113, 4), match_call_result_84214)
    # Assigning a type to the variable 'if_condition_84215' (line 2113)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2113, 4), 'if_condition_84215', if_condition_84215)
    # SSA begins for if statement (line 2113)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2114)
    tuple_84216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2114, 15), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2114)
    # Adding element type (line 2114)
    int_84217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2114, 15), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2114, 15), tuple_84216, int_84217)
    # Adding element type (line 2114)
    int_84218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2114, 18), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2114, 15), tuple_84216, int_84218)
    # Adding element type (line 2114)
    # Getting the type of 'e' (line 2114)
    e_84219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2114, 21), 'e')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2114, 15), tuple_84216, e_84219)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2114)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2114, 8), 'stypy_return_type', tuple_84216)
    # SSA join for if statement (line 2113)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2115):
    
    # Assigning a Call to a Name (line 2115):
    
    # Call to len(...): (line 2115)
    # Processing the call arguments (line 2115)
    # Getting the type of 'e' (line 2115)
    e_84221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2115, 16), 'e', False)
    # Processing the call keyword arguments (line 2115)
    kwargs_84222 = {}
    # Getting the type of 'len' (line 2115)
    len_84220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2115, 12), 'len', False)
    # Calling len(args, kwargs) (line 2115)
    len_call_result_84223 = invoke(stypy.reporting.localization.Localization(__file__, 2115, 12), len_84220, *[e_84221], **kwargs_84222)
    
    # Assigning a type to the variable 'len_e' (line 2115)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2115, 4), 'len_e', len_call_result_84223)
    
    # Getting the type of 'xset' (line 2116)
    xset_84224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2116, 13), 'xset')
    # Testing the type of a for loop iterable (line 2116)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2116, 4), xset_84224)
    # Getting the type of the for loop variable (line 2116)
    for_loop_var_84225 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2116, 4), xset_84224)
    # Assigning a type to the variable 'x' (line 2116)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2116, 4), 'x', for_loop_var_84225)
    # SSA begins for a for statement (line 2116)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Call to len(...): (line 2117)
    # Processing the call arguments (line 2117)
    # Getting the type of 'x' (line 2117)
    x_84227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2117, 15), 'x', False)
    # Processing the call keyword arguments (line 2117)
    kwargs_84228 = {}
    # Getting the type of 'len' (line 2117)
    len_84226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2117, 11), 'len', False)
    # Calling len(args, kwargs) (line 2117)
    len_call_result_84229 = invoke(stypy.reporting.localization.Localization(__file__, 2117, 11), len_84226, *[x_84227], **kwargs_84228)
    
    # Getting the type of 'len_e' (line 2117)
    len_e_84230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2117, 20), 'len_e')
    # Applying the binary operator '>' (line 2117)
    result_gt_84231 = python_operator(stypy.reporting.localization.Localization(__file__, 2117, 11), '>', len_call_result_84229, len_e_84230)
    
    # Testing the type of an if condition (line 2117)
    if_condition_84232 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2117, 8), result_gt_84231)
    # Assigning a type to the variable 'if_condition_84232' (line 2117)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2117, 8), 'if_condition_84232', if_condition_84232)
    # SSA begins for if statement (line 2117)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 2117)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to search(...): (line 2119)
    # Processing the call arguments (line 2119)
    str_84235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2119, 21), 'str', '\\w\\s*\\([^)]*\\b')
    # Getting the type of 'x' (line 2119)
    x_84236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2119, 41), 'x', False)
    # Applying the binary operator '+' (line 2119)
    result_add_84237 = python_operator(stypy.reporting.localization.Localization(__file__, 2119, 21), '+', str_84235, x_84236)
    
    str_84238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2119, 45), 'str', '\\b')
    # Applying the binary operator '+' (line 2119)
    result_add_84239 = python_operator(stypy.reporting.localization.Localization(__file__, 2119, 43), '+', result_add_84237, str_84238)
    
    # Getting the type of 'e' (line 2119)
    e_84240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2119, 52), 'e', False)
    # Processing the call keyword arguments (line 2119)
    kwargs_84241 = {}
    # Getting the type of 're' (line 2119)
    re_84233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2119, 11), 're', False)
    # Obtaining the member 'search' of a type (line 2119)
    search_84234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2119, 11), re_84233, 'search')
    # Calling search(args, kwargs) (line 2119)
    search_call_result_84242 = invoke(stypy.reporting.localization.Localization(__file__, 2119, 11), search_84234, *[result_add_84239, e_84240], **kwargs_84241)
    
    # Testing the type of an if condition (line 2119)
    if_condition_84243 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2119, 8), search_call_result_84242)
    # Assigning a type to the variable 'if_condition_84243' (line 2119)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2119, 8), 'if_condition_84243', if_condition_84243)
    # SSA begins for if statement (line 2119)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 2119)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2122):
    
    # Assigning a Call to a Name (line 2122):
    
    # Call to compile(...): (line 2122)
    # Processing the call arguments (line 2122)
    str_84246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2122, 26), 'str', '(?P<before>.*?)\\b')
    # Getting the type of 'x' (line 2122)
    x_84247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2122, 49), 'x', False)
    # Applying the binary operator '+' (line 2122)
    result_add_84248 = python_operator(stypy.reporting.localization.Localization(__file__, 2122, 26), '+', str_84246, x_84247)
    
    str_84249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2122, 53), 'str', '\\b(?P<after>.*)')
    # Applying the binary operator '+' (line 2122)
    result_add_84250 = python_operator(stypy.reporting.localization.Localization(__file__, 2122, 51), '+', result_add_84248, str_84249)
    
    # Getting the type of 're' (line 2122)
    re_84251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2122, 73), 're', False)
    # Obtaining the member 'I' of a type (line 2122)
    I_84252 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2122, 73), re_84251, 'I')
    # Processing the call keyword arguments (line 2122)
    kwargs_84253 = {}
    # Getting the type of 're' (line 2122)
    re_84244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2122, 15), 're', False)
    # Obtaining the member 'compile' of a type (line 2122)
    compile_84245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2122, 15), re_84244, 'compile')
    # Calling compile(args, kwargs) (line 2122)
    compile_call_result_84254 = invoke(stypy.reporting.localization.Localization(__file__, 2122, 15), compile_84245, *[result_add_84250, I_84252], **kwargs_84253)
    
    # Assigning a type to the variable 're_1' (line 2122)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2122, 8), 're_1', compile_call_result_84254)
    
    # Assigning a Call to a Name (line 2123):
    
    # Assigning a Call to a Name (line 2123):
    
    # Call to match(...): (line 2123)
    # Processing the call arguments (line 2123)
    # Getting the type of 'e' (line 2123)
    e_84257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2123, 23), 'e', False)
    # Processing the call keyword arguments (line 2123)
    kwargs_84258 = {}
    # Getting the type of 're_1' (line 2123)
    re_1_84255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2123, 12), 're_1', False)
    # Obtaining the member 'match' of a type (line 2123)
    match_84256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2123, 12), re_1_84255, 'match')
    # Calling match(args, kwargs) (line 2123)
    match_call_result_84259 = invoke(stypy.reporting.localization.Localization(__file__, 2123, 12), match_84256, *[e_84257], **kwargs_84258)
    
    # Assigning a type to the variable 'm' (line 2123)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2123, 8), 'm', match_call_result_84259)
    
    # Getting the type of 'm' (line 2124)
    m_84260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2124, 11), 'm')
    # Testing the type of an if condition (line 2124)
    if_condition_84261 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2124, 8), m_84260)
    # Assigning a type to the variable 'if_condition_84261' (line 2124)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2124, 8), 'if_condition_84261', if_condition_84261)
    # SSA begins for if statement (line 2124)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # SSA begins for try-except statement (line 2125)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 2126):
    
    # Assigning a Call to a Name (line 2126):
    
    # Call to match(...): (line 2126)
    # Processing the call arguments (line 2126)
    # Getting the type of 'e' (line 2126)
    e_84264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2126, 32), 'e', False)
    # Processing the call keyword arguments (line 2126)
    kwargs_84265 = {}
    # Getting the type of 're_1' (line 2126)
    re_1_84262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2126, 21), 're_1', False)
    # Obtaining the member 'match' of a type (line 2126)
    match_84263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2126, 21), re_1_84262, 'match')
    # Calling match(args, kwargs) (line 2126)
    match_call_result_84266 = invoke(stypy.reporting.localization.Localization(__file__, 2126, 21), match_84263, *[e_84264], **kwargs_84265)
    
    # Assigning a type to the variable 'm1' (line 2126)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2126, 16), 'm1', match_call_result_84266)
    
    # Getting the type of 'm1' (line 2127)
    m1_84267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2127, 22), 'm1')
    # Testing the type of an if condition (line 2127)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2127, 16), m1_84267)
    # SSA begins for while statement (line 2127)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    # Assigning a BinOp to a Name (line 2128):
    
    # Assigning a BinOp to a Name (line 2128):
    str_84268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2128, 25), 'str', '%s(%s)%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2129)
    tuple_84269 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2129, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2129)
    # Adding element type (line 2129)
    
    # Call to group(...): (line 2129)
    # Processing the call arguments (line 2129)
    str_84272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2129, 33), 'str', 'before')
    # Processing the call keyword arguments (line 2129)
    kwargs_84273 = {}
    # Getting the type of 'm1' (line 2129)
    m1_84270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2129, 24), 'm1', False)
    # Obtaining the member 'group' of a type (line 2129)
    group_84271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2129, 24), m1_84270, 'group')
    # Calling group(args, kwargs) (line 2129)
    group_call_result_84274 = invoke(stypy.reporting.localization.Localization(__file__, 2129, 24), group_84271, *[str_84272], **kwargs_84273)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2129, 24), tuple_84269, group_call_result_84274)
    # Adding element type (line 2129)
    int_84275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2129, 44), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2129, 24), tuple_84269, int_84275)
    # Adding element type (line 2129)
    
    # Call to group(...): (line 2129)
    # Processing the call arguments (line 2129)
    str_84278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2129, 56), 'str', 'after')
    # Processing the call keyword arguments (line 2129)
    kwargs_84279 = {}
    # Getting the type of 'm1' (line 2129)
    m1_84276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2129, 47), 'm1', False)
    # Obtaining the member 'group' of a type (line 2129)
    group_84277 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2129, 47), m1_84276, 'group')
    # Calling group(args, kwargs) (line 2129)
    group_call_result_84280 = invoke(stypy.reporting.localization.Localization(__file__, 2129, 47), group_84277, *[str_84278], **kwargs_84279)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2129, 24), tuple_84269, group_call_result_84280)
    
    # Applying the binary operator '%' (line 2128)
    result_mod_84281 = python_operator(stypy.reporting.localization.Localization(__file__, 2128, 25), '%', str_84268, tuple_84269)
    
    # Assigning a type to the variable 'ee' (line 2128)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2128, 20), 'ee', result_mod_84281)
    
    # Assigning a Call to a Name (line 2130):
    
    # Assigning a Call to a Name (line 2130):
    
    # Call to match(...): (line 2130)
    # Processing the call arguments (line 2130)
    # Getting the type of 'ee' (line 2130)
    ee_84284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2130, 36), 'ee', False)
    # Processing the call keyword arguments (line 2130)
    kwargs_84285 = {}
    # Getting the type of 're_1' (line 2130)
    re_1_84282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2130, 25), 're_1', False)
    # Obtaining the member 'match' of a type (line 2130)
    match_84283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2130, 25), re_1_84282, 'match')
    # Calling match(args, kwargs) (line 2130)
    match_call_result_84286 = invoke(stypy.reporting.localization.Localization(__file__, 2130, 25), match_84283, *[ee_84284], **kwargs_84285)
    
    # Assigning a type to the variable 'm1' (line 2130)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2130, 20), 'm1', match_call_result_84286)
    # SSA join for while statement (line 2127)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2131):
    
    # Assigning a Call to a Name (line 2131):
    
    # Call to myeval(...): (line 2131)
    # Processing the call arguments (line 2131)
    # Getting the type of 'ee' (line 2131)
    ee_84288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2131, 27), 'ee', False)
    
    # Obtaining an instance of the builtin type 'dict' (line 2131)
    dict_84289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2131, 31), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2131)
    
    
    # Obtaining an instance of the builtin type 'dict' (line 2131)
    dict_84290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2131, 35), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2131)
    
    # Processing the call keyword arguments (line 2131)
    kwargs_84291 = {}
    # Getting the type of 'myeval' (line 2131)
    myeval_84287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2131, 20), 'myeval', False)
    # Calling myeval(args, kwargs) (line 2131)
    myeval_call_result_84292 = invoke(stypy.reporting.localization.Localization(__file__, 2131, 20), myeval_84287, *[ee_84288, dict_84289, dict_84290], **kwargs_84291)
    
    # Assigning a type to the variable 'b' (line 2131)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2131, 16), 'b', myeval_call_result_84292)
    
    # Assigning a Call to a Name (line 2132):
    
    # Assigning a Call to a Name (line 2132):
    
    # Call to match(...): (line 2132)
    # Processing the call arguments (line 2132)
    # Getting the type of 'e' (line 2132)
    e_84295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2132, 32), 'e', False)
    # Processing the call keyword arguments (line 2132)
    kwargs_84296 = {}
    # Getting the type of 're_1' (line 2132)
    re_1_84293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2132, 21), 're_1', False)
    # Obtaining the member 'match' of a type (line 2132)
    match_84294 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2132, 21), re_1_84293, 'match')
    # Calling match(args, kwargs) (line 2132)
    match_call_result_84297 = invoke(stypy.reporting.localization.Localization(__file__, 2132, 21), match_84294, *[e_84295], **kwargs_84296)
    
    # Assigning a type to the variable 'm1' (line 2132)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2132, 16), 'm1', match_call_result_84297)
    
    # Getting the type of 'm1' (line 2133)
    m1_84298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2133, 22), 'm1')
    # Testing the type of an if condition (line 2133)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2133, 16), m1_84298)
    # SSA begins for while statement (line 2133)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    # Assigning a BinOp to a Name (line 2134):
    
    # Assigning a BinOp to a Name (line 2134):
    str_84299 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2134, 25), 'str', '%s(%s)%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2135)
    tuple_84300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2135, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2135)
    # Adding element type (line 2135)
    
    # Call to group(...): (line 2135)
    # Processing the call arguments (line 2135)
    str_84303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2135, 33), 'str', 'before')
    # Processing the call keyword arguments (line 2135)
    kwargs_84304 = {}
    # Getting the type of 'm1' (line 2135)
    m1_84301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2135, 24), 'm1', False)
    # Obtaining the member 'group' of a type (line 2135)
    group_84302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2135, 24), m1_84301, 'group')
    # Calling group(args, kwargs) (line 2135)
    group_call_result_84305 = invoke(stypy.reporting.localization.Localization(__file__, 2135, 24), group_84302, *[str_84303], **kwargs_84304)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2135, 24), tuple_84300, group_call_result_84305)
    # Adding element type (line 2135)
    int_84306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2135, 44), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2135, 24), tuple_84300, int_84306)
    # Adding element type (line 2135)
    
    # Call to group(...): (line 2135)
    # Processing the call arguments (line 2135)
    str_84309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2135, 56), 'str', 'after')
    # Processing the call keyword arguments (line 2135)
    kwargs_84310 = {}
    # Getting the type of 'm1' (line 2135)
    m1_84307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2135, 47), 'm1', False)
    # Obtaining the member 'group' of a type (line 2135)
    group_84308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2135, 47), m1_84307, 'group')
    # Calling group(args, kwargs) (line 2135)
    group_call_result_84311 = invoke(stypy.reporting.localization.Localization(__file__, 2135, 47), group_84308, *[str_84309], **kwargs_84310)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2135, 24), tuple_84300, group_call_result_84311)
    
    # Applying the binary operator '%' (line 2134)
    result_mod_84312 = python_operator(stypy.reporting.localization.Localization(__file__, 2134, 25), '%', str_84299, tuple_84300)
    
    # Assigning a type to the variable 'ee' (line 2134)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2134, 20), 'ee', result_mod_84312)
    
    # Assigning a Call to a Name (line 2136):
    
    # Assigning a Call to a Name (line 2136):
    
    # Call to match(...): (line 2136)
    # Processing the call arguments (line 2136)
    # Getting the type of 'ee' (line 2136)
    ee_84315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2136, 36), 'ee', False)
    # Processing the call keyword arguments (line 2136)
    kwargs_84316 = {}
    # Getting the type of 're_1' (line 2136)
    re_1_84313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2136, 25), 're_1', False)
    # Obtaining the member 'match' of a type (line 2136)
    match_84314 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2136, 25), re_1_84313, 'match')
    # Calling match(args, kwargs) (line 2136)
    match_call_result_84317 = invoke(stypy.reporting.localization.Localization(__file__, 2136, 25), match_84314, *[ee_84315], **kwargs_84316)
    
    # Assigning a type to the variable 'm1' (line 2136)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2136, 20), 'm1', match_call_result_84317)
    # SSA join for while statement (line 2133)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 2137):
    
    # Assigning a BinOp to a Name (line 2137):
    
    # Call to myeval(...): (line 2137)
    # Processing the call arguments (line 2137)
    # Getting the type of 'ee' (line 2137)
    ee_84319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2137, 27), 'ee', False)
    
    # Obtaining an instance of the builtin type 'dict' (line 2137)
    dict_84320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2137, 31), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2137)
    
    
    # Obtaining an instance of the builtin type 'dict' (line 2137)
    dict_84321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2137, 35), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2137)
    
    # Processing the call keyword arguments (line 2137)
    kwargs_84322 = {}
    # Getting the type of 'myeval' (line 2137)
    myeval_84318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2137, 20), 'myeval', False)
    # Calling myeval(args, kwargs) (line 2137)
    myeval_call_result_84323 = invoke(stypy.reporting.localization.Localization(__file__, 2137, 20), myeval_84318, *[ee_84319, dict_84320, dict_84321], **kwargs_84322)
    
    # Getting the type of 'b' (line 2137)
    b_84324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2137, 41), 'b')
    # Applying the binary operator '-' (line 2137)
    result_sub_84325 = python_operator(stypy.reporting.localization.Localization(__file__, 2137, 20), '-', myeval_call_result_84323, b_84324)
    
    # Assigning a type to the variable 'a' (line 2137)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2137, 16), 'a', result_sub_84325)
    
    # Assigning a Call to a Name (line 2138):
    
    # Assigning a Call to a Name (line 2138):
    
    # Call to match(...): (line 2138)
    # Processing the call arguments (line 2138)
    # Getting the type of 'e' (line 2138)
    e_84328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2138, 32), 'e', False)
    # Processing the call keyword arguments (line 2138)
    kwargs_84329 = {}
    # Getting the type of 're_1' (line 2138)
    re_1_84326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2138, 21), 're_1', False)
    # Obtaining the member 'match' of a type (line 2138)
    match_84327 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2138, 21), re_1_84326, 'match')
    # Calling match(args, kwargs) (line 2138)
    match_call_result_84330 = invoke(stypy.reporting.localization.Localization(__file__, 2138, 21), match_84327, *[e_84328], **kwargs_84329)
    
    # Assigning a type to the variable 'm1' (line 2138)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2138, 16), 'm1', match_call_result_84330)
    
    # Getting the type of 'm1' (line 2139)
    m1_84331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2139, 22), 'm1')
    # Testing the type of an if condition (line 2139)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2139, 16), m1_84331)
    # SSA begins for while statement (line 2139)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    # Assigning a BinOp to a Name (line 2140):
    
    # Assigning a BinOp to a Name (line 2140):
    str_84332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2140, 25), 'str', '%s(%s)%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2141)
    tuple_84333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2141, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2141)
    # Adding element type (line 2141)
    
    # Call to group(...): (line 2141)
    # Processing the call arguments (line 2141)
    str_84336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2141, 33), 'str', 'before')
    # Processing the call keyword arguments (line 2141)
    kwargs_84337 = {}
    # Getting the type of 'm1' (line 2141)
    m1_84334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2141, 24), 'm1', False)
    # Obtaining the member 'group' of a type (line 2141)
    group_84335 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2141, 24), m1_84334, 'group')
    # Calling group(args, kwargs) (line 2141)
    group_call_result_84338 = invoke(stypy.reporting.localization.Localization(__file__, 2141, 24), group_84335, *[str_84336], **kwargs_84337)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2141, 24), tuple_84333, group_call_result_84338)
    # Adding element type (line 2141)
    float_84339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2141, 44), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2141, 24), tuple_84333, float_84339)
    # Adding element type (line 2141)
    
    # Call to group(...): (line 2141)
    # Processing the call arguments (line 2141)
    str_84342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2141, 58), 'str', 'after')
    # Processing the call keyword arguments (line 2141)
    kwargs_84343 = {}
    # Getting the type of 'm1' (line 2141)
    m1_84340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2141, 49), 'm1', False)
    # Obtaining the member 'group' of a type (line 2141)
    group_84341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2141, 49), m1_84340, 'group')
    # Calling group(args, kwargs) (line 2141)
    group_call_result_84344 = invoke(stypy.reporting.localization.Localization(__file__, 2141, 49), group_84341, *[str_84342], **kwargs_84343)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2141, 24), tuple_84333, group_call_result_84344)
    
    # Applying the binary operator '%' (line 2140)
    result_mod_84345 = python_operator(stypy.reporting.localization.Localization(__file__, 2140, 25), '%', str_84332, tuple_84333)
    
    # Assigning a type to the variable 'ee' (line 2140)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2140, 20), 'ee', result_mod_84345)
    
    # Assigning a Call to a Name (line 2142):
    
    # Assigning a Call to a Name (line 2142):
    
    # Call to match(...): (line 2142)
    # Processing the call arguments (line 2142)
    # Getting the type of 'ee' (line 2142)
    ee_84348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2142, 36), 'ee', False)
    # Processing the call keyword arguments (line 2142)
    kwargs_84349 = {}
    # Getting the type of 're_1' (line 2142)
    re_1_84346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2142, 25), 're_1', False)
    # Obtaining the member 'match' of a type (line 2142)
    match_84347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2142, 25), re_1_84346, 'match')
    # Calling match(args, kwargs) (line 2142)
    match_call_result_84350 = invoke(stypy.reporting.localization.Localization(__file__, 2142, 25), match_84347, *[ee_84348], **kwargs_84349)
    
    # Assigning a type to the variable 'm1' (line 2142)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2142, 20), 'm1', match_call_result_84350)
    # SSA join for while statement (line 2139)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2143):
    
    # Assigning a Call to a Name (line 2143):
    
    # Call to myeval(...): (line 2143)
    # Processing the call arguments (line 2143)
    # Getting the type of 'ee' (line 2143)
    ee_84352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2143, 27), 'ee', False)
    
    # Obtaining an instance of the builtin type 'dict' (line 2143)
    dict_84353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2143, 31), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2143)
    
    
    # Obtaining an instance of the builtin type 'dict' (line 2143)
    dict_84354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2143, 35), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2143)
    
    # Processing the call keyword arguments (line 2143)
    kwargs_84355 = {}
    # Getting the type of 'myeval' (line 2143)
    myeval_84351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2143, 20), 'myeval', False)
    # Calling myeval(args, kwargs) (line 2143)
    myeval_call_result_84356 = invoke(stypy.reporting.localization.Localization(__file__, 2143, 20), myeval_84351, *[ee_84352, dict_84353, dict_84354], **kwargs_84355)
    
    # Assigning a type to the variable 'c' (line 2143)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2143, 16), 'c', myeval_call_result_84356)
    
    # Assigning a Call to a Name (line 2145):
    
    # Assigning a Call to a Name (line 2145):
    
    # Call to match(...): (line 2145)
    # Processing the call arguments (line 2145)
    # Getting the type of 'e' (line 2145)
    e_84359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2145, 32), 'e', False)
    # Processing the call keyword arguments (line 2145)
    kwargs_84360 = {}
    # Getting the type of 're_1' (line 2145)
    re_1_84357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2145, 21), 're_1', False)
    # Obtaining the member 'match' of a type (line 2145)
    match_84358 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2145, 21), re_1_84357, 'match')
    # Calling match(args, kwargs) (line 2145)
    match_call_result_84361 = invoke(stypy.reporting.localization.Localization(__file__, 2145, 21), match_84358, *[e_84359], **kwargs_84360)
    
    # Assigning a type to the variable 'm1' (line 2145)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2145, 16), 'm1', match_call_result_84361)
    
    # Getting the type of 'm1' (line 2146)
    m1_84362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2146, 22), 'm1')
    # Testing the type of an if condition (line 2146)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2146, 16), m1_84362)
    # SSA begins for while statement (line 2146)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    # Assigning a BinOp to a Name (line 2147):
    
    # Assigning a BinOp to a Name (line 2147):
    str_84363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2147, 25), 'str', '%s(%s)%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2148)
    tuple_84364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2148, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2148)
    # Adding element type (line 2148)
    
    # Call to group(...): (line 2148)
    # Processing the call arguments (line 2148)
    str_84367 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2148, 33), 'str', 'before')
    # Processing the call keyword arguments (line 2148)
    kwargs_84368 = {}
    # Getting the type of 'm1' (line 2148)
    m1_84365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2148, 24), 'm1', False)
    # Obtaining the member 'group' of a type (line 2148)
    group_84366 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2148, 24), m1_84365, 'group')
    # Calling group(args, kwargs) (line 2148)
    group_call_result_84369 = invoke(stypy.reporting.localization.Localization(__file__, 2148, 24), group_84366, *[str_84367], **kwargs_84368)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2148, 24), tuple_84364, group_call_result_84369)
    # Adding element type (line 2148)
    float_84370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2148, 44), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2148, 24), tuple_84364, float_84370)
    # Adding element type (line 2148)
    
    # Call to group(...): (line 2148)
    # Processing the call arguments (line 2148)
    str_84373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2148, 58), 'str', 'after')
    # Processing the call keyword arguments (line 2148)
    kwargs_84374 = {}
    # Getting the type of 'm1' (line 2148)
    m1_84371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2148, 49), 'm1', False)
    # Obtaining the member 'group' of a type (line 2148)
    group_84372 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2148, 49), m1_84371, 'group')
    # Calling group(args, kwargs) (line 2148)
    group_call_result_84375 = invoke(stypy.reporting.localization.Localization(__file__, 2148, 49), group_84372, *[str_84373], **kwargs_84374)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2148, 24), tuple_84364, group_call_result_84375)
    
    # Applying the binary operator '%' (line 2147)
    result_mod_84376 = python_operator(stypy.reporting.localization.Localization(__file__, 2147, 25), '%', str_84363, tuple_84364)
    
    # Assigning a type to the variable 'ee' (line 2147)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2147, 20), 'ee', result_mod_84376)
    
    # Assigning a Call to a Name (line 2149):
    
    # Assigning a Call to a Name (line 2149):
    
    # Call to match(...): (line 2149)
    # Processing the call arguments (line 2149)
    # Getting the type of 'ee' (line 2149)
    ee_84379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2149, 36), 'ee', False)
    # Processing the call keyword arguments (line 2149)
    kwargs_84380 = {}
    # Getting the type of 're_1' (line 2149)
    re_1_84377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2149, 25), 're_1', False)
    # Obtaining the member 'match' of a type (line 2149)
    match_84378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2149, 25), re_1_84377, 'match')
    # Calling match(args, kwargs) (line 2149)
    match_call_result_84381 = invoke(stypy.reporting.localization.Localization(__file__, 2149, 25), match_84378, *[ee_84379], **kwargs_84380)
    
    # Assigning a type to the variable 'm1' (line 2149)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2149, 20), 'm1', match_call_result_84381)
    # SSA join for while statement (line 2146)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2150):
    
    # Assigning a Call to a Name (line 2150):
    
    # Call to myeval(...): (line 2150)
    # Processing the call arguments (line 2150)
    # Getting the type of 'ee' (line 2150)
    ee_84383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2150, 28), 'ee', False)
    
    # Obtaining an instance of the builtin type 'dict' (line 2150)
    dict_84384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2150, 32), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2150)
    
    
    # Obtaining an instance of the builtin type 'dict' (line 2150)
    dict_84385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2150, 36), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2150)
    
    # Processing the call keyword arguments (line 2150)
    kwargs_84386 = {}
    # Getting the type of 'myeval' (line 2150)
    myeval_84382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2150, 21), 'myeval', False)
    # Calling myeval(args, kwargs) (line 2150)
    myeval_call_result_84387 = invoke(stypy.reporting.localization.Localization(__file__, 2150, 21), myeval_84382, *[ee_84383, dict_84384, dict_84385], **kwargs_84386)
    
    # Assigning a type to the variable 'c2' (line 2150)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2150, 16), 'c2', myeval_call_result_84387)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'a' (line 2151)
    a_84388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2151, 20), 'a')
    float_84389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2151, 24), 'float')
    # Applying the binary operator '*' (line 2151)
    result_mul_84390 = python_operator(stypy.reporting.localization.Localization(__file__, 2151, 20), '*', a_84388, float_84389)
    
    # Getting the type of 'b' (line 2151)
    b_84391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2151, 30), 'b')
    # Applying the binary operator '+' (line 2151)
    result_add_84392 = python_operator(stypy.reporting.localization.Localization(__file__, 2151, 20), '+', result_mul_84390, b_84391)
    
    # Getting the type of 'c' (line 2151)
    c_84393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2151, 35), 'c')
    # Applying the binary operator '==' (line 2151)
    result_eq_84394 = python_operator(stypy.reporting.localization.Localization(__file__, 2151, 20), '==', result_add_84392, c_84393)
    
    
    # Getting the type of 'a' (line 2151)
    a_84395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2151, 41), 'a')
    float_84396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2151, 45), 'float')
    # Applying the binary operator '*' (line 2151)
    result_mul_84397 = python_operator(stypy.reporting.localization.Localization(__file__, 2151, 41), '*', a_84395, float_84396)
    
    # Getting the type of 'b' (line 2151)
    b_84398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2151, 51), 'b')
    # Applying the binary operator '+' (line 2151)
    result_add_84399 = python_operator(stypy.reporting.localization.Localization(__file__, 2151, 41), '+', result_mul_84397, b_84398)
    
    # Getting the type of 'c2' (line 2151)
    c2_84400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2151, 56), 'c2')
    # Applying the binary operator '==' (line 2151)
    result_eq_84401 = python_operator(stypy.reporting.localization.Localization(__file__, 2151, 41), '==', result_add_84399, c2_84400)
    
    # Applying the binary operator 'and' (line 2151)
    result_and_keyword_84402 = python_operator(stypy.reporting.localization.Localization(__file__, 2151, 20), 'and', result_eq_84394, result_eq_84401)
    
    # Testing the type of an if condition (line 2151)
    if_condition_84403 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2151, 16), result_and_keyword_84402)
    # Assigning a type to the variable 'if_condition_84403' (line 2151)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2151, 16), 'if_condition_84403', if_condition_84403)
    # SSA begins for if statement (line 2151)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2152)
    tuple_84404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2152, 27), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2152)
    # Adding element type (line 2152)
    # Getting the type of 'a' (line 2152)
    a_84405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2152, 27), 'a')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2152, 27), tuple_84404, a_84405)
    # Adding element type (line 2152)
    # Getting the type of 'b' (line 2152)
    b_84406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2152, 30), 'b')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2152, 27), tuple_84404, b_84406)
    # Adding element type (line 2152)
    # Getting the type of 'x' (line 2152)
    x_84407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2152, 33), 'x')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2152, 27), tuple_84404, x_84407)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2152)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2152, 20), 'stypy_return_type', tuple_84404)
    # SSA join for if statement (line 2151)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the except part of a try statement (line 2125)
    # SSA branch for the except '<any exception>' branch of a try statement (line 2125)
    module_type_store.open_ssa_branch('except')
    pass
    # SSA join for try-except statement (line 2125)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2124)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 2156)
    tuple_84408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2156, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2156)
    # Adding element type (line 2156)
    # Getting the type of 'None' (line 2156)
    None_84409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2156, 11), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2156, 11), tuple_84408, None_84409)
    # Adding element type (line 2156)
    # Getting the type of 'None' (line 2156)
    None_84410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2156, 17), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2156, 11), tuple_84408, None_84410)
    # Adding element type (line 2156)
    # Getting the type of 'None' (line 2156)
    None_84411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2156, 23), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2156, 11), tuple_84408, None_84411)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2156)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2156, 4), 'stypy_return_type', tuple_84408)
    
    # ################# End of 'getlincoef(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'getlincoef' in the type store
    # Getting the type of 'stypy_return_type' (line 2107)
    stypy_return_type_84412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2107, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_84412)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'getlincoef'
    return stypy_return_type_84412

# Assigning a type to the variable 'getlincoef' (line 2107)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2107, 0), 'getlincoef', getlincoef)

# Assigning a Attribute to a Name (line 2158):

# Assigning a Attribute to a Name (line 2158):

# Call to compile(...): (line 2158)
# Processing the call arguments (line 2158)
str_84415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2158, 28), 'str', '\\A[a-z]\\w*\\Z')
# Processing the call keyword arguments (line 2158)
kwargs_84416 = {}
# Getting the type of 're' (line 2158)
re_84413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2158, 17), 're', False)
# Obtaining the member 'compile' of a type (line 2158)
compile_84414 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2158, 17), re_84413, 'compile')
# Calling compile(args, kwargs) (line 2158)
compile_call_result_84417 = invoke(stypy.reporting.localization.Localization(__file__, 2158, 17), compile_84414, *[str_84415], **kwargs_84416)

# Obtaining the member 'match' of a type (line 2158)
match_84418 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2158, 17), compile_call_result_84417, 'match')
# Assigning a type to the variable '_varname_match' (line 2158)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2158, 0), '_varname_match', match_84418)

@norecursion
def getarrlen(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    str_84419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2161, 29), 'str', '*')
    defaults = [str_84419]
    # Create a new context for function 'getarrlen'
    module_type_store = module_type_store.open_function_context('getarrlen', 2161, 0, False)
    
    # Passed parameters checking function
    getarrlen.stypy_localization = localization
    getarrlen.stypy_type_of_self = None
    getarrlen.stypy_type_store = module_type_store
    getarrlen.stypy_function_name = 'getarrlen'
    getarrlen.stypy_param_names_list = ['dl', 'args', 'star']
    getarrlen.stypy_varargs_param_name = None
    getarrlen.stypy_kwargs_param_name = None
    getarrlen.stypy_call_defaults = defaults
    getarrlen.stypy_call_varargs = varargs
    getarrlen.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'getarrlen', ['dl', 'args', 'star'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'getarrlen', localization, ['dl', 'args', 'star'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'getarrlen(...)' code ##################

    
    # Assigning a List to a Name (line 2162):
    
    # Assigning a List to a Name (line 2162):
    
    # Obtaining an instance of the builtin type 'list' (line 2162)
    list_84420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2162, 10), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2162)
    
    # Assigning a type to the variable 'edl' (line 2162)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2162, 4), 'edl', list_84420)
    
    
    # SSA begins for try-except statement (line 2163)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to append(...): (line 2164)
    # Processing the call arguments (line 2164)
    
    # Call to myeval(...): (line 2164)
    # Processing the call arguments (line 2164)
    
    # Obtaining the type of the subscript
    int_84424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2164, 29), 'int')
    # Getting the type of 'dl' (line 2164)
    dl_84425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2164, 26), 'dl', False)
    # Obtaining the member '__getitem__' of a type (line 2164)
    getitem___84426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2164, 26), dl_84425, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2164)
    subscript_call_result_84427 = invoke(stypy.reporting.localization.Localization(__file__, 2164, 26), getitem___84426, int_84424)
    
    
    # Obtaining an instance of the builtin type 'dict' (line 2164)
    dict_84428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2164, 33), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2164)
    
    
    # Obtaining an instance of the builtin type 'dict' (line 2164)
    dict_84429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2164, 37), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2164)
    
    # Processing the call keyword arguments (line 2164)
    kwargs_84430 = {}
    # Getting the type of 'myeval' (line 2164)
    myeval_84423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2164, 19), 'myeval', False)
    # Calling myeval(args, kwargs) (line 2164)
    myeval_call_result_84431 = invoke(stypy.reporting.localization.Localization(__file__, 2164, 19), myeval_84423, *[subscript_call_result_84427, dict_84428, dict_84429], **kwargs_84430)
    
    # Processing the call keyword arguments (line 2164)
    kwargs_84432 = {}
    # Getting the type of 'edl' (line 2164)
    edl_84421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2164, 8), 'edl', False)
    # Obtaining the member 'append' of a type (line 2164)
    append_84422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2164, 8), edl_84421, 'append')
    # Calling append(args, kwargs) (line 2164)
    append_call_result_84433 = invoke(stypy.reporting.localization.Localization(__file__, 2164, 8), append_84422, *[myeval_call_result_84431], **kwargs_84432)
    
    # SSA branch for the except part of a try statement (line 2163)
    # SSA branch for the except '<any exception>' branch of a try statement (line 2163)
    module_type_store.open_ssa_branch('except')
    
    # Call to append(...): (line 2166)
    # Processing the call arguments (line 2166)
    
    # Obtaining the type of the subscript
    int_84436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2166, 22), 'int')
    # Getting the type of 'dl' (line 2166)
    dl_84437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2166, 19), 'dl', False)
    # Obtaining the member '__getitem__' of a type (line 2166)
    getitem___84438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2166, 19), dl_84437, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2166)
    subscript_call_result_84439 = invoke(stypy.reporting.localization.Localization(__file__, 2166, 19), getitem___84438, int_84436)
    
    # Processing the call keyword arguments (line 2166)
    kwargs_84440 = {}
    # Getting the type of 'edl' (line 2166)
    edl_84434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2166, 8), 'edl', False)
    # Obtaining the member 'append' of a type (line 2166)
    append_84435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2166, 8), edl_84434, 'append')
    # Calling append(args, kwargs) (line 2166)
    append_call_result_84441 = invoke(stypy.reporting.localization.Localization(__file__, 2166, 8), append_84435, *[subscript_call_result_84439], **kwargs_84440)
    
    # SSA join for try-except statement (line 2163)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # SSA begins for try-except statement (line 2167)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to append(...): (line 2168)
    # Processing the call arguments (line 2168)
    
    # Call to myeval(...): (line 2168)
    # Processing the call arguments (line 2168)
    
    # Obtaining the type of the subscript
    int_84445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2168, 29), 'int')
    # Getting the type of 'dl' (line 2168)
    dl_84446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2168, 26), 'dl', False)
    # Obtaining the member '__getitem__' of a type (line 2168)
    getitem___84447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2168, 26), dl_84446, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2168)
    subscript_call_result_84448 = invoke(stypy.reporting.localization.Localization(__file__, 2168, 26), getitem___84447, int_84445)
    
    
    # Obtaining an instance of the builtin type 'dict' (line 2168)
    dict_84449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2168, 33), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2168)
    
    
    # Obtaining an instance of the builtin type 'dict' (line 2168)
    dict_84450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2168, 37), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2168)
    
    # Processing the call keyword arguments (line 2168)
    kwargs_84451 = {}
    # Getting the type of 'myeval' (line 2168)
    myeval_84444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2168, 19), 'myeval', False)
    # Calling myeval(args, kwargs) (line 2168)
    myeval_call_result_84452 = invoke(stypy.reporting.localization.Localization(__file__, 2168, 19), myeval_84444, *[subscript_call_result_84448, dict_84449, dict_84450], **kwargs_84451)
    
    # Processing the call keyword arguments (line 2168)
    kwargs_84453 = {}
    # Getting the type of 'edl' (line 2168)
    edl_84442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2168, 8), 'edl', False)
    # Obtaining the member 'append' of a type (line 2168)
    append_84443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2168, 8), edl_84442, 'append')
    # Calling append(args, kwargs) (line 2168)
    append_call_result_84454 = invoke(stypy.reporting.localization.Localization(__file__, 2168, 8), append_84443, *[myeval_call_result_84452], **kwargs_84453)
    
    # SSA branch for the except part of a try statement (line 2167)
    # SSA branch for the except '<any exception>' branch of a try statement (line 2167)
    module_type_store.open_ssa_branch('except')
    
    # Call to append(...): (line 2170)
    # Processing the call arguments (line 2170)
    
    # Obtaining the type of the subscript
    int_84457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2170, 22), 'int')
    # Getting the type of 'dl' (line 2170)
    dl_84458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2170, 19), 'dl', False)
    # Obtaining the member '__getitem__' of a type (line 2170)
    getitem___84459 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2170, 19), dl_84458, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2170)
    subscript_call_result_84460 = invoke(stypy.reporting.localization.Localization(__file__, 2170, 19), getitem___84459, int_84457)
    
    # Processing the call keyword arguments (line 2170)
    kwargs_84461 = {}
    # Getting the type of 'edl' (line 2170)
    edl_84455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2170, 8), 'edl', False)
    # Obtaining the member 'append' of a type (line 2170)
    append_84456 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2170, 8), edl_84455, 'append')
    # Calling append(args, kwargs) (line 2170)
    append_call_result_84462 = invoke(stypy.reporting.localization.Localization(__file__, 2170, 8), append_84456, *[subscript_call_result_84460], **kwargs_84461)
    
    # SSA join for try-except statement (line 2167)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Type idiom detected: calculating its left and rigth part (line 2171)
    # Getting the type of 'int' (line 2171)
    int_84463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2171, 26), 'int')
    
    # Obtaining the type of the subscript
    int_84464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2171, 22), 'int')
    # Getting the type of 'edl' (line 2171)
    edl_84465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2171, 18), 'edl')
    # Obtaining the member '__getitem__' of a type (line 2171)
    getitem___84466 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2171, 18), edl_84465, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2171)
    subscript_call_result_84467 = invoke(stypy.reporting.localization.Localization(__file__, 2171, 18), getitem___84466, int_84464)
    
    
    (may_be_84468, more_types_in_union_84469) = may_be_subtype(int_84463, subscript_call_result_84467)

    if may_be_84468:

        if more_types_in_union_84469:
            # Runtime conditional SSA (line 2171)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a BinOp to a Name (line 2172):
        
        # Assigning a BinOp to a Name (line 2172):
        int_84470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2172, 13), 'int')
        
        # Obtaining the type of the subscript
        int_84471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2172, 21), 'int')
        # Getting the type of 'edl' (line 2172)
        edl_84472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2172, 17), 'edl')
        # Obtaining the member '__getitem__' of a type (line 2172)
        getitem___84473 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2172, 17), edl_84472, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2172)
        subscript_call_result_84474 = invoke(stypy.reporting.localization.Localization(__file__, 2172, 17), getitem___84473, int_84471)
        
        # Applying the binary operator '-' (line 2172)
        result_sub_84475 = python_operator(stypy.reporting.localization.Localization(__file__, 2172, 13), '-', int_84470, subscript_call_result_84474)
        
        # Assigning a type to the variable 'p1' (line 2172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2172, 8), 'p1', result_sub_84475)
        
        
        # Getting the type of 'p1' (line 2173)
        p1_84476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2173, 11), 'p1')
        int_84477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2173, 17), 'int')
        # Applying the binary operator '==' (line 2173)
        result_eq_84478 = python_operator(stypy.reporting.localization.Localization(__file__, 2173, 11), '==', p1_84476, int_84477)
        
        # Testing the type of an if condition (line 2173)
        if_condition_84479 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2173, 8), result_eq_84478)
        # Assigning a type to the variable 'if_condition_84479' (line 2173)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2173, 8), 'if_condition_84479', if_condition_84479)
        # SSA begins for if statement (line 2173)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 2174):
        
        # Assigning a Call to a Name (line 2174):
        
        # Call to str(...): (line 2174)
        # Processing the call arguments (line 2174)
        
        # Obtaining the type of the subscript
        int_84481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2174, 23), 'int')
        # Getting the type of 'dl' (line 2174)
        dl_84482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2174, 20), 'dl', False)
        # Obtaining the member '__getitem__' of a type (line 2174)
        getitem___84483 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2174, 20), dl_84482, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2174)
        subscript_call_result_84484 = invoke(stypy.reporting.localization.Localization(__file__, 2174, 20), getitem___84483, int_84481)
        
        # Processing the call keyword arguments (line 2174)
        kwargs_84485 = {}
        # Getting the type of 'str' (line 2174)
        str_84480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2174, 16), 'str', False)
        # Calling str(args, kwargs) (line 2174)
        str_call_result_84486 = invoke(stypy.reporting.localization.Localization(__file__, 2174, 16), str_84480, *[subscript_call_result_84484], **kwargs_84485)
        
        # Assigning a type to the variable 'd' (line 2174)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2174, 12), 'd', str_call_result_84486)
        # SSA branch for the else part of an if statement (line 2173)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'p1' (line 2175)
        p1_84487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2175, 13), 'p1')
        int_84488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2175, 18), 'int')
        # Applying the binary operator '<' (line 2175)
        result_lt_84489 = python_operator(stypy.reporting.localization.Localization(__file__, 2175, 13), '<', p1_84487, int_84488)
        
        # Testing the type of an if condition (line 2175)
        if_condition_84490 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2175, 13), result_lt_84489)
        # Assigning a type to the variable 'if_condition_84490' (line 2175)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2175, 13), 'if_condition_84490', if_condition_84490)
        # SSA begins for if statement (line 2175)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 2176):
        
        # Assigning a BinOp to a Name (line 2176):
        str_84491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2176, 16), 'str', '%s-%s')
        
        # Obtaining an instance of the builtin type 'tuple' (line 2176)
        tuple_84492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2176, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2176)
        # Adding element type (line 2176)
        
        # Obtaining the type of the subscript
        int_84493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2176, 30), 'int')
        # Getting the type of 'dl' (line 2176)
        dl_84494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2176, 27), 'dl')
        # Obtaining the member '__getitem__' of a type (line 2176)
        getitem___84495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2176, 27), dl_84494, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2176)
        subscript_call_result_84496 = invoke(stypy.reporting.localization.Localization(__file__, 2176, 27), getitem___84495, int_84493)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2176, 27), tuple_84492, subscript_call_result_84496)
        # Adding element type (line 2176)
        
        # Getting the type of 'p1' (line 2176)
        p1_84497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2176, 35), 'p1')
        # Applying the 'usub' unary operator (line 2176)
        result___neg___84498 = python_operator(stypy.reporting.localization.Localization(__file__, 2176, 34), 'usub', p1_84497)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2176, 27), tuple_84492, result___neg___84498)
        
        # Applying the binary operator '%' (line 2176)
        result_mod_84499 = python_operator(stypy.reporting.localization.Localization(__file__, 2176, 16), '%', str_84491, tuple_84492)
        
        # Assigning a type to the variable 'd' (line 2176)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2176, 12), 'd', result_mod_84499)
        # SSA branch for the else part of an if statement (line 2175)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a BinOp to a Name (line 2178):
        
        # Assigning a BinOp to a Name (line 2178):
        str_84500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2178, 16), 'str', '%s+%s')
        
        # Obtaining an instance of the builtin type 'tuple' (line 2178)
        tuple_84501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2178, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2178)
        # Adding element type (line 2178)
        
        # Obtaining the type of the subscript
        int_84502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2178, 30), 'int')
        # Getting the type of 'dl' (line 2178)
        dl_84503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2178, 27), 'dl')
        # Obtaining the member '__getitem__' of a type (line 2178)
        getitem___84504 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2178, 27), dl_84503, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2178)
        subscript_call_result_84505 = invoke(stypy.reporting.localization.Localization(__file__, 2178, 27), getitem___84504, int_84502)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2178, 27), tuple_84501, subscript_call_result_84505)
        # Adding element type (line 2178)
        # Getting the type of 'p1' (line 2178)
        p1_84506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2178, 34), 'p1')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2178, 27), tuple_84501, p1_84506)
        
        # Applying the binary operator '%' (line 2178)
        result_mod_84507 = python_operator(stypy.reporting.localization.Localization(__file__, 2178, 16), '%', str_84500, tuple_84501)
        
        # Assigning a type to the variable 'd' (line 2178)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2178, 12), 'd', result_mod_84507)
        # SSA join for if statement (line 2175)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2173)
        module_type_store = module_type_store.join_ssa_context()
        

        if more_types_in_union_84469:
            # Runtime conditional SSA for else branch (line 2171)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_84468) or more_types_in_union_84469):
        
        # Type idiom detected: calculating its left and rigth part (line 2179)
        # Getting the type of 'int' (line 2179)
        int_84508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2179, 28), 'int')
        
        # Obtaining the type of the subscript
        int_84509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2179, 24), 'int')
        # Getting the type of 'edl' (line 2179)
        edl_84510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2179, 20), 'edl')
        # Obtaining the member '__getitem__' of a type (line 2179)
        getitem___84511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2179, 20), edl_84510, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2179)
        subscript_call_result_84512 = invoke(stypy.reporting.localization.Localization(__file__, 2179, 20), getitem___84511, int_84509)
        
        
        (may_be_84513, more_types_in_union_84514) = may_be_subtype(int_84508, subscript_call_result_84512)

        if may_be_84513:

            if more_types_in_union_84514:
                # Runtime conditional SSA (line 2179)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a BinOp to a Name (line 2180):
            
            # Assigning a BinOp to a Name (line 2180):
            int_84515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2180, 13), 'int')
            
            # Obtaining the type of the subscript
            int_84516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2180, 21), 'int')
            # Getting the type of 'edl' (line 2180)
            edl_84517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2180, 17), 'edl')
            # Obtaining the member '__getitem__' of a type (line 2180)
            getitem___84518 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2180, 17), edl_84517, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 2180)
            subscript_call_result_84519 = invoke(stypy.reporting.localization.Localization(__file__, 2180, 17), getitem___84518, int_84516)
            
            # Applying the binary operator '+' (line 2180)
            result_add_84520 = python_operator(stypy.reporting.localization.Localization(__file__, 2180, 13), '+', int_84515, subscript_call_result_84519)
            
            # Assigning a type to the variable 'p1' (line 2180)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2180, 8), 'p1', result_add_84520)
            
            
            # Getting the type of 'p1' (line 2181)
            p1_84521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2181, 11), 'p1')
            int_84522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2181, 17), 'int')
            # Applying the binary operator '==' (line 2181)
            result_eq_84523 = python_operator(stypy.reporting.localization.Localization(__file__, 2181, 11), '==', p1_84521, int_84522)
            
            # Testing the type of an if condition (line 2181)
            if_condition_84524 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2181, 8), result_eq_84523)
            # Assigning a type to the variable 'if_condition_84524' (line 2181)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2181, 8), 'if_condition_84524', if_condition_84524)
            # SSA begins for if statement (line 2181)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a BinOp to a Name (line 2182):
            
            # Assigning a BinOp to a Name (line 2182):
            str_84525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2182, 16), 'str', '-(%s)')
            
            # Obtaining the type of the subscript
            int_84526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2182, 30), 'int')
            # Getting the type of 'dl' (line 2182)
            dl_84527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2182, 27), 'dl')
            # Obtaining the member '__getitem__' of a type (line 2182)
            getitem___84528 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2182, 27), dl_84527, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 2182)
            subscript_call_result_84529 = invoke(stypy.reporting.localization.Localization(__file__, 2182, 27), getitem___84528, int_84526)
            
            # Applying the binary operator '%' (line 2182)
            result_mod_84530 = python_operator(stypy.reporting.localization.Localization(__file__, 2182, 16), '%', str_84525, subscript_call_result_84529)
            
            # Assigning a type to the variable 'd' (line 2182)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2182, 12), 'd', result_mod_84530)
            # SSA branch for the else part of an if statement (line 2181)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a BinOp to a Name (line 2184):
            
            # Assigning a BinOp to a Name (line 2184):
            str_84531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2184, 16), 'str', '%s-(%s)')
            
            # Obtaining an instance of the builtin type 'tuple' (line 2184)
            tuple_84532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2184, 29), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 2184)
            # Adding element type (line 2184)
            # Getting the type of 'p1' (line 2184)
            p1_84533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2184, 29), 'p1')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2184, 29), tuple_84532, p1_84533)
            # Adding element type (line 2184)
            
            # Obtaining the type of the subscript
            int_84534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2184, 36), 'int')
            # Getting the type of 'dl' (line 2184)
            dl_84535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2184, 33), 'dl')
            # Obtaining the member '__getitem__' of a type (line 2184)
            getitem___84536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2184, 33), dl_84535, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 2184)
            subscript_call_result_84537 = invoke(stypy.reporting.localization.Localization(__file__, 2184, 33), getitem___84536, int_84534)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2184, 29), tuple_84532, subscript_call_result_84537)
            
            # Applying the binary operator '%' (line 2184)
            result_mod_84538 = python_operator(stypy.reporting.localization.Localization(__file__, 2184, 16), '%', str_84531, tuple_84532)
            
            # Assigning a type to the variable 'd' (line 2184)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2184, 12), 'd', result_mod_84538)
            # SSA join for if statement (line 2181)
            module_type_store = module_type_store.join_ssa_context()
            

            if more_types_in_union_84514:
                # Runtime conditional SSA for else branch (line 2179)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_84513) or more_types_in_union_84514):
            
            # Assigning a BinOp to a Name (line 2186):
            
            # Assigning a BinOp to a Name (line 2186):
            str_84539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2186, 12), 'str', '%s-(%s)+1')
            
            # Obtaining an instance of the builtin type 'tuple' (line 2186)
            tuple_84540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2186, 27), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 2186)
            # Adding element type (line 2186)
            
            # Obtaining the type of the subscript
            int_84541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2186, 30), 'int')
            # Getting the type of 'dl' (line 2186)
            dl_84542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2186, 27), 'dl')
            # Obtaining the member '__getitem__' of a type (line 2186)
            getitem___84543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2186, 27), dl_84542, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 2186)
            subscript_call_result_84544 = invoke(stypy.reporting.localization.Localization(__file__, 2186, 27), getitem___84543, int_84541)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2186, 27), tuple_84540, subscript_call_result_84544)
            # Adding element type (line 2186)
            
            # Obtaining the type of the subscript
            int_84545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2186, 37), 'int')
            # Getting the type of 'dl' (line 2186)
            dl_84546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2186, 34), 'dl')
            # Obtaining the member '__getitem__' of a type (line 2186)
            getitem___84547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2186, 34), dl_84546, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 2186)
            subscript_call_result_84548 = invoke(stypy.reporting.localization.Localization(__file__, 2186, 34), getitem___84547, int_84545)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2186, 27), tuple_84540, subscript_call_result_84548)
            
            # Applying the binary operator '%' (line 2186)
            result_mod_84549 = python_operator(stypy.reporting.localization.Localization(__file__, 2186, 12), '%', str_84539, tuple_84540)
            
            # Assigning a type to the variable 'd' (line 2186)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2186, 8), 'd', result_mod_84549)

            if (may_be_84513 and more_types_in_union_84514):
                # SSA join for if statement (line 2179)
                module_type_store = module_type_store.join_ssa_context()


        

        if (may_be_84468 and more_types_in_union_84469):
            # SSA join for if statement (line 2171)
            module_type_store = module_type_store.join_ssa_context()


    
    
    
    # SSA begins for try-except statement (line 2187)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2188)
    tuple_84550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2188, 15), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2188)
    # Adding element type (line 2188)
    
    # Call to repr(...): (line 2188)
    # Processing the call arguments (line 2188)
    
    # Call to myeval(...): (line 2188)
    # Processing the call arguments (line 2188)
    # Getting the type of 'd' (line 2188)
    d_84553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2188, 27), 'd', False)
    
    # Obtaining an instance of the builtin type 'dict' (line 2188)
    dict_84554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2188, 30), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2188)
    
    
    # Obtaining an instance of the builtin type 'dict' (line 2188)
    dict_84555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2188, 34), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2188)
    
    # Processing the call keyword arguments (line 2188)
    kwargs_84556 = {}
    # Getting the type of 'myeval' (line 2188)
    myeval_84552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2188, 20), 'myeval', False)
    # Calling myeval(args, kwargs) (line 2188)
    myeval_call_result_84557 = invoke(stypy.reporting.localization.Localization(__file__, 2188, 20), myeval_84552, *[d_84553, dict_84554, dict_84555], **kwargs_84556)
    
    # Processing the call keyword arguments (line 2188)
    kwargs_84558 = {}
    # Getting the type of 'repr' (line 2188)
    repr_84551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2188, 15), 'repr', False)
    # Calling repr(args, kwargs) (line 2188)
    repr_call_result_84559 = invoke(stypy.reporting.localization.Localization(__file__, 2188, 15), repr_84551, *[myeval_call_result_84557], **kwargs_84558)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2188, 15), tuple_84550, repr_call_result_84559)
    # Adding element type (line 2188)
    # Getting the type of 'None' (line 2188)
    None_84560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2188, 40), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2188, 15), tuple_84550, None_84560)
    # Adding element type (line 2188)
    # Getting the type of 'None' (line 2188)
    None_84561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2188, 46), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2188, 15), tuple_84550, None_84561)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2188)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2188, 8), 'stypy_return_type', tuple_84550)
    # SSA branch for the except part of a try statement (line 2187)
    # SSA branch for the except '<any exception>' branch of a try statement (line 2187)
    module_type_store.open_ssa_branch('except')
    pass
    # SSA join for try-except statement (line 2187)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Tuple to a Tuple (line 2191):
    
    # Assigning a Call to a Name (line 2191):
    
    # Call to getlincoef(...): (line 2191)
    # Processing the call arguments (line 2191)
    
    # Obtaining the type of the subscript
    int_84563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2191, 27), 'int')
    # Getting the type of 'dl' (line 2191)
    dl_84564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2191, 24), 'dl', False)
    # Obtaining the member '__getitem__' of a type (line 2191)
    getitem___84565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2191, 24), dl_84564, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2191)
    subscript_call_result_84566 = invoke(stypy.reporting.localization.Localization(__file__, 2191, 24), getitem___84565, int_84563)
    
    # Getting the type of 'args' (line 2191)
    args_84567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2191, 31), 'args', False)
    # Processing the call keyword arguments (line 2191)
    kwargs_84568 = {}
    # Getting the type of 'getlincoef' (line 2191)
    getlincoef_84562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2191, 13), 'getlincoef', False)
    # Calling getlincoef(args, kwargs) (line 2191)
    getlincoef_call_result_84569 = invoke(stypy.reporting.localization.Localization(__file__, 2191, 13), getlincoef_84562, *[subscript_call_result_84566, args_84567], **kwargs_84568)
    
    # Assigning a type to the variable 'tuple_assignment_75807' (line 2191)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2191, 4), 'tuple_assignment_75807', getlincoef_call_result_84569)
    
    # Assigning a Call to a Name (line 2191):
    
    # Call to getlincoef(...): (line 2191)
    # Processing the call arguments (line 2191)
    
    # Obtaining the type of the subscript
    int_84571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2191, 52), 'int')
    # Getting the type of 'dl' (line 2191)
    dl_84572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2191, 49), 'dl', False)
    # Obtaining the member '__getitem__' of a type (line 2191)
    getitem___84573 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2191, 49), dl_84572, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2191)
    subscript_call_result_84574 = invoke(stypy.reporting.localization.Localization(__file__, 2191, 49), getitem___84573, int_84571)
    
    # Getting the type of 'args' (line 2191)
    args_84575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2191, 56), 'args', False)
    # Processing the call keyword arguments (line 2191)
    kwargs_84576 = {}
    # Getting the type of 'getlincoef' (line 2191)
    getlincoef_84570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2191, 38), 'getlincoef', False)
    # Calling getlincoef(args, kwargs) (line 2191)
    getlincoef_call_result_84577 = invoke(stypy.reporting.localization.Localization(__file__, 2191, 38), getlincoef_84570, *[subscript_call_result_84574, args_84575], **kwargs_84576)
    
    # Assigning a type to the variable 'tuple_assignment_75808' (line 2191)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2191, 4), 'tuple_assignment_75808', getlincoef_call_result_84577)
    
    # Assigning a Name to a Name (line 2191):
    # Getting the type of 'tuple_assignment_75807' (line 2191)
    tuple_assignment_75807_84578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2191, 4), 'tuple_assignment_75807')
    # Assigning a type to the variable 'd1' (line 2191)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2191, 4), 'd1', tuple_assignment_75807_84578)
    
    # Assigning a Name to a Name (line 2191):
    # Getting the type of 'tuple_assignment_75808' (line 2191)
    tuple_assignment_75808_84579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2191, 4), 'tuple_assignment_75808')
    # Assigning a type to the variable 'd2' (line 2191)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2191, 8), 'd2', tuple_assignment_75808_84579)
    
    
    # Getting the type of 'None' (line 2192)
    None_84580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2192, 7), 'None')
    
    # Obtaining an instance of the builtin type 'list' (line 2192)
    list_84581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2192, 19), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2192)
    # Adding element type (line 2192)
    
    # Obtaining the type of the subscript
    int_84582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2192, 23), 'int')
    # Getting the type of 'd1' (line 2192)
    d1_84583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2192, 20), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2192)
    getitem___84584 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2192, 20), d1_84583, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2192)
    subscript_call_result_84585 = invoke(stypy.reporting.localization.Localization(__file__, 2192, 20), getitem___84584, int_84582)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2192, 19), list_84581, subscript_call_result_84585)
    # Adding element type (line 2192)
    
    # Obtaining the type of the subscript
    int_84586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2192, 30), 'int')
    # Getting the type of 'd2' (line 2192)
    d2_84587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2192, 27), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2192)
    getitem___84588 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2192, 27), d2_84587, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2192)
    subscript_call_result_84589 = invoke(stypy.reporting.localization.Localization(__file__, 2192, 27), getitem___84588, int_84586)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2192, 19), list_84581, subscript_call_result_84589)
    
    # Applying the binary operator 'notin' (line 2192)
    result_contains_84590 = python_operator(stypy.reporting.localization.Localization(__file__, 2192, 7), 'notin', None_84580, list_84581)
    
    # Testing the type of an if condition (line 2192)
    if_condition_84591 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2192, 4), result_contains_84590)
    # Assigning a type to the variable 'if_condition_84591' (line 2192)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2192, 4), 'if_condition_84591', if_condition_84591)
    # SSA begins for if statement (line 2192)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 2193)
    tuple_84592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2193, 12), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2193)
    # Adding element type (line 2193)
    
    # Obtaining the type of the subscript
    int_84593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2193, 15), 'int')
    # Getting the type of 'd1' (line 2193)
    d1_84594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 12), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2193)
    getitem___84595 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2193, 12), d1_84594, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2193)
    subscript_call_result_84596 = invoke(stypy.reporting.localization.Localization(__file__, 2193, 12), getitem___84595, int_84593)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2193, 12), tuple_84592, subscript_call_result_84596)
    # Adding element type (line 2193)
    
    # Obtaining the type of the subscript
    int_84597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2193, 22), 'int')
    # Getting the type of 'd2' (line 2193)
    d2_84598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 19), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2193)
    getitem___84599 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2193, 19), d2_84598, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2193)
    subscript_call_result_84600 = invoke(stypy.reporting.localization.Localization(__file__, 2193, 19), getitem___84599, int_84597)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2193, 12), tuple_84592, subscript_call_result_84600)
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 2193)
    tuple_84601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2193, 30), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2193)
    # Adding element type (line 2193)
    int_84602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2193, 30), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2193, 30), tuple_84601, int_84602)
    # Adding element type (line 2193)
    int_84603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2193, 33), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2193, 30), tuple_84601, int_84603)
    
    # Applying the binary operator '==' (line 2193)
    result_eq_84604 = python_operator(stypy.reporting.localization.Localization(__file__, 2193, 11), '==', tuple_84592, tuple_84601)
    
    # Testing the type of an if condition (line 2193)
    if_condition_84605 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2193, 8), result_eq_84604)
    # Assigning a type to the variable 'if_condition_84605' (line 2193)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2193, 8), 'if_condition_84605', if_condition_84605)
    # SSA begins for if statement (line 2193)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2194)
    tuple_84606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2194, 19), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2194)
    # Adding element type (line 2194)
    
    # Call to repr(...): (line 2194)
    # Processing the call arguments (line 2194)
    
    # Obtaining the type of the subscript
    int_84608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2194, 27), 'int')
    # Getting the type of 'd2' (line 2194)
    d2_84609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2194, 24), 'd2', False)
    # Obtaining the member '__getitem__' of a type (line 2194)
    getitem___84610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2194, 24), d2_84609, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2194)
    subscript_call_result_84611 = invoke(stypy.reporting.localization.Localization(__file__, 2194, 24), getitem___84610, int_84608)
    
    
    # Obtaining the type of the subscript
    int_84612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2194, 35), 'int')
    # Getting the type of 'd1' (line 2194)
    d1_84613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2194, 32), 'd1', False)
    # Obtaining the member '__getitem__' of a type (line 2194)
    getitem___84614 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2194, 32), d1_84613, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2194)
    subscript_call_result_84615 = invoke(stypy.reporting.localization.Localization(__file__, 2194, 32), getitem___84614, int_84612)
    
    # Applying the binary operator '-' (line 2194)
    result_sub_84616 = python_operator(stypy.reporting.localization.Localization(__file__, 2194, 24), '-', subscript_call_result_84611, subscript_call_result_84615)
    
    int_84617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2194, 40), 'int')
    # Applying the binary operator '+' (line 2194)
    result_add_84618 = python_operator(stypy.reporting.localization.Localization(__file__, 2194, 38), '+', result_sub_84616, int_84617)
    
    # Processing the call keyword arguments (line 2194)
    kwargs_84619 = {}
    # Getting the type of 'repr' (line 2194)
    repr_84607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2194, 19), 'repr', False)
    # Calling repr(args, kwargs) (line 2194)
    repr_call_result_84620 = invoke(stypy.reporting.localization.Localization(__file__, 2194, 19), repr_84607, *[result_add_84618], **kwargs_84619)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2194, 19), tuple_84606, repr_call_result_84620)
    # Adding element type (line 2194)
    # Getting the type of 'None' (line 2194)
    None_84621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2194, 44), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2194, 19), tuple_84606, None_84621)
    # Adding element type (line 2194)
    # Getting the type of 'None' (line 2194)
    None_84622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2194, 50), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2194, 19), tuple_84606, None_84622)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2194)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2194, 12), 'stypy_return_type', tuple_84606)
    # SSA join for if statement (line 2193)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 2195):
    
    # Assigning a BinOp to a Name (line 2195):
    
    # Obtaining the type of the subscript
    int_84623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2195, 15), 'int')
    # Getting the type of 'd2' (line 2195)
    d2_84624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2195, 12), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2195)
    getitem___84625 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2195, 12), d2_84624, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2195)
    subscript_call_result_84626 = invoke(stypy.reporting.localization.Localization(__file__, 2195, 12), getitem___84625, int_84623)
    
    
    # Obtaining the type of the subscript
    int_84627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2195, 23), 'int')
    # Getting the type of 'd1' (line 2195)
    d1_84628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2195, 20), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2195)
    getitem___84629 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2195, 20), d1_84628, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2195)
    subscript_call_result_84630 = invoke(stypy.reporting.localization.Localization(__file__, 2195, 20), getitem___84629, int_84627)
    
    # Applying the binary operator '-' (line 2195)
    result_sub_84631 = python_operator(stypy.reporting.localization.Localization(__file__, 2195, 12), '-', subscript_call_result_84626, subscript_call_result_84630)
    
    int_84632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2195, 28), 'int')
    # Applying the binary operator '+' (line 2195)
    result_add_84633 = python_operator(stypy.reporting.localization.Localization(__file__, 2195, 26), '+', result_sub_84631, int_84632)
    
    # Assigning a type to the variable 'b' (line 2195)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2195, 8), 'b', result_add_84633)
    
    # Assigning a Tuple to a Name (line 2196):
    
    # Assigning a Tuple to a Name (line 2196):
    
    # Obtaining an instance of the builtin type 'tuple' (line 2196)
    tuple_84634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2196, 14), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2196)
    # Adding element type (line 2196)
    
    # Obtaining the type of the subscript
    int_84635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2196, 17), 'int')
    # Getting the type of 'd1' (line 2196)
    d1_84636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2196, 14), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2196)
    getitem___84637 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2196, 14), d1_84636, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2196)
    subscript_call_result_84638 = invoke(stypy.reporting.localization.Localization(__file__, 2196, 14), getitem___84637, int_84635)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2196, 14), tuple_84634, subscript_call_result_84638)
    # Adding element type (line 2196)
    int_84639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2196, 21), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2196, 14), tuple_84634, int_84639)
    # Adding element type (line 2196)
    
    # Obtaining the type of the subscript
    int_84640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2196, 27), 'int')
    # Getting the type of 'd1' (line 2196)
    d1_84641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2196, 24), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2196)
    getitem___84642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2196, 24), d1_84641, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2196)
    subscript_call_result_84643 = invoke(stypy.reporting.localization.Localization(__file__, 2196, 24), getitem___84642, int_84640)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2196, 14), tuple_84634, subscript_call_result_84643)
    
    # Assigning a type to the variable 'd1' (line 2196)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2196, 8), 'd1', tuple_84634)
    
    # Assigning a Tuple to a Name (line 2197):
    
    # Assigning a Tuple to a Name (line 2197):
    
    # Obtaining an instance of the builtin type 'tuple' (line 2197)
    tuple_84644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2197, 14), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2197)
    # Adding element type (line 2197)
    
    # Obtaining the type of the subscript
    int_84645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2197, 17), 'int')
    # Getting the type of 'd2' (line 2197)
    d2_84646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2197, 14), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2197)
    getitem___84647 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2197, 14), d2_84646, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2197)
    subscript_call_result_84648 = invoke(stypy.reporting.localization.Localization(__file__, 2197, 14), getitem___84647, int_84645)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2197, 14), tuple_84644, subscript_call_result_84648)
    # Adding element type (line 2197)
    # Getting the type of 'b' (line 2197)
    b_84649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2197, 21), 'b')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2197, 14), tuple_84644, b_84649)
    # Adding element type (line 2197)
    
    # Obtaining the type of the subscript
    int_84650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2197, 27), 'int')
    # Getting the type of 'd2' (line 2197)
    d2_84651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2197, 24), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2197)
    getitem___84652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2197, 24), d2_84651, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2197)
    subscript_call_result_84653 = invoke(stypy.reporting.localization.Localization(__file__, 2197, 24), getitem___84652, int_84650)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2197, 14), tuple_84644, subscript_call_result_84653)
    
    # Assigning a type to the variable 'd2' (line 2197)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2197, 8), 'd2', tuple_84644)
    
    
    # Evaluating a boolean operation
    
    
    # Obtaining the type of the subscript
    int_84654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2198, 14), 'int')
    # Getting the type of 'd1' (line 2198)
    d1_84655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2198, 11), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2198)
    getitem___84656 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2198, 11), d1_84655, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2198)
    subscript_call_result_84657 = invoke(stypy.reporting.localization.Localization(__file__, 2198, 11), getitem___84656, int_84654)
    
    int_84658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2198, 20), 'int')
    # Applying the binary operator '==' (line 2198)
    result_eq_84659 = python_operator(stypy.reporting.localization.Localization(__file__, 2198, 11), '==', subscript_call_result_84657, int_84658)
    
    
    
    # Obtaining the type of the subscript
    int_84660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2198, 29), 'int')
    # Getting the type of 'd2' (line 2198)
    d2_84661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2198, 26), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2198)
    getitem___84662 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2198, 26), d2_84661, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2198)
    subscript_call_result_84663 = invoke(stypy.reporting.localization.Localization(__file__, 2198, 26), getitem___84662, int_84660)
    
    # Getting the type of 'args' (line 2198)
    args_84664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2198, 35), 'args')
    # Applying the binary operator 'in' (line 2198)
    result_contains_84665 = python_operator(stypy.reporting.localization.Localization(__file__, 2198, 26), 'in', subscript_call_result_84663, args_84664)
    
    # Applying the binary operator 'and' (line 2198)
    result_and_keyword_84666 = python_operator(stypy.reporting.localization.Localization(__file__, 2198, 11), 'and', result_eq_84659, result_contains_84665)
    
    # Testing the type of an if condition (line 2198)
    if_condition_84667 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2198, 8), result_and_keyword_84666)
    # Assigning a type to the variable 'if_condition_84667' (line 2198)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2198, 8), 'if_condition_84667', if_condition_84667)
    # SSA begins for if statement (line 2198)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'b' (line 2199)
    b_84668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2199, 15), 'b')
    int_84669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2199, 19), 'int')
    # Applying the binary operator '<' (line 2199)
    result_lt_84670 = python_operator(stypy.reporting.localization.Localization(__file__, 2199, 15), '<', b_84668, int_84669)
    
    # Testing the type of an if condition (line 2199)
    if_condition_84671 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2199, 12), result_lt_84670)
    # Assigning a type to the variable 'if_condition_84671' (line 2199)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2199, 12), 'if_condition_84671', if_condition_84671)
    # SSA begins for if statement (line 2199)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2200)
    tuple_84672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2200, 23), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2200)
    # Adding element type (line 2200)
    str_84673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2200, 23), 'str', '%s * %s - %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2200)
    tuple_84674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2200, 41), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2200)
    # Adding element type (line 2200)
    
    # Obtaining the type of the subscript
    int_84675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2200, 44), 'int')
    # Getting the type of 'd2' (line 2200)
    d2_84676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2200, 41), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2200)
    getitem___84677 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2200, 41), d2_84676, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2200)
    subscript_call_result_84678 = invoke(stypy.reporting.localization.Localization(__file__, 2200, 41), getitem___84677, int_84675)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2200, 41), tuple_84674, subscript_call_result_84678)
    # Adding element type (line 2200)
    
    # Obtaining the type of the subscript
    int_84679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2200, 51), 'int')
    # Getting the type of 'd2' (line 2200)
    d2_84680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2200, 48), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2200)
    getitem___84681 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2200, 48), d2_84680, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2200)
    subscript_call_result_84682 = invoke(stypy.reporting.localization.Localization(__file__, 2200, 48), getitem___84681, int_84679)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2200, 41), tuple_84674, subscript_call_result_84682)
    # Adding element type (line 2200)
    
    # Getting the type of 'b' (line 2200)
    b_84683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2200, 56), 'b')
    # Applying the 'usub' unary operator (line 2200)
    result___neg___84684 = python_operator(stypy.reporting.localization.Localization(__file__, 2200, 55), 'usub', b_84683)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2200, 41), tuple_84674, result___neg___84684)
    
    # Applying the binary operator '%' (line 2200)
    result_mod_84685 = python_operator(stypy.reporting.localization.Localization(__file__, 2200, 23), '%', str_84673, tuple_84674)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2200, 23), tuple_84672, result_mod_84685)
    # Adding element type (line 2200)
    
    # Obtaining the type of the subscript
    int_84686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2200, 63), 'int')
    # Getting the type of 'd2' (line 2200)
    d2_84687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2200, 60), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2200)
    getitem___84688 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2200, 60), d2_84687, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2200)
    subscript_call_result_84689 = invoke(stypy.reporting.localization.Localization(__file__, 2200, 60), getitem___84688, int_84686)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2200, 23), tuple_84672, subscript_call_result_84689)
    # Adding element type (line 2200)
    str_84690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2200, 67), 'str', '+%s)/(%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2200)
    tuple_84691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2200, 82), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2200)
    # Adding element type (line 2200)
    
    # Getting the type of 'b' (line 2200)
    b_84692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2200, 83), 'b')
    # Applying the 'usub' unary operator (line 2200)
    result___neg___84693 = python_operator(stypy.reporting.localization.Localization(__file__, 2200, 82), 'usub', b_84692)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2200, 82), tuple_84691, result___neg___84693)
    # Adding element type (line 2200)
    
    # Obtaining the type of the subscript
    int_84694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2200, 89), 'int')
    # Getting the type of 'd2' (line 2200)
    d2_84695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2200, 86), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2200)
    getitem___84696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2200, 86), d2_84695, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2200)
    subscript_call_result_84697 = invoke(stypy.reporting.localization.Localization(__file__, 2200, 86), getitem___84696, int_84694)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2200, 82), tuple_84691, subscript_call_result_84697)
    
    # Applying the binary operator '%' (line 2200)
    result_mod_84698 = python_operator(stypy.reporting.localization.Localization(__file__, 2200, 67), '%', str_84690, tuple_84691)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2200, 23), tuple_84672, result_mod_84698)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2200)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2200, 16), 'stypy_return_type', tuple_84672)
    # SSA branch for the else part of an if statement (line 2199)
    module_type_store.open_ssa_branch('else')
    
    # Getting the type of 'b' (line 2201)
    b_84699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2201, 17), 'b')
    # Testing the type of an if condition (line 2201)
    if_condition_84700 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2201, 17), b_84699)
    # Assigning a type to the variable 'if_condition_84700' (line 2201)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2201, 17), 'if_condition_84700', if_condition_84700)
    # SSA begins for if statement (line 2201)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2202)
    tuple_84701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2202, 23), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2202)
    # Adding element type (line 2202)
    str_84702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2202, 23), 'str', '%s * %s + %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2202)
    tuple_84703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2202, 41), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2202)
    # Adding element type (line 2202)
    
    # Obtaining the type of the subscript
    int_84704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2202, 44), 'int')
    # Getting the type of 'd2' (line 2202)
    d2_84705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2202, 41), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2202)
    getitem___84706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2202, 41), d2_84705, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2202)
    subscript_call_result_84707 = invoke(stypy.reporting.localization.Localization(__file__, 2202, 41), getitem___84706, int_84704)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2202, 41), tuple_84703, subscript_call_result_84707)
    # Adding element type (line 2202)
    
    # Obtaining the type of the subscript
    int_84708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2202, 51), 'int')
    # Getting the type of 'd2' (line 2202)
    d2_84709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2202, 48), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2202)
    getitem___84710 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2202, 48), d2_84709, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2202)
    subscript_call_result_84711 = invoke(stypy.reporting.localization.Localization(__file__, 2202, 48), getitem___84710, int_84708)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2202, 41), tuple_84703, subscript_call_result_84711)
    # Adding element type (line 2202)
    # Getting the type of 'b' (line 2202)
    b_84712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2202, 55), 'b')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2202, 41), tuple_84703, b_84712)
    
    # Applying the binary operator '%' (line 2202)
    result_mod_84713 = python_operator(stypy.reporting.localization.Localization(__file__, 2202, 23), '%', str_84702, tuple_84703)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2202, 23), tuple_84701, result_mod_84713)
    # Adding element type (line 2202)
    
    # Obtaining the type of the subscript
    int_84714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2202, 62), 'int')
    # Getting the type of 'd2' (line 2202)
    d2_84715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2202, 59), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2202)
    getitem___84716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2202, 59), d2_84715, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2202)
    subscript_call_result_84717 = invoke(stypy.reporting.localization.Localization(__file__, 2202, 59), getitem___84716, int_84714)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2202, 23), tuple_84701, subscript_call_result_84717)
    # Adding element type (line 2202)
    str_84718 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2202, 66), 'str', '-%s)/(%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2202)
    tuple_84719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2202, 81), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2202)
    # Adding element type (line 2202)
    # Getting the type of 'b' (line 2202)
    b_84720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2202, 81), 'b')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2202, 81), tuple_84719, b_84720)
    # Adding element type (line 2202)
    
    # Obtaining the type of the subscript
    int_84721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2202, 87), 'int')
    # Getting the type of 'd2' (line 2202)
    d2_84722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2202, 84), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2202)
    getitem___84723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2202, 84), d2_84722, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2202)
    subscript_call_result_84724 = invoke(stypy.reporting.localization.Localization(__file__, 2202, 84), getitem___84723, int_84721)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2202, 81), tuple_84719, subscript_call_result_84724)
    
    # Applying the binary operator '%' (line 2202)
    result_mod_84725 = python_operator(stypy.reporting.localization.Localization(__file__, 2202, 66), '%', str_84718, tuple_84719)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2202, 23), tuple_84701, result_mod_84725)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2202)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2202, 16), 'stypy_return_type', tuple_84701)
    # SSA branch for the else part of an if statement (line 2201)
    module_type_store.open_ssa_branch('else')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2204)
    tuple_84726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2204, 23), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2204)
    # Adding element type (line 2204)
    str_84727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2204, 23), 'str', '%s * %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2204)
    tuple_84728 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2204, 36), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2204)
    # Adding element type (line 2204)
    
    # Obtaining the type of the subscript
    int_84729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2204, 39), 'int')
    # Getting the type of 'd2' (line 2204)
    d2_84730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2204, 36), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2204)
    getitem___84731 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2204, 36), d2_84730, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2204)
    subscript_call_result_84732 = invoke(stypy.reporting.localization.Localization(__file__, 2204, 36), getitem___84731, int_84729)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2204, 36), tuple_84728, subscript_call_result_84732)
    # Adding element type (line 2204)
    
    # Obtaining the type of the subscript
    int_84733 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2204, 46), 'int')
    # Getting the type of 'd2' (line 2204)
    d2_84734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2204, 43), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2204)
    getitem___84735 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2204, 43), d2_84734, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2204)
    subscript_call_result_84736 = invoke(stypy.reporting.localization.Localization(__file__, 2204, 43), getitem___84735, int_84733)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2204, 36), tuple_84728, subscript_call_result_84736)
    
    # Applying the binary operator '%' (line 2204)
    result_mod_84737 = python_operator(stypy.reporting.localization.Localization(__file__, 2204, 23), '%', str_84727, tuple_84728)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2204, 23), tuple_84726, result_mod_84737)
    # Adding element type (line 2204)
    
    # Obtaining the type of the subscript
    int_84738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2204, 54), 'int')
    # Getting the type of 'd2' (line 2204)
    d2_84739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2204, 51), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2204)
    getitem___84740 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2204, 51), d2_84739, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2204)
    subscript_call_result_84741 = invoke(stypy.reporting.localization.Localization(__file__, 2204, 51), getitem___84740, int_84738)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2204, 23), tuple_84726, subscript_call_result_84741)
    # Adding element type (line 2204)
    str_84742 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2204, 58), 'str', ')/(%s)')
    
    # Obtaining the type of the subscript
    int_84743 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2204, 73), 'int')
    # Getting the type of 'd2' (line 2204)
    d2_84744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2204, 70), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2204)
    getitem___84745 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2204, 70), d2_84744, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2204)
    subscript_call_result_84746 = invoke(stypy.reporting.localization.Localization(__file__, 2204, 70), getitem___84745, int_84743)
    
    # Applying the binary operator '%' (line 2204)
    result_mod_84747 = python_operator(stypy.reporting.localization.Localization(__file__, 2204, 58), '%', str_84742, subscript_call_result_84746)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2204, 23), tuple_84726, result_mod_84747)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2204)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2204, 16), 'stypy_return_type', tuple_84726)
    # SSA join for if statement (line 2201)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2199)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2198)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    
    # Obtaining the type of the subscript
    int_84748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2205, 14), 'int')
    # Getting the type of 'd2' (line 2205)
    d2_84749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2205, 11), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2205)
    getitem___84750 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2205, 11), d2_84749, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2205)
    subscript_call_result_84751 = invoke(stypy.reporting.localization.Localization(__file__, 2205, 11), getitem___84750, int_84748)
    
    int_84752 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2205, 20), 'int')
    # Applying the binary operator '==' (line 2205)
    result_eq_84753 = python_operator(stypy.reporting.localization.Localization(__file__, 2205, 11), '==', subscript_call_result_84751, int_84752)
    
    
    
    # Obtaining the type of the subscript
    int_84754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2205, 29), 'int')
    # Getting the type of 'd1' (line 2205)
    d1_84755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2205, 26), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2205)
    getitem___84756 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2205, 26), d1_84755, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2205)
    subscript_call_result_84757 = invoke(stypy.reporting.localization.Localization(__file__, 2205, 26), getitem___84756, int_84754)
    
    # Getting the type of 'args' (line 2205)
    args_84758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2205, 35), 'args')
    # Applying the binary operator 'in' (line 2205)
    result_contains_84759 = python_operator(stypy.reporting.localization.Localization(__file__, 2205, 26), 'in', subscript_call_result_84757, args_84758)
    
    # Applying the binary operator 'and' (line 2205)
    result_and_keyword_84760 = python_operator(stypy.reporting.localization.Localization(__file__, 2205, 11), 'and', result_eq_84753, result_contains_84759)
    
    # Testing the type of an if condition (line 2205)
    if_condition_84761 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2205, 8), result_and_keyword_84760)
    # Assigning a type to the variable 'if_condition_84761' (line 2205)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2205, 8), 'if_condition_84761', if_condition_84761)
    # SSA begins for if statement (line 2205)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'b' (line 2207)
    b_84762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2207, 15), 'b')
    int_84763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2207, 19), 'int')
    # Applying the binary operator '<' (line 2207)
    result_lt_84764 = python_operator(stypy.reporting.localization.Localization(__file__, 2207, 15), '<', b_84762, int_84763)
    
    # Testing the type of an if condition (line 2207)
    if_condition_84765 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2207, 12), result_lt_84764)
    # Assigning a type to the variable 'if_condition_84765' (line 2207)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2207, 12), 'if_condition_84765', if_condition_84765)
    # SSA begins for if statement (line 2207)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2208)
    tuple_84766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2208, 23), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2208)
    # Adding element type (line 2208)
    str_84767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2208, 23), 'str', '%s * %s - %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2208)
    tuple_84768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2208, 41), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2208)
    # Adding element type (line 2208)
    
    
    # Obtaining the type of the subscript
    int_84769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2208, 45), 'int')
    # Getting the type of 'd1' (line 2208)
    d1_84770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2208, 42), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2208)
    getitem___84771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2208, 42), d1_84770, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2208)
    subscript_call_result_84772 = invoke(stypy.reporting.localization.Localization(__file__, 2208, 42), getitem___84771, int_84769)
    
    # Applying the 'usub' unary operator (line 2208)
    result___neg___84773 = python_operator(stypy.reporting.localization.Localization(__file__, 2208, 41), 'usub', subscript_call_result_84772)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2208, 41), tuple_84768, result___neg___84773)
    # Adding element type (line 2208)
    
    # Obtaining the type of the subscript
    int_84774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2208, 52), 'int')
    # Getting the type of 'd1' (line 2208)
    d1_84775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2208, 49), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2208)
    getitem___84776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2208, 49), d1_84775, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2208)
    subscript_call_result_84777 = invoke(stypy.reporting.localization.Localization(__file__, 2208, 49), getitem___84776, int_84774)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2208, 41), tuple_84768, subscript_call_result_84777)
    # Adding element type (line 2208)
    
    # Getting the type of 'b' (line 2208)
    b_84778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2208, 57), 'b')
    # Applying the 'usub' unary operator (line 2208)
    result___neg___84779 = python_operator(stypy.reporting.localization.Localization(__file__, 2208, 56), 'usub', b_84778)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2208, 41), tuple_84768, result___neg___84779)
    
    # Applying the binary operator '%' (line 2208)
    result_mod_84780 = python_operator(stypy.reporting.localization.Localization(__file__, 2208, 23), '%', str_84767, tuple_84768)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2208, 23), tuple_84766, result_mod_84780)
    # Adding element type (line 2208)
    
    # Obtaining the type of the subscript
    int_84781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2208, 64), 'int')
    # Getting the type of 'd1' (line 2208)
    d1_84782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2208, 61), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2208)
    getitem___84783 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2208, 61), d1_84782, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2208)
    subscript_call_result_84784 = invoke(stypy.reporting.localization.Localization(__file__, 2208, 61), getitem___84783, int_84781)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2208, 23), tuple_84766, subscript_call_result_84784)
    # Adding element type (line 2208)
    str_84785 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2208, 68), 'str', '+%s)/(%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2208)
    tuple_84786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2208, 83), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2208)
    # Adding element type (line 2208)
    
    # Getting the type of 'b' (line 2208)
    b_84787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2208, 84), 'b')
    # Applying the 'usub' unary operator (line 2208)
    result___neg___84788 = python_operator(stypy.reporting.localization.Localization(__file__, 2208, 83), 'usub', b_84787)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2208, 83), tuple_84786, result___neg___84788)
    # Adding element type (line 2208)
    
    
    # Obtaining the type of the subscript
    int_84789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2208, 91), 'int')
    # Getting the type of 'd1' (line 2208)
    d1_84790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2208, 88), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2208)
    getitem___84791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2208, 88), d1_84790, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2208)
    subscript_call_result_84792 = invoke(stypy.reporting.localization.Localization(__file__, 2208, 88), getitem___84791, int_84789)
    
    # Applying the 'usub' unary operator (line 2208)
    result___neg___84793 = python_operator(stypy.reporting.localization.Localization(__file__, 2208, 87), 'usub', subscript_call_result_84792)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2208, 83), tuple_84786, result___neg___84793)
    
    # Applying the binary operator '%' (line 2208)
    result_mod_84794 = python_operator(stypy.reporting.localization.Localization(__file__, 2208, 68), '%', str_84785, tuple_84786)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2208, 23), tuple_84766, result_mod_84794)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2208)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2208, 16), 'stypy_return_type', tuple_84766)
    # SSA branch for the else part of an if statement (line 2207)
    module_type_store.open_ssa_branch('else')
    
    # Getting the type of 'b' (line 2209)
    b_84795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2209, 17), 'b')
    # Testing the type of an if condition (line 2209)
    if_condition_84796 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2209, 17), b_84795)
    # Assigning a type to the variable 'if_condition_84796' (line 2209)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2209, 17), 'if_condition_84796', if_condition_84796)
    # SSA begins for if statement (line 2209)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2210)
    tuple_84797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2210, 23), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2210)
    # Adding element type (line 2210)
    str_84798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2210, 23), 'str', '%s * %s + %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2210)
    tuple_84799 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2210, 41), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2210)
    # Adding element type (line 2210)
    
    
    # Obtaining the type of the subscript
    int_84800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2210, 45), 'int')
    # Getting the type of 'd1' (line 2210)
    d1_84801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2210, 42), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2210)
    getitem___84802 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2210, 42), d1_84801, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2210)
    subscript_call_result_84803 = invoke(stypy.reporting.localization.Localization(__file__, 2210, 42), getitem___84802, int_84800)
    
    # Applying the 'usub' unary operator (line 2210)
    result___neg___84804 = python_operator(stypy.reporting.localization.Localization(__file__, 2210, 41), 'usub', subscript_call_result_84803)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2210, 41), tuple_84799, result___neg___84804)
    # Adding element type (line 2210)
    
    # Obtaining the type of the subscript
    int_84805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2210, 52), 'int')
    # Getting the type of 'd1' (line 2210)
    d1_84806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2210, 49), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2210)
    getitem___84807 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2210, 49), d1_84806, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2210)
    subscript_call_result_84808 = invoke(stypy.reporting.localization.Localization(__file__, 2210, 49), getitem___84807, int_84805)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2210, 41), tuple_84799, subscript_call_result_84808)
    # Adding element type (line 2210)
    # Getting the type of 'b' (line 2210)
    b_84809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2210, 56), 'b')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2210, 41), tuple_84799, b_84809)
    
    # Applying the binary operator '%' (line 2210)
    result_mod_84810 = python_operator(stypy.reporting.localization.Localization(__file__, 2210, 23), '%', str_84798, tuple_84799)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2210, 23), tuple_84797, result_mod_84810)
    # Adding element type (line 2210)
    
    # Obtaining the type of the subscript
    int_84811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2210, 63), 'int')
    # Getting the type of 'd1' (line 2210)
    d1_84812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2210, 60), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2210)
    getitem___84813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2210, 60), d1_84812, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2210)
    subscript_call_result_84814 = invoke(stypy.reporting.localization.Localization(__file__, 2210, 60), getitem___84813, int_84811)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2210, 23), tuple_84797, subscript_call_result_84814)
    # Adding element type (line 2210)
    str_84815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2210, 67), 'str', '-%s)/(%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2210)
    tuple_84816 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2210, 82), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2210)
    # Adding element type (line 2210)
    # Getting the type of 'b' (line 2210)
    b_84817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2210, 82), 'b')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2210, 82), tuple_84816, b_84817)
    # Adding element type (line 2210)
    
    
    # Obtaining the type of the subscript
    int_84818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2210, 89), 'int')
    # Getting the type of 'd1' (line 2210)
    d1_84819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2210, 86), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2210)
    getitem___84820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2210, 86), d1_84819, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2210)
    subscript_call_result_84821 = invoke(stypy.reporting.localization.Localization(__file__, 2210, 86), getitem___84820, int_84818)
    
    # Applying the 'usub' unary operator (line 2210)
    result___neg___84822 = python_operator(stypy.reporting.localization.Localization(__file__, 2210, 85), 'usub', subscript_call_result_84821)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2210, 82), tuple_84816, result___neg___84822)
    
    # Applying the binary operator '%' (line 2210)
    result_mod_84823 = python_operator(stypy.reporting.localization.Localization(__file__, 2210, 67), '%', str_84815, tuple_84816)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2210, 23), tuple_84797, result_mod_84823)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2210)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2210, 16), 'stypy_return_type', tuple_84797)
    # SSA branch for the else part of an if statement (line 2209)
    module_type_store.open_ssa_branch('else')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2212)
    tuple_84824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2212, 23), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2212)
    # Adding element type (line 2212)
    str_84825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2212, 23), 'str', '%s * %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2212)
    tuple_84826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2212, 36), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2212)
    # Adding element type (line 2212)
    
    
    # Obtaining the type of the subscript
    int_84827 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2212, 40), 'int')
    # Getting the type of 'd1' (line 2212)
    d1_84828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2212, 37), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2212)
    getitem___84829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2212, 37), d1_84828, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2212)
    subscript_call_result_84830 = invoke(stypy.reporting.localization.Localization(__file__, 2212, 37), getitem___84829, int_84827)
    
    # Applying the 'usub' unary operator (line 2212)
    result___neg___84831 = python_operator(stypy.reporting.localization.Localization(__file__, 2212, 36), 'usub', subscript_call_result_84830)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2212, 36), tuple_84826, result___neg___84831)
    # Adding element type (line 2212)
    
    # Obtaining the type of the subscript
    int_84832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2212, 47), 'int')
    # Getting the type of 'd1' (line 2212)
    d1_84833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2212, 44), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2212)
    getitem___84834 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2212, 44), d1_84833, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2212)
    subscript_call_result_84835 = invoke(stypy.reporting.localization.Localization(__file__, 2212, 44), getitem___84834, int_84832)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2212, 36), tuple_84826, subscript_call_result_84835)
    
    # Applying the binary operator '%' (line 2212)
    result_mod_84836 = python_operator(stypy.reporting.localization.Localization(__file__, 2212, 23), '%', str_84825, tuple_84826)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2212, 23), tuple_84824, result_mod_84836)
    # Adding element type (line 2212)
    
    # Obtaining the type of the subscript
    int_84837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2212, 55), 'int')
    # Getting the type of 'd1' (line 2212)
    d1_84838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2212, 52), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2212)
    getitem___84839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2212, 52), d1_84838, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2212)
    subscript_call_result_84840 = invoke(stypy.reporting.localization.Localization(__file__, 2212, 52), getitem___84839, int_84837)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2212, 23), tuple_84824, subscript_call_result_84840)
    # Adding element type (line 2212)
    str_84841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2212, 59), 'str', ')/(%s)')
    
    
    # Obtaining the type of the subscript
    int_84842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2212, 75), 'int')
    # Getting the type of 'd1' (line 2212)
    d1_84843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2212, 72), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2212)
    getitem___84844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2212, 72), d1_84843, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2212)
    subscript_call_result_84845 = invoke(stypy.reporting.localization.Localization(__file__, 2212, 72), getitem___84844, int_84842)
    
    # Applying the 'usub' unary operator (line 2212)
    result___neg___84846 = python_operator(stypy.reporting.localization.Localization(__file__, 2212, 71), 'usub', subscript_call_result_84845)
    
    # Applying the binary operator '%' (line 2212)
    result_mod_84847 = python_operator(stypy.reporting.localization.Localization(__file__, 2212, 59), '%', str_84841, result___neg___84846)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2212, 23), tuple_84824, result_mod_84847)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2212)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2212, 16), 'stypy_return_type', tuple_84824)
    # SSA join for if statement (line 2209)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2207)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2205)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    
    # Obtaining the type of the subscript
    int_84848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2213, 14), 'int')
    # Getting the type of 'd1' (line 2213)
    d1_84849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2213, 11), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2213)
    getitem___84850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2213, 11), d1_84849, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2213)
    subscript_call_result_84851 = invoke(stypy.reporting.localization.Localization(__file__, 2213, 11), getitem___84850, int_84848)
    
    
    # Obtaining the type of the subscript
    int_84852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2213, 23), 'int')
    # Getting the type of 'd2' (line 2213)
    d2_84853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2213, 20), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2213)
    getitem___84854 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2213, 20), d2_84853, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2213)
    subscript_call_result_84855 = invoke(stypy.reporting.localization.Localization(__file__, 2213, 20), getitem___84854, int_84852)
    
    # Applying the binary operator '==' (line 2213)
    result_eq_84856 = python_operator(stypy.reporting.localization.Localization(__file__, 2213, 11), '==', subscript_call_result_84851, subscript_call_result_84855)
    
    
    
    # Obtaining the type of the subscript
    int_84857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2213, 33), 'int')
    # Getting the type of 'd1' (line 2213)
    d1_84858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2213, 30), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2213)
    getitem___84859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2213, 30), d1_84858, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2213)
    subscript_call_result_84860 = invoke(stypy.reporting.localization.Localization(__file__, 2213, 30), getitem___84859, int_84857)
    
    # Getting the type of 'args' (line 2213)
    args_84861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2213, 39), 'args')
    # Applying the binary operator 'in' (line 2213)
    result_contains_84862 = python_operator(stypy.reporting.localization.Localization(__file__, 2213, 30), 'in', subscript_call_result_84860, args_84861)
    
    # Applying the binary operator 'and' (line 2213)
    result_and_keyword_84863 = python_operator(stypy.reporting.localization.Localization(__file__, 2213, 11), 'and', result_eq_84856, result_contains_84862)
    
    # Testing the type of an if condition (line 2213)
    if_condition_84864 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2213, 8), result_and_keyword_84863)
    # Assigning a type to the variable 'if_condition_84864' (line 2213)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2213, 8), 'if_condition_84864', if_condition_84864)
    # SSA begins for if statement (line 2213)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 2214):
    
    # Assigning a BinOp to a Name (line 2214):
    
    # Obtaining the type of the subscript
    int_84865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2214, 19), 'int')
    # Getting the type of 'd2' (line 2214)
    d2_84866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2214, 16), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2214)
    getitem___84867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2214, 16), d2_84866, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2214)
    subscript_call_result_84868 = invoke(stypy.reporting.localization.Localization(__file__, 2214, 16), getitem___84867, int_84865)
    
    
    # Obtaining the type of the subscript
    int_84869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2214, 27), 'int')
    # Getting the type of 'd1' (line 2214)
    d1_84870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2214, 24), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2214)
    getitem___84871 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2214, 24), d1_84870, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2214)
    subscript_call_result_84872 = invoke(stypy.reporting.localization.Localization(__file__, 2214, 24), getitem___84871, int_84869)
    
    # Applying the binary operator '-' (line 2214)
    result_sub_84873 = python_operator(stypy.reporting.localization.Localization(__file__, 2214, 16), '-', subscript_call_result_84868, subscript_call_result_84872)
    
    # Assigning a type to the variable 'a' (line 2214)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2214, 12), 'a', result_sub_84873)
    
    
    # Getting the type of 'a' (line 2215)
    a_84874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2215, 19), 'a')
    # Applying the 'not' unary operator (line 2215)
    result_not__84875 = python_operator(stypy.reporting.localization.Localization(__file__, 2215, 15), 'not', a_84874)
    
    # Testing the type of an if condition (line 2215)
    if_condition_84876 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2215, 12), result_not__84875)
    # Assigning a type to the variable 'if_condition_84876' (line 2215)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2215, 12), 'if_condition_84876', if_condition_84876)
    # SSA begins for if statement (line 2215)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2216)
    tuple_84877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2216, 23), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2216)
    # Adding element type (line 2216)
    
    # Call to repr(...): (line 2216)
    # Processing the call arguments (line 2216)
    # Getting the type of 'b' (line 2216)
    b_84879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2216, 28), 'b', False)
    # Processing the call keyword arguments (line 2216)
    kwargs_84880 = {}
    # Getting the type of 'repr' (line 2216)
    repr_84878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2216, 23), 'repr', False)
    # Calling repr(args, kwargs) (line 2216)
    repr_call_result_84881 = invoke(stypy.reporting.localization.Localization(__file__, 2216, 23), repr_84878, *[b_84879], **kwargs_84880)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2216, 23), tuple_84877, repr_call_result_84881)
    # Adding element type (line 2216)
    # Getting the type of 'None' (line 2216)
    None_84882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2216, 32), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2216, 23), tuple_84877, None_84882)
    # Adding element type (line 2216)
    # Getting the type of 'None' (line 2216)
    None_84883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2216, 38), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2216, 23), tuple_84877, None_84883)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2216)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2216, 16), 'stypy_return_type', tuple_84877)
    # SSA join for if statement (line 2215)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'b' (line 2217)
    b_84884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2217, 15), 'b')
    int_84885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2217, 19), 'int')
    # Applying the binary operator '<' (line 2217)
    result_lt_84886 = python_operator(stypy.reporting.localization.Localization(__file__, 2217, 15), '<', b_84884, int_84885)
    
    # Testing the type of an if condition (line 2217)
    if_condition_84887 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2217, 12), result_lt_84886)
    # Assigning a type to the variable 'if_condition_84887' (line 2217)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2217, 12), 'if_condition_84887', if_condition_84887)
    # SSA begins for if statement (line 2217)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2218)
    tuple_84888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2218, 23), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2218)
    # Adding element type (line 2218)
    str_84889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2218, 23), 'str', '%s * %s - %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2218)
    tuple_84890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2218, 41), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2218)
    # Adding element type (line 2218)
    # Getting the type of 'a' (line 2218)
    a_84891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2218, 41), 'a')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2218, 41), tuple_84890, a_84891)
    # Adding element type (line 2218)
    
    # Obtaining the type of the subscript
    int_84892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2218, 47), 'int')
    # Getting the type of 'd1' (line 2218)
    d1_84893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2218, 44), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2218)
    getitem___84894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2218, 44), d1_84893, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2218)
    subscript_call_result_84895 = invoke(stypy.reporting.localization.Localization(__file__, 2218, 44), getitem___84894, int_84892)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2218, 41), tuple_84890, subscript_call_result_84895)
    # Adding element type (line 2218)
    
    # Getting the type of 'b' (line 2218)
    b_84896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2218, 52), 'b')
    # Applying the 'usub' unary operator (line 2218)
    result___neg___84897 = python_operator(stypy.reporting.localization.Localization(__file__, 2218, 51), 'usub', b_84896)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2218, 41), tuple_84890, result___neg___84897)
    
    # Applying the binary operator '%' (line 2218)
    result_mod_84898 = python_operator(stypy.reporting.localization.Localization(__file__, 2218, 23), '%', str_84889, tuple_84890)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2218, 23), tuple_84888, result_mod_84898)
    # Adding element type (line 2218)
    
    # Obtaining the type of the subscript
    int_84899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2218, 59), 'int')
    # Getting the type of 'd2' (line 2218)
    d2_84900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2218, 56), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2218)
    getitem___84901 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2218, 56), d2_84900, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2218)
    subscript_call_result_84902 = invoke(stypy.reporting.localization.Localization(__file__, 2218, 56), getitem___84901, int_84899)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2218, 23), tuple_84888, subscript_call_result_84902)
    # Adding element type (line 2218)
    str_84903 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2218, 63), 'str', '+%s)/(%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2218)
    tuple_84904 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2218, 78), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2218)
    # Adding element type (line 2218)
    
    # Getting the type of 'b' (line 2218)
    b_84905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2218, 79), 'b')
    # Applying the 'usub' unary operator (line 2218)
    result___neg___84906 = python_operator(stypy.reporting.localization.Localization(__file__, 2218, 78), 'usub', b_84905)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2218, 78), tuple_84904, result___neg___84906)
    # Adding element type (line 2218)
    # Getting the type of 'a' (line 2218)
    a_84907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2218, 82), 'a')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2218, 78), tuple_84904, a_84907)
    
    # Applying the binary operator '%' (line 2218)
    result_mod_84908 = python_operator(stypy.reporting.localization.Localization(__file__, 2218, 63), '%', str_84903, tuple_84904)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2218, 23), tuple_84888, result_mod_84908)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2218)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2218, 16), 'stypy_return_type', tuple_84888)
    # SSA branch for the else part of an if statement (line 2217)
    module_type_store.open_ssa_branch('else')
    
    # Getting the type of 'b' (line 2219)
    b_84909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2219, 17), 'b')
    # Testing the type of an if condition (line 2219)
    if_condition_84910 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2219, 17), b_84909)
    # Assigning a type to the variable 'if_condition_84910' (line 2219)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2219, 17), 'if_condition_84910', if_condition_84910)
    # SSA begins for if statement (line 2219)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2220)
    tuple_84911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2220, 23), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2220)
    # Adding element type (line 2220)
    str_84912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2220, 23), 'str', '%s * %s + %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2220)
    tuple_84913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2220, 41), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2220)
    # Adding element type (line 2220)
    # Getting the type of 'a' (line 2220)
    a_84914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2220, 41), 'a')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2220, 41), tuple_84913, a_84914)
    # Adding element type (line 2220)
    
    # Obtaining the type of the subscript
    int_84915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2220, 47), 'int')
    # Getting the type of 'd1' (line 2220)
    d1_84916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2220, 44), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2220)
    getitem___84917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2220, 44), d1_84916, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2220)
    subscript_call_result_84918 = invoke(stypy.reporting.localization.Localization(__file__, 2220, 44), getitem___84917, int_84915)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2220, 41), tuple_84913, subscript_call_result_84918)
    # Adding element type (line 2220)
    # Getting the type of 'b' (line 2220)
    b_84919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2220, 51), 'b')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2220, 41), tuple_84913, b_84919)
    
    # Applying the binary operator '%' (line 2220)
    result_mod_84920 = python_operator(stypy.reporting.localization.Localization(__file__, 2220, 23), '%', str_84912, tuple_84913)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2220, 23), tuple_84911, result_mod_84920)
    # Adding element type (line 2220)
    
    # Obtaining the type of the subscript
    int_84921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2220, 58), 'int')
    # Getting the type of 'd2' (line 2220)
    d2_84922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2220, 55), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2220)
    getitem___84923 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2220, 55), d2_84922, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2220)
    subscript_call_result_84924 = invoke(stypy.reporting.localization.Localization(__file__, 2220, 55), getitem___84923, int_84921)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2220, 23), tuple_84911, subscript_call_result_84924)
    # Adding element type (line 2220)
    str_84925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2220, 62), 'str', '-%s)/(%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2220)
    tuple_84926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2220, 77), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2220)
    # Adding element type (line 2220)
    # Getting the type of 'b' (line 2220)
    b_84927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2220, 77), 'b')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2220, 77), tuple_84926, b_84927)
    # Adding element type (line 2220)
    # Getting the type of 'a' (line 2220)
    a_84928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2220, 80), 'a')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2220, 77), tuple_84926, a_84928)
    
    # Applying the binary operator '%' (line 2220)
    result_mod_84929 = python_operator(stypy.reporting.localization.Localization(__file__, 2220, 62), '%', str_84925, tuple_84926)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2220, 23), tuple_84911, result_mod_84929)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2220)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2220, 16), 'stypy_return_type', tuple_84911)
    # SSA branch for the else part of an if statement (line 2219)
    module_type_store.open_ssa_branch('else')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2222)
    tuple_84930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2222, 23), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2222)
    # Adding element type (line 2222)
    str_84931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2222, 23), 'str', '%s * %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2222)
    tuple_84932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2222, 36), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2222)
    # Adding element type (line 2222)
    # Getting the type of 'a' (line 2222)
    a_84933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2222, 36), 'a')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2222, 36), tuple_84932, a_84933)
    # Adding element type (line 2222)
    
    # Obtaining the type of the subscript
    int_84934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2222, 42), 'int')
    # Getting the type of 'd1' (line 2222)
    d1_84935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2222, 39), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2222)
    getitem___84936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2222, 39), d1_84935, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2222)
    subscript_call_result_84937 = invoke(stypy.reporting.localization.Localization(__file__, 2222, 39), getitem___84936, int_84934)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2222, 36), tuple_84932, subscript_call_result_84937)
    
    # Applying the binary operator '%' (line 2222)
    result_mod_84938 = python_operator(stypy.reporting.localization.Localization(__file__, 2222, 23), '%', str_84931, tuple_84932)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2222, 23), tuple_84930, result_mod_84938)
    # Adding element type (line 2222)
    
    # Obtaining the type of the subscript
    int_84939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2222, 50), 'int')
    # Getting the type of 'd2' (line 2222)
    d2_84940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2222, 47), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2222)
    getitem___84941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2222, 47), d2_84940, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2222)
    subscript_call_result_84942 = invoke(stypy.reporting.localization.Localization(__file__, 2222, 47), getitem___84941, int_84939)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2222, 23), tuple_84930, subscript_call_result_84942)
    # Adding element type (line 2222)
    str_84943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2222, 54), 'str', ')/(%s)')
    # Getting the type of 'a' (line 2222)
    a_84944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2222, 66), 'a')
    # Applying the binary operator '%' (line 2222)
    result_mod_84945 = python_operator(stypy.reporting.localization.Localization(__file__, 2222, 54), '%', str_84943, a_84944)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2222, 23), tuple_84930, result_mod_84945)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2222)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2222, 16), 'stypy_return_type', tuple_84930)
    # SSA join for if statement (line 2219)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2217)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2213)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    int_84946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2223, 14), 'int')
    # Getting the type of 'd1' (line 2223)
    d1_84947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2223, 11), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2223)
    getitem___84948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2223, 11), d1_84947, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2223)
    subscript_call_result_84949 = invoke(stypy.reporting.localization.Localization(__file__, 2223, 11), getitem___84948, int_84946)
    
    
    # Obtaining the type of the subscript
    int_84950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2223, 23), 'int')
    # Getting the type of 'd2' (line 2223)
    d2_84951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2223, 20), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2223)
    getitem___84952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2223, 20), d2_84951, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2223)
    subscript_call_result_84953 = invoke(stypy.reporting.localization.Localization(__file__, 2223, 20), getitem___84952, int_84950)
    
    # Applying the binary operator '==' (line 2223)
    result_eq_84954 = python_operator(stypy.reporting.localization.Localization(__file__, 2223, 11), '==', subscript_call_result_84949, subscript_call_result_84953)
    int_84955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2223, 29), 'int')
    # Applying the binary operator '==' (line 2223)
    result_eq_84956 = python_operator(stypy.reporting.localization.Localization(__file__, 2223, 11), '==', subscript_call_result_84953, int_84955)
    # Applying the binary operator '&' (line 2223)
    result_and__84957 = python_operator(stypy.reporting.localization.Localization(__file__, 2223, 11), '&', result_eq_84954, result_eq_84956)
    
    # Testing the type of an if condition (line 2223)
    if_condition_84958 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2223, 8), result_and__84957)
    # Assigning a type to the variable 'if_condition_84958' (line 2223)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2223, 8), 'if_condition_84958', if_condition_84958)
    # SSA begins for if statement (line 2223)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2224):
    
    # Assigning a Call to a Name (line 2224):
    
    # Call to str(...): (line 2224)
    # Processing the call arguments (line 2224)
    
    # Obtaining the type of the subscript
    int_84960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2224, 23), 'int')
    # Getting the type of 'd1' (line 2224)
    d1_84961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2224, 20), 'd1', False)
    # Obtaining the member '__getitem__' of a type (line 2224)
    getitem___84962 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2224, 20), d1_84961, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2224)
    subscript_call_result_84963 = invoke(stypy.reporting.localization.Localization(__file__, 2224, 20), getitem___84962, int_84960)
    
    # Processing the call keyword arguments (line 2224)
    kwargs_84964 = {}
    # Getting the type of 'str' (line 2224)
    str_84959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2224, 16), 'str', False)
    # Calling str(args, kwargs) (line 2224)
    str_call_result_84965 = invoke(stypy.reporting.localization.Localization(__file__, 2224, 16), str_84959, *[subscript_call_result_84963], **kwargs_84964)
    
    # Assigning a type to the variable 'c' (line 2224)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2224, 12), 'c', str_call_result_84965)
    
    
    # Getting the type of 'c' (line 2225)
    c_84966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2225, 15), 'c')
    # Getting the type of 'args' (line 2225)
    args_84967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2225, 24), 'args')
    # Applying the binary operator 'notin' (line 2225)
    result_contains_84968 = python_operator(stypy.reporting.localization.Localization(__file__, 2225, 15), 'notin', c_84966, args_84967)
    
    # Testing the type of an if condition (line 2225)
    if_condition_84969 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2225, 12), result_contains_84968)
    # Assigning a type to the variable 'if_condition_84969' (line 2225)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2225, 12), 'if_condition_84969', if_condition_84969)
    # SSA begins for if statement (line 2225)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Call to _varname_match(...): (line 2226)
    # Processing the call arguments (line 2226)
    # Getting the type of 'c' (line 2226)
    c_84971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2226, 34), 'c', False)
    # Processing the call keyword arguments (line 2226)
    kwargs_84972 = {}
    # Getting the type of '_varname_match' (line 2226)
    _varname_match_84970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2226, 19), '_varname_match', False)
    # Calling _varname_match(args, kwargs) (line 2226)
    _varname_match_call_result_84973 = invoke(stypy.reporting.localization.Localization(__file__, 2226, 19), _varname_match_84970, *[c_84971], **kwargs_84972)
    
    # Testing the type of an if condition (line 2226)
    if_condition_84974 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2226, 16), _varname_match_call_result_84973)
    # Assigning a type to the variable 'if_condition_84974' (line 2226)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2226, 16), 'if_condition_84974', if_condition_84974)
    # SSA begins for if statement (line 2226)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 2227)
    # Processing the call arguments (line 2227)
    str_84976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2227, 28), 'str', '\tgetarrlen:variable "%s" undefined\n')
    # Getting the type of 'c' (line 2227)
    c_84977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2227, 71), 'c', False)
    # Applying the binary operator '%' (line 2227)
    result_mod_84978 = python_operator(stypy.reporting.localization.Localization(__file__, 2227, 28), '%', str_84976, c_84977)
    
    # Processing the call keyword arguments (line 2227)
    kwargs_84979 = {}
    # Getting the type of 'outmess' (line 2227)
    outmess_84975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2227, 20), 'outmess', False)
    # Calling outmess(args, kwargs) (line 2227)
    outmess_call_result_84980 = invoke(stypy.reporting.localization.Localization(__file__, 2227, 20), outmess_84975, *[result_mod_84978], **kwargs_84979)
    
    # SSA join for if statement (line 2226)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 2228):
    
    # Assigning a BinOp to a Name (line 2228):
    str_84981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2228, 20), 'str', '(%s)')
    # Getting the type of 'c' (line 2228)
    c_84982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2228, 29), 'c')
    # Applying the binary operator '%' (line 2228)
    result_mod_84983 = python_operator(stypy.reporting.localization.Localization(__file__, 2228, 20), '%', str_84981, c_84982)
    
    # Assigning a type to the variable 'c' (line 2228)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2228, 16), 'c', result_mod_84983)
    # SSA join for if statement (line 2225)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'b' (line 2229)
    b_84984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2229, 15), 'b')
    int_84985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2229, 20), 'int')
    # Applying the binary operator '==' (line 2229)
    result_eq_84986 = python_operator(stypy.reporting.localization.Localization(__file__, 2229, 15), '==', b_84984, int_84985)
    
    # Testing the type of an if condition (line 2229)
    if_condition_84987 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2229, 12), result_eq_84986)
    # Assigning a type to the variable 'if_condition_84987' (line 2229)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2229, 12), 'if_condition_84987', if_condition_84987)
    # SSA begins for if statement (line 2229)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 2230):
    
    # Assigning a BinOp to a Name (line 2230):
    str_84988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2230, 20), 'str', '%s-%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2230)
    tuple_84989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2230, 31), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2230)
    # Adding element type (line 2230)
    
    # Obtaining the type of the subscript
    int_84990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2230, 34), 'int')
    # Getting the type of 'd2' (line 2230)
    d2_84991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2230, 31), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2230)
    getitem___84992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2230, 31), d2_84991, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2230)
    subscript_call_result_84993 = invoke(stypy.reporting.localization.Localization(__file__, 2230, 31), getitem___84992, int_84990)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2230, 31), tuple_84989, subscript_call_result_84993)
    # Adding element type (line 2230)
    # Getting the type of 'c' (line 2230)
    c_84994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2230, 38), 'c')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2230, 31), tuple_84989, c_84994)
    
    # Applying the binary operator '%' (line 2230)
    result_mod_84995 = python_operator(stypy.reporting.localization.Localization(__file__, 2230, 20), '%', str_84988, tuple_84989)
    
    # Assigning a type to the variable 'd' (line 2230)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2230, 16), 'd', result_mod_84995)
    # SSA branch for the else part of an if statement (line 2229)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'b' (line 2231)
    b_84996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2231, 17), 'b')
    int_84997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2231, 21), 'int')
    # Applying the binary operator '<' (line 2231)
    result_lt_84998 = python_operator(stypy.reporting.localization.Localization(__file__, 2231, 17), '<', b_84996, int_84997)
    
    # Testing the type of an if condition (line 2231)
    if_condition_84999 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2231, 17), result_lt_84998)
    # Assigning a type to the variable 'if_condition_84999' (line 2231)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2231, 17), 'if_condition_84999', if_condition_84999)
    # SSA begins for if statement (line 2231)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 2232):
    
    # Assigning a BinOp to a Name (line 2232):
    str_85000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2232, 20), 'str', '%s-%s-%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2232)
    tuple_85001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2232, 34), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2232)
    # Adding element type (line 2232)
    
    # Obtaining the type of the subscript
    int_85002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2232, 37), 'int')
    # Getting the type of 'd2' (line 2232)
    d2_85003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2232, 34), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2232)
    getitem___85004 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2232, 34), d2_85003, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2232)
    subscript_call_result_85005 = invoke(stypy.reporting.localization.Localization(__file__, 2232, 34), getitem___85004, int_85002)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2232, 34), tuple_85001, subscript_call_result_85005)
    # Adding element type (line 2232)
    # Getting the type of 'c' (line 2232)
    c_85006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2232, 41), 'c')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2232, 34), tuple_85001, c_85006)
    # Adding element type (line 2232)
    
    # Getting the type of 'b' (line 2232)
    b_85007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2232, 45), 'b')
    # Applying the 'usub' unary operator (line 2232)
    result___neg___85008 = python_operator(stypy.reporting.localization.Localization(__file__, 2232, 44), 'usub', b_85007)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2232, 34), tuple_85001, result___neg___85008)
    
    # Applying the binary operator '%' (line 2232)
    result_mod_85009 = python_operator(stypy.reporting.localization.Localization(__file__, 2232, 20), '%', str_85000, tuple_85001)
    
    # Assigning a type to the variable 'd' (line 2232)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2232, 16), 'd', result_mod_85009)
    # SSA branch for the else part of an if statement (line 2231)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 2234):
    
    # Assigning a BinOp to a Name (line 2234):
    str_85010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2234, 20), 'str', '%s-%s+%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2234)
    tuple_85011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2234, 34), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2234)
    # Adding element type (line 2234)
    
    # Obtaining the type of the subscript
    int_85012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2234, 37), 'int')
    # Getting the type of 'd2' (line 2234)
    d2_85013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2234, 34), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2234)
    getitem___85014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2234, 34), d2_85013, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2234)
    subscript_call_result_85015 = invoke(stypy.reporting.localization.Localization(__file__, 2234, 34), getitem___85014, int_85012)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2234, 34), tuple_85011, subscript_call_result_85015)
    # Adding element type (line 2234)
    # Getting the type of 'c' (line 2234)
    c_85016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2234, 41), 'c')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2234, 34), tuple_85011, c_85016)
    # Adding element type (line 2234)
    # Getting the type of 'b' (line 2234)
    b_85017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2234, 44), 'b')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2234, 34), tuple_85011, b_85017)
    
    # Applying the binary operator '%' (line 2234)
    result_mod_85018 = python_operator(stypy.reporting.localization.Localization(__file__, 2234, 20), '%', str_85010, tuple_85011)
    
    # Assigning a type to the variable 'd' (line 2234)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2234, 16), 'd', result_mod_85018)
    # SSA join for if statement (line 2231)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2229)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 2223)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    int_85019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2235, 16), 'int')
    # Getting the type of 'd1' (line 2235)
    d1_85020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2235, 13), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2235)
    getitem___85021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2235, 13), d1_85020, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2235)
    subscript_call_result_85022 = invoke(stypy.reporting.localization.Localization(__file__, 2235, 13), getitem___85021, int_85019)
    
    int_85023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2235, 22), 'int')
    # Applying the binary operator '==' (line 2235)
    result_eq_85024 = python_operator(stypy.reporting.localization.Localization(__file__, 2235, 13), '==', subscript_call_result_85022, int_85023)
    
    # Testing the type of an if condition (line 2235)
    if_condition_85025 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2235, 13), result_eq_85024)
    # Assigning a type to the variable 'if_condition_85025' (line 2235)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2235, 13), 'if_condition_85025', if_condition_85025)
    # SSA begins for if statement (line 2235)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2236):
    
    # Assigning a Call to a Name (line 2236):
    
    # Call to str(...): (line 2236)
    # Processing the call arguments (line 2236)
    
    # Obtaining the type of the subscript
    int_85027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2236, 24), 'int')
    # Getting the type of 'd2' (line 2236)
    d2_85028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2236, 21), 'd2', False)
    # Obtaining the member '__getitem__' of a type (line 2236)
    getitem___85029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2236, 21), d2_85028, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2236)
    subscript_call_result_85030 = invoke(stypy.reporting.localization.Localization(__file__, 2236, 21), getitem___85029, int_85027)
    
    # Processing the call keyword arguments (line 2236)
    kwargs_85031 = {}
    # Getting the type of 'str' (line 2236)
    str_85026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2236, 17), 'str', False)
    # Calling str(args, kwargs) (line 2236)
    str_call_result_85032 = invoke(stypy.reporting.localization.Localization(__file__, 2236, 17), str_85026, *[subscript_call_result_85030], **kwargs_85031)
    
    # Assigning a type to the variable 'c2' (line 2236)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2236, 12), 'c2', str_call_result_85032)
    
    
    # Getting the type of 'c2' (line 2237)
    c2_85033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2237, 15), 'c2')
    # Getting the type of 'args' (line 2237)
    args_85034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2237, 25), 'args')
    # Applying the binary operator 'notin' (line 2237)
    result_contains_85035 = python_operator(stypy.reporting.localization.Localization(__file__, 2237, 15), 'notin', c2_85033, args_85034)
    
    # Testing the type of an if condition (line 2237)
    if_condition_85036 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2237, 12), result_contains_85035)
    # Assigning a type to the variable 'if_condition_85036' (line 2237)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2237, 12), 'if_condition_85036', if_condition_85036)
    # SSA begins for if statement (line 2237)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Call to _varname_match(...): (line 2238)
    # Processing the call arguments (line 2238)
    # Getting the type of 'c2' (line 2238)
    c2_85038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2238, 34), 'c2', False)
    # Processing the call keyword arguments (line 2238)
    kwargs_85039 = {}
    # Getting the type of '_varname_match' (line 2238)
    _varname_match_85037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2238, 19), '_varname_match', False)
    # Calling _varname_match(args, kwargs) (line 2238)
    _varname_match_call_result_85040 = invoke(stypy.reporting.localization.Localization(__file__, 2238, 19), _varname_match_85037, *[c2_85038], **kwargs_85039)
    
    # Testing the type of an if condition (line 2238)
    if_condition_85041 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2238, 16), _varname_match_call_result_85040)
    # Assigning a type to the variable 'if_condition_85041' (line 2238)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2238, 16), 'if_condition_85041', if_condition_85041)
    # SSA begins for if statement (line 2238)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 2239)
    # Processing the call arguments (line 2239)
    str_85043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2239, 28), 'str', '\tgetarrlen:variable "%s" undefined\n')
    # Getting the type of 'c2' (line 2239)
    c2_85044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2239, 71), 'c2', False)
    # Applying the binary operator '%' (line 2239)
    result_mod_85045 = python_operator(stypy.reporting.localization.Localization(__file__, 2239, 28), '%', str_85043, c2_85044)
    
    # Processing the call keyword arguments (line 2239)
    kwargs_85046 = {}
    # Getting the type of 'outmess' (line 2239)
    outmess_85042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2239, 20), 'outmess', False)
    # Calling outmess(args, kwargs) (line 2239)
    outmess_call_result_85047 = invoke(stypy.reporting.localization.Localization(__file__, 2239, 20), outmess_85042, *[result_mod_85045], **kwargs_85046)
    
    # SSA join for if statement (line 2238)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 2240):
    
    # Assigning a BinOp to a Name (line 2240):
    str_85048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2240, 21), 'str', '(%s)')
    # Getting the type of 'c2' (line 2240)
    c2_85049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2240, 30), 'c2')
    # Applying the binary operator '%' (line 2240)
    result_mod_85050 = python_operator(stypy.reporting.localization.Localization(__file__, 2240, 21), '%', str_85048, c2_85049)
    
    # Assigning a type to the variable 'c2' (line 2240)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2240, 16), 'c2', result_mod_85050)
    # SSA join for if statement (line 2237)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    int_85051 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2241, 18), 'int')
    # Getting the type of 'd2' (line 2241)
    d2_85052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2241, 15), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2241)
    getitem___85053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2241, 15), d2_85052, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2241)
    subscript_call_result_85054 = invoke(stypy.reporting.localization.Localization(__file__, 2241, 15), getitem___85053, int_85051)
    
    int_85055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2241, 24), 'int')
    # Applying the binary operator '==' (line 2241)
    result_eq_85056 = python_operator(stypy.reporting.localization.Localization(__file__, 2241, 15), '==', subscript_call_result_85054, int_85055)
    
    # Testing the type of an if condition (line 2241)
    if_condition_85057 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2241, 12), result_eq_85056)
    # Assigning a type to the variable 'if_condition_85057' (line 2241)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2241, 12), 'if_condition_85057', if_condition_85057)
    # SSA begins for if statement (line 2241)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    pass
    # SSA branch for the else part of an if statement (line 2241)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    int_85058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2243, 20), 'int')
    # Getting the type of 'd2' (line 2243)
    d2_85059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2243, 17), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2243)
    getitem___85060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2243, 17), d2_85059, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2243)
    subscript_call_result_85061 = invoke(stypy.reporting.localization.Localization(__file__, 2243, 17), getitem___85060, int_85058)
    
    int_85062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2243, 26), 'int')
    # Applying the binary operator '==' (line 2243)
    result_eq_85063 = python_operator(stypy.reporting.localization.Localization(__file__, 2243, 17), '==', subscript_call_result_85061, int_85062)
    
    # Testing the type of an if condition (line 2243)
    if_condition_85064 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2243, 17), result_eq_85063)
    # Assigning a type to the variable 'if_condition_85064' (line 2243)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2243, 17), 'if_condition_85064', if_condition_85064)
    # SSA begins for if statement (line 2243)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 2244):
    
    # Assigning a BinOp to a Name (line 2244):
    str_85065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2244, 21), 'str', '-%s')
    # Getting the type of 'c2' (line 2244)
    c2_85066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2244, 29), 'c2')
    # Applying the binary operator '%' (line 2244)
    result_mod_85067 = python_operator(stypy.reporting.localization.Localization(__file__, 2244, 21), '%', str_85065, c2_85066)
    
    # Assigning a type to the variable 'c2' (line 2244)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2244, 16), 'c2', result_mod_85067)
    # SSA branch for the else part of an if statement (line 2243)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 2246):
    
    # Assigning a BinOp to a Name (line 2246):
    str_85068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2246, 21), 'str', '%s*%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2246)
    tuple_85069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2246, 32), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2246)
    # Adding element type (line 2246)
    
    # Obtaining the type of the subscript
    int_85070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2246, 35), 'int')
    # Getting the type of 'd2' (line 2246)
    d2_85071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2246, 32), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2246)
    getitem___85072 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2246, 32), d2_85071, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2246)
    subscript_call_result_85073 = invoke(stypy.reporting.localization.Localization(__file__, 2246, 32), getitem___85072, int_85070)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2246, 32), tuple_85069, subscript_call_result_85073)
    # Adding element type (line 2246)
    # Getting the type of 'c2' (line 2246)
    c2_85074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2246, 39), 'c2')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2246, 32), tuple_85069, c2_85074)
    
    # Applying the binary operator '%' (line 2246)
    result_mod_85075 = python_operator(stypy.reporting.localization.Localization(__file__, 2246, 21), '%', str_85068, tuple_85069)
    
    # Assigning a type to the variable 'c2' (line 2246)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2246, 16), 'c2', result_mod_85075)
    # SSA join for if statement (line 2243)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2241)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'b' (line 2248)
    b_85076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2248, 15), 'b')
    int_85077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2248, 20), 'int')
    # Applying the binary operator '==' (line 2248)
    result_eq_85078 = python_operator(stypy.reporting.localization.Localization(__file__, 2248, 15), '==', b_85076, int_85077)
    
    # Testing the type of an if condition (line 2248)
    if_condition_85079 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2248, 12), result_eq_85078)
    # Assigning a type to the variable 'if_condition_85079' (line 2248)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2248, 12), 'if_condition_85079', if_condition_85079)
    # SSA begins for if statement (line 2248)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 2249):
    
    # Assigning a Name to a Name (line 2249):
    # Getting the type of 'c2' (line 2249)
    c2_85080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2249, 20), 'c2')
    # Assigning a type to the variable 'd' (line 2249)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2249, 16), 'd', c2_85080)
    # SSA branch for the else part of an if statement (line 2248)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'b' (line 2250)
    b_85081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2250, 17), 'b')
    int_85082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2250, 21), 'int')
    # Applying the binary operator '<' (line 2250)
    result_lt_85083 = python_operator(stypy.reporting.localization.Localization(__file__, 2250, 17), '<', b_85081, int_85082)
    
    # Testing the type of an if condition (line 2250)
    if_condition_85084 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2250, 17), result_lt_85083)
    # Assigning a type to the variable 'if_condition_85084' (line 2250)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2250, 17), 'if_condition_85084', if_condition_85084)
    # SSA begins for if statement (line 2250)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 2251):
    
    # Assigning a BinOp to a Name (line 2251):
    str_85085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2251, 20), 'str', '%s-%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2251)
    tuple_85086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2251, 31), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2251)
    # Adding element type (line 2251)
    # Getting the type of 'c2' (line 2251)
    c2_85087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2251, 31), 'c2')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2251, 31), tuple_85086, c2_85087)
    # Adding element type (line 2251)
    
    # Getting the type of 'b' (line 2251)
    b_85088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2251, 36), 'b')
    # Applying the 'usub' unary operator (line 2251)
    result___neg___85089 = python_operator(stypy.reporting.localization.Localization(__file__, 2251, 35), 'usub', b_85088)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2251, 31), tuple_85086, result___neg___85089)
    
    # Applying the binary operator '%' (line 2251)
    result_mod_85090 = python_operator(stypy.reporting.localization.Localization(__file__, 2251, 20), '%', str_85085, tuple_85086)
    
    # Assigning a type to the variable 'd' (line 2251)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2251, 16), 'd', result_mod_85090)
    # SSA branch for the else part of an if statement (line 2250)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 2253):
    
    # Assigning a BinOp to a Name (line 2253):
    str_85091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2253, 20), 'str', '%s+%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2253)
    tuple_85092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2253, 31), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2253)
    # Adding element type (line 2253)
    # Getting the type of 'c2' (line 2253)
    c2_85093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2253, 31), 'c2')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2253, 31), tuple_85092, c2_85093)
    # Adding element type (line 2253)
    # Getting the type of 'b' (line 2253)
    b_85094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2253, 35), 'b')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2253, 31), tuple_85092, b_85094)
    
    # Applying the binary operator '%' (line 2253)
    result_mod_85095 = python_operator(stypy.reporting.localization.Localization(__file__, 2253, 20), '%', str_85091, tuple_85092)
    
    # Assigning a type to the variable 'd' (line 2253)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2253, 16), 'd', result_mod_85095)
    # SSA join for if statement (line 2250)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2248)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 2235)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    int_85096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2254, 16), 'int')
    # Getting the type of 'd2' (line 2254)
    d2_85097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2254, 13), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2254)
    getitem___85098 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2254, 13), d2_85097, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2254)
    subscript_call_result_85099 = invoke(stypy.reporting.localization.Localization(__file__, 2254, 13), getitem___85098, int_85096)
    
    int_85100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2254, 22), 'int')
    # Applying the binary operator '==' (line 2254)
    result_eq_85101 = python_operator(stypy.reporting.localization.Localization(__file__, 2254, 13), '==', subscript_call_result_85099, int_85100)
    
    # Testing the type of an if condition (line 2254)
    if_condition_85102 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2254, 13), result_eq_85101)
    # Assigning a type to the variable 'if_condition_85102' (line 2254)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2254, 13), 'if_condition_85102', if_condition_85102)
    # SSA begins for if statement (line 2254)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2255):
    
    # Assigning a Call to a Name (line 2255):
    
    # Call to str(...): (line 2255)
    # Processing the call arguments (line 2255)
    
    # Obtaining the type of the subscript
    int_85104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2255, 24), 'int')
    # Getting the type of 'd1' (line 2255)
    d1_85105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2255, 21), 'd1', False)
    # Obtaining the member '__getitem__' of a type (line 2255)
    getitem___85106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2255, 21), d1_85105, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2255)
    subscript_call_result_85107 = invoke(stypy.reporting.localization.Localization(__file__, 2255, 21), getitem___85106, int_85104)
    
    # Processing the call keyword arguments (line 2255)
    kwargs_85108 = {}
    # Getting the type of 'str' (line 2255)
    str_85103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2255, 17), 'str', False)
    # Calling str(args, kwargs) (line 2255)
    str_call_result_85109 = invoke(stypy.reporting.localization.Localization(__file__, 2255, 17), str_85103, *[subscript_call_result_85107], **kwargs_85108)
    
    # Assigning a type to the variable 'c1' (line 2255)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2255, 12), 'c1', str_call_result_85109)
    
    
    # Getting the type of 'c1' (line 2256)
    c1_85110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2256, 15), 'c1')
    # Getting the type of 'args' (line 2256)
    args_85111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2256, 25), 'args')
    # Applying the binary operator 'notin' (line 2256)
    result_contains_85112 = python_operator(stypy.reporting.localization.Localization(__file__, 2256, 15), 'notin', c1_85110, args_85111)
    
    # Testing the type of an if condition (line 2256)
    if_condition_85113 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2256, 12), result_contains_85112)
    # Assigning a type to the variable 'if_condition_85113' (line 2256)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2256, 12), 'if_condition_85113', if_condition_85113)
    # SSA begins for if statement (line 2256)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Call to _varname_match(...): (line 2257)
    # Processing the call arguments (line 2257)
    # Getting the type of 'c1' (line 2257)
    c1_85115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2257, 34), 'c1', False)
    # Processing the call keyword arguments (line 2257)
    kwargs_85116 = {}
    # Getting the type of '_varname_match' (line 2257)
    _varname_match_85114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2257, 19), '_varname_match', False)
    # Calling _varname_match(args, kwargs) (line 2257)
    _varname_match_call_result_85117 = invoke(stypy.reporting.localization.Localization(__file__, 2257, 19), _varname_match_85114, *[c1_85115], **kwargs_85116)
    
    # Testing the type of an if condition (line 2257)
    if_condition_85118 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2257, 16), _varname_match_call_result_85117)
    # Assigning a type to the variable 'if_condition_85118' (line 2257)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2257, 16), 'if_condition_85118', if_condition_85118)
    # SSA begins for if statement (line 2257)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 2258)
    # Processing the call arguments (line 2258)
    str_85120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2258, 28), 'str', '\tgetarrlen:variable "%s" undefined\n')
    # Getting the type of 'c1' (line 2258)
    c1_85121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2258, 71), 'c1', False)
    # Applying the binary operator '%' (line 2258)
    result_mod_85122 = python_operator(stypy.reporting.localization.Localization(__file__, 2258, 28), '%', str_85120, c1_85121)
    
    # Processing the call keyword arguments (line 2258)
    kwargs_85123 = {}
    # Getting the type of 'outmess' (line 2258)
    outmess_85119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2258, 20), 'outmess', False)
    # Calling outmess(args, kwargs) (line 2258)
    outmess_call_result_85124 = invoke(stypy.reporting.localization.Localization(__file__, 2258, 20), outmess_85119, *[result_mod_85122], **kwargs_85123)
    
    # SSA join for if statement (line 2257)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 2259):
    
    # Assigning a BinOp to a Name (line 2259):
    str_85125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2259, 21), 'str', '(%s)')
    # Getting the type of 'c1' (line 2259)
    c1_85126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2259, 30), 'c1')
    # Applying the binary operator '%' (line 2259)
    result_mod_85127 = python_operator(stypy.reporting.localization.Localization(__file__, 2259, 21), '%', str_85125, c1_85126)
    
    # Assigning a type to the variable 'c1' (line 2259)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2259, 16), 'c1', result_mod_85127)
    # SSA join for if statement (line 2256)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    int_85128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2260, 18), 'int')
    # Getting the type of 'd1' (line 2260)
    d1_85129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2260, 15), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2260)
    getitem___85130 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2260, 15), d1_85129, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2260)
    subscript_call_result_85131 = invoke(stypy.reporting.localization.Localization(__file__, 2260, 15), getitem___85130, int_85128)
    
    int_85132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2260, 24), 'int')
    # Applying the binary operator '==' (line 2260)
    result_eq_85133 = python_operator(stypy.reporting.localization.Localization(__file__, 2260, 15), '==', subscript_call_result_85131, int_85132)
    
    # Testing the type of an if condition (line 2260)
    if_condition_85134 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2260, 12), result_eq_85133)
    # Assigning a type to the variable 'if_condition_85134' (line 2260)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2260, 12), 'if_condition_85134', if_condition_85134)
    # SSA begins for if statement (line 2260)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 2261):
    
    # Assigning a BinOp to a Name (line 2261):
    str_85135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2261, 21), 'str', '-%s')
    # Getting the type of 'c1' (line 2261)
    c1_85136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2261, 29), 'c1')
    # Applying the binary operator '%' (line 2261)
    result_mod_85137 = python_operator(stypy.reporting.localization.Localization(__file__, 2261, 21), '%', str_85135, c1_85136)
    
    # Assigning a type to the variable 'c1' (line 2261)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2261, 16), 'c1', result_mod_85137)
    # SSA branch for the else part of an if statement (line 2260)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    int_85138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2262, 20), 'int')
    # Getting the type of 'd1' (line 2262)
    d1_85139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2262, 17), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2262)
    getitem___85140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2262, 17), d1_85139, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2262)
    subscript_call_result_85141 = invoke(stypy.reporting.localization.Localization(__file__, 2262, 17), getitem___85140, int_85138)
    
    int_85142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2262, 26), 'int')
    # Applying the binary operator '==' (line 2262)
    result_eq_85143 = python_operator(stypy.reporting.localization.Localization(__file__, 2262, 17), '==', subscript_call_result_85141, int_85142)
    
    # Testing the type of an if condition (line 2262)
    if_condition_85144 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2262, 17), result_eq_85143)
    # Assigning a type to the variable 'if_condition_85144' (line 2262)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2262, 17), 'if_condition_85144', if_condition_85144)
    # SSA begins for if statement (line 2262)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 2263):
    
    # Assigning a BinOp to a Name (line 2263):
    str_85145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2263, 21), 'str', '+%s')
    # Getting the type of 'c1' (line 2263)
    c1_85146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2263, 29), 'c1')
    # Applying the binary operator '%' (line 2263)
    result_mod_85147 = python_operator(stypy.reporting.localization.Localization(__file__, 2263, 21), '%', str_85145, c1_85146)
    
    # Assigning a type to the variable 'c1' (line 2263)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2263, 16), 'c1', result_mod_85147)
    # SSA branch for the else part of an if statement (line 2262)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    int_85148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2264, 20), 'int')
    # Getting the type of 'd1' (line 2264)
    d1_85149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2264, 17), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2264)
    getitem___85150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2264, 17), d1_85149, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2264)
    subscript_call_result_85151 = invoke(stypy.reporting.localization.Localization(__file__, 2264, 17), getitem___85150, int_85148)
    
    int_85152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2264, 25), 'int')
    # Applying the binary operator '<' (line 2264)
    result_lt_85153 = python_operator(stypy.reporting.localization.Localization(__file__, 2264, 17), '<', subscript_call_result_85151, int_85152)
    
    # Testing the type of an if condition (line 2264)
    if_condition_85154 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2264, 17), result_lt_85153)
    # Assigning a type to the variable 'if_condition_85154' (line 2264)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2264, 17), 'if_condition_85154', if_condition_85154)
    # SSA begins for if statement (line 2264)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 2265):
    
    # Assigning a BinOp to a Name (line 2265):
    str_85155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2265, 21), 'str', '+%s*%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2265)
    tuple_85156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2265, 33), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2265)
    # Adding element type (line 2265)
    
    
    # Obtaining the type of the subscript
    int_85157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2265, 37), 'int')
    # Getting the type of 'd1' (line 2265)
    d1_85158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2265, 34), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2265)
    getitem___85159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2265, 34), d1_85158, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2265)
    subscript_call_result_85160 = invoke(stypy.reporting.localization.Localization(__file__, 2265, 34), getitem___85159, int_85157)
    
    # Applying the 'usub' unary operator (line 2265)
    result___neg___85161 = python_operator(stypy.reporting.localization.Localization(__file__, 2265, 33), 'usub', subscript_call_result_85160)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2265, 33), tuple_85156, result___neg___85161)
    # Adding element type (line 2265)
    # Getting the type of 'c1' (line 2265)
    c1_85162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2265, 41), 'c1')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2265, 33), tuple_85156, c1_85162)
    
    # Applying the binary operator '%' (line 2265)
    result_mod_85163 = python_operator(stypy.reporting.localization.Localization(__file__, 2265, 21), '%', str_85155, tuple_85156)
    
    # Assigning a type to the variable 'c1' (line 2265)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2265, 16), 'c1', result_mod_85163)
    # SSA branch for the else part of an if statement (line 2264)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 2267):
    
    # Assigning a BinOp to a Name (line 2267):
    str_85164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2267, 21), 'str', '-%s*%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2267)
    tuple_85165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2267, 33), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2267)
    # Adding element type (line 2267)
    
    # Obtaining the type of the subscript
    int_85166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2267, 36), 'int')
    # Getting the type of 'd1' (line 2267)
    d1_85167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2267, 33), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2267)
    getitem___85168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2267, 33), d1_85167, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2267)
    subscript_call_result_85169 = invoke(stypy.reporting.localization.Localization(__file__, 2267, 33), getitem___85168, int_85166)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2267, 33), tuple_85165, subscript_call_result_85169)
    # Adding element type (line 2267)
    # Getting the type of 'c1' (line 2267)
    c1_85170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2267, 40), 'c1')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2267, 33), tuple_85165, c1_85170)
    
    # Applying the binary operator '%' (line 2267)
    result_mod_85171 = python_operator(stypy.reporting.localization.Localization(__file__, 2267, 21), '%', str_85164, tuple_85165)
    
    # Assigning a type to the variable 'c1' (line 2267)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2267, 16), 'c1', result_mod_85171)
    # SSA join for if statement (line 2264)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2262)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2260)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'b' (line 2269)
    b_85172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2269, 15), 'b')
    int_85173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2269, 20), 'int')
    # Applying the binary operator '==' (line 2269)
    result_eq_85174 = python_operator(stypy.reporting.localization.Localization(__file__, 2269, 15), '==', b_85172, int_85173)
    
    # Testing the type of an if condition (line 2269)
    if_condition_85175 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2269, 12), result_eq_85174)
    # Assigning a type to the variable 'if_condition_85175' (line 2269)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2269, 12), 'if_condition_85175', if_condition_85175)
    # SSA begins for if statement (line 2269)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 2270):
    
    # Assigning a Name to a Name (line 2270):
    # Getting the type of 'c1' (line 2270)
    c1_85176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2270, 20), 'c1')
    # Assigning a type to the variable 'd' (line 2270)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2270, 16), 'd', c1_85176)
    # SSA branch for the else part of an if statement (line 2269)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'b' (line 2271)
    b_85177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2271, 17), 'b')
    int_85178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2271, 21), 'int')
    # Applying the binary operator '<' (line 2271)
    result_lt_85179 = python_operator(stypy.reporting.localization.Localization(__file__, 2271, 17), '<', b_85177, int_85178)
    
    # Testing the type of an if condition (line 2271)
    if_condition_85180 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2271, 17), result_lt_85179)
    # Assigning a type to the variable 'if_condition_85180' (line 2271)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2271, 17), 'if_condition_85180', if_condition_85180)
    # SSA begins for if statement (line 2271)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 2272):
    
    # Assigning a BinOp to a Name (line 2272):
    str_85181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2272, 20), 'str', '%s-%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2272)
    tuple_85182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2272, 31), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2272)
    # Adding element type (line 2272)
    # Getting the type of 'c1' (line 2272)
    c1_85183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2272, 31), 'c1')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2272, 31), tuple_85182, c1_85183)
    # Adding element type (line 2272)
    
    # Getting the type of 'b' (line 2272)
    b_85184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2272, 36), 'b')
    # Applying the 'usub' unary operator (line 2272)
    result___neg___85185 = python_operator(stypy.reporting.localization.Localization(__file__, 2272, 35), 'usub', b_85184)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2272, 31), tuple_85182, result___neg___85185)
    
    # Applying the binary operator '%' (line 2272)
    result_mod_85186 = python_operator(stypy.reporting.localization.Localization(__file__, 2272, 20), '%', str_85181, tuple_85182)
    
    # Assigning a type to the variable 'd' (line 2272)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2272, 16), 'd', result_mod_85186)
    # SSA branch for the else part of an if statement (line 2271)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 2274):
    
    # Assigning a BinOp to a Name (line 2274):
    str_85187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2274, 20), 'str', '%s+%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2274)
    tuple_85188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2274, 31), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2274)
    # Adding element type (line 2274)
    # Getting the type of 'c1' (line 2274)
    c1_85189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2274, 31), 'c1')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2274, 31), tuple_85188, c1_85189)
    # Adding element type (line 2274)
    # Getting the type of 'b' (line 2274)
    b_85190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2274, 35), 'b')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2274, 31), tuple_85188, b_85190)
    
    # Applying the binary operator '%' (line 2274)
    result_mod_85191 = python_operator(stypy.reporting.localization.Localization(__file__, 2274, 20), '%', str_85187, tuple_85188)
    
    # Assigning a type to the variable 'd' (line 2274)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2274, 16), 'd', result_mod_85191)
    # SSA join for if statement (line 2271)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2269)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 2254)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Name (line 2276):
    
    # Assigning a Call to a Name (line 2276):
    
    # Call to str(...): (line 2276)
    # Processing the call arguments (line 2276)
    
    # Obtaining the type of the subscript
    int_85193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2276, 24), 'int')
    # Getting the type of 'd1' (line 2276)
    d1_85194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2276, 21), 'd1', False)
    # Obtaining the member '__getitem__' of a type (line 2276)
    getitem___85195 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2276, 21), d1_85194, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2276)
    subscript_call_result_85196 = invoke(stypy.reporting.localization.Localization(__file__, 2276, 21), getitem___85195, int_85193)
    
    # Processing the call keyword arguments (line 2276)
    kwargs_85197 = {}
    # Getting the type of 'str' (line 2276)
    str_85192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2276, 17), 'str', False)
    # Calling str(args, kwargs) (line 2276)
    str_call_result_85198 = invoke(stypy.reporting.localization.Localization(__file__, 2276, 17), str_85192, *[subscript_call_result_85196], **kwargs_85197)
    
    # Assigning a type to the variable 'c1' (line 2276)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2276, 12), 'c1', str_call_result_85198)
    
    
    # Getting the type of 'c1' (line 2277)
    c1_85199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2277, 15), 'c1')
    # Getting the type of 'args' (line 2277)
    args_85200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2277, 25), 'args')
    # Applying the binary operator 'notin' (line 2277)
    result_contains_85201 = python_operator(stypy.reporting.localization.Localization(__file__, 2277, 15), 'notin', c1_85199, args_85200)
    
    # Testing the type of an if condition (line 2277)
    if_condition_85202 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2277, 12), result_contains_85201)
    # Assigning a type to the variable 'if_condition_85202' (line 2277)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2277, 12), 'if_condition_85202', if_condition_85202)
    # SSA begins for if statement (line 2277)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Call to _varname_match(...): (line 2278)
    # Processing the call arguments (line 2278)
    # Getting the type of 'c1' (line 2278)
    c1_85204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2278, 34), 'c1', False)
    # Processing the call keyword arguments (line 2278)
    kwargs_85205 = {}
    # Getting the type of '_varname_match' (line 2278)
    _varname_match_85203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2278, 19), '_varname_match', False)
    # Calling _varname_match(args, kwargs) (line 2278)
    _varname_match_call_result_85206 = invoke(stypy.reporting.localization.Localization(__file__, 2278, 19), _varname_match_85203, *[c1_85204], **kwargs_85205)
    
    # Testing the type of an if condition (line 2278)
    if_condition_85207 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2278, 16), _varname_match_call_result_85206)
    # Assigning a type to the variable 'if_condition_85207' (line 2278)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2278, 16), 'if_condition_85207', if_condition_85207)
    # SSA begins for if statement (line 2278)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 2279)
    # Processing the call arguments (line 2279)
    str_85209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2279, 28), 'str', '\tgetarrlen:variable "%s" undefined\n')
    # Getting the type of 'c1' (line 2279)
    c1_85210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2279, 71), 'c1', False)
    # Applying the binary operator '%' (line 2279)
    result_mod_85211 = python_operator(stypy.reporting.localization.Localization(__file__, 2279, 28), '%', str_85209, c1_85210)
    
    # Processing the call keyword arguments (line 2279)
    kwargs_85212 = {}
    # Getting the type of 'outmess' (line 2279)
    outmess_85208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2279, 20), 'outmess', False)
    # Calling outmess(args, kwargs) (line 2279)
    outmess_call_result_85213 = invoke(stypy.reporting.localization.Localization(__file__, 2279, 20), outmess_85208, *[result_mod_85211], **kwargs_85212)
    
    # SSA join for if statement (line 2278)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 2280):
    
    # Assigning a BinOp to a Name (line 2280):
    str_85214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2280, 21), 'str', '(%s)')
    # Getting the type of 'c1' (line 2280)
    c1_85215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2280, 30), 'c1')
    # Applying the binary operator '%' (line 2280)
    result_mod_85216 = python_operator(stypy.reporting.localization.Localization(__file__, 2280, 21), '%', str_85214, c1_85215)
    
    # Assigning a type to the variable 'c1' (line 2280)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2280, 16), 'c1', result_mod_85216)
    # SSA join for if statement (line 2277)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    int_85217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2281, 18), 'int')
    # Getting the type of 'd1' (line 2281)
    d1_85218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2281, 15), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2281)
    getitem___85219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2281, 15), d1_85218, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2281)
    subscript_call_result_85220 = invoke(stypy.reporting.localization.Localization(__file__, 2281, 15), getitem___85219, int_85217)
    
    int_85221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2281, 24), 'int')
    # Applying the binary operator '==' (line 2281)
    result_eq_85222 = python_operator(stypy.reporting.localization.Localization(__file__, 2281, 15), '==', subscript_call_result_85220, int_85221)
    
    # Testing the type of an if condition (line 2281)
    if_condition_85223 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2281, 12), result_eq_85222)
    # Assigning a type to the variable 'if_condition_85223' (line 2281)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2281, 12), 'if_condition_85223', if_condition_85223)
    # SSA begins for if statement (line 2281)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 2282):
    
    # Assigning a BinOp to a Name (line 2282):
    str_85224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2282, 21), 'str', '-%s')
    # Getting the type of 'c1' (line 2282)
    c1_85225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2282, 29), 'c1')
    # Applying the binary operator '%' (line 2282)
    result_mod_85226 = python_operator(stypy.reporting.localization.Localization(__file__, 2282, 21), '%', str_85224, c1_85225)
    
    # Assigning a type to the variable 'c1' (line 2282)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2282, 16), 'c1', result_mod_85226)
    # SSA branch for the else part of an if statement (line 2281)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    int_85227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2283, 20), 'int')
    # Getting the type of 'd1' (line 2283)
    d1_85228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2283, 17), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2283)
    getitem___85229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2283, 17), d1_85228, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2283)
    subscript_call_result_85230 = invoke(stypy.reporting.localization.Localization(__file__, 2283, 17), getitem___85229, int_85227)
    
    int_85231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2283, 26), 'int')
    # Applying the binary operator '==' (line 2283)
    result_eq_85232 = python_operator(stypy.reporting.localization.Localization(__file__, 2283, 17), '==', subscript_call_result_85230, int_85231)
    
    # Testing the type of an if condition (line 2283)
    if_condition_85233 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2283, 17), result_eq_85232)
    # Assigning a type to the variable 'if_condition_85233' (line 2283)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2283, 17), 'if_condition_85233', if_condition_85233)
    # SSA begins for if statement (line 2283)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 2284):
    
    # Assigning a BinOp to a Name (line 2284):
    str_85234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2284, 21), 'str', '+%s')
    # Getting the type of 'c1' (line 2284)
    c1_85235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2284, 29), 'c1')
    # Applying the binary operator '%' (line 2284)
    result_mod_85236 = python_operator(stypy.reporting.localization.Localization(__file__, 2284, 21), '%', str_85234, c1_85235)
    
    # Assigning a type to the variable 'c1' (line 2284)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2284, 16), 'c1', result_mod_85236)
    # SSA branch for the else part of an if statement (line 2283)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    int_85237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2285, 20), 'int')
    # Getting the type of 'd1' (line 2285)
    d1_85238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2285, 17), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2285)
    getitem___85239 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2285, 17), d1_85238, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2285)
    subscript_call_result_85240 = invoke(stypy.reporting.localization.Localization(__file__, 2285, 17), getitem___85239, int_85237)
    
    int_85241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2285, 25), 'int')
    # Applying the binary operator '<' (line 2285)
    result_lt_85242 = python_operator(stypy.reporting.localization.Localization(__file__, 2285, 17), '<', subscript_call_result_85240, int_85241)
    
    # Testing the type of an if condition (line 2285)
    if_condition_85243 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2285, 17), result_lt_85242)
    # Assigning a type to the variable 'if_condition_85243' (line 2285)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2285, 17), 'if_condition_85243', if_condition_85243)
    # SSA begins for if statement (line 2285)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 2286):
    
    # Assigning a BinOp to a Name (line 2286):
    str_85244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2286, 21), 'str', '+%s*%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2286)
    tuple_85245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2286, 33), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2286)
    # Adding element type (line 2286)
    
    
    # Obtaining the type of the subscript
    int_85246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2286, 37), 'int')
    # Getting the type of 'd1' (line 2286)
    d1_85247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2286, 34), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2286)
    getitem___85248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2286, 34), d1_85247, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2286)
    subscript_call_result_85249 = invoke(stypy.reporting.localization.Localization(__file__, 2286, 34), getitem___85248, int_85246)
    
    # Applying the 'usub' unary operator (line 2286)
    result___neg___85250 = python_operator(stypy.reporting.localization.Localization(__file__, 2286, 33), 'usub', subscript_call_result_85249)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2286, 33), tuple_85245, result___neg___85250)
    # Adding element type (line 2286)
    # Getting the type of 'c1' (line 2286)
    c1_85251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2286, 41), 'c1')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2286, 33), tuple_85245, c1_85251)
    
    # Applying the binary operator '%' (line 2286)
    result_mod_85252 = python_operator(stypy.reporting.localization.Localization(__file__, 2286, 21), '%', str_85244, tuple_85245)
    
    # Assigning a type to the variable 'c1' (line 2286)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2286, 16), 'c1', result_mod_85252)
    # SSA branch for the else part of an if statement (line 2285)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 2288):
    
    # Assigning a BinOp to a Name (line 2288):
    str_85253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2288, 21), 'str', '-%s*%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2288)
    tuple_85254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2288, 33), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2288)
    # Adding element type (line 2288)
    
    # Obtaining the type of the subscript
    int_85255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2288, 36), 'int')
    # Getting the type of 'd1' (line 2288)
    d1_85256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2288, 33), 'd1')
    # Obtaining the member '__getitem__' of a type (line 2288)
    getitem___85257 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2288, 33), d1_85256, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2288)
    subscript_call_result_85258 = invoke(stypy.reporting.localization.Localization(__file__, 2288, 33), getitem___85257, int_85255)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2288, 33), tuple_85254, subscript_call_result_85258)
    # Adding element type (line 2288)
    # Getting the type of 'c1' (line 2288)
    c1_85259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2288, 40), 'c1')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2288, 33), tuple_85254, c1_85259)
    
    # Applying the binary operator '%' (line 2288)
    result_mod_85260 = python_operator(stypy.reporting.localization.Localization(__file__, 2288, 21), '%', str_85253, tuple_85254)
    
    # Assigning a type to the variable 'c1' (line 2288)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2288, 16), 'c1', result_mod_85260)
    # SSA join for if statement (line 2285)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2283)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2281)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2290):
    
    # Assigning a Call to a Name (line 2290):
    
    # Call to str(...): (line 2290)
    # Processing the call arguments (line 2290)
    
    # Obtaining the type of the subscript
    int_85262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2290, 24), 'int')
    # Getting the type of 'd2' (line 2290)
    d2_85263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2290, 21), 'd2', False)
    # Obtaining the member '__getitem__' of a type (line 2290)
    getitem___85264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2290, 21), d2_85263, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2290)
    subscript_call_result_85265 = invoke(stypy.reporting.localization.Localization(__file__, 2290, 21), getitem___85264, int_85262)
    
    # Processing the call keyword arguments (line 2290)
    kwargs_85266 = {}
    # Getting the type of 'str' (line 2290)
    str_85261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2290, 17), 'str', False)
    # Calling str(args, kwargs) (line 2290)
    str_call_result_85267 = invoke(stypy.reporting.localization.Localization(__file__, 2290, 17), str_85261, *[subscript_call_result_85265], **kwargs_85266)
    
    # Assigning a type to the variable 'c2' (line 2290)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2290, 12), 'c2', str_call_result_85267)
    
    
    # Getting the type of 'c2' (line 2291)
    c2_85268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2291, 15), 'c2')
    # Getting the type of 'args' (line 2291)
    args_85269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2291, 25), 'args')
    # Applying the binary operator 'notin' (line 2291)
    result_contains_85270 = python_operator(stypy.reporting.localization.Localization(__file__, 2291, 15), 'notin', c2_85268, args_85269)
    
    # Testing the type of an if condition (line 2291)
    if_condition_85271 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2291, 12), result_contains_85270)
    # Assigning a type to the variable 'if_condition_85271' (line 2291)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2291, 12), 'if_condition_85271', if_condition_85271)
    # SSA begins for if statement (line 2291)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Call to _varname_match(...): (line 2292)
    # Processing the call arguments (line 2292)
    # Getting the type of 'c2' (line 2292)
    c2_85273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2292, 34), 'c2', False)
    # Processing the call keyword arguments (line 2292)
    kwargs_85274 = {}
    # Getting the type of '_varname_match' (line 2292)
    _varname_match_85272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2292, 19), '_varname_match', False)
    # Calling _varname_match(args, kwargs) (line 2292)
    _varname_match_call_result_85275 = invoke(stypy.reporting.localization.Localization(__file__, 2292, 19), _varname_match_85272, *[c2_85273], **kwargs_85274)
    
    # Testing the type of an if condition (line 2292)
    if_condition_85276 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2292, 16), _varname_match_call_result_85275)
    # Assigning a type to the variable 'if_condition_85276' (line 2292)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2292, 16), 'if_condition_85276', if_condition_85276)
    # SSA begins for if statement (line 2292)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 2293)
    # Processing the call arguments (line 2293)
    str_85278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2293, 28), 'str', '\tgetarrlen:variable "%s" undefined\n')
    # Getting the type of 'c2' (line 2293)
    c2_85279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2293, 71), 'c2', False)
    # Applying the binary operator '%' (line 2293)
    result_mod_85280 = python_operator(stypy.reporting.localization.Localization(__file__, 2293, 28), '%', str_85278, c2_85279)
    
    # Processing the call keyword arguments (line 2293)
    kwargs_85281 = {}
    # Getting the type of 'outmess' (line 2293)
    outmess_85277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2293, 20), 'outmess', False)
    # Calling outmess(args, kwargs) (line 2293)
    outmess_call_result_85282 = invoke(stypy.reporting.localization.Localization(__file__, 2293, 20), outmess_85277, *[result_mod_85280], **kwargs_85281)
    
    # SSA join for if statement (line 2292)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 2294):
    
    # Assigning a BinOp to a Name (line 2294):
    str_85283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2294, 21), 'str', '(%s)')
    # Getting the type of 'c2' (line 2294)
    c2_85284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2294, 30), 'c2')
    # Applying the binary operator '%' (line 2294)
    result_mod_85285 = python_operator(stypy.reporting.localization.Localization(__file__, 2294, 21), '%', str_85283, c2_85284)
    
    # Assigning a type to the variable 'c2' (line 2294)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2294, 16), 'c2', result_mod_85285)
    # SSA join for if statement (line 2291)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    int_85286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2295, 18), 'int')
    # Getting the type of 'd2' (line 2295)
    d2_85287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2295, 15), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2295)
    getitem___85288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2295, 15), d2_85287, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2295)
    subscript_call_result_85289 = invoke(stypy.reporting.localization.Localization(__file__, 2295, 15), getitem___85288, int_85286)
    
    int_85290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2295, 24), 'int')
    # Applying the binary operator '==' (line 2295)
    result_eq_85291 = python_operator(stypy.reporting.localization.Localization(__file__, 2295, 15), '==', subscript_call_result_85289, int_85290)
    
    # Testing the type of an if condition (line 2295)
    if_condition_85292 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2295, 12), result_eq_85291)
    # Assigning a type to the variable 'if_condition_85292' (line 2295)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2295, 12), 'if_condition_85292', if_condition_85292)
    # SSA begins for if statement (line 2295)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    pass
    # SSA branch for the else part of an if statement (line 2295)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    int_85293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2297, 20), 'int')
    # Getting the type of 'd2' (line 2297)
    d2_85294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2297, 17), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2297)
    getitem___85295 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2297, 17), d2_85294, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2297)
    subscript_call_result_85296 = invoke(stypy.reporting.localization.Localization(__file__, 2297, 17), getitem___85295, int_85293)
    
    int_85297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2297, 26), 'int')
    # Applying the binary operator '==' (line 2297)
    result_eq_85298 = python_operator(stypy.reporting.localization.Localization(__file__, 2297, 17), '==', subscript_call_result_85296, int_85297)
    
    # Testing the type of an if condition (line 2297)
    if_condition_85299 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2297, 17), result_eq_85298)
    # Assigning a type to the variable 'if_condition_85299' (line 2297)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2297, 17), 'if_condition_85299', if_condition_85299)
    # SSA begins for if statement (line 2297)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 2298):
    
    # Assigning a BinOp to a Name (line 2298):
    str_85300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2298, 21), 'str', '-%s')
    # Getting the type of 'c2' (line 2298)
    c2_85301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2298, 29), 'c2')
    # Applying the binary operator '%' (line 2298)
    result_mod_85302 = python_operator(stypy.reporting.localization.Localization(__file__, 2298, 21), '%', str_85300, c2_85301)
    
    # Assigning a type to the variable 'c2' (line 2298)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2298, 16), 'c2', result_mod_85302)
    # SSA branch for the else part of an if statement (line 2297)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 2300):
    
    # Assigning a BinOp to a Name (line 2300):
    str_85303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2300, 21), 'str', '%s*%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2300)
    tuple_85304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2300, 32), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2300)
    # Adding element type (line 2300)
    
    # Obtaining the type of the subscript
    int_85305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2300, 35), 'int')
    # Getting the type of 'd2' (line 2300)
    d2_85306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2300, 32), 'd2')
    # Obtaining the member '__getitem__' of a type (line 2300)
    getitem___85307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2300, 32), d2_85306, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2300)
    subscript_call_result_85308 = invoke(stypy.reporting.localization.Localization(__file__, 2300, 32), getitem___85307, int_85305)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2300, 32), tuple_85304, subscript_call_result_85308)
    # Adding element type (line 2300)
    # Getting the type of 'c2' (line 2300)
    c2_85309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2300, 39), 'c2')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2300, 32), tuple_85304, c2_85309)
    
    # Applying the binary operator '%' (line 2300)
    result_mod_85310 = python_operator(stypy.reporting.localization.Localization(__file__, 2300, 21), '%', str_85303, tuple_85304)
    
    # Assigning a type to the variable 'c2' (line 2300)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2300, 16), 'c2', result_mod_85310)
    # SSA join for if statement (line 2297)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2295)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'b' (line 2302)
    b_85311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2302, 15), 'b')
    int_85312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2302, 20), 'int')
    # Applying the binary operator '==' (line 2302)
    result_eq_85313 = python_operator(stypy.reporting.localization.Localization(__file__, 2302, 15), '==', b_85311, int_85312)
    
    # Testing the type of an if condition (line 2302)
    if_condition_85314 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2302, 12), result_eq_85313)
    # Assigning a type to the variable 'if_condition_85314' (line 2302)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2302, 12), 'if_condition_85314', if_condition_85314)
    # SSA begins for if statement (line 2302)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 2303):
    
    # Assigning a BinOp to a Name (line 2303):
    str_85315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2303, 20), 'str', '%s%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2303)
    tuple_85316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2303, 30), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2303)
    # Adding element type (line 2303)
    # Getting the type of 'c2' (line 2303)
    c2_85317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2303, 30), 'c2')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2303, 30), tuple_85316, c2_85317)
    # Adding element type (line 2303)
    # Getting the type of 'c1' (line 2303)
    c1_85318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2303, 34), 'c1')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2303, 30), tuple_85316, c1_85318)
    
    # Applying the binary operator '%' (line 2303)
    result_mod_85319 = python_operator(stypy.reporting.localization.Localization(__file__, 2303, 20), '%', str_85315, tuple_85316)
    
    # Assigning a type to the variable 'd' (line 2303)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2303, 16), 'd', result_mod_85319)
    # SSA branch for the else part of an if statement (line 2302)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'b' (line 2304)
    b_85320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2304, 17), 'b')
    int_85321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2304, 21), 'int')
    # Applying the binary operator '<' (line 2304)
    result_lt_85322 = python_operator(stypy.reporting.localization.Localization(__file__, 2304, 17), '<', b_85320, int_85321)
    
    # Testing the type of an if condition (line 2304)
    if_condition_85323 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2304, 17), result_lt_85322)
    # Assigning a type to the variable 'if_condition_85323' (line 2304)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2304, 17), 'if_condition_85323', if_condition_85323)
    # SSA begins for if statement (line 2304)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 2305):
    
    # Assigning a BinOp to a Name (line 2305):
    str_85324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2305, 20), 'str', '%s%s-%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2305)
    tuple_85325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2305, 33), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2305)
    # Adding element type (line 2305)
    # Getting the type of 'c2' (line 2305)
    c2_85326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2305, 33), 'c2')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2305, 33), tuple_85325, c2_85326)
    # Adding element type (line 2305)
    # Getting the type of 'c1' (line 2305)
    c1_85327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2305, 37), 'c1')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2305, 33), tuple_85325, c1_85327)
    # Adding element type (line 2305)
    
    # Getting the type of 'b' (line 2305)
    b_85328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2305, 42), 'b')
    # Applying the 'usub' unary operator (line 2305)
    result___neg___85329 = python_operator(stypy.reporting.localization.Localization(__file__, 2305, 41), 'usub', b_85328)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2305, 33), tuple_85325, result___neg___85329)
    
    # Applying the binary operator '%' (line 2305)
    result_mod_85330 = python_operator(stypy.reporting.localization.Localization(__file__, 2305, 20), '%', str_85324, tuple_85325)
    
    # Assigning a type to the variable 'd' (line 2305)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2305, 16), 'd', result_mod_85330)
    # SSA branch for the else part of an if statement (line 2304)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 2307):
    
    # Assigning a BinOp to a Name (line 2307):
    str_85331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2307, 20), 'str', '%s%s+%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2307)
    tuple_85332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2307, 33), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2307)
    # Adding element type (line 2307)
    # Getting the type of 'c2' (line 2307)
    c2_85333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2307, 33), 'c2')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2307, 33), tuple_85332, c2_85333)
    # Adding element type (line 2307)
    # Getting the type of 'c1' (line 2307)
    c1_85334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2307, 37), 'c1')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2307, 33), tuple_85332, c1_85334)
    # Adding element type (line 2307)
    # Getting the type of 'b' (line 2307)
    b_85335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2307, 41), 'b')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2307, 33), tuple_85332, b_85335)
    
    # Applying the binary operator '%' (line 2307)
    result_mod_85336 = python_operator(stypy.reporting.localization.Localization(__file__, 2307, 20), '%', str_85331, tuple_85332)
    
    # Assigning a type to the variable 'd' (line 2307)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2307, 16), 'd', result_mod_85336)
    # SSA join for if statement (line 2304)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2302)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2254)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2235)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2223)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2192)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 2308)
    tuple_85337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2308, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2308)
    # Adding element type (line 2308)
    # Getting the type of 'd' (line 2308)
    d_85338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2308, 11), 'd')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2308, 11), tuple_85337, d_85338)
    # Adding element type (line 2308)
    # Getting the type of 'None' (line 2308)
    None_85339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2308, 14), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2308, 11), tuple_85337, None_85339)
    # Adding element type (line 2308)
    # Getting the type of 'None' (line 2308)
    None_85340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2308, 20), 'None')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2308, 11), tuple_85337, None_85340)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2308)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2308, 4), 'stypy_return_type', tuple_85337)
    
    # ################# End of 'getarrlen(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'getarrlen' in the type store
    # Getting the type of 'stypy_return_type' (line 2161)
    stypy_return_type_85341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2161, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_85341)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'getarrlen'
    return stypy_return_type_85341

# Assigning a type to the variable 'getarrlen' (line 2161)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2161, 0), 'getarrlen', getarrlen)

# Assigning a Call to a Name (line 2310):

# Assigning a Call to a Name (line 2310):

# Call to compile(...): (line 2310)
# Processing the call arguments (line 2310)
str_85344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2310, 26), 'str', '\\b[a-z][\\w$]*\\b')
# Getting the type of 're' (line 2310)
re_85345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2310, 46), 're', False)
# Obtaining the member 'I' of a type (line 2310)
I_85346 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2310, 46), re_85345, 'I')
# Processing the call keyword arguments (line 2310)
kwargs_85347 = {}
# Getting the type of 're' (line 2310)
re_85342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2310, 15), 're', False)
# Obtaining the member 'compile' of a type (line 2310)
compile_85343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2310, 15), re_85342, 'compile')
# Calling compile(args, kwargs) (line 2310)
compile_call_result_85348 = invoke(stypy.reporting.localization.Localization(__file__, 2310, 15), compile_85343, *[str_85344, I_85346], **kwargs_85347)

# Assigning a type to the variable 'word_pattern' (line 2310)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2310, 0), 'word_pattern', compile_call_result_85348)

@norecursion
def _get_depend_dict(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_get_depend_dict'
    module_type_store = module_type_store.open_function_context('_get_depend_dict', 2313, 0, False)
    
    # Passed parameters checking function
    _get_depend_dict.stypy_localization = localization
    _get_depend_dict.stypy_type_of_self = None
    _get_depend_dict.stypy_type_store = module_type_store
    _get_depend_dict.stypy_function_name = '_get_depend_dict'
    _get_depend_dict.stypy_param_names_list = ['name', 'vars', 'deps']
    _get_depend_dict.stypy_varargs_param_name = None
    _get_depend_dict.stypy_kwargs_param_name = None
    _get_depend_dict.stypy_call_defaults = defaults
    _get_depend_dict.stypy_call_varargs = varargs
    _get_depend_dict.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_get_depend_dict', ['name', 'vars', 'deps'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_get_depend_dict', localization, ['name', 'vars', 'deps'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_get_depend_dict(...)' code ##################

    
    
    # Getting the type of 'name' (line 2314)
    name_85349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2314, 7), 'name')
    # Getting the type of 'vars' (line 2314)
    vars_85350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2314, 15), 'vars')
    # Applying the binary operator 'in' (line 2314)
    result_contains_85351 = python_operator(stypy.reporting.localization.Localization(__file__, 2314, 7), 'in', name_85349, vars_85350)
    
    # Testing the type of an if condition (line 2314)
    if_condition_85352 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2314, 4), result_contains_85351)
    # Assigning a type to the variable 'if_condition_85352' (line 2314)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2314, 4), 'if_condition_85352', if_condition_85352)
    # SSA begins for if statement (line 2314)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2315):
    
    # Assigning a Call to a Name (line 2315):
    
    # Call to get(...): (line 2315)
    # Processing the call arguments (line 2315)
    str_85358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2315, 31), 'str', 'depend')
    
    # Obtaining an instance of the builtin type 'list' (line 2315)
    list_85359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2315, 41), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2315)
    
    # Processing the call keyword arguments (line 2315)
    kwargs_85360 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 2315)
    name_85353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2315, 21), 'name', False)
    # Getting the type of 'vars' (line 2315)
    vars_85354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2315, 16), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2315)
    getitem___85355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2315, 16), vars_85354, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2315)
    subscript_call_result_85356 = invoke(stypy.reporting.localization.Localization(__file__, 2315, 16), getitem___85355, name_85353)
    
    # Obtaining the member 'get' of a type (line 2315)
    get_85357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2315, 16), subscript_call_result_85356, 'get')
    # Calling get(args, kwargs) (line 2315)
    get_call_result_85361 = invoke(stypy.reporting.localization.Localization(__file__, 2315, 16), get_85357, *[str_85358, list_85359], **kwargs_85360)
    
    # Assigning a type to the variable 'words' (line 2315)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2315, 8), 'words', get_call_result_85361)
    
    
    # Evaluating a boolean operation
    
    str_85362 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2317, 11), 'str', '=')
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 2317)
    name_85363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2317, 23), 'name')
    # Getting the type of 'vars' (line 2317)
    vars_85364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2317, 18), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2317)
    getitem___85365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2317, 18), vars_85364, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2317)
    subscript_call_result_85366 = invoke(stypy.reporting.localization.Localization(__file__, 2317, 18), getitem___85365, name_85363)
    
    # Applying the binary operator 'in' (line 2317)
    result_contains_85367 = python_operator(stypy.reporting.localization.Localization(__file__, 2317, 11), 'in', str_85362, subscript_call_result_85366)
    
    
    
    # Call to isstring(...): (line 2317)
    # Processing the call arguments (line 2317)
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 2317)
    name_85369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2317, 51), 'name', False)
    # Getting the type of 'vars' (line 2317)
    vars_85370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2317, 46), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2317)
    getitem___85371 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2317, 46), vars_85370, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2317)
    subscript_call_result_85372 = invoke(stypy.reporting.localization.Localization(__file__, 2317, 46), getitem___85371, name_85369)
    
    # Processing the call keyword arguments (line 2317)
    kwargs_85373 = {}
    # Getting the type of 'isstring' (line 2317)
    isstring_85368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2317, 37), 'isstring', False)
    # Calling isstring(args, kwargs) (line 2317)
    isstring_call_result_85374 = invoke(stypy.reporting.localization.Localization(__file__, 2317, 37), isstring_85368, *[subscript_call_result_85372], **kwargs_85373)
    
    # Applying the 'not' unary operator (line 2317)
    result_not__85375 = python_operator(stypy.reporting.localization.Localization(__file__, 2317, 33), 'not', isstring_call_result_85374)
    
    # Applying the binary operator 'and' (line 2317)
    result_and_keyword_85376 = python_operator(stypy.reporting.localization.Localization(__file__, 2317, 11), 'and', result_contains_85367, result_not__85375)
    
    # Testing the type of an if condition (line 2317)
    if_condition_85377 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2317, 8), result_and_keyword_85376)
    # Assigning a type to the variable 'if_condition_85377' (line 2317)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2317, 8), 'if_condition_85377', if_condition_85377)
    # SSA begins for if statement (line 2317)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Call to findall(...): (line 2318)
    # Processing the call arguments (line 2318)
    
    # Obtaining the type of the subscript
    str_85380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2318, 56), 'str', '=')
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 2318)
    name_85381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2318, 50), 'name', False)
    # Getting the type of 'vars' (line 2318)
    vars_85382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2318, 45), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2318)
    getitem___85383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2318, 45), vars_85382, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2318)
    subscript_call_result_85384 = invoke(stypy.reporting.localization.Localization(__file__, 2318, 45), getitem___85383, name_85381)
    
    # Obtaining the member '__getitem__' of a type (line 2318)
    getitem___85385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2318, 45), subscript_call_result_85384, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2318)
    subscript_call_result_85386 = invoke(stypy.reporting.localization.Localization(__file__, 2318, 45), getitem___85385, str_85380)
    
    # Processing the call keyword arguments (line 2318)
    kwargs_85387 = {}
    # Getting the type of 'word_pattern' (line 2318)
    word_pattern_85378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2318, 24), 'word_pattern', False)
    # Obtaining the member 'findall' of a type (line 2318)
    findall_85379 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2318, 24), word_pattern_85378, 'findall')
    # Calling findall(args, kwargs) (line 2318)
    findall_call_result_85388 = invoke(stypy.reporting.localization.Localization(__file__, 2318, 24), findall_85379, *[subscript_call_result_85386], **kwargs_85387)
    
    # Testing the type of a for loop iterable (line 2318)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2318, 12), findall_call_result_85388)
    # Getting the type of the for loop variable (line 2318)
    for_loop_var_85389 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2318, 12), findall_call_result_85388)
    # Assigning a type to the variable 'word' (line 2318)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2318, 12), 'word', for_loop_var_85389)
    # SSA begins for a for statement (line 2318)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'word' (line 2319)
    word_85390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2319, 19), 'word')
    # Getting the type of 'words' (line 2319)
    words_85391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2319, 31), 'words')
    # Applying the binary operator 'notin' (line 2319)
    result_contains_85392 = python_operator(stypy.reporting.localization.Localization(__file__, 2319, 19), 'notin', word_85390, words_85391)
    
    
    # Getting the type of 'word' (line 2319)
    word_85393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2319, 41), 'word')
    # Getting the type of 'vars' (line 2319)
    vars_85394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2319, 49), 'vars')
    # Applying the binary operator 'in' (line 2319)
    result_contains_85395 = python_operator(stypy.reporting.localization.Localization(__file__, 2319, 41), 'in', word_85393, vars_85394)
    
    # Applying the binary operator 'and' (line 2319)
    result_and_keyword_85396 = python_operator(stypy.reporting.localization.Localization(__file__, 2319, 19), 'and', result_contains_85392, result_contains_85395)
    
    # Testing the type of an if condition (line 2319)
    if_condition_85397 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2319, 16), result_and_keyword_85396)
    # Assigning a type to the variable 'if_condition_85397' (line 2319)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2319, 16), 'if_condition_85397', if_condition_85397)
    # SSA begins for if statement (line 2319)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2320)
    # Processing the call arguments (line 2320)
    # Getting the type of 'word' (line 2320)
    word_85400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2320, 33), 'word', False)
    # Processing the call keyword arguments (line 2320)
    kwargs_85401 = {}
    # Getting the type of 'words' (line 2320)
    words_85398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2320, 20), 'words', False)
    # Obtaining the member 'append' of a type (line 2320)
    append_85399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2320, 20), words_85398, 'append')
    # Calling append(args, kwargs) (line 2320)
    append_call_result_85402 = invoke(stypy.reporting.localization.Localization(__file__, 2320, 20), append_85399, *[word_85400], **kwargs_85401)
    
    # SSA join for if statement (line 2319)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2317)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Obtaining the type of the subscript
    slice_85403 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2321, 20), None, None, None)
    # Getting the type of 'words' (line 2321)
    words_85404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2321, 20), 'words')
    # Obtaining the member '__getitem__' of a type (line 2321)
    getitem___85405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2321, 20), words_85404, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2321)
    subscript_call_result_85406 = invoke(stypy.reporting.localization.Localization(__file__, 2321, 20), getitem___85405, slice_85403)
    
    # Testing the type of a for loop iterable (line 2321)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2321, 8), subscript_call_result_85406)
    # Getting the type of the for loop variable (line 2321)
    for_loop_var_85407 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2321, 8), subscript_call_result_85406)
    # Assigning a type to the variable 'word' (line 2321)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2321, 8), 'word', for_loop_var_85407)
    # SSA begins for a for statement (line 2321)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    # Call to get(...): (line 2322)
    # Processing the call arguments (line 2322)
    # Getting the type of 'word' (line 2322)
    word_85410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2322, 30), 'word', False)
    
    # Obtaining an instance of the builtin type 'list' (line 2322)
    list_85411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2322, 36), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2322)
    
    # Processing the call keyword arguments (line 2322)
    kwargs_85412 = {}
    # Getting the type of 'deps' (line 2322)
    deps_85408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2322, 21), 'deps', False)
    # Obtaining the member 'get' of a type (line 2322)
    get_85409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2322, 21), deps_85408, 'get')
    # Calling get(args, kwargs) (line 2322)
    get_call_result_85413 = invoke(stypy.reporting.localization.Localization(__file__, 2322, 21), get_85409, *[word_85410, list_85411], **kwargs_85412)
    
    
    # Call to _get_depend_dict(...): (line 2323)
    # Processing the call arguments (line 2323)
    # Getting the type of 'word' (line 2323)
    word_85415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2323, 40), 'word', False)
    # Getting the type of 'vars' (line 2323)
    vars_85416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2323, 46), 'vars', False)
    # Getting the type of 'deps' (line 2323)
    deps_85417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2323, 52), 'deps', False)
    # Processing the call keyword arguments (line 2323)
    kwargs_85418 = {}
    # Getting the type of '_get_depend_dict' (line 2323)
    _get_depend_dict_85414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2323, 23), '_get_depend_dict', False)
    # Calling _get_depend_dict(args, kwargs) (line 2323)
    _get_depend_dict_call_result_85419 = invoke(stypy.reporting.localization.Localization(__file__, 2323, 23), _get_depend_dict_85414, *[word_85415, vars_85416, deps_85417], **kwargs_85418)
    
    # Applying the binary operator 'or' (line 2322)
    result_or_keyword_85420 = python_operator(stypy.reporting.localization.Localization(__file__, 2322, 21), 'or', get_call_result_85413, _get_depend_dict_call_result_85419)
    
    # Testing the type of a for loop iterable (line 2322)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2322, 12), result_or_keyword_85420)
    # Getting the type of the for loop variable (line 2322)
    for_loop_var_85421 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2322, 12), result_or_keyword_85420)
    # Assigning a type to the variable 'w' (line 2322)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2322, 12), 'w', for_loop_var_85421)
    # SSA begins for a for statement (line 2322)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'w' (line 2324)
    w_85422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2324, 19), 'w')
    # Getting the type of 'words' (line 2324)
    words_85423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2324, 28), 'words')
    # Applying the binary operator 'notin' (line 2324)
    result_contains_85424 = python_operator(stypy.reporting.localization.Localization(__file__, 2324, 19), 'notin', w_85422, words_85423)
    
    # Testing the type of an if condition (line 2324)
    if_condition_85425 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2324, 16), result_contains_85424)
    # Assigning a type to the variable 'if_condition_85425' (line 2324)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2324, 16), 'if_condition_85425', if_condition_85425)
    # SSA begins for if statement (line 2324)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2325)
    # Processing the call arguments (line 2325)
    # Getting the type of 'w' (line 2325)
    w_85428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2325, 33), 'w', False)
    # Processing the call keyword arguments (line 2325)
    kwargs_85429 = {}
    # Getting the type of 'words' (line 2325)
    words_85426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2325, 20), 'words', False)
    # Obtaining the member 'append' of a type (line 2325)
    append_85427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2325, 20), words_85426, 'append')
    # Calling append(args, kwargs) (line 2325)
    append_call_result_85430 = invoke(stypy.reporting.localization.Localization(__file__, 2325, 20), append_85427, *[w_85428], **kwargs_85429)
    
    # SSA join for if statement (line 2324)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 2314)
    module_type_store.open_ssa_branch('else')
    
    # Call to outmess(...): (line 2327)
    # Processing the call arguments (line 2327)
    str_85432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2327, 16), 'str', '_get_depend_dict: no dependence info for %s\n')
    
    # Call to repr(...): (line 2327)
    # Processing the call arguments (line 2327)
    # Getting the type of 'name' (line 2327)
    name_85434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2327, 72), 'name', False)
    # Processing the call keyword arguments (line 2327)
    kwargs_85435 = {}
    # Getting the type of 'repr' (line 2327)
    repr_85433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2327, 67), 'repr', False)
    # Calling repr(args, kwargs) (line 2327)
    repr_call_result_85436 = invoke(stypy.reporting.localization.Localization(__file__, 2327, 67), repr_85433, *[name_85434], **kwargs_85435)
    
    # Applying the binary operator '%' (line 2327)
    result_mod_85437 = python_operator(stypy.reporting.localization.Localization(__file__, 2327, 16), '%', str_85432, repr_call_result_85436)
    
    # Processing the call keyword arguments (line 2327)
    kwargs_85438 = {}
    # Getting the type of 'outmess' (line 2327)
    outmess_85431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2327, 8), 'outmess', False)
    # Calling outmess(args, kwargs) (line 2327)
    outmess_call_result_85439 = invoke(stypy.reporting.localization.Localization(__file__, 2327, 8), outmess_85431, *[result_mod_85437], **kwargs_85438)
    
    
    # Assigning a List to a Name (line 2328):
    
    # Assigning a List to a Name (line 2328):
    
    # Obtaining an instance of the builtin type 'list' (line 2328)
    list_85440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2328, 16), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2328)
    
    # Assigning a type to the variable 'words' (line 2328)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2328, 8), 'words', list_85440)
    # SSA join for if statement (line 2314)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 2329):
    
    # Assigning a Name to a Subscript (line 2329):
    # Getting the type of 'words' (line 2329)
    words_85441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2329, 17), 'words')
    # Getting the type of 'deps' (line 2329)
    deps_85442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2329, 4), 'deps')
    # Getting the type of 'name' (line 2329)
    name_85443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2329, 9), 'name')
    # Storing an element on a container (line 2329)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2329, 4), deps_85442, (name_85443, words_85441))
    # Getting the type of 'words' (line 2330)
    words_85444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2330, 11), 'words')
    # Assigning a type to the variable 'stypy_return_type' (line 2330)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2330, 4), 'stypy_return_type', words_85444)
    
    # ################# End of '_get_depend_dict(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_get_depend_dict' in the type store
    # Getting the type of 'stypy_return_type' (line 2313)
    stypy_return_type_85445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2313, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_85445)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_get_depend_dict'
    return stypy_return_type_85445

# Assigning a type to the variable '_get_depend_dict' (line 2313)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2313, 0), '_get_depend_dict', _get_depend_dict)

@norecursion
def _calc_depend_dict(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_calc_depend_dict'
    module_type_store = module_type_store.open_function_context('_calc_depend_dict', 2333, 0, False)
    
    # Passed parameters checking function
    _calc_depend_dict.stypy_localization = localization
    _calc_depend_dict.stypy_type_of_self = None
    _calc_depend_dict.stypy_type_store = module_type_store
    _calc_depend_dict.stypy_function_name = '_calc_depend_dict'
    _calc_depend_dict.stypy_param_names_list = ['vars']
    _calc_depend_dict.stypy_varargs_param_name = None
    _calc_depend_dict.stypy_kwargs_param_name = None
    _calc_depend_dict.stypy_call_defaults = defaults
    _calc_depend_dict.stypy_call_varargs = varargs
    _calc_depend_dict.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_calc_depend_dict', ['vars'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_calc_depend_dict', localization, ['vars'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_calc_depend_dict(...)' code ##################

    
    # Assigning a Call to a Name (line 2334):
    
    # Assigning a Call to a Name (line 2334):
    
    # Call to list(...): (line 2334)
    # Processing the call arguments (line 2334)
    
    # Call to keys(...): (line 2334)
    # Processing the call keyword arguments (line 2334)
    kwargs_85449 = {}
    # Getting the type of 'vars' (line 2334)
    vars_85447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2334, 17), 'vars', False)
    # Obtaining the member 'keys' of a type (line 2334)
    keys_85448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2334, 17), vars_85447, 'keys')
    # Calling keys(args, kwargs) (line 2334)
    keys_call_result_85450 = invoke(stypy.reporting.localization.Localization(__file__, 2334, 17), keys_85448, *[], **kwargs_85449)
    
    # Processing the call keyword arguments (line 2334)
    kwargs_85451 = {}
    # Getting the type of 'list' (line 2334)
    list_85446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2334, 12), 'list', False)
    # Calling list(args, kwargs) (line 2334)
    list_call_result_85452 = invoke(stypy.reporting.localization.Localization(__file__, 2334, 12), list_85446, *[keys_call_result_85450], **kwargs_85451)
    
    # Assigning a type to the variable 'names' (line 2334)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2334, 4), 'names', list_call_result_85452)
    
    # Assigning a Dict to a Name (line 2335):
    
    # Assigning a Dict to a Name (line 2335):
    
    # Obtaining an instance of the builtin type 'dict' (line 2335)
    dict_85453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2335, 18), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2335)
    
    # Assigning a type to the variable 'depend_dict' (line 2335)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2335, 4), 'depend_dict', dict_85453)
    
    # Getting the type of 'names' (line 2336)
    names_85454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2336, 13), 'names')
    # Testing the type of a for loop iterable (line 2336)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2336, 4), names_85454)
    # Getting the type of the for loop variable (line 2336)
    for_loop_var_85455 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2336, 4), names_85454)
    # Assigning a type to the variable 'n' (line 2336)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2336, 4), 'n', for_loop_var_85455)
    # SSA begins for a for statement (line 2336)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to _get_depend_dict(...): (line 2337)
    # Processing the call arguments (line 2337)
    # Getting the type of 'n' (line 2337)
    n_85457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2337, 25), 'n', False)
    # Getting the type of 'vars' (line 2337)
    vars_85458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2337, 28), 'vars', False)
    # Getting the type of 'depend_dict' (line 2337)
    depend_dict_85459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2337, 34), 'depend_dict', False)
    # Processing the call keyword arguments (line 2337)
    kwargs_85460 = {}
    # Getting the type of '_get_depend_dict' (line 2337)
    _get_depend_dict_85456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2337, 8), '_get_depend_dict', False)
    # Calling _get_depend_dict(args, kwargs) (line 2337)
    _get_depend_dict_call_result_85461 = invoke(stypy.reporting.localization.Localization(__file__, 2337, 8), _get_depend_dict_85456, *[n_85457, vars_85458, depend_dict_85459], **kwargs_85460)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'depend_dict' (line 2338)
    depend_dict_85462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2338, 11), 'depend_dict')
    # Assigning a type to the variable 'stypy_return_type' (line 2338)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2338, 4), 'stypy_return_type', depend_dict_85462)
    
    # ################# End of '_calc_depend_dict(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_calc_depend_dict' in the type store
    # Getting the type of 'stypy_return_type' (line 2333)
    stypy_return_type_85463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2333, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_85463)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_calc_depend_dict'
    return stypy_return_type_85463

# Assigning a type to the variable '_calc_depend_dict' (line 2333)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2333, 0), '_calc_depend_dict', _calc_depend_dict)

@norecursion
def get_sorted_names(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'get_sorted_names'
    module_type_store = module_type_store.open_function_context('get_sorted_names', 2341, 0, False)
    
    # Passed parameters checking function
    get_sorted_names.stypy_localization = localization
    get_sorted_names.stypy_type_of_self = None
    get_sorted_names.stypy_type_store = module_type_store
    get_sorted_names.stypy_function_name = 'get_sorted_names'
    get_sorted_names.stypy_param_names_list = ['vars']
    get_sorted_names.stypy_varargs_param_name = None
    get_sorted_names.stypy_kwargs_param_name = None
    get_sorted_names.stypy_call_defaults = defaults
    get_sorted_names.stypy_call_varargs = varargs
    get_sorted_names.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'get_sorted_names', ['vars'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'get_sorted_names', localization, ['vars'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'get_sorted_names(...)' code ##################

    str_85464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2343, (-1)), 'str', '\n    ')
    
    # Assigning a Call to a Name (line 2344):
    
    # Assigning a Call to a Name (line 2344):
    
    # Call to _calc_depend_dict(...): (line 2344)
    # Processing the call arguments (line 2344)
    # Getting the type of 'vars' (line 2344)
    vars_85466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2344, 36), 'vars', False)
    # Processing the call keyword arguments (line 2344)
    kwargs_85467 = {}
    # Getting the type of '_calc_depend_dict' (line 2344)
    _calc_depend_dict_85465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2344, 18), '_calc_depend_dict', False)
    # Calling _calc_depend_dict(args, kwargs) (line 2344)
    _calc_depend_dict_call_result_85468 = invoke(stypy.reporting.localization.Localization(__file__, 2344, 18), _calc_depend_dict_85465, *[vars_85466], **kwargs_85467)
    
    # Assigning a type to the variable 'depend_dict' (line 2344)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2344, 4), 'depend_dict', _calc_depend_dict_call_result_85468)
    
    # Assigning a List to a Name (line 2345):
    
    # Assigning a List to a Name (line 2345):
    
    # Obtaining an instance of the builtin type 'list' (line 2345)
    list_85469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2345, 12), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2345)
    
    # Assigning a type to the variable 'names' (line 2345)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2345, 4), 'names', list_85469)
    
    
    # Call to list(...): (line 2346)
    # Processing the call arguments (line 2346)
    
    # Call to keys(...): (line 2346)
    # Processing the call keyword arguments (line 2346)
    kwargs_85473 = {}
    # Getting the type of 'depend_dict' (line 2346)
    depend_dict_85471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2346, 21), 'depend_dict', False)
    # Obtaining the member 'keys' of a type (line 2346)
    keys_85472 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2346, 21), depend_dict_85471, 'keys')
    # Calling keys(args, kwargs) (line 2346)
    keys_call_result_85474 = invoke(stypy.reporting.localization.Localization(__file__, 2346, 21), keys_85472, *[], **kwargs_85473)
    
    # Processing the call keyword arguments (line 2346)
    kwargs_85475 = {}
    # Getting the type of 'list' (line 2346)
    list_85470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2346, 16), 'list', False)
    # Calling list(args, kwargs) (line 2346)
    list_call_result_85476 = invoke(stypy.reporting.localization.Localization(__file__, 2346, 16), list_85470, *[keys_call_result_85474], **kwargs_85475)
    
    # Testing the type of a for loop iterable (line 2346)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2346, 4), list_call_result_85476)
    # Getting the type of the for loop variable (line 2346)
    for_loop_var_85477 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2346, 4), list_call_result_85476)
    # Assigning a type to the variable 'name' (line 2346)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2346, 4), 'name', for_loop_var_85477)
    # SSA begins for a for statement (line 2346)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 2347)
    name_85478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2347, 27), 'name')
    # Getting the type of 'depend_dict' (line 2347)
    depend_dict_85479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2347, 15), 'depend_dict')
    # Obtaining the member '__getitem__' of a type (line 2347)
    getitem___85480 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2347, 15), depend_dict_85479, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2347)
    subscript_call_result_85481 = invoke(stypy.reporting.localization.Localization(__file__, 2347, 15), getitem___85480, name_85478)
    
    # Applying the 'not' unary operator (line 2347)
    result_not__85482 = python_operator(stypy.reporting.localization.Localization(__file__, 2347, 11), 'not', subscript_call_result_85481)
    
    # Testing the type of an if condition (line 2347)
    if_condition_85483 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2347, 8), result_not__85482)
    # Assigning a type to the variable 'if_condition_85483' (line 2347)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2347, 8), 'if_condition_85483', if_condition_85483)
    # SSA begins for if statement (line 2347)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2348)
    # Processing the call arguments (line 2348)
    # Getting the type of 'name' (line 2348)
    name_85486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2348, 25), 'name', False)
    # Processing the call keyword arguments (line 2348)
    kwargs_85487 = {}
    # Getting the type of 'names' (line 2348)
    names_85484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2348, 12), 'names', False)
    # Obtaining the member 'append' of a type (line 2348)
    append_85485 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2348, 12), names_85484, 'append')
    # Calling append(args, kwargs) (line 2348)
    append_call_result_85488 = invoke(stypy.reporting.localization.Localization(__file__, 2348, 12), append_85485, *[name_85486], **kwargs_85487)
    
    # Deleting a member
    # Getting the type of 'depend_dict' (line 2349)
    depend_dict_85489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2349, 16), 'depend_dict')
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 2349)
    name_85490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2349, 28), 'name')
    # Getting the type of 'depend_dict' (line 2349)
    depend_dict_85491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2349, 16), 'depend_dict')
    # Obtaining the member '__getitem__' of a type (line 2349)
    getitem___85492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2349, 16), depend_dict_85491, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2349)
    subscript_call_result_85493 = invoke(stypy.reporting.localization.Localization(__file__, 2349, 16), getitem___85492, name_85490)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2349, 12), depend_dict_85489, subscript_call_result_85493)
    # SSA join for if statement (line 2347)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'depend_dict' (line 2350)
    depend_dict_85494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2350, 10), 'depend_dict')
    # Testing the type of an if condition (line 2350)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2350, 4), depend_dict_85494)
    # SSA begins for while statement (line 2350)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    
    # Call to list(...): (line 2351)
    # Processing the call arguments (line 2351)
    
    # Call to items(...): (line 2351)
    # Processing the call keyword arguments (line 2351)
    kwargs_85498 = {}
    # Getting the type of 'depend_dict' (line 2351)
    depend_dict_85496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2351, 30), 'depend_dict', False)
    # Obtaining the member 'items' of a type (line 2351)
    items_85497 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2351, 30), depend_dict_85496, 'items')
    # Calling items(args, kwargs) (line 2351)
    items_call_result_85499 = invoke(stypy.reporting.localization.Localization(__file__, 2351, 30), items_85497, *[], **kwargs_85498)
    
    # Processing the call keyword arguments (line 2351)
    kwargs_85500 = {}
    # Getting the type of 'list' (line 2351)
    list_85495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2351, 25), 'list', False)
    # Calling list(args, kwargs) (line 2351)
    list_call_result_85501 = invoke(stypy.reporting.localization.Localization(__file__, 2351, 25), list_85495, *[items_call_result_85499], **kwargs_85500)
    
    # Testing the type of a for loop iterable (line 2351)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2351, 8), list_call_result_85501)
    # Getting the type of the for loop variable (line 2351)
    for_loop_var_85502 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2351, 8), list_call_result_85501)
    # Assigning a type to the variable 'name' (line 2351)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2351, 8), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2351, 8), for_loop_var_85502))
    # Assigning a type to the variable 'lst' (line 2351)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2351, 8), 'lst', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2351, 8), for_loop_var_85502))
    # SSA begins for a for statement (line 2351)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a ListComp to a Name (line 2352):
    
    # Assigning a ListComp to a Name (line 2352):
    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 'lst' (line 2352)
    lst_85507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2352, 34), 'lst')
    comprehension_85508 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2352, 23), lst_85507)
    # Assigning a type to the variable 'n' (line 2352)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2352, 23), 'n', comprehension_85508)
    
    # Getting the type of 'n' (line 2352)
    n_85504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2352, 41), 'n')
    # Getting the type of 'depend_dict' (line 2352)
    depend_dict_85505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2352, 46), 'depend_dict')
    # Applying the binary operator 'in' (line 2352)
    result_contains_85506 = python_operator(stypy.reporting.localization.Localization(__file__, 2352, 41), 'in', n_85504, depend_dict_85505)
    
    # Getting the type of 'n' (line 2352)
    n_85503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2352, 23), 'n')
    list_85509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2352, 23), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2352, 23), list_85509, n_85503)
    # Assigning a type to the variable 'new_lst' (line 2352)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2352, 12), 'new_lst', list_85509)
    
    
    # Getting the type of 'new_lst' (line 2353)
    new_lst_85510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2353, 19), 'new_lst')
    # Applying the 'not' unary operator (line 2353)
    result_not__85511 = python_operator(stypy.reporting.localization.Localization(__file__, 2353, 15), 'not', new_lst_85510)
    
    # Testing the type of an if condition (line 2353)
    if_condition_85512 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2353, 12), result_not__85511)
    # Assigning a type to the variable 'if_condition_85512' (line 2353)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2353, 12), 'if_condition_85512', if_condition_85512)
    # SSA begins for if statement (line 2353)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2354)
    # Processing the call arguments (line 2354)
    # Getting the type of 'name' (line 2354)
    name_85515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2354, 29), 'name', False)
    # Processing the call keyword arguments (line 2354)
    kwargs_85516 = {}
    # Getting the type of 'names' (line 2354)
    names_85513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2354, 16), 'names', False)
    # Obtaining the member 'append' of a type (line 2354)
    append_85514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2354, 16), names_85513, 'append')
    # Calling append(args, kwargs) (line 2354)
    append_call_result_85517 = invoke(stypy.reporting.localization.Localization(__file__, 2354, 16), append_85514, *[name_85515], **kwargs_85516)
    
    # Deleting a member
    # Getting the type of 'depend_dict' (line 2355)
    depend_dict_85518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2355, 20), 'depend_dict')
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 2355)
    name_85519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2355, 32), 'name')
    # Getting the type of 'depend_dict' (line 2355)
    depend_dict_85520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2355, 20), 'depend_dict')
    # Obtaining the member '__getitem__' of a type (line 2355)
    getitem___85521 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2355, 20), depend_dict_85520, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2355)
    subscript_call_result_85522 = invoke(stypy.reporting.localization.Localization(__file__, 2355, 20), getitem___85521, name_85519)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2355, 16), depend_dict_85518, subscript_call_result_85522)
    # SSA branch for the else part of an if statement (line 2353)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Name to a Subscript (line 2357):
    
    # Assigning a Name to a Subscript (line 2357):
    # Getting the type of 'new_lst' (line 2357)
    new_lst_85523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2357, 36), 'new_lst')
    # Getting the type of 'depend_dict' (line 2357)
    depend_dict_85524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2357, 16), 'depend_dict')
    # Getting the type of 'name' (line 2357)
    name_85525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2357, 28), 'name')
    # Storing an element on a container (line 2357)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2357, 16), depend_dict_85524, (name_85525, new_lst_85523))
    # SSA join for if statement (line 2353)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for while statement (line 2350)
    module_type_store = module_type_store.join_ssa_context()
    
    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 'names' (line 2358)
    names_85530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2358, 29), 'names')
    comprehension_85531 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2358, 12), names_85530)
    # Assigning a type to the variable 'name' (line 2358)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2358, 12), 'name', comprehension_85531)
    
    # Getting the type of 'name' (line 2358)
    name_85527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2358, 38), 'name')
    # Getting the type of 'vars' (line 2358)
    vars_85528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2358, 46), 'vars')
    # Applying the binary operator 'in' (line 2358)
    result_contains_85529 = python_operator(stypy.reporting.localization.Localization(__file__, 2358, 38), 'in', name_85527, vars_85528)
    
    # Getting the type of 'name' (line 2358)
    name_85526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2358, 12), 'name')
    list_85532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2358, 12), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2358, 12), list_85532, name_85526)
    # Assigning a type to the variable 'stypy_return_type' (line 2358)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2358, 4), 'stypy_return_type', list_85532)
    
    # ################# End of 'get_sorted_names(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'get_sorted_names' in the type store
    # Getting the type of 'stypy_return_type' (line 2341)
    stypy_return_type_85533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2341, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_85533)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'get_sorted_names'
    return stypy_return_type_85533

# Assigning a type to the variable 'get_sorted_names' (line 2341)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2341, 0), 'get_sorted_names', get_sorted_names)

@norecursion
def _kind_func(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_kind_func'
    module_type_store = module_type_store.open_function_context('_kind_func', 2361, 0, False)
    
    # Passed parameters checking function
    _kind_func.stypy_localization = localization
    _kind_func.stypy_type_of_self = None
    _kind_func.stypy_type_store = module_type_store
    _kind_func.stypy_function_name = '_kind_func'
    _kind_func.stypy_param_names_list = ['string']
    _kind_func.stypy_varargs_param_name = None
    _kind_func.stypy_kwargs_param_name = None
    _kind_func.stypy_call_defaults = defaults
    _kind_func.stypy_call_varargs = varargs
    _kind_func.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_kind_func', ['string'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_kind_func', localization, ['string'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_kind_func(...)' code ##################

    
    
    
    # Obtaining the type of the subscript
    int_85534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2363, 14), 'int')
    # Getting the type of 'string' (line 2363)
    string_85535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2363, 7), 'string')
    # Obtaining the member '__getitem__' of a type (line 2363)
    getitem___85536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2363, 7), string_85535, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2363)
    subscript_call_result_85537 = invoke(stypy.reporting.localization.Localization(__file__, 2363, 7), getitem___85536, int_85534)
    
    str_85538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2363, 20), 'str', '\'"')
    # Applying the binary operator 'in' (line 2363)
    result_contains_85539 = python_operator(stypy.reporting.localization.Localization(__file__, 2363, 7), 'in', subscript_call_result_85537, str_85538)
    
    # Testing the type of an if condition (line 2363)
    if_condition_85540 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2363, 4), result_contains_85539)
    # Assigning a type to the variable 'if_condition_85540' (line 2363)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2363, 4), 'if_condition_85540', if_condition_85540)
    # SSA begins for if statement (line 2363)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2364):
    
    # Assigning a Subscript to a Name (line 2364):
    
    # Obtaining the type of the subscript
    int_85541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2364, 24), 'int')
    int_85542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2364, 26), 'int')
    slice_85543 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2364, 17), int_85541, int_85542, None)
    # Getting the type of 'string' (line 2364)
    string_85544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2364, 17), 'string')
    # Obtaining the member '__getitem__' of a type (line 2364)
    getitem___85545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2364, 17), string_85544, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2364)
    subscript_call_result_85546 = invoke(stypy.reporting.localization.Localization(__file__, 2364, 17), getitem___85545, slice_85543)
    
    # Assigning a type to the variable 'string' (line 2364)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2364, 8), 'string', subscript_call_result_85546)
    # SSA join for if statement (line 2363)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to match(...): (line 2365)
    # Processing the call arguments (line 2365)
    # Getting the type of 'string' (line 2365)
    string_85549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2365, 27), 'string', False)
    # Processing the call keyword arguments (line 2365)
    kwargs_85550 = {}
    # Getting the type of 'real16pattern' (line 2365)
    real16pattern_85547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2365, 7), 'real16pattern', False)
    # Obtaining the member 'match' of a type (line 2365)
    match_85548 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2365, 7), real16pattern_85547, 'match')
    # Calling match(args, kwargs) (line 2365)
    match_call_result_85551 = invoke(stypy.reporting.localization.Localization(__file__, 2365, 7), match_85548, *[string_85549], **kwargs_85550)
    
    # Testing the type of an if condition (line 2365)
    if_condition_85552 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2365, 4), match_call_result_85551)
    # Assigning a type to the variable 'if_condition_85552' (line 2365)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2365, 4), 'if_condition_85552', if_condition_85552)
    # SSA begins for if statement (line 2365)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    int_85553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2366, 15), 'int')
    # Assigning a type to the variable 'stypy_return_type' (line 2366)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2366, 8), 'stypy_return_type', int_85553)
    # SSA branch for the else part of an if statement (line 2365)
    module_type_store.open_ssa_branch('else')
    
    
    # Call to match(...): (line 2367)
    # Processing the call arguments (line 2367)
    # Getting the type of 'string' (line 2367)
    string_85556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2367, 28), 'string', False)
    # Processing the call keyword arguments (line 2367)
    kwargs_85557 = {}
    # Getting the type of 'real8pattern' (line 2367)
    real8pattern_85554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2367, 9), 'real8pattern', False)
    # Obtaining the member 'match' of a type (line 2367)
    match_85555 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2367, 9), real8pattern_85554, 'match')
    # Calling match(args, kwargs) (line 2367)
    match_call_result_85558 = invoke(stypy.reporting.localization.Localization(__file__, 2367, 9), match_85555, *[string_85556], **kwargs_85557)
    
    # Testing the type of an if condition (line 2367)
    if_condition_85559 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2367, 9), match_call_result_85558)
    # Assigning a type to the variable 'if_condition_85559' (line 2367)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2367, 9), 'if_condition_85559', if_condition_85559)
    # SSA begins for if statement (line 2367)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    int_85560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2368, 15), 'int')
    # Assigning a type to the variable 'stypy_return_type' (line 2368)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2368, 8), 'stypy_return_type', int_85560)
    # SSA join for if statement (line 2367)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2365)
    module_type_store = module_type_store.join_ssa_context()
    
    str_85561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2369, 11), 'str', 'kind(')
    # Getting the type of 'string' (line 2369)
    string_85562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2369, 21), 'string')
    # Applying the binary operator '+' (line 2369)
    result_add_85563 = python_operator(stypy.reporting.localization.Localization(__file__, 2369, 11), '+', str_85561, string_85562)
    
    str_85564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2369, 30), 'str', ')')
    # Applying the binary operator '+' (line 2369)
    result_add_85565 = python_operator(stypy.reporting.localization.Localization(__file__, 2369, 28), '+', result_add_85563, str_85564)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2369)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2369, 4), 'stypy_return_type', result_add_85565)
    
    # ################# End of '_kind_func(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_kind_func' in the type store
    # Getting the type of 'stypy_return_type' (line 2361)
    stypy_return_type_85566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2361, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_85566)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_kind_func'
    return stypy_return_type_85566

# Assigning a type to the variable '_kind_func' (line 2361)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2361, 0), '_kind_func', _kind_func)

@norecursion
def _selected_int_kind_func(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_selected_int_kind_func'
    module_type_store = module_type_store.open_function_context('_selected_int_kind_func', 2372, 0, False)
    
    # Passed parameters checking function
    _selected_int_kind_func.stypy_localization = localization
    _selected_int_kind_func.stypy_type_of_self = None
    _selected_int_kind_func.stypy_type_store = module_type_store
    _selected_int_kind_func.stypy_function_name = '_selected_int_kind_func'
    _selected_int_kind_func.stypy_param_names_list = ['r']
    _selected_int_kind_func.stypy_varargs_param_name = None
    _selected_int_kind_func.stypy_kwargs_param_name = None
    _selected_int_kind_func.stypy_call_defaults = defaults
    _selected_int_kind_func.stypy_call_varargs = varargs
    _selected_int_kind_func.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_selected_int_kind_func', ['r'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_selected_int_kind_func', localization, ['r'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_selected_int_kind_func(...)' code ##################

    
    # Assigning a BinOp to a Name (line 2374):
    
    # Assigning a BinOp to a Name (line 2374):
    int_85567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2374, 8), 'int')
    # Getting the type of 'r' (line 2374)
    r_85568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2374, 14), 'r')
    # Applying the binary operator '**' (line 2374)
    result_pow_85569 = python_operator(stypy.reporting.localization.Localization(__file__, 2374, 8), '**', int_85567, r_85568)
    
    # Assigning a type to the variable 'm' (line 2374)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2374, 4), 'm', result_pow_85569)
    
    
    # Getting the type of 'm' (line 2375)
    m_85570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2375, 7), 'm')
    int_85571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2375, 12), 'int')
    int_85572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2375, 17), 'int')
    # Applying the binary operator '**' (line 2375)
    result_pow_85573 = python_operator(stypy.reporting.localization.Localization(__file__, 2375, 12), '**', int_85571, int_85572)
    
    # Applying the binary operator '<=' (line 2375)
    result_le_85574 = python_operator(stypy.reporting.localization.Localization(__file__, 2375, 7), '<=', m_85570, result_pow_85573)
    
    # Testing the type of an if condition (line 2375)
    if_condition_85575 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2375, 4), result_le_85574)
    # Assigning a type to the variable 'if_condition_85575' (line 2375)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2375, 4), 'if_condition_85575', if_condition_85575)
    # SSA begins for if statement (line 2375)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    int_85576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2376, 15), 'int')
    # Assigning a type to the variable 'stypy_return_type' (line 2376)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2376, 8), 'stypy_return_type', int_85576)
    # SSA join for if statement (line 2375)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'm' (line 2377)
    m_85577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2377, 7), 'm')
    int_85578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2377, 12), 'int')
    int_85579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2377, 17), 'int')
    # Applying the binary operator '**' (line 2377)
    result_pow_85580 = python_operator(stypy.reporting.localization.Localization(__file__, 2377, 12), '**', int_85578, int_85579)
    
    # Applying the binary operator '<=' (line 2377)
    result_le_85581 = python_operator(stypy.reporting.localization.Localization(__file__, 2377, 7), '<=', m_85577, result_pow_85580)
    
    # Testing the type of an if condition (line 2377)
    if_condition_85582 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2377, 4), result_le_85581)
    # Assigning a type to the variable 'if_condition_85582' (line 2377)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2377, 4), 'if_condition_85582', if_condition_85582)
    # SSA begins for if statement (line 2377)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    int_85583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2378, 15), 'int')
    # Assigning a type to the variable 'stypy_return_type' (line 2378)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2378, 8), 'stypy_return_type', int_85583)
    # SSA join for if statement (line 2377)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'm' (line 2379)
    m_85584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2379, 7), 'm')
    int_85585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2379, 12), 'int')
    int_85586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2379, 17), 'int')
    # Applying the binary operator '**' (line 2379)
    result_pow_85587 = python_operator(stypy.reporting.localization.Localization(__file__, 2379, 12), '**', int_85585, int_85586)
    
    # Applying the binary operator '<=' (line 2379)
    result_le_85588 = python_operator(stypy.reporting.localization.Localization(__file__, 2379, 7), '<=', m_85584, result_pow_85587)
    
    # Testing the type of an if condition (line 2379)
    if_condition_85589 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2379, 4), result_le_85588)
    # Assigning a type to the variable 'if_condition_85589' (line 2379)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2379, 4), 'if_condition_85589', if_condition_85589)
    # SSA begins for if statement (line 2379)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    int_85590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2380, 15), 'int')
    # Assigning a type to the variable 'stypy_return_type' (line 2380)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2380, 8), 'stypy_return_type', int_85590)
    # SSA join for if statement (line 2379)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'm' (line 2381)
    m_85591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2381, 7), 'm')
    int_85592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2381, 12), 'int')
    int_85593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2381, 17), 'int')
    # Applying the binary operator '**' (line 2381)
    result_pow_85594 = python_operator(stypy.reporting.localization.Localization(__file__, 2381, 12), '**', int_85592, int_85593)
    
    # Applying the binary operator '<=' (line 2381)
    result_le_85595 = python_operator(stypy.reporting.localization.Localization(__file__, 2381, 7), '<=', m_85591, result_pow_85594)
    
    # Testing the type of an if condition (line 2381)
    if_condition_85596 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2381, 4), result_le_85595)
    # Assigning a type to the variable 'if_condition_85596' (line 2381)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2381, 4), 'if_condition_85596', if_condition_85596)
    # SSA begins for if statement (line 2381)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    int_85597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2382, 15), 'int')
    # Assigning a type to the variable 'stypy_return_type' (line 2382)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2382, 8), 'stypy_return_type', int_85597)
    # SSA join for if statement (line 2381)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'm' (line 2383)
    m_85598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2383, 7), 'm')
    int_85599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2383, 12), 'int')
    int_85600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2383, 17), 'int')
    # Applying the binary operator '**' (line 2383)
    result_pow_85601 = python_operator(stypy.reporting.localization.Localization(__file__, 2383, 12), '**', int_85599, int_85600)
    
    # Applying the binary operator '<=' (line 2383)
    result_le_85602 = python_operator(stypy.reporting.localization.Localization(__file__, 2383, 7), '<=', m_85598, result_pow_85601)
    
    # Testing the type of an if condition (line 2383)
    if_condition_85603 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2383, 4), result_le_85602)
    # Assigning a type to the variable 'if_condition_85603' (line 2383)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2383, 4), 'if_condition_85603', if_condition_85603)
    # SSA begins for if statement (line 2383)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    int_85604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2384, 15), 'int')
    # Assigning a type to the variable 'stypy_return_type' (line 2384)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2384, 8), 'stypy_return_type', int_85604)
    # SSA join for if statement (line 2383)
    module_type_store = module_type_store.join_ssa_context()
    
    int_85605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2385, 11), 'int')
    # Assigning a type to the variable 'stypy_return_type' (line 2385)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2385, 4), 'stypy_return_type', int_85605)
    
    # ################# End of '_selected_int_kind_func(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_selected_int_kind_func' in the type store
    # Getting the type of 'stypy_return_type' (line 2372)
    stypy_return_type_85606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2372, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_85606)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_selected_int_kind_func'
    return stypy_return_type_85606

# Assigning a type to the variable '_selected_int_kind_func' (line 2372)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2372, 0), '_selected_int_kind_func', _selected_int_kind_func)

@norecursion
def _selected_real_kind_func(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    int_85607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2388, 34), 'int')
    int_85608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2388, 43), 'int')
    defaults = [int_85607, int_85608]
    # Create a new context for function '_selected_real_kind_func'
    module_type_store = module_type_store.open_function_context('_selected_real_kind_func', 2388, 0, False)
    
    # Passed parameters checking function
    _selected_real_kind_func.stypy_localization = localization
    _selected_real_kind_func.stypy_type_of_self = None
    _selected_real_kind_func.stypy_type_store = module_type_store
    _selected_real_kind_func.stypy_function_name = '_selected_real_kind_func'
    _selected_real_kind_func.stypy_param_names_list = ['p', 'r', 'radix']
    _selected_real_kind_func.stypy_varargs_param_name = None
    _selected_real_kind_func.stypy_kwargs_param_name = None
    _selected_real_kind_func.stypy_call_defaults = defaults
    _selected_real_kind_func.stypy_call_varargs = varargs
    _selected_real_kind_func.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_selected_real_kind_func', ['p', 'r', 'radix'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_selected_real_kind_func', localization, ['p', 'r', 'radix'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_selected_real_kind_func(...)' code ##################

    
    
    # Getting the type of 'p' (line 2391)
    p_85609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2391, 7), 'p')
    int_85610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2391, 11), 'int')
    # Applying the binary operator '<' (line 2391)
    result_lt_85611 = python_operator(stypy.reporting.localization.Localization(__file__, 2391, 7), '<', p_85609, int_85610)
    
    # Testing the type of an if condition (line 2391)
    if_condition_85612 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2391, 4), result_lt_85611)
    # Assigning a type to the variable 'if_condition_85612' (line 2391)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2391, 4), 'if_condition_85612', if_condition_85612)
    # SSA begins for if statement (line 2391)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    int_85613 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2392, 15), 'int')
    # Assigning a type to the variable 'stypy_return_type' (line 2392)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2392, 8), 'stypy_return_type', int_85613)
    # SSA join for if statement (line 2391)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'p' (line 2393)
    p_85614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2393, 7), 'p')
    int_85615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2393, 11), 'int')
    # Applying the binary operator '<' (line 2393)
    result_lt_85616 = python_operator(stypy.reporting.localization.Localization(__file__, 2393, 7), '<', p_85614, int_85615)
    
    # Testing the type of an if condition (line 2393)
    if_condition_85617 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2393, 4), result_lt_85616)
    # Assigning a type to the variable 'if_condition_85617' (line 2393)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2393, 4), 'if_condition_85617', if_condition_85617)
    # SSA begins for if statement (line 2393)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    int_85618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2394, 15), 'int')
    # Assigning a type to the variable 'stypy_return_type' (line 2394)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2394, 8), 'stypy_return_type', int_85618)
    # SSA join for if statement (line 2393)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to startswith(...): (line 2395)
    # Processing the call arguments (line 2395)
    str_85627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2395, 45), 'str', 'power')
    # Processing the call keyword arguments (line 2395)
    kwargs_85628 = {}
    
    # Call to lower(...): (line 2395)
    # Processing the call keyword arguments (line 2395)
    kwargs_85624 = {}
    
    # Call to machine(...): (line 2395)
    # Processing the call keyword arguments (line 2395)
    kwargs_85621 = {}
    # Getting the type of 'platform' (line 2395)
    platform_85619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2395, 7), 'platform', False)
    # Obtaining the member 'machine' of a type (line 2395)
    machine_85620 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2395, 7), platform_85619, 'machine')
    # Calling machine(args, kwargs) (line 2395)
    machine_call_result_85622 = invoke(stypy.reporting.localization.Localization(__file__, 2395, 7), machine_85620, *[], **kwargs_85621)
    
    # Obtaining the member 'lower' of a type (line 2395)
    lower_85623 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2395, 7), machine_call_result_85622, 'lower')
    # Calling lower(args, kwargs) (line 2395)
    lower_call_result_85625 = invoke(stypy.reporting.localization.Localization(__file__, 2395, 7), lower_85623, *[], **kwargs_85624)
    
    # Obtaining the member 'startswith' of a type (line 2395)
    startswith_85626 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2395, 7), lower_call_result_85625, 'startswith')
    # Calling startswith(args, kwargs) (line 2395)
    startswith_call_result_85629 = invoke(stypy.reporting.localization.Localization(__file__, 2395, 7), startswith_85626, *[str_85627], **kwargs_85628)
    
    # Testing the type of an if condition (line 2395)
    if_condition_85630 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2395, 4), startswith_call_result_85629)
    # Assigning a type to the variable 'if_condition_85630' (line 2395)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2395, 4), 'if_condition_85630', if_condition_85630)
    # SSA begins for if statement (line 2395)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'p' (line 2396)
    p_85631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2396, 11), 'p')
    int_85632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2396, 16), 'int')
    # Applying the binary operator '<=' (line 2396)
    result_le_85633 = python_operator(stypy.reporting.localization.Localization(__file__, 2396, 11), '<=', p_85631, int_85632)
    
    # Testing the type of an if condition (line 2396)
    if_condition_85634 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2396, 8), result_le_85633)
    # Assigning a type to the variable 'if_condition_85634' (line 2396)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2396, 8), 'if_condition_85634', if_condition_85634)
    # SSA begins for if statement (line 2396)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    int_85635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2397, 19), 'int')
    # Assigning a type to the variable 'stypy_return_type' (line 2397)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2397, 12), 'stypy_return_type', int_85635)
    # SSA join for if statement (line 2396)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 2395)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'p' (line 2399)
    p_85636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2399, 11), 'p')
    int_85637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2399, 15), 'int')
    # Applying the binary operator '<' (line 2399)
    result_lt_85638 = python_operator(stypy.reporting.localization.Localization(__file__, 2399, 11), '<', p_85636, int_85637)
    
    # Testing the type of an if condition (line 2399)
    if_condition_85639 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2399, 8), result_lt_85638)
    # Assigning a type to the variable 'if_condition_85639' (line 2399)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2399, 8), 'if_condition_85639', if_condition_85639)
    # SSA begins for if statement (line 2399)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    int_85640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2400, 19), 'int')
    # Assigning a type to the variable 'stypy_return_type' (line 2400)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2400, 12), 'stypy_return_type', int_85640)
    # SSA branch for the else part of an if statement (line 2399)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'p' (line 2401)
    p_85641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2401, 13), 'p')
    int_85642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2401, 18), 'int')
    # Applying the binary operator '<=' (line 2401)
    result_le_85643 = python_operator(stypy.reporting.localization.Localization(__file__, 2401, 13), '<=', p_85641, int_85642)
    
    # Testing the type of an if condition (line 2401)
    if_condition_85644 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2401, 13), result_le_85643)
    # Assigning a type to the variable 'if_condition_85644' (line 2401)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2401, 13), 'if_condition_85644', if_condition_85644)
    # SSA begins for if statement (line 2401)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    int_85645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2402, 19), 'int')
    # Assigning a type to the variable 'stypy_return_type' (line 2402)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2402, 12), 'stypy_return_type', int_85645)
    # SSA join for if statement (line 2401)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2399)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2395)
    module_type_store = module_type_store.join_ssa_context()
    
    int_85646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2403, 11), 'int')
    # Assigning a type to the variable 'stypy_return_type' (line 2403)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2403, 4), 'stypy_return_type', int_85646)
    
    # ################# End of '_selected_real_kind_func(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_selected_real_kind_func' in the type store
    # Getting the type of 'stypy_return_type' (line 2388)
    stypy_return_type_85647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2388, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_85647)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_selected_real_kind_func'
    return stypy_return_type_85647

# Assigning a type to the variable '_selected_real_kind_func' (line 2388)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2388, 0), '_selected_real_kind_func', _selected_real_kind_func)

@norecursion
def get_parameters(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    
    # Obtaining an instance of the builtin type 'dict' (line 2406)
    dict_85648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2406, 39), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2406)
    
    defaults = [dict_85648]
    # Create a new context for function 'get_parameters'
    module_type_store = module_type_store.open_function_context('get_parameters', 2406, 0, False)
    
    # Passed parameters checking function
    get_parameters.stypy_localization = localization
    get_parameters.stypy_type_of_self = None
    get_parameters.stypy_type_store = module_type_store
    get_parameters.stypy_function_name = 'get_parameters'
    get_parameters.stypy_param_names_list = ['vars', 'global_params']
    get_parameters.stypy_varargs_param_name = None
    get_parameters.stypy_kwargs_param_name = None
    get_parameters.stypy_call_defaults = defaults
    get_parameters.stypy_call_varargs = varargs
    get_parameters.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'get_parameters', ['vars', 'global_params'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'get_parameters', localization, ['vars', 'global_params'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'get_parameters(...)' code ##################

    
    # Assigning a Call to a Name (line 2407):
    
    # Assigning a Call to a Name (line 2407):
    
    # Call to copy(...): (line 2407)
    # Processing the call arguments (line 2407)
    # Getting the type of 'global_params' (line 2407)
    global_params_85651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2407, 23), 'global_params', False)
    # Processing the call keyword arguments (line 2407)
    kwargs_85652 = {}
    # Getting the type of 'copy' (line 2407)
    copy_85649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2407, 13), 'copy', False)
    # Obtaining the member 'copy' of a type (line 2407)
    copy_85650 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2407, 13), copy_85649, 'copy')
    # Calling copy(args, kwargs) (line 2407)
    copy_call_result_85653 = invoke(stypy.reporting.localization.Localization(__file__, 2407, 13), copy_85650, *[global_params_85651], **kwargs_85652)
    
    # Assigning a type to the variable 'params' (line 2407)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2407, 4), 'params', copy_call_result_85653)
    
    # Assigning a Call to a Name (line 2408):
    
    # Assigning a Call to a Name (line 2408):
    
    # Call to copy(...): (line 2408)
    # Processing the call arguments (line 2408)
    # Getting the type of 'global_params' (line 2408)
    global_params_85656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2408, 25), 'global_params', False)
    # Processing the call keyword arguments (line 2408)
    kwargs_85657 = {}
    # Getting the type of 'copy' (line 2408)
    copy_85654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2408, 15), 'copy', False)
    # Obtaining the member 'copy' of a type (line 2408)
    copy_85655 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2408, 15), copy_85654, 'copy')
    # Calling copy(args, kwargs) (line 2408)
    copy_call_result_85658 = invoke(stypy.reporting.localization.Localization(__file__, 2408, 15), copy_85655, *[global_params_85656], **kwargs_85657)
    
    # Assigning a type to the variable 'g_params' (line 2408)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2408, 4), 'g_params', copy_call_result_85658)
    
    
    # Obtaining an instance of the builtin type 'list' (line 2409)
    list_85659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2409, 22), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2409)
    # Adding element type (line 2409)
    
    # Obtaining an instance of the builtin type 'tuple' (line 2409)
    tuple_85660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2409, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2409)
    # Adding element type (line 2409)
    str_85661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2409, 24), 'str', 'kind')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2409, 24), tuple_85660, str_85661)
    # Adding element type (line 2409)
    # Getting the type of '_kind_func' (line 2409)
    _kind_func_85662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2409, 32), '_kind_func')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2409, 24), tuple_85660, _kind_func_85662)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2409, 22), list_85659, tuple_85660)
    # Adding element type (line 2409)
    
    # Obtaining an instance of the builtin type 'tuple' (line 2410)
    tuple_85663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2410, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2410)
    # Adding element type (line 2410)
    str_85664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2410, 24), 'str', 'selected_int_kind')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2410, 24), tuple_85663, str_85664)
    # Adding element type (line 2410)
    # Getting the type of '_selected_int_kind_func' (line 2410)
    _selected_int_kind_func_85665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2410, 45), '_selected_int_kind_func')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2410, 24), tuple_85663, _selected_int_kind_func_85665)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2409, 22), list_85659, tuple_85663)
    # Adding element type (line 2409)
    
    # Obtaining an instance of the builtin type 'tuple' (line 2411)
    tuple_85666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2411, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2411)
    # Adding element type (line 2411)
    str_85667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2411, 24), 'str', 'selected_real_kind')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2411, 24), tuple_85666, str_85667)
    # Adding element type (line 2411)
    # Getting the type of '_selected_real_kind_func' (line 2411)
    _selected_real_kind_func_85668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2411, 46), '_selected_real_kind_func')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2411, 24), tuple_85666, _selected_real_kind_func_85668)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2409, 22), list_85659, tuple_85666)
    
    # Testing the type of a for loop iterable (line 2409)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2409, 4), list_85659)
    # Getting the type of the for loop variable (line 2409)
    for_loop_var_85669 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2409, 4), list_85659)
    # Assigning a type to the variable 'name' (line 2409)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2409, 4), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2409, 4), for_loop_var_85669))
    # Assigning a type to the variable 'func' (line 2409)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2409, 4), 'func', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2409, 4), for_loop_var_85669))
    # SSA begins for a for statement (line 2409)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'name' (line 2412)
    name_85670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2412, 11), 'name')
    # Getting the type of 'g_params' (line 2412)
    g_params_85671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2412, 23), 'g_params')
    # Applying the binary operator 'notin' (line 2412)
    result_contains_85672 = python_operator(stypy.reporting.localization.Localization(__file__, 2412, 11), 'notin', name_85670, g_params_85671)
    
    # Testing the type of an if condition (line 2412)
    if_condition_85673 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2412, 8), result_contains_85672)
    # Assigning a type to the variable 'if_condition_85673' (line 2412)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2412, 8), 'if_condition_85673', if_condition_85673)
    # SSA begins for if statement (line 2412)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Subscript (line 2413):
    
    # Assigning a Name to a Subscript (line 2413):
    # Getting the type of 'func' (line 2413)
    func_85674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 29), 'func')
    # Getting the type of 'g_params' (line 2413)
    g_params_85675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 12), 'g_params')
    # Getting the type of 'name' (line 2413)
    name_85676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 21), 'name')
    # Storing an element on a container (line 2413)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2413, 12), g_params_85675, (name_85676, func_85674))
    # SSA join for if statement (line 2412)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a List to a Name (line 2414):
    
    # Assigning a List to a Name (line 2414):
    
    # Obtaining an instance of the builtin type 'list' (line 2414)
    list_85677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2414, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2414)
    
    # Assigning a type to the variable 'param_names' (line 2414)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2414, 4), 'param_names', list_85677)
    
    
    # Call to get_sorted_names(...): (line 2415)
    # Processing the call arguments (line 2415)
    # Getting the type of 'vars' (line 2415)
    vars_85679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2415, 30), 'vars', False)
    # Processing the call keyword arguments (line 2415)
    kwargs_85680 = {}
    # Getting the type of 'get_sorted_names' (line 2415)
    get_sorted_names_85678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2415, 13), 'get_sorted_names', False)
    # Calling get_sorted_names(args, kwargs) (line 2415)
    get_sorted_names_call_result_85681 = invoke(stypy.reporting.localization.Localization(__file__, 2415, 13), get_sorted_names_85678, *[vars_85679], **kwargs_85680)
    
    # Testing the type of a for loop iterable (line 2415)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2415, 4), get_sorted_names_call_result_85681)
    # Getting the type of the for loop variable (line 2415)
    for_loop_var_85682 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2415, 4), get_sorted_names_call_result_85681)
    # Assigning a type to the variable 'n' (line 2415)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2415, 4), 'n', for_loop_var_85682)
    # SSA begins for a for statement (line 2415)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    str_85683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2416, 11), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2416)
    n_85684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2416, 30), 'n')
    # Getting the type of 'vars' (line 2416)
    vars_85685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2416, 25), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2416)
    getitem___85686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2416, 25), vars_85685, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2416)
    subscript_call_result_85687 = invoke(stypy.reporting.localization.Localization(__file__, 2416, 25), getitem___85686, n_85684)
    
    # Applying the binary operator 'in' (line 2416)
    result_contains_85688 = python_operator(stypy.reporting.localization.Localization(__file__, 2416, 11), 'in', str_85683, subscript_call_result_85687)
    
    
    str_85689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2416, 37), 'str', 'parameter')
    
    # Obtaining the type of the subscript
    str_85690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2416, 60), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2416)
    n_85691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2416, 57), 'n')
    # Getting the type of 'vars' (line 2416)
    vars_85692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2416, 52), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2416)
    getitem___85693 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2416, 52), vars_85692, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2416)
    subscript_call_result_85694 = invoke(stypy.reporting.localization.Localization(__file__, 2416, 52), getitem___85693, n_85691)
    
    # Obtaining the member '__getitem__' of a type (line 2416)
    getitem___85695 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2416, 52), subscript_call_result_85694, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2416)
    subscript_call_result_85696 = invoke(stypy.reporting.localization.Localization(__file__, 2416, 52), getitem___85695, str_85690)
    
    # Applying the binary operator 'in' (line 2416)
    result_contains_85697 = python_operator(stypy.reporting.localization.Localization(__file__, 2416, 37), 'in', str_85689, subscript_call_result_85696)
    
    # Applying the binary operator 'and' (line 2416)
    result_and_keyword_85698 = python_operator(stypy.reporting.localization.Localization(__file__, 2416, 11), 'and', result_contains_85688, result_contains_85697)
    
    # Testing the type of an if condition (line 2416)
    if_condition_85699 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2416, 8), result_and_keyword_85698)
    # Assigning a type to the variable 'if_condition_85699' (line 2416)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2416, 8), 'if_condition_85699', if_condition_85699)
    # SSA begins for if statement (line 2416)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2417)
    # Processing the call arguments (line 2417)
    # Getting the type of 'n' (line 2417)
    n_85702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2417, 31), 'n', False)
    # Processing the call keyword arguments (line 2417)
    kwargs_85703 = {}
    # Getting the type of 'param_names' (line 2417)
    param_names_85700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2417, 12), 'param_names', False)
    # Obtaining the member 'append' of a type (line 2417)
    append_85701 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2417, 12), param_names_85700, 'append')
    # Calling append(args, kwargs) (line 2417)
    append_call_result_85704 = invoke(stypy.reporting.localization.Localization(__file__, 2417, 12), append_85701, *[n_85702], **kwargs_85703)
    
    # SSA join for if statement (line 2416)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2418):
    
    # Assigning a Call to a Name (line 2418):
    
    # Call to compile(...): (line 2418)
    # Processing the call arguments (line 2418)
    str_85707 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2418, 25), 'str', '\\bkind\\s*\\(\\s*(?P<value>.*)\\s*\\)')
    # Getting the type of 're' (line 2418)
    re_85708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2418, 62), 're', False)
    # Obtaining the member 'I' of a type (line 2418)
    I_85709 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2418, 62), re_85708, 'I')
    # Processing the call keyword arguments (line 2418)
    kwargs_85710 = {}
    # Getting the type of 're' (line 2418)
    re_85705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2418, 14), 're', False)
    # Obtaining the member 'compile' of a type (line 2418)
    compile_85706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2418, 14), re_85705, 'compile')
    # Calling compile(args, kwargs) (line 2418)
    compile_call_result_85711 = invoke(stypy.reporting.localization.Localization(__file__, 2418, 14), compile_85706, *[str_85707, I_85709], **kwargs_85710)
    
    # Assigning a type to the variable 'kind_re' (line 2418)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2418, 4), 'kind_re', compile_call_result_85711)
    
    # Assigning a Call to a Name (line 2419):
    
    # Assigning a Call to a Name (line 2419):
    
    # Call to compile(...): (line 2419)
    # Processing the call arguments (line 2419)
    str_85714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2420, 8), 'str', '\\bselected_int_kind\\s*\\(\\s*(?P<value>.*)\\s*\\)')
    # Getting the type of 're' (line 2420)
    re_85715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2420, 58), 're', False)
    # Obtaining the member 'I' of a type (line 2420)
    I_85716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2420, 58), re_85715, 'I')
    # Processing the call keyword arguments (line 2419)
    kwargs_85717 = {}
    # Getting the type of 're' (line 2419)
    re_85712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2419, 27), 're', False)
    # Obtaining the member 'compile' of a type (line 2419)
    compile_85713 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2419, 27), re_85712, 'compile')
    # Calling compile(args, kwargs) (line 2419)
    compile_call_result_85718 = invoke(stypy.reporting.localization.Localization(__file__, 2419, 27), compile_85713, *[str_85714, I_85716], **kwargs_85717)
    
    # Assigning a type to the variable 'selected_int_kind_re' (line 2419)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2419, 4), 'selected_int_kind_re', compile_call_result_85718)
    
    # Assigning a Call to a Name (line 2421):
    
    # Assigning a Call to a Name (line 2421):
    
    # Call to compile(...): (line 2421)
    # Processing the call arguments (line 2421)
    str_85721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2422, 8), 'str', '\\bselected_(int|real)_kind\\s*\\(\\s*(?P<value>.*)\\s*\\)')
    # Getting the type of 're' (line 2422)
    re_85722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2422, 65), 're', False)
    # Obtaining the member 'I' of a type (line 2422)
    I_85723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2422, 65), re_85722, 'I')
    # Processing the call keyword arguments (line 2421)
    kwargs_85724 = {}
    # Getting the type of 're' (line 2421)
    re_85719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2421, 23), 're', False)
    # Obtaining the member 'compile' of a type (line 2421)
    compile_85720 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2421, 23), re_85719, 'compile')
    # Calling compile(args, kwargs) (line 2421)
    compile_call_result_85725 = invoke(stypy.reporting.localization.Localization(__file__, 2421, 23), compile_85720, *[str_85721, I_85723], **kwargs_85724)
    
    # Assigning a type to the variable 'selected_kind_re' (line 2421)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2421, 4), 'selected_kind_re', compile_call_result_85725)
    
    # Getting the type of 'param_names' (line 2423)
    param_names_85726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2423, 13), 'param_names')
    # Testing the type of a for loop iterable (line 2423)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2423, 4), param_names_85726)
    # Getting the type of the for loop variable (line 2423)
    for_loop_var_85727 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2423, 4), param_names_85726)
    # Assigning a type to the variable 'n' (line 2423)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2423, 4), 'n', for_loop_var_85727)
    # SSA begins for a for statement (line 2423)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    str_85728 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2424, 11), 'str', '=')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2424)
    n_85729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2424, 23), 'n')
    # Getting the type of 'vars' (line 2424)
    vars_85730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2424, 18), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2424)
    getitem___85731 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2424, 18), vars_85730, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2424)
    subscript_call_result_85732 = invoke(stypy.reporting.localization.Localization(__file__, 2424, 18), getitem___85731, n_85729)
    
    # Applying the binary operator 'in' (line 2424)
    result_contains_85733 = python_operator(stypy.reporting.localization.Localization(__file__, 2424, 11), 'in', str_85728, subscript_call_result_85732)
    
    # Testing the type of an if condition (line 2424)
    if_condition_85734 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2424, 8), result_contains_85733)
    # Assigning a type to the variable 'if_condition_85734' (line 2424)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2424, 8), 'if_condition_85734', if_condition_85734)
    # SSA begins for if statement (line 2424)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2425):
    
    # Assigning a Subscript to a Name (line 2425):
    
    # Obtaining the type of the subscript
    str_85735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2425, 24), 'str', '=')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2425)
    n_85736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2425, 21), 'n')
    # Getting the type of 'vars' (line 2425)
    vars_85737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2425, 16), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2425)
    getitem___85738 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2425, 16), vars_85737, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2425)
    subscript_call_result_85739 = invoke(stypy.reporting.localization.Localization(__file__, 2425, 16), getitem___85738, n_85736)
    
    # Obtaining the member '__getitem__' of a type (line 2425)
    getitem___85740 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2425, 16), subscript_call_result_85739, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2425)
    subscript_call_result_85741 = invoke(stypy.reporting.localization.Localization(__file__, 2425, 16), getitem___85740, str_85735)
    
    # Assigning a type to the variable 'v' (line 2425)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2425, 12), 'v', subscript_call_result_85741)
    
    
    # Call to islogical(...): (line 2426)
    # Processing the call arguments (line 2426)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2426)
    n_85743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2426, 30), 'n', False)
    # Getting the type of 'vars' (line 2426)
    vars_85744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2426, 25), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2426)
    getitem___85745 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2426, 25), vars_85744, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2426)
    subscript_call_result_85746 = invoke(stypy.reporting.localization.Localization(__file__, 2426, 25), getitem___85745, n_85743)
    
    # Processing the call keyword arguments (line 2426)
    kwargs_85747 = {}
    # Getting the type of 'islogical' (line 2426)
    islogical_85742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2426, 15), 'islogical', False)
    # Calling islogical(args, kwargs) (line 2426)
    islogical_call_result_85748 = invoke(stypy.reporting.localization.Localization(__file__, 2426, 15), islogical_85742, *[subscript_call_result_85746], **kwargs_85747)
    
    # Testing the type of an if condition (line 2426)
    if_condition_85749 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2426, 12), islogical_call_result_85748)
    # Assigning a type to the variable 'if_condition_85749' (line 2426)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2426, 12), 'if_condition_85749', if_condition_85749)
    # SSA begins for if statement (line 2426)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2427):
    
    # Assigning a Call to a Name (line 2427):
    
    # Call to lower(...): (line 2427)
    # Processing the call keyword arguments (line 2427)
    kwargs_85752 = {}
    # Getting the type of 'v' (line 2427)
    v_85750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2427, 20), 'v', False)
    # Obtaining the member 'lower' of a type (line 2427)
    lower_85751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2427, 20), v_85750, 'lower')
    # Calling lower(args, kwargs) (line 2427)
    lower_call_result_85753 = invoke(stypy.reporting.localization.Localization(__file__, 2427, 20), lower_85751, *[], **kwargs_85752)
    
    # Assigning a type to the variable 'v' (line 2427)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2427, 16), 'v', lower_call_result_85753)
    
    
    # Obtaining an instance of the builtin type 'list' (line 2428)
    list_85754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2428, 28), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2428)
    # Adding element type (line 2428)
    
    # Obtaining an instance of the builtin type 'tuple' (line 2429)
    tuple_85755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2429, 21), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2429)
    # Adding element type (line 2429)
    str_85756 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2429, 21), 'str', '.false.')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2429, 21), tuple_85755, str_85756)
    # Adding element type (line 2429)
    str_85757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2429, 32), 'str', 'False')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2429, 21), tuple_85755, str_85757)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2428, 28), list_85754, tuple_85755)
    # Adding element type (line 2428)
    
    # Obtaining an instance of the builtin type 'tuple' (line 2430)
    tuple_85758 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2430, 21), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2430)
    # Adding element type (line 2430)
    str_85759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2430, 21), 'str', '.true.')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2430, 21), tuple_85758, str_85759)
    # Adding element type (line 2430)
    str_85760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2430, 31), 'str', 'True')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2430, 21), tuple_85758, str_85760)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2428, 28), list_85754, tuple_85758)
    
    # Testing the type of a for loop iterable (line 2428)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2428, 16), list_85754)
    # Getting the type of the for loop variable (line 2428)
    for_loop_var_85761 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2428, 16), list_85754)
    # Assigning a type to the variable 'repl' (line 2428)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2428, 16), 'repl', for_loop_var_85761)
    # SSA begins for a for statement (line 2428)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 2433):
    
    # Assigning a Call to a Name (line 2433):
    
    # Call to replace(...): (line 2433)
    # Getting the type of 'repl' (line 2433)
    repl_85764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2433, 35), 'repl', False)
    # Processing the call keyword arguments (line 2433)
    kwargs_85765 = {}
    # Getting the type of 'v' (line 2433)
    v_85762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2433, 24), 'v', False)
    # Obtaining the member 'replace' of a type (line 2433)
    replace_85763 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2433, 24), v_85762, 'replace')
    # Calling replace(args, kwargs) (line 2433)
    replace_call_result_85766 = invoke(stypy.reporting.localization.Localization(__file__, 2433, 24), replace_85763, *[repl_85764], **kwargs_85765)
    
    # Assigning a type to the variable 'v' (line 2433)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2433, 20), 'v', replace_call_result_85766)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2426)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2434):
    
    # Assigning a Call to a Name (line 2434):
    
    # Call to sub(...): (line 2434)
    # Processing the call arguments (line 2434)
    str_85769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2434, 28), 'str', 'kind("\\1")')
    # Getting the type of 'v' (line 2434)
    v_85770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 43), 'v', False)
    # Processing the call keyword arguments (line 2434)
    kwargs_85771 = {}
    # Getting the type of 'kind_re' (line 2434)
    kind_re_85767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 16), 'kind_re', False)
    # Obtaining the member 'sub' of a type (line 2434)
    sub_85768 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2434, 16), kind_re_85767, 'sub')
    # Calling sub(args, kwargs) (line 2434)
    sub_call_result_85772 = invoke(stypy.reporting.localization.Localization(__file__, 2434, 16), sub_85768, *[str_85769, v_85770], **kwargs_85771)
    
    # Assigning a type to the variable 'v' (line 2434)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2434, 12), 'v', sub_call_result_85772)
    
    # Assigning a Call to a Name (line 2435):
    
    # Assigning a Call to a Name (line 2435):
    
    # Call to sub(...): (line 2435)
    # Processing the call arguments (line 2435)
    str_85775 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2435, 41), 'str', 'selected_int_kind(\\1)')
    # Getting the type of 'v' (line 2435)
    v_85776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2435, 67), 'v', False)
    # Processing the call keyword arguments (line 2435)
    kwargs_85777 = {}
    # Getting the type of 'selected_int_kind_re' (line 2435)
    selected_int_kind_re_85773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2435, 16), 'selected_int_kind_re', False)
    # Obtaining the member 'sub' of a type (line 2435)
    sub_85774 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2435, 16), selected_int_kind_re_85773, 'sub')
    # Calling sub(args, kwargs) (line 2435)
    sub_call_result_85778 = invoke(stypy.reporting.localization.Localization(__file__, 2435, 16), sub_85774, *[str_85775, v_85776], **kwargs_85777)
    
    # Assigning a type to the variable 'v' (line 2435)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2435, 12), 'v', sub_call_result_85778)
    
    
    # Evaluating a boolean operation
    
    # Call to isinteger(...): (line 2436)
    # Processing the call arguments (line 2436)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2436)
    n_85780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2436, 30), 'n', False)
    # Getting the type of 'vars' (line 2436)
    vars_85781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2436, 25), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2436)
    getitem___85782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2436, 25), vars_85781, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2436)
    subscript_call_result_85783 = invoke(stypy.reporting.localization.Localization(__file__, 2436, 25), getitem___85782, n_85780)
    
    # Processing the call keyword arguments (line 2436)
    kwargs_85784 = {}
    # Getting the type of 'isinteger' (line 2436)
    isinteger_85779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2436, 15), 'isinteger', False)
    # Calling isinteger(args, kwargs) (line 2436)
    isinteger_call_result_85785 = invoke(stypy.reporting.localization.Localization(__file__, 2436, 15), isinteger_85779, *[subscript_call_result_85783], **kwargs_85784)
    
    
    
    # Call to match(...): (line 2436)
    # Processing the call arguments (line 2436)
    # Getting the type of 'v' (line 2436)
    v_85788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2436, 65), 'v', False)
    # Processing the call keyword arguments (line 2436)
    kwargs_85789 = {}
    # Getting the type of 'selected_kind_re' (line 2436)
    selected_kind_re_85786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2436, 42), 'selected_kind_re', False)
    # Obtaining the member 'match' of a type (line 2436)
    match_85787 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2436, 42), selected_kind_re_85786, 'match')
    # Calling match(args, kwargs) (line 2436)
    match_call_result_85790 = invoke(stypy.reporting.localization.Localization(__file__, 2436, 42), match_85787, *[v_85788], **kwargs_85789)
    
    # Applying the 'not' unary operator (line 2436)
    result_not__85791 = python_operator(stypy.reporting.localization.Localization(__file__, 2436, 38), 'not', match_call_result_85790)
    
    # Applying the binary operator 'and' (line 2436)
    result_and_keyword_85792 = python_operator(stypy.reporting.localization.Localization(__file__, 2436, 15), 'and', isinteger_call_result_85785, result_not__85791)
    
    # Testing the type of an if condition (line 2436)
    if_condition_85793 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2436, 12), result_and_keyword_85792)
    # Assigning a type to the variable 'if_condition_85793' (line 2436)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2436, 12), 'if_condition_85793', if_condition_85793)
    # SSA begins for if statement (line 2436)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2437):
    
    # Assigning a Subscript to a Name (line 2437):
    
    # Obtaining the type of the subscript
    int_85794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2437, 33), 'int')
    
    # Call to split(...): (line 2437)
    # Processing the call arguments (line 2437)
    str_85797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2437, 28), 'str', '_')
    # Processing the call keyword arguments (line 2437)
    kwargs_85798 = {}
    # Getting the type of 'v' (line 2437)
    v_85795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2437, 20), 'v', False)
    # Obtaining the member 'split' of a type (line 2437)
    split_85796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2437, 20), v_85795, 'split')
    # Calling split(args, kwargs) (line 2437)
    split_call_result_85799 = invoke(stypy.reporting.localization.Localization(__file__, 2437, 20), split_85796, *[str_85797], **kwargs_85798)
    
    # Obtaining the member '__getitem__' of a type (line 2437)
    getitem___85800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2437, 20), split_call_result_85799, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2437)
    subscript_call_result_85801 = invoke(stypy.reporting.localization.Localization(__file__, 2437, 20), getitem___85800, int_85794)
    
    # Assigning a type to the variable 'v' (line 2437)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2437, 16), 'v', subscript_call_result_85801)
    # SSA join for if statement (line 2436)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to isdouble(...): (line 2438)
    # Processing the call arguments (line 2438)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2438)
    n_85803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2438, 29), 'n', False)
    # Getting the type of 'vars' (line 2438)
    vars_85804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2438, 24), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2438)
    getitem___85805 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2438, 24), vars_85804, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2438)
    subscript_call_result_85806 = invoke(stypy.reporting.localization.Localization(__file__, 2438, 24), getitem___85805, n_85803)
    
    # Processing the call keyword arguments (line 2438)
    kwargs_85807 = {}
    # Getting the type of 'isdouble' (line 2438)
    isdouble_85802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2438, 15), 'isdouble', False)
    # Calling isdouble(args, kwargs) (line 2438)
    isdouble_call_result_85808 = invoke(stypy.reporting.localization.Localization(__file__, 2438, 15), isdouble_85802, *[subscript_call_result_85806], **kwargs_85807)
    
    # Testing the type of an if condition (line 2438)
    if_condition_85809 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2438, 12), isdouble_call_result_85808)
    # Assigning a type to the variable 'if_condition_85809' (line 2438)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2438, 12), 'if_condition_85809', if_condition_85809)
    # SSA begins for if statement (line 2438)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2439):
    
    # Assigning a Call to a Name (line 2439):
    
    # Call to list(...): (line 2439)
    # Processing the call arguments (line 2439)
    # Getting the type of 'v' (line 2439)
    v_85811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2439, 26), 'v', False)
    # Processing the call keyword arguments (line 2439)
    kwargs_85812 = {}
    # Getting the type of 'list' (line 2439)
    list_85810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2439, 21), 'list', False)
    # Calling list(args, kwargs) (line 2439)
    list_call_result_85813 = invoke(stypy.reporting.localization.Localization(__file__, 2439, 21), list_85810, *[v_85811], **kwargs_85812)
    
    # Assigning a type to the variable 'tt' (line 2439)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2439, 16), 'tt', list_call_result_85813)
    
    
    # Call to finditer(...): (line 2440)
    # Processing the call arguments (line 2440)
    # Getting the type of 'v' (line 2440)
    v_85816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2440, 48), 'v', False)
    # Processing the call keyword arguments (line 2440)
    kwargs_85817 = {}
    # Getting the type of 'real16pattern' (line 2440)
    real16pattern_85814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2440, 25), 'real16pattern', False)
    # Obtaining the member 'finditer' of a type (line 2440)
    finditer_85815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2440, 25), real16pattern_85814, 'finditer')
    # Calling finditer(args, kwargs) (line 2440)
    finditer_call_result_85818 = invoke(stypy.reporting.localization.Localization(__file__, 2440, 25), finditer_85815, *[v_85816], **kwargs_85817)
    
    # Testing the type of a for loop iterable (line 2440)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2440, 16), finditer_call_result_85818)
    # Getting the type of the for loop variable (line 2440)
    for_loop_var_85819 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2440, 16), finditer_call_result_85818)
    # Assigning a type to the variable 'm' (line 2440)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2440, 16), 'm', for_loop_var_85819)
    # SSA begins for a for statement (line 2440)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Subscript (line 2441):
    
    # Assigning a Call to a Subscript (line 2441):
    
    # Call to list(...): (line 2441)
    # Processing the call arguments (line 2441)
    
    # Call to replace(...): (line 2442)
    # Processing the call arguments (line 2442)
    str_85837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2442, 61), 'str', 'd')
    str_85838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2442, 66), 'str', 'e')
    # Processing the call keyword arguments (line 2442)
    kwargs_85839 = {}
    
    # Call to lower(...): (line 2442)
    # Processing the call keyword arguments (line 2442)
    kwargs_85834 = {}
    
    # Obtaining the type of the subscript
    
    # Call to start(...): (line 2442)
    # Processing the call keyword arguments (line 2442)
    kwargs_85823 = {}
    # Getting the type of 'm' (line 2442)
    m_85821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2442, 26), 'm', False)
    # Obtaining the member 'start' of a type (line 2442)
    start_85822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2442, 26), m_85821, 'start')
    # Calling start(args, kwargs) (line 2442)
    start_call_result_85824 = invoke(stypy.reporting.localization.Localization(__file__, 2442, 26), start_85822, *[], **kwargs_85823)
    
    
    # Call to end(...): (line 2442)
    # Processing the call keyword arguments (line 2442)
    kwargs_85827 = {}
    # Getting the type of 'm' (line 2442)
    m_85825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2442, 36), 'm', False)
    # Obtaining the member 'end' of a type (line 2442)
    end_85826 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2442, 36), m_85825, 'end')
    # Calling end(args, kwargs) (line 2442)
    end_call_result_85828 = invoke(stypy.reporting.localization.Localization(__file__, 2442, 36), end_85826, *[], **kwargs_85827)
    
    slice_85829 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2442, 24), start_call_result_85824, end_call_result_85828, None)
    # Getting the type of 'v' (line 2442)
    v_85830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2442, 24), 'v', False)
    # Obtaining the member '__getitem__' of a type (line 2442)
    getitem___85831 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2442, 24), v_85830, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2442)
    subscript_call_result_85832 = invoke(stypy.reporting.localization.Localization(__file__, 2442, 24), getitem___85831, slice_85829)
    
    # Obtaining the member 'lower' of a type (line 2442)
    lower_85833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2442, 24), subscript_call_result_85832, 'lower')
    # Calling lower(args, kwargs) (line 2442)
    lower_call_result_85835 = invoke(stypy.reporting.localization.Localization(__file__, 2442, 24), lower_85833, *[], **kwargs_85834)
    
    # Obtaining the member 'replace' of a type (line 2442)
    replace_85836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2442, 24), lower_call_result_85835, 'replace')
    # Calling replace(args, kwargs) (line 2442)
    replace_call_result_85840 = invoke(stypy.reporting.localization.Localization(__file__, 2442, 24), replace_85836, *[str_85837, str_85838], **kwargs_85839)
    
    # Processing the call keyword arguments (line 2441)
    kwargs_85841 = {}
    # Getting the type of 'list' (line 2441)
    list_85820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2441, 44), 'list', False)
    # Calling list(args, kwargs) (line 2441)
    list_call_result_85842 = invoke(stypy.reporting.localization.Localization(__file__, 2441, 44), list_85820, *[replace_call_result_85840], **kwargs_85841)
    
    # Getting the type of 'tt' (line 2441)
    tt_85843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2441, 20), 'tt')
    
    # Call to start(...): (line 2441)
    # Processing the call keyword arguments (line 2441)
    kwargs_85846 = {}
    # Getting the type of 'm' (line 2441)
    m_85844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2441, 23), 'm', False)
    # Obtaining the member 'start' of a type (line 2441)
    start_85845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2441, 23), m_85844, 'start')
    # Calling start(args, kwargs) (line 2441)
    start_call_result_85847 = invoke(stypy.reporting.localization.Localization(__file__, 2441, 23), start_85845, *[], **kwargs_85846)
    
    
    # Call to end(...): (line 2441)
    # Processing the call keyword arguments (line 2441)
    kwargs_85850 = {}
    # Getting the type of 'm' (line 2441)
    m_85848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2441, 33), 'm', False)
    # Obtaining the member 'end' of a type (line 2441)
    end_85849 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2441, 33), m_85848, 'end')
    # Calling end(args, kwargs) (line 2441)
    end_call_result_85851 = invoke(stypy.reporting.localization.Localization(__file__, 2441, 33), end_85849, *[], **kwargs_85850)
    
    slice_85852 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2441, 20), start_call_result_85847, end_call_result_85851, None)
    # Storing an element on a container (line 2441)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2441, 20), tt_85843, (slice_85852, list_call_result_85842))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2443):
    
    # Assigning a Call to a Name (line 2443):
    
    # Call to join(...): (line 2443)
    # Processing the call arguments (line 2443)
    # Getting the type of 'tt' (line 2443)
    tt_85855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2443, 28), 'tt', False)
    # Processing the call keyword arguments (line 2443)
    kwargs_85856 = {}
    str_85853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2443, 20), 'str', '')
    # Obtaining the member 'join' of a type (line 2443)
    join_85854 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2443, 20), str_85853, 'join')
    # Calling join(args, kwargs) (line 2443)
    join_call_result_85857 = invoke(stypy.reporting.localization.Localization(__file__, 2443, 20), join_85854, *[tt_85855], **kwargs_85856)
    
    # Assigning a type to the variable 'v' (line 2443)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2443, 16), 'v', join_call_result_85857)
    # SSA join for if statement (line 2438)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to iscomplex(...): (line 2444)
    # Processing the call arguments (line 2444)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2444)
    n_85859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2444, 30), 'n', False)
    # Getting the type of 'vars' (line 2444)
    vars_85860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2444, 25), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2444)
    getitem___85861 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2444, 25), vars_85860, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2444)
    subscript_call_result_85862 = invoke(stypy.reporting.localization.Localization(__file__, 2444, 25), getitem___85861, n_85859)
    
    # Processing the call keyword arguments (line 2444)
    kwargs_85863 = {}
    # Getting the type of 'iscomplex' (line 2444)
    iscomplex_85858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2444, 15), 'iscomplex', False)
    # Calling iscomplex(args, kwargs) (line 2444)
    iscomplex_call_result_85864 = invoke(stypy.reporting.localization.Localization(__file__, 2444, 15), iscomplex_85858, *[subscript_call_result_85862], **kwargs_85863)
    
    # Testing the type of an if condition (line 2444)
    if_condition_85865 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2444, 12), iscomplex_call_result_85864)
    # Assigning a type to the variable 'if_condition_85865' (line 2444)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2444, 12), 'if_condition_85865', if_condition_85865)
    # SSA begins for if statement (line 2444)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    
    
    # Obtaining the type of the subscript
    int_85866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2445, 21), 'int')
    # Getting the type of 'v' (line 2445)
    v_85867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2445, 19), 'v')
    # Obtaining the member '__getitem__' of a type (line 2445)
    getitem___85868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2445, 19), v_85867, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2445)
    subscript_call_result_85869 = invoke(stypy.reporting.localization.Localization(__file__, 2445, 19), getitem___85868, int_85866)
    
    str_85870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2445, 27), 'str', '(')
    # Applying the binary operator '==' (line 2445)
    result_eq_85871 = python_operator(stypy.reporting.localization.Localization(__file__, 2445, 19), '==', subscript_call_result_85869, str_85870)
    
    
    
    # Obtaining the type of the subscript
    int_85872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2445, 37), 'int')
    # Getting the type of 'v' (line 2445)
    v_85873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2445, 35), 'v')
    # Obtaining the member '__getitem__' of a type (line 2445)
    getitem___85874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2445, 35), v_85873, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2445)
    subscript_call_result_85875 = invoke(stypy.reporting.localization.Localization(__file__, 2445, 35), getitem___85874, int_85872)
    
    str_85876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2445, 44), 'str', ')')
    # Applying the binary operator '==' (line 2445)
    result_eq_85877 = python_operator(stypy.reporting.localization.Localization(__file__, 2445, 35), '==', subscript_call_result_85875, str_85876)
    
    # Applying the binary operator 'and' (line 2445)
    result_and_keyword_85878 = python_operator(stypy.reporting.localization.Localization(__file__, 2445, 19), 'and', result_eq_85871, result_eq_85877)
    
    # Testing the type of an if condition (line 2445)
    if_condition_85879 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2445, 16), result_and_keyword_85878)
    # Assigning a type to the variable 'if_condition_85879' (line 2445)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2445, 16), 'if_condition_85879', if_condition_85879)
    # SSA begins for if statement (line 2445)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2447):
    
    # Assigning a Call to a Name (line 2447):
    
    # Call to split(...): (line 2447)
    # Processing the call arguments (line 2447)
    str_85890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2447, 54), 'str', '@,@')
    # Processing the call keyword arguments (line 2447)
    kwargs_85891 = {}
    
    # Call to markoutercomma(...): (line 2447)
    # Processing the call arguments (line 2447)
    
    # Obtaining the type of the subscript
    int_85881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2447, 41), 'int')
    int_85882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2447, 43), 'int')
    slice_85883 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2447, 39), int_85881, int_85882, None)
    # Getting the type of 'v' (line 2447)
    v_85884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2447, 39), 'v', False)
    # Obtaining the member '__getitem__' of a type (line 2447)
    getitem___85885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2447, 39), v_85884, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2447)
    subscript_call_result_85886 = invoke(stypy.reporting.localization.Localization(__file__, 2447, 39), getitem___85885, slice_85883)
    
    # Processing the call keyword arguments (line 2447)
    kwargs_85887 = {}
    # Getting the type of 'markoutercomma' (line 2447)
    markoutercomma_85880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2447, 24), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 2447)
    markoutercomma_call_result_85888 = invoke(stypy.reporting.localization.Localization(__file__, 2447, 24), markoutercomma_85880, *[subscript_call_result_85886], **kwargs_85887)
    
    # Obtaining the member 'split' of a type (line 2447)
    split_85889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2447, 24), markoutercomma_call_result_85888, 'split')
    # Calling split(args, kwargs) (line 2447)
    split_call_result_85892 = invoke(stypy.reporting.localization.Localization(__file__, 2447, 24), split_85889, *[str_85890], **kwargs_85891)
    
    # Assigning a type to the variable 'l' (line 2447)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2447, 20), 'l', split_call_result_85892)
    # SSA join for if statement (line 2445)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2444)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # SSA begins for try-except statement (line 2448)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Subscript (line 2449):
    
    # Assigning a Call to a Subscript (line 2449):
    
    # Call to eval(...): (line 2449)
    # Processing the call arguments (line 2449)
    # Getting the type of 'v' (line 2449)
    v_85894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2449, 33), 'v', False)
    # Getting the type of 'g_params' (line 2449)
    g_params_85895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2449, 36), 'g_params', False)
    # Getting the type of 'params' (line 2449)
    params_85896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2449, 46), 'params', False)
    # Processing the call keyword arguments (line 2449)
    kwargs_85897 = {}
    # Getting the type of 'eval' (line 2449)
    eval_85893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2449, 28), 'eval', False)
    # Calling eval(args, kwargs) (line 2449)
    eval_call_result_85898 = invoke(stypy.reporting.localization.Localization(__file__, 2449, 28), eval_85893, *[v_85894, g_params_85895, params_85896], **kwargs_85897)
    
    # Getting the type of 'params' (line 2449)
    params_85899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2449, 16), 'params')
    # Getting the type of 'n' (line 2449)
    n_85900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2449, 23), 'n')
    # Storing an element on a container (line 2449)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2449, 16), params_85899, (n_85900, eval_call_result_85898))
    # SSA branch for the except part of a try statement (line 2448)
    # SSA branch for the except 'Exception' branch of a try statement (line 2448)
    # Storing handler type
    module_type_store.open_ssa_branch('except')
    # Getting the type of 'Exception' (line 2450)
    Exception_85901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2450, 19), 'Exception')
    # Assigning a type to the variable 'msg' (line 2450)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2450, 12), 'msg', Exception_85901)
    
    # Assigning a Name to a Subscript (line 2451):
    
    # Assigning a Name to a Subscript (line 2451):
    # Getting the type of 'v' (line 2451)
    v_85902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2451, 28), 'v')
    # Getting the type of 'params' (line 2451)
    params_85903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2451, 16), 'params')
    # Getting the type of 'n' (line 2451)
    n_85904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2451, 23), 'n')
    # Storing an element on a container (line 2451)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2451, 16), params_85903, (n_85904, v_85902))
    
    # Call to outmess(...): (line 2452)
    # Processing the call arguments (line 2452)
    str_85906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2452, 24), 'str', 'get_parameters: got "%s" on %s\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2452)
    tuple_85907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2452, 62), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2452)
    # Adding element type (line 2452)
    # Getting the type of 'msg' (line 2452)
    msg_85908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2452, 62), 'msg', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2452, 62), tuple_85907, msg_85908)
    # Adding element type (line 2452)
    
    # Call to repr(...): (line 2452)
    # Processing the call arguments (line 2452)
    # Getting the type of 'v' (line 2452)
    v_85910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2452, 72), 'v', False)
    # Processing the call keyword arguments (line 2452)
    kwargs_85911 = {}
    # Getting the type of 'repr' (line 2452)
    repr_85909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2452, 67), 'repr', False)
    # Calling repr(args, kwargs) (line 2452)
    repr_call_result_85912 = invoke(stypy.reporting.localization.Localization(__file__, 2452, 67), repr_85909, *[v_85910], **kwargs_85911)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2452, 62), tuple_85907, repr_call_result_85912)
    
    # Applying the binary operator '%' (line 2452)
    result_mod_85913 = python_operator(stypy.reporting.localization.Localization(__file__, 2452, 24), '%', str_85906, tuple_85907)
    
    # Processing the call keyword arguments (line 2452)
    kwargs_85914 = {}
    # Getting the type of 'outmess' (line 2452)
    outmess_85905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2452, 16), 'outmess', False)
    # Calling outmess(args, kwargs) (line 2452)
    outmess_call_result_85915 = invoke(stypy.reporting.localization.Localization(__file__, 2452, 16), outmess_85905, *[result_mod_85913], **kwargs_85914)
    
    # SSA join for try-except statement (line 2448)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Call to isstring(...): (line 2453)
    # Processing the call arguments (line 2453)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2453)
    n_85917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2453, 29), 'n', False)
    # Getting the type of 'vars' (line 2453)
    vars_85918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2453, 24), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2453)
    getitem___85919 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2453, 24), vars_85918, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2453)
    subscript_call_result_85920 = invoke(stypy.reporting.localization.Localization(__file__, 2453, 24), getitem___85919, n_85917)
    
    # Processing the call keyword arguments (line 2453)
    kwargs_85921 = {}
    # Getting the type of 'isstring' (line 2453)
    isstring_85916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2453, 15), 'isstring', False)
    # Calling isstring(args, kwargs) (line 2453)
    isstring_call_result_85922 = invoke(stypy.reporting.localization.Localization(__file__, 2453, 15), isstring_85916, *[subscript_call_result_85920], **kwargs_85921)
    
    
    # Call to isinstance(...): (line 2453)
    # Processing the call arguments (line 2453)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2453)
    n_85924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2453, 55), 'n', False)
    # Getting the type of 'params' (line 2453)
    params_85925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2453, 48), 'params', False)
    # Obtaining the member '__getitem__' of a type (line 2453)
    getitem___85926 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2453, 48), params_85925, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2453)
    subscript_call_result_85927 = invoke(stypy.reporting.localization.Localization(__file__, 2453, 48), getitem___85926, n_85924)
    
    # Getting the type of 'int' (line 2453)
    int_85928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2453, 59), 'int', False)
    # Processing the call keyword arguments (line 2453)
    kwargs_85929 = {}
    # Getting the type of 'isinstance' (line 2453)
    isinstance_85923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2453, 37), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 2453)
    isinstance_call_result_85930 = invoke(stypy.reporting.localization.Localization(__file__, 2453, 37), isinstance_85923, *[subscript_call_result_85927, int_85928], **kwargs_85929)
    
    # Applying the binary operator 'and' (line 2453)
    result_and_keyword_85931 = python_operator(stypy.reporting.localization.Localization(__file__, 2453, 15), 'and', isstring_call_result_85922, isinstance_call_result_85930)
    
    # Testing the type of an if condition (line 2453)
    if_condition_85932 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2453, 12), result_and_keyword_85931)
    # Assigning a type to the variable 'if_condition_85932' (line 2453)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2453, 12), 'if_condition_85932', if_condition_85932)
    # SSA begins for if statement (line 2453)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Subscript (line 2454):
    
    # Assigning a Call to a Subscript (line 2454):
    
    # Call to chr(...): (line 2454)
    # Processing the call arguments (line 2454)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2454)
    n_85934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2454, 39), 'n', False)
    # Getting the type of 'params' (line 2454)
    params_85935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2454, 32), 'params', False)
    # Obtaining the member '__getitem__' of a type (line 2454)
    getitem___85936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2454, 32), params_85935, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2454)
    subscript_call_result_85937 = invoke(stypy.reporting.localization.Localization(__file__, 2454, 32), getitem___85936, n_85934)
    
    # Processing the call keyword arguments (line 2454)
    kwargs_85938 = {}
    # Getting the type of 'chr' (line 2454)
    chr_85933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2454, 28), 'chr', False)
    # Calling chr(args, kwargs) (line 2454)
    chr_call_result_85939 = invoke(stypy.reporting.localization.Localization(__file__, 2454, 28), chr_85933, *[subscript_call_result_85937], **kwargs_85938)
    
    # Getting the type of 'params' (line 2454)
    params_85940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2454, 16), 'params')
    # Getting the type of 'n' (line 2454)
    n_85941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2454, 23), 'n')
    # Storing an element on a container (line 2454)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2454, 16), params_85940, (n_85941, chr_call_result_85939))
    # SSA join for if statement (line 2453)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2455):
    
    # Assigning a Call to a Name (line 2455):
    
    # Call to lower(...): (line 2455)
    # Processing the call keyword arguments (line 2455)
    kwargs_85944 = {}
    # Getting the type of 'n' (line 2455)
    n_85942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2455, 17), 'n', False)
    # Obtaining the member 'lower' of a type (line 2455)
    lower_85943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2455, 17), n_85942, 'lower')
    # Calling lower(args, kwargs) (line 2455)
    lower_call_result_85945 = invoke(stypy.reporting.localization.Localization(__file__, 2455, 17), lower_85943, *[], **kwargs_85944)
    
    # Assigning a type to the variable 'nl' (line 2455)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2455, 12), 'nl', lower_call_result_85945)
    
    
    # Getting the type of 'nl' (line 2456)
    nl_85946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2456, 15), 'nl')
    # Getting the type of 'n' (line 2456)
    n_85947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2456, 21), 'n')
    # Applying the binary operator '!=' (line 2456)
    result_ne_85948 = python_operator(stypy.reporting.localization.Localization(__file__, 2456, 15), '!=', nl_85946, n_85947)
    
    # Testing the type of an if condition (line 2456)
    if_condition_85949 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2456, 12), result_ne_85948)
    # Assigning a type to the variable 'if_condition_85949' (line 2456)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2456, 12), 'if_condition_85949', if_condition_85949)
    # SSA begins for if statement (line 2456)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 2457):
    
    # Assigning a Subscript to a Subscript (line 2457):
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2457)
    n_85950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2457, 36), 'n')
    # Getting the type of 'params' (line 2457)
    params_85951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2457, 29), 'params')
    # Obtaining the member '__getitem__' of a type (line 2457)
    getitem___85952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2457, 29), params_85951, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2457)
    subscript_call_result_85953 = invoke(stypy.reporting.localization.Localization(__file__, 2457, 29), getitem___85952, n_85950)
    
    # Getting the type of 'params' (line 2457)
    params_85954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2457, 16), 'params')
    # Getting the type of 'nl' (line 2457)
    nl_85955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2457, 23), 'nl')
    # Storing an element on a container (line 2457)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2457, 16), params_85954, (nl_85955, subscript_call_result_85953))
    # SSA join for if statement (line 2456)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 2424)
    module_type_store.open_ssa_branch('else')
    
    # Call to print(...): (line 2459)
    # Processing the call arguments (line 2459)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2459)
    n_85957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2459, 23), 'n', False)
    # Getting the type of 'vars' (line 2459)
    vars_85958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2459, 18), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2459)
    getitem___85959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2459, 18), vars_85958, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2459)
    subscript_call_result_85960 = invoke(stypy.reporting.localization.Localization(__file__, 2459, 18), getitem___85959, n_85957)
    
    # Processing the call keyword arguments (line 2459)
    kwargs_85961 = {}
    # Getting the type of 'print' (line 2459)
    print_85956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2459, 12), 'print', False)
    # Calling print(args, kwargs) (line 2459)
    print_call_result_85962 = invoke(stypy.reporting.localization.Localization(__file__, 2459, 12), print_85956, *[subscript_call_result_85960], **kwargs_85961)
    
    
    # Call to outmess(...): (line 2460)
    # Processing the call arguments (line 2460)
    str_85964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2461, 16), 'str', 'get_parameters:parameter %s does not have value?!\n')
    
    # Call to repr(...): (line 2461)
    # Processing the call arguments (line 2461)
    # Getting the type of 'n' (line 2461)
    n_85966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2461, 78), 'n', False)
    # Processing the call keyword arguments (line 2461)
    kwargs_85967 = {}
    # Getting the type of 'repr' (line 2461)
    repr_85965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2461, 73), 'repr', False)
    # Calling repr(args, kwargs) (line 2461)
    repr_call_result_85968 = invoke(stypy.reporting.localization.Localization(__file__, 2461, 73), repr_85965, *[n_85966], **kwargs_85967)
    
    # Applying the binary operator '%' (line 2461)
    result_mod_85969 = python_operator(stypy.reporting.localization.Localization(__file__, 2461, 16), '%', str_85964, repr_call_result_85968)
    
    # Processing the call keyword arguments (line 2460)
    kwargs_85970 = {}
    # Getting the type of 'outmess' (line 2460)
    outmess_85963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2460, 12), 'outmess', False)
    # Calling outmess(args, kwargs) (line 2460)
    outmess_call_result_85971 = invoke(stypy.reporting.localization.Localization(__file__, 2460, 12), outmess_85963, *[result_mod_85969], **kwargs_85970)
    
    # SSA join for if statement (line 2424)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'params' (line 2462)
    params_85972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2462, 11), 'params')
    # Assigning a type to the variable 'stypy_return_type' (line 2462)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2462, 4), 'stypy_return_type', params_85972)
    
    # ################# End of 'get_parameters(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'get_parameters' in the type store
    # Getting the type of 'stypy_return_type' (line 2406)
    stypy_return_type_85973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2406, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_85973)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'get_parameters'
    return stypy_return_type_85973

# Assigning a type to the variable 'get_parameters' (line 2406)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2406, 0), 'get_parameters', get_parameters)

@norecursion
def _eval_length(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_eval_length'
    module_type_store = module_type_store.open_function_context('_eval_length', 2465, 0, False)
    
    # Passed parameters checking function
    _eval_length.stypy_localization = localization
    _eval_length.stypy_type_of_self = None
    _eval_length.stypy_type_store = module_type_store
    _eval_length.stypy_function_name = '_eval_length'
    _eval_length.stypy_param_names_list = ['length', 'params']
    _eval_length.stypy_varargs_param_name = None
    _eval_length.stypy_kwargs_param_name = None
    _eval_length.stypy_call_defaults = defaults
    _eval_length.stypy_call_varargs = varargs
    _eval_length.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_eval_length', ['length', 'params'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_eval_length', localization, ['length', 'params'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_eval_length(...)' code ##################

    
    
    # Getting the type of 'length' (line 2466)
    length_85974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2466, 7), 'length')
    
    # Obtaining an instance of the builtin type 'list' (line 2466)
    list_85975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2466, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2466)
    # Adding element type (line 2466)
    str_85976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2466, 18), 'str', '(:)')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2466, 17), list_85975, str_85976)
    # Adding element type (line 2466)
    str_85977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2466, 25), 'str', '(*)')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2466, 17), list_85975, str_85977)
    # Adding element type (line 2466)
    str_85978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2466, 32), 'str', '*')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2466, 17), list_85975, str_85978)
    
    # Applying the binary operator 'in' (line 2466)
    result_contains_85979 = python_operator(stypy.reporting.localization.Localization(__file__, 2466, 7), 'in', length_85974, list_85975)
    
    # Testing the type of an if condition (line 2466)
    if_condition_85980 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2466, 4), result_contains_85979)
    # Assigning a type to the variable 'if_condition_85980' (line 2466)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2466, 4), 'if_condition_85980', if_condition_85980)
    # SSA begins for if statement (line 2466)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    str_85981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2467, 15), 'str', '(*)')
    # Assigning a type to the variable 'stypy_return_type' (line 2467)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2467, 8), 'stypy_return_type', str_85981)
    # SSA join for if statement (line 2466)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to _eval_scalar(...): (line 2468)
    # Processing the call arguments (line 2468)
    # Getting the type of 'length' (line 2468)
    length_85983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2468, 24), 'length', False)
    # Getting the type of 'params' (line 2468)
    params_85984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2468, 32), 'params', False)
    # Processing the call keyword arguments (line 2468)
    kwargs_85985 = {}
    # Getting the type of '_eval_scalar' (line 2468)
    _eval_scalar_85982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2468, 11), '_eval_scalar', False)
    # Calling _eval_scalar(args, kwargs) (line 2468)
    _eval_scalar_call_result_85986 = invoke(stypy.reporting.localization.Localization(__file__, 2468, 11), _eval_scalar_85982, *[length_85983, params_85984], **kwargs_85985)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2468)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2468, 4), 'stypy_return_type', _eval_scalar_call_result_85986)
    
    # ################# End of '_eval_length(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_eval_length' in the type store
    # Getting the type of 'stypy_return_type' (line 2465)
    stypy_return_type_85987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2465, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_85987)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_eval_length'
    return stypy_return_type_85987

# Assigning a type to the variable '_eval_length' (line 2465)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2465, 0), '_eval_length', _eval_length)

# Assigning a Attribute to a Name (line 2470):

# Assigning a Attribute to a Name (line 2470):

# Call to compile(...): (line 2470)
# Processing the call arguments (line 2470)
str_85990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2470, 29), 'str', '\\d+_')
# Processing the call keyword arguments (line 2470)
kwargs_85991 = {}
# Getting the type of 're' (line 2470)
re_85988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2470, 18), 're', False)
# Obtaining the member 'compile' of a type (line 2470)
compile_85989 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2470, 18), re_85988, 'compile')
# Calling compile(args, kwargs) (line 2470)
compile_call_result_85992 = invoke(stypy.reporting.localization.Localization(__file__, 2470, 18), compile_85989, *[str_85990], **kwargs_85991)

# Obtaining the member 'match' of a type (line 2470)
match_85993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2470, 18), compile_call_result_85992, 'match')
# Assigning a type to the variable '_is_kind_number' (line 2470)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2470, 0), '_is_kind_number', match_85993)

@norecursion
def _eval_scalar(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_eval_scalar'
    module_type_store = module_type_store.open_function_context('_eval_scalar', 2473, 0, False)
    
    # Passed parameters checking function
    _eval_scalar.stypy_localization = localization
    _eval_scalar.stypy_type_of_self = None
    _eval_scalar.stypy_type_store = module_type_store
    _eval_scalar.stypy_function_name = '_eval_scalar'
    _eval_scalar.stypy_param_names_list = ['value', 'params']
    _eval_scalar.stypy_varargs_param_name = None
    _eval_scalar.stypy_kwargs_param_name = None
    _eval_scalar.stypy_call_defaults = defaults
    _eval_scalar.stypy_call_varargs = varargs
    _eval_scalar.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_eval_scalar', ['value', 'params'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_eval_scalar', localization, ['value', 'params'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_eval_scalar(...)' code ##################

    
    
    # Call to _is_kind_number(...): (line 2474)
    # Processing the call arguments (line 2474)
    # Getting the type of 'value' (line 2474)
    value_85995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2474, 23), 'value', False)
    # Processing the call keyword arguments (line 2474)
    kwargs_85996 = {}
    # Getting the type of '_is_kind_number' (line 2474)
    _is_kind_number_85994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2474, 7), '_is_kind_number', False)
    # Calling _is_kind_number(args, kwargs) (line 2474)
    _is_kind_number_call_result_85997 = invoke(stypy.reporting.localization.Localization(__file__, 2474, 7), _is_kind_number_85994, *[value_85995], **kwargs_85996)
    
    # Testing the type of an if condition (line 2474)
    if_condition_85998 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2474, 4), _is_kind_number_call_result_85997)
    # Assigning a type to the variable 'if_condition_85998' (line 2474)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2474, 4), 'if_condition_85998', if_condition_85998)
    # SSA begins for if statement (line 2474)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2475):
    
    # Assigning a Subscript to a Name (line 2475):
    
    # Obtaining the type of the subscript
    int_85999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2475, 33), 'int')
    
    # Call to split(...): (line 2475)
    # Processing the call arguments (line 2475)
    str_86002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2475, 28), 'str', '_')
    # Processing the call keyword arguments (line 2475)
    kwargs_86003 = {}
    # Getting the type of 'value' (line 2475)
    value_86000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2475, 16), 'value', False)
    # Obtaining the member 'split' of a type (line 2475)
    split_86001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2475, 16), value_86000, 'split')
    # Calling split(args, kwargs) (line 2475)
    split_call_result_86004 = invoke(stypy.reporting.localization.Localization(__file__, 2475, 16), split_86001, *[str_86002], **kwargs_86003)
    
    # Obtaining the member '__getitem__' of a type (line 2475)
    getitem___86005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2475, 16), split_call_result_86004, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2475)
    subscript_call_result_86006 = invoke(stypy.reporting.localization.Localization(__file__, 2475, 16), getitem___86005, int_85999)
    
    # Assigning a type to the variable 'value' (line 2475)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2475, 8), 'value', subscript_call_result_86006)
    # SSA join for if statement (line 2474)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # SSA begins for try-except statement (line 2476)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 2477):
    
    # Assigning a Call to a Name (line 2477):
    
    # Call to str(...): (line 2477)
    # Processing the call arguments (line 2477)
    
    # Call to eval(...): (line 2477)
    # Processing the call arguments (line 2477)
    # Getting the type of 'value' (line 2477)
    value_86009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2477, 25), 'value', False)
    
    # Obtaining an instance of the builtin type 'dict' (line 2477)
    dict_86010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2477, 32), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2477)
    
    # Getting the type of 'params' (line 2477)
    params_86011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2477, 36), 'params', False)
    # Processing the call keyword arguments (line 2477)
    kwargs_86012 = {}
    # Getting the type of 'eval' (line 2477)
    eval_86008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2477, 20), 'eval', False)
    # Calling eval(args, kwargs) (line 2477)
    eval_call_result_86013 = invoke(stypy.reporting.localization.Localization(__file__, 2477, 20), eval_86008, *[value_86009, dict_86010, params_86011], **kwargs_86012)
    
    # Processing the call keyword arguments (line 2477)
    kwargs_86014 = {}
    # Getting the type of 'str' (line 2477)
    str_86007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2477, 16), 'str', False)
    # Calling str(args, kwargs) (line 2477)
    str_call_result_86015 = invoke(stypy.reporting.localization.Localization(__file__, 2477, 16), str_86007, *[eval_call_result_86013], **kwargs_86014)
    
    # Assigning a type to the variable 'value' (line 2477)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2477, 8), 'value', str_call_result_86015)
    # SSA branch for the except part of a try statement (line 2476)
    # SSA branch for the except 'Tuple' branch of a try statement (line 2476)
    module_type_store.open_ssa_branch('except')
    # Getting the type of 'value' (line 2479)
    value_86016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2479, 15), 'value')
    # Assigning a type to the variable 'stypy_return_type' (line 2479)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2479, 8), 'stypy_return_type', value_86016)
    # SSA branch for the except 'Exception' branch of a try statement (line 2476)
    # Storing handler type
    module_type_store.open_ssa_branch('except')
    # Getting the type of 'Exception' (line 2480)
    Exception_86017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2480, 11), 'Exception')
    # Assigning a type to the variable 'msg' (line 2480)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2480, 4), 'msg', Exception_86017)
    
    # Call to errmess(...): (line 2481)
    # Processing the call arguments (line 2481)
    str_86019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2481, 16), 'str', '"%s" in evaluating %r (available names: %s)\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2483)
    tuple_86020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2483, 19), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2483)
    # Adding element type (line 2483)
    # Getting the type of 'msg' (line 2483)
    msg_86021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2483, 19), 'msg', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2483, 19), tuple_86020, msg_86021)
    # Adding element type (line 2483)
    # Getting the type of 'value' (line 2483)
    value_86022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2483, 24), 'value', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2483, 19), tuple_86020, value_86022)
    # Adding element type (line 2483)
    
    # Call to list(...): (line 2483)
    # Processing the call arguments (line 2483)
    
    # Call to keys(...): (line 2483)
    # Processing the call keyword arguments (line 2483)
    kwargs_86026 = {}
    # Getting the type of 'params' (line 2483)
    params_86024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2483, 36), 'params', False)
    # Obtaining the member 'keys' of a type (line 2483)
    keys_86025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2483, 36), params_86024, 'keys')
    # Calling keys(args, kwargs) (line 2483)
    keys_call_result_86027 = invoke(stypy.reporting.localization.Localization(__file__, 2483, 36), keys_86025, *[], **kwargs_86026)
    
    # Processing the call keyword arguments (line 2483)
    kwargs_86028 = {}
    # Getting the type of 'list' (line 2483)
    list_86023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2483, 31), 'list', False)
    # Calling list(args, kwargs) (line 2483)
    list_call_result_86029 = invoke(stypy.reporting.localization.Localization(__file__, 2483, 31), list_86023, *[keys_call_result_86027], **kwargs_86028)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2483, 19), tuple_86020, list_call_result_86029)
    
    # Applying the binary operator '%' (line 2481)
    result_mod_86030 = python_operator(stypy.reporting.localization.Localization(__file__, 2481, 16), '%', str_86019, tuple_86020)
    
    # Processing the call keyword arguments (line 2481)
    kwargs_86031 = {}
    # Getting the type of 'errmess' (line 2481)
    errmess_86018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2481, 8), 'errmess', False)
    # Calling errmess(args, kwargs) (line 2481)
    errmess_call_result_86032 = invoke(stypy.reporting.localization.Localization(__file__, 2481, 8), errmess_86018, *[result_mod_86030], **kwargs_86031)
    
    # SSA join for try-except statement (line 2476)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'value' (line 2484)
    value_86033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2484, 11), 'value')
    # Assigning a type to the variable 'stypy_return_type' (line 2484)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2484, 4), 'stypy_return_type', value_86033)
    
    # ################# End of '_eval_scalar(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_eval_scalar' in the type store
    # Getting the type of 'stypy_return_type' (line 2473)
    stypy_return_type_86034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2473, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_86034)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_eval_scalar'
    return stypy_return_type_86034

# Assigning a type to the variable '_eval_scalar' (line 2473)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2473, 0), '_eval_scalar', _eval_scalar)

@norecursion
def analyzevars(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'analyzevars'
    module_type_store = module_type_store.open_function_context('analyzevars', 2487, 0, False)
    
    # Passed parameters checking function
    analyzevars.stypy_localization = localization
    analyzevars.stypy_type_of_self = None
    analyzevars.stypy_type_store = module_type_store
    analyzevars.stypy_function_name = 'analyzevars'
    analyzevars.stypy_param_names_list = ['block']
    analyzevars.stypy_varargs_param_name = None
    analyzevars.stypy_kwargs_param_name = None
    analyzevars.stypy_call_defaults = defaults
    analyzevars.stypy_call_varargs = varargs
    analyzevars.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'analyzevars', ['block'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'analyzevars', localization, ['block'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'analyzevars(...)' code ##################

    # Marking variables as global (line 2488)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 2488, 4), 'f90modulevars')
    
    # Call to setmesstext(...): (line 2490)
    # Processing the call arguments (line 2490)
    # Getting the type of 'block' (line 2490)
    block_86036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2490, 16), 'block', False)
    # Processing the call keyword arguments (line 2490)
    kwargs_86037 = {}
    # Getting the type of 'setmesstext' (line 2490)
    setmesstext_86035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2490, 4), 'setmesstext', False)
    # Calling setmesstext(args, kwargs) (line 2490)
    setmesstext_call_result_86038 = invoke(stypy.reporting.localization.Localization(__file__, 2490, 4), setmesstext_86035, *[block_86036], **kwargs_86037)
    
    
    # Assigning a Call to a Tuple (line 2491):
    
    # Assigning a Call to a Name:
    
    # Call to buildimplicitrules(...): (line 2491)
    # Processing the call arguments (line 2491)
    # Getting the type of 'block' (line 2491)
    block_86040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2491, 50), 'block', False)
    # Processing the call keyword arguments (line 2491)
    kwargs_86041 = {}
    # Getting the type of 'buildimplicitrules' (line 2491)
    buildimplicitrules_86039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2491, 31), 'buildimplicitrules', False)
    # Calling buildimplicitrules(args, kwargs) (line 2491)
    buildimplicitrules_call_result_86042 = invoke(stypy.reporting.localization.Localization(__file__, 2491, 31), buildimplicitrules_86039, *[block_86040], **kwargs_86041)
    
    # Assigning a type to the variable 'call_assignment_75809' (line 2491)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2491, 4), 'call_assignment_75809', buildimplicitrules_call_result_86042)
    
    # Assigning a Call to a Name (line 2491):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_86045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2491, 4), 'int')
    # Processing the call keyword arguments
    kwargs_86046 = {}
    # Getting the type of 'call_assignment_75809' (line 2491)
    call_assignment_75809_86043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2491, 4), 'call_assignment_75809', False)
    # Obtaining the member '__getitem__' of a type (line 2491)
    getitem___86044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2491, 4), call_assignment_75809_86043, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_86047 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___86044, *[int_86045], **kwargs_86046)
    
    # Assigning a type to the variable 'call_assignment_75810' (line 2491)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2491, 4), 'call_assignment_75810', getitem___call_result_86047)
    
    # Assigning a Name to a Name (line 2491):
    # Getting the type of 'call_assignment_75810' (line 2491)
    call_assignment_75810_86048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2491, 4), 'call_assignment_75810')
    # Assigning a type to the variable 'implicitrules' (line 2491)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2491, 4), 'implicitrules', call_assignment_75810_86048)
    
    # Assigning a Call to a Name (line 2491):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_86051 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2491, 4), 'int')
    # Processing the call keyword arguments
    kwargs_86052 = {}
    # Getting the type of 'call_assignment_75809' (line 2491)
    call_assignment_75809_86049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2491, 4), 'call_assignment_75809', False)
    # Obtaining the member '__getitem__' of a type (line 2491)
    getitem___86050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2491, 4), call_assignment_75809_86049, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_86053 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___86050, *[int_86051], **kwargs_86052)
    
    # Assigning a type to the variable 'call_assignment_75811' (line 2491)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2491, 4), 'call_assignment_75811', getitem___call_result_86053)
    
    # Assigning a Name to a Name (line 2491):
    # Getting the type of 'call_assignment_75811' (line 2491)
    call_assignment_75811_86054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2491, 4), 'call_assignment_75811')
    # Assigning a type to the variable 'attrrules' (line 2491)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2491, 19), 'attrrules', call_assignment_75811_86054)
    
    # Assigning a Call to a Name (line 2492):
    
    # Assigning a Call to a Name (line 2492):
    
    # Call to copy(...): (line 2492)
    # Processing the call arguments (line 2492)
    
    # Obtaining the type of the subscript
    str_86057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2492, 27), 'str', 'vars')
    # Getting the type of 'block' (line 2492)
    block_86058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2492, 21), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2492)
    getitem___86059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2492, 21), block_86058, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2492)
    subscript_call_result_86060 = invoke(stypy.reporting.localization.Localization(__file__, 2492, 21), getitem___86059, str_86057)
    
    # Processing the call keyword arguments (line 2492)
    kwargs_86061 = {}
    # Getting the type of 'copy' (line 2492)
    copy_86055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2492, 11), 'copy', False)
    # Obtaining the member 'copy' of a type (line 2492)
    copy_86056 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2492, 11), copy_86055, 'copy')
    # Calling copy(args, kwargs) (line 2492)
    copy_call_result_86062 = invoke(stypy.reporting.localization.Localization(__file__, 2492, 11), copy_86056, *[subscript_call_result_86060], **kwargs_86061)
    
    # Assigning a type to the variable 'vars' (line 2492)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2492, 4), 'vars', copy_call_result_86062)
    
    
    # Evaluating a boolean operation
    
    
    # Obtaining the type of the subscript
    str_86063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2493, 13), 'str', 'block')
    # Getting the type of 'block' (line 2493)
    block_86064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2493, 7), 'block')
    # Obtaining the member '__getitem__' of a type (line 2493)
    getitem___86065 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2493, 7), block_86064, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2493)
    subscript_call_result_86066 = invoke(stypy.reporting.localization.Localization(__file__, 2493, 7), getitem___86065, str_86063)
    
    str_86067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2493, 25), 'str', 'function')
    # Applying the binary operator '==' (line 2493)
    result_eq_86068 = python_operator(stypy.reporting.localization.Localization(__file__, 2493, 7), '==', subscript_call_result_86066, str_86067)
    
    
    
    # Obtaining the type of the subscript
    str_86069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2493, 46), 'str', 'name')
    # Getting the type of 'block' (line 2493)
    block_86070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2493, 40), 'block')
    # Obtaining the member '__getitem__' of a type (line 2493)
    getitem___86071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2493, 40), block_86070, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2493)
    subscript_call_result_86072 = invoke(stypy.reporting.localization.Localization(__file__, 2493, 40), getitem___86071, str_86069)
    
    # Getting the type of 'vars' (line 2493)
    vars_86073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2493, 61), 'vars')
    # Applying the binary operator 'notin' (line 2493)
    result_contains_86074 = python_operator(stypy.reporting.localization.Localization(__file__, 2493, 40), 'notin', subscript_call_result_86072, vars_86073)
    
    # Applying the binary operator 'and' (line 2493)
    result_and_keyword_86075 = python_operator(stypy.reporting.localization.Localization(__file__, 2493, 7), 'and', result_eq_86068, result_contains_86074)
    
    # Testing the type of an if condition (line 2493)
    if_condition_86076 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2493, 4), result_and_keyword_86075)
    # Assigning a type to the variable 'if_condition_86076' (line 2493)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2493, 4), 'if_condition_86076', if_condition_86076)
    # SSA begins for if statement (line 2493)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Dict to a Subscript (line 2494):
    
    # Assigning a Dict to a Subscript (line 2494):
    
    # Obtaining an instance of the builtin type 'dict' (line 2494)
    dict_86077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2494, 30), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2494)
    
    # Getting the type of 'vars' (line 2494)
    vars_86078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2494, 8), 'vars')
    
    # Obtaining the type of the subscript
    str_86079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2494, 19), 'str', 'name')
    # Getting the type of 'block' (line 2494)
    block_86080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2494, 13), 'block')
    # Obtaining the member '__getitem__' of a type (line 2494)
    getitem___86081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2494, 13), block_86080, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2494)
    subscript_call_result_86082 = invoke(stypy.reporting.localization.Localization(__file__, 2494, 13), getitem___86081, str_86079)
    
    # Storing an element on a container (line 2494)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2494, 8), vars_86078, (subscript_call_result_86082, dict_86077))
    # SSA join for if statement (line 2493)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_86083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2495, 7), 'str', '')
    
    # Obtaining the type of the subscript
    str_86084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2495, 19), 'str', 'vars')
    # Getting the type of 'block' (line 2495)
    block_86085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2495, 13), 'block')
    # Obtaining the member '__getitem__' of a type (line 2495)
    getitem___86086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2495, 13), block_86085, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2495)
    subscript_call_result_86087 = invoke(stypy.reporting.localization.Localization(__file__, 2495, 13), getitem___86086, str_86084)
    
    # Applying the binary operator 'in' (line 2495)
    result_contains_86088 = python_operator(stypy.reporting.localization.Localization(__file__, 2495, 7), 'in', str_86083, subscript_call_result_86087)
    
    # Testing the type of an if condition (line 2495)
    if_condition_86089 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2495, 4), result_contains_86088)
    # Assigning a type to the variable 'if_condition_86089' (line 2495)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2495, 4), 'if_condition_86089', if_condition_86089)
    # SSA begins for if statement (line 2495)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Deleting a member
    # Getting the type of 'vars' (line 2496)
    vars_86090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2496, 12), 'vars')
    
    # Obtaining the type of the subscript
    str_86091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2496, 17), 'str', '')
    # Getting the type of 'vars' (line 2496)
    vars_86092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2496, 12), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2496)
    getitem___86093 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2496, 12), vars_86092, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2496)
    subscript_call_result_86094 = invoke(stypy.reporting.localization.Localization(__file__, 2496, 12), getitem___86093, str_86091)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2496, 8), vars_86090, subscript_call_result_86094)
    
    
    str_86095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2497, 11), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    str_86096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2497, 39), 'str', '')
    
    # Obtaining the type of the subscript
    str_86097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2497, 31), 'str', 'vars')
    # Getting the type of 'block' (line 2497)
    block_86098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2497, 25), 'block')
    # Obtaining the member '__getitem__' of a type (line 2497)
    getitem___86099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2497, 25), block_86098, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2497)
    subscript_call_result_86100 = invoke(stypy.reporting.localization.Localization(__file__, 2497, 25), getitem___86099, str_86097)
    
    # Obtaining the member '__getitem__' of a type (line 2497)
    getitem___86101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2497, 25), subscript_call_result_86100, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2497)
    subscript_call_result_86102 = invoke(stypy.reporting.localization.Localization(__file__, 2497, 25), getitem___86101, str_86096)
    
    # Applying the binary operator 'in' (line 2497)
    result_contains_86103 = python_operator(stypy.reporting.localization.Localization(__file__, 2497, 11), 'in', str_86095, subscript_call_result_86102)
    
    # Testing the type of an if condition (line 2497)
    if_condition_86104 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2497, 8), result_contains_86103)
    # Assigning a type to the variable 'if_condition_86104' (line 2497)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2497, 8), 'if_condition_86104', if_condition_86104)
    # SSA begins for if statement (line 2497)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2498):
    
    # Assigning a Subscript to a Name (line 2498):
    
    # Obtaining the type of the subscript
    str_86105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2498, 36), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    str_86106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2498, 32), 'str', '')
    
    # Obtaining the type of the subscript
    str_86107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2498, 24), 'str', 'vars')
    # Getting the type of 'block' (line 2498)
    block_86108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2498, 18), 'block')
    # Obtaining the member '__getitem__' of a type (line 2498)
    getitem___86109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2498, 18), block_86108, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2498)
    subscript_call_result_86110 = invoke(stypy.reporting.localization.Localization(__file__, 2498, 18), getitem___86109, str_86107)
    
    # Obtaining the member '__getitem__' of a type (line 2498)
    getitem___86111 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2498, 18), subscript_call_result_86110, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2498)
    subscript_call_result_86112 = invoke(stypy.reporting.localization.Localization(__file__, 2498, 18), getitem___86111, str_86106)
    
    # Obtaining the member '__getitem__' of a type (line 2498)
    getitem___86113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2498, 18), subscript_call_result_86112, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2498)
    subscript_call_result_86114 = invoke(stypy.reporting.localization.Localization(__file__, 2498, 18), getitem___86113, str_86105)
    
    # Assigning a type to the variable 'gen' (line 2498)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2498, 12), 'gen', subscript_call_result_86114)
    
    
    # Call to list(...): (line 2499)
    # Processing the call arguments (line 2499)
    
    # Call to keys(...): (line 2499)
    # Processing the call keyword arguments (line 2499)
    kwargs_86118 = {}
    # Getting the type of 'vars' (line 2499)
    vars_86116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2499, 26), 'vars', False)
    # Obtaining the member 'keys' of a type (line 2499)
    keys_86117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2499, 26), vars_86116, 'keys')
    # Calling keys(args, kwargs) (line 2499)
    keys_call_result_86119 = invoke(stypy.reporting.localization.Localization(__file__, 2499, 26), keys_86117, *[], **kwargs_86118)
    
    # Processing the call keyword arguments (line 2499)
    kwargs_86120 = {}
    # Getting the type of 'list' (line 2499)
    list_86115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2499, 21), 'list', False)
    # Calling list(args, kwargs) (line 2499)
    list_call_result_86121 = invoke(stypy.reporting.localization.Localization(__file__, 2499, 21), list_86115, *[keys_call_result_86119], **kwargs_86120)
    
    # Testing the type of a for loop iterable (line 2499)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2499, 12), list_call_result_86121)
    # Getting the type of the for loop variable (line 2499)
    for_loop_var_86122 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2499, 12), list_call_result_86121)
    # Assigning a type to the variable 'n' (line 2499)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2499, 12), 'n', for_loop_var_86122)
    # SSA begins for a for statement (line 2499)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Obtaining an instance of the builtin type 'list' (line 2500)
    list_86123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2500, 25), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2500)
    # Adding element type (line 2500)
    str_86124 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2500, 26), 'str', 'public')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2500, 25), list_86123, str_86124)
    # Adding element type (line 2500)
    str_86125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2500, 36), 'str', 'private')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2500, 25), list_86123, str_86125)
    
    # Testing the type of a for loop iterable (line 2500)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2500, 16), list_86123)
    # Getting the type of the for loop variable (line 2500)
    for_loop_var_86126 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2500, 16), list_86123)
    # Assigning a type to the variable 'k' (line 2500)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2500, 16), 'k', for_loop_var_86126)
    # SSA begins for a for statement (line 2500)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'k' (line 2501)
    k_86127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2501, 23), 'k')
    # Getting the type of 'gen' (line 2501)
    gen_86128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2501, 28), 'gen')
    # Applying the binary operator 'in' (line 2501)
    result_contains_86129 = python_operator(stypy.reporting.localization.Localization(__file__, 2501, 23), 'in', k_86127, gen_86128)
    
    # Testing the type of an if condition (line 2501)
    if_condition_86130 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2501, 20), result_contains_86129)
    # Assigning a type to the variable 'if_condition_86130' (line 2501)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2501, 20), 'if_condition_86130', if_condition_86130)
    # SSA begins for if statement (line 2501)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Subscript (line 2502):
    
    # Assigning a Call to a Subscript (line 2502):
    
    # Call to setattrspec(...): (line 2502)
    # Processing the call arguments (line 2502)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2502)
    n_86132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2502, 51), 'n', False)
    # Getting the type of 'vars' (line 2502)
    vars_86133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2502, 46), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2502)
    getitem___86134 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2502, 46), vars_86133, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2502)
    subscript_call_result_86135 = invoke(stypy.reporting.localization.Localization(__file__, 2502, 46), getitem___86134, n_86132)
    
    # Getting the type of 'k' (line 2502)
    k_86136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2502, 55), 'k', False)
    # Processing the call keyword arguments (line 2502)
    kwargs_86137 = {}
    # Getting the type of 'setattrspec' (line 2502)
    setattrspec_86131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2502, 34), 'setattrspec', False)
    # Calling setattrspec(args, kwargs) (line 2502)
    setattrspec_call_result_86138 = invoke(stypy.reporting.localization.Localization(__file__, 2502, 34), setattrspec_86131, *[subscript_call_result_86135, k_86136], **kwargs_86137)
    
    # Getting the type of 'vars' (line 2502)
    vars_86139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2502, 24), 'vars')
    # Getting the type of 'n' (line 2502)
    n_86140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2502, 29), 'n')
    # Storing an element on a container (line 2502)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2502, 24), vars_86139, (n_86140, setattrspec_call_result_86138))
    # SSA join for if statement (line 2501)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2497)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2495)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a List to a Name (line 2503):
    
    # Assigning a List to a Name (line 2503):
    
    # Obtaining an instance of the builtin type 'list' (line 2503)
    list_86141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2503, 12), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2503)
    
    # Assigning a type to the variable 'svars' (line 2503)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2503, 4), 'svars', list_86141)
    
    # Assigning a Subscript to a Name (line 2504):
    
    # Assigning a Subscript to a Name (line 2504):
    
    # Obtaining the type of the subscript
    str_86142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2504, 17), 'str', 'args')
    # Getting the type of 'block' (line 2504)
    block_86143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2504, 11), 'block')
    # Obtaining the member '__getitem__' of a type (line 2504)
    getitem___86144 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2504, 11), block_86143, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2504)
    subscript_call_result_86145 = invoke(stypy.reporting.localization.Localization(__file__, 2504, 11), getitem___86144, str_86142)
    
    # Assigning a type to the variable 'args' (line 2504)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2504, 4), 'args', subscript_call_result_86145)
    
    # Getting the type of 'args' (line 2505)
    args_86146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2505, 13), 'args')
    # Testing the type of a for loop iterable (line 2505)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2505, 4), args_86146)
    # Getting the type of the for loop variable (line 2505)
    for_loop_var_86147 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2505, 4), args_86146)
    # Assigning a type to the variable 'a' (line 2505)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2505, 4), 'a', for_loop_var_86147)
    # SSA begins for a for statement (line 2505)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # SSA begins for try-except statement (line 2506)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 2507)
    a_86148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2507, 17), 'a')
    # Getting the type of 'vars' (line 2507)
    vars_86149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2507, 12), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2507)
    getitem___86150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2507, 12), vars_86149, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2507)
    subscript_call_result_86151 = invoke(stypy.reporting.localization.Localization(__file__, 2507, 12), getitem___86150, a_86148)
    
    
    # Call to append(...): (line 2508)
    # Processing the call arguments (line 2508)
    # Getting the type of 'a' (line 2508)
    a_86154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2508, 25), 'a', False)
    # Processing the call keyword arguments (line 2508)
    kwargs_86155 = {}
    # Getting the type of 'svars' (line 2508)
    svars_86152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2508, 12), 'svars', False)
    # Obtaining the member 'append' of a type (line 2508)
    append_86153 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2508, 12), svars_86152, 'append')
    # Calling append(args, kwargs) (line 2508)
    append_call_result_86156 = invoke(stypy.reporting.localization.Localization(__file__, 2508, 12), append_86153, *[a_86154], **kwargs_86155)
    
    # SSA branch for the except part of a try statement (line 2506)
    # SSA branch for the except 'KeyError' branch of a try statement (line 2506)
    module_type_store.open_ssa_branch('except')
    pass
    # SSA join for try-except statement (line 2506)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to list(...): (line 2511)
    # Processing the call arguments (line 2511)
    
    # Call to keys(...): (line 2511)
    # Processing the call keyword arguments (line 2511)
    kwargs_86160 = {}
    # Getting the type of 'vars' (line 2511)
    vars_86158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2511, 18), 'vars', False)
    # Obtaining the member 'keys' of a type (line 2511)
    keys_86159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2511, 18), vars_86158, 'keys')
    # Calling keys(args, kwargs) (line 2511)
    keys_call_result_86161 = invoke(stypy.reporting.localization.Localization(__file__, 2511, 18), keys_86159, *[], **kwargs_86160)
    
    # Processing the call keyword arguments (line 2511)
    kwargs_86162 = {}
    # Getting the type of 'list' (line 2511)
    list_86157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2511, 13), 'list', False)
    # Calling list(args, kwargs) (line 2511)
    list_call_result_86163 = invoke(stypy.reporting.localization.Localization(__file__, 2511, 13), list_86157, *[keys_call_result_86161], **kwargs_86162)
    
    # Testing the type of a for loop iterable (line 2511)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2511, 4), list_call_result_86163)
    # Getting the type of the for loop variable (line 2511)
    for_loop_var_86164 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2511, 4), list_call_result_86163)
    # Assigning a type to the variable 'n' (line 2511)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2511, 4), 'n', for_loop_var_86164)
    # SSA begins for a for statement (line 2511)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'n' (line 2512)
    n_86165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2512, 11), 'n')
    # Getting the type of 'args' (line 2512)
    args_86166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2512, 20), 'args')
    # Applying the binary operator 'notin' (line 2512)
    result_contains_86167 = python_operator(stypy.reporting.localization.Localization(__file__, 2512, 11), 'notin', n_86165, args_86166)
    
    # Testing the type of an if condition (line 2512)
    if_condition_86168 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2512, 8), result_contains_86167)
    # Assigning a type to the variable 'if_condition_86168' (line 2512)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2512, 8), 'if_condition_86168', if_condition_86168)
    # SSA begins for if statement (line 2512)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2513)
    # Processing the call arguments (line 2513)
    # Getting the type of 'n' (line 2513)
    n_86171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2513, 25), 'n', False)
    # Processing the call keyword arguments (line 2513)
    kwargs_86172 = {}
    # Getting the type of 'svars' (line 2513)
    svars_86169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2513, 12), 'svars', False)
    # Obtaining the member 'append' of a type (line 2513)
    append_86170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2513, 12), svars_86169, 'append')
    # Calling append(args, kwargs) (line 2513)
    append_call_result_86173 = invoke(stypy.reporting.localization.Localization(__file__, 2513, 12), append_86170, *[n_86171], **kwargs_86172)
    
    # SSA join for if statement (line 2512)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2515):
    
    # Assigning a Call to a Name (line 2515):
    
    # Call to get_parameters(...): (line 2515)
    # Processing the call arguments (line 2515)
    # Getting the type of 'vars' (line 2515)
    vars_86175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2515, 28), 'vars', False)
    
    # Call to get_useparameters(...): (line 2515)
    # Processing the call arguments (line 2515)
    # Getting the type of 'block' (line 2515)
    block_86177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2515, 52), 'block', False)
    # Processing the call keyword arguments (line 2515)
    kwargs_86178 = {}
    # Getting the type of 'get_useparameters' (line 2515)
    get_useparameters_86176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2515, 34), 'get_useparameters', False)
    # Calling get_useparameters(args, kwargs) (line 2515)
    get_useparameters_call_result_86179 = invoke(stypy.reporting.localization.Localization(__file__, 2515, 34), get_useparameters_86176, *[block_86177], **kwargs_86178)
    
    # Processing the call keyword arguments (line 2515)
    kwargs_86180 = {}
    # Getting the type of 'get_parameters' (line 2515)
    get_parameters_86174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2515, 13), 'get_parameters', False)
    # Calling get_parameters(args, kwargs) (line 2515)
    get_parameters_call_result_86181 = invoke(stypy.reporting.localization.Localization(__file__, 2515, 13), get_parameters_86174, *[vars_86175, get_useparameters_call_result_86179], **kwargs_86180)
    
    # Assigning a type to the variable 'params' (line 2515)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2515, 4), 'params', get_parameters_call_result_86181)
    
    # Assigning a Dict to a Name (line 2517):
    
    # Assigning a Dict to a Name (line 2517):
    
    # Obtaining an instance of the builtin type 'dict' (line 2517)
    dict_86182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2517, 18), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2517)
    
    # Assigning a type to the variable 'dep_matches' (line 2517)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2517, 4), 'dep_matches', dict_86182)
    
    # Assigning a Attribute to a Name (line 2518):
    
    # Assigning a Attribute to a Name (line 2518):
    
    # Call to compile(...): (line 2518)
    # Processing the call arguments (line 2518)
    str_86185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2518, 28), 'str', '\\w[\\w\\d_$]*')
    # Processing the call keyword arguments (line 2518)
    kwargs_86186 = {}
    # Getting the type of 're' (line 2518)
    re_86183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2518, 17), 're', False)
    # Obtaining the member 'compile' of a type (line 2518)
    compile_86184 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2518, 17), re_86183, 'compile')
    # Calling compile(args, kwargs) (line 2518)
    compile_call_result_86187 = invoke(stypy.reporting.localization.Localization(__file__, 2518, 17), compile_86184, *[str_86185], **kwargs_86186)
    
    # Obtaining the member 'match' of a type (line 2518)
    match_86188 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2518, 17), compile_call_result_86187, 'match')
    # Assigning a type to the variable 'name_match' (line 2518)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2518, 4), 'name_match', match_86188)
    
    
    # Call to list(...): (line 2519)
    # Processing the call arguments (line 2519)
    
    # Call to keys(...): (line 2519)
    # Processing the call keyword arguments (line 2519)
    kwargs_86192 = {}
    # Getting the type of 'vars' (line 2519)
    vars_86190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2519, 18), 'vars', False)
    # Obtaining the member 'keys' of a type (line 2519)
    keys_86191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2519, 18), vars_86190, 'keys')
    # Calling keys(args, kwargs) (line 2519)
    keys_call_result_86193 = invoke(stypy.reporting.localization.Localization(__file__, 2519, 18), keys_86191, *[], **kwargs_86192)
    
    # Processing the call keyword arguments (line 2519)
    kwargs_86194 = {}
    # Getting the type of 'list' (line 2519)
    list_86189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2519, 13), 'list', False)
    # Calling list(args, kwargs) (line 2519)
    list_call_result_86195 = invoke(stypy.reporting.localization.Localization(__file__, 2519, 13), list_86189, *[keys_call_result_86193], **kwargs_86194)
    
    # Testing the type of a for loop iterable (line 2519)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2519, 4), list_call_result_86195)
    # Getting the type of the for loop variable (line 2519)
    for_loop_var_86196 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2519, 4), list_call_result_86195)
    # Assigning a type to the variable 'v' (line 2519)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2519, 4), 'v', for_loop_var_86196)
    # SSA begins for a for statement (line 2519)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 2520):
    
    # Assigning a Call to a Name (line 2520):
    
    # Call to name_match(...): (line 2520)
    # Processing the call arguments (line 2520)
    # Getting the type of 'v' (line 2520)
    v_86198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2520, 23), 'v', False)
    # Processing the call keyword arguments (line 2520)
    kwargs_86199 = {}
    # Getting the type of 'name_match' (line 2520)
    name_match_86197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2520, 12), 'name_match', False)
    # Calling name_match(args, kwargs) (line 2520)
    name_match_call_result_86200 = invoke(stypy.reporting.localization.Localization(__file__, 2520, 12), name_match_86197, *[v_86198], **kwargs_86199)
    
    # Assigning a type to the variable 'm' (line 2520)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2520, 8), 'm', name_match_call_result_86200)
    
    # Getting the type of 'm' (line 2521)
    m_86201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2521, 11), 'm')
    # Testing the type of an if condition (line 2521)
    if_condition_86202 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2521, 8), m_86201)
    # Assigning a type to the variable 'if_condition_86202' (line 2521)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2521, 8), 'if_condition_86202', if_condition_86202)
    # SSA begins for if statement (line 2521)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2522):
    
    # Assigning a Subscript to a Name (line 2522):
    
    # Obtaining the type of the subscript
    
    # Call to start(...): (line 2522)
    # Processing the call keyword arguments (line 2522)
    kwargs_86205 = {}
    # Getting the type of 'm' (line 2522)
    m_86203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2522, 18), 'm', False)
    # Obtaining the member 'start' of a type (line 2522)
    start_86204 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2522, 18), m_86203, 'start')
    # Calling start(args, kwargs) (line 2522)
    start_call_result_86206 = invoke(stypy.reporting.localization.Localization(__file__, 2522, 18), start_86204, *[], **kwargs_86205)
    
    
    # Call to end(...): (line 2522)
    # Processing the call keyword arguments (line 2522)
    kwargs_86209 = {}
    # Getting the type of 'm' (line 2522)
    m_86207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2522, 28), 'm', False)
    # Obtaining the member 'end' of a type (line 2522)
    end_86208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2522, 28), m_86207, 'end')
    # Calling end(args, kwargs) (line 2522)
    end_call_result_86210 = invoke(stypy.reporting.localization.Localization(__file__, 2522, 28), end_86208, *[], **kwargs_86209)
    
    slice_86211 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2522, 16), start_call_result_86206, end_call_result_86210, None)
    # Getting the type of 'v' (line 2522)
    v_86212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2522, 16), 'v')
    # Obtaining the member '__getitem__' of a type (line 2522)
    getitem___86213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2522, 16), v_86212, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2522)
    subscript_call_result_86214 = invoke(stypy.reporting.localization.Localization(__file__, 2522, 16), getitem___86213, slice_86211)
    
    # Assigning a type to the variable 'n' (line 2522)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2522, 12), 'n', subscript_call_result_86214)
    
    
    # SSA begins for try-except statement (line 2523)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2524)
    n_86215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2524, 28), 'n')
    # Getting the type of 'dep_matches' (line 2524)
    dep_matches_86216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2524, 16), 'dep_matches')
    # Obtaining the member '__getitem__' of a type (line 2524)
    getitem___86217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2524, 16), dep_matches_86216, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2524)
    subscript_call_result_86218 = invoke(stypy.reporting.localization.Localization(__file__, 2524, 16), getitem___86217, n_86215)
    
    # SSA branch for the except part of a try statement (line 2523)
    # SSA branch for the except 'KeyError' branch of a try statement (line 2523)
    module_type_store.open_ssa_branch('except')
    
    # Assigning a Attribute to a Subscript (line 2526):
    
    # Assigning a Attribute to a Subscript (line 2526):
    
    # Call to compile(...): (line 2526)
    # Processing the call arguments (line 2526)
    str_86221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2526, 44), 'str', '.*\\b%s\\b')
    # Getting the type of 'v' (line 2526)
    v_86222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2526, 59), 'v', False)
    # Applying the binary operator '%' (line 2526)
    result_mod_86223 = python_operator(stypy.reporting.localization.Localization(__file__, 2526, 44), '%', str_86221, v_86222)
    
    # Getting the type of 're' (line 2526)
    re_86224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2526, 63), 're', False)
    # Obtaining the member 'I' of a type (line 2526)
    I_86225 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2526, 63), re_86224, 'I')
    # Processing the call keyword arguments (line 2526)
    kwargs_86226 = {}
    # Getting the type of 're' (line 2526)
    re_86219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2526, 33), 're', False)
    # Obtaining the member 'compile' of a type (line 2526)
    compile_86220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2526, 33), re_86219, 'compile')
    # Calling compile(args, kwargs) (line 2526)
    compile_call_result_86227 = invoke(stypy.reporting.localization.Localization(__file__, 2526, 33), compile_86220, *[result_mod_86223, I_86225], **kwargs_86226)
    
    # Obtaining the member 'match' of a type (line 2526)
    match_86228 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2526, 33), compile_call_result_86227, 'match')
    # Getting the type of 'dep_matches' (line 2526)
    dep_matches_86229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2526, 16), 'dep_matches')
    # Getting the type of 'n' (line 2526)
    n_86230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2526, 28), 'n')
    # Storing an element on a container (line 2526)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2526, 16), dep_matches_86229, (n_86230, match_86228))
    # SSA join for try-except statement (line 2523)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2521)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'svars' (line 2527)
    svars_86231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2527, 13), 'svars')
    # Testing the type of a for loop iterable (line 2527)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2527, 4), svars_86231)
    # Getting the type of the for loop variable (line 2527)
    for_loop_var_86232 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2527, 4), svars_86231)
    # Assigning a type to the variable 'n' (line 2527)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2527, 4), 'n', for_loop_var_86232)
    # SSA begins for a for statement (line 2527)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Obtaining the type of the subscript
    int_86233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2528, 13), 'int')
    # Getting the type of 'n' (line 2528)
    n_86234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2528, 11), 'n')
    # Obtaining the member '__getitem__' of a type (line 2528)
    getitem___86235 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2528, 11), n_86234, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2528)
    subscript_call_result_86236 = invoke(stypy.reporting.localization.Localization(__file__, 2528, 11), getitem___86235, int_86233)
    
    
    # Call to list(...): (line 2528)
    # Processing the call arguments (line 2528)
    
    # Call to keys(...): (line 2528)
    # Processing the call keyword arguments (line 2528)
    kwargs_86240 = {}
    # Getting the type of 'attrrules' (line 2528)
    attrrules_86238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2528, 24), 'attrrules', False)
    # Obtaining the member 'keys' of a type (line 2528)
    keys_86239 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2528, 24), attrrules_86238, 'keys')
    # Calling keys(args, kwargs) (line 2528)
    keys_call_result_86241 = invoke(stypy.reporting.localization.Localization(__file__, 2528, 24), keys_86239, *[], **kwargs_86240)
    
    # Processing the call keyword arguments (line 2528)
    kwargs_86242 = {}
    # Getting the type of 'list' (line 2528)
    list_86237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2528, 19), 'list', False)
    # Calling list(args, kwargs) (line 2528)
    list_call_result_86243 = invoke(stypy.reporting.localization.Localization(__file__, 2528, 19), list_86237, *[keys_call_result_86241], **kwargs_86242)
    
    # Applying the binary operator 'in' (line 2528)
    result_contains_86244 = python_operator(stypy.reporting.localization.Localization(__file__, 2528, 11), 'in', subscript_call_result_86236, list_call_result_86243)
    
    # Testing the type of an if condition (line 2528)
    if_condition_86245 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2528, 8), result_contains_86244)
    # Assigning a type to the variable 'if_condition_86245' (line 2528)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2528, 8), 'if_condition_86245', if_condition_86245)
    # SSA begins for if statement (line 2528)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Subscript (line 2529):
    
    # Assigning a Call to a Subscript (line 2529):
    
    # Call to setattrspec(...): (line 2529)
    # Processing the call arguments (line 2529)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2529)
    n_86247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2529, 39), 'n', False)
    # Getting the type of 'vars' (line 2529)
    vars_86248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2529, 34), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2529)
    getitem___86249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2529, 34), vars_86248, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2529)
    subscript_call_result_86250 = invoke(stypy.reporting.localization.Localization(__file__, 2529, 34), getitem___86249, n_86247)
    
    
    # Obtaining the type of the subscript
    
    # Obtaining the type of the subscript
    int_86251 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2529, 55), 'int')
    # Getting the type of 'n' (line 2529)
    n_86252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2529, 53), 'n', False)
    # Obtaining the member '__getitem__' of a type (line 2529)
    getitem___86253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2529, 53), n_86252, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2529)
    subscript_call_result_86254 = invoke(stypy.reporting.localization.Localization(__file__, 2529, 53), getitem___86253, int_86251)
    
    # Getting the type of 'attrrules' (line 2529)
    attrrules_86255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2529, 43), 'attrrules', False)
    # Obtaining the member '__getitem__' of a type (line 2529)
    getitem___86256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2529, 43), attrrules_86255, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2529)
    subscript_call_result_86257 = invoke(stypy.reporting.localization.Localization(__file__, 2529, 43), getitem___86256, subscript_call_result_86254)
    
    # Processing the call keyword arguments (line 2529)
    kwargs_86258 = {}
    # Getting the type of 'setattrspec' (line 2529)
    setattrspec_86246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2529, 22), 'setattrspec', False)
    # Calling setattrspec(args, kwargs) (line 2529)
    setattrspec_call_result_86259 = invoke(stypy.reporting.localization.Localization(__file__, 2529, 22), setattrspec_86246, *[subscript_call_result_86250, subscript_call_result_86257], **kwargs_86258)
    
    # Getting the type of 'vars' (line 2529)
    vars_86260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2529, 12), 'vars')
    # Getting the type of 'n' (line 2529)
    n_86261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2529, 17), 'n')
    # Storing an element on a container (line 2529)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2529, 12), vars_86260, (n_86261, setattrspec_call_result_86259))
    # SSA join for if statement (line 2528)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_86262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2530, 11), 'str', 'typespec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2530)
    n_86263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2530, 34), 'n')
    # Getting the type of 'vars' (line 2530)
    vars_86264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2530, 29), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2530)
    getitem___86265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2530, 29), vars_86264, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2530)
    subscript_call_result_86266 = invoke(stypy.reporting.localization.Localization(__file__, 2530, 29), getitem___86265, n_86263)
    
    # Applying the binary operator 'notin' (line 2530)
    result_contains_86267 = python_operator(stypy.reporting.localization.Localization(__file__, 2530, 11), 'notin', str_86262, subscript_call_result_86266)
    
    # Testing the type of an if condition (line 2530)
    if_condition_86268 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2530, 8), result_contains_86267)
    # Assigning a type to the variable 'if_condition_86268' (line 2530)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2530, 8), 'if_condition_86268', if_condition_86268)
    # SSA begins for if statement (line 2530)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Evaluating a boolean operation
    
    str_86269 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2531, 19), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2531)
    n_86270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2531, 38), 'n')
    # Getting the type of 'vars' (line 2531)
    vars_86271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2531, 33), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2531)
    getitem___86272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2531, 33), vars_86271, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2531)
    subscript_call_result_86273 = invoke(stypy.reporting.localization.Localization(__file__, 2531, 33), getitem___86272, n_86270)
    
    # Applying the binary operator 'in' (line 2531)
    result_contains_86274 = python_operator(stypy.reporting.localization.Localization(__file__, 2531, 19), 'in', str_86269, subscript_call_result_86273)
    
    
    str_86275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2531, 45), 'str', 'external')
    
    # Obtaining the type of the subscript
    str_86276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2531, 67), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2531)
    n_86277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2531, 64), 'n')
    # Getting the type of 'vars' (line 2531)
    vars_86278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2531, 59), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2531)
    getitem___86279 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2531, 59), vars_86278, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2531)
    subscript_call_result_86280 = invoke(stypy.reporting.localization.Localization(__file__, 2531, 59), getitem___86279, n_86277)
    
    # Obtaining the member '__getitem__' of a type (line 2531)
    getitem___86281 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2531, 59), subscript_call_result_86280, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2531)
    subscript_call_result_86282 = invoke(stypy.reporting.localization.Localization(__file__, 2531, 59), getitem___86281, str_86276)
    
    # Applying the binary operator 'in' (line 2531)
    result_contains_86283 = python_operator(stypy.reporting.localization.Localization(__file__, 2531, 45), 'in', str_86275, subscript_call_result_86282)
    
    # Applying the binary operator 'and' (line 2531)
    result_and_keyword_86284 = python_operator(stypy.reporting.localization.Localization(__file__, 2531, 19), 'and', result_contains_86274, result_contains_86283)
    
    # Applying the 'not' unary operator (line 2531)
    result_not__86285 = python_operator(stypy.reporting.localization.Localization(__file__, 2531, 15), 'not', result_and_keyword_86284)
    
    # Testing the type of an if condition (line 2531)
    if_condition_86286 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2531, 12), result_not__86285)
    # Assigning a type to the variable 'if_condition_86286' (line 2531)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2531, 12), 'if_condition_86286', if_condition_86286)
    # SSA begins for if statement (line 2531)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'implicitrules' (line 2532)
    implicitrules_86287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2532, 19), 'implicitrules')
    # Testing the type of an if condition (line 2532)
    if_condition_86288 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2532, 16), implicitrules_86287)
    # Assigning a type to the variable 'if_condition_86288' (line 2532)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2532, 16), 'if_condition_86288', if_condition_86288)
    # SSA begins for if statement (line 2532)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2533):
    
    # Assigning a Call to a Name (line 2533):
    
    # Call to lower(...): (line 2533)
    # Processing the call keyword arguments (line 2533)
    kwargs_86294 = {}
    
    # Obtaining the type of the subscript
    int_86289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2533, 28), 'int')
    # Getting the type of 'n' (line 2533)
    n_86290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2533, 26), 'n', False)
    # Obtaining the member '__getitem__' of a type (line 2533)
    getitem___86291 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2533, 26), n_86290, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2533)
    subscript_call_result_86292 = invoke(stypy.reporting.localization.Localization(__file__, 2533, 26), getitem___86291, int_86289)
    
    # Obtaining the member 'lower' of a type (line 2533)
    lower_86293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2533, 26), subscript_call_result_86292, 'lower')
    # Calling lower(args, kwargs) (line 2533)
    lower_call_result_86295 = invoke(stypy.reporting.localization.Localization(__file__, 2533, 26), lower_86293, *[], **kwargs_86294)
    
    # Assigning a type to the variable 'ln0' (line 2533)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2533, 20), 'ln0', lower_call_result_86295)
    
    
    # Call to list(...): (line 2534)
    # Processing the call arguments (line 2534)
    
    # Call to keys(...): (line 2534)
    # Processing the call keyword arguments (line 2534)
    kwargs_86302 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'ln0' (line 2534)
    ln0_86297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2534, 48), 'ln0', False)
    # Getting the type of 'implicitrules' (line 2534)
    implicitrules_86298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2534, 34), 'implicitrules', False)
    # Obtaining the member '__getitem__' of a type (line 2534)
    getitem___86299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2534, 34), implicitrules_86298, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2534)
    subscript_call_result_86300 = invoke(stypy.reporting.localization.Localization(__file__, 2534, 34), getitem___86299, ln0_86297)
    
    # Obtaining the member 'keys' of a type (line 2534)
    keys_86301 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2534, 34), subscript_call_result_86300, 'keys')
    # Calling keys(args, kwargs) (line 2534)
    keys_call_result_86303 = invoke(stypy.reporting.localization.Localization(__file__, 2534, 34), keys_86301, *[], **kwargs_86302)
    
    # Processing the call keyword arguments (line 2534)
    kwargs_86304 = {}
    # Getting the type of 'list' (line 2534)
    list_86296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2534, 29), 'list', False)
    # Calling list(args, kwargs) (line 2534)
    list_call_result_86305 = invoke(stypy.reporting.localization.Localization(__file__, 2534, 29), list_86296, *[keys_call_result_86303], **kwargs_86304)
    
    # Testing the type of a for loop iterable (line 2534)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2534, 20), list_call_result_86305)
    # Getting the type of the for loop variable (line 2534)
    for_loop_var_86306 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2534, 20), list_call_result_86305)
    # Assigning a type to the variable 'k' (line 2534)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2534, 20), 'k', for_loop_var_86306)
    # SSA begins for a for statement (line 2534)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'k' (line 2535)
    k_86307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2535, 27), 'k')
    str_86308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2535, 32), 'str', 'typespec')
    # Applying the binary operator '==' (line 2535)
    result_eq_86309 = python_operator(stypy.reporting.localization.Localization(__file__, 2535, 27), '==', k_86307, str_86308)
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 2535)
    k_86310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2535, 66), 'k')
    
    # Obtaining the type of the subscript
    # Getting the type of 'ln0' (line 2535)
    ln0_86311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2535, 61), 'ln0')
    # Getting the type of 'implicitrules' (line 2535)
    implicitrules_86312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2535, 47), 'implicitrules')
    # Obtaining the member '__getitem__' of a type (line 2535)
    getitem___86313 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2535, 47), implicitrules_86312, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2535)
    subscript_call_result_86314 = invoke(stypy.reporting.localization.Localization(__file__, 2535, 47), getitem___86313, ln0_86311)
    
    # Obtaining the member '__getitem__' of a type (line 2535)
    getitem___86315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2535, 47), subscript_call_result_86314, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2535)
    subscript_call_result_86316 = invoke(stypy.reporting.localization.Localization(__file__, 2535, 47), getitem___86315, k_86310)
    
    str_86317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2535, 72), 'str', 'undefined')
    # Applying the binary operator '==' (line 2535)
    result_eq_86318 = python_operator(stypy.reporting.localization.Localization(__file__, 2535, 47), '==', subscript_call_result_86316, str_86317)
    
    # Applying the binary operator 'and' (line 2535)
    result_and_keyword_86319 = python_operator(stypy.reporting.localization.Localization(__file__, 2535, 27), 'and', result_eq_86309, result_eq_86318)
    
    # Testing the type of an if condition (line 2535)
    if_condition_86320 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2535, 24), result_and_keyword_86319)
    # Assigning a type to the variable 'if_condition_86320' (line 2535)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2535, 24), 'if_condition_86320', if_condition_86320)
    # SSA begins for if statement (line 2535)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 2535)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'k' (line 2537)
    k_86321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2537, 27), 'k')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2537)
    n_86322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2537, 41), 'n')
    # Getting the type of 'vars' (line 2537)
    vars_86323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2537, 36), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2537)
    getitem___86324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2537, 36), vars_86323, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2537)
    subscript_call_result_86325 = invoke(stypy.reporting.localization.Localization(__file__, 2537, 36), getitem___86324, n_86322)
    
    # Applying the binary operator 'notin' (line 2537)
    result_contains_86326 = python_operator(stypy.reporting.localization.Localization(__file__, 2537, 27), 'notin', k_86321, subscript_call_result_86325)
    
    # Testing the type of an if condition (line 2537)
    if_condition_86327 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2537, 24), result_contains_86326)
    # Assigning a type to the variable 'if_condition_86327' (line 2537)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2537, 24), 'if_condition_86327', if_condition_86327)
    # SSA begins for if statement (line 2537)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 2538):
    
    # Assigning a Subscript to a Subscript (line 2538):
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 2538)
    k_86328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2538, 60), 'k')
    
    # Obtaining the type of the subscript
    # Getting the type of 'ln0' (line 2538)
    ln0_86329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2538, 55), 'ln0')
    # Getting the type of 'implicitrules' (line 2538)
    implicitrules_86330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2538, 41), 'implicitrules')
    # Obtaining the member '__getitem__' of a type (line 2538)
    getitem___86331 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2538, 41), implicitrules_86330, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2538)
    subscript_call_result_86332 = invoke(stypy.reporting.localization.Localization(__file__, 2538, 41), getitem___86331, ln0_86329)
    
    # Obtaining the member '__getitem__' of a type (line 2538)
    getitem___86333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2538, 41), subscript_call_result_86332, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2538)
    subscript_call_result_86334 = invoke(stypy.reporting.localization.Localization(__file__, 2538, 41), getitem___86333, k_86328)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2538)
    n_86335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2538, 33), 'n')
    # Getting the type of 'vars' (line 2538)
    vars_86336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2538, 28), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2538)
    getitem___86337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2538, 28), vars_86336, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2538)
    subscript_call_result_86338 = invoke(stypy.reporting.localization.Localization(__file__, 2538, 28), getitem___86337, n_86335)
    
    # Getting the type of 'k' (line 2538)
    k_86339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2538, 36), 'k')
    # Storing an element on a container (line 2538)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2538, 28), subscript_call_result_86338, (k_86339, subscript_call_result_86334))
    # SSA branch for the else part of an if statement (line 2537)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'k' (line 2539)
    k_86340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2539, 29), 'k')
    str_86341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2539, 34), 'str', 'attrspec')
    # Applying the binary operator '==' (line 2539)
    result_eq_86342 = python_operator(stypy.reporting.localization.Localization(__file__, 2539, 29), '==', k_86340, str_86341)
    
    # Testing the type of an if condition (line 2539)
    if_condition_86343 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2539, 29), result_eq_86342)
    # Assigning a type to the variable 'if_condition_86343' (line 2539)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2539, 29), 'if_condition_86343', if_condition_86343)
    # SSA begins for if statement (line 2539)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 2540)
    k_86344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2540, 56), 'k')
    
    # Obtaining the type of the subscript
    # Getting the type of 'ln0' (line 2540)
    ln0_86345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2540, 51), 'ln0')
    # Getting the type of 'implicitrules' (line 2540)
    implicitrules_86346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2540, 37), 'implicitrules')
    # Obtaining the member '__getitem__' of a type (line 2540)
    getitem___86347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2540, 37), implicitrules_86346, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2540)
    subscript_call_result_86348 = invoke(stypy.reporting.localization.Localization(__file__, 2540, 37), getitem___86347, ln0_86345)
    
    # Obtaining the member '__getitem__' of a type (line 2540)
    getitem___86349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2540, 37), subscript_call_result_86348, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2540)
    subscript_call_result_86350 = invoke(stypy.reporting.localization.Localization(__file__, 2540, 37), getitem___86349, k_86344)
    
    # Testing the type of a for loop iterable (line 2540)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2540, 28), subscript_call_result_86350)
    # Getting the type of the for loop variable (line 2540)
    for_loop_var_86351 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2540, 28), subscript_call_result_86350)
    # Assigning a type to the variable 'l' (line 2540)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2540, 28), 'l', for_loop_var_86351)
    # SSA begins for a for statement (line 2540)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Subscript (line 2541):
    
    # Assigning a Call to a Subscript (line 2541):
    
    # Call to setattrspec(...): (line 2541)
    # Processing the call arguments (line 2541)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2541)
    n_86353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2541, 59), 'n', False)
    # Getting the type of 'vars' (line 2541)
    vars_86354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2541, 54), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2541)
    getitem___86355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2541, 54), vars_86354, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2541)
    subscript_call_result_86356 = invoke(stypy.reporting.localization.Localization(__file__, 2541, 54), getitem___86355, n_86353)
    
    # Getting the type of 'l' (line 2541)
    l_86357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2541, 63), 'l', False)
    # Processing the call keyword arguments (line 2541)
    kwargs_86358 = {}
    # Getting the type of 'setattrspec' (line 2541)
    setattrspec_86352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2541, 42), 'setattrspec', False)
    # Calling setattrspec(args, kwargs) (line 2541)
    setattrspec_call_result_86359 = invoke(stypy.reporting.localization.Localization(__file__, 2541, 42), setattrspec_86352, *[subscript_call_result_86356, l_86357], **kwargs_86358)
    
    # Getting the type of 'vars' (line 2541)
    vars_86360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2541, 32), 'vars')
    # Getting the type of 'n' (line 2541)
    n_86361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2541, 37), 'n')
    # Storing an element on a container (line 2541)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2541, 32), vars_86360, (n_86361, setattrspec_call_result_86359))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2539)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2537)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 2532)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'n' (line 2542)
    n_86362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2542, 21), 'n')
    
    # Obtaining the type of the subscript
    str_86363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2542, 32), 'str', 'args')
    # Getting the type of 'block' (line 2542)
    block_86364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2542, 26), 'block')
    # Obtaining the member '__getitem__' of a type (line 2542)
    getitem___86365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2542, 26), block_86364, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2542)
    subscript_call_result_86366 = invoke(stypy.reporting.localization.Localization(__file__, 2542, 26), getitem___86365, str_86363)
    
    # Applying the binary operator 'in' (line 2542)
    result_contains_86367 = python_operator(stypy.reporting.localization.Localization(__file__, 2542, 21), 'in', n_86362, subscript_call_result_86366)
    
    # Testing the type of an if condition (line 2542)
    if_condition_86368 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2542, 21), result_contains_86367)
    # Assigning a type to the variable 'if_condition_86368' (line 2542)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2542, 21), 'if_condition_86368', if_condition_86368)
    # SSA begins for if statement (line 2542)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 2543)
    # Processing the call arguments (line 2543)
    str_86370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2543, 28), 'str', 'analyzevars: typespec of variable %s is not defined in routine %s.\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2544)
    tuple_86371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2544, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2544)
    # Adding element type (line 2544)
    
    # Call to repr(...): (line 2544)
    # Processing the call arguments (line 2544)
    # Getting the type of 'n' (line 2544)
    n_86373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2544, 29), 'n', False)
    # Processing the call keyword arguments (line 2544)
    kwargs_86374 = {}
    # Getting the type of 'repr' (line 2544)
    repr_86372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2544, 24), 'repr', False)
    # Calling repr(args, kwargs) (line 2544)
    repr_call_result_86375 = invoke(stypy.reporting.localization.Localization(__file__, 2544, 24), repr_86372, *[n_86373], **kwargs_86374)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2544, 24), tuple_86371, repr_call_result_86375)
    # Adding element type (line 2544)
    
    # Obtaining the type of the subscript
    str_86376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2544, 39), 'str', 'name')
    # Getting the type of 'block' (line 2544)
    block_86377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2544, 33), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2544)
    getitem___86378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2544, 33), block_86377, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2544)
    subscript_call_result_86379 = invoke(stypy.reporting.localization.Localization(__file__, 2544, 33), getitem___86378, str_86376)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2544, 24), tuple_86371, subscript_call_result_86379)
    
    # Applying the binary operator '%' (line 2543)
    result_mod_86380 = python_operator(stypy.reporting.localization.Localization(__file__, 2543, 28), '%', str_86370, tuple_86371)
    
    # Processing the call keyword arguments (line 2543)
    kwargs_86381 = {}
    # Getting the type of 'outmess' (line 2543)
    outmess_86369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2543, 20), 'outmess', False)
    # Calling outmess(args, kwargs) (line 2543)
    outmess_call_result_86382 = invoke(stypy.reporting.localization.Localization(__file__, 2543, 20), outmess_86369, *[result_mod_86380], **kwargs_86381)
    
    # SSA join for if statement (line 2542)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2532)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2531)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2530)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_86383 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2546, 11), 'str', 'charselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2546)
    n_86384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2546, 34), 'n')
    # Getting the type of 'vars' (line 2546)
    vars_86385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2546, 29), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2546)
    getitem___86386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2546, 29), vars_86385, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2546)
    subscript_call_result_86387 = invoke(stypy.reporting.localization.Localization(__file__, 2546, 29), getitem___86386, n_86384)
    
    # Applying the binary operator 'in' (line 2546)
    result_contains_86388 = python_operator(stypy.reporting.localization.Localization(__file__, 2546, 11), 'in', str_86383, subscript_call_result_86387)
    
    # Testing the type of an if condition (line 2546)
    if_condition_86389 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2546, 8), result_contains_86388)
    # Assigning a type to the variable 'if_condition_86389' (line 2546)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2546, 8), 'if_condition_86389', if_condition_86389)
    # SSA begins for if statement (line 2546)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    str_86390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2547, 15), 'str', 'len')
    
    # Obtaining the type of the subscript
    str_86391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2547, 32), 'str', 'charselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2547)
    n_86392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2547, 29), 'n')
    # Getting the type of 'vars' (line 2547)
    vars_86393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2547, 24), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2547)
    getitem___86394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2547, 24), vars_86393, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2547)
    subscript_call_result_86395 = invoke(stypy.reporting.localization.Localization(__file__, 2547, 24), getitem___86394, n_86392)
    
    # Obtaining the member '__getitem__' of a type (line 2547)
    getitem___86396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2547, 24), subscript_call_result_86395, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2547)
    subscript_call_result_86397 = invoke(stypy.reporting.localization.Localization(__file__, 2547, 24), getitem___86396, str_86391)
    
    # Applying the binary operator 'in' (line 2547)
    result_contains_86398 = python_operator(stypy.reporting.localization.Localization(__file__, 2547, 15), 'in', str_86390, subscript_call_result_86397)
    
    # Testing the type of an if condition (line 2547)
    if_condition_86399 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2547, 12), result_contains_86398)
    # Assigning a type to the variable 'if_condition_86399' (line 2547)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2547, 12), 'if_condition_86399', if_condition_86399)
    # SSA begins for if statement (line 2547)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2548):
    
    # Assigning a Subscript to a Name (line 2548):
    
    # Obtaining the type of the subscript
    str_86400 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2548, 44), 'str', 'len')
    
    # Obtaining the type of the subscript
    str_86401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2548, 28), 'str', 'charselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2548)
    n_86402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2548, 25), 'n')
    # Getting the type of 'vars' (line 2548)
    vars_86403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2548, 20), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2548)
    getitem___86404 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2548, 20), vars_86403, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2548)
    subscript_call_result_86405 = invoke(stypy.reporting.localization.Localization(__file__, 2548, 20), getitem___86404, n_86402)
    
    # Obtaining the member '__getitem__' of a type (line 2548)
    getitem___86406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2548, 20), subscript_call_result_86405, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2548)
    subscript_call_result_86407 = invoke(stypy.reporting.localization.Localization(__file__, 2548, 20), getitem___86406, str_86401)
    
    # Obtaining the member '__getitem__' of a type (line 2548)
    getitem___86408 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2548, 20), subscript_call_result_86407, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2548)
    subscript_call_result_86409 = invoke(stypy.reporting.localization.Localization(__file__, 2548, 20), getitem___86408, str_86400)
    
    # Assigning a type to the variable 'l' (line 2548)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2548, 16), 'l', subscript_call_result_86409)
    
    
    # SSA begins for try-except statement (line 2549)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 2550):
    
    # Assigning a Call to a Name (line 2550):
    
    # Call to str(...): (line 2550)
    # Processing the call arguments (line 2550)
    
    # Call to eval(...): (line 2550)
    # Processing the call arguments (line 2550)
    # Getting the type of 'l' (line 2550)
    l_86412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2550, 33), 'l', False)
    
    # Obtaining an instance of the builtin type 'dict' (line 2550)
    dict_86413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2550, 36), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2550)
    
    # Getting the type of 'params' (line 2550)
    params_86414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2550, 40), 'params', False)
    # Processing the call keyword arguments (line 2550)
    kwargs_86415 = {}
    # Getting the type of 'eval' (line 2550)
    eval_86411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2550, 28), 'eval', False)
    # Calling eval(args, kwargs) (line 2550)
    eval_call_result_86416 = invoke(stypy.reporting.localization.Localization(__file__, 2550, 28), eval_86411, *[l_86412, dict_86413, params_86414], **kwargs_86415)
    
    # Processing the call keyword arguments (line 2550)
    kwargs_86417 = {}
    # Getting the type of 'str' (line 2550)
    str_86410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2550, 24), 'str', False)
    # Calling str(args, kwargs) (line 2550)
    str_call_result_86418 = invoke(stypy.reporting.localization.Localization(__file__, 2550, 24), str_86410, *[eval_call_result_86416], **kwargs_86417)
    
    # Assigning a type to the variable 'l' (line 2550)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2550, 20), 'l', str_call_result_86418)
    # SSA branch for the except part of a try statement (line 2549)
    # SSA branch for the except '<any exception>' branch of a try statement (line 2549)
    module_type_store.open_ssa_branch('except')
    pass
    # SSA join for try-except statement (line 2549)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 2553):
    
    # Assigning a Name to a Subscript (line 2553):
    # Getting the type of 'l' (line 2553)
    l_86419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2553, 49), 'l')
    
    # Obtaining the type of the subscript
    str_86420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2553, 24), 'str', 'charselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2553)
    n_86421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2553, 21), 'n')
    # Getting the type of 'vars' (line 2553)
    vars_86422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2553, 16), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2553)
    getitem___86423 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2553, 16), vars_86422, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2553)
    subscript_call_result_86424 = invoke(stypy.reporting.localization.Localization(__file__, 2553, 16), getitem___86423, n_86421)
    
    # Obtaining the member '__getitem__' of a type (line 2553)
    getitem___86425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2553, 16), subscript_call_result_86424, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2553)
    subscript_call_result_86426 = invoke(stypy.reporting.localization.Localization(__file__, 2553, 16), getitem___86425, str_86420)
    
    str_86427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2553, 40), 'str', 'len')
    # Storing an element on a container (line 2553)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2553, 16), subscript_call_result_86426, (str_86427, l_86419))
    # SSA join for if statement (line 2547)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2546)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_86428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2555, 11), 'str', 'kindselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2555)
    n_86429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2555, 34), 'n')
    # Getting the type of 'vars' (line 2555)
    vars_86430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2555, 29), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2555)
    getitem___86431 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2555, 29), vars_86430, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2555)
    subscript_call_result_86432 = invoke(stypy.reporting.localization.Localization(__file__, 2555, 29), getitem___86431, n_86429)
    
    # Applying the binary operator 'in' (line 2555)
    result_contains_86433 = python_operator(stypy.reporting.localization.Localization(__file__, 2555, 11), 'in', str_86428, subscript_call_result_86432)
    
    # Testing the type of an if condition (line 2555)
    if_condition_86434 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2555, 8), result_contains_86433)
    # Assigning a type to the variable 'if_condition_86434' (line 2555)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2555, 8), 'if_condition_86434', if_condition_86434)
    # SSA begins for if statement (line 2555)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    str_86435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2556, 15), 'str', 'kind')
    
    # Obtaining the type of the subscript
    str_86436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2556, 33), 'str', 'kindselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2556)
    n_86437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2556, 30), 'n')
    # Getting the type of 'vars' (line 2556)
    vars_86438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2556, 25), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2556)
    getitem___86439 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2556, 25), vars_86438, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2556)
    subscript_call_result_86440 = invoke(stypy.reporting.localization.Localization(__file__, 2556, 25), getitem___86439, n_86437)
    
    # Obtaining the member '__getitem__' of a type (line 2556)
    getitem___86441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2556, 25), subscript_call_result_86440, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2556)
    subscript_call_result_86442 = invoke(stypy.reporting.localization.Localization(__file__, 2556, 25), getitem___86441, str_86436)
    
    # Applying the binary operator 'in' (line 2556)
    result_contains_86443 = python_operator(stypy.reporting.localization.Localization(__file__, 2556, 15), 'in', str_86435, subscript_call_result_86442)
    
    # Testing the type of an if condition (line 2556)
    if_condition_86444 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2556, 12), result_contains_86443)
    # Assigning a type to the variable 'if_condition_86444' (line 2556)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2556, 12), 'if_condition_86444', if_condition_86444)
    # SSA begins for if statement (line 2556)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2557):
    
    # Assigning a Subscript to a Name (line 2557):
    
    # Obtaining the type of the subscript
    str_86445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2557, 44), 'str', 'kind')
    
    # Obtaining the type of the subscript
    str_86446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2557, 28), 'str', 'kindselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2557)
    n_86447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2557, 25), 'n')
    # Getting the type of 'vars' (line 2557)
    vars_86448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2557, 20), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2557)
    getitem___86449 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2557, 20), vars_86448, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2557)
    subscript_call_result_86450 = invoke(stypy.reporting.localization.Localization(__file__, 2557, 20), getitem___86449, n_86447)
    
    # Obtaining the member '__getitem__' of a type (line 2557)
    getitem___86451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2557, 20), subscript_call_result_86450, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2557)
    subscript_call_result_86452 = invoke(stypy.reporting.localization.Localization(__file__, 2557, 20), getitem___86451, str_86446)
    
    # Obtaining the member '__getitem__' of a type (line 2557)
    getitem___86453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2557, 20), subscript_call_result_86452, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2557)
    subscript_call_result_86454 = invoke(stypy.reporting.localization.Localization(__file__, 2557, 20), getitem___86453, str_86445)
    
    # Assigning a type to the variable 'l' (line 2557)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2557, 16), 'l', subscript_call_result_86454)
    
    
    # SSA begins for try-except statement (line 2558)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 2559):
    
    # Assigning a Call to a Name (line 2559):
    
    # Call to str(...): (line 2559)
    # Processing the call arguments (line 2559)
    
    # Call to eval(...): (line 2559)
    # Processing the call arguments (line 2559)
    # Getting the type of 'l' (line 2559)
    l_86457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2559, 33), 'l', False)
    
    # Obtaining an instance of the builtin type 'dict' (line 2559)
    dict_86458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2559, 36), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2559)
    
    # Getting the type of 'params' (line 2559)
    params_86459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2559, 40), 'params', False)
    # Processing the call keyword arguments (line 2559)
    kwargs_86460 = {}
    # Getting the type of 'eval' (line 2559)
    eval_86456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2559, 28), 'eval', False)
    # Calling eval(args, kwargs) (line 2559)
    eval_call_result_86461 = invoke(stypy.reporting.localization.Localization(__file__, 2559, 28), eval_86456, *[l_86457, dict_86458, params_86459], **kwargs_86460)
    
    # Processing the call keyword arguments (line 2559)
    kwargs_86462 = {}
    # Getting the type of 'str' (line 2559)
    str_86455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2559, 24), 'str', False)
    # Calling str(args, kwargs) (line 2559)
    str_call_result_86463 = invoke(stypy.reporting.localization.Localization(__file__, 2559, 24), str_86455, *[eval_call_result_86461], **kwargs_86462)
    
    # Assigning a type to the variable 'l' (line 2559)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2559, 20), 'l', str_call_result_86463)
    # SSA branch for the except part of a try statement (line 2558)
    # SSA branch for the except '<any exception>' branch of a try statement (line 2558)
    module_type_store.open_ssa_branch('except')
    pass
    # SSA join for try-except statement (line 2558)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 2562):
    
    # Assigning a Name to a Subscript (line 2562):
    # Getting the type of 'l' (line 2562)
    l_86464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2562, 50), 'l')
    
    # Obtaining the type of the subscript
    str_86465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2562, 24), 'str', 'kindselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2562)
    n_86466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2562, 21), 'n')
    # Getting the type of 'vars' (line 2562)
    vars_86467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2562, 16), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2562)
    getitem___86468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2562, 16), vars_86467, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2562)
    subscript_call_result_86469 = invoke(stypy.reporting.localization.Localization(__file__, 2562, 16), getitem___86468, n_86466)
    
    # Obtaining the member '__getitem__' of a type (line 2562)
    getitem___86470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2562, 16), subscript_call_result_86469, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2562)
    subscript_call_result_86471 = invoke(stypy.reporting.localization.Localization(__file__, 2562, 16), getitem___86470, str_86465)
    
    str_86472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2562, 40), 'str', 'kind')
    # Storing an element on a container (line 2562)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2562, 16), subscript_call_result_86471, (str_86472, l_86464))
    # SSA join for if statement (line 2556)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2555)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Dict to a Name (line 2564):
    
    # Assigning a Dict to a Name (line 2564):
    
    # Obtaining an instance of the builtin type 'dict' (line 2564)
    dict_86473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2564, 22), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2564)
    
    # Assigning a type to the variable 'savelindims' (line 2564)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2564, 8), 'savelindims', dict_86473)
    
    
    str_86474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2565, 11), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2565)
    n_86475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2565, 30), 'n')
    # Getting the type of 'vars' (line 2565)
    vars_86476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2565, 25), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2565)
    getitem___86477 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2565, 25), vars_86476, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2565)
    subscript_call_result_86478 = invoke(stypy.reporting.localization.Localization(__file__, 2565, 25), getitem___86477, n_86475)
    
    # Applying the binary operator 'in' (line 2565)
    result_contains_86479 = python_operator(stypy.reporting.localization.Localization(__file__, 2565, 11), 'in', str_86474, subscript_call_result_86478)
    
    # Testing the type of an if condition (line 2565)
    if_condition_86480 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2565, 8), result_contains_86479)
    # Assigning a type to the variable 'if_condition_86480' (line 2565)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2565, 8), 'if_condition_86480', if_condition_86480)
    # SSA begins for if statement (line 2565)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2566):
    
    # Assigning a Subscript to a Name (line 2566):
    
    # Obtaining the type of the subscript
    str_86481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2566, 27), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2566)
    n_86482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2566, 24), 'n')
    # Getting the type of 'vars' (line 2566)
    vars_86483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2566, 19), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2566)
    getitem___86484 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2566, 19), vars_86483, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2566)
    subscript_call_result_86485 = invoke(stypy.reporting.localization.Localization(__file__, 2566, 19), getitem___86484, n_86482)
    
    # Obtaining the member '__getitem__' of a type (line 2566)
    getitem___86486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2566, 19), subscript_call_result_86485, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2566)
    subscript_call_result_86487 = invoke(stypy.reporting.localization.Localization(__file__, 2566, 19), getitem___86486, str_86481)
    
    # Assigning a type to the variable 'attr' (line 2566)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2566, 12), 'attr', subscript_call_result_86487)
    
    # Call to reverse(...): (line 2567)
    # Processing the call keyword arguments (line 2567)
    kwargs_86490 = {}
    # Getting the type of 'attr' (line 2567)
    attr_86488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2567, 12), 'attr', False)
    # Obtaining the member 'reverse' of a type (line 2567)
    reverse_86489 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2567, 12), attr_86488, 'reverse')
    # Calling reverse(args, kwargs) (line 2567)
    reverse_call_result_86491 = invoke(stypy.reporting.localization.Localization(__file__, 2567, 12), reverse_86489, *[], **kwargs_86490)
    
    
    # Assigning a List to a Subscript (line 2568):
    
    # Assigning a List to a Subscript (line 2568):
    
    # Obtaining an instance of the builtin type 'list' (line 2568)
    list_86492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2568, 34), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2568)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2568)
    n_86493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2568, 17), 'n')
    # Getting the type of 'vars' (line 2568)
    vars_86494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2568, 12), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2568)
    getitem___86495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2568, 12), vars_86494, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2568)
    subscript_call_result_86496 = invoke(stypy.reporting.localization.Localization(__file__, 2568, 12), getitem___86495, n_86493)
    
    str_86497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2568, 20), 'str', 'attrspec')
    # Storing an element on a container (line 2568)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2568, 12), subscript_call_result_86496, (str_86497, list_86492))
    
    # Assigning a Tuple to a Tuple (line 2569):
    
    # Assigning a Name to a Name (line 2569):
    # Getting the type of 'None' (line 2569)
    None_86498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2569, 47), 'None')
    # Assigning a type to the variable 'tuple_assignment_75812' (line 2569)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2569, 12), 'tuple_assignment_75812', None_86498)
    
    # Assigning a Name to a Name (line 2569):
    # Getting the type of 'None' (line 2569)
    None_86499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2569, 53), 'None')
    # Assigning a type to the variable 'tuple_assignment_75813' (line 2569)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2569, 12), 'tuple_assignment_75813', None_86499)
    
    # Assigning a Name to a Name (line 2569):
    # Getting the type of 'None' (line 2569)
    None_86500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2569, 59), 'None')
    # Assigning a type to the variable 'tuple_assignment_75814' (line 2569)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2569, 12), 'tuple_assignment_75814', None_86500)
    
    # Assigning a Name to a Name (line 2569):
    # Getting the type of 'None' (line 2569)
    None_86501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2569, 65), 'None')
    # Assigning a type to the variable 'tuple_assignment_75815' (line 2569)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2569, 12), 'tuple_assignment_75815', None_86501)
    
    # Assigning a Name to a Name (line 2569):
    # Getting the type of 'None' (line 2569)
    None_86502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2569, 71), 'None')
    # Assigning a type to the variable 'tuple_assignment_75816' (line 2569)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2569, 12), 'tuple_assignment_75816', None_86502)
    
    # Assigning a Name to a Name (line 2569):
    # Getting the type of 'tuple_assignment_75812' (line 2569)
    tuple_assignment_75812_86503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2569, 12), 'tuple_assignment_75812')
    # Assigning a type to the variable 'dim' (line 2569)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2569, 12), 'dim', tuple_assignment_75812_86503)
    
    # Assigning a Name to a Name (line 2569):
    # Getting the type of 'tuple_assignment_75813' (line 2569)
    tuple_assignment_75813_86504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2569, 12), 'tuple_assignment_75813')
    # Assigning a type to the variable 'intent' (line 2569)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2569, 17), 'intent', tuple_assignment_75813_86504)
    
    # Assigning a Name to a Name (line 2569):
    # Getting the type of 'tuple_assignment_75814' (line 2569)
    tuple_assignment_75814_86505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2569, 12), 'tuple_assignment_75814')
    # Assigning a type to the variable 'depend' (line 2569)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2569, 25), 'depend', tuple_assignment_75814_86505)
    
    # Assigning a Name to a Name (line 2569):
    # Getting the type of 'tuple_assignment_75815' (line 2569)
    tuple_assignment_75815_86506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2569, 12), 'tuple_assignment_75815')
    # Assigning a type to the variable 'check' (line 2569)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2569, 33), 'check', tuple_assignment_75815_86506)
    
    # Assigning a Name to a Name (line 2569):
    # Getting the type of 'tuple_assignment_75816' (line 2569)
    tuple_assignment_75816_86507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2569, 12), 'tuple_assignment_75816')
    # Assigning a type to the variable 'note' (line 2569)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2569, 40), 'note', tuple_assignment_75816_86507)
    
    # Getting the type of 'attr' (line 2570)
    attr_86508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2570, 21), 'attr')
    # Testing the type of a for loop iterable (line 2570)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2570, 12), attr_86508)
    # Getting the type of the for loop variable (line 2570)
    for_loop_var_86509 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2570, 12), attr_86508)
    # Assigning a type to the variable 'a' (line 2570)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2570, 12), 'a', for_loop_var_86509)
    # SSA begins for a for statement (line 2570)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Obtaining the type of the subscript
    int_86510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2571, 22), 'int')
    slice_86511 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2571, 19), None, int_86510, None)
    # Getting the type of 'a' (line 2571)
    a_86512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2571, 19), 'a')
    # Obtaining the member '__getitem__' of a type (line 2571)
    getitem___86513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2571, 19), a_86512, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2571)
    subscript_call_result_86514 = invoke(stypy.reporting.localization.Localization(__file__, 2571, 19), getitem___86513, slice_86511)
    
    str_86515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2571, 28), 'str', 'dimension')
    # Applying the binary operator '==' (line 2571)
    result_eq_86516 = python_operator(stypy.reporting.localization.Localization(__file__, 2571, 19), '==', subscript_call_result_86514, str_86515)
    
    # Testing the type of an if condition (line 2571)
    if_condition_86517 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2571, 16), result_eq_86516)
    # Assigning a type to the variable 'if_condition_86517' (line 2571)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2571, 16), 'if_condition_86517', if_condition_86517)
    # SSA begins for if statement (line 2571)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2572):
    
    # Assigning a Subscript to a Name (line 2572):
    
    # Obtaining the type of the subscript
    int_86518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2572, 42), 'int')
    int_86519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2572, 44), 'int')
    slice_86520 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2572, 27), int_86518, int_86519, None)
    
    # Call to strip(...): (line 2572)
    # Processing the call keyword arguments (line 2572)
    kwargs_86527 = {}
    
    # Obtaining the type of the subscript
    int_86521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2572, 29), 'int')
    slice_86522 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2572, 27), int_86521, None, None)
    # Getting the type of 'a' (line 2572)
    a_86523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2572, 27), 'a', False)
    # Obtaining the member '__getitem__' of a type (line 2572)
    getitem___86524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2572, 27), a_86523, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2572)
    subscript_call_result_86525 = invoke(stypy.reporting.localization.Localization(__file__, 2572, 27), getitem___86524, slice_86522)
    
    # Obtaining the member 'strip' of a type (line 2572)
    strip_86526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2572, 27), subscript_call_result_86525, 'strip')
    # Calling strip(args, kwargs) (line 2572)
    strip_call_result_86528 = invoke(stypy.reporting.localization.Localization(__file__, 2572, 27), strip_86526, *[], **kwargs_86527)
    
    # Obtaining the member '__getitem__' of a type (line 2572)
    getitem___86529 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2572, 27), strip_call_result_86528, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2572)
    subscript_call_result_86530 = invoke(stypy.reporting.localization.Localization(__file__, 2572, 27), getitem___86529, slice_86520)
    
    # Assigning a type to the variable 'dim' (line 2572)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2572, 20), 'dim', subscript_call_result_86530)
    # SSA branch for the else part of an if statement (line 2571)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    int_86531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2573, 24), 'int')
    slice_86532 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2573, 21), None, int_86531, None)
    # Getting the type of 'a' (line 2573)
    a_86533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2573, 21), 'a')
    # Obtaining the member '__getitem__' of a type (line 2573)
    getitem___86534 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2573, 21), a_86533, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2573)
    subscript_call_result_86535 = invoke(stypy.reporting.localization.Localization(__file__, 2573, 21), getitem___86534, slice_86532)
    
    str_86536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2573, 30), 'str', 'intent')
    # Applying the binary operator '==' (line 2573)
    result_eq_86537 = python_operator(stypy.reporting.localization.Localization(__file__, 2573, 21), '==', subscript_call_result_86535, str_86536)
    
    # Testing the type of an if condition (line 2573)
    if_condition_86538 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2573, 21), result_eq_86537)
    # Assigning a type to the variable 'if_condition_86538' (line 2573)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2573, 21), 'if_condition_86538', if_condition_86538)
    # SSA begins for if statement (line 2573)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2574):
    
    # Assigning a Subscript to a Name (line 2574):
    
    # Obtaining the type of the subscript
    int_86539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2574, 45), 'int')
    int_86540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2574, 47), 'int')
    slice_86541 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2574, 30), int_86539, int_86540, None)
    
    # Call to strip(...): (line 2574)
    # Processing the call keyword arguments (line 2574)
    kwargs_86548 = {}
    
    # Obtaining the type of the subscript
    int_86542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2574, 32), 'int')
    slice_86543 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2574, 30), int_86542, None, None)
    # Getting the type of 'a' (line 2574)
    a_86544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2574, 30), 'a', False)
    # Obtaining the member '__getitem__' of a type (line 2574)
    getitem___86545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2574, 30), a_86544, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2574)
    subscript_call_result_86546 = invoke(stypy.reporting.localization.Localization(__file__, 2574, 30), getitem___86545, slice_86543)
    
    # Obtaining the member 'strip' of a type (line 2574)
    strip_86547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2574, 30), subscript_call_result_86546, 'strip')
    # Calling strip(args, kwargs) (line 2574)
    strip_call_result_86549 = invoke(stypy.reporting.localization.Localization(__file__, 2574, 30), strip_86547, *[], **kwargs_86548)
    
    # Obtaining the member '__getitem__' of a type (line 2574)
    getitem___86550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2574, 30), strip_call_result_86549, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2574)
    subscript_call_result_86551 = invoke(stypy.reporting.localization.Localization(__file__, 2574, 30), getitem___86550, slice_86541)
    
    # Assigning a type to the variable 'intent' (line 2574)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2574, 20), 'intent', subscript_call_result_86551)
    # SSA branch for the else part of an if statement (line 2573)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    int_86552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2575, 24), 'int')
    slice_86553 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2575, 21), None, int_86552, None)
    # Getting the type of 'a' (line 2575)
    a_86554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2575, 21), 'a')
    # Obtaining the member '__getitem__' of a type (line 2575)
    getitem___86555 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2575, 21), a_86554, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2575)
    subscript_call_result_86556 = invoke(stypy.reporting.localization.Localization(__file__, 2575, 21), getitem___86555, slice_86553)
    
    str_86557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2575, 30), 'str', 'depend')
    # Applying the binary operator '==' (line 2575)
    result_eq_86558 = python_operator(stypy.reporting.localization.Localization(__file__, 2575, 21), '==', subscript_call_result_86556, str_86557)
    
    # Testing the type of an if condition (line 2575)
    if_condition_86559 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2575, 21), result_eq_86558)
    # Assigning a type to the variable 'if_condition_86559' (line 2575)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2575, 21), 'if_condition_86559', if_condition_86559)
    # SSA begins for if statement (line 2575)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2576):
    
    # Assigning a Subscript to a Name (line 2576):
    
    # Obtaining the type of the subscript
    int_86560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2576, 45), 'int')
    int_86561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2576, 47), 'int')
    slice_86562 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2576, 30), int_86560, int_86561, None)
    
    # Call to strip(...): (line 2576)
    # Processing the call keyword arguments (line 2576)
    kwargs_86569 = {}
    
    # Obtaining the type of the subscript
    int_86563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2576, 32), 'int')
    slice_86564 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2576, 30), int_86563, None, None)
    # Getting the type of 'a' (line 2576)
    a_86565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2576, 30), 'a', False)
    # Obtaining the member '__getitem__' of a type (line 2576)
    getitem___86566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2576, 30), a_86565, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2576)
    subscript_call_result_86567 = invoke(stypy.reporting.localization.Localization(__file__, 2576, 30), getitem___86566, slice_86564)
    
    # Obtaining the member 'strip' of a type (line 2576)
    strip_86568 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2576, 30), subscript_call_result_86567, 'strip')
    # Calling strip(args, kwargs) (line 2576)
    strip_call_result_86570 = invoke(stypy.reporting.localization.Localization(__file__, 2576, 30), strip_86568, *[], **kwargs_86569)
    
    # Obtaining the member '__getitem__' of a type (line 2576)
    getitem___86571 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2576, 30), strip_call_result_86570, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2576)
    subscript_call_result_86572 = invoke(stypy.reporting.localization.Localization(__file__, 2576, 30), getitem___86571, slice_86562)
    
    # Assigning a type to the variable 'depend' (line 2576)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2576, 20), 'depend', subscript_call_result_86572)
    # SSA branch for the else part of an if statement (line 2575)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    int_86573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2577, 24), 'int')
    slice_86574 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2577, 21), None, int_86573, None)
    # Getting the type of 'a' (line 2577)
    a_86575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2577, 21), 'a')
    # Obtaining the member '__getitem__' of a type (line 2577)
    getitem___86576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2577, 21), a_86575, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2577)
    subscript_call_result_86577 = invoke(stypy.reporting.localization.Localization(__file__, 2577, 21), getitem___86576, slice_86574)
    
    str_86578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2577, 30), 'str', 'check')
    # Applying the binary operator '==' (line 2577)
    result_eq_86579 = python_operator(stypy.reporting.localization.Localization(__file__, 2577, 21), '==', subscript_call_result_86577, str_86578)
    
    # Testing the type of an if condition (line 2577)
    if_condition_86580 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2577, 21), result_eq_86579)
    # Assigning a type to the variable 'if_condition_86580' (line 2577)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2577, 21), 'if_condition_86580', if_condition_86580)
    # SSA begins for if statement (line 2577)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2578):
    
    # Assigning a Subscript to a Name (line 2578):
    
    # Obtaining the type of the subscript
    int_86581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2578, 44), 'int')
    int_86582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2578, 46), 'int')
    slice_86583 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2578, 29), int_86581, int_86582, None)
    
    # Call to strip(...): (line 2578)
    # Processing the call keyword arguments (line 2578)
    kwargs_86590 = {}
    
    # Obtaining the type of the subscript
    int_86584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2578, 31), 'int')
    slice_86585 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2578, 29), int_86584, None, None)
    # Getting the type of 'a' (line 2578)
    a_86586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2578, 29), 'a', False)
    # Obtaining the member '__getitem__' of a type (line 2578)
    getitem___86587 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2578, 29), a_86586, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2578)
    subscript_call_result_86588 = invoke(stypy.reporting.localization.Localization(__file__, 2578, 29), getitem___86587, slice_86585)
    
    # Obtaining the member 'strip' of a type (line 2578)
    strip_86589 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2578, 29), subscript_call_result_86588, 'strip')
    # Calling strip(args, kwargs) (line 2578)
    strip_call_result_86591 = invoke(stypy.reporting.localization.Localization(__file__, 2578, 29), strip_86589, *[], **kwargs_86590)
    
    # Obtaining the member '__getitem__' of a type (line 2578)
    getitem___86592 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2578, 29), strip_call_result_86591, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2578)
    subscript_call_result_86593 = invoke(stypy.reporting.localization.Localization(__file__, 2578, 29), getitem___86592, slice_86583)
    
    # Assigning a type to the variable 'check' (line 2578)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2578, 20), 'check', subscript_call_result_86593)
    # SSA branch for the else part of an if statement (line 2577)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    int_86594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2579, 24), 'int')
    slice_86595 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2579, 21), None, int_86594, None)
    # Getting the type of 'a' (line 2579)
    a_86596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2579, 21), 'a')
    # Obtaining the member '__getitem__' of a type (line 2579)
    getitem___86597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2579, 21), a_86596, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2579)
    subscript_call_result_86598 = invoke(stypy.reporting.localization.Localization(__file__, 2579, 21), getitem___86597, slice_86595)
    
    str_86599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2579, 30), 'str', 'note')
    # Applying the binary operator '==' (line 2579)
    result_eq_86600 = python_operator(stypy.reporting.localization.Localization(__file__, 2579, 21), '==', subscript_call_result_86598, str_86599)
    
    # Testing the type of an if condition (line 2579)
    if_condition_86601 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2579, 21), result_eq_86600)
    # Assigning a type to the variable 'if_condition_86601' (line 2579)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2579, 21), 'if_condition_86601', if_condition_86601)
    # SSA begins for if statement (line 2579)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2580):
    
    # Assigning a Subscript to a Name (line 2580):
    
    # Obtaining the type of the subscript
    int_86602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2580, 43), 'int')
    int_86603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2580, 45), 'int')
    slice_86604 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2580, 28), int_86602, int_86603, None)
    
    # Call to strip(...): (line 2580)
    # Processing the call keyword arguments (line 2580)
    kwargs_86611 = {}
    
    # Obtaining the type of the subscript
    int_86605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2580, 30), 'int')
    slice_86606 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2580, 28), int_86605, None, None)
    # Getting the type of 'a' (line 2580)
    a_86607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2580, 28), 'a', False)
    # Obtaining the member '__getitem__' of a type (line 2580)
    getitem___86608 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2580, 28), a_86607, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2580)
    subscript_call_result_86609 = invoke(stypy.reporting.localization.Localization(__file__, 2580, 28), getitem___86608, slice_86606)
    
    # Obtaining the member 'strip' of a type (line 2580)
    strip_86610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2580, 28), subscript_call_result_86609, 'strip')
    # Calling strip(args, kwargs) (line 2580)
    strip_call_result_86612 = invoke(stypy.reporting.localization.Localization(__file__, 2580, 28), strip_86610, *[], **kwargs_86611)
    
    # Obtaining the member '__getitem__' of a type (line 2580)
    getitem___86613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2580, 28), strip_call_result_86612, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2580)
    subscript_call_result_86614 = invoke(stypy.reporting.localization.Localization(__file__, 2580, 28), getitem___86613, slice_86604)
    
    # Assigning a type to the variable 'note' (line 2580)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2580, 20), 'note', subscript_call_result_86614)
    # SSA branch for the else part of an if statement (line 2579)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Subscript (line 2582):
    
    # Assigning a Call to a Subscript (line 2582):
    
    # Call to setattrspec(...): (line 2582)
    # Processing the call arguments (line 2582)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2582)
    n_86616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2582, 47), 'n', False)
    # Getting the type of 'vars' (line 2582)
    vars_86617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2582, 42), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2582)
    getitem___86618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2582, 42), vars_86617, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2582)
    subscript_call_result_86619 = invoke(stypy.reporting.localization.Localization(__file__, 2582, 42), getitem___86618, n_86616)
    
    # Getting the type of 'a' (line 2582)
    a_86620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2582, 51), 'a', False)
    # Processing the call keyword arguments (line 2582)
    kwargs_86621 = {}
    # Getting the type of 'setattrspec' (line 2582)
    setattrspec_86615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2582, 30), 'setattrspec', False)
    # Calling setattrspec(args, kwargs) (line 2582)
    setattrspec_call_result_86622 = invoke(stypy.reporting.localization.Localization(__file__, 2582, 30), setattrspec_86615, *[subscript_call_result_86619, a_86620], **kwargs_86621)
    
    # Getting the type of 'vars' (line 2582)
    vars_86623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2582, 20), 'vars')
    # Getting the type of 'n' (line 2582)
    n_86624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2582, 25), 'n')
    # Storing an element on a container (line 2582)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2582, 20), vars_86623, (n_86624, setattrspec_call_result_86622))
    # SSA join for if statement (line 2579)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2577)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2575)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2573)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2571)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'intent' (line 2583)
    intent_86625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2583, 19), 'intent')
    # Testing the type of an if condition (line 2583)
    if_condition_86626 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2583, 16), intent_86625)
    # Assigning a type to the variable 'if_condition_86626' (line 2583)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2583, 16), 'if_condition_86626', if_condition_86626)
    # SSA begins for if statement (line 2583)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    str_86627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2584, 23), 'str', 'intent')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2584)
    n_86628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2584, 44), 'n')
    # Getting the type of 'vars' (line 2584)
    vars_86629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2584, 39), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2584)
    getitem___86630 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2584, 39), vars_86629, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2584)
    subscript_call_result_86631 = invoke(stypy.reporting.localization.Localization(__file__, 2584, 39), getitem___86630, n_86628)
    
    # Applying the binary operator 'notin' (line 2584)
    result_contains_86632 = python_operator(stypy.reporting.localization.Localization(__file__, 2584, 23), 'notin', str_86627, subscript_call_result_86631)
    
    # Testing the type of an if condition (line 2584)
    if_condition_86633 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2584, 20), result_contains_86632)
    # Assigning a type to the variable 'if_condition_86633' (line 2584)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2584, 20), 'if_condition_86633', if_condition_86633)
    # SSA begins for if statement (line 2584)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Subscript (line 2585):
    
    # Assigning a List to a Subscript (line 2585):
    
    # Obtaining an instance of the builtin type 'list' (line 2585)
    list_86634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2585, 44), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2585)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2585)
    n_86635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2585, 29), 'n')
    # Getting the type of 'vars' (line 2585)
    vars_86636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2585, 24), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2585)
    getitem___86637 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2585, 24), vars_86636, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2585)
    subscript_call_result_86638 = invoke(stypy.reporting.localization.Localization(__file__, 2585, 24), getitem___86637, n_86635)
    
    str_86639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2585, 32), 'str', 'intent')
    # Storing an element on a container (line 2585)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2585, 24), subscript_call_result_86638, (str_86639, list_86634))
    # SSA join for if statement (line 2584)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to split(...): (line 2586)
    # Processing the call arguments (line 2586)
    str_86649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2586, 78), 'str', '@,@')
    # Processing the call keyword arguments (line 2586)
    kwargs_86650 = {}
    
    # Call to markoutercomma(...): (line 2586)
    # Processing the call arguments (line 2586)
    # Getting the type of 'intent' (line 2586)
    intent_86645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2586, 64), 'intent', False)
    # Processing the call keyword arguments (line 2586)
    kwargs_86646 = {}
    # Getting the type of 'markoutercomma' (line 2586)
    markoutercomma_86644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2586, 49), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 2586)
    markoutercomma_call_result_86647 = invoke(stypy.reporting.localization.Localization(__file__, 2586, 49), markoutercomma_86644, *[intent_86645], **kwargs_86646)
    
    # Obtaining the member 'split' of a type (line 2586)
    split_86648 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2586, 49), markoutercomma_call_result_86647, 'split')
    # Calling split(args, kwargs) (line 2586)
    split_call_result_86651 = invoke(stypy.reporting.localization.Localization(__file__, 2586, 49), split_86648, *[str_86649], **kwargs_86650)
    
    comprehension_86652 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2586, 30), split_call_result_86651)
    # Assigning a type to the variable 'x' (line 2586)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2586, 30), 'x', comprehension_86652)
    
    # Call to strip(...): (line 2586)
    # Processing the call keyword arguments (line 2586)
    kwargs_86642 = {}
    # Getting the type of 'x' (line 2586)
    x_86640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2586, 30), 'x', False)
    # Obtaining the member 'strip' of a type (line 2586)
    strip_86641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2586, 30), x_86640, 'strip')
    # Calling strip(args, kwargs) (line 2586)
    strip_call_result_86643 = invoke(stypy.reporting.localization.Localization(__file__, 2586, 30), strip_86641, *[], **kwargs_86642)
    
    list_86653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2586, 30), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2586, 30), list_86653, strip_call_result_86643)
    # Testing the type of a for loop iterable (line 2586)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2586, 20), list_86653)
    # Getting the type of the for loop variable (line 2586)
    for_loop_var_86654 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2586, 20), list_86653)
    # Assigning a type to the variable 'c' (line 2586)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2586, 20), 'c', for_loop_var_86654)
    # SSA begins for a for statement (line 2586)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 2588):
    
    # Assigning a Call to a Name (line 2588):
    
    # Call to replace(...): (line 2588)
    # Processing the call arguments (line 2588)
    str_86657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2588, 40), 'str', ' ')
    str_86658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2588, 45), 'str', '')
    # Processing the call keyword arguments (line 2588)
    kwargs_86659 = {}
    # Getting the type of 'c' (line 2588)
    c_86655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2588, 30), 'c', False)
    # Obtaining the member 'replace' of a type (line 2588)
    replace_86656 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2588, 30), c_86655, 'replace')
    # Calling replace(args, kwargs) (line 2588)
    replace_call_result_86660 = invoke(stypy.reporting.localization.Localization(__file__, 2588, 30), replace_86656, *[str_86657, str_86658], **kwargs_86659)
    
    # Assigning a type to the variable 'tmp' (line 2588)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2588, 24), 'tmp', replace_call_result_86660)
    
    
    # Getting the type of 'tmp' (line 2589)
    tmp_86661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2589, 27), 'tmp')
    
    # Obtaining the type of the subscript
    str_86662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2589, 46), 'str', 'intent')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2589)
    n_86663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2589, 43), 'n')
    # Getting the type of 'vars' (line 2589)
    vars_86664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2589, 38), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2589)
    getitem___86665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2589, 38), vars_86664, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2589)
    subscript_call_result_86666 = invoke(stypy.reporting.localization.Localization(__file__, 2589, 38), getitem___86665, n_86663)
    
    # Obtaining the member '__getitem__' of a type (line 2589)
    getitem___86667 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2589, 38), subscript_call_result_86666, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2589)
    subscript_call_result_86668 = invoke(stypy.reporting.localization.Localization(__file__, 2589, 38), getitem___86667, str_86662)
    
    # Applying the binary operator 'notin' (line 2589)
    result_contains_86669 = python_operator(stypy.reporting.localization.Localization(__file__, 2589, 27), 'notin', tmp_86661, subscript_call_result_86668)
    
    # Testing the type of an if condition (line 2589)
    if_condition_86670 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2589, 24), result_contains_86669)
    # Assigning a type to the variable 'if_condition_86670' (line 2589)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2589, 24), 'if_condition_86670', if_condition_86670)
    # SSA begins for if statement (line 2589)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2590)
    # Processing the call arguments (line 2590)
    # Getting the type of 'tmp' (line 2590)
    tmp_86679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2590, 53), 'tmp', False)
    # Processing the call keyword arguments (line 2590)
    kwargs_86680 = {}
    
    # Obtaining the type of the subscript
    str_86671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2590, 36), 'str', 'intent')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2590)
    n_86672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2590, 33), 'n', False)
    # Getting the type of 'vars' (line 2590)
    vars_86673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2590, 28), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2590)
    getitem___86674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2590, 28), vars_86673, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2590)
    subscript_call_result_86675 = invoke(stypy.reporting.localization.Localization(__file__, 2590, 28), getitem___86674, n_86672)
    
    # Obtaining the member '__getitem__' of a type (line 2590)
    getitem___86676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2590, 28), subscript_call_result_86675, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2590)
    subscript_call_result_86677 = invoke(stypy.reporting.localization.Localization(__file__, 2590, 28), getitem___86676, str_86671)
    
    # Obtaining the member 'append' of a type (line 2590)
    append_86678 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2590, 28), subscript_call_result_86677, 'append')
    # Calling append(args, kwargs) (line 2590)
    append_call_result_86681 = invoke(stypy.reporting.localization.Localization(__file__, 2590, 28), append_86678, *[tmp_86679], **kwargs_86680)
    
    # SSA join for if statement (line 2589)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 2591):
    
    # Assigning a Name to a Name (line 2591):
    # Getting the type of 'None' (line 2591)
    None_86682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2591, 29), 'None')
    # Assigning a type to the variable 'intent' (line 2591)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2591, 20), 'intent', None_86682)
    # SSA join for if statement (line 2583)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'note' (line 2592)
    note_86683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2592, 19), 'note')
    # Testing the type of an if condition (line 2592)
    if_condition_86684 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2592, 16), note_86683)
    # Assigning a type to the variable 'if_condition_86684' (line 2592)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2592, 16), 'if_condition_86684', if_condition_86684)
    # SSA begins for if statement (line 2592)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2593):
    
    # Assigning a Call to a Name (line 2593):
    
    # Call to replace(...): (line 2593)
    # Processing the call arguments (line 2593)
    str_86687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2593, 40), 'str', '\\n\\n')
    str_86688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2593, 50), 'str', '\n\n')
    # Processing the call keyword arguments (line 2593)
    kwargs_86689 = {}
    # Getting the type of 'note' (line 2593)
    note_86685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2593, 27), 'note', False)
    # Obtaining the member 'replace' of a type (line 2593)
    replace_86686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2593, 27), note_86685, 'replace')
    # Calling replace(args, kwargs) (line 2593)
    replace_call_result_86690 = invoke(stypy.reporting.localization.Localization(__file__, 2593, 27), replace_86686, *[str_86687, str_86688], **kwargs_86689)
    
    # Assigning a type to the variable 'note' (line 2593)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2593, 20), 'note', replace_call_result_86690)
    
    # Assigning a Call to a Name (line 2594):
    
    # Assigning a Call to a Name (line 2594):
    
    # Call to replace(...): (line 2594)
    # Processing the call arguments (line 2594)
    str_86693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2594, 40), 'str', '\\n ')
    str_86694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2594, 48), 'str', '\n')
    # Processing the call keyword arguments (line 2594)
    kwargs_86695 = {}
    # Getting the type of 'note' (line 2594)
    note_86691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2594, 27), 'note', False)
    # Obtaining the member 'replace' of a type (line 2594)
    replace_86692 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2594, 27), note_86691, 'replace')
    # Calling replace(args, kwargs) (line 2594)
    replace_call_result_86696 = invoke(stypy.reporting.localization.Localization(__file__, 2594, 27), replace_86692, *[str_86693, str_86694], **kwargs_86695)
    
    # Assigning a type to the variable 'note' (line 2594)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2594, 20), 'note', replace_call_result_86696)
    
    
    str_86697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2595, 23), 'str', 'note')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2595)
    n_86698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2595, 42), 'n')
    # Getting the type of 'vars' (line 2595)
    vars_86699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2595, 37), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2595)
    getitem___86700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2595, 37), vars_86699, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2595)
    subscript_call_result_86701 = invoke(stypy.reporting.localization.Localization(__file__, 2595, 37), getitem___86700, n_86698)
    
    # Applying the binary operator 'notin' (line 2595)
    result_contains_86702 = python_operator(stypy.reporting.localization.Localization(__file__, 2595, 23), 'notin', str_86697, subscript_call_result_86701)
    
    # Testing the type of an if condition (line 2595)
    if_condition_86703 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2595, 20), result_contains_86702)
    # Assigning a type to the variable 'if_condition_86703' (line 2595)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2595, 20), 'if_condition_86703', if_condition_86703)
    # SSA begins for if statement (line 2595)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Subscript (line 2596):
    
    # Assigning a List to a Subscript (line 2596):
    
    # Obtaining an instance of the builtin type 'list' (line 2596)
    list_86704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2596, 42), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2596)
    # Adding element type (line 2596)
    # Getting the type of 'note' (line 2596)
    note_86705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2596, 43), 'note')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2596, 42), list_86704, note_86705)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2596)
    n_86706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2596, 29), 'n')
    # Getting the type of 'vars' (line 2596)
    vars_86707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2596, 24), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2596)
    getitem___86708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2596, 24), vars_86707, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2596)
    subscript_call_result_86709 = invoke(stypy.reporting.localization.Localization(__file__, 2596, 24), getitem___86708, n_86706)
    
    str_86710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2596, 32), 'str', 'note')
    # Storing an element on a container (line 2596)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2596, 24), subscript_call_result_86709, (str_86710, list_86704))
    # SSA branch for the else part of an if statement (line 2595)
    module_type_store.open_ssa_branch('else')
    
    # Call to append(...): (line 2598)
    # Processing the call arguments (line 2598)
    # Getting the type of 'note' (line 2598)
    note_86719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2598, 47), 'note', False)
    # Processing the call keyword arguments (line 2598)
    kwargs_86720 = {}
    
    # Obtaining the type of the subscript
    str_86711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2598, 32), 'str', 'note')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2598)
    n_86712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2598, 29), 'n', False)
    # Getting the type of 'vars' (line 2598)
    vars_86713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2598, 24), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2598)
    getitem___86714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2598, 24), vars_86713, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2598)
    subscript_call_result_86715 = invoke(stypy.reporting.localization.Localization(__file__, 2598, 24), getitem___86714, n_86712)
    
    # Obtaining the member '__getitem__' of a type (line 2598)
    getitem___86716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2598, 24), subscript_call_result_86715, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2598)
    subscript_call_result_86717 = invoke(stypy.reporting.localization.Localization(__file__, 2598, 24), getitem___86716, str_86711)
    
    # Obtaining the member 'append' of a type (line 2598)
    append_86718 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2598, 24), subscript_call_result_86717, 'append')
    # Calling append(args, kwargs) (line 2598)
    append_call_result_86721 = invoke(stypy.reporting.localization.Localization(__file__, 2598, 24), append_86718, *[note_86719], **kwargs_86720)
    
    # SSA join for if statement (line 2595)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 2599):
    
    # Assigning a Name to a Name (line 2599):
    # Getting the type of 'None' (line 2599)
    None_86722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2599, 27), 'None')
    # Assigning a type to the variable 'note' (line 2599)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2599, 20), 'note', None_86722)
    # SSA join for if statement (line 2592)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Type idiom detected: calculating its left and rigth part (line 2600)
    # Getting the type of 'depend' (line 2600)
    depend_86723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2600, 16), 'depend')
    # Getting the type of 'None' (line 2600)
    None_86724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2600, 33), 'None')
    
    (may_be_86725, more_types_in_union_86726) = may_not_be_none(depend_86723, None_86724)

    if may_be_86725:

        if more_types_in_union_86726:
            # Runtime conditional SSA (line 2600)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        
        str_86727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2601, 23), 'str', 'depend')
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 2601)
        n_86728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2601, 44), 'n')
        # Getting the type of 'vars' (line 2601)
        vars_86729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2601, 39), 'vars')
        # Obtaining the member '__getitem__' of a type (line 2601)
        getitem___86730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2601, 39), vars_86729, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2601)
        subscript_call_result_86731 = invoke(stypy.reporting.localization.Localization(__file__, 2601, 39), getitem___86730, n_86728)
        
        # Applying the binary operator 'notin' (line 2601)
        result_contains_86732 = python_operator(stypy.reporting.localization.Localization(__file__, 2601, 23), 'notin', str_86727, subscript_call_result_86731)
        
        # Testing the type of an if condition (line 2601)
        if_condition_86733 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2601, 20), result_contains_86732)
        # Assigning a type to the variable 'if_condition_86733' (line 2601)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2601, 20), 'if_condition_86733', if_condition_86733)
        # SSA begins for if statement (line 2601)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a List to a Subscript (line 2602):
        
        # Assigning a List to a Subscript (line 2602):
        
        # Obtaining an instance of the builtin type 'list' (line 2602)
        list_86734 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2602, 44), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2602)
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 2602)
        n_86735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2602, 29), 'n')
        # Getting the type of 'vars' (line 2602)
        vars_86736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2602, 24), 'vars')
        # Obtaining the member '__getitem__' of a type (line 2602)
        getitem___86737 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2602, 24), vars_86736, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2602)
        subscript_call_result_86738 = invoke(stypy.reporting.localization.Localization(__file__, 2602, 24), getitem___86737, n_86735)
        
        str_86739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2602, 32), 'str', 'depend')
        # Storing an element on a container (line 2602)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2602, 24), subscript_call_result_86738, (str_86739, list_86734))
        # SSA join for if statement (line 2601)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to rmbadname(...): (line 2603)
        # Processing the call arguments (line 2603)
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to split(...): (line 2603)
        # Processing the call arguments (line 2603)
        str_86750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2603, 88), 'str', '@,@')
        # Processing the call keyword arguments (line 2603)
        kwargs_86751 = {}
        
        # Call to markoutercomma(...): (line 2603)
        # Processing the call arguments (line 2603)
        # Getting the type of 'depend' (line 2603)
        depend_86746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2603, 74), 'depend', False)
        # Processing the call keyword arguments (line 2603)
        kwargs_86747 = {}
        # Getting the type of 'markoutercomma' (line 2603)
        markoutercomma_86745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2603, 59), 'markoutercomma', False)
        # Calling markoutercomma(args, kwargs) (line 2603)
        markoutercomma_call_result_86748 = invoke(stypy.reporting.localization.Localization(__file__, 2603, 59), markoutercomma_86745, *[depend_86746], **kwargs_86747)
        
        # Obtaining the member 'split' of a type (line 2603)
        split_86749 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2603, 59), markoutercomma_call_result_86748, 'split')
        # Calling split(args, kwargs) (line 2603)
        split_call_result_86752 = invoke(stypy.reporting.localization.Localization(__file__, 2603, 59), split_86749, *[str_86750], **kwargs_86751)
        
        comprehension_86753 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2603, 40), split_call_result_86752)
        # Assigning a type to the variable 'x' (line 2603)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2603, 40), 'x', comprehension_86753)
        
        # Call to strip(...): (line 2603)
        # Processing the call keyword arguments (line 2603)
        kwargs_86743 = {}
        # Getting the type of 'x' (line 2603)
        x_86741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2603, 40), 'x', False)
        # Obtaining the member 'strip' of a type (line 2603)
        strip_86742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2603, 40), x_86741, 'strip')
        # Calling strip(args, kwargs) (line 2603)
        strip_call_result_86744 = invoke(stypy.reporting.localization.Localization(__file__, 2603, 40), strip_86742, *[], **kwargs_86743)
        
        list_86754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2603, 40), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2603, 40), list_86754, strip_call_result_86744)
        # Processing the call keyword arguments (line 2603)
        kwargs_86755 = {}
        # Getting the type of 'rmbadname' (line 2603)
        rmbadname_86740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2603, 29), 'rmbadname', False)
        # Calling rmbadname(args, kwargs) (line 2603)
        rmbadname_call_result_86756 = invoke(stypy.reporting.localization.Localization(__file__, 2603, 29), rmbadname_86740, *[list_86754], **kwargs_86755)
        
        # Testing the type of a for loop iterable (line 2603)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2603, 20), rmbadname_call_result_86756)
        # Getting the type of the for loop variable (line 2603)
        for_loop_var_86757 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2603, 20), rmbadname_call_result_86756)
        # Assigning a type to the variable 'c' (line 2603)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2603, 20), 'c', for_loop_var_86757)
        # SSA begins for a for statement (line 2603)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Getting the type of 'c' (line 2604)
        c_86758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2604, 27), 'c')
        
        # Obtaining the type of the subscript
        str_86759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2604, 44), 'str', 'depend')
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 2604)
        n_86760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2604, 41), 'n')
        # Getting the type of 'vars' (line 2604)
        vars_86761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2604, 36), 'vars')
        # Obtaining the member '__getitem__' of a type (line 2604)
        getitem___86762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2604, 36), vars_86761, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2604)
        subscript_call_result_86763 = invoke(stypy.reporting.localization.Localization(__file__, 2604, 36), getitem___86762, n_86760)
        
        # Obtaining the member '__getitem__' of a type (line 2604)
        getitem___86764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2604, 36), subscript_call_result_86763, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2604)
        subscript_call_result_86765 = invoke(stypy.reporting.localization.Localization(__file__, 2604, 36), getitem___86764, str_86759)
        
        # Applying the binary operator 'notin' (line 2604)
        result_contains_86766 = python_operator(stypy.reporting.localization.Localization(__file__, 2604, 27), 'notin', c_86758, subscript_call_result_86765)
        
        # Testing the type of an if condition (line 2604)
        if_condition_86767 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2604, 24), result_contains_86766)
        # Assigning a type to the variable 'if_condition_86767' (line 2604)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2604, 24), 'if_condition_86767', if_condition_86767)
        # SSA begins for if statement (line 2604)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to append(...): (line 2605)
        # Processing the call arguments (line 2605)
        # Getting the type of 'c' (line 2605)
        c_86776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2605, 53), 'c', False)
        # Processing the call keyword arguments (line 2605)
        kwargs_86777 = {}
        
        # Obtaining the type of the subscript
        str_86768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2605, 36), 'str', 'depend')
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 2605)
        n_86769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2605, 33), 'n', False)
        # Getting the type of 'vars' (line 2605)
        vars_86770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2605, 28), 'vars', False)
        # Obtaining the member '__getitem__' of a type (line 2605)
        getitem___86771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2605, 28), vars_86770, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2605)
        subscript_call_result_86772 = invoke(stypy.reporting.localization.Localization(__file__, 2605, 28), getitem___86771, n_86769)
        
        # Obtaining the member '__getitem__' of a type (line 2605)
        getitem___86773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2605, 28), subscript_call_result_86772, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2605)
        subscript_call_result_86774 = invoke(stypy.reporting.localization.Localization(__file__, 2605, 28), getitem___86773, str_86768)
        
        # Obtaining the member 'append' of a type (line 2605)
        append_86775 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2605, 28), subscript_call_result_86774, 'append')
        # Calling append(args, kwargs) (line 2605)
        append_call_result_86778 = invoke(stypy.reporting.localization.Localization(__file__, 2605, 28), append_86775, *[c_86776], **kwargs_86777)
        
        # SSA join for if statement (line 2604)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Name (line 2606):
        
        # Assigning a Name to a Name (line 2606):
        # Getting the type of 'None' (line 2606)
        None_86779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2606, 29), 'None')
        # Assigning a type to the variable 'depend' (line 2606)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2606, 20), 'depend', None_86779)

        if more_types_in_union_86726:
            # SSA join for if statement (line 2600)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Type idiom detected: calculating its left and rigth part (line 2607)
    # Getting the type of 'check' (line 2607)
    check_86780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2607, 16), 'check')
    # Getting the type of 'None' (line 2607)
    None_86781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2607, 32), 'None')
    
    (may_be_86782, more_types_in_union_86783) = may_not_be_none(check_86780, None_86781)

    if may_be_86782:

        if more_types_in_union_86783:
            # Runtime conditional SSA (line 2607)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        
        str_86784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2608, 23), 'str', 'check')
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 2608)
        n_86785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2608, 43), 'n')
        # Getting the type of 'vars' (line 2608)
        vars_86786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2608, 38), 'vars')
        # Obtaining the member '__getitem__' of a type (line 2608)
        getitem___86787 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2608, 38), vars_86786, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2608)
        subscript_call_result_86788 = invoke(stypy.reporting.localization.Localization(__file__, 2608, 38), getitem___86787, n_86785)
        
        # Applying the binary operator 'notin' (line 2608)
        result_contains_86789 = python_operator(stypy.reporting.localization.Localization(__file__, 2608, 23), 'notin', str_86784, subscript_call_result_86788)
        
        # Testing the type of an if condition (line 2608)
        if_condition_86790 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2608, 20), result_contains_86789)
        # Assigning a type to the variable 'if_condition_86790' (line 2608)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2608, 20), 'if_condition_86790', if_condition_86790)
        # SSA begins for if statement (line 2608)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a List to a Subscript (line 2609):
        
        # Assigning a List to a Subscript (line 2609):
        
        # Obtaining an instance of the builtin type 'list' (line 2609)
        list_86791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2609, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2609)
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 2609)
        n_86792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2609, 29), 'n')
        # Getting the type of 'vars' (line 2609)
        vars_86793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2609, 24), 'vars')
        # Obtaining the member '__getitem__' of a type (line 2609)
        getitem___86794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2609, 24), vars_86793, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2609)
        subscript_call_result_86795 = invoke(stypy.reporting.localization.Localization(__file__, 2609, 24), getitem___86794, n_86792)
        
        str_86796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2609, 32), 'str', 'check')
        # Storing an element on a container (line 2609)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2609, 24), subscript_call_result_86795, (str_86796, list_86791))
        # SSA join for if statement (line 2608)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to split(...): (line 2610)
        # Processing the call arguments (line 2610)
        str_86806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2610, 77), 'str', '@,@')
        # Processing the call keyword arguments (line 2610)
        kwargs_86807 = {}
        
        # Call to markoutercomma(...): (line 2610)
        # Processing the call arguments (line 2610)
        # Getting the type of 'check' (line 2610)
        check_86802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2610, 64), 'check', False)
        # Processing the call keyword arguments (line 2610)
        kwargs_86803 = {}
        # Getting the type of 'markoutercomma' (line 2610)
        markoutercomma_86801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2610, 49), 'markoutercomma', False)
        # Calling markoutercomma(args, kwargs) (line 2610)
        markoutercomma_call_result_86804 = invoke(stypy.reporting.localization.Localization(__file__, 2610, 49), markoutercomma_86801, *[check_86802], **kwargs_86803)
        
        # Obtaining the member 'split' of a type (line 2610)
        split_86805 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2610, 49), markoutercomma_call_result_86804, 'split')
        # Calling split(args, kwargs) (line 2610)
        split_call_result_86808 = invoke(stypy.reporting.localization.Localization(__file__, 2610, 49), split_86805, *[str_86806], **kwargs_86807)
        
        comprehension_86809 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2610, 30), split_call_result_86808)
        # Assigning a type to the variable 'x' (line 2610)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2610, 30), 'x', comprehension_86809)
        
        # Call to strip(...): (line 2610)
        # Processing the call keyword arguments (line 2610)
        kwargs_86799 = {}
        # Getting the type of 'x' (line 2610)
        x_86797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2610, 30), 'x', False)
        # Obtaining the member 'strip' of a type (line 2610)
        strip_86798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2610, 30), x_86797, 'strip')
        # Calling strip(args, kwargs) (line 2610)
        strip_call_result_86800 = invoke(stypy.reporting.localization.Localization(__file__, 2610, 30), strip_86798, *[], **kwargs_86799)
        
        list_86810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2610, 30), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2610, 30), list_86810, strip_call_result_86800)
        # Testing the type of a for loop iterable (line 2610)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2610, 20), list_86810)
        # Getting the type of the for loop variable (line 2610)
        for_loop_var_86811 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2610, 20), list_86810)
        # Assigning a type to the variable 'c' (line 2610)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2610, 20), 'c', for_loop_var_86811)
        # SSA begins for a for statement (line 2610)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Getting the type of 'c' (line 2611)
        c_86812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2611, 27), 'c')
        
        # Obtaining the type of the subscript
        str_86813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2611, 44), 'str', 'check')
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 2611)
        n_86814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2611, 41), 'n')
        # Getting the type of 'vars' (line 2611)
        vars_86815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2611, 36), 'vars')
        # Obtaining the member '__getitem__' of a type (line 2611)
        getitem___86816 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2611, 36), vars_86815, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2611)
        subscript_call_result_86817 = invoke(stypy.reporting.localization.Localization(__file__, 2611, 36), getitem___86816, n_86814)
        
        # Obtaining the member '__getitem__' of a type (line 2611)
        getitem___86818 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2611, 36), subscript_call_result_86817, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2611)
        subscript_call_result_86819 = invoke(stypy.reporting.localization.Localization(__file__, 2611, 36), getitem___86818, str_86813)
        
        # Applying the binary operator 'notin' (line 2611)
        result_contains_86820 = python_operator(stypy.reporting.localization.Localization(__file__, 2611, 27), 'notin', c_86812, subscript_call_result_86819)
        
        # Testing the type of an if condition (line 2611)
        if_condition_86821 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2611, 24), result_contains_86820)
        # Assigning a type to the variable 'if_condition_86821' (line 2611)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2611, 24), 'if_condition_86821', if_condition_86821)
        # SSA begins for if statement (line 2611)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to append(...): (line 2612)
        # Processing the call arguments (line 2612)
        # Getting the type of 'c' (line 2612)
        c_86830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2612, 52), 'c', False)
        # Processing the call keyword arguments (line 2612)
        kwargs_86831 = {}
        
        # Obtaining the type of the subscript
        str_86822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2612, 36), 'str', 'check')
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 2612)
        n_86823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2612, 33), 'n', False)
        # Getting the type of 'vars' (line 2612)
        vars_86824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2612, 28), 'vars', False)
        # Obtaining the member '__getitem__' of a type (line 2612)
        getitem___86825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2612, 28), vars_86824, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2612)
        subscript_call_result_86826 = invoke(stypy.reporting.localization.Localization(__file__, 2612, 28), getitem___86825, n_86823)
        
        # Obtaining the member '__getitem__' of a type (line 2612)
        getitem___86827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2612, 28), subscript_call_result_86826, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2612)
        subscript_call_result_86828 = invoke(stypy.reporting.localization.Localization(__file__, 2612, 28), getitem___86827, str_86822)
        
        # Obtaining the member 'append' of a type (line 2612)
        append_86829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2612, 28), subscript_call_result_86828, 'append')
        # Calling append(args, kwargs) (line 2612)
        append_call_result_86832 = invoke(stypy.reporting.localization.Localization(__file__, 2612, 28), append_86829, *[c_86830], **kwargs_86831)
        
        # SSA join for if statement (line 2611)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Name (line 2613):
        
        # Assigning a Name to a Name (line 2613):
        # Getting the type of 'None' (line 2613)
        None_86833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2613, 28), 'None')
        # Assigning a type to the variable 'check' (line 2613)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2613, 20), 'check', None_86833)

        if more_types_in_union_86783:
            # SSA join for if statement (line 2607)
            module_type_store = module_type_store.join_ssa_context()


    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    # Getting the type of 'dim' (line 2614)
    dim_86834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2614, 15), 'dim')
    
    str_86835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2614, 23), 'str', 'dimension')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2614)
    n_86836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2614, 47), 'n')
    # Getting the type of 'vars' (line 2614)
    vars_86837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2614, 42), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2614)
    getitem___86838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2614, 42), vars_86837, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2614)
    subscript_call_result_86839 = invoke(stypy.reporting.localization.Localization(__file__, 2614, 42), getitem___86838, n_86836)
    
    # Applying the binary operator 'notin' (line 2614)
    result_contains_86840 = python_operator(stypy.reporting.localization.Localization(__file__, 2614, 23), 'notin', str_86835, subscript_call_result_86839)
    
    # Applying the binary operator 'and' (line 2614)
    result_and_keyword_86841 = python_operator(stypy.reporting.localization.Localization(__file__, 2614, 15), 'and', dim_86834, result_contains_86840)
    
    # Testing the type of an if condition (line 2614)
    if_condition_86842 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2614, 12), result_and_keyword_86841)
    # Assigning a type to the variable 'if_condition_86842' (line 2614)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2614, 12), 'if_condition_86842', if_condition_86842)
    # SSA begins for if statement (line 2614)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Subscript (line 2615):
    
    # Assigning a List to a Subscript (line 2615):
    
    # Obtaining an instance of the builtin type 'list' (line 2615)
    list_86843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2615, 39), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2615)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2615)
    n_86844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2615, 21), 'n')
    # Getting the type of 'vars' (line 2615)
    vars_86845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2615, 16), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2615)
    getitem___86846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2615, 16), vars_86845, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2615)
    subscript_call_result_86847 = invoke(stypy.reporting.localization.Localization(__file__, 2615, 16), getitem___86846, n_86844)
    
    str_86848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2615, 24), 'str', 'dimension')
    # Storing an element on a container (line 2615)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2615, 16), subscript_call_result_86847, (str_86848, list_86843))
    
    
    # Call to rmbadname(...): (line 2616)
    # Processing the call arguments (line 2616)
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to split(...): (line 2616)
    # Processing the call arguments (line 2616)
    str_86859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2616, 81), 'str', '@,@')
    # Processing the call keyword arguments (line 2616)
    kwargs_86860 = {}
    
    # Call to markoutercomma(...): (line 2616)
    # Processing the call arguments (line 2616)
    # Getting the type of 'dim' (line 2616)
    dim_86855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2616, 70), 'dim', False)
    # Processing the call keyword arguments (line 2616)
    kwargs_86856 = {}
    # Getting the type of 'markoutercomma' (line 2616)
    markoutercomma_86854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2616, 55), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 2616)
    markoutercomma_call_result_86857 = invoke(stypy.reporting.localization.Localization(__file__, 2616, 55), markoutercomma_86854, *[dim_86855], **kwargs_86856)
    
    # Obtaining the member 'split' of a type (line 2616)
    split_86858 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2616, 55), markoutercomma_call_result_86857, 'split')
    # Calling split(args, kwargs) (line 2616)
    split_call_result_86861 = invoke(stypy.reporting.localization.Localization(__file__, 2616, 55), split_86858, *[str_86859], **kwargs_86860)
    
    comprehension_86862 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2616, 36), split_call_result_86861)
    # Assigning a type to the variable 'x' (line 2616)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2616, 36), 'x', comprehension_86862)
    
    # Call to strip(...): (line 2616)
    # Processing the call keyword arguments (line 2616)
    kwargs_86852 = {}
    # Getting the type of 'x' (line 2616)
    x_86850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2616, 36), 'x', False)
    # Obtaining the member 'strip' of a type (line 2616)
    strip_86851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2616, 36), x_86850, 'strip')
    # Calling strip(args, kwargs) (line 2616)
    strip_call_result_86853 = invoke(stypy.reporting.localization.Localization(__file__, 2616, 36), strip_86851, *[], **kwargs_86852)
    
    list_86863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2616, 36), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2616, 36), list_86863, strip_call_result_86853)
    # Processing the call keyword arguments (line 2616)
    kwargs_86864 = {}
    # Getting the type of 'rmbadname' (line 2616)
    rmbadname_86849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2616, 25), 'rmbadname', False)
    # Calling rmbadname(args, kwargs) (line 2616)
    rmbadname_call_result_86865 = invoke(stypy.reporting.localization.Localization(__file__, 2616, 25), rmbadname_86849, *[list_86863], **kwargs_86864)
    
    # Testing the type of a for loop iterable (line 2616)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2616, 16), rmbadname_call_result_86865)
    # Getting the type of the for loop variable (line 2616)
    for_loop_var_86866 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2616, 16), rmbadname_call_result_86865)
    # Assigning a type to the variable 'd' (line 2616)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2616, 16), 'd', for_loop_var_86866)
    # SSA begins for a for statement (line 2616)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Str to a Name (line 2617):
    
    # Assigning a Str to a Name (line 2617):
    str_86867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2617, 27), 'str', '*')
    # Assigning a type to the variable 'star' (line 2617)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2617, 20), 'star', str_86867)
    
    
    # Getting the type of 'd' (line 2618)
    d_86868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2618, 23), 'd')
    str_86869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2618, 28), 'str', ':')
    # Applying the binary operator '==' (line 2618)
    result_eq_86870 = python_operator(stypy.reporting.localization.Localization(__file__, 2618, 23), '==', d_86868, str_86869)
    
    # Testing the type of an if condition (line 2618)
    if_condition_86871 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2618, 20), result_eq_86870)
    # Assigning a type to the variable 'if_condition_86871' (line 2618)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2618, 20), 'if_condition_86871', if_condition_86871)
    # SSA begins for if statement (line 2618)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 2619):
    
    # Assigning a Str to a Name (line 2619):
    str_86872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2619, 31), 'str', ':')
    # Assigning a type to the variable 'star' (line 2619)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2619, 24), 'star', str_86872)
    # SSA join for if statement (line 2618)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'd' (line 2620)
    d_86873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2620, 23), 'd')
    # Getting the type of 'params' (line 2620)
    params_86874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2620, 28), 'params')
    # Applying the binary operator 'in' (line 2620)
    result_contains_86875 = python_operator(stypy.reporting.localization.Localization(__file__, 2620, 23), 'in', d_86873, params_86874)
    
    # Testing the type of an if condition (line 2620)
    if_condition_86876 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2620, 20), result_contains_86875)
    # Assigning a type to the variable 'if_condition_86876' (line 2620)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2620, 20), 'if_condition_86876', if_condition_86876)
    # SSA begins for if statement (line 2620)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2621):
    
    # Assigning a Call to a Name (line 2621):
    
    # Call to str(...): (line 2621)
    # Processing the call arguments (line 2621)
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2621)
    d_86878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2621, 39), 'd', False)
    # Getting the type of 'params' (line 2621)
    params_86879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2621, 32), 'params', False)
    # Obtaining the member '__getitem__' of a type (line 2621)
    getitem___86880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2621, 32), params_86879, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2621)
    subscript_call_result_86881 = invoke(stypy.reporting.localization.Localization(__file__, 2621, 32), getitem___86880, d_86878)
    
    # Processing the call keyword arguments (line 2621)
    kwargs_86882 = {}
    # Getting the type of 'str' (line 2621)
    str_86877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2621, 28), 'str', False)
    # Calling str(args, kwargs) (line 2621)
    str_call_result_86883 = invoke(stypy.reporting.localization.Localization(__file__, 2621, 28), str_86877, *[subscript_call_result_86881], **kwargs_86882)
    
    # Assigning a type to the variable 'd' (line 2621)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2621, 24), 'd', str_call_result_86883)
    # SSA join for if statement (line 2620)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to list(...): (line 2622)
    # Processing the call arguments (line 2622)
    
    # Call to keys(...): (line 2622)
    # Processing the call keyword arguments (line 2622)
    kwargs_86887 = {}
    # Getting the type of 'params' (line 2622)
    params_86885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2622, 34), 'params', False)
    # Obtaining the member 'keys' of a type (line 2622)
    keys_86886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2622, 34), params_86885, 'keys')
    # Calling keys(args, kwargs) (line 2622)
    keys_call_result_86888 = invoke(stypy.reporting.localization.Localization(__file__, 2622, 34), keys_86886, *[], **kwargs_86887)
    
    # Processing the call keyword arguments (line 2622)
    kwargs_86889 = {}
    # Getting the type of 'list' (line 2622)
    list_86884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2622, 29), 'list', False)
    # Calling list(args, kwargs) (line 2622)
    list_call_result_86890 = invoke(stypy.reporting.localization.Localization(__file__, 2622, 29), list_86884, *[keys_call_result_86888], **kwargs_86889)
    
    # Testing the type of a for loop iterable (line 2622)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2622, 20), list_call_result_86890)
    # Getting the type of the for loop variable (line 2622)
    for_loop_var_86891 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2622, 20), list_call_result_86890)
    # Assigning a type to the variable 'p' (line 2622)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2622, 20), 'p', for_loop_var_86891)
    # SSA begins for a for statement (line 2622)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 2623):
    
    # Assigning a Call to a Name (line 2623):
    
    # Call to compile(...): (line 2623)
    # Processing the call arguments (line 2623)
    str_86894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2623, 42), 'str', '(?P<before>.*?)\\b')
    # Getting the type of 'p' (line 2623)
    p_86895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2623, 65), 'p', False)
    # Applying the binary operator '+' (line 2623)
    result_add_86896 = python_operator(stypy.reporting.localization.Localization(__file__, 2623, 42), '+', str_86894, p_86895)
    
    str_86897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2623, 69), 'str', '\\b(?P<after>.*)')
    # Applying the binary operator '+' (line 2623)
    result_add_86898 = python_operator(stypy.reporting.localization.Localization(__file__, 2623, 67), '+', result_add_86896, str_86897)
    
    # Getting the type of 're' (line 2623)
    re_86899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2623, 89), 're', False)
    # Obtaining the member 'I' of a type (line 2623)
    I_86900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2623, 89), re_86899, 'I')
    # Processing the call keyword arguments (line 2623)
    kwargs_86901 = {}
    # Getting the type of 're' (line 2623)
    re_86892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2623, 31), 're', False)
    # Obtaining the member 'compile' of a type (line 2623)
    compile_86893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2623, 31), re_86892, 'compile')
    # Calling compile(args, kwargs) (line 2623)
    compile_call_result_86902 = invoke(stypy.reporting.localization.Localization(__file__, 2623, 31), compile_86893, *[result_add_86898, I_86900], **kwargs_86901)
    
    # Assigning a type to the variable 're_1' (line 2623)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2623, 24), 're_1', compile_call_result_86902)
    
    # Assigning a Call to a Name (line 2624):
    
    # Assigning a Call to a Name (line 2624):
    
    # Call to match(...): (line 2624)
    # Processing the call arguments (line 2624)
    # Getting the type of 'd' (line 2624)
    d_86905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2624, 39), 'd', False)
    # Processing the call keyword arguments (line 2624)
    kwargs_86906 = {}
    # Getting the type of 're_1' (line 2624)
    re_1_86903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2624, 28), 're_1', False)
    # Obtaining the member 'match' of a type (line 2624)
    match_86904 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2624, 28), re_1_86903, 'match')
    # Calling match(args, kwargs) (line 2624)
    match_call_result_86907 = invoke(stypy.reporting.localization.Localization(__file__, 2624, 28), match_86904, *[d_86905], **kwargs_86906)
    
    # Assigning a type to the variable 'm' (line 2624)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2624, 24), 'm', match_call_result_86907)
    
    # Getting the type of 'm' (line 2625)
    m_86908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2625, 30), 'm')
    # Testing the type of an if condition (line 2625)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2625, 24), m_86908)
    # SSA begins for while statement (line 2625)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    # Assigning a BinOp to a Name (line 2626):
    
    # Assigning a BinOp to a Name (line 2626):
    
    # Call to group(...): (line 2626)
    # Processing the call arguments (line 2626)
    str_86911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2626, 40), 'str', 'before')
    # Processing the call keyword arguments (line 2626)
    kwargs_86912 = {}
    # Getting the type of 'm' (line 2626)
    m_86909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2626, 32), 'm', False)
    # Obtaining the member 'group' of a type (line 2626)
    group_86910 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2626, 32), m_86909, 'group')
    # Calling group(args, kwargs) (line 2626)
    group_call_result_86913 = invoke(stypy.reporting.localization.Localization(__file__, 2626, 32), group_86910, *[str_86911], **kwargs_86912)
    
    
    # Call to str(...): (line 2627)
    # Processing the call arguments (line 2627)
    
    # Obtaining the type of the subscript
    # Getting the type of 'p' (line 2627)
    p_86915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2627, 43), 'p', False)
    # Getting the type of 'params' (line 2627)
    params_86916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2627, 36), 'params', False)
    # Obtaining the member '__getitem__' of a type (line 2627)
    getitem___86917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2627, 36), params_86916, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2627)
    subscript_call_result_86918 = invoke(stypy.reporting.localization.Localization(__file__, 2627, 36), getitem___86917, p_86915)
    
    # Processing the call keyword arguments (line 2627)
    kwargs_86919 = {}
    # Getting the type of 'str' (line 2627)
    str_86914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2627, 32), 'str', False)
    # Calling str(args, kwargs) (line 2627)
    str_call_result_86920 = invoke(stypy.reporting.localization.Localization(__file__, 2627, 32), str_86914, *[subscript_call_result_86918], **kwargs_86919)
    
    # Applying the binary operator '+' (line 2626)
    result_add_86921 = python_operator(stypy.reporting.localization.Localization(__file__, 2626, 32), '+', group_call_result_86913, str_call_result_86920)
    
    
    # Call to group(...): (line 2627)
    # Processing the call arguments (line 2627)
    str_86924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2627, 57), 'str', 'after')
    # Processing the call keyword arguments (line 2627)
    kwargs_86925 = {}
    # Getting the type of 'm' (line 2627)
    m_86922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2627, 49), 'm', False)
    # Obtaining the member 'group' of a type (line 2627)
    group_86923 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2627, 49), m_86922, 'group')
    # Calling group(args, kwargs) (line 2627)
    group_call_result_86926 = invoke(stypy.reporting.localization.Localization(__file__, 2627, 49), group_86923, *[str_86924], **kwargs_86925)
    
    # Applying the binary operator '+' (line 2627)
    result_add_86927 = python_operator(stypy.reporting.localization.Localization(__file__, 2627, 47), '+', result_add_86921, group_call_result_86926)
    
    # Assigning a type to the variable 'd' (line 2626)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2626, 28), 'd', result_add_86927)
    
    # Assigning a Call to a Name (line 2628):
    
    # Assigning a Call to a Name (line 2628):
    
    # Call to match(...): (line 2628)
    # Processing the call arguments (line 2628)
    # Getting the type of 'd' (line 2628)
    d_86930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2628, 43), 'd', False)
    # Processing the call keyword arguments (line 2628)
    kwargs_86931 = {}
    # Getting the type of 're_1' (line 2628)
    re_1_86928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2628, 32), 're_1', False)
    # Obtaining the member 'match' of a type (line 2628)
    match_86929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2628, 32), re_1_86928, 'match')
    # Calling match(args, kwargs) (line 2628)
    match_call_result_86932 = invoke(stypy.reporting.localization.Localization(__file__, 2628, 32), match_86929, *[d_86930], **kwargs_86931)
    
    # Assigning a type to the variable 'm' (line 2628)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2628, 28), 'm', match_call_result_86932)
    # SSA join for while statement (line 2625)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'd' (line 2629)
    d_86933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2629, 23), 'd')
    # Getting the type of 'star' (line 2629)
    star_86934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2629, 28), 'star')
    # Applying the binary operator '==' (line 2629)
    result_eq_86935 = python_operator(stypy.reporting.localization.Localization(__file__, 2629, 23), '==', d_86933, star_86934)
    
    # Testing the type of an if condition (line 2629)
    if_condition_86936 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2629, 20), result_eq_86935)
    # Assigning a type to the variable 'if_condition_86936' (line 2629)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2629, 20), 'if_condition_86936', if_condition_86936)
    # SSA begins for if statement (line 2629)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Name (line 2630):
    
    # Assigning a List to a Name (line 2630):
    
    # Obtaining an instance of the builtin type 'list' (line 2630)
    list_86937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2630, 29), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2630)
    # Adding element type (line 2630)
    # Getting the type of 'star' (line 2630)
    star_86938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2630, 30), 'star')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2630, 29), list_86937, star_86938)
    
    # Assigning a type to the variable 'dl' (line 2630)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2630, 24), 'dl', list_86937)
    # SSA branch for the else part of an if statement (line 2629)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Name (line 2632):
    
    # Assigning a Call to a Name (line 2632):
    
    # Call to split(...): (line 2632)
    # Processing the call arguments (line 2632)
    str_86945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2632, 58), 'str', '@:@')
    # Processing the call keyword arguments (line 2632)
    kwargs_86946 = {}
    
    # Call to markoutercomma(...): (line 2632)
    # Processing the call arguments (line 2632)
    # Getting the type of 'd' (line 2632)
    d_86940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2632, 44), 'd', False)
    str_86941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2632, 47), 'str', ':')
    # Processing the call keyword arguments (line 2632)
    kwargs_86942 = {}
    # Getting the type of 'markoutercomma' (line 2632)
    markoutercomma_86939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2632, 29), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 2632)
    markoutercomma_call_result_86943 = invoke(stypy.reporting.localization.Localization(__file__, 2632, 29), markoutercomma_86939, *[d_86940, str_86941], **kwargs_86942)
    
    # Obtaining the member 'split' of a type (line 2632)
    split_86944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2632, 29), markoutercomma_call_result_86943, 'split')
    # Calling split(args, kwargs) (line 2632)
    split_call_result_86947 = invoke(stypy.reporting.localization.Localization(__file__, 2632, 29), split_86944, *[str_86945], **kwargs_86946)
    
    # Assigning a type to the variable 'dl' (line 2632)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2632, 24), 'dl', split_call_result_86947)
    # SSA join for if statement (line 2629)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    
    # Call to len(...): (line 2633)
    # Processing the call arguments (line 2633)
    # Getting the type of 'dl' (line 2633)
    dl_86949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2633, 27), 'dl', False)
    # Processing the call keyword arguments (line 2633)
    kwargs_86950 = {}
    # Getting the type of 'len' (line 2633)
    len_86948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2633, 23), 'len', False)
    # Calling len(args, kwargs) (line 2633)
    len_call_result_86951 = invoke(stypy.reporting.localization.Localization(__file__, 2633, 23), len_86948, *[dl_86949], **kwargs_86950)
    
    int_86952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2633, 34), 'int')
    # Applying the binary operator '==' (line 2633)
    result_eq_86953 = python_operator(stypy.reporting.localization.Localization(__file__, 2633, 23), '==', len_call_result_86951, int_86952)
    
    
    str_86954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2633, 40), 'str', '*')
    # Getting the type of 'dl' (line 2633)
    dl_86955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2633, 47), 'dl')
    # Applying the binary operator 'in' (line 2633)
    result_contains_86956 = python_operator(stypy.reporting.localization.Localization(__file__, 2633, 40), 'in', str_86954, dl_86955)
    
    # Applying the binary operator 'and' (line 2633)
    result_and_keyword_86957 = python_operator(stypy.reporting.localization.Localization(__file__, 2633, 23), 'and', result_eq_86953, result_contains_86956)
    
    # Testing the type of an if condition (line 2633)
    if_condition_86958 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2633, 20), result_and_keyword_86957)
    # Assigning a type to the variable 'if_condition_86958' (line 2633)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2633, 20), 'if_condition_86958', if_condition_86958)
    # SSA begins for if statement (line 2633)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Name (line 2634):
    
    # Assigning a List to a Name (line 2634):
    
    # Obtaining an instance of the builtin type 'list' (line 2634)
    list_86959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2634, 29), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2634)
    # Adding element type (line 2634)
    str_86960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2634, 30), 'str', '*')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2634, 29), list_86959, str_86960)
    
    # Assigning a type to the variable 'dl' (line 2634)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2634, 24), 'dl', list_86959)
    
    # Assigning a Str to a Name (line 2635):
    
    # Assigning a Str to a Name (line 2635):
    str_86961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2635, 28), 'str', '*')
    # Assigning a type to the variable 'd' (line 2635)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2635, 24), 'd', str_86961)
    # SSA join for if statement (line 2633)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    
    # Call to len(...): (line 2636)
    # Processing the call arguments (line 2636)
    # Getting the type of 'dl' (line 2636)
    dl_86963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2636, 27), 'dl', False)
    # Processing the call keyword arguments (line 2636)
    kwargs_86964 = {}
    # Getting the type of 'len' (line 2636)
    len_86962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2636, 23), 'len', False)
    # Calling len(args, kwargs) (line 2636)
    len_call_result_86965 = invoke(stypy.reporting.localization.Localization(__file__, 2636, 23), len_86962, *[dl_86963], **kwargs_86964)
    
    int_86966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2636, 34), 'int')
    # Applying the binary operator '==' (line 2636)
    result_eq_86967 = python_operator(stypy.reporting.localization.Localization(__file__, 2636, 23), '==', len_call_result_86965, int_86966)
    
    
    
    
    # Obtaining the type of the subscript
    int_86968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2636, 47), 'int')
    # Getting the type of 'dl' (line 2636)
    dl_86969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2636, 44), 'dl')
    # Obtaining the member '__getitem__' of a type (line 2636)
    getitem___86970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2636, 44), dl_86969, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2636)
    subscript_call_result_86971 = invoke(stypy.reporting.localization.Localization(__file__, 2636, 44), getitem___86970, int_86968)
    
    # Getting the type of 'star' (line 2636)
    star_86972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2636, 53), 'star')
    # Applying the binary operator '==' (line 2636)
    result_eq_86973 = python_operator(stypy.reporting.localization.Localization(__file__, 2636, 44), '==', subscript_call_result_86971, star_86972)
    
    # Applying the 'not' unary operator (line 2636)
    result_not__86974 = python_operator(stypy.reporting.localization.Localization(__file__, 2636, 40), 'not', result_eq_86973)
    
    # Applying the binary operator 'and' (line 2636)
    result_and_keyword_86975 = python_operator(stypy.reporting.localization.Localization(__file__, 2636, 23), 'and', result_eq_86967, result_not__86974)
    
    # Testing the type of an if condition (line 2636)
    if_condition_86976 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2636, 20), result_and_keyword_86975)
    # Assigning a type to the variable 'if_condition_86976' (line 2636)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2636, 20), 'if_condition_86976', if_condition_86976)
    # SSA begins for if statement (line 2636)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Name (line 2637):
    
    # Assigning a List to a Name (line 2637):
    
    # Obtaining an instance of the builtin type 'list' (line 2637)
    list_86977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2637, 29), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2637)
    # Adding element type (line 2637)
    str_86978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2637, 30), 'str', '1')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2637, 29), list_86977, str_86978)
    # Adding element type (line 2637)
    
    # Obtaining the type of the subscript
    int_86979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2637, 38), 'int')
    # Getting the type of 'dl' (line 2637)
    dl_86980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2637, 35), 'dl')
    # Obtaining the member '__getitem__' of a type (line 2637)
    getitem___86981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2637, 35), dl_86980, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2637)
    subscript_call_result_86982 = invoke(stypy.reporting.localization.Localization(__file__, 2637, 35), getitem___86981, int_86979)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2637, 29), list_86977, subscript_call_result_86982)
    
    # Assigning a type to the variable 'dl' (line 2637)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2637, 24), 'dl', list_86977)
    # SSA join for if statement (line 2636)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Call to len(...): (line 2638)
    # Processing the call arguments (line 2638)
    # Getting the type of 'dl' (line 2638)
    dl_86984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2638, 27), 'dl', False)
    # Processing the call keyword arguments (line 2638)
    kwargs_86985 = {}
    # Getting the type of 'len' (line 2638)
    len_86983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2638, 23), 'len', False)
    # Calling len(args, kwargs) (line 2638)
    len_call_result_86986 = invoke(stypy.reporting.localization.Localization(__file__, 2638, 23), len_86983, *[dl_86984], **kwargs_86985)
    
    int_86987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2638, 34), 'int')
    # Applying the binary operator '==' (line 2638)
    result_eq_86988 = python_operator(stypy.reporting.localization.Localization(__file__, 2638, 23), '==', len_call_result_86986, int_86987)
    
    # Testing the type of an if condition (line 2638)
    if_condition_86989 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2638, 20), result_eq_86988)
    # Assigning a type to the variable 'if_condition_86989' (line 2638)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2638, 20), 'if_condition_86989', if_condition_86989)
    # SSA begins for if statement (line 2638)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Tuple (line 2639):
    
    # Assigning a Call to a Name:
    
    # Call to getarrlen(...): (line 2639)
    # Processing the call arguments (line 2639)
    # Getting the type of 'dl' (line 2639)
    dl_86991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2639, 45), 'dl', False)
    
    # Call to list(...): (line 2639)
    # Processing the call arguments (line 2639)
    
    # Call to keys(...): (line 2639)
    # Processing the call keyword arguments (line 2639)
    kwargs_86998 = {}
    
    # Obtaining the type of the subscript
    str_86993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2639, 60), 'str', 'vars')
    # Getting the type of 'block' (line 2639)
    block_86994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2639, 54), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2639)
    getitem___86995 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2639, 54), block_86994, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2639)
    subscript_call_result_86996 = invoke(stypy.reporting.localization.Localization(__file__, 2639, 54), getitem___86995, str_86993)
    
    # Obtaining the member 'keys' of a type (line 2639)
    keys_86997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2639, 54), subscript_call_result_86996, 'keys')
    # Calling keys(args, kwargs) (line 2639)
    keys_call_result_86999 = invoke(stypy.reporting.localization.Localization(__file__, 2639, 54), keys_86997, *[], **kwargs_86998)
    
    # Processing the call keyword arguments (line 2639)
    kwargs_87000 = {}
    # Getting the type of 'list' (line 2639)
    list_86992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2639, 49), 'list', False)
    # Calling list(args, kwargs) (line 2639)
    list_call_result_87001 = invoke(stypy.reporting.localization.Localization(__file__, 2639, 49), list_86992, *[keys_call_result_86999], **kwargs_87000)
    
    # Processing the call keyword arguments (line 2639)
    kwargs_87002 = {}
    # Getting the type of 'getarrlen' (line 2639)
    getarrlen_86990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2639, 35), 'getarrlen', False)
    # Calling getarrlen(args, kwargs) (line 2639)
    getarrlen_call_result_87003 = invoke(stypy.reporting.localization.Localization(__file__, 2639, 35), getarrlen_86990, *[dl_86991, list_call_result_87001], **kwargs_87002)
    
    # Assigning a type to the variable 'call_assignment_75817' (line 2639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2639, 24), 'call_assignment_75817', getarrlen_call_result_87003)
    
    # Assigning a Call to a Name (line 2639):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_87006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2639, 24), 'int')
    # Processing the call keyword arguments
    kwargs_87007 = {}
    # Getting the type of 'call_assignment_75817' (line 2639)
    call_assignment_75817_87004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2639, 24), 'call_assignment_75817', False)
    # Obtaining the member '__getitem__' of a type (line 2639)
    getitem___87005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2639, 24), call_assignment_75817_87004, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_87008 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___87005, *[int_87006], **kwargs_87007)
    
    # Assigning a type to the variable 'call_assignment_75818' (line 2639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2639, 24), 'call_assignment_75818', getitem___call_result_87008)
    
    # Assigning a Name to a Name (line 2639):
    # Getting the type of 'call_assignment_75818' (line 2639)
    call_assignment_75818_87009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2639, 24), 'call_assignment_75818')
    # Assigning a type to the variable 'd' (line 2639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2639, 24), 'd', call_assignment_75818_87009)
    
    # Assigning a Call to a Name (line 2639):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_87012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2639, 24), 'int')
    # Processing the call keyword arguments
    kwargs_87013 = {}
    # Getting the type of 'call_assignment_75817' (line 2639)
    call_assignment_75817_87010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2639, 24), 'call_assignment_75817', False)
    # Obtaining the member '__getitem__' of a type (line 2639)
    getitem___87011 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2639, 24), call_assignment_75817_87010, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_87014 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___87011, *[int_87012], **kwargs_87013)
    
    # Assigning a type to the variable 'call_assignment_75819' (line 2639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2639, 24), 'call_assignment_75819', getitem___call_result_87014)
    
    # Assigning a Name to a Name (line 2639):
    # Getting the type of 'call_assignment_75819' (line 2639)
    call_assignment_75819_87015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2639, 24), 'call_assignment_75819')
    # Assigning a type to the variable 'v' (line 2639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2639, 27), 'v', call_assignment_75819_87015)
    
    # Assigning a Call to a Name (line 2639):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_87018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2639, 24), 'int')
    # Processing the call keyword arguments
    kwargs_87019 = {}
    # Getting the type of 'call_assignment_75817' (line 2639)
    call_assignment_75817_87016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2639, 24), 'call_assignment_75817', False)
    # Obtaining the member '__getitem__' of a type (line 2639)
    getitem___87017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2639, 24), call_assignment_75817_87016, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_87020 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___87017, *[int_87018], **kwargs_87019)
    
    # Assigning a type to the variable 'call_assignment_75820' (line 2639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2639, 24), 'call_assignment_75820', getitem___call_result_87020)
    
    # Assigning a Name to a Name (line 2639):
    # Getting the type of 'call_assignment_75820' (line 2639)
    call_assignment_75820_87021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2639, 24), 'call_assignment_75820')
    # Assigning a type to the variable 'di' (line 2639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2639, 30), 'di', call_assignment_75820_87021)
    
    
    
    # Obtaining the type of the subscript
    int_87022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2640, 30), 'int')
    slice_87023 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2640, 27), None, int_87022, None)
    # Getting the type of 'd' (line 2640)
    d_87024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2640, 27), 'd')
    # Obtaining the member '__getitem__' of a type (line 2640)
    getitem___87025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2640, 27), d_87024, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2640)
    subscript_call_result_87026 = invoke(stypy.reporting.localization.Localization(__file__, 2640, 27), getitem___87025, slice_87023)
    
    str_87027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2640, 36), 'str', '1 * ')
    # Applying the binary operator '==' (line 2640)
    result_eq_87028 = python_operator(stypy.reporting.localization.Localization(__file__, 2640, 27), '==', subscript_call_result_87026, str_87027)
    
    # Testing the type of an if condition (line 2640)
    if_condition_87029 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2640, 24), result_eq_87028)
    # Assigning a type to the variable 'if_condition_87029' (line 2640)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2640, 24), 'if_condition_87029', if_condition_87029)
    # SSA begins for if statement (line 2640)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2641):
    
    # Assigning a Subscript to a Name (line 2641):
    
    # Obtaining the type of the subscript
    int_87030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2641, 34), 'int')
    slice_87031 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2641, 32), int_87030, None, None)
    # Getting the type of 'd' (line 2641)
    d_87032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2641, 32), 'd')
    # Obtaining the member '__getitem__' of a type (line 2641)
    getitem___87033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2641, 32), d_87032, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2641)
    subscript_call_result_87034 = invoke(stypy.reporting.localization.Localization(__file__, 2641, 32), getitem___87033, slice_87031)
    
    # Assigning a type to the variable 'd' (line 2641)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2641, 28), 'd', subscript_call_result_87034)
    # SSA join for if statement (line 2640)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    # Getting the type of 'di' (line 2642)
    di_87035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2642, 27), 'di')
    
    
    # Obtaining the type of the subscript
    int_87036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2642, 37), 'int')
    slice_87037 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2642, 34), int_87036, None, None)
    # Getting the type of 'di' (line 2642)
    di_87038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2642, 34), 'di')
    # Obtaining the member '__getitem__' of a type (line 2642)
    getitem___87039 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2642, 34), di_87038, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2642)
    subscript_call_result_87040 = invoke(stypy.reporting.localization.Localization(__file__, 2642, 34), getitem___87039, slice_87037)
    
    str_87041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2642, 45), 'str', '/(1)')
    # Applying the binary operator '==' (line 2642)
    result_eq_87042 = python_operator(stypy.reporting.localization.Localization(__file__, 2642, 34), '==', subscript_call_result_87040, str_87041)
    
    # Applying the binary operator 'and' (line 2642)
    result_and_keyword_87043 = python_operator(stypy.reporting.localization.Localization(__file__, 2642, 27), 'and', di_87035, result_eq_87042)
    
    # Testing the type of an if condition (line 2642)
    if_condition_87044 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2642, 24), result_and_keyword_87043)
    # Assigning a type to the variable 'if_condition_87044' (line 2642)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2642, 24), 'if_condition_87044', if_condition_87044)
    # SSA begins for if statement (line 2642)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2643):
    
    # Assigning a Subscript to a Name (line 2643):
    
    # Obtaining the type of the subscript
    int_87045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2643, 37), 'int')
    slice_87046 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2643, 33), None, int_87045, None)
    # Getting the type of 'di' (line 2643)
    di_87047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2643, 33), 'di')
    # Obtaining the member '__getitem__' of a type (line 2643)
    getitem___87048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2643, 33), di_87047, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2643)
    subscript_call_result_87049 = invoke(stypy.reporting.localization.Localization(__file__, 2643, 33), getitem___87048, slice_87046)
    
    # Assigning a type to the variable 'di' (line 2643)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2643, 28), 'di', subscript_call_result_87049)
    # SSA join for if statement (line 2642)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'v' (line 2644)
    v_87050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2644, 27), 'v')
    # Testing the type of an if condition (line 2644)
    if_condition_87051 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2644, 24), v_87050)
    # Assigning a type to the variable 'if_condition_87051' (line 2644)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2644, 24), 'if_condition_87051', if_condition_87051)
    # SSA begins for if statement (line 2644)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Tuple to a Subscript (line 2645):
    
    # Assigning a Tuple to a Subscript (line 2645):
    
    # Obtaining an instance of the builtin type 'tuple' (line 2645)
    tuple_87052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2645, 45), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2645)
    # Adding element type (line 2645)
    # Getting the type of 'v' (line 2645)
    v_87053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2645, 45), 'v')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2645, 45), tuple_87052, v_87053)
    # Adding element type (line 2645)
    # Getting the type of 'di' (line 2645)
    di_87054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2645, 48), 'di')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2645, 45), tuple_87052, di_87054)
    
    # Getting the type of 'savelindims' (line 2645)
    savelindims_87055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2645, 28), 'savelindims')
    # Getting the type of 'd' (line 2645)
    d_87056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2645, 40), 'd')
    # Storing an element on a container (line 2645)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2645, 28), savelindims_87055, (d_87056, tuple_87052))
    # SSA join for if statement (line 2644)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2638)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 2646)
    # Processing the call arguments (line 2646)
    # Getting the type of 'd' (line 2646)
    d_87065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2646, 48), 'd', False)
    # Processing the call keyword arguments (line 2646)
    kwargs_87066 = {}
    
    # Obtaining the type of the subscript
    str_87057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2646, 28), 'str', 'dimension')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2646)
    n_87058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2646, 25), 'n', False)
    # Getting the type of 'vars' (line 2646)
    vars_87059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2646, 20), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2646)
    getitem___87060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2646, 20), vars_87059, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2646)
    subscript_call_result_87061 = invoke(stypy.reporting.localization.Localization(__file__, 2646, 20), getitem___87060, n_87058)
    
    # Obtaining the member '__getitem__' of a type (line 2646)
    getitem___87062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2646, 20), subscript_call_result_87061, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2646)
    subscript_call_result_87063 = invoke(stypy.reporting.localization.Localization(__file__, 2646, 20), getitem___87062, str_87057)
    
    # Obtaining the member 'append' of a type (line 2646)
    append_87064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2646, 20), subscript_call_result_87063, 'append')
    # Calling append(args, kwargs) (line 2646)
    append_call_result_87067 = invoke(stypy.reporting.localization.Localization(__file__, 2646, 20), append_87064, *[d_87065], **kwargs_87066)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2614)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2565)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_87068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2647, 11), 'str', 'dimension')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2647)
    n_87069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2647, 31), 'n')
    # Getting the type of 'vars' (line 2647)
    vars_87070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2647, 26), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2647)
    getitem___87071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2647, 26), vars_87070, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2647)
    subscript_call_result_87072 = invoke(stypy.reporting.localization.Localization(__file__, 2647, 26), getitem___87071, n_87069)
    
    # Applying the binary operator 'in' (line 2647)
    result_contains_87073 = python_operator(stypy.reporting.localization.Localization(__file__, 2647, 11), 'in', str_87068, subscript_call_result_87072)
    
    # Testing the type of an if condition (line 2647)
    if_condition_87074 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2647, 8), result_contains_87073)
    # Assigning a type to the variable 'if_condition_87074' (line 2647)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2647, 8), 'if_condition_87074', if_condition_87074)
    # SSA begins for if statement (line 2647)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Call to isintent_c(...): (line 2648)
    # Processing the call arguments (line 2648)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2648)
    n_87076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2648, 31), 'n', False)
    # Getting the type of 'vars' (line 2648)
    vars_87077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2648, 26), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2648)
    getitem___87078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2648, 26), vars_87077, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2648)
    subscript_call_result_87079 = invoke(stypy.reporting.localization.Localization(__file__, 2648, 26), getitem___87078, n_87076)
    
    # Processing the call keyword arguments (line 2648)
    kwargs_87080 = {}
    # Getting the type of 'isintent_c' (line 2648)
    isintent_c_87075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2648, 15), 'isintent_c', False)
    # Calling isintent_c(args, kwargs) (line 2648)
    isintent_c_call_result_87081 = invoke(stypy.reporting.localization.Localization(__file__, 2648, 15), isintent_c_87075, *[subscript_call_result_87079], **kwargs_87080)
    
    # Testing the type of an if condition (line 2648)
    if_condition_87082 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2648, 12), isintent_c_call_result_87081)
    # Assigning a type to the variable 'if_condition_87082' (line 2648)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2648, 12), 'if_condition_87082', if_condition_87082)
    # SSA begins for if statement (line 2648)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 2649):
    
    # Assigning a Str to a Name (line 2649):
    str_87083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2649, 30), 'str', 'shape')
    # Assigning a type to the variable 'shape_macro' (line 2649)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2649, 16), 'shape_macro', str_87083)
    # SSA branch for the else part of an if statement (line 2648)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Str to a Name (line 2651):
    
    # Assigning a Str to a Name (line 2651):
    str_87084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2651, 30), 'str', 'shape')
    # Assigning a type to the variable 'shape_macro' (line 2651)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2651, 16), 'shape_macro', str_87084)
    # SSA join for if statement (line 2648)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to isstringarray(...): (line 2652)
    # Processing the call arguments (line 2652)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2652)
    n_87086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2652, 34), 'n', False)
    # Getting the type of 'vars' (line 2652)
    vars_87087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2652, 29), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2652)
    getitem___87088 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2652, 29), vars_87087, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2652)
    subscript_call_result_87089 = invoke(stypy.reporting.localization.Localization(__file__, 2652, 29), getitem___87088, n_87086)
    
    # Processing the call keyword arguments (line 2652)
    kwargs_87090 = {}
    # Getting the type of 'isstringarray' (line 2652)
    isstringarray_87085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2652, 15), 'isstringarray', False)
    # Calling isstringarray(args, kwargs) (line 2652)
    isstringarray_call_result_87091 = invoke(stypy.reporting.localization.Localization(__file__, 2652, 15), isstringarray_87085, *[subscript_call_result_87089], **kwargs_87090)
    
    # Testing the type of an if condition (line 2652)
    if_condition_87092 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2652, 12), isstringarray_call_result_87091)
    # Assigning a type to the variable 'if_condition_87092' (line 2652)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2652, 12), 'if_condition_87092', if_condition_87092)
    # SSA begins for if statement (line 2652)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    str_87093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2653, 19), 'str', 'charselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2653)
    n_87094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2653, 42), 'n')
    # Getting the type of 'vars' (line 2653)
    vars_87095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2653, 37), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2653)
    getitem___87096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2653, 37), vars_87095, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2653)
    subscript_call_result_87097 = invoke(stypy.reporting.localization.Localization(__file__, 2653, 37), getitem___87096, n_87094)
    
    # Applying the binary operator 'in' (line 2653)
    result_contains_87098 = python_operator(stypy.reporting.localization.Localization(__file__, 2653, 19), 'in', str_87093, subscript_call_result_87097)
    
    # Testing the type of an if condition (line 2653)
    if_condition_87099 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2653, 16), result_contains_87098)
    # Assigning a type to the variable 'if_condition_87099' (line 2653)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2653, 16), 'if_condition_87099', if_condition_87099)
    # SSA begins for if statement (line 2653)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2654):
    
    # Assigning a Subscript to a Name (line 2654):
    
    # Obtaining the type of the subscript
    str_87100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2654, 32), 'str', 'charselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2654)
    n_87101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2654, 29), 'n')
    # Getting the type of 'vars' (line 2654)
    vars_87102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2654, 24), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2654)
    getitem___87103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2654, 24), vars_87102, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2654)
    subscript_call_result_87104 = invoke(stypy.reporting.localization.Localization(__file__, 2654, 24), getitem___87103, n_87101)
    
    # Obtaining the member '__getitem__' of a type (line 2654)
    getitem___87105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2654, 24), subscript_call_result_87104, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2654)
    subscript_call_result_87106 = invoke(stypy.reporting.localization.Localization(__file__, 2654, 24), getitem___87105, str_87100)
    
    # Assigning a type to the variable 'd' (line 2654)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2654, 20), 'd', subscript_call_result_87106)
    
    
    str_87107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2655, 23), 'str', '*')
    # Getting the type of 'd' (line 2655)
    d_87108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2655, 30), 'd')
    # Applying the binary operator 'in' (line 2655)
    result_contains_87109 = python_operator(stypy.reporting.localization.Localization(__file__, 2655, 23), 'in', str_87107, d_87108)
    
    # Testing the type of an if condition (line 2655)
    if_condition_87110 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2655, 20), result_contains_87109)
    # Assigning a type to the variable 'if_condition_87110' (line 2655)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2655, 20), 'if_condition_87110', if_condition_87110)
    # SSA begins for if statement (line 2655)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2656):
    
    # Assigning a Subscript to a Name (line 2656):
    
    # Obtaining the type of the subscript
    str_87111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2656, 30), 'str', '*')
    # Getting the type of 'd' (line 2656)
    d_87112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2656, 28), 'd')
    # Obtaining the member '__getitem__' of a type (line 2656)
    getitem___87113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2656, 28), d_87112, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2656)
    subscript_call_result_87114 = invoke(stypy.reporting.localization.Localization(__file__, 2656, 28), getitem___87113, str_87111)
    
    # Assigning a type to the variable 'd' (line 2656)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2656, 24), 'd', subscript_call_result_87114)
    
    # Call to errmess(...): (line 2657)
    # Processing the call arguments (line 2657)
    str_87116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2657, 32), 'str', 'analyzevars: character array "character*%s %s(%s)" is considered as "character %s(%s)"; "intent(c)" is forced.\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2658)
    tuple_87117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2658, 35), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2658)
    # Adding element type (line 2658)
    # Getting the type of 'd' (line 2658)
    d_87118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2658, 35), 'd', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2658, 35), tuple_87117, d_87118)
    # Adding element type (line 2658)
    # Getting the type of 'n' (line 2658)
    n_87119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2658, 38), 'n', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2658, 35), tuple_87117, n_87119)
    # Adding element type (line 2658)
    
    # Call to join(...): (line 2659)
    # Processing the call arguments (line 2659)
    
    # Obtaining the type of the subscript
    str_87122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2659, 52), 'str', 'dimension')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2659)
    n_87123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2659, 49), 'n', False)
    # Getting the type of 'vars' (line 2659)
    vars_87124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2659, 44), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2659)
    getitem___87125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2659, 44), vars_87124, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2659)
    subscript_call_result_87126 = invoke(stypy.reporting.localization.Localization(__file__, 2659, 44), getitem___87125, n_87123)
    
    # Obtaining the member '__getitem__' of a type (line 2659)
    getitem___87127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2659, 44), subscript_call_result_87126, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2659)
    subscript_call_result_87128 = invoke(stypy.reporting.localization.Localization(__file__, 2659, 44), getitem___87127, str_87122)
    
    # Processing the call keyword arguments (line 2659)
    kwargs_87129 = {}
    str_87120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2659, 35), 'str', ',')
    # Obtaining the member 'join' of a type (line 2659)
    join_87121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2659, 35), str_87120, 'join')
    # Calling join(args, kwargs) (line 2659)
    join_call_result_87130 = invoke(stypy.reporting.localization.Localization(__file__, 2659, 35), join_87121, *[subscript_call_result_87128], **kwargs_87129)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2658, 35), tuple_87117, join_call_result_87130)
    # Adding element type (line 2658)
    # Getting the type of 'n' (line 2660)
    n_87131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2660, 35), 'n', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2658, 35), tuple_87117, n_87131)
    # Adding element type (line 2658)
    
    # Call to join(...): (line 2660)
    # Processing the call arguments (line 2660)
    
    # Obtaining the type of the subscript
    str_87134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2660, 55), 'str', 'dimension')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2660)
    n_87135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2660, 52), 'n', False)
    # Getting the type of 'vars' (line 2660)
    vars_87136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2660, 47), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2660)
    getitem___87137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2660, 47), vars_87136, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2660)
    subscript_call_result_87138 = invoke(stypy.reporting.localization.Localization(__file__, 2660, 47), getitem___87137, n_87135)
    
    # Obtaining the member '__getitem__' of a type (line 2660)
    getitem___87139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2660, 47), subscript_call_result_87138, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2660)
    subscript_call_result_87140 = invoke(stypy.reporting.localization.Localization(__file__, 2660, 47), getitem___87139, str_87134)
    
    
    # Obtaining an instance of the builtin type 'list' (line 2660)
    list_87141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2660, 70), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2660)
    # Adding element type (line 2660)
    # Getting the type of 'd' (line 2660)
    d_87142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2660, 71), 'd', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2660, 70), list_87141, d_87142)
    
    # Applying the binary operator '+' (line 2660)
    result_add_87143 = python_operator(stypy.reporting.localization.Localization(__file__, 2660, 47), '+', subscript_call_result_87140, list_87141)
    
    # Processing the call keyword arguments (line 2660)
    kwargs_87144 = {}
    str_87132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2660, 38), 'str', ',')
    # Obtaining the member 'join' of a type (line 2660)
    join_87133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2660, 38), str_87132, 'join')
    # Calling join(args, kwargs) (line 2660)
    join_call_result_87145 = invoke(stypy.reporting.localization.Localization(__file__, 2660, 38), join_87133, *[result_add_87143], **kwargs_87144)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2658, 35), tuple_87117, join_call_result_87145)
    
    # Applying the binary operator '%' (line 2657)
    result_mod_87146 = python_operator(stypy.reporting.localization.Localization(__file__, 2657, 32), '%', str_87116, tuple_87117)
    
    # Processing the call keyword arguments (line 2657)
    kwargs_87147 = {}
    # Getting the type of 'errmess' (line 2657)
    errmess_87115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2657, 24), 'errmess', False)
    # Calling errmess(args, kwargs) (line 2657)
    errmess_call_result_87148 = invoke(stypy.reporting.localization.Localization(__file__, 2657, 24), errmess_87115, *[result_mod_87146], **kwargs_87147)
    
    
    # Call to append(...): (line 2661)
    # Processing the call arguments (line 2661)
    # Getting the type of 'd' (line 2661)
    d_87157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2661, 52), 'd', False)
    # Processing the call keyword arguments (line 2661)
    kwargs_87158 = {}
    
    # Obtaining the type of the subscript
    str_87149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2661, 32), 'str', 'dimension')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2661)
    n_87150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2661, 29), 'n', False)
    # Getting the type of 'vars' (line 2661)
    vars_87151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2661, 24), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2661)
    getitem___87152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2661, 24), vars_87151, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2661)
    subscript_call_result_87153 = invoke(stypy.reporting.localization.Localization(__file__, 2661, 24), getitem___87152, n_87150)
    
    # Obtaining the member '__getitem__' of a type (line 2661)
    getitem___87154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2661, 24), subscript_call_result_87153, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2661)
    subscript_call_result_87155 = invoke(stypy.reporting.localization.Localization(__file__, 2661, 24), getitem___87154, str_87149)
    
    # Obtaining the member 'append' of a type (line 2661)
    append_87156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2661, 24), subscript_call_result_87155, 'append')
    # Calling append(args, kwargs) (line 2661)
    append_call_result_87159 = invoke(stypy.reporting.localization.Localization(__file__, 2661, 24), append_87156, *[d_87157], **kwargs_87158)
    
    # Deleting a member
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2662)
    n_87160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2662, 33), 'n')
    # Getting the type of 'vars' (line 2662)
    vars_87161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2662, 28), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2662)
    getitem___87162 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2662, 28), vars_87161, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2662)
    subscript_call_result_87163 = invoke(stypy.reporting.localization.Localization(__file__, 2662, 28), getitem___87162, n_87160)
    
    
    # Obtaining the type of the subscript
    str_87164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2662, 36), 'str', 'charselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2662)
    n_87165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2662, 33), 'n')
    # Getting the type of 'vars' (line 2662)
    vars_87166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2662, 28), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2662)
    getitem___87167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2662, 28), vars_87166, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2662)
    subscript_call_result_87168 = invoke(stypy.reporting.localization.Localization(__file__, 2662, 28), getitem___87167, n_87165)
    
    # Obtaining the member '__getitem__' of a type (line 2662)
    getitem___87169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2662, 28), subscript_call_result_87168, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2662)
    subscript_call_result_87170 = invoke(stypy.reporting.localization.Localization(__file__, 2662, 28), getitem___87169, str_87164)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2662, 24), subscript_call_result_87163, subscript_call_result_87170)
    
    
    str_87171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2663, 27), 'str', 'intent')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2663)
    n_87172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2663, 48), 'n')
    # Getting the type of 'vars' (line 2663)
    vars_87173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2663, 43), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2663)
    getitem___87174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2663, 43), vars_87173, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2663)
    subscript_call_result_87175 = invoke(stypy.reporting.localization.Localization(__file__, 2663, 43), getitem___87174, n_87172)
    
    # Applying the binary operator 'notin' (line 2663)
    result_contains_87176 = python_operator(stypy.reporting.localization.Localization(__file__, 2663, 27), 'notin', str_87171, subscript_call_result_87175)
    
    # Testing the type of an if condition (line 2663)
    if_condition_87177 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2663, 24), result_contains_87176)
    # Assigning a type to the variable 'if_condition_87177' (line 2663)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2663, 24), 'if_condition_87177', if_condition_87177)
    # SSA begins for if statement (line 2663)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Subscript (line 2664):
    
    # Assigning a List to a Subscript (line 2664):
    
    # Obtaining an instance of the builtin type 'list' (line 2664)
    list_87178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2664, 48), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2664)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2664)
    n_87179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2664, 33), 'n')
    # Getting the type of 'vars' (line 2664)
    vars_87180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2664, 28), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2664)
    getitem___87181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2664, 28), vars_87180, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2664)
    subscript_call_result_87182 = invoke(stypy.reporting.localization.Localization(__file__, 2664, 28), getitem___87181, n_87179)
    
    str_87183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2664, 36), 'str', 'intent')
    # Storing an element on a container (line 2664)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2664, 28), subscript_call_result_87182, (str_87183, list_87178))
    # SSA join for if statement (line 2663)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_87184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2665, 27), 'str', 'c')
    
    # Obtaining the type of the subscript
    str_87185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2665, 46), 'str', 'intent')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2665)
    n_87186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2665, 43), 'n')
    # Getting the type of 'vars' (line 2665)
    vars_87187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2665, 38), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2665)
    getitem___87188 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2665, 38), vars_87187, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2665)
    subscript_call_result_87189 = invoke(stypy.reporting.localization.Localization(__file__, 2665, 38), getitem___87188, n_87186)
    
    # Obtaining the member '__getitem__' of a type (line 2665)
    getitem___87190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2665, 38), subscript_call_result_87189, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2665)
    subscript_call_result_87191 = invoke(stypy.reporting.localization.Localization(__file__, 2665, 38), getitem___87190, str_87185)
    
    # Applying the binary operator 'notin' (line 2665)
    result_contains_87192 = python_operator(stypy.reporting.localization.Localization(__file__, 2665, 27), 'notin', str_87184, subscript_call_result_87191)
    
    # Testing the type of an if condition (line 2665)
    if_condition_87193 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2665, 24), result_contains_87192)
    # Assigning a type to the variable 'if_condition_87193' (line 2665)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2665, 24), 'if_condition_87193', if_condition_87193)
    # SSA begins for if statement (line 2665)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2666)
    # Processing the call arguments (line 2666)
    str_87202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2666, 53), 'str', 'c')
    # Processing the call keyword arguments (line 2666)
    kwargs_87203 = {}
    
    # Obtaining the type of the subscript
    str_87194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2666, 36), 'str', 'intent')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2666)
    n_87195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2666, 33), 'n', False)
    # Getting the type of 'vars' (line 2666)
    vars_87196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2666, 28), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2666)
    getitem___87197 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2666, 28), vars_87196, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2666)
    subscript_call_result_87198 = invoke(stypy.reporting.localization.Localization(__file__, 2666, 28), getitem___87197, n_87195)
    
    # Obtaining the member '__getitem__' of a type (line 2666)
    getitem___87199 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2666, 28), subscript_call_result_87198, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2666)
    subscript_call_result_87200 = invoke(stypy.reporting.localization.Localization(__file__, 2666, 28), getitem___87199, str_87194)
    
    # Obtaining the member 'append' of a type (line 2666)
    append_87201 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2666, 28), subscript_call_result_87200, 'append')
    # Calling append(args, kwargs) (line 2666)
    append_call_result_87204 = invoke(stypy.reporting.localization.Localization(__file__, 2666, 28), append_87201, *[str_87202], **kwargs_87203)
    
    # SSA join for if statement (line 2665)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 2655)
    module_type_store.open_ssa_branch('else')
    
    # Call to errmess(...): (line 2668)
    # Processing the call arguments (line 2668)
    str_87206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2669, 28), 'str', 'analyzevars: charselector=%r unhandled.')
    # Getting the type of 'd' (line 2669)
    d_87207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2669, 73), 'd', False)
    # Applying the binary operator '%' (line 2669)
    result_mod_87208 = python_operator(stypy.reporting.localization.Localization(__file__, 2669, 28), '%', str_87206, d_87207)
    
    # Processing the call keyword arguments (line 2668)
    kwargs_87209 = {}
    # Getting the type of 'errmess' (line 2668)
    errmess_87205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2668, 24), 'errmess', False)
    # Calling errmess(args, kwargs) (line 2668)
    errmess_call_result_87210 = invoke(stypy.reporting.localization.Localization(__file__, 2668, 24), errmess_87205, *[result_mod_87208], **kwargs_87209)
    
    # SSA join for if statement (line 2655)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2653)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2652)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2647)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    str_87211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2670, 11), 'str', 'check')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2670)
    n_87212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2670, 31), 'n')
    # Getting the type of 'vars' (line 2670)
    vars_87213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2670, 26), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2670)
    getitem___87214 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2670, 26), vars_87213, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2670)
    subscript_call_result_87215 = invoke(stypy.reporting.localization.Localization(__file__, 2670, 26), getitem___87214, n_87212)
    
    # Applying the binary operator 'notin' (line 2670)
    result_contains_87216 = python_operator(stypy.reporting.localization.Localization(__file__, 2670, 11), 'notin', str_87211, subscript_call_result_87215)
    
    
    str_87217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2670, 38), 'str', 'args')
    # Getting the type of 'block' (line 2670)
    block_87218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2670, 48), 'block')
    # Applying the binary operator 'in' (line 2670)
    result_contains_87219 = python_operator(stypy.reporting.localization.Localization(__file__, 2670, 38), 'in', str_87217, block_87218)
    
    # Applying the binary operator 'and' (line 2670)
    result_and_keyword_87220 = python_operator(stypy.reporting.localization.Localization(__file__, 2670, 11), 'and', result_contains_87216, result_contains_87219)
    
    # Getting the type of 'n' (line 2670)
    n_87221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2670, 58), 'n')
    
    # Obtaining the type of the subscript
    str_87222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2670, 69), 'str', 'args')
    # Getting the type of 'block' (line 2670)
    block_87223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2670, 63), 'block')
    # Obtaining the member '__getitem__' of a type (line 2670)
    getitem___87224 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2670, 63), block_87223, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2670)
    subscript_call_result_87225 = invoke(stypy.reporting.localization.Localization(__file__, 2670, 63), getitem___87224, str_87222)
    
    # Applying the binary operator 'in' (line 2670)
    result_contains_87226 = python_operator(stypy.reporting.localization.Localization(__file__, 2670, 58), 'in', n_87221, subscript_call_result_87225)
    
    # Applying the binary operator 'and' (line 2670)
    result_and_keyword_87227 = python_operator(stypy.reporting.localization.Localization(__file__, 2670, 11), 'and', result_and_keyword_87220, result_contains_87226)
    
    # Testing the type of an if condition (line 2670)
    if_condition_87228 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2670, 8), result_and_keyword_87227)
    # Assigning a type to the variable 'if_condition_87228' (line 2670)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2670, 8), 'if_condition_87228', if_condition_87228)
    # SSA begins for if statement (line 2670)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Compare to a Name (line 2671):
    
    # Assigning a Compare to a Name (line 2671):
    
    str_87229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2671, 19), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2671)
    n_87230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2671, 40), 'n')
    # Getting the type of 'vars' (line 2671)
    vars_87231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2671, 35), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2671)
    getitem___87232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2671, 35), vars_87231, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2671)
    subscript_call_result_87233 = invoke(stypy.reporting.localization.Localization(__file__, 2671, 35), getitem___87232, n_87230)
    
    # Applying the binary operator 'notin' (line 2671)
    result_contains_87234 = python_operator(stypy.reporting.localization.Localization(__file__, 2671, 19), 'notin', str_87229, subscript_call_result_87233)
    
    # Assigning a type to the variable 'flag' (line 2671)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2671, 12), 'flag', result_contains_87234)
    
    # Getting the type of 'flag' (line 2672)
    flag_87235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2672, 15), 'flag')
    # Testing the type of an if condition (line 2672)
    if_condition_87236 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2672, 12), flag_87235)
    # Assigning a type to the variable 'if_condition_87236' (line 2672)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2672, 12), 'if_condition_87236', if_condition_87236)
    # SSA begins for if statement (line 2672)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Subscript (line 2673):
    
    # Assigning a List to a Subscript (line 2673):
    
    # Obtaining an instance of the builtin type 'list' (line 2673)
    list_87237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2673, 36), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2673)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2673)
    n_87238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2673, 21), 'n')
    # Getting the type of 'vars' (line 2673)
    vars_87239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2673, 16), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2673)
    getitem___87240 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2673, 16), vars_87239, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2673)
    subscript_call_result_87241 = invoke(stypy.reporting.localization.Localization(__file__, 2673, 16), getitem___87240, n_87238)
    
    str_87242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2673, 24), 'str', 'depend')
    # Storing an element on a container (line 2673)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2673, 16), subscript_call_result_87241, (str_87242, list_87237))
    # SSA join for if statement (line 2672)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a List to a Subscript (line 2674):
    
    # Assigning a List to a Subscript (line 2674):
    
    # Obtaining an instance of the builtin type 'list' (line 2674)
    list_87243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2674, 31), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2674)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2674)
    n_87244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2674, 17), 'n')
    # Getting the type of 'vars' (line 2674)
    vars_87245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2674, 12), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2674)
    getitem___87246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2674, 12), vars_87245, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2674)
    subscript_call_result_87247 = invoke(stypy.reporting.localization.Localization(__file__, 2674, 12), getitem___87246, n_87244)
    
    str_87248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2674, 20), 'str', 'check')
    # Storing an element on a container (line 2674)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2674, 12), subscript_call_result_87247, (str_87248, list_87243))
    
    
    str_87249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2675, 15), 'str', 'dimension')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2675)
    n_87250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2675, 35), 'n')
    # Getting the type of 'vars' (line 2675)
    vars_87251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2675, 30), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2675)
    getitem___87252 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2675, 30), vars_87251, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2675)
    subscript_call_result_87253 = invoke(stypy.reporting.localization.Localization(__file__, 2675, 30), getitem___87252, n_87250)
    
    # Applying the binary operator 'in' (line 2675)
    result_contains_87254 = python_operator(stypy.reporting.localization.Localization(__file__, 2675, 15), 'in', str_87249, subscript_call_result_87253)
    
    # Testing the type of an if condition (line 2675)
    if_condition_87255 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2675, 12), result_contains_87254)
    # Assigning a type to the variable 'if_condition_87255' (line 2675)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2675, 12), 'if_condition_87255', if_condition_87255)
    # SSA begins for if statement (line 2675)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 2677):
    
    # Assigning a Num to a Name (line 2677):
    int_87256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2677, 20), 'int')
    # Assigning a type to the variable 'i' (line 2677)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2677, 16), 'i', int_87256)
    
    # Assigning a Call to a Name (line 2678):
    
    # Assigning a Call to a Name (line 2678):
    
    # Call to len(...): (line 2678)
    # Processing the call arguments (line 2678)
    
    # Obtaining the type of the subscript
    str_87258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2678, 33), 'str', 'dimension')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2678)
    n_87259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2678, 30), 'n', False)
    # Getting the type of 'vars' (line 2678)
    vars_87260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2678, 25), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2678)
    getitem___87261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2678, 25), vars_87260, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2678)
    subscript_call_result_87262 = invoke(stypy.reporting.localization.Localization(__file__, 2678, 25), getitem___87261, n_87259)
    
    # Obtaining the member '__getitem__' of a type (line 2678)
    getitem___87263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2678, 25), subscript_call_result_87262, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2678)
    subscript_call_result_87264 = invoke(stypy.reporting.localization.Localization(__file__, 2678, 25), getitem___87263, str_87258)
    
    # Processing the call keyword arguments (line 2678)
    kwargs_87265 = {}
    # Getting the type of 'len' (line 2678)
    len_87257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2678, 21), 'len', False)
    # Calling len(args, kwargs) (line 2678)
    len_call_result_87266 = invoke(stypy.reporting.localization.Localization(__file__, 2678, 21), len_87257, *[subscript_call_result_87264], **kwargs_87265)
    
    # Assigning a type to the variable 'ni' (line 2678)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2678, 16), 'ni', len_call_result_87266)
    
    
    # Obtaining the type of the subscript
    str_87267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2679, 33), 'str', 'dimension')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2679)
    n_87268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2679, 30), 'n')
    # Getting the type of 'vars' (line 2679)
    vars_87269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2679, 25), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2679)
    getitem___87270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2679, 25), vars_87269, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2679)
    subscript_call_result_87271 = invoke(stypy.reporting.localization.Localization(__file__, 2679, 25), getitem___87270, n_87268)
    
    # Obtaining the member '__getitem__' of a type (line 2679)
    getitem___87272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2679, 25), subscript_call_result_87271, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2679)
    subscript_call_result_87273 = invoke(stypy.reporting.localization.Localization(__file__, 2679, 25), getitem___87272, str_87267)
    
    # Testing the type of a for loop iterable (line 2679)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2679, 16), subscript_call_result_87273)
    # Getting the type of the for loop variable (line 2679)
    for_loop_var_87274 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2679, 16), subscript_call_result_87273)
    # Assigning a type to the variable 'd' (line 2679)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2679, 16), 'd', for_loop_var_87274)
    # SSA begins for a for statement (line 2679)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a List to a Name (line 2680):
    
    # Assigning a List to a Name (line 2680):
    
    # Obtaining an instance of the builtin type 'list' (line 2680)
    list_87275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2680, 28), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2680)
    
    # Assigning a type to the variable 'ddeps' (line 2680)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2680, 20), 'ddeps', list_87275)
    
    # Assigning a Str to a Name (line 2681):
    
    # Assigning a Str to a Name (line 2681):
    str_87276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2681, 25), 'str', '')
    # Assigning a type to the variable 'ad' (line 2681)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2681, 20), 'ad', str_87276)
    
    # Assigning a Str to a Name (line 2682):
    
    # Assigning a Str to a Name (line 2682):
    str_87277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2682, 25), 'str', '')
    # Assigning a type to the variable 'pd' (line 2682)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2682, 20), 'pd', str_87277)
    
    
    # Getting the type of 'd' (line 2683)
    d_87278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2683, 23), 'd')
    # Getting the type of 'vars' (line 2683)
    vars_87279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2683, 32), 'vars')
    # Applying the binary operator 'notin' (line 2683)
    result_contains_87280 = python_operator(stypy.reporting.localization.Localization(__file__, 2683, 23), 'notin', d_87278, vars_87279)
    
    # Testing the type of an if condition (line 2683)
    if_condition_87281 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2683, 20), result_contains_87280)
    # Assigning a type to the variable 'if_condition_87281' (line 2683)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2683, 20), 'if_condition_87281', if_condition_87281)
    # SSA begins for if statement (line 2683)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'd' (line 2684)
    d_87282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2684, 27), 'd')
    # Getting the type of 'savelindims' (line 2684)
    savelindims_87283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2684, 32), 'savelindims')
    # Applying the binary operator 'in' (line 2684)
    result_contains_87284 = python_operator(stypy.reporting.localization.Localization(__file__, 2684, 27), 'in', d_87282, savelindims_87283)
    
    # Testing the type of an if condition (line 2684)
    if_condition_87285 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2684, 24), result_contains_87284)
    # Assigning a type to the variable 'if_condition_87285' (line 2684)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2684, 24), 'if_condition_87285', if_condition_87285)
    # SSA begins for if statement (line 2684)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Tuple to a Tuple (line 2685):
    
    # Assigning a Str to a Name (line 2685):
    str_87286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2685, 37), 'str', '(')
    # Assigning a type to the variable 'tuple_assignment_75821' (line 2685)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2685, 28), 'tuple_assignment_75821', str_87286)
    
    # Assigning a Subscript to a Name (line 2685):
    
    # Obtaining the type of the subscript
    int_87287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2685, 57), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2685)
    d_87288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2685, 54), 'd')
    # Getting the type of 'savelindims' (line 2685)
    savelindims_87289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2685, 42), 'savelindims')
    # Obtaining the member '__getitem__' of a type (line 2685)
    getitem___87290 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2685, 42), savelindims_87289, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2685)
    subscript_call_result_87291 = invoke(stypy.reporting.localization.Localization(__file__, 2685, 42), getitem___87290, d_87288)
    
    # Obtaining the member '__getitem__' of a type (line 2685)
    getitem___87292 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2685, 42), subscript_call_result_87291, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2685)
    subscript_call_result_87293 = invoke(stypy.reporting.localization.Localization(__file__, 2685, 42), getitem___87292, int_87287)
    
    # Assigning a type to the variable 'tuple_assignment_75822' (line 2685)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2685, 28), 'tuple_assignment_75822', subscript_call_result_87293)
    
    # Assigning a Name to a Name (line 2685):
    # Getting the type of 'tuple_assignment_75821' (line 2685)
    tuple_assignment_75821_87294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2685, 28), 'tuple_assignment_75821')
    # Assigning a type to the variable 'pd' (line 2685)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2685, 28), 'pd', tuple_assignment_75821_87294)
    
    # Assigning a Name to a Name (line 2685):
    # Getting the type of 'tuple_assignment_75822' (line 2685)
    tuple_assignment_75822_87295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2685, 28), 'tuple_assignment_75822')
    # Assigning a type to the variable 'ad' (line 2685)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2685, 32), 'ad', tuple_assignment_75822_87295)
    
    # Assigning a Subscript to a Name (line 2686):
    
    # Assigning a Subscript to a Name (line 2686):
    
    # Obtaining the type of the subscript
    int_87296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2686, 47), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2686)
    d_87297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2686, 44), 'd')
    # Getting the type of 'savelindims' (line 2686)
    savelindims_87298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2686, 32), 'savelindims')
    # Obtaining the member '__getitem__' of a type (line 2686)
    getitem___87299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2686, 32), savelindims_87298, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2686)
    subscript_call_result_87300 = invoke(stypy.reporting.localization.Localization(__file__, 2686, 32), getitem___87299, d_87297)
    
    # Obtaining the member '__getitem__' of a type (line 2686)
    getitem___87301 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2686, 32), subscript_call_result_87300, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2686)
    subscript_call_result_87302 = invoke(stypy.reporting.localization.Localization(__file__, 2686, 32), getitem___87301, int_87296)
    
    # Assigning a type to the variable 'd' (line 2686)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2686, 28), 'd', subscript_call_result_87302)
    # SSA branch for the else part of an if statement (line 2684)
    module_type_store.open_ssa_branch('else')
    
    
    # Obtaining the type of the subscript
    str_87303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2688, 43), 'str', 'args')
    # Getting the type of 'block' (line 2688)
    block_87304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2688, 37), 'block')
    # Obtaining the member '__getitem__' of a type (line 2688)
    getitem___87305 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2688, 37), block_87304, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2688)
    subscript_call_result_87306 = invoke(stypy.reporting.localization.Localization(__file__, 2688, 37), getitem___87305, str_87303)
    
    # Testing the type of a for loop iterable (line 2688)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2688, 28), subscript_call_result_87306)
    # Getting the type of the for loop variable (line 2688)
    for_loop_var_87307 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2688, 28), subscript_call_result_87306)
    # Assigning a type to the variable 'r' (line 2688)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2688, 28), 'r', for_loop_var_87307)
    # SSA begins for a for statement (line 2688)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'r' (line 2689)
    r_87308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2689, 35), 'r')
    # Getting the type of 'vars' (line 2689)
    vars_87309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2689, 44), 'vars')
    # Applying the binary operator 'notin' (line 2689)
    result_contains_87310 = python_operator(stypy.reporting.localization.Localization(__file__, 2689, 35), 'notin', r_87308, vars_87309)
    
    # Testing the type of an if condition (line 2689)
    if_condition_87311 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2689, 32), result_contains_87310)
    # Assigning a type to the variable 'if_condition_87311' (line 2689)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2689, 32), 'if_condition_87311', if_condition_87311)
    # SSA begins for if statement (line 2689)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 2689)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to match(...): (line 2691)
    # Processing the call arguments (line 2691)
    str_87314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2691, 44), 'str', '.*?\\b')
    # Getting the type of 'r' (line 2691)
    r_87315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2691, 55), 'r', False)
    # Applying the binary operator '+' (line 2691)
    result_add_87316 = python_operator(stypy.reporting.localization.Localization(__file__, 2691, 44), '+', str_87314, r_87315)
    
    str_87317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2691, 59), 'str', '\\b')
    # Applying the binary operator '+' (line 2691)
    result_add_87318 = python_operator(stypy.reporting.localization.Localization(__file__, 2691, 57), '+', result_add_87316, str_87317)
    
    # Getting the type of 'd' (line 2691)
    d_87319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2691, 66), 'd', False)
    # Getting the type of 're' (line 2691)
    re_87320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2691, 69), 're', False)
    # Obtaining the member 'I' of a type (line 2691)
    I_87321 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2691, 69), re_87320, 'I')
    # Processing the call keyword arguments (line 2691)
    kwargs_87322 = {}
    # Getting the type of 're' (line 2691)
    re_87312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2691, 35), 're', False)
    # Obtaining the member 'match' of a type (line 2691)
    match_87313 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2691, 35), re_87312, 'match')
    # Calling match(args, kwargs) (line 2691)
    match_call_result_87323 = invoke(stypy.reporting.localization.Localization(__file__, 2691, 35), match_87313, *[result_add_87318, d_87319, I_87321], **kwargs_87322)
    
    # Testing the type of an if condition (line 2691)
    if_condition_87324 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2691, 32), match_call_result_87323)
    # Assigning a type to the variable 'if_condition_87324' (line 2691)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2691, 32), 'if_condition_87324', if_condition_87324)
    # SSA begins for if statement (line 2691)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2692)
    # Processing the call arguments (line 2692)
    # Getting the type of 'r' (line 2692)
    r_87327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2692, 49), 'r', False)
    # Processing the call keyword arguments (line 2692)
    kwargs_87328 = {}
    # Getting the type of 'ddeps' (line 2692)
    ddeps_87325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2692, 36), 'ddeps', False)
    # Obtaining the member 'append' of a type (line 2692)
    append_87326 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2692, 36), ddeps_87325, 'append')
    # Calling append(args, kwargs) (line 2692)
    append_call_result_87329 = invoke(stypy.reporting.localization.Localization(__file__, 2692, 36), append_87326, *[r_87327], **kwargs_87328)
    
    # SSA join for if statement (line 2691)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2684)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2683)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'd' (line 2693)
    d_87330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2693, 23), 'd')
    # Getting the type of 'vars' (line 2693)
    vars_87331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2693, 28), 'vars')
    # Applying the binary operator 'in' (line 2693)
    result_contains_87332 = python_operator(stypy.reporting.localization.Localization(__file__, 2693, 23), 'in', d_87330, vars_87331)
    
    # Testing the type of an if condition (line 2693)
    if_condition_87333 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2693, 20), result_contains_87332)
    # Assigning a type to the variable 'if_condition_87333' (line 2693)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2693, 20), 'if_condition_87333', if_condition_87333)
    # SSA begins for if statement (line 2693)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    str_87334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2694, 27), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2694)
    d_87335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2694, 46), 'd')
    # Getting the type of 'vars' (line 2694)
    vars_87336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2694, 41), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2694)
    getitem___87337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2694, 41), vars_87336, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2694)
    subscript_call_result_87338 = invoke(stypy.reporting.localization.Localization(__file__, 2694, 41), getitem___87337, d_87335)
    
    # Applying the binary operator 'in' (line 2694)
    result_contains_87339 = python_operator(stypy.reporting.localization.Localization(__file__, 2694, 27), 'in', str_87334, subscript_call_result_87338)
    
    # Testing the type of an if condition (line 2694)
    if_condition_87340 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2694, 24), result_contains_87339)
    # Assigning a type to the variable 'if_condition_87340' (line 2694)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2694, 24), 'if_condition_87340', if_condition_87340)
    # SSA begins for if statement (line 2694)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Obtaining the type of the subscript
    str_87341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2695, 46), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2695)
    d_87342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2695, 43), 'd')
    # Getting the type of 'vars' (line 2695)
    vars_87343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2695, 38), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2695)
    getitem___87344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2695, 38), vars_87343, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2695)
    subscript_call_result_87345 = invoke(stypy.reporting.localization.Localization(__file__, 2695, 38), getitem___87344, d_87342)
    
    # Obtaining the member '__getitem__' of a type (line 2695)
    getitem___87346 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2695, 38), subscript_call_result_87345, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2695)
    subscript_call_result_87347 = invoke(stypy.reporting.localization.Localization(__file__, 2695, 38), getitem___87346, str_87341)
    
    # Testing the type of a for loop iterable (line 2695)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2695, 28), subscript_call_result_87347)
    # Getting the type of the for loop variable (line 2695)
    for_loop_var_87348 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2695, 28), subscript_call_result_87347)
    # Assigning a type to the variable 'aa' (line 2695)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2695, 28), 'aa', for_loop_var_87348)
    # SSA begins for a for statement (line 2695)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Obtaining the type of the subscript
    int_87349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2696, 39), 'int')
    slice_87350 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2696, 35), None, int_87349, None)
    # Getting the type of 'aa' (line 2696)
    aa_87351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2696, 35), 'aa')
    # Obtaining the member '__getitem__' of a type (line 2696)
    getitem___87352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2696, 35), aa_87351, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2696)
    subscript_call_result_87353 = invoke(stypy.reporting.localization.Localization(__file__, 2696, 35), getitem___87352, slice_87350)
    
    str_87354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2696, 45), 'str', 'depend')
    # Applying the binary operator '==' (line 2696)
    result_eq_87355 = python_operator(stypy.reporting.localization.Localization(__file__, 2696, 35), '==', subscript_call_result_87353, str_87354)
    
    # Testing the type of an if condition (line 2696)
    if_condition_87356 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2696, 32), result_eq_87355)
    # Assigning a type to the variable 'if_condition_87356' (line 2696)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2696, 32), 'if_condition_87356', if_condition_87356)
    # SSA begins for if statement (line 2696)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'ddeps' (line 2697)
    ddeps_87357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2697, 36), 'ddeps')
    
    # Call to split(...): (line 2697)
    # Processing the call arguments (line 2697)
    str_87372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2697, 72), 'str', ',')
    # Processing the call keyword arguments (line 2697)
    kwargs_87373 = {}
    
    # Obtaining the type of the subscript
    int_87358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2697, 60), 'int')
    int_87359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2697, 62), 'int')
    slice_87360 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2697, 45), int_87358, int_87359, None)
    
    # Call to strip(...): (line 2697)
    # Processing the call keyword arguments (line 2697)
    kwargs_87367 = {}
    
    # Obtaining the type of the subscript
    int_87361 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2697, 48), 'int')
    slice_87362 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2697, 45), int_87361, None, None)
    # Getting the type of 'aa' (line 2697)
    aa_87363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2697, 45), 'aa', False)
    # Obtaining the member '__getitem__' of a type (line 2697)
    getitem___87364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2697, 45), aa_87363, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2697)
    subscript_call_result_87365 = invoke(stypy.reporting.localization.Localization(__file__, 2697, 45), getitem___87364, slice_87362)
    
    # Obtaining the member 'strip' of a type (line 2697)
    strip_87366 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2697, 45), subscript_call_result_87365, 'strip')
    # Calling strip(args, kwargs) (line 2697)
    strip_call_result_87368 = invoke(stypy.reporting.localization.Localization(__file__, 2697, 45), strip_87366, *[], **kwargs_87367)
    
    # Obtaining the member '__getitem__' of a type (line 2697)
    getitem___87369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2697, 45), strip_call_result_87368, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2697)
    subscript_call_result_87370 = invoke(stypy.reporting.localization.Localization(__file__, 2697, 45), getitem___87369, slice_87360)
    
    # Obtaining the member 'split' of a type (line 2697)
    split_87371 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2697, 45), subscript_call_result_87370, 'split')
    # Calling split(args, kwargs) (line 2697)
    split_call_result_87374 = invoke(stypy.reporting.localization.Localization(__file__, 2697, 45), split_87371, *[str_87372], **kwargs_87373)
    
    # Applying the binary operator '+=' (line 2697)
    result_iadd_87375 = python_operator(stypy.reporting.localization.Localization(__file__, 2697, 36), '+=', ddeps_87357, split_call_result_87374)
    # Assigning a type to the variable 'ddeps' (line 2697)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2697, 36), 'ddeps', result_iadd_87375)
    
    # SSA join for if statement (line 2696)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2694)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_87376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2698, 27), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2698)
    d_87377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2698, 44), 'd')
    # Getting the type of 'vars' (line 2698)
    vars_87378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2698, 39), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2698)
    getitem___87379 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2698, 39), vars_87378, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2698)
    subscript_call_result_87380 = invoke(stypy.reporting.localization.Localization(__file__, 2698, 39), getitem___87379, d_87377)
    
    # Applying the binary operator 'in' (line 2698)
    result_contains_87381 = python_operator(stypy.reporting.localization.Localization(__file__, 2698, 27), 'in', str_87376, subscript_call_result_87380)
    
    # Testing the type of an if condition (line 2698)
    if_condition_87382 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2698, 24), result_contains_87381)
    # Assigning a type to the variable 'if_condition_87382' (line 2698)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2698, 24), 'if_condition_87382', if_condition_87382)
    # SSA begins for if statement (line 2698)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 2699):
    
    # Assigning a BinOp to a Name (line 2699):
    # Getting the type of 'ddeps' (line 2699)
    ddeps_87383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2699, 36), 'ddeps')
    
    # Obtaining the type of the subscript
    str_87384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2699, 52), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2699)
    d_87385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2699, 49), 'd')
    # Getting the type of 'vars' (line 2699)
    vars_87386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2699, 44), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2699)
    getitem___87387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2699, 44), vars_87386, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2699)
    subscript_call_result_87388 = invoke(stypy.reporting.localization.Localization(__file__, 2699, 44), getitem___87387, d_87385)
    
    # Obtaining the member '__getitem__' of a type (line 2699)
    getitem___87389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2699, 44), subscript_call_result_87388, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2699)
    subscript_call_result_87390 = invoke(stypy.reporting.localization.Localization(__file__, 2699, 44), getitem___87389, str_87384)
    
    # Applying the binary operator '+' (line 2699)
    result_add_87391 = python_operator(stypy.reporting.localization.Localization(__file__, 2699, 36), '+', ddeps_87383, subscript_call_result_87390)
    
    # Assigning a type to the variable 'ddeps' (line 2699)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2699, 28), 'ddeps', result_add_87391)
    # SSA join for if statement (line 2698)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2693)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 2700):
    
    # Assigning a BinOp to a Name (line 2700):
    # Getting the type of 'i' (line 2700)
    i_87392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2700, 24), 'i')
    int_87393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2700, 28), 'int')
    # Applying the binary operator '+' (line 2700)
    result_add_87394 = python_operator(stypy.reporting.localization.Localization(__file__, 2700, 24), '+', i_87392, int_87393)
    
    # Assigning a type to the variable 'i' (line 2700)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2700, 20), 'i', result_add_87394)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'd' (line 2701)
    d_87395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2701, 23), 'd')
    # Getting the type of 'vars' (line 2701)
    vars_87396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2701, 28), 'vars')
    # Applying the binary operator 'in' (line 2701)
    result_contains_87397 = python_operator(stypy.reporting.localization.Localization(__file__, 2701, 23), 'in', d_87395, vars_87396)
    
    
    str_87398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2701, 38), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2701)
    d_87399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2701, 59), 'd')
    # Getting the type of 'vars' (line 2701)
    vars_87400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2701, 54), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2701)
    getitem___87401 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2701, 54), vars_87400, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2701)
    subscript_call_result_87402 = invoke(stypy.reporting.localization.Localization(__file__, 2701, 54), getitem___87401, d_87399)
    
    # Applying the binary operator 'notin' (line 2701)
    result_contains_87403 = python_operator(stypy.reporting.localization.Localization(__file__, 2701, 38), 'notin', str_87398, subscript_call_result_87402)
    
    # Applying the binary operator 'and' (line 2701)
    result_and_keyword_87404 = python_operator(stypy.reporting.localization.Localization(__file__, 2701, 23), 'and', result_contains_87397, result_contains_87403)
    
    str_87405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2702, 28), 'str', '=')
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2702)
    d_87406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2702, 44), 'd')
    # Getting the type of 'vars' (line 2702)
    vars_87407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2702, 39), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2702)
    getitem___87408 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2702, 39), vars_87407, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2702)
    subscript_call_result_87409 = invoke(stypy.reporting.localization.Localization(__file__, 2702, 39), getitem___87408, d_87406)
    
    # Applying the binary operator 'notin' (line 2702)
    result_contains_87410 = python_operator(stypy.reporting.localization.Localization(__file__, 2702, 28), 'notin', str_87405, subscript_call_result_87409)
    
    # Applying the binary operator 'and' (line 2701)
    result_and_keyword_87411 = python_operator(stypy.reporting.localization.Localization(__file__, 2701, 23), 'and', result_and_keyword_87404, result_contains_87410)
    
    # Getting the type of 'd' (line 2702)
    d_87412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2702, 53), 'd')
    
    # Obtaining the type of the subscript
    str_87413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2702, 70), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2702)
    n_87414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2702, 67), 'n')
    # Getting the type of 'vars' (line 2702)
    vars_87415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2702, 62), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2702)
    getitem___87416 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2702, 62), vars_87415, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2702)
    subscript_call_result_87417 = invoke(stypy.reporting.localization.Localization(__file__, 2702, 62), getitem___87416, n_87414)
    
    # Obtaining the member '__getitem__' of a type (line 2702)
    getitem___87418 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2702, 62), subscript_call_result_87417, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2702)
    subscript_call_result_87419 = invoke(stypy.reporting.localization.Localization(__file__, 2702, 62), getitem___87418, str_87413)
    
    # Applying the binary operator 'notin' (line 2702)
    result_contains_87420 = python_operator(stypy.reporting.localization.Localization(__file__, 2702, 53), 'notin', d_87412, subscript_call_result_87419)
    
    # Applying the binary operator 'and' (line 2701)
    result_and_keyword_87421 = python_operator(stypy.reporting.localization.Localization(__file__, 2701, 23), 'and', result_and_keyword_87411, result_contains_87420)
    
    # Call to (...): (line 2703)
    # Processing the call arguments (line 2703)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2703)
    n_87428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2703, 84), 'n', False)
    # Getting the type of 'vars' (line 2703)
    vars_87429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2703, 79), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2703)
    getitem___87430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2703, 79), vars_87429, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2703)
    subscript_call_result_87431 = invoke(stypy.reporting.localization.Localization(__file__, 2703, 79), getitem___87430, n_87428)
    
    # Processing the call keyword arguments (line 2703)
    kwargs_87432 = {}
    
    # Call to l_or(...): (line 2703)
    # Processing the call arguments (line 2703)
    # Getting the type of 'isintent_in' (line 2703)
    isintent_in_87423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2703, 32), 'isintent_in', False)
    # Getting the type of 'isintent_inout' (line 2703)
    isintent_inout_87424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2703, 45), 'isintent_inout', False)
    # Getting the type of 'isintent_inplace' (line 2703)
    isintent_inplace_87425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2703, 61), 'isintent_inplace', False)
    # Processing the call keyword arguments (line 2703)
    kwargs_87426 = {}
    # Getting the type of 'l_or' (line 2703)
    l_or_87422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2703, 27), 'l_or', False)
    # Calling l_or(args, kwargs) (line 2703)
    l_or_call_result_87427 = invoke(stypy.reporting.localization.Localization(__file__, 2703, 27), l_or_87422, *[isintent_in_87423, isintent_inout_87424, isintent_inplace_87425], **kwargs_87426)
    
    # Calling (args, kwargs) (line 2703)
    _call_result_87433 = invoke(stypy.reporting.localization.Localization(__file__, 2703, 27), l_or_call_result_87427, *[subscript_call_result_87431], **kwargs_87432)
    
    # Applying the binary operator 'and' (line 2701)
    result_and_keyword_87434 = python_operator(stypy.reporting.localization.Localization(__file__, 2701, 23), 'and', result_and_keyword_87421, _call_result_87433)
    
    # Testing the type of an if condition (line 2701)
    if_condition_87435 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2701, 20), result_and_keyword_87434)
    # Assigning a type to the variable 'if_condition_87435' (line 2701)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2701, 20), 'if_condition_87435', if_condition_87435)
    # SSA begins for if statement (line 2701)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Subscript (line 2704):
    
    # Assigning a List to a Subscript (line 2704):
    
    # Obtaining an instance of the builtin type 'list' (line 2704)
    list_87436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2704, 44), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2704)
    # Adding element type (line 2704)
    # Getting the type of 'n' (line 2704)
    n_87437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2704, 45), 'n')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2704, 44), list_87436, n_87437)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2704)
    d_87438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2704, 29), 'd')
    # Getting the type of 'vars' (line 2704)
    vars_87439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2704, 24), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2704)
    getitem___87440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2704, 24), vars_87439, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2704)
    subscript_call_result_87441 = invoke(stypy.reporting.localization.Localization(__file__, 2704, 24), getitem___87440, d_87438)
    
    str_87442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2704, 32), 'str', 'depend')
    # Storing an element on a container (line 2704)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2704, 24), subscript_call_result_87441, (str_87442, list_87436))
    
    
    # Getting the type of 'ni' (line 2705)
    ni_87443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2705, 27), 'ni')
    int_87444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2705, 32), 'int')
    # Applying the binary operator '>' (line 2705)
    result_gt_87445 = python_operator(stypy.reporting.localization.Localization(__file__, 2705, 27), '>', ni_87443, int_87444)
    
    # Testing the type of an if condition (line 2705)
    if_condition_87446 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2705, 24), result_gt_87445)
    # Assigning a type to the variable 'if_condition_87446' (line 2705)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2705, 24), 'if_condition_87446', if_condition_87446)
    # SSA begins for if statement (line 2705)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Subscript (line 2706):
    
    # Assigning a BinOp to a Subscript (line 2706):
    str_87447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2706, 43), 'str', '%s%s(%s,%s)%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2707)
    tuple_87448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2707, 32), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2707)
    # Adding element type (line 2707)
    # Getting the type of 'pd' (line 2707)
    pd_87449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2707, 32), 'pd')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2707, 32), tuple_87448, pd_87449)
    # Adding element type (line 2707)
    # Getting the type of 'shape_macro' (line 2707)
    shape_macro_87450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2707, 36), 'shape_macro')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2707, 32), tuple_87448, shape_macro_87450)
    # Adding element type (line 2707)
    # Getting the type of 'n' (line 2707)
    n_87451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2707, 49), 'n')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2707, 32), tuple_87448, n_87451)
    # Adding element type (line 2707)
    # Getting the type of 'i' (line 2707)
    i_87452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2707, 52), 'i')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2707, 32), tuple_87448, i_87452)
    # Adding element type (line 2707)
    # Getting the type of 'ad' (line 2707)
    ad_87453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2707, 55), 'ad')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2707, 32), tuple_87448, ad_87453)
    
    # Applying the binary operator '%' (line 2706)
    result_mod_87454 = python_operator(stypy.reporting.localization.Localization(__file__, 2706, 43), '%', str_87447, tuple_87448)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2706)
    d_87455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2706, 33), 'd')
    # Getting the type of 'vars' (line 2706)
    vars_87456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2706, 28), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2706)
    getitem___87457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2706, 28), vars_87456, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2706)
    subscript_call_result_87458 = invoke(stypy.reporting.localization.Localization(__file__, 2706, 28), getitem___87457, d_87455)
    
    str_87459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2706, 36), 'str', '=')
    # Storing an element on a container (line 2706)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2706, 28), subscript_call_result_87458, (str_87459, result_mod_87454))
    # SSA branch for the else part of an if statement (line 2705)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Subscript (line 2709):
    
    # Assigning a BinOp to a Subscript (line 2709):
    str_87460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2709, 43), 'str', '%slen(%s)%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2709)
    tuple_87461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2709, 60), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2709)
    # Adding element type (line 2709)
    # Getting the type of 'pd' (line 2709)
    pd_87462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2709, 60), 'pd')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2709, 60), tuple_87461, pd_87462)
    # Adding element type (line 2709)
    # Getting the type of 'n' (line 2709)
    n_87463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2709, 64), 'n')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2709, 60), tuple_87461, n_87463)
    # Adding element type (line 2709)
    # Getting the type of 'ad' (line 2709)
    ad_87464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2709, 67), 'ad')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2709, 60), tuple_87461, ad_87464)
    
    # Applying the binary operator '%' (line 2709)
    result_mod_87465 = python_operator(stypy.reporting.localization.Localization(__file__, 2709, 43), '%', str_87460, tuple_87461)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2709)
    d_87466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2709, 33), 'd')
    # Getting the type of 'vars' (line 2709)
    vars_87467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2709, 28), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2709)
    getitem___87468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2709, 28), vars_87467, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2709)
    subscript_call_result_87469 = invoke(stypy.reporting.localization.Localization(__file__, 2709, 28), getitem___87468, d_87466)
    
    str_87470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2709, 36), 'str', '=')
    # Storing an element on a container (line 2709)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2709, 28), subscript_call_result_87469, (str_87470, result_mod_87465))
    # SSA join for if statement (line 2705)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    int_87471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2711, 27), 'int')
    
    str_87472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2711, 33), 'str', 'check')
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2711)
    d_87473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2711, 53), 'd')
    # Getting the type of 'vars' (line 2711)
    vars_87474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2711, 48), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2711)
    getitem___87475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2711, 48), vars_87474, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2711)
    subscript_call_result_87476 = invoke(stypy.reporting.localization.Localization(__file__, 2711, 48), getitem___87475, d_87473)
    
    # Applying the binary operator 'notin' (line 2711)
    result_contains_87477 = python_operator(stypy.reporting.localization.Localization(__file__, 2711, 33), 'notin', str_87472, subscript_call_result_87476)
    
    # Applying the binary operator 'and' (line 2711)
    result_and_keyword_87478 = python_operator(stypy.reporting.localization.Localization(__file__, 2711, 27), 'and', int_87471, result_contains_87477)
    
    # Testing the type of an if condition (line 2711)
    if_condition_87479 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2711, 24), result_and_keyword_87478)
    # Assigning a type to the variable 'if_condition_87479' (line 2711)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2711, 24), 'if_condition_87479', if_condition_87479)
    # SSA begins for if statement (line 2711)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'ni' (line 2712)
    ni_87480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2712, 31), 'ni')
    int_87481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2712, 36), 'int')
    # Applying the binary operator '>' (line 2712)
    result_gt_87482 = python_operator(stypy.reporting.localization.Localization(__file__, 2712, 31), '>', ni_87480, int_87481)
    
    # Testing the type of an if condition (line 2712)
    if_condition_87483 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2712, 28), result_gt_87482)
    # Assigning a type to the variable 'if_condition_87483' (line 2712)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2712, 28), 'if_condition_87483', if_condition_87483)
    # SSA begins for if statement (line 2712)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Subscript (line 2713):
    
    # Assigning a List to a Subscript (line 2713):
    
    # Obtaining an instance of the builtin type 'list' (line 2713)
    list_87484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2713, 51), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2713)
    # Adding element type (line 2713)
    str_87485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2713, 52), 'str', '%s%s(%s,%i)%s==%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2714)
    tuple_87486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2714, 55), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2714)
    # Adding element type (line 2714)
    # Getting the type of 'pd' (line 2714)
    pd_87487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2714, 55), 'pd')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2714, 55), tuple_87486, pd_87487)
    # Adding element type (line 2714)
    # Getting the type of 'shape_macro' (line 2714)
    shape_macro_87488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2714, 59), 'shape_macro')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2714, 55), tuple_87486, shape_macro_87488)
    # Adding element type (line 2714)
    # Getting the type of 'n' (line 2714)
    n_87489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2714, 72), 'n')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2714, 55), tuple_87486, n_87489)
    # Adding element type (line 2714)
    # Getting the type of 'i' (line 2714)
    i_87490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2714, 75), 'i')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2714, 55), tuple_87486, i_87490)
    # Adding element type (line 2714)
    # Getting the type of 'ad' (line 2714)
    ad_87491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2714, 78), 'ad')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2714, 55), tuple_87486, ad_87491)
    # Adding element type (line 2714)
    # Getting the type of 'd' (line 2714)
    d_87492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2714, 82), 'd')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2714, 55), tuple_87486, d_87492)
    
    # Applying the binary operator '%' (line 2713)
    result_mod_87493 = python_operator(stypy.reporting.localization.Localization(__file__, 2713, 52), '%', str_87485, tuple_87486)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2713, 51), list_87484, result_mod_87493)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2713)
    d_87494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2713, 37), 'd')
    # Getting the type of 'vars' (line 2713)
    vars_87495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2713, 32), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2713)
    getitem___87496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2713, 32), vars_87495, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2713)
    subscript_call_result_87497 = invoke(stypy.reporting.localization.Localization(__file__, 2713, 32), getitem___87496, d_87494)
    
    str_87498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2713, 40), 'str', 'check')
    # Storing an element on a container (line 2713)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2713, 32), subscript_call_result_87497, (str_87498, list_87484))
    # SSA branch for the else part of an if statement (line 2712)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a List to a Subscript (line 2716):
    
    # Assigning a List to a Subscript (line 2716):
    
    # Obtaining an instance of the builtin type 'list' (line 2716)
    list_87499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2716, 51), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2716)
    # Adding element type (line 2716)
    str_87500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2717, 36), 'str', '%slen(%s)%s>=%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2717)
    tuple_87501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2717, 57), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2717)
    # Adding element type (line 2717)
    # Getting the type of 'pd' (line 2717)
    pd_87502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2717, 57), 'pd')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2717, 57), tuple_87501, pd_87502)
    # Adding element type (line 2717)
    # Getting the type of 'n' (line 2717)
    n_87503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2717, 61), 'n')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2717, 57), tuple_87501, n_87503)
    # Adding element type (line 2717)
    # Getting the type of 'ad' (line 2717)
    ad_87504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2717, 64), 'ad')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2717, 57), tuple_87501, ad_87504)
    # Adding element type (line 2717)
    # Getting the type of 'd' (line 2717)
    d_87505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2717, 68), 'd')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2717, 57), tuple_87501, d_87505)
    
    # Applying the binary operator '%' (line 2717)
    result_mod_87506 = python_operator(stypy.reporting.localization.Localization(__file__, 2717, 36), '%', str_87500, tuple_87501)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2716, 51), list_87499, result_mod_87506)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2716)
    d_87507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2716, 37), 'd')
    # Getting the type of 'vars' (line 2716)
    vars_87508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2716, 32), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2716)
    getitem___87509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2716, 32), vars_87508, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2716)
    subscript_call_result_87510 = invoke(stypy.reporting.localization.Localization(__file__, 2716, 32), getitem___87509, d_87507)
    
    str_87511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2716, 40), 'str', 'check')
    # Storing an element on a container (line 2716)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2716, 32), subscript_call_result_87510, (str_87511, list_87499))
    # SSA join for if statement (line 2712)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2711)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_87512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2718, 27), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2718)
    d_87513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2718, 50), 'd')
    # Getting the type of 'vars' (line 2718)
    vars_87514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2718, 45), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2718)
    getitem___87515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2718, 45), vars_87514, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2718)
    subscript_call_result_87516 = invoke(stypy.reporting.localization.Localization(__file__, 2718, 45), getitem___87515, d_87513)
    
    # Applying the binary operator 'notin' (line 2718)
    result_contains_87517 = python_operator(stypy.reporting.localization.Localization(__file__, 2718, 27), 'notin', str_87512, subscript_call_result_87516)
    
    # Testing the type of an if condition (line 2718)
    if_condition_87518 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2718, 24), result_contains_87517)
    # Assigning a type to the variable 'if_condition_87518' (line 2718)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2718, 24), 'if_condition_87518', if_condition_87518)
    # SSA begins for if statement (line 2718)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Subscript (line 2719):
    
    # Assigning a List to a Subscript (line 2719):
    
    # Obtaining an instance of the builtin type 'list' (line 2719)
    list_87519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2719, 50), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2719)
    # Adding element type (line 2719)
    str_87520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2719, 51), 'str', 'optional')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2719, 50), list_87519, str_87520)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2719)
    d_87521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2719, 33), 'd')
    # Getting the type of 'vars' (line 2719)
    vars_87522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2719, 28), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2719)
    getitem___87523 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2719, 28), vars_87522, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2719)
    subscript_call_result_87524 = invoke(stypy.reporting.localization.Localization(__file__, 2719, 28), getitem___87523, d_87521)
    
    str_87525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2719, 36), 'str', 'attrspec')
    # Storing an element on a container (line 2719)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2719, 28), subscript_call_result_87524, (str_87525, list_87519))
    # SSA join for if statement (line 2718)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    str_87526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2720, 28), 'str', 'optional')
    
    # Obtaining the type of the subscript
    str_87527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2720, 54), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2720)
    d_87528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2720, 51), 'd')
    # Getting the type of 'vars' (line 2720)
    vars_87529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2720, 46), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2720)
    getitem___87530 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2720, 46), vars_87529, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2720)
    subscript_call_result_87531 = invoke(stypy.reporting.localization.Localization(__file__, 2720, 46), getitem___87530, d_87528)
    
    # Obtaining the member '__getitem__' of a type (line 2720)
    getitem___87532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2720, 46), subscript_call_result_87531, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2720)
    subscript_call_result_87533 = invoke(stypy.reporting.localization.Localization(__file__, 2720, 46), getitem___87532, str_87527)
    
    # Applying the binary operator 'notin' (line 2720)
    result_contains_87534 = python_operator(stypy.reporting.localization.Localization(__file__, 2720, 28), 'notin', str_87526, subscript_call_result_87533)
    
    
    str_87535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2721, 28), 'str', 'required')
    
    # Obtaining the type of the subscript
    str_87536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2721, 54), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2721)
    d_87537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2721, 51), 'd')
    # Getting the type of 'vars' (line 2721)
    vars_87538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2721, 46), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2721)
    getitem___87539 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2721, 46), vars_87538, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2721)
    subscript_call_result_87540 = invoke(stypy.reporting.localization.Localization(__file__, 2721, 46), getitem___87539, d_87537)
    
    # Obtaining the member '__getitem__' of a type (line 2721)
    getitem___87541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2721, 46), subscript_call_result_87540, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2721)
    subscript_call_result_87542 = invoke(stypy.reporting.localization.Localization(__file__, 2721, 46), getitem___87541, str_87536)
    
    # Applying the binary operator 'notin' (line 2721)
    result_contains_87543 = python_operator(stypy.reporting.localization.Localization(__file__, 2721, 28), 'notin', str_87535, subscript_call_result_87542)
    
    # Applying the binary operator 'and' (line 2720)
    result_and_keyword_87544 = python_operator(stypy.reporting.localization.Localization(__file__, 2720, 27), 'and', result_contains_87534, result_contains_87543)
    
    # Testing the type of an if condition (line 2720)
    if_condition_87545 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2720, 24), result_and_keyword_87544)
    # Assigning a type to the variable 'if_condition_87545' (line 2720)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2720, 24), 'if_condition_87545', if_condition_87545)
    # SSA begins for if statement (line 2720)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2722)
    # Processing the call arguments (line 2722)
    str_87554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2722, 55), 'str', 'optional')
    # Processing the call keyword arguments (line 2722)
    kwargs_87555 = {}
    
    # Obtaining the type of the subscript
    str_87546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2722, 36), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 2722)
    d_87547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2722, 33), 'd', False)
    # Getting the type of 'vars' (line 2722)
    vars_87548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2722, 28), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2722)
    getitem___87549 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2722, 28), vars_87548, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2722)
    subscript_call_result_87550 = invoke(stypy.reporting.localization.Localization(__file__, 2722, 28), getitem___87549, d_87547)
    
    # Obtaining the member '__getitem__' of a type (line 2722)
    getitem___87551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2722, 28), subscript_call_result_87550, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2722)
    subscript_call_result_87552 = invoke(stypy.reporting.localization.Localization(__file__, 2722, 28), getitem___87551, str_87546)
    
    # Obtaining the member 'append' of a type (line 2722)
    append_87553 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2722, 28), subscript_call_result_87552, 'append')
    # Calling append(args, kwargs) (line 2722)
    append_call_result_87556 = invoke(stypy.reporting.localization.Localization(__file__, 2722, 28), append_87553, *[str_87554], **kwargs_87555)
    
    # SSA join for if statement (line 2720)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 2701)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'd' (line 2723)
    d_87557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2723, 25), 'd')
    
    # Obtaining an instance of the builtin type 'list' (line 2723)
    list_87558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2723, 34), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2723)
    # Adding element type (line 2723)
    str_87559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2723, 35), 'str', '*')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2723, 34), list_87558, str_87559)
    # Adding element type (line 2723)
    str_87560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2723, 40), 'str', ':')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2723, 34), list_87558, str_87560)
    
    # Applying the binary operator 'notin' (line 2723)
    result_contains_87561 = python_operator(stypy.reporting.localization.Localization(__file__, 2723, 25), 'notin', d_87557, list_87558)
    
    # Testing the type of an if condition (line 2723)
    if_condition_87562 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2723, 25), result_contains_87561)
    # Assigning a type to the variable 'if_condition_87562' (line 2723)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2723, 25), 'if_condition_87562', if_condition_87562)
    # SSA begins for if statement (line 2723)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'flag' (line 2725)
    flag_87563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2725, 27), 'flag')
    # Testing the type of an if condition (line 2725)
    if_condition_87564 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2725, 24), flag_87563)
    # Assigning a type to the variable 'if_condition_87564' (line 2725)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2725, 24), 'if_condition_87564', if_condition_87564)
    # SSA begins for if statement (line 2725)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'd' (line 2726)
    d_87565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2726, 31), 'd')
    # Getting the type of 'vars' (line 2726)
    vars_87566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2726, 36), 'vars')
    # Applying the binary operator 'in' (line 2726)
    result_contains_87567 = python_operator(stypy.reporting.localization.Localization(__file__, 2726, 31), 'in', d_87565, vars_87566)
    
    # Testing the type of an if condition (line 2726)
    if_condition_87568 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2726, 28), result_contains_87567)
    # Assigning a type to the variable 'if_condition_87568' (line 2726)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2726, 28), 'if_condition_87568', if_condition_87568)
    # SSA begins for if statement (line 2726)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'n' (line 2727)
    n_87569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2727, 35), 'n')
    # Getting the type of 'ddeps' (line 2727)
    ddeps_87570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2727, 44), 'ddeps')
    # Applying the binary operator 'notin' (line 2727)
    result_contains_87571 = python_operator(stypy.reporting.localization.Localization(__file__, 2727, 35), 'notin', n_87569, ddeps_87570)
    
    # Testing the type of an if condition (line 2727)
    if_condition_87572 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2727, 32), result_contains_87571)
    # Assigning a type to the variable 'if_condition_87572' (line 2727)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2727, 32), 'if_condition_87572', if_condition_87572)
    # SSA begins for if statement (line 2727)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2728)
    # Processing the call arguments (line 2728)
    # Getting the type of 'd' (line 2728)
    d_87581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2728, 61), 'd', False)
    # Processing the call keyword arguments (line 2728)
    kwargs_87582 = {}
    
    # Obtaining the type of the subscript
    str_87573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2728, 44), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2728)
    n_87574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2728, 41), 'n', False)
    # Getting the type of 'vars' (line 2728)
    vars_87575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2728, 36), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2728)
    getitem___87576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2728, 36), vars_87575, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2728)
    subscript_call_result_87577 = invoke(stypy.reporting.localization.Localization(__file__, 2728, 36), getitem___87576, n_87574)
    
    # Obtaining the member '__getitem__' of a type (line 2728)
    getitem___87578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2728, 36), subscript_call_result_87577, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2728)
    subscript_call_result_87579 = invoke(stypy.reporting.localization.Localization(__file__, 2728, 36), getitem___87578, str_87573)
    
    # Obtaining the member 'append' of a type (line 2728)
    append_87580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2728, 36), subscript_call_result_87579, 'append')
    # Calling append(args, kwargs) (line 2728)
    append_call_result_87583 = invoke(stypy.reporting.localization.Localization(__file__, 2728, 36), append_87580, *[d_87581], **kwargs_87582)
    
    # SSA join for if statement (line 2727)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 2726)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Subscript (line 2730):
    
    # Assigning a BinOp to a Subscript (line 2730):
    
    # Obtaining the type of the subscript
    str_87584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2730, 60), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2730)
    n_87585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2730, 57), 'n')
    # Getting the type of 'vars' (line 2730)
    vars_87586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2730, 52), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2730)
    getitem___87587 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2730, 52), vars_87586, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2730)
    subscript_call_result_87588 = invoke(stypy.reporting.localization.Localization(__file__, 2730, 52), getitem___87587, n_87585)
    
    # Obtaining the member '__getitem__' of a type (line 2730)
    getitem___87589 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2730, 52), subscript_call_result_87588, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2730)
    subscript_call_result_87590 = invoke(stypy.reporting.localization.Localization(__file__, 2730, 52), getitem___87589, str_87584)
    
    # Getting the type of 'ddeps' (line 2730)
    ddeps_87591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2730, 72), 'ddeps')
    # Applying the binary operator '+' (line 2730)
    result_add_87592 = python_operator(stypy.reporting.localization.Localization(__file__, 2730, 52), '+', subscript_call_result_87590, ddeps_87591)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2730)
    n_87593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2730, 37), 'n')
    # Getting the type of 'vars' (line 2730)
    vars_87594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2730, 32), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2730)
    getitem___87595 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2730, 32), vars_87594, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2730)
    subscript_call_result_87596 = invoke(stypy.reporting.localization.Localization(__file__, 2730, 32), getitem___87595, n_87593)
    
    str_87597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2730, 40), 'str', 'depend')
    # Storing an element on a container (line 2730)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2730, 32), subscript_call_result_87596, (str_87597, result_add_87592))
    # SSA join for if statement (line 2726)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2725)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2723)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2701)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 2675)
    module_type_store.open_ssa_branch('else')
    
    
    # Call to isstring(...): (line 2731)
    # Processing the call arguments (line 2731)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2731)
    n_87599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2731, 31), 'n', False)
    # Getting the type of 'vars' (line 2731)
    vars_87600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2731, 26), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2731)
    getitem___87601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2731, 26), vars_87600, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2731)
    subscript_call_result_87602 = invoke(stypy.reporting.localization.Localization(__file__, 2731, 26), getitem___87601, n_87599)
    
    # Processing the call keyword arguments (line 2731)
    kwargs_87603 = {}
    # Getting the type of 'isstring' (line 2731)
    isstring_87598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2731, 17), 'isstring', False)
    # Calling isstring(args, kwargs) (line 2731)
    isstring_call_result_87604 = invoke(stypy.reporting.localization.Localization(__file__, 2731, 17), isstring_87598, *[subscript_call_result_87602], **kwargs_87603)
    
    # Testing the type of an if condition (line 2731)
    if_condition_87605 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2731, 17), isstring_call_result_87604)
    # Assigning a type to the variable 'if_condition_87605' (line 2731)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2731, 17), 'if_condition_87605', if_condition_87605)
    # SSA begins for if statement (line 2731)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 2732):
    
    # Assigning a Str to a Name (line 2732):
    str_87606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2732, 25), 'str', '1')
    # Assigning a type to the variable 'length' (line 2732)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2732, 16), 'length', str_87606)
    
    
    str_87607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2733, 19), 'str', 'charselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2733)
    n_87608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2733, 42), 'n')
    # Getting the type of 'vars' (line 2733)
    vars_87609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2733, 37), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2733)
    getitem___87610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2733, 37), vars_87609, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2733)
    subscript_call_result_87611 = invoke(stypy.reporting.localization.Localization(__file__, 2733, 37), getitem___87610, n_87608)
    
    # Applying the binary operator 'in' (line 2733)
    result_contains_87612 = python_operator(stypy.reporting.localization.Localization(__file__, 2733, 19), 'in', str_87607, subscript_call_result_87611)
    
    # Testing the type of an if condition (line 2733)
    if_condition_87613 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2733, 16), result_contains_87612)
    # Assigning a type to the variable 'if_condition_87613' (line 2733)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2733, 16), 'if_condition_87613', if_condition_87613)
    # SSA begins for if statement (line 2733)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    str_87614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2734, 23), 'str', '*')
    
    # Obtaining the type of the subscript
    str_87615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2734, 38), 'str', 'charselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2734)
    n_87616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2734, 35), 'n')
    # Getting the type of 'vars' (line 2734)
    vars_87617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2734, 30), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2734)
    getitem___87618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2734, 30), vars_87617, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2734)
    subscript_call_result_87619 = invoke(stypy.reporting.localization.Localization(__file__, 2734, 30), getitem___87618, n_87616)
    
    # Obtaining the member '__getitem__' of a type (line 2734)
    getitem___87620 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2734, 30), subscript_call_result_87619, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2734)
    subscript_call_result_87621 = invoke(stypy.reporting.localization.Localization(__file__, 2734, 30), getitem___87620, str_87615)
    
    # Applying the binary operator 'in' (line 2734)
    result_contains_87622 = python_operator(stypy.reporting.localization.Localization(__file__, 2734, 23), 'in', str_87614, subscript_call_result_87621)
    
    # Testing the type of an if condition (line 2734)
    if_condition_87623 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2734, 20), result_contains_87622)
    # Assigning a type to the variable 'if_condition_87623' (line 2734)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2734, 20), 'if_condition_87623', if_condition_87623)
    # SSA begins for if statement (line 2734)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2735):
    
    # Assigning a Call to a Name (line 2735):
    
    # Call to _eval_length(...): (line 2735)
    # Processing the call arguments (line 2735)
    
    # Obtaining the type of the subscript
    str_87625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2735, 70), 'str', '*')
    
    # Obtaining the type of the subscript
    str_87626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2735, 54), 'str', 'charselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2735)
    n_87627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2735, 51), 'n', False)
    # Getting the type of 'vars' (line 2735)
    vars_87628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2735, 46), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2735)
    getitem___87629 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2735, 46), vars_87628, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2735)
    subscript_call_result_87630 = invoke(stypy.reporting.localization.Localization(__file__, 2735, 46), getitem___87629, n_87627)
    
    # Obtaining the member '__getitem__' of a type (line 2735)
    getitem___87631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2735, 46), subscript_call_result_87630, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2735)
    subscript_call_result_87632 = invoke(stypy.reporting.localization.Localization(__file__, 2735, 46), getitem___87631, str_87626)
    
    # Obtaining the member '__getitem__' of a type (line 2735)
    getitem___87633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2735, 46), subscript_call_result_87632, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2735)
    subscript_call_result_87634 = invoke(stypy.reporting.localization.Localization(__file__, 2735, 46), getitem___87633, str_87625)
    
    # Getting the type of 'params' (line 2736)
    params_87635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2736, 46), 'params', False)
    # Processing the call keyword arguments (line 2735)
    kwargs_87636 = {}
    # Getting the type of '_eval_length' (line 2735)
    _eval_length_87624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2735, 33), '_eval_length', False)
    # Calling _eval_length(args, kwargs) (line 2735)
    _eval_length_call_result_87637 = invoke(stypy.reporting.localization.Localization(__file__, 2735, 33), _eval_length_87624, *[subscript_call_result_87634, params_87635], **kwargs_87636)
    
    # Assigning a type to the variable 'length' (line 2735)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2735, 24), 'length', _eval_length_call_result_87637)
    
    # Assigning a Name to a Subscript (line 2737):
    
    # Assigning a Name to a Subscript (line 2737):
    # Getting the type of 'length' (line 2737)
    length_87638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2737, 55), 'length')
    
    # Obtaining the type of the subscript
    str_87639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2737, 32), 'str', 'charselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2737)
    n_87640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2737, 29), 'n')
    # Getting the type of 'vars' (line 2737)
    vars_87641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2737, 24), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2737)
    getitem___87642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2737, 24), vars_87641, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2737)
    subscript_call_result_87643 = invoke(stypy.reporting.localization.Localization(__file__, 2737, 24), getitem___87642, n_87640)
    
    # Obtaining the member '__getitem__' of a type (line 2737)
    getitem___87644 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2737, 24), subscript_call_result_87643, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2737)
    subscript_call_result_87645 = invoke(stypy.reporting.localization.Localization(__file__, 2737, 24), getitem___87644, str_87639)
    
    str_87646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2737, 48), 'str', '*')
    # Storing an element on a container (line 2737)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2737, 24), subscript_call_result_87645, (str_87646, length_87638))
    # SSA branch for the else part of an if statement (line 2734)
    module_type_store.open_ssa_branch('else')
    
    
    str_87647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2738, 25), 'str', 'len')
    
    # Obtaining the type of the subscript
    str_87648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2738, 42), 'str', 'charselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2738)
    n_87649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2738, 39), 'n')
    # Getting the type of 'vars' (line 2738)
    vars_87650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2738, 34), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2738)
    getitem___87651 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2738, 34), vars_87650, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2738)
    subscript_call_result_87652 = invoke(stypy.reporting.localization.Localization(__file__, 2738, 34), getitem___87651, n_87649)
    
    # Obtaining the member '__getitem__' of a type (line 2738)
    getitem___87653 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2738, 34), subscript_call_result_87652, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2738)
    subscript_call_result_87654 = invoke(stypy.reporting.localization.Localization(__file__, 2738, 34), getitem___87653, str_87648)
    
    # Applying the binary operator 'in' (line 2738)
    result_contains_87655 = python_operator(stypy.reporting.localization.Localization(__file__, 2738, 25), 'in', str_87647, subscript_call_result_87654)
    
    # Testing the type of an if condition (line 2738)
    if_condition_87656 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2738, 25), result_contains_87655)
    # Assigning a type to the variable 'if_condition_87656' (line 2738)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2738, 25), 'if_condition_87656', if_condition_87656)
    # SSA begins for if statement (line 2738)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2739):
    
    # Assigning a Call to a Name (line 2739):
    
    # Call to _eval_length(...): (line 2739)
    # Processing the call arguments (line 2739)
    
    # Obtaining the type of the subscript
    str_87658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2739, 70), 'str', 'len')
    
    # Obtaining the type of the subscript
    str_87659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2739, 54), 'str', 'charselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2739)
    n_87660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2739, 51), 'n', False)
    # Getting the type of 'vars' (line 2739)
    vars_87661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2739, 46), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2739)
    getitem___87662 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2739, 46), vars_87661, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2739)
    subscript_call_result_87663 = invoke(stypy.reporting.localization.Localization(__file__, 2739, 46), getitem___87662, n_87660)
    
    # Obtaining the member '__getitem__' of a type (line 2739)
    getitem___87664 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2739, 46), subscript_call_result_87663, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2739)
    subscript_call_result_87665 = invoke(stypy.reporting.localization.Localization(__file__, 2739, 46), getitem___87664, str_87659)
    
    # Obtaining the member '__getitem__' of a type (line 2739)
    getitem___87666 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2739, 46), subscript_call_result_87665, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2739)
    subscript_call_result_87667 = invoke(stypy.reporting.localization.Localization(__file__, 2739, 46), getitem___87666, str_87658)
    
    # Getting the type of 'params' (line 2740)
    params_87668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2740, 46), 'params', False)
    # Processing the call keyword arguments (line 2739)
    kwargs_87669 = {}
    # Getting the type of '_eval_length' (line 2739)
    _eval_length_87657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2739, 33), '_eval_length', False)
    # Calling _eval_length(args, kwargs) (line 2739)
    _eval_length_call_result_87670 = invoke(stypy.reporting.localization.Localization(__file__, 2739, 33), _eval_length_87657, *[subscript_call_result_87667, params_87668], **kwargs_87669)
    
    # Assigning a type to the variable 'length' (line 2739)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2739, 24), 'length', _eval_length_call_result_87670)
    # Deleting a member
    
    # Obtaining the type of the subscript
    str_87671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2741, 36), 'str', 'charselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2741)
    n_87672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2741, 33), 'n')
    # Getting the type of 'vars' (line 2741)
    vars_87673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2741, 28), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2741)
    getitem___87674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2741, 28), vars_87673, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2741)
    subscript_call_result_87675 = invoke(stypy.reporting.localization.Localization(__file__, 2741, 28), getitem___87674, n_87672)
    
    # Obtaining the member '__getitem__' of a type (line 2741)
    getitem___87676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2741, 28), subscript_call_result_87675, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2741)
    subscript_call_result_87677 = invoke(stypy.reporting.localization.Localization(__file__, 2741, 28), getitem___87676, str_87671)
    
    
    # Obtaining the type of the subscript
    str_87678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2741, 52), 'str', 'len')
    
    # Obtaining the type of the subscript
    str_87679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2741, 36), 'str', 'charselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2741)
    n_87680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2741, 33), 'n')
    # Getting the type of 'vars' (line 2741)
    vars_87681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2741, 28), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2741)
    getitem___87682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2741, 28), vars_87681, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2741)
    subscript_call_result_87683 = invoke(stypy.reporting.localization.Localization(__file__, 2741, 28), getitem___87682, n_87680)
    
    # Obtaining the member '__getitem__' of a type (line 2741)
    getitem___87684 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2741, 28), subscript_call_result_87683, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2741)
    subscript_call_result_87685 = invoke(stypy.reporting.localization.Localization(__file__, 2741, 28), getitem___87684, str_87679)
    
    # Obtaining the member '__getitem__' of a type (line 2741)
    getitem___87686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2741, 28), subscript_call_result_87685, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2741)
    subscript_call_result_87687 = invoke(stypy.reporting.localization.Localization(__file__, 2741, 28), getitem___87686, str_87678)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2741, 24), subscript_call_result_87677, subscript_call_result_87687)
    
    # Assigning a Name to a Subscript (line 2742):
    
    # Assigning a Name to a Subscript (line 2742):
    # Getting the type of 'length' (line 2742)
    length_87688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2742, 55), 'length')
    
    # Obtaining the type of the subscript
    str_87689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2742, 32), 'str', 'charselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2742)
    n_87690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2742, 29), 'n')
    # Getting the type of 'vars' (line 2742)
    vars_87691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2742, 24), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2742)
    getitem___87692 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2742, 24), vars_87691, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2742)
    subscript_call_result_87693 = invoke(stypy.reporting.localization.Localization(__file__, 2742, 24), getitem___87692, n_87690)
    
    # Obtaining the member '__getitem__' of a type (line 2742)
    getitem___87694 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2742, 24), subscript_call_result_87693, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2742)
    subscript_call_result_87695 = invoke(stypy.reporting.localization.Localization(__file__, 2742, 24), getitem___87694, str_87689)
    
    str_87696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2742, 48), 'str', '*')
    # Storing an element on a container (line 2742)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2742, 24), subscript_call_result_87695, (str_87696, length_87688))
    # SSA join for if statement (line 2738)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2734)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2733)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2731)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2675)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    str_87697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2744, 27), 'str', 'check')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2744)
    n_87698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2744, 24), 'n')
    # Getting the type of 'vars' (line 2744)
    vars_87699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2744, 19), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2744)
    getitem___87700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2744, 19), vars_87699, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2744)
    subscript_call_result_87701 = invoke(stypy.reporting.localization.Localization(__file__, 2744, 19), getitem___87700, n_87698)
    
    # Obtaining the member '__getitem__' of a type (line 2744)
    getitem___87702 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2744, 19), subscript_call_result_87701, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2744)
    subscript_call_result_87703 = invoke(stypy.reporting.localization.Localization(__file__, 2744, 19), getitem___87702, str_87697)
    
    # Applying the 'not' unary operator (line 2744)
    result_not__87704 = python_operator(stypy.reporting.localization.Localization(__file__, 2744, 15), 'not', subscript_call_result_87703)
    
    # Testing the type of an if condition (line 2744)
    if_condition_87705 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2744, 12), result_not__87704)
    # Assigning a type to the variable 'if_condition_87705' (line 2744)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2744, 12), 'if_condition_87705', if_condition_87705)
    # SSA begins for if statement (line 2744)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Deleting a member
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2745)
    n_87706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2745, 25), 'n')
    # Getting the type of 'vars' (line 2745)
    vars_87707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2745, 20), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2745)
    getitem___87708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2745, 20), vars_87707, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2745)
    subscript_call_result_87709 = invoke(stypy.reporting.localization.Localization(__file__, 2745, 20), getitem___87708, n_87706)
    
    
    # Obtaining the type of the subscript
    str_87710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2745, 28), 'str', 'check')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2745)
    n_87711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2745, 25), 'n')
    # Getting the type of 'vars' (line 2745)
    vars_87712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2745, 20), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2745)
    getitem___87713 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2745, 20), vars_87712, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2745)
    subscript_call_result_87714 = invoke(stypy.reporting.localization.Localization(__file__, 2745, 20), getitem___87713, n_87711)
    
    # Obtaining the member '__getitem__' of a type (line 2745)
    getitem___87715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2745, 20), subscript_call_result_87714, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2745)
    subscript_call_result_87716 = invoke(stypy.reporting.localization.Localization(__file__, 2745, 20), getitem___87715, str_87710)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2745, 16), subscript_call_result_87709, subscript_call_result_87716)
    # SSA join for if statement (line 2744)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    # Getting the type of 'flag' (line 2746)
    flag_87717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2746, 15), 'flag')
    
    
    # Obtaining the type of the subscript
    str_87718 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2746, 36), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2746)
    n_87719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2746, 33), 'n')
    # Getting the type of 'vars' (line 2746)
    vars_87720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2746, 28), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2746)
    getitem___87721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2746, 28), vars_87720, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2746)
    subscript_call_result_87722 = invoke(stypy.reporting.localization.Localization(__file__, 2746, 28), getitem___87721, n_87719)
    
    # Obtaining the member '__getitem__' of a type (line 2746)
    getitem___87723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2746, 28), subscript_call_result_87722, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2746)
    subscript_call_result_87724 = invoke(stypy.reporting.localization.Localization(__file__, 2746, 28), getitem___87723, str_87718)
    
    # Applying the 'not' unary operator (line 2746)
    result_not__87725 = python_operator(stypy.reporting.localization.Localization(__file__, 2746, 24), 'not', subscript_call_result_87724)
    
    # Applying the binary operator 'and' (line 2746)
    result_and_keyword_87726 = python_operator(stypy.reporting.localization.Localization(__file__, 2746, 15), 'and', flag_87717, result_not__87725)
    
    # Testing the type of an if condition (line 2746)
    if_condition_87727 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2746, 12), result_and_keyword_87726)
    # Assigning a type to the variable 'if_condition_87727' (line 2746)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2746, 12), 'if_condition_87727', if_condition_87727)
    # SSA begins for if statement (line 2746)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Deleting a member
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2747)
    n_87728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2747, 25), 'n')
    # Getting the type of 'vars' (line 2747)
    vars_87729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2747, 20), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2747)
    getitem___87730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2747, 20), vars_87729, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2747)
    subscript_call_result_87731 = invoke(stypy.reporting.localization.Localization(__file__, 2747, 20), getitem___87730, n_87728)
    
    
    # Obtaining the type of the subscript
    str_87732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2747, 28), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2747)
    n_87733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2747, 25), 'n')
    # Getting the type of 'vars' (line 2747)
    vars_87734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2747, 20), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2747)
    getitem___87735 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2747, 20), vars_87734, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2747)
    subscript_call_result_87736 = invoke(stypy.reporting.localization.Localization(__file__, 2747, 20), getitem___87735, n_87733)
    
    # Obtaining the member '__getitem__' of a type (line 2747)
    getitem___87737 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2747, 20), subscript_call_result_87736, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2747)
    subscript_call_result_87738 = invoke(stypy.reporting.localization.Localization(__file__, 2747, 20), getitem___87737, str_87732)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2747, 16), subscript_call_result_87731, subscript_call_result_87738)
    # SSA join for if statement (line 2746)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2670)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_87739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2748, 11), 'str', '=')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2748)
    n_87740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2748, 23), 'n')
    # Getting the type of 'vars' (line 2748)
    vars_87741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2748, 18), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2748)
    getitem___87742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2748, 18), vars_87741, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2748)
    subscript_call_result_87743 = invoke(stypy.reporting.localization.Localization(__file__, 2748, 18), getitem___87742, n_87740)
    
    # Applying the binary operator 'in' (line 2748)
    result_contains_87744 = python_operator(stypy.reporting.localization.Localization(__file__, 2748, 11), 'in', str_87739, subscript_call_result_87743)
    
    # Testing the type of an if condition (line 2748)
    if_condition_87745 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2748, 8), result_contains_87744)
    # Assigning a type to the variable 'if_condition_87745' (line 2748)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2748, 8), 'if_condition_87745', if_condition_87745)
    # SSA begins for if statement (line 2748)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    str_87746 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2749, 15), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2749)
    n_87747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2749, 38), 'n')
    # Getting the type of 'vars' (line 2749)
    vars_87748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2749, 33), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2749)
    getitem___87749 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2749, 33), vars_87748, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2749)
    subscript_call_result_87750 = invoke(stypy.reporting.localization.Localization(__file__, 2749, 33), getitem___87749, n_87747)
    
    # Applying the binary operator 'notin' (line 2749)
    result_contains_87751 = python_operator(stypy.reporting.localization.Localization(__file__, 2749, 15), 'notin', str_87746, subscript_call_result_87750)
    
    # Testing the type of an if condition (line 2749)
    if_condition_87752 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2749, 12), result_contains_87751)
    # Assigning a type to the variable 'if_condition_87752' (line 2749)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2749, 12), 'if_condition_87752', if_condition_87752)
    # SSA begins for if statement (line 2749)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Subscript (line 2750):
    
    # Assigning a List to a Subscript (line 2750):
    
    # Obtaining an instance of the builtin type 'list' (line 2750)
    list_87753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2750, 38), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2750)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2750)
    n_87754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2750, 21), 'n')
    # Getting the type of 'vars' (line 2750)
    vars_87755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2750, 16), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2750)
    getitem___87756 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2750, 16), vars_87755, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2750)
    subscript_call_result_87757 = invoke(stypy.reporting.localization.Localization(__file__, 2750, 16), getitem___87756, n_87754)
    
    str_87758 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2750, 24), 'str', 'attrspec')
    # Storing an element on a container (line 2750)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2750, 16), subscript_call_result_87757, (str_87758, list_87753))
    # SSA join for if statement (line 2749)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    str_87759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2751, 16), 'str', 'optional')
    
    # Obtaining the type of the subscript
    str_87760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2751, 42), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2751)
    n_87761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2751, 39), 'n')
    # Getting the type of 'vars' (line 2751)
    vars_87762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2751, 34), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2751)
    getitem___87763 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2751, 34), vars_87762, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2751)
    subscript_call_result_87764 = invoke(stypy.reporting.localization.Localization(__file__, 2751, 34), getitem___87763, n_87761)
    
    # Obtaining the member '__getitem__' of a type (line 2751)
    getitem___87765 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2751, 34), subscript_call_result_87764, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2751)
    subscript_call_result_87766 = invoke(stypy.reporting.localization.Localization(__file__, 2751, 34), getitem___87765, str_87760)
    
    # Applying the binary operator 'notin' (line 2751)
    result_contains_87767 = python_operator(stypy.reporting.localization.Localization(__file__, 2751, 16), 'notin', str_87759, subscript_call_result_87766)
    
    
    str_87768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2752, 16), 'str', 'required')
    
    # Obtaining the type of the subscript
    str_87769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2752, 42), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2752)
    n_87770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2752, 39), 'n')
    # Getting the type of 'vars' (line 2752)
    vars_87771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2752, 34), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2752)
    getitem___87772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2752, 34), vars_87771, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2752)
    subscript_call_result_87773 = invoke(stypy.reporting.localization.Localization(__file__, 2752, 34), getitem___87772, n_87770)
    
    # Obtaining the member '__getitem__' of a type (line 2752)
    getitem___87774 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2752, 34), subscript_call_result_87773, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2752)
    subscript_call_result_87775 = invoke(stypy.reporting.localization.Localization(__file__, 2752, 34), getitem___87774, str_87769)
    
    # Applying the binary operator 'notin' (line 2752)
    result_contains_87776 = python_operator(stypy.reporting.localization.Localization(__file__, 2752, 16), 'notin', str_87768, subscript_call_result_87775)
    
    # Applying the binary operator 'and' (line 2751)
    result_and_keyword_87777 = python_operator(stypy.reporting.localization.Localization(__file__, 2751, 15), 'and', result_contains_87767, result_contains_87776)
    
    # Testing the type of an if condition (line 2751)
    if_condition_87778 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2751, 12), result_and_keyword_87777)
    # Assigning a type to the variable 'if_condition_87778' (line 2751)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2751, 12), 'if_condition_87778', if_condition_87778)
    # SSA begins for if statement (line 2751)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2753)
    # Processing the call arguments (line 2753)
    str_87787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2753, 43), 'str', 'optional')
    # Processing the call keyword arguments (line 2753)
    kwargs_87788 = {}
    
    # Obtaining the type of the subscript
    str_87779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2753, 24), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2753)
    n_87780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2753, 21), 'n', False)
    # Getting the type of 'vars' (line 2753)
    vars_87781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2753, 16), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2753)
    getitem___87782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2753, 16), vars_87781, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2753)
    subscript_call_result_87783 = invoke(stypy.reporting.localization.Localization(__file__, 2753, 16), getitem___87782, n_87780)
    
    # Obtaining the member '__getitem__' of a type (line 2753)
    getitem___87784 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2753, 16), subscript_call_result_87783, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2753)
    subscript_call_result_87785 = invoke(stypy.reporting.localization.Localization(__file__, 2753, 16), getitem___87784, str_87779)
    
    # Obtaining the member 'append' of a type (line 2753)
    append_87786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2753, 16), subscript_call_result_87785, 'append')
    # Calling append(args, kwargs) (line 2753)
    append_call_result_87789 = invoke(stypy.reporting.localization.Localization(__file__, 2753, 16), append_87786, *[str_87787], **kwargs_87788)
    
    # SSA join for if statement (line 2751)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_87790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2754, 15), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2754)
    n_87791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2754, 36), 'n')
    # Getting the type of 'vars' (line 2754)
    vars_87792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2754, 31), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2754)
    getitem___87793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2754, 31), vars_87792, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2754)
    subscript_call_result_87794 = invoke(stypy.reporting.localization.Localization(__file__, 2754, 31), getitem___87793, n_87791)
    
    # Applying the binary operator 'notin' (line 2754)
    result_contains_87795 = python_operator(stypy.reporting.localization.Localization(__file__, 2754, 15), 'notin', str_87790, subscript_call_result_87794)
    
    # Testing the type of an if condition (line 2754)
    if_condition_87796 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2754, 12), result_contains_87795)
    # Assigning a type to the variable 'if_condition_87796' (line 2754)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2754, 12), 'if_condition_87796', if_condition_87796)
    # SSA begins for if statement (line 2754)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Subscript (line 2755):
    
    # Assigning a List to a Subscript (line 2755):
    
    # Obtaining an instance of the builtin type 'list' (line 2755)
    list_87797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2755, 36), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2755)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2755)
    n_87798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2755, 21), 'n')
    # Getting the type of 'vars' (line 2755)
    vars_87799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2755, 16), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2755)
    getitem___87800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2755, 16), vars_87799, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2755)
    subscript_call_result_87801 = invoke(stypy.reporting.localization.Localization(__file__, 2755, 16), getitem___87800, n_87798)
    
    str_87802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2755, 24), 'str', 'depend')
    # Storing an element on a container (line 2755)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2755, 16), subscript_call_result_87801, (str_87802, list_87797))
    
    
    # Call to list(...): (line 2756)
    # Processing the call arguments (line 2756)
    
    # Call to items(...): (line 2756)
    # Processing the call keyword arguments (line 2756)
    kwargs_87806 = {}
    # Getting the type of 'dep_matches' (line 2756)
    dep_matches_87804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2756, 33), 'dep_matches', False)
    # Obtaining the member 'items' of a type (line 2756)
    items_87805 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2756, 33), dep_matches_87804, 'items')
    # Calling items(args, kwargs) (line 2756)
    items_call_result_87807 = invoke(stypy.reporting.localization.Localization(__file__, 2756, 33), items_87805, *[], **kwargs_87806)
    
    # Processing the call keyword arguments (line 2756)
    kwargs_87808 = {}
    # Getting the type of 'list' (line 2756)
    list_87803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2756, 28), 'list', False)
    # Calling list(args, kwargs) (line 2756)
    list_call_result_87809 = invoke(stypy.reporting.localization.Localization(__file__, 2756, 28), list_87803, *[items_call_result_87807], **kwargs_87808)
    
    # Testing the type of a for loop iterable (line 2756)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2756, 16), list_call_result_87809)
    # Getting the type of the for loop variable (line 2756)
    for_loop_var_87810 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2756, 16), list_call_result_87809)
    # Assigning a type to the variable 'v' (line 2756)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2756, 16), 'v', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2756, 16), for_loop_var_87810))
    # Assigning a type to the variable 'm' (line 2756)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2756, 16), 'm', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2756, 16), for_loop_var_87810))
    # SSA begins for a for statement (line 2756)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to m(...): (line 2757)
    # Processing the call arguments (line 2757)
    
    # Obtaining the type of the subscript
    str_87812 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2757, 33), 'str', '=')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2757)
    n_87813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2757, 30), 'n', False)
    # Getting the type of 'vars' (line 2757)
    vars_87814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2757, 25), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2757)
    getitem___87815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2757, 25), vars_87814, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2757)
    subscript_call_result_87816 = invoke(stypy.reporting.localization.Localization(__file__, 2757, 25), getitem___87815, n_87813)
    
    # Obtaining the member '__getitem__' of a type (line 2757)
    getitem___87817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2757, 25), subscript_call_result_87816, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2757)
    subscript_call_result_87818 = invoke(stypy.reporting.localization.Localization(__file__, 2757, 25), getitem___87817, str_87812)
    
    # Processing the call keyword arguments (line 2757)
    kwargs_87819 = {}
    # Getting the type of 'm' (line 2757)
    m_87811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2757, 23), 'm', False)
    # Calling m(args, kwargs) (line 2757)
    m_call_result_87820 = invoke(stypy.reporting.localization.Localization(__file__, 2757, 23), m_87811, *[subscript_call_result_87818], **kwargs_87819)
    
    # Testing the type of an if condition (line 2757)
    if_condition_87821 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2757, 20), m_call_result_87820)
    # Assigning a type to the variable 'if_condition_87821' (line 2757)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2757, 20), 'if_condition_87821', if_condition_87821)
    # SSA begins for if statement (line 2757)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2758)
    # Processing the call arguments (line 2758)
    # Getting the type of 'v' (line 2758)
    v_87830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2758, 49), 'v', False)
    # Processing the call keyword arguments (line 2758)
    kwargs_87831 = {}
    
    # Obtaining the type of the subscript
    str_87822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2758, 32), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2758)
    n_87823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2758, 29), 'n', False)
    # Getting the type of 'vars' (line 2758)
    vars_87824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2758, 24), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2758)
    getitem___87825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2758, 24), vars_87824, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2758)
    subscript_call_result_87826 = invoke(stypy.reporting.localization.Localization(__file__, 2758, 24), getitem___87825, n_87823)
    
    # Obtaining the member '__getitem__' of a type (line 2758)
    getitem___87827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2758, 24), subscript_call_result_87826, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2758)
    subscript_call_result_87828 = invoke(stypy.reporting.localization.Localization(__file__, 2758, 24), getitem___87827, str_87822)
    
    # Obtaining the member 'append' of a type (line 2758)
    append_87829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2758, 24), subscript_call_result_87828, 'append')
    # Calling append(args, kwargs) (line 2758)
    append_call_result_87832 = invoke(stypy.reporting.localization.Localization(__file__, 2758, 24), append_87829, *[v_87830], **kwargs_87831)
    
    # SSA join for if statement (line 2757)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    str_87833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2759, 31), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2759)
    n_87834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2759, 28), 'n')
    # Getting the type of 'vars' (line 2759)
    vars_87835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2759, 23), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2759)
    getitem___87836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2759, 23), vars_87835, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2759)
    subscript_call_result_87837 = invoke(stypy.reporting.localization.Localization(__file__, 2759, 23), getitem___87836, n_87834)
    
    # Obtaining the member '__getitem__' of a type (line 2759)
    getitem___87838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2759, 23), subscript_call_result_87837, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2759)
    subscript_call_result_87839 = invoke(stypy.reporting.localization.Localization(__file__, 2759, 23), getitem___87838, str_87833)
    
    # Applying the 'not' unary operator (line 2759)
    result_not__87840 = python_operator(stypy.reporting.localization.Localization(__file__, 2759, 19), 'not', subscript_call_result_87839)
    
    # Testing the type of an if condition (line 2759)
    if_condition_87841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2759, 16), result_not__87840)
    # Assigning a type to the variable 'if_condition_87841' (line 2759)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2759, 16), 'if_condition_87841', if_condition_87841)
    # SSA begins for if statement (line 2759)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Deleting a member
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2760)
    n_87842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2760, 29), 'n')
    # Getting the type of 'vars' (line 2760)
    vars_87843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2760, 24), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2760)
    getitem___87844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2760, 24), vars_87843, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2760)
    subscript_call_result_87845 = invoke(stypy.reporting.localization.Localization(__file__, 2760, 24), getitem___87844, n_87842)
    
    
    # Obtaining the type of the subscript
    str_87846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2760, 32), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2760)
    n_87847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2760, 29), 'n')
    # Getting the type of 'vars' (line 2760)
    vars_87848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2760, 24), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2760)
    getitem___87849 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2760, 24), vars_87848, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2760)
    subscript_call_result_87850 = invoke(stypy.reporting.localization.Localization(__file__, 2760, 24), getitem___87849, n_87847)
    
    # Obtaining the member '__getitem__' of a type (line 2760)
    getitem___87851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2760, 24), subscript_call_result_87850, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2760)
    subscript_call_result_87852 = invoke(stypy.reporting.localization.Localization(__file__, 2760, 24), getitem___87851, str_87846)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2760, 20), subscript_call_result_87845, subscript_call_result_87852)
    # SSA join for if statement (line 2759)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2754)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to isscalar(...): (line 2761)
    # Processing the call arguments (line 2761)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2761)
    n_87854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2761, 29), 'n', False)
    # Getting the type of 'vars' (line 2761)
    vars_87855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2761, 24), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2761)
    getitem___87856 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2761, 24), vars_87855, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2761)
    subscript_call_result_87857 = invoke(stypy.reporting.localization.Localization(__file__, 2761, 24), getitem___87856, n_87854)
    
    # Processing the call keyword arguments (line 2761)
    kwargs_87858 = {}
    # Getting the type of 'isscalar' (line 2761)
    isscalar_87853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2761, 15), 'isscalar', False)
    # Calling isscalar(args, kwargs) (line 2761)
    isscalar_call_result_87859 = invoke(stypy.reporting.localization.Localization(__file__, 2761, 15), isscalar_87853, *[subscript_call_result_87857], **kwargs_87858)
    
    # Testing the type of an if condition (line 2761)
    if_condition_87860 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2761, 12), isscalar_call_result_87859)
    # Assigning a type to the variable 'if_condition_87860' (line 2761)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2761, 12), 'if_condition_87860', if_condition_87860)
    # SSA begins for if statement (line 2761)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Subscript (line 2762):
    
    # Assigning a Call to a Subscript (line 2762):
    
    # Call to _eval_scalar(...): (line 2762)
    # Processing the call arguments (line 2762)
    
    # Obtaining the type of the subscript
    str_87862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2762, 52), 'str', '=')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2762)
    n_87863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2762, 49), 'n', False)
    # Getting the type of 'vars' (line 2762)
    vars_87864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2762, 44), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2762)
    getitem___87865 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2762, 44), vars_87864, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2762)
    subscript_call_result_87866 = invoke(stypy.reporting.localization.Localization(__file__, 2762, 44), getitem___87865, n_87863)
    
    # Obtaining the member '__getitem__' of a type (line 2762)
    getitem___87867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2762, 44), subscript_call_result_87866, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2762)
    subscript_call_result_87868 = invoke(stypy.reporting.localization.Localization(__file__, 2762, 44), getitem___87867, str_87862)
    
    # Getting the type of 'params' (line 2762)
    params_87869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2762, 58), 'params', False)
    # Processing the call keyword arguments (line 2762)
    kwargs_87870 = {}
    # Getting the type of '_eval_scalar' (line 2762)
    _eval_scalar_87861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2762, 31), '_eval_scalar', False)
    # Calling _eval_scalar(args, kwargs) (line 2762)
    _eval_scalar_call_result_87871 = invoke(stypy.reporting.localization.Localization(__file__, 2762, 31), _eval_scalar_87861, *[subscript_call_result_87868, params_87869], **kwargs_87870)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2762)
    n_87872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2762, 21), 'n')
    # Getting the type of 'vars' (line 2762)
    vars_87873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2762, 16), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2762)
    getitem___87874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2762, 16), vars_87873, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2762)
    subscript_call_result_87875 = invoke(stypy.reporting.localization.Localization(__file__, 2762, 16), getitem___87874, n_87872)
    
    str_87876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2762, 24), 'str', '=')
    # Storing an element on a container (line 2762)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2762, 16), subscript_call_result_87875, (str_87876, _eval_scalar_call_result_87871))
    # SSA join for if statement (line 2761)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2748)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to list(...): (line 2764)
    # Processing the call arguments (line 2764)
    
    # Call to keys(...): (line 2764)
    # Processing the call keyword arguments (line 2764)
    kwargs_87880 = {}
    # Getting the type of 'vars' (line 2764)
    vars_87878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2764, 18), 'vars', False)
    # Obtaining the member 'keys' of a type (line 2764)
    keys_87879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2764, 18), vars_87878, 'keys')
    # Calling keys(args, kwargs) (line 2764)
    keys_call_result_87881 = invoke(stypy.reporting.localization.Localization(__file__, 2764, 18), keys_87879, *[], **kwargs_87880)
    
    # Processing the call keyword arguments (line 2764)
    kwargs_87882 = {}
    # Getting the type of 'list' (line 2764)
    list_87877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2764, 13), 'list', False)
    # Calling list(args, kwargs) (line 2764)
    list_call_result_87883 = invoke(stypy.reporting.localization.Localization(__file__, 2764, 13), list_87877, *[keys_call_result_87881], **kwargs_87882)
    
    # Testing the type of a for loop iterable (line 2764)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2764, 4), list_call_result_87883)
    # Getting the type of the for loop variable (line 2764)
    for_loop_var_87884 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2764, 4), list_call_result_87883)
    # Assigning a type to the variable 'n' (line 2764)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2764, 4), 'n', for_loop_var_87884)
    # SSA begins for a for statement (line 2764)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'n' (line 2765)
    n_87885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2765, 11), 'n')
    
    # Obtaining the type of the subscript
    str_87886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2765, 22), 'str', 'name')
    # Getting the type of 'block' (line 2765)
    block_87887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2765, 16), 'block')
    # Obtaining the member '__getitem__' of a type (line 2765)
    getitem___87888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2765, 16), block_87887, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2765)
    subscript_call_result_87889 = invoke(stypy.reporting.localization.Localization(__file__, 2765, 16), getitem___87888, str_87886)
    
    # Applying the binary operator '==' (line 2765)
    result_eq_87890 = python_operator(stypy.reporting.localization.Localization(__file__, 2765, 11), '==', n_87885, subscript_call_result_87889)
    
    # Testing the type of an if condition (line 2765)
    if_condition_87891 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2765, 8), result_eq_87890)
    # Assigning a type to the variable 'if_condition_87891' (line 2765)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2765, 8), 'if_condition_87891', if_condition_87891)
    # SSA begins for if statement (line 2765)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    str_87892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2766, 15), 'str', 'note')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2766)
    n_87893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2766, 30), 'n')
    # Getting the type of 'vars' (line 2766)
    vars_87894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2766, 25), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2766)
    getitem___87895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2766, 25), vars_87894, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2766)
    subscript_call_result_87896 = invoke(stypy.reporting.localization.Localization(__file__, 2766, 25), getitem___87895, n_87893)
    
    # Applying the binary operator 'in' (line 2766)
    result_contains_87897 = python_operator(stypy.reporting.localization.Localization(__file__, 2766, 15), 'in', str_87892, subscript_call_result_87896)
    
    # Testing the type of an if condition (line 2766)
    if_condition_87898 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2766, 12), result_contains_87897)
    # Assigning a type to the variable 'if_condition_87898' (line 2766)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2766, 12), 'if_condition_87898', if_condition_87898)
    # SSA begins for if statement (line 2766)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 2767):
    
    # Assigning a Subscript to a Subscript (line 2767):
    
    # Obtaining the type of the subscript
    str_87899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2767, 40), 'str', 'note')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2767)
    n_87900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2767, 37), 'n')
    # Getting the type of 'vars' (line 2767)
    vars_87901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2767, 32), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2767)
    getitem___87902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2767, 32), vars_87901, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2767)
    subscript_call_result_87903 = invoke(stypy.reporting.localization.Localization(__file__, 2767, 32), getitem___87902, n_87900)
    
    # Obtaining the member '__getitem__' of a type (line 2767)
    getitem___87904 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2767, 32), subscript_call_result_87903, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2767)
    subscript_call_result_87905 = invoke(stypy.reporting.localization.Localization(__file__, 2767, 32), getitem___87904, str_87899)
    
    # Getting the type of 'block' (line 2767)
    block_87906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2767, 16), 'block')
    str_87907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2767, 22), 'str', 'note')
    # Storing an element on a container (line 2767)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2767, 16), block_87906, (str_87907, subscript_call_result_87905))
    # SSA join for if statement (line 2766)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    str_87908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2768, 21), 'str', 'block')
    # Getting the type of 'block' (line 2768)
    block_87909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2768, 15), 'block')
    # Obtaining the member '__getitem__' of a type (line 2768)
    getitem___87910 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2768, 15), block_87909, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2768)
    subscript_call_result_87911 = invoke(stypy.reporting.localization.Localization(__file__, 2768, 15), getitem___87910, str_87908)
    
    str_87912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2768, 33), 'str', 'function')
    # Applying the binary operator '==' (line 2768)
    result_eq_87913 = python_operator(stypy.reporting.localization.Localization(__file__, 2768, 15), '==', subscript_call_result_87911, str_87912)
    
    # Testing the type of an if condition (line 2768)
    if_condition_87914 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2768, 12), result_eq_87913)
    # Assigning a type to the variable 'if_condition_87914' (line 2768)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2768, 12), 'if_condition_87914', if_condition_87914)
    # SSA begins for if statement (line 2768)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    
    str_87915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2769, 19), 'str', 'result')
    # Getting the type of 'block' (line 2769)
    block_87916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2769, 31), 'block')
    # Applying the binary operator 'in' (line 2769)
    result_contains_87917 = python_operator(stypy.reporting.localization.Localization(__file__, 2769, 19), 'in', str_87915, block_87916)
    
    
    
    # Obtaining the type of the subscript
    str_87918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2769, 47), 'str', 'result')
    # Getting the type of 'block' (line 2769)
    block_87919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2769, 41), 'block')
    # Obtaining the member '__getitem__' of a type (line 2769)
    getitem___87920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2769, 41), block_87919, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2769)
    subscript_call_result_87921 = invoke(stypy.reporting.localization.Localization(__file__, 2769, 41), getitem___87920, str_87918)
    
    # Getting the type of 'vars' (line 2769)
    vars_87922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2769, 60), 'vars')
    # Applying the binary operator 'in' (line 2769)
    result_contains_87923 = python_operator(stypy.reporting.localization.Localization(__file__, 2769, 41), 'in', subscript_call_result_87921, vars_87922)
    
    # Applying the binary operator 'and' (line 2769)
    result_and_keyword_87924 = python_operator(stypy.reporting.localization.Localization(__file__, 2769, 19), 'and', result_contains_87917, result_contains_87923)
    
    # Testing the type of an if condition (line 2769)
    if_condition_87925 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2769, 16), result_and_keyword_87924)
    # Assigning a type to the variable 'if_condition_87925' (line 2769)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2769, 16), 'if_condition_87925', if_condition_87925)
    # SSA begins for if statement (line 2769)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Subscript (line 2770):
    
    # Assigning a Call to a Subscript (line 2770):
    
    # Call to appenddecl(...): (line 2770)
    # Processing the call arguments (line 2770)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2770)
    n_87927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2770, 46), 'n', False)
    # Getting the type of 'vars' (line 2770)
    vars_87928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2770, 41), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2770)
    getitem___87929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2770, 41), vars_87928, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2770)
    subscript_call_result_87930 = invoke(stypy.reporting.localization.Localization(__file__, 2770, 41), getitem___87929, n_87927)
    
    
    # Obtaining the type of the subscript
    
    # Obtaining the type of the subscript
    str_87931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2770, 61), 'str', 'result')
    # Getting the type of 'block' (line 2770)
    block_87932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2770, 55), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2770)
    getitem___87933 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2770, 55), block_87932, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2770)
    subscript_call_result_87934 = invoke(stypy.reporting.localization.Localization(__file__, 2770, 55), getitem___87933, str_87931)
    
    # Getting the type of 'vars' (line 2770)
    vars_87935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2770, 50), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2770)
    getitem___87936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2770, 50), vars_87935, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2770)
    subscript_call_result_87937 = invoke(stypy.reporting.localization.Localization(__file__, 2770, 50), getitem___87936, subscript_call_result_87934)
    
    # Processing the call keyword arguments (line 2770)
    kwargs_87938 = {}
    # Getting the type of 'appenddecl' (line 2770)
    appenddecl_87926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2770, 30), 'appenddecl', False)
    # Calling appenddecl(args, kwargs) (line 2770)
    appenddecl_call_result_87939 = invoke(stypy.reporting.localization.Localization(__file__, 2770, 30), appenddecl_87926, *[subscript_call_result_87930, subscript_call_result_87937], **kwargs_87938)
    
    # Getting the type of 'vars' (line 2770)
    vars_87940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2770, 20), 'vars')
    # Getting the type of 'n' (line 2770)
    n_87941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2770, 25), 'n')
    # Storing an element on a container (line 2770)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2770, 20), vars_87940, (n_87941, appenddecl_call_result_87939))
    # SSA join for if statement (line 2769)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_87942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2771, 19), 'str', 'prefix')
    # Getting the type of 'block' (line 2771)
    block_87943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2771, 31), 'block')
    # Applying the binary operator 'in' (line 2771)
    result_contains_87944 = python_operator(stypy.reporting.localization.Localization(__file__, 2771, 19), 'in', str_87942, block_87943)
    
    # Testing the type of an if condition (line 2771)
    if_condition_87945 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2771, 16), result_contains_87944)
    # Assigning a type to the variable 'if_condition_87945' (line 2771)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2771, 16), 'if_condition_87945', if_condition_87945)
    # SSA begins for if statement (line 2771)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2772):
    
    # Assigning a Subscript to a Name (line 2772):
    
    # Obtaining the type of the subscript
    str_87946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2772, 31), 'str', 'prefix')
    # Getting the type of 'block' (line 2772)
    block_87947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2772, 25), 'block')
    # Obtaining the member '__getitem__' of a type (line 2772)
    getitem___87948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2772, 25), block_87947, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2772)
    subscript_call_result_87949 = invoke(stypy.reporting.localization.Localization(__file__, 2772, 25), getitem___87948, str_87946)
    
    # Assigning a type to the variable 'pr' (line 2772)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2772, 20), 'pr', subscript_call_result_87949)
    
    # Assigning a Num to a Name (line 2773):
    
    # Assigning a Num to a Name (line 2773):
    int_87950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2773, 29), 'int')
    # Assigning a type to the variable 'ispure' (line 2773)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2773, 20), 'ispure', int_87950)
    
    # Assigning a Num to a Name (line 2774):
    
    # Assigning a Num to a Name (line 2774):
    int_87951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2774, 28), 'int')
    # Assigning a type to the variable 'isrec' (line 2774)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2774, 20), 'isrec', int_87951)
    
    # Assigning a Call to a Name (line 2775):
    
    # Assigning a Call to a Name (line 2775):
    
    # Call to replace(...): (line 2775)
    # Processing the call arguments (line 2775)
    str_87954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2775, 37), 'str', 'pure')
    str_87955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2775, 45), 'str', '')
    # Processing the call keyword arguments (line 2775)
    kwargs_87956 = {}
    # Getting the type of 'pr' (line 2775)
    pr_87952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2775, 26), 'pr', False)
    # Obtaining the member 'replace' of a type (line 2775)
    replace_87953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2775, 26), pr_87952, 'replace')
    # Calling replace(args, kwargs) (line 2775)
    replace_call_result_87957 = invoke(stypy.reporting.localization.Localization(__file__, 2775, 26), replace_87953, *[str_87954, str_87955], **kwargs_87956)
    
    # Assigning a type to the variable 'pr1' (line 2775)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2775, 20), 'pr1', replace_call_result_87957)
    
    # Assigning a UnaryOp to a Name (line 2776):
    
    # Assigning a UnaryOp to a Name (line 2776):
    
    
    # Getting the type of 'pr' (line 2776)
    pr_87958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2776, 34), 'pr')
    # Getting the type of 'pr1' (line 2776)
    pr1_87959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2776, 40), 'pr1')
    # Applying the binary operator '==' (line 2776)
    result_eq_87960 = python_operator(stypy.reporting.localization.Localization(__file__, 2776, 34), '==', pr_87958, pr1_87959)
    
    # Applying the 'not' unary operator (line 2776)
    result_not__87961 = python_operator(stypy.reporting.localization.Localization(__file__, 2776, 30), 'not', result_eq_87960)
    
    # Assigning a type to the variable 'ispure' (line 2776)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2776, 20), 'ispure', result_not__87961)
    
    # Assigning a Call to a Name (line 2777):
    
    # Assigning a Call to a Name (line 2777):
    
    # Call to replace(...): (line 2777)
    # Processing the call arguments (line 2777)
    str_87964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2777, 37), 'str', 'recursive')
    str_87965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2777, 50), 'str', '')
    # Processing the call keyword arguments (line 2777)
    kwargs_87966 = {}
    # Getting the type of 'pr1' (line 2777)
    pr1_87962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2777, 25), 'pr1', False)
    # Obtaining the member 'replace' of a type (line 2777)
    replace_87963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2777, 25), pr1_87962, 'replace')
    # Calling replace(args, kwargs) (line 2777)
    replace_call_result_87967 = invoke(stypy.reporting.localization.Localization(__file__, 2777, 25), replace_87963, *[str_87964, str_87965], **kwargs_87966)
    
    # Assigning a type to the variable 'pr' (line 2777)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2777, 20), 'pr', replace_call_result_87967)
    
    # Assigning a UnaryOp to a Name (line 2778):
    
    # Assigning a UnaryOp to a Name (line 2778):
    
    
    # Getting the type of 'pr' (line 2778)
    pr_87968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2778, 33), 'pr')
    # Getting the type of 'pr1' (line 2778)
    pr1_87969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2778, 39), 'pr1')
    # Applying the binary operator '==' (line 2778)
    result_eq_87970 = python_operator(stypy.reporting.localization.Localization(__file__, 2778, 33), '==', pr_87968, pr1_87969)
    
    # Applying the 'not' unary operator (line 2778)
    result_not__87971 = python_operator(stypy.reporting.localization.Localization(__file__, 2778, 29), 'not', result_eq_87970)
    
    # Assigning a type to the variable 'isrec' (line 2778)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2778, 20), 'isrec', result_not__87971)
    
    # Assigning a Call to a Name (line 2779):
    
    # Assigning a Call to a Name (line 2779):
    
    # Call to match(...): (line 2779)
    # Processing the call arguments (line 2779)
    # Getting the type of 'pr' (line 2779)
    pr_87977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2779, 46), 'pr', False)
    # Processing the call keyword arguments (line 2779)
    kwargs_87978 = {}
    
    # Obtaining the type of the subscript
    int_87972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2779, 37), 'int')
    # Getting the type of 'typespattern' (line 2779)
    typespattern_87973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2779, 24), 'typespattern', False)
    # Obtaining the member '__getitem__' of a type (line 2779)
    getitem___87974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2779, 24), typespattern_87973, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2779)
    subscript_call_result_87975 = invoke(stypy.reporting.localization.Localization(__file__, 2779, 24), getitem___87974, int_87972)
    
    # Obtaining the member 'match' of a type (line 2779)
    match_87976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2779, 24), subscript_call_result_87975, 'match')
    # Calling match(args, kwargs) (line 2779)
    match_call_result_87979 = invoke(stypy.reporting.localization.Localization(__file__, 2779, 24), match_87976, *[pr_87977], **kwargs_87978)
    
    # Assigning a type to the variable 'm' (line 2779)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2779, 20), 'm', match_call_result_87979)
    
    # Getting the type of 'm' (line 2780)
    m_87980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2780, 23), 'm')
    # Testing the type of an if condition (line 2780)
    if_condition_87981 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2780, 20), m_87980)
    # Assigning a type to the variable 'if_condition_87981' (line 2780)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2780, 20), 'if_condition_87981', if_condition_87981)
    # SSA begins for if statement (line 2780)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Tuple (line 2781):
    
    # Assigning a Call to a Name:
    
    # Call to cracktypespec0(...): (line 2781)
    # Processing the call arguments (line 2781)
    
    # Call to group(...): (line 2782)
    # Processing the call arguments (line 2782)
    str_87985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2782, 36), 'str', 'this')
    # Processing the call keyword arguments (line 2782)
    kwargs_87986 = {}
    # Getting the type of 'm' (line 2782)
    m_87983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2782, 28), 'm', False)
    # Obtaining the member 'group' of a type (line 2782)
    group_87984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2782, 28), m_87983, 'group')
    # Calling group(args, kwargs) (line 2782)
    group_call_result_87987 = invoke(stypy.reporting.localization.Localization(__file__, 2782, 28), group_87984, *[str_87985], **kwargs_87986)
    
    
    # Call to group(...): (line 2782)
    # Processing the call arguments (line 2782)
    str_87990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2782, 53), 'str', 'after')
    # Processing the call keyword arguments (line 2782)
    kwargs_87991 = {}
    # Getting the type of 'm' (line 2782)
    m_87988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2782, 45), 'm', False)
    # Obtaining the member 'group' of a type (line 2782)
    group_87989 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2782, 45), m_87988, 'group')
    # Calling group(args, kwargs) (line 2782)
    group_call_result_87992 = invoke(stypy.reporting.localization.Localization(__file__, 2782, 45), group_87989, *[str_87990], **kwargs_87991)
    
    # Processing the call keyword arguments (line 2781)
    kwargs_87993 = {}
    # Getting the type of 'cracktypespec0' (line 2781)
    cracktypespec0_87982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2781, 58), 'cracktypespec0', False)
    # Calling cracktypespec0(args, kwargs) (line 2781)
    cracktypespec0_call_result_87994 = invoke(stypy.reporting.localization.Localization(__file__, 2781, 58), cracktypespec0_87982, *[group_call_result_87987, group_call_result_87992], **kwargs_87993)
    
    # Assigning a type to the variable 'call_assignment_75823' (line 2781)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2781, 24), 'call_assignment_75823', cracktypespec0_call_result_87994)
    
    # Assigning a Call to a Name (line 2781):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_87997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2781, 24), 'int')
    # Processing the call keyword arguments
    kwargs_87998 = {}
    # Getting the type of 'call_assignment_75823' (line 2781)
    call_assignment_75823_87995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2781, 24), 'call_assignment_75823', False)
    # Obtaining the member '__getitem__' of a type (line 2781)
    getitem___87996 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2781, 24), call_assignment_75823_87995, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_87999 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___87996, *[int_87997], **kwargs_87998)
    
    # Assigning a type to the variable 'call_assignment_75824' (line 2781)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2781, 24), 'call_assignment_75824', getitem___call_result_87999)
    
    # Assigning a Name to a Name (line 2781):
    # Getting the type of 'call_assignment_75824' (line 2781)
    call_assignment_75824_88000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2781, 24), 'call_assignment_75824')
    # Assigning a type to the variable 'typespec' (line 2781)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2781, 24), 'typespec', call_assignment_75824_88000)
    
    # Assigning a Call to a Name (line 2781):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_88003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2781, 24), 'int')
    # Processing the call keyword arguments
    kwargs_88004 = {}
    # Getting the type of 'call_assignment_75823' (line 2781)
    call_assignment_75823_88001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2781, 24), 'call_assignment_75823', False)
    # Obtaining the member '__getitem__' of a type (line 2781)
    getitem___88002 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2781, 24), call_assignment_75823_88001, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_88005 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___88002, *[int_88003], **kwargs_88004)
    
    # Assigning a type to the variable 'call_assignment_75825' (line 2781)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2781, 24), 'call_assignment_75825', getitem___call_result_88005)
    
    # Assigning a Name to a Name (line 2781):
    # Getting the type of 'call_assignment_75825' (line 2781)
    call_assignment_75825_88006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2781, 24), 'call_assignment_75825')
    # Assigning a type to the variable 'selector' (line 2781)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2781, 34), 'selector', call_assignment_75825_88006)
    
    # Assigning a Call to a Name (line 2781):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_88009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2781, 24), 'int')
    # Processing the call keyword arguments
    kwargs_88010 = {}
    # Getting the type of 'call_assignment_75823' (line 2781)
    call_assignment_75823_88007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2781, 24), 'call_assignment_75823', False)
    # Obtaining the member '__getitem__' of a type (line 2781)
    getitem___88008 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2781, 24), call_assignment_75823_88007, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_88011 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___88008, *[int_88009], **kwargs_88010)
    
    # Assigning a type to the variable 'call_assignment_75826' (line 2781)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2781, 24), 'call_assignment_75826', getitem___call_result_88011)
    
    # Assigning a Name to a Name (line 2781):
    # Getting the type of 'call_assignment_75826' (line 2781)
    call_assignment_75826_88012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2781, 24), 'call_assignment_75826')
    # Assigning a type to the variable 'attr' (line 2781)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2781, 44), 'attr', call_assignment_75826_88012)
    
    # Assigning a Call to a Name (line 2781):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_88015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2781, 24), 'int')
    # Processing the call keyword arguments
    kwargs_88016 = {}
    # Getting the type of 'call_assignment_75823' (line 2781)
    call_assignment_75823_88013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2781, 24), 'call_assignment_75823', False)
    # Obtaining the member '__getitem__' of a type (line 2781)
    getitem___88014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2781, 24), call_assignment_75823_88013, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_88017 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___88014, *[int_88015], **kwargs_88016)
    
    # Assigning a type to the variable 'call_assignment_75827' (line 2781)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2781, 24), 'call_assignment_75827', getitem___call_result_88017)
    
    # Assigning a Name to a Name (line 2781):
    # Getting the type of 'call_assignment_75827' (line 2781)
    call_assignment_75827_88018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2781, 24), 'call_assignment_75827')
    # Assigning a type to the variable 'edecl' (line 2781)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2781, 50), 'edecl', call_assignment_75827_88018)
    
    # Assigning a Call to a Tuple (line 2783):
    
    # Assigning a Call to a Name:
    
    # Call to cracktypespec(...): (line 2783)
    # Processing the call arguments (line 2783)
    # Getting the type of 'typespec' (line 2784)
    typespec_88020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2784, 28), 'typespec', False)
    # Getting the type of 'selector' (line 2784)
    selector_88021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2784, 38), 'selector', False)
    # Processing the call keyword arguments (line 2783)
    kwargs_88022 = {}
    # Getting the type of 'cracktypespec' (line 2783)
    cracktypespec_88019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2783, 59), 'cracktypespec', False)
    # Calling cracktypespec(args, kwargs) (line 2783)
    cracktypespec_call_result_88023 = invoke(stypy.reporting.localization.Localization(__file__, 2783, 59), cracktypespec_88019, *[typespec_88020, selector_88021], **kwargs_88022)
    
    # Assigning a type to the variable 'call_assignment_75828' (line 2783)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2783, 24), 'call_assignment_75828', cracktypespec_call_result_88023)
    
    # Assigning a Call to a Name (line 2783):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_88026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2783, 24), 'int')
    # Processing the call keyword arguments
    kwargs_88027 = {}
    # Getting the type of 'call_assignment_75828' (line 2783)
    call_assignment_75828_88024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2783, 24), 'call_assignment_75828', False)
    # Obtaining the member '__getitem__' of a type (line 2783)
    getitem___88025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2783, 24), call_assignment_75828_88024, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_88028 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___88025, *[int_88026], **kwargs_88027)
    
    # Assigning a type to the variable 'call_assignment_75829' (line 2783)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2783, 24), 'call_assignment_75829', getitem___call_result_88028)
    
    # Assigning a Name to a Name (line 2783):
    # Getting the type of 'call_assignment_75829' (line 2783)
    call_assignment_75829_88029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2783, 24), 'call_assignment_75829')
    # Assigning a type to the variable 'kindselect' (line 2783)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2783, 24), 'kindselect', call_assignment_75829_88029)
    
    # Assigning a Call to a Name (line 2783):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_88032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2783, 24), 'int')
    # Processing the call keyword arguments
    kwargs_88033 = {}
    # Getting the type of 'call_assignment_75828' (line 2783)
    call_assignment_75828_88030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2783, 24), 'call_assignment_75828', False)
    # Obtaining the member '__getitem__' of a type (line 2783)
    getitem___88031 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2783, 24), call_assignment_75828_88030, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_88034 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___88031, *[int_88032], **kwargs_88033)
    
    # Assigning a type to the variable 'call_assignment_75830' (line 2783)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2783, 24), 'call_assignment_75830', getitem___call_result_88034)
    
    # Assigning a Name to a Name (line 2783):
    # Getting the type of 'call_assignment_75830' (line 2783)
    call_assignment_75830_88035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2783, 24), 'call_assignment_75830')
    # Assigning a type to the variable 'charselect' (line 2783)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2783, 36), 'charselect', call_assignment_75830_88035)
    
    # Assigning a Call to a Name (line 2783):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_88038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2783, 24), 'int')
    # Processing the call keyword arguments
    kwargs_88039 = {}
    # Getting the type of 'call_assignment_75828' (line 2783)
    call_assignment_75828_88036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2783, 24), 'call_assignment_75828', False)
    # Obtaining the member '__getitem__' of a type (line 2783)
    getitem___88037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2783, 24), call_assignment_75828_88036, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_88040 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___88037, *[int_88038], **kwargs_88039)
    
    # Assigning a type to the variable 'call_assignment_75831' (line 2783)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2783, 24), 'call_assignment_75831', getitem___call_result_88040)
    
    # Assigning a Name to a Name (line 2783):
    # Getting the type of 'call_assignment_75831' (line 2783)
    call_assignment_75831_88041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2783, 24), 'call_assignment_75831')
    # Assigning a type to the variable 'typename' (line 2783)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2783, 48), 'typename', call_assignment_75831_88041)
    
    # Assigning a Name to a Subscript (line 2785):
    
    # Assigning a Name to a Subscript (line 2785):
    # Getting the type of 'typespec' (line 2785)
    typespec_88042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2785, 46), 'typespec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2785)
    n_88043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2785, 29), 'n')
    # Getting the type of 'vars' (line 2785)
    vars_88044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2785, 24), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2785)
    getitem___88045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2785, 24), vars_88044, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2785)
    subscript_call_result_88046 = invoke(stypy.reporting.localization.Localization(__file__, 2785, 24), getitem___88045, n_88043)
    
    str_88047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2785, 32), 'str', 'typespec')
    # Storing an element on a container (line 2785)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2785, 24), subscript_call_result_88046, (str_88047, typespec_88042))
    
    # Getting the type of 'kindselect' (line 2786)
    kindselect_88048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2786, 27), 'kindselect')
    # Testing the type of an if condition (line 2786)
    if_condition_88049 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2786, 24), kindselect_88048)
    # Assigning a type to the variable 'if_condition_88049' (line 2786)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2786, 24), 'if_condition_88049', if_condition_88049)
    # SSA begins for if statement (line 2786)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    str_88050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2787, 31), 'str', 'kind')
    # Getting the type of 'kindselect' (line 2787)
    kindselect_88051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2787, 41), 'kindselect')
    # Applying the binary operator 'in' (line 2787)
    result_contains_88052 = python_operator(stypy.reporting.localization.Localization(__file__, 2787, 31), 'in', str_88050, kindselect_88051)
    
    # Testing the type of an if condition (line 2787)
    if_condition_88053 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2787, 28), result_contains_88052)
    # Assigning a type to the variable 'if_condition_88053' (line 2787)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2787, 28), 'if_condition_88053', if_condition_88053)
    # SSA begins for if statement (line 2787)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # SSA begins for try-except statement (line 2788)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Subscript (line 2789):
    
    # Assigning a Call to a Subscript (line 2789):
    
    # Call to eval(...): (line 2789)
    # Processing the call arguments (line 2789)
    
    # Obtaining the type of the subscript
    str_88055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2790, 51), 'str', 'kind')
    # Getting the type of 'kindselect' (line 2790)
    kindselect_88056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2790, 40), 'kindselect', False)
    # Obtaining the member '__getitem__' of a type (line 2790)
    getitem___88057 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2790, 40), kindselect_88056, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2790)
    subscript_call_result_88058 = invoke(stypy.reporting.localization.Localization(__file__, 2790, 40), getitem___88057, str_88055)
    
    
    # Obtaining an instance of the builtin type 'dict' (line 2790)
    dict_88059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2790, 60), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2790)
    
    # Getting the type of 'params' (line 2790)
    params_88060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2790, 64), 'params', False)
    # Processing the call keyword arguments (line 2789)
    kwargs_88061 = {}
    # Getting the type of 'eval' (line 2789)
    eval_88054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2789, 57), 'eval', False)
    # Calling eval(args, kwargs) (line 2789)
    eval_call_result_88062 = invoke(stypy.reporting.localization.Localization(__file__, 2789, 57), eval_88054, *[subscript_call_result_88058, dict_88059, params_88060], **kwargs_88061)
    
    # Getting the type of 'kindselect' (line 2789)
    kindselect_88063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2789, 36), 'kindselect')
    str_88064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2789, 47), 'str', 'kind')
    # Storing an element on a container (line 2789)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2789, 36), kindselect_88063, (str_88064, eval_call_result_88062))
    # SSA branch for the except part of a try statement (line 2788)
    # SSA branch for the except '<any exception>' branch of a try statement (line 2788)
    module_type_store.open_ssa_branch('except')
    pass
    # SSA join for try-except statement (line 2788)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2787)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 2793):
    
    # Assigning a Name to a Subscript (line 2793):
    # Getting the type of 'kindselect' (line 2793)
    kindselect_88065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2793, 54), 'kindselect')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2793)
    n_88066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2793, 33), 'n')
    # Getting the type of 'vars' (line 2793)
    vars_88067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2793, 28), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2793)
    getitem___88068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2793, 28), vars_88067, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2793)
    subscript_call_result_88069 = invoke(stypy.reporting.localization.Localization(__file__, 2793, 28), getitem___88068, n_88066)
    
    str_88070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2793, 36), 'str', 'kindselector')
    # Storing an element on a container (line 2793)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2793, 28), subscript_call_result_88069, (str_88070, kindselect_88065))
    # SSA join for if statement (line 2786)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'charselect' (line 2794)
    charselect_88071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2794, 27), 'charselect')
    # Testing the type of an if condition (line 2794)
    if_condition_88072 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2794, 24), charselect_88071)
    # Assigning a type to the variable 'if_condition_88072' (line 2794)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2794, 24), 'if_condition_88072', if_condition_88072)
    # SSA begins for if statement (line 2794)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Subscript (line 2795):
    
    # Assigning a Name to a Subscript (line 2795):
    # Getting the type of 'charselect' (line 2795)
    charselect_88073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2795, 54), 'charselect')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2795)
    n_88074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2795, 33), 'n')
    # Getting the type of 'vars' (line 2795)
    vars_88075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2795, 28), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2795)
    getitem___88076 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2795, 28), vars_88075, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2795)
    subscript_call_result_88077 = invoke(stypy.reporting.localization.Localization(__file__, 2795, 28), getitem___88076, n_88074)
    
    str_88078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2795, 36), 'str', 'charselector')
    # Storing an element on a container (line 2795)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2795, 28), subscript_call_result_88077, (str_88078, charselect_88073))
    # SSA join for if statement (line 2794)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'typename' (line 2796)
    typename_88079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2796, 27), 'typename')
    # Testing the type of an if condition (line 2796)
    if_condition_88080 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2796, 24), typename_88079)
    # Assigning a type to the variable 'if_condition_88080' (line 2796)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2796, 24), 'if_condition_88080', if_condition_88080)
    # SSA begins for if statement (line 2796)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Subscript (line 2797):
    
    # Assigning a Name to a Subscript (line 2797):
    # Getting the type of 'typename' (line 2797)
    typename_88081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2797, 50), 'typename')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2797)
    n_88082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2797, 33), 'n')
    # Getting the type of 'vars' (line 2797)
    vars_88083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2797, 28), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2797)
    getitem___88084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2797, 28), vars_88083, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2797)
    subscript_call_result_88085 = invoke(stypy.reporting.localization.Localization(__file__, 2797, 28), getitem___88084, n_88082)
    
    str_88086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2797, 36), 'str', 'typename')
    # Storing an element on a container (line 2797)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2797, 28), subscript_call_result_88085, (str_88086, typename_88081))
    # SSA join for if statement (line 2796)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'ispure' (line 2798)
    ispure_88087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2798, 27), 'ispure')
    # Testing the type of an if condition (line 2798)
    if_condition_88088 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2798, 24), ispure_88087)
    # Assigning a type to the variable 'if_condition_88088' (line 2798)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2798, 24), 'if_condition_88088', if_condition_88088)
    # SSA begins for if statement (line 2798)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Subscript (line 2799):
    
    # Assigning a Call to a Subscript (line 2799):
    
    # Call to setattrspec(...): (line 2799)
    # Processing the call arguments (line 2799)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2799)
    n_88090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2799, 55), 'n', False)
    # Getting the type of 'vars' (line 2799)
    vars_88091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2799, 50), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2799)
    getitem___88092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2799, 50), vars_88091, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2799)
    subscript_call_result_88093 = invoke(stypy.reporting.localization.Localization(__file__, 2799, 50), getitem___88092, n_88090)
    
    str_88094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2799, 59), 'str', 'pure')
    # Processing the call keyword arguments (line 2799)
    kwargs_88095 = {}
    # Getting the type of 'setattrspec' (line 2799)
    setattrspec_88089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2799, 38), 'setattrspec', False)
    # Calling setattrspec(args, kwargs) (line 2799)
    setattrspec_call_result_88096 = invoke(stypy.reporting.localization.Localization(__file__, 2799, 38), setattrspec_88089, *[subscript_call_result_88093, str_88094], **kwargs_88095)
    
    # Getting the type of 'vars' (line 2799)
    vars_88097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2799, 28), 'vars')
    # Getting the type of 'n' (line 2799)
    n_88098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2799, 33), 'n')
    # Storing an element on a container (line 2799)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2799, 28), vars_88097, (n_88098, setattrspec_call_result_88096))
    # SSA join for if statement (line 2798)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'isrec' (line 2800)
    isrec_88099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2800, 27), 'isrec')
    # Testing the type of an if condition (line 2800)
    if_condition_88100 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2800, 24), isrec_88099)
    # Assigning a type to the variable 'if_condition_88100' (line 2800)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2800, 24), 'if_condition_88100', if_condition_88100)
    # SSA begins for if statement (line 2800)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Subscript (line 2801):
    
    # Assigning a Call to a Subscript (line 2801):
    
    # Call to setattrspec(...): (line 2801)
    # Processing the call arguments (line 2801)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2801)
    n_88102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2801, 55), 'n', False)
    # Getting the type of 'vars' (line 2801)
    vars_88103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2801, 50), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2801)
    getitem___88104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2801, 50), vars_88103, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2801)
    subscript_call_result_88105 = invoke(stypy.reporting.localization.Localization(__file__, 2801, 50), getitem___88104, n_88102)
    
    str_88106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2801, 59), 'str', 'recursive')
    # Processing the call keyword arguments (line 2801)
    kwargs_88107 = {}
    # Getting the type of 'setattrspec' (line 2801)
    setattrspec_88101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2801, 38), 'setattrspec', False)
    # Calling setattrspec(args, kwargs) (line 2801)
    setattrspec_call_result_88108 = invoke(stypy.reporting.localization.Localization(__file__, 2801, 38), setattrspec_88101, *[subscript_call_result_88105, str_88106], **kwargs_88107)
    
    # Getting the type of 'vars' (line 2801)
    vars_88109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2801, 28), 'vars')
    # Getting the type of 'n' (line 2801)
    n_88110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2801, 33), 'n')
    # Storing an element on a container (line 2801)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2801, 28), vars_88109, (n_88110, setattrspec_call_result_88108))
    # SSA join for if statement (line 2800)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 2780)
    module_type_store.open_ssa_branch('else')
    
    # Call to outmess(...): (line 2803)
    # Processing the call arguments (line 2803)
    str_88112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2804, 28), 'str', 'analyzevars: prefix (%s) were not used\n')
    
    # Call to repr(...): (line 2804)
    # Processing the call arguments (line 2804)
    
    # Obtaining the type of the subscript
    str_88114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2804, 84), 'str', 'prefix')
    # Getting the type of 'block' (line 2804)
    block_88115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2804, 78), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2804)
    getitem___88116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2804, 78), block_88115, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2804)
    subscript_call_result_88117 = invoke(stypy.reporting.localization.Localization(__file__, 2804, 78), getitem___88116, str_88114)
    
    # Processing the call keyword arguments (line 2804)
    kwargs_88118 = {}
    # Getting the type of 'repr' (line 2804)
    repr_88113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2804, 73), 'repr', False)
    # Calling repr(args, kwargs) (line 2804)
    repr_call_result_88119 = invoke(stypy.reporting.localization.Localization(__file__, 2804, 73), repr_88113, *[subscript_call_result_88117], **kwargs_88118)
    
    # Applying the binary operator '%' (line 2804)
    result_mod_88120 = python_operator(stypy.reporting.localization.Localization(__file__, 2804, 28), '%', str_88112, repr_call_result_88119)
    
    # Processing the call keyword arguments (line 2803)
    kwargs_88121 = {}
    # Getting the type of 'outmess' (line 2803)
    outmess_88111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2803, 24), 'outmess', False)
    # Calling outmess(args, kwargs) (line 2803)
    outmess_call_result_88122 = invoke(stypy.reporting.localization.Localization(__file__, 2803, 24), outmess_88111, *[result_mod_88120], **kwargs_88121)
    
    # SSA join for if statement (line 2780)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2771)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2768)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2765)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    
    # Obtaining the type of the subscript
    str_88123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2805, 17), 'str', 'block')
    # Getting the type of 'block' (line 2805)
    block_88124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2805, 11), 'block')
    # Obtaining the member '__getitem__' of a type (line 2805)
    getitem___88125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2805, 11), block_88124, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2805)
    subscript_call_result_88126 = invoke(stypy.reporting.localization.Localization(__file__, 2805, 11), getitem___88125, str_88123)
    
    
    # Obtaining an instance of the builtin type 'list' (line 2805)
    list_88127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2805, 29), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2805)
    # Adding element type (line 2805)
    str_88128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2805, 30), 'str', 'module')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2805, 29), list_88127, str_88128)
    # Adding element type (line 2805)
    str_88129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2805, 40), 'str', 'pythonmodule')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2805, 29), list_88127, str_88129)
    # Adding element type (line 2805)
    str_88130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2805, 56), 'str', 'python module')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2805, 29), list_88127, str_88130)
    # Adding element type (line 2805)
    str_88131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2805, 73), 'str', 'block data')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2805, 29), list_88127, str_88131)
    
    # Applying the binary operator 'in' (line 2805)
    result_contains_88132 = python_operator(stypy.reporting.localization.Localization(__file__, 2805, 11), 'in', subscript_call_result_88126, list_88127)
    
    # Applying the 'not' unary operator (line 2805)
    result_not__88133 = python_operator(stypy.reporting.localization.Localization(__file__, 2805, 7), 'not', result_contains_88132)
    
    # Testing the type of an if condition (line 2805)
    if_condition_88134 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2805, 4), result_not__88133)
    # Assigning a type to the variable 'if_condition_88134' (line 2805)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2805, 4), 'if_condition_88134', if_condition_88134)
    # SSA begins for if statement (line 2805)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    str_88135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2806, 11), 'str', 'commonvars')
    # Getting the type of 'block' (line 2806)
    block_88136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2806, 27), 'block')
    # Applying the binary operator 'in' (line 2806)
    result_contains_88137 = python_operator(stypy.reporting.localization.Localization(__file__, 2806, 11), 'in', str_88135, block_88136)
    
    # Testing the type of an if condition (line 2806)
    if_condition_88138 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2806, 8), result_contains_88137)
    # Assigning a type to the variable 'if_condition_88138' (line 2806)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2806, 8), 'if_condition_88138', if_condition_88138)
    # SSA begins for if statement (line 2806)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2807):
    
    # Assigning a Call to a Name (line 2807):
    
    # Call to copy(...): (line 2807)
    # Processing the call arguments (line 2807)
    
    # Obtaining the type of the subscript
    str_88141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2807, 41), 'str', 'args')
    # Getting the type of 'block' (line 2807)
    block_88142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2807, 35), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2807)
    getitem___88143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2807, 35), block_88142, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2807)
    subscript_call_result_88144 = invoke(stypy.reporting.localization.Localization(__file__, 2807, 35), getitem___88143, str_88141)
    
    
    # Obtaining the type of the subscript
    str_88145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2807, 57), 'str', 'commonvars')
    # Getting the type of 'block' (line 2807)
    block_88146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2807, 51), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2807)
    getitem___88147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2807, 51), block_88146, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2807)
    subscript_call_result_88148 = invoke(stypy.reporting.localization.Localization(__file__, 2807, 51), getitem___88147, str_88145)
    
    # Applying the binary operator '+' (line 2807)
    result_add_88149 = python_operator(stypy.reporting.localization.Localization(__file__, 2807, 35), '+', subscript_call_result_88144, subscript_call_result_88148)
    
    # Processing the call keyword arguments (line 2807)
    kwargs_88150 = {}
    # Getting the type of 'copy' (line 2807)
    copy_88139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2807, 25), 'copy', False)
    # Obtaining the member 'copy' of a type (line 2807)
    copy_88140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2807, 25), copy_88139, 'copy')
    # Calling copy(args, kwargs) (line 2807)
    copy_call_result_88151 = invoke(stypy.reporting.localization.Localization(__file__, 2807, 25), copy_88140, *[result_add_88149], **kwargs_88150)
    
    # Assigning a type to the variable 'neededvars' (line 2807)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2807, 12), 'neededvars', copy_call_result_88151)
    # SSA branch for the else part of an if statement (line 2806)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Name (line 2809):
    
    # Assigning a Call to a Name (line 2809):
    
    # Call to copy(...): (line 2809)
    # Processing the call arguments (line 2809)
    
    # Obtaining the type of the subscript
    str_88154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2809, 41), 'str', 'args')
    # Getting the type of 'block' (line 2809)
    block_88155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2809, 35), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2809)
    getitem___88156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2809, 35), block_88155, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2809)
    subscript_call_result_88157 = invoke(stypy.reporting.localization.Localization(__file__, 2809, 35), getitem___88156, str_88154)
    
    # Processing the call keyword arguments (line 2809)
    kwargs_88158 = {}
    # Getting the type of 'copy' (line 2809)
    copy_88152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2809, 25), 'copy', False)
    # Obtaining the member 'copy' of a type (line 2809)
    copy_88153 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2809, 25), copy_88152, 'copy')
    # Calling copy(args, kwargs) (line 2809)
    copy_call_result_88159 = invoke(stypy.reporting.localization.Localization(__file__, 2809, 25), copy_88153, *[subscript_call_result_88157], **kwargs_88158)
    
    # Assigning a type to the variable 'neededvars' (line 2809)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2809, 12), 'neededvars', copy_call_result_88159)
    # SSA join for if statement (line 2806)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to list(...): (line 2810)
    # Processing the call arguments (line 2810)
    
    # Call to keys(...): (line 2810)
    # Processing the call keyword arguments (line 2810)
    kwargs_88163 = {}
    # Getting the type of 'vars' (line 2810)
    vars_88161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2810, 22), 'vars', False)
    # Obtaining the member 'keys' of a type (line 2810)
    keys_88162 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2810, 22), vars_88161, 'keys')
    # Calling keys(args, kwargs) (line 2810)
    keys_call_result_88164 = invoke(stypy.reporting.localization.Localization(__file__, 2810, 22), keys_88162, *[], **kwargs_88163)
    
    # Processing the call keyword arguments (line 2810)
    kwargs_88165 = {}
    # Getting the type of 'list' (line 2810)
    list_88160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2810, 17), 'list', False)
    # Calling list(args, kwargs) (line 2810)
    list_call_result_88166 = invoke(stypy.reporting.localization.Localization(__file__, 2810, 17), list_88160, *[keys_call_result_88164], **kwargs_88165)
    
    # Testing the type of a for loop iterable (line 2810)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2810, 8), list_call_result_88166)
    # Getting the type of the for loop variable (line 2810)
    for_loop_var_88167 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2810, 8), list_call_result_88166)
    # Assigning a type to the variable 'n' (line 2810)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2810, 8), 'n', for_loop_var_88167)
    # SSA begins for a for statement (line 2810)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to (...): (line 2811)
    # Processing the call arguments (line 2811)
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2811)
    n_88173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2811, 58), 'n', False)
    # Getting the type of 'vars' (line 2811)
    vars_88174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2811, 53), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2811)
    getitem___88175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2811, 53), vars_88174, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2811)
    subscript_call_result_88176 = invoke(stypy.reporting.localization.Localization(__file__, 2811, 53), getitem___88175, n_88173)
    
    # Processing the call keyword arguments (line 2811)
    kwargs_88177 = {}
    
    # Call to l_or(...): (line 2811)
    # Processing the call arguments (line 2811)
    # Getting the type of 'isintent_callback' (line 2811)
    isintent_callback_88169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2811, 20), 'isintent_callback', False)
    # Getting the type of 'isintent_aux' (line 2811)
    isintent_aux_88170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2811, 39), 'isintent_aux', False)
    # Processing the call keyword arguments (line 2811)
    kwargs_88171 = {}
    # Getting the type of 'l_or' (line 2811)
    l_or_88168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2811, 15), 'l_or', False)
    # Calling l_or(args, kwargs) (line 2811)
    l_or_call_result_88172 = invoke(stypy.reporting.localization.Localization(__file__, 2811, 15), l_or_88168, *[isintent_callback_88169, isintent_aux_88170], **kwargs_88171)
    
    # Calling (args, kwargs) (line 2811)
    _call_result_88178 = invoke(stypy.reporting.localization.Localization(__file__, 2811, 15), l_or_call_result_88172, *[subscript_call_result_88176], **kwargs_88177)
    
    # Testing the type of an if condition (line 2811)
    if_condition_88179 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2811, 12), _call_result_88178)
    # Assigning a type to the variable 'if_condition_88179' (line 2811)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2811, 12), 'if_condition_88179', if_condition_88179)
    # SSA begins for if statement (line 2811)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2812)
    # Processing the call arguments (line 2812)
    # Getting the type of 'n' (line 2812)
    n_88182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2812, 34), 'n', False)
    # Processing the call keyword arguments (line 2812)
    kwargs_88183 = {}
    # Getting the type of 'neededvars' (line 2812)
    neededvars_88180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2812, 16), 'neededvars', False)
    # Obtaining the member 'append' of a type (line 2812)
    append_88181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2812, 16), neededvars_88180, 'append')
    # Calling append(args, kwargs) (line 2812)
    append_call_result_88184 = invoke(stypy.reporting.localization.Localization(__file__, 2812, 16), append_88181, *[n_88182], **kwargs_88183)
    
    # SSA join for if statement (line 2811)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_88185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2813, 11), 'str', 'entry')
    # Getting the type of 'block' (line 2813)
    block_88186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2813, 22), 'block')
    # Applying the binary operator 'in' (line 2813)
    result_contains_88187 = python_operator(stypy.reporting.localization.Localization(__file__, 2813, 11), 'in', str_88185, block_88186)
    
    # Testing the type of an if condition (line 2813)
    if_condition_88188 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2813, 8), result_contains_88187)
    # Assigning a type to the variable 'if_condition_88188' (line 2813)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2813, 8), 'if_condition_88188', if_condition_88188)
    # SSA begins for if statement (line 2813)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to extend(...): (line 2814)
    # Processing the call arguments (line 2814)
    
    # Call to list(...): (line 2814)
    # Processing the call arguments (line 2814)
    
    # Call to keys(...): (line 2814)
    # Processing the call keyword arguments (line 2814)
    kwargs_88197 = {}
    
    # Obtaining the type of the subscript
    str_88192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2814, 41), 'str', 'entry')
    # Getting the type of 'block' (line 2814)
    block_88193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2814, 35), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2814)
    getitem___88194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2814, 35), block_88193, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2814)
    subscript_call_result_88195 = invoke(stypy.reporting.localization.Localization(__file__, 2814, 35), getitem___88194, str_88192)
    
    # Obtaining the member 'keys' of a type (line 2814)
    keys_88196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2814, 35), subscript_call_result_88195, 'keys')
    # Calling keys(args, kwargs) (line 2814)
    keys_call_result_88198 = invoke(stypy.reporting.localization.Localization(__file__, 2814, 35), keys_88196, *[], **kwargs_88197)
    
    # Processing the call keyword arguments (line 2814)
    kwargs_88199 = {}
    # Getting the type of 'list' (line 2814)
    list_88191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2814, 30), 'list', False)
    # Calling list(args, kwargs) (line 2814)
    list_call_result_88200 = invoke(stypy.reporting.localization.Localization(__file__, 2814, 30), list_88191, *[keys_call_result_88198], **kwargs_88199)
    
    # Processing the call keyword arguments (line 2814)
    kwargs_88201 = {}
    # Getting the type of 'neededvars' (line 2814)
    neededvars_88189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2814, 12), 'neededvars', False)
    # Obtaining the member 'extend' of a type (line 2814)
    extend_88190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2814, 12), neededvars_88189, 'extend')
    # Calling extend(args, kwargs) (line 2814)
    extend_call_result_88202 = invoke(stypy.reporting.localization.Localization(__file__, 2814, 12), extend_88190, *[list_call_result_88200], **kwargs_88201)
    
    
    
    # Call to list(...): (line 2815)
    # Processing the call arguments (line 2815)
    
    # Call to keys(...): (line 2815)
    # Processing the call keyword arguments (line 2815)
    kwargs_88209 = {}
    
    # Obtaining the type of the subscript
    str_88204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2815, 32), 'str', 'entry')
    # Getting the type of 'block' (line 2815)
    block_88205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2815, 26), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2815)
    getitem___88206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2815, 26), block_88205, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2815)
    subscript_call_result_88207 = invoke(stypy.reporting.localization.Localization(__file__, 2815, 26), getitem___88206, str_88204)
    
    # Obtaining the member 'keys' of a type (line 2815)
    keys_88208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2815, 26), subscript_call_result_88207, 'keys')
    # Calling keys(args, kwargs) (line 2815)
    keys_call_result_88210 = invoke(stypy.reporting.localization.Localization(__file__, 2815, 26), keys_88208, *[], **kwargs_88209)
    
    # Processing the call keyword arguments (line 2815)
    kwargs_88211 = {}
    # Getting the type of 'list' (line 2815)
    list_88203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2815, 21), 'list', False)
    # Calling list(args, kwargs) (line 2815)
    list_call_result_88212 = invoke(stypy.reporting.localization.Localization(__file__, 2815, 21), list_88203, *[keys_call_result_88210], **kwargs_88211)
    
    # Testing the type of a for loop iterable (line 2815)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2815, 12), list_call_result_88212)
    # Getting the type of the for loop variable (line 2815)
    for_loop_var_88213 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2815, 12), list_call_result_88212)
    # Assigning a type to the variable 'k' (line 2815)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2815, 12), 'k', for_loop_var_88213)
    # SSA begins for a for statement (line 2815)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 2816)
    k_88214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2816, 40), 'k')
    
    # Obtaining the type of the subscript
    str_88215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2816, 31), 'str', 'entry')
    # Getting the type of 'block' (line 2816)
    block_88216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2816, 25), 'block')
    # Obtaining the member '__getitem__' of a type (line 2816)
    getitem___88217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2816, 25), block_88216, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2816)
    subscript_call_result_88218 = invoke(stypy.reporting.localization.Localization(__file__, 2816, 25), getitem___88217, str_88215)
    
    # Obtaining the member '__getitem__' of a type (line 2816)
    getitem___88219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2816, 25), subscript_call_result_88218, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2816)
    subscript_call_result_88220 = invoke(stypy.reporting.localization.Localization(__file__, 2816, 25), getitem___88219, k_88214)
    
    # Testing the type of a for loop iterable (line 2816)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2816, 16), subscript_call_result_88220)
    # Getting the type of the for loop variable (line 2816)
    for_loop_var_88221 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2816, 16), subscript_call_result_88220)
    # Assigning a type to the variable 'n' (line 2816)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2816, 16), 'n', for_loop_var_88221)
    # SSA begins for a for statement (line 2816)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'n' (line 2817)
    n_88222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2817, 23), 'n')
    # Getting the type of 'neededvars' (line 2817)
    neededvars_88223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2817, 32), 'neededvars')
    # Applying the binary operator 'notin' (line 2817)
    result_contains_88224 = python_operator(stypy.reporting.localization.Localization(__file__, 2817, 23), 'notin', n_88222, neededvars_88223)
    
    # Testing the type of an if condition (line 2817)
    if_condition_88225 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2817, 20), result_contains_88224)
    # Assigning a type to the variable 'if_condition_88225' (line 2817)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2817, 20), 'if_condition_88225', if_condition_88225)
    # SSA begins for if statement (line 2817)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2818)
    # Processing the call arguments (line 2818)
    # Getting the type of 'n' (line 2818)
    n_88228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2818, 42), 'n', False)
    # Processing the call keyword arguments (line 2818)
    kwargs_88229 = {}
    # Getting the type of 'neededvars' (line 2818)
    neededvars_88226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2818, 24), 'neededvars', False)
    # Obtaining the member 'append' of a type (line 2818)
    append_88227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2818, 24), neededvars_88226, 'append')
    # Calling append(args, kwargs) (line 2818)
    append_call_result_88230 = invoke(stypy.reporting.localization.Localization(__file__, 2818, 24), append_88227, *[n_88228], **kwargs_88229)
    
    # SSA join for if statement (line 2817)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2813)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    str_88231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2819, 17), 'str', 'block')
    # Getting the type of 'block' (line 2819)
    block_88232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2819, 11), 'block')
    # Obtaining the member '__getitem__' of a type (line 2819)
    getitem___88233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2819, 11), block_88232, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2819)
    subscript_call_result_88234 = invoke(stypy.reporting.localization.Localization(__file__, 2819, 11), getitem___88233, str_88231)
    
    str_88235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2819, 29), 'str', 'function')
    # Applying the binary operator '==' (line 2819)
    result_eq_88236 = python_operator(stypy.reporting.localization.Localization(__file__, 2819, 11), '==', subscript_call_result_88234, str_88235)
    
    # Testing the type of an if condition (line 2819)
    if_condition_88237 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2819, 8), result_eq_88236)
    # Assigning a type to the variable 'if_condition_88237' (line 2819)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2819, 8), 'if_condition_88237', if_condition_88237)
    # SSA begins for if statement (line 2819)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    str_88238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2820, 15), 'str', 'result')
    # Getting the type of 'block' (line 2820)
    block_88239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2820, 27), 'block')
    # Applying the binary operator 'in' (line 2820)
    result_contains_88240 = python_operator(stypy.reporting.localization.Localization(__file__, 2820, 15), 'in', str_88238, block_88239)
    
    # Testing the type of an if condition (line 2820)
    if_condition_88241 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2820, 12), result_contains_88240)
    # Assigning a type to the variable 'if_condition_88241' (line 2820)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2820, 12), 'if_condition_88241', if_condition_88241)
    # SSA begins for if statement (line 2820)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2821)
    # Processing the call arguments (line 2821)
    
    # Obtaining the type of the subscript
    str_88244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2821, 40), 'str', 'result')
    # Getting the type of 'block' (line 2821)
    block_88245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2821, 34), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2821)
    getitem___88246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2821, 34), block_88245, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2821)
    subscript_call_result_88247 = invoke(stypy.reporting.localization.Localization(__file__, 2821, 34), getitem___88246, str_88244)
    
    # Processing the call keyword arguments (line 2821)
    kwargs_88248 = {}
    # Getting the type of 'neededvars' (line 2821)
    neededvars_88242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2821, 16), 'neededvars', False)
    # Obtaining the member 'append' of a type (line 2821)
    append_88243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2821, 16), neededvars_88242, 'append')
    # Calling append(args, kwargs) (line 2821)
    append_call_result_88249 = invoke(stypy.reporting.localization.Localization(__file__, 2821, 16), append_88243, *[subscript_call_result_88247], **kwargs_88248)
    
    # SSA branch for the else part of an if statement (line 2820)
    module_type_store.open_ssa_branch('else')
    
    # Call to append(...): (line 2823)
    # Processing the call arguments (line 2823)
    
    # Obtaining the type of the subscript
    str_88252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2823, 40), 'str', 'name')
    # Getting the type of 'block' (line 2823)
    block_88253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2823, 34), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2823)
    getitem___88254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2823, 34), block_88253, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2823)
    subscript_call_result_88255 = invoke(stypy.reporting.localization.Localization(__file__, 2823, 34), getitem___88254, str_88252)
    
    # Processing the call keyword arguments (line 2823)
    kwargs_88256 = {}
    # Getting the type of 'neededvars' (line 2823)
    neededvars_88250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2823, 16), 'neededvars', False)
    # Obtaining the member 'append' of a type (line 2823)
    append_88251 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2823, 16), neededvars_88250, 'append')
    # Calling append(args, kwargs) (line 2823)
    append_call_result_88257 = invoke(stypy.reporting.localization.Localization(__file__, 2823, 16), append_88251, *[subscript_call_result_88255], **kwargs_88256)
    
    # SSA join for if statement (line 2820)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2819)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    str_88258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2824, 17), 'str', 'block')
    # Getting the type of 'block' (line 2824)
    block_88259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2824, 11), 'block')
    # Obtaining the member '__getitem__' of a type (line 2824)
    getitem___88260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2824, 11), block_88259, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2824)
    subscript_call_result_88261 = invoke(stypy.reporting.localization.Localization(__file__, 2824, 11), getitem___88260, str_88258)
    
    
    # Obtaining an instance of the builtin type 'list' (line 2824)
    list_88262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2824, 29), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2824)
    # Adding element type (line 2824)
    str_88263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2824, 30), 'str', 'subroutine')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2824, 29), list_88262, str_88263)
    # Adding element type (line 2824)
    str_88264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2824, 44), 'str', 'function')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2824, 29), list_88262, str_88264)
    
    # Applying the binary operator 'in' (line 2824)
    result_contains_88265 = python_operator(stypy.reporting.localization.Localization(__file__, 2824, 11), 'in', subscript_call_result_88261, list_88262)
    
    # Testing the type of an if condition (line 2824)
    if_condition_88266 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2824, 8), result_contains_88265)
    # Assigning a type to the variable 'if_condition_88266' (line 2824)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2824, 8), 'if_condition_88266', if_condition_88266)
    # SSA begins for if statement (line 2824)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2825):
    
    # Assigning a Subscript to a Name (line 2825):
    
    # Obtaining the type of the subscript
    str_88267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2825, 25), 'str', 'name')
    # Getting the type of 'block' (line 2825)
    block_88268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2825, 19), 'block')
    # Obtaining the member '__getitem__' of a type (line 2825)
    getitem___88269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2825, 19), block_88268, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2825)
    subscript_call_result_88270 = invoke(stypy.reporting.localization.Localization(__file__, 2825, 19), getitem___88269, str_88267)
    
    # Assigning a type to the variable 'name' (line 2825)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2825, 12), 'name', subscript_call_result_88270)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'name' (line 2826)
    name_88271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2826, 15), 'name')
    # Getting the type of 'vars' (line 2826)
    vars_88272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2826, 23), 'vars')
    # Applying the binary operator 'in' (line 2826)
    result_contains_88273 = python_operator(stypy.reporting.localization.Localization(__file__, 2826, 15), 'in', name_88271, vars_88272)
    
    
    str_88274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2826, 32), 'str', 'intent')
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 2826)
    name_88275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2826, 49), 'name')
    # Getting the type of 'vars' (line 2826)
    vars_88276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2826, 44), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2826)
    getitem___88277 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2826, 44), vars_88276, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2826)
    subscript_call_result_88278 = invoke(stypy.reporting.localization.Localization(__file__, 2826, 44), getitem___88277, name_88275)
    
    # Applying the binary operator 'in' (line 2826)
    result_contains_88279 = python_operator(stypy.reporting.localization.Localization(__file__, 2826, 32), 'in', str_88274, subscript_call_result_88278)
    
    # Applying the binary operator 'and' (line 2826)
    result_and_keyword_88280 = python_operator(stypy.reporting.localization.Localization(__file__, 2826, 15), 'and', result_contains_88273, result_contains_88279)
    
    # Testing the type of an if condition (line 2826)
    if_condition_88281 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2826, 12), result_and_keyword_88280)
    # Assigning a type to the variable 'if_condition_88281' (line 2826)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2826, 12), 'if_condition_88281', if_condition_88281)
    # SSA begins for if statement (line 2826)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 2827):
    
    # Assigning a Subscript to a Subscript (line 2827):
    
    # Obtaining the type of the subscript
    str_88282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2827, 45), 'str', 'intent')
    
    # Obtaining the type of the subscript
    # Getting the type of 'name' (line 2827)
    name_88283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2827, 39), 'name')
    # Getting the type of 'vars' (line 2827)
    vars_88284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2827, 34), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2827)
    getitem___88285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2827, 34), vars_88284, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2827)
    subscript_call_result_88286 = invoke(stypy.reporting.localization.Localization(__file__, 2827, 34), getitem___88285, name_88283)
    
    # Obtaining the member '__getitem__' of a type (line 2827)
    getitem___88287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2827, 34), subscript_call_result_88286, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2827)
    subscript_call_result_88288 = invoke(stypy.reporting.localization.Localization(__file__, 2827, 34), getitem___88287, str_88282)
    
    # Getting the type of 'block' (line 2827)
    block_88289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2827, 16), 'block')
    str_88290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2827, 22), 'str', 'intent')
    # Storing an element on a container (line 2827)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2827, 16), block_88289, (str_88290, subscript_call_result_88288))
    # SSA join for if statement (line 2826)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2824)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    str_88291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2828, 17), 'str', 'block')
    # Getting the type of 'block' (line 2828)
    block_88292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2828, 11), 'block')
    # Obtaining the member '__getitem__' of a type (line 2828)
    getitem___88293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2828, 11), block_88292, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2828)
    subscript_call_result_88294 = invoke(stypy.reporting.localization.Localization(__file__, 2828, 11), getitem___88293, str_88291)
    
    str_88295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2828, 29), 'str', 'type')
    # Applying the binary operator '==' (line 2828)
    result_eq_88296 = python_operator(stypy.reporting.localization.Localization(__file__, 2828, 11), '==', subscript_call_result_88294, str_88295)
    
    # Testing the type of an if condition (line 2828)
    if_condition_88297 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2828, 8), result_eq_88296)
    # Assigning a type to the variable 'if_condition_88297' (line 2828)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2828, 8), 'if_condition_88297', if_condition_88297)
    # SSA begins for if statement (line 2828)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to extend(...): (line 2829)
    # Processing the call arguments (line 2829)
    
    # Call to list(...): (line 2829)
    # Processing the call arguments (line 2829)
    
    # Call to keys(...): (line 2829)
    # Processing the call keyword arguments (line 2829)
    kwargs_88303 = {}
    # Getting the type of 'vars' (line 2829)
    vars_88301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2829, 35), 'vars', False)
    # Obtaining the member 'keys' of a type (line 2829)
    keys_88302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2829, 35), vars_88301, 'keys')
    # Calling keys(args, kwargs) (line 2829)
    keys_call_result_88304 = invoke(stypy.reporting.localization.Localization(__file__, 2829, 35), keys_88302, *[], **kwargs_88303)
    
    # Processing the call keyword arguments (line 2829)
    kwargs_88305 = {}
    # Getting the type of 'list' (line 2829)
    list_88300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2829, 30), 'list', False)
    # Calling list(args, kwargs) (line 2829)
    list_call_result_88306 = invoke(stypy.reporting.localization.Localization(__file__, 2829, 30), list_88300, *[keys_call_result_88304], **kwargs_88305)
    
    # Processing the call keyword arguments (line 2829)
    kwargs_88307 = {}
    # Getting the type of 'neededvars' (line 2829)
    neededvars_88298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2829, 12), 'neededvars', False)
    # Obtaining the member 'extend' of a type (line 2829)
    extend_88299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2829, 12), neededvars_88298, 'extend')
    # Calling extend(args, kwargs) (line 2829)
    extend_call_result_88308 = invoke(stypy.reporting.localization.Localization(__file__, 2829, 12), extend_88299, *[list_call_result_88306], **kwargs_88307)
    
    # SSA join for if statement (line 2828)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to list(...): (line 2830)
    # Processing the call arguments (line 2830)
    
    # Call to keys(...): (line 2830)
    # Processing the call keyword arguments (line 2830)
    kwargs_88312 = {}
    # Getting the type of 'vars' (line 2830)
    vars_88310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2830, 22), 'vars', False)
    # Obtaining the member 'keys' of a type (line 2830)
    keys_88311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2830, 22), vars_88310, 'keys')
    # Calling keys(args, kwargs) (line 2830)
    keys_call_result_88313 = invoke(stypy.reporting.localization.Localization(__file__, 2830, 22), keys_88311, *[], **kwargs_88312)
    
    # Processing the call keyword arguments (line 2830)
    kwargs_88314 = {}
    # Getting the type of 'list' (line 2830)
    list_88309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2830, 17), 'list', False)
    # Calling list(args, kwargs) (line 2830)
    list_call_result_88315 = invoke(stypy.reporting.localization.Localization(__file__, 2830, 17), list_88309, *[keys_call_result_88313], **kwargs_88314)
    
    # Testing the type of a for loop iterable (line 2830)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2830, 8), list_call_result_88315)
    # Getting the type of the for loop variable (line 2830)
    for_loop_var_88316 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2830, 8), list_call_result_88315)
    # Assigning a type to the variable 'n' (line 2830)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2830, 8), 'n', for_loop_var_88316)
    # SSA begins for a for statement (line 2830)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'n' (line 2831)
    n_88317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2831, 15), 'n')
    # Getting the type of 'neededvars' (line 2831)
    neededvars_88318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2831, 24), 'neededvars')
    # Applying the binary operator 'notin' (line 2831)
    result_contains_88319 = python_operator(stypy.reporting.localization.Localization(__file__, 2831, 15), 'notin', n_88317, neededvars_88318)
    
    # Testing the type of an if condition (line 2831)
    if_condition_88320 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2831, 12), result_contains_88319)
    # Assigning a type to the variable 'if_condition_88320' (line 2831)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2831, 12), 'if_condition_88320', if_condition_88320)
    # SSA begins for if statement (line 2831)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Deleting a member
    # Getting the type of 'vars' (line 2832)
    vars_88321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2832, 20), 'vars')
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 2832)
    n_88322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2832, 25), 'n')
    # Getting the type of 'vars' (line 2832)
    vars_88323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2832, 20), 'vars')
    # Obtaining the member '__getitem__' of a type (line 2832)
    getitem___88324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2832, 20), vars_88323, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2832)
    subscript_call_result_88325 = invoke(stypy.reporting.localization.Localization(__file__, 2832, 20), getitem___88324, n_88322)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2832, 16), vars_88321, subscript_call_result_88325)
    # SSA join for if statement (line 2831)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2805)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'vars' (line 2833)
    vars_88326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2833, 11), 'vars')
    # Assigning a type to the variable 'stypy_return_type' (line 2833)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2833, 4), 'stypy_return_type', vars_88326)
    
    # ################# End of 'analyzevars(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'analyzevars' in the type store
    # Getting the type of 'stypy_return_type' (line 2487)
    stypy_return_type_88327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2487, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_88327)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'analyzevars'
    return stypy_return_type_88327

# Assigning a type to the variable 'analyzevars' (line 2487)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2487, 0), 'analyzevars', analyzevars)

# Assigning a Call to a Name (line 2835):

# Assigning a Call to a Name (line 2835):

# Call to compile(...): (line 2835)
# Processing the call arguments (line 2835)
str_88330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2835, 30), 'str', '\\A[a-z]+[\\w$]*\\Z')
# Getting the type of 're' (line 2835)
re_88331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2835, 51), 're', False)
# Obtaining the member 'I' of a type (line 2835)
I_88332 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2835, 51), re_88331, 'I')
# Processing the call keyword arguments (line 2835)
kwargs_88333 = {}
# Getting the type of 're' (line 2835)
re_88328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2835, 19), 're', False)
# Obtaining the member 'compile' of a type (line 2835)
compile_88329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2835, 19), re_88328, 'compile')
# Calling compile(args, kwargs) (line 2835)
compile_call_result_88334 = invoke(stypy.reporting.localization.Localization(__file__, 2835, 19), compile_88329, *[str_88330, I_88332], **kwargs_88333)

# Assigning a type to the variable 'analyzeargs_re_1' (line 2835)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2835, 0), 'analyzeargs_re_1', compile_call_result_88334)

@norecursion
def expr2name(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    
    # Obtaining an instance of the builtin type 'list' (line 2838)
    list_88335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2838, 29), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2838)
    
    defaults = [list_88335]
    # Create a new context for function 'expr2name'
    module_type_store = module_type_store.open_function_context('expr2name', 2838, 0, False)
    
    # Passed parameters checking function
    expr2name.stypy_localization = localization
    expr2name.stypy_type_of_self = None
    expr2name.stypy_type_store = module_type_store
    expr2name.stypy_function_name = 'expr2name'
    expr2name.stypy_param_names_list = ['a', 'block', 'args']
    expr2name.stypy_varargs_param_name = None
    expr2name.stypy_kwargs_param_name = None
    expr2name.stypy_call_defaults = defaults
    expr2name.stypy_call_varargs = varargs
    expr2name.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'expr2name', ['a', 'block', 'args'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'expr2name', localization, ['a', 'block', 'args'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'expr2name(...)' code ##################

    
    # Assigning a Name to a Name (line 2839):
    
    # Assigning a Name to a Name (line 2839):
    # Getting the type of 'a' (line 2839)
    a_88336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2839, 13), 'a')
    # Assigning a type to the variable 'orig_a' (line 2839)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2839, 4), 'orig_a', a_88336)
    
    # Assigning a UnaryOp to a Name (line 2840):
    
    # Assigning a UnaryOp to a Name (line 2840):
    
    
    # Call to match(...): (line 2840)
    # Processing the call arguments (line 2840)
    # Getting the type of 'a' (line 2840)
    a_88339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2840, 43), 'a', False)
    # Processing the call keyword arguments (line 2840)
    kwargs_88340 = {}
    # Getting the type of 'analyzeargs_re_1' (line 2840)
    analyzeargs_re_1_88337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2840, 20), 'analyzeargs_re_1', False)
    # Obtaining the member 'match' of a type (line 2840)
    match_88338 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2840, 20), analyzeargs_re_1_88337, 'match')
    # Calling match(args, kwargs) (line 2840)
    match_call_result_88341 = invoke(stypy.reporting.localization.Localization(__file__, 2840, 20), match_88338, *[a_88339], **kwargs_88340)
    
    # Applying the 'not' unary operator (line 2840)
    result_not__88342 = python_operator(stypy.reporting.localization.Localization(__file__, 2840, 16), 'not', match_call_result_88341)
    
    # Assigning a type to the variable 'a_is_expr' (line 2840)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2840, 4), 'a_is_expr', result_not__88342)
    
    # Getting the type of 'a_is_expr' (line 2841)
    a_is_expr_88343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2841, 7), 'a_is_expr')
    # Testing the type of an if condition (line 2841)
    if_condition_88344 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2841, 4), a_is_expr_88343)
    # Assigning a type to the variable 'if_condition_88344' (line 2841)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2841, 4), 'if_condition_88344', if_condition_88344)
    # SSA begins for if statement (line 2841)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Tuple (line 2842):
    
    # Assigning a Call to a Name:
    
    # Call to buildimplicitrules(...): (line 2842)
    # Processing the call arguments (line 2842)
    # Getting the type of 'block' (line 2842)
    block_88346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2842, 54), 'block', False)
    # Processing the call keyword arguments (line 2842)
    kwargs_88347 = {}
    # Getting the type of 'buildimplicitrules' (line 2842)
    buildimplicitrules_88345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2842, 35), 'buildimplicitrules', False)
    # Calling buildimplicitrules(args, kwargs) (line 2842)
    buildimplicitrules_call_result_88348 = invoke(stypy.reporting.localization.Localization(__file__, 2842, 35), buildimplicitrules_88345, *[block_88346], **kwargs_88347)
    
    # Assigning a type to the variable 'call_assignment_75832' (line 2842)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2842, 8), 'call_assignment_75832', buildimplicitrules_call_result_88348)
    
    # Assigning a Call to a Name (line 2842):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_88351 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2842, 8), 'int')
    # Processing the call keyword arguments
    kwargs_88352 = {}
    # Getting the type of 'call_assignment_75832' (line 2842)
    call_assignment_75832_88349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2842, 8), 'call_assignment_75832', False)
    # Obtaining the member '__getitem__' of a type (line 2842)
    getitem___88350 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2842, 8), call_assignment_75832_88349, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_88353 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___88350, *[int_88351], **kwargs_88352)
    
    # Assigning a type to the variable 'call_assignment_75833' (line 2842)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2842, 8), 'call_assignment_75833', getitem___call_result_88353)
    
    # Assigning a Name to a Name (line 2842):
    # Getting the type of 'call_assignment_75833' (line 2842)
    call_assignment_75833_88354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2842, 8), 'call_assignment_75833')
    # Assigning a type to the variable 'implicitrules' (line 2842)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2842, 8), 'implicitrules', call_assignment_75833_88354)
    
    # Assigning a Call to a Name (line 2842):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_88357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2842, 8), 'int')
    # Processing the call keyword arguments
    kwargs_88358 = {}
    # Getting the type of 'call_assignment_75832' (line 2842)
    call_assignment_75832_88355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2842, 8), 'call_assignment_75832', False)
    # Obtaining the member '__getitem__' of a type (line 2842)
    getitem___88356 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2842, 8), call_assignment_75832_88355, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_88359 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___88356, *[int_88357], **kwargs_88358)
    
    # Assigning a type to the variable 'call_assignment_75834' (line 2842)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2842, 8), 'call_assignment_75834', getitem___call_result_88359)
    
    # Assigning a Name to a Name (line 2842):
    # Getting the type of 'call_assignment_75834' (line 2842)
    call_assignment_75834_88360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2842, 8), 'call_assignment_75834')
    # Assigning a type to the variable 'attrrules' (line 2842)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2842, 23), 'attrrules', call_assignment_75834_88360)
    
    # Assigning a Call to a Name (line 2843):
    
    # Assigning a Call to a Name (line 2843):
    
    # Call to determineexprtype(...): (line 2843)
    # Processing the call arguments (line 2843)
    # Getting the type of 'a' (line 2843)
    a_88362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2843, 31), 'a', False)
    
    # Obtaining the type of the subscript
    str_88363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2843, 40), 'str', 'vars')
    # Getting the type of 'block' (line 2843)
    block_88364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2843, 34), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2843)
    getitem___88365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2843, 34), block_88364, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2843)
    subscript_call_result_88366 = invoke(stypy.reporting.localization.Localization(__file__, 2843, 34), getitem___88365, str_88363)
    
    # Getting the type of 'implicitrules' (line 2843)
    implicitrules_88367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2843, 49), 'implicitrules', False)
    # Processing the call keyword arguments (line 2843)
    kwargs_88368 = {}
    # Getting the type of 'determineexprtype' (line 2843)
    determineexprtype_88361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2843, 13), 'determineexprtype', False)
    # Calling determineexprtype(args, kwargs) (line 2843)
    determineexprtype_call_result_88369 = invoke(stypy.reporting.localization.Localization(__file__, 2843, 13), determineexprtype_88361, *[a_88362, subscript_call_result_88366, implicitrules_88367], **kwargs_88368)
    
    # Assigning a type to the variable 'at' (line 2843)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2843, 8), 'at', determineexprtype_call_result_88369)
    
    # Assigning a Str to a Name (line 2844):
    
    # Assigning a Str to a Name (line 2844):
    str_88370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2844, 13), 'str', 'e_')
    # Assigning a type to the variable 'na' (line 2844)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2844, 8), 'na', str_88370)
    
    # Getting the type of 'a' (line 2845)
    a_88371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2845, 17), 'a')
    # Testing the type of a for loop iterable (line 2845)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2845, 8), a_88371)
    # Getting the type of the for loop variable (line 2845)
    for_loop_var_88372 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2845, 8), a_88371)
    # Assigning a type to the variable 'c' (line 2845)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2845, 8), 'c', for_loop_var_88372)
    # SSA begins for a for statement (line 2845)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 2846):
    
    # Assigning a Call to a Name (line 2846):
    
    # Call to lower(...): (line 2846)
    # Processing the call keyword arguments (line 2846)
    kwargs_88375 = {}
    # Getting the type of 'c' (line 2846)
    c_88373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2846, 16), 'c', False)
    # Obtaining the member 'lower' of a type (line 2846)
    lower_88374 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2846, 16), c_88373, 'lower')
    # Calling lower(args, kwargs) (line 2846)
    lower_call_result_88376 = invoke(stypy.reporting.localization.Localization(__file__, 2846, 16), lower_88374, *[], **kwargs_88375)
    
    # Assigning a type to the variable 'c' (line 2846)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2846, 12), 'c', lower_call_result_88376)
    
    
    # Getting the type of 'c' (line 2847)
    c_88377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2847, 15), 'c')
    # Getting the type of 'string' (line 2847)
    string_88378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2847, 24), 'string')
    # Obtaining the member 'ascii_lowercase' of a type (line 2847)
    ascii_lowercase_88379 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2847, 24), string_88378, 'ascii_lowercase')
    # Getting the type of 'string' (line 2847)
    string_88380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2847, 49), 'string')
    # Obtaining the member 'digits' of a type (line 2847)
    digits_88381 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2847, 49), string_88380, 'digits')
    # Applying the binary operator '+' (line 2847)
    result_add_88382 = python_operator(stypy.reporting.localization.Localization(__file__, 2847, 24), '+', ascii_lowercase_88379, digits_88381)
    
    # Applying the binary operator 'notin' (line 2847)
    result_contains_88383 = python_operator(stypy.reporting.localization.Localization(__file__, 2847, 15), 'notin', c_88377, result_add_88382)
    
    # Testing the type of an if condition (line 2847)
    if_condition_88384 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2847, 12), result_contains_88383)
    # Assigning a type to the variable 'if_condition_88384' (line 2847)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2847, 12), 'if_condition_88384', if_condition_88384)
    # SSA begins for if statement (line 2847)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 2848):
    
    # Assigning a Str to a Name (line 2848):
    str_88385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2848, 20), 'str', '_')
    # Assigning a type to the variable 'c' (line 2848)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2848, 16), 'c', str_88385)
    # SSA join for if statement (line 2847)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 2849):
    
    # Assigning a BinOp to a Name (line 2849):
    # Getting the type of 'na' (line 2849)
    na_88386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2849, 17), 'na')
    # Getting the type of 'c' (line 2849)
    c_88387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2849, 22), 'c')
    # Applying the binary operator '+' (line 2849)
    result_add_88388 = python_operator(stypy.reporting.localization.Localization(__file__, 2849, 17), '+', na_88386, c_88387)
    
    # Assigning a type to the variable 'na' (line 2849)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2849, 12), 'na', result_add_88388)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    int_88389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2850, 14), 'int')
    # Getting the type of 'na' (line 2850)
    na_88390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2850, 11), 'na')
    # Obtaining the member '__getitem__' of a type (line 2850)
    getitem___88391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2850, 11), na_88390, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2850)
    subscript_call_result_88392 = invoke(stypy.reporting.localization.Localization(__file__, 2850, 11), getitem___88391, int_88389)
    
    str_88393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2850, 21), 'str', '_')
    # Applying the binary operator '==' (line 2850)
    result_eq_88394 = python_operator(stypy.reporting.localization.Localization(__file__, 2850, 11), '==', subscript_call_result_88392, str_88393)
    
    # Testing the type of an if condition (line 2850)
    if_condition_88395 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2850, 8), result_eq_88394)
    # Assigning a type to the variable 'if_condition_88395' (line 2850)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2850, 8), 'if_condition_88395', if_condition_88395)
    # SSA begins for if statement (line 2850)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 2851):
    
    # Assigning a BinOp to a Name (line 2851):
    # Getting the type of 'na' (line 2851)
    na_88396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2851, 17), 'na')
    str_88397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2851, 22), 'str', 'e')
    # Applying the binary operator '+' (line 2851)
    result_add_88398 = python_operator(stypy.reporting.localization.Localization(__file__, 2851, 17), '+', na_88396, str_88397)
    
    # Assigning a type to the variable 'na' (line 2851)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2851, 12), 'na', result_add_88398)
    # SSA branch for the else part of an if statement (line 2850)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 2853):
    
    # Assigning a BinOp to a Name (line 2853):
    # Getting the type of 'na' (line 2853)
    na_88399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2853, 17), 'na')
    str_88400 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2853, 22), 'str', '_e')
    # Applying the binary operator '+' (line 2853)
    result_add_88401 = python_operator(stypy.reporting.localization.Localization(__file__, 2853, 17), '+', na_88399, str_88400)
    
    # Assigning a type to the variable 'na' (line 2853)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2853, 12), 'na', result_add_88401)
    # SSA join for if statement (line 2850)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 2854):
    
    # Assigning a Name to a Name (line 2854):
    # Getting the type of 'na' (line 2854)
    na_88402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2854, 12), 'na')
    # Assigning a type to the variable 'a' (line 2854)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2854, 8), 'a', na_88402)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'a' (line 2855)
    a_88403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2855, 14), 'a')
    
    # Obtaining the type of the subscript
    str_88404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2855, 25), 'str', 'vars')
    # Getting the type of 'block' (line 2855)
    block_88405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2855, 19), 'block')
    # Obtaining the member '__getitem__' of a type (line 2855)
    getitem___88406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2855, 19), block_88405, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2855)
    subscript_call_result_88407 = invoke(stypy.reporting.localization.Localization(__file__, 2855, 19), getitem___88406, str_88404)
    
    # Applying the binary operator 'in' (line 2855)
    result_contains_88408 = python_operator(stypy.reporting.localization.Localization(__file__, 2855, 14), 'in', a_88403, subscript_call_result_88407)
    
    
    # Getting the type of 'a' (line 2855)
    a_88409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2855, 36), 'a')
    
    # Obtaining the type of the subscript
    str_88410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2855, 47), 'str', 'args')
    # Getting the type of 'block' (line 2855)
    block_88411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2855, 41), 'block')
    # Obtaining the member '__getitem__' of a type (line 2855)
    getitem___88412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2855, 41), block_88411, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2855)
    subscript_call_result_88413 = invoke(stypy.reporting.localization.Localization(__file__, 2855, 41), getitem___88412, str_88410)
    
    # Applying the binary operator 'in' (line 2855)
    result_contains_88414 = python_operator(stypy.reporting.localization.Localization(__file__, 2855, 36), 'in', a_88409, subscript_call_result_88413)
    
    # Applying the binary operator 'or' (line 2855)
    result_or_keyword_88415 = python_operator(stypy.reporting.localization.Localization(__file__, 2855, 14), 'or', result_contains_88408, result_contains_88414)
    
    # Testing the type of an if condition (line 2855)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2855, 8), result_or_keyword_88415)
    # SSA begins for while statement (line 2855)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    # Assigning a BinOp to a Name (line 2856):
    
    # Assigning a BinOp to a Name (line 2856):
    # Getting the type of 'a' (line 2856)
    a_88416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2856, 16), 'a')
    str_88417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2856, 20), 'str', 'r')
    # Applying the binary operator '+' (line 2856)
    result_add_88418 = python_operator(stypy.reporting.localization.Localization(__file__, 2856, 16), '+', a_88416, str_88417)
    
    # Assigning a type to the variable 'a' (line 2856)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2856, 12), 'a', result_add_88418)
    # SSA join for while statement (line 2855)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2841)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'a' (line 2857)
    a_88419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2857, 7), 'a')
    # Getting the type of 'args' (line 2857)
    args_88420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2857, 12), 'args')
    # Applying the binary operator 'in' (line 2857)
    result_contains_88421 = python_operator(stypy.reporting.localization.Localization(__file__, 2857, 7), 'in', a_88419, args_88420)
    
    # Testing the type of an if condition (line 2857)
    if_condition_88422 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2857, 4), result_contains_88421)
    # Assigning a type to the variable 'if_condition_88422' (line 2857)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2857, 4), 'if_condition_88422', if_condition_88422)
    # SSA begins for if statement (line 2857)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 2858):
    
    # Assigning a Num to a Name (line 2858):
    int_88423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2858, 12), 'int')
    # Assigning a type to the variable 'k' (line 2858)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2858, 8), 'k', int_88423)
    
    
    # Getting the type of 'a' (line 2859)
    a_88424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2859, 14), 'a')
    
    # Call to str(...): (line 2859)
    # Processing the call arguments (line 2859)
    # Getting the type of 'k' (line 2859)
    k_88426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2859, 22), 'k', False)
    # Processing the call keyword arguments (line 2859)
    kwargs_88427 = {}
    # Getting the type of 'str' (line 2859)
    str_88425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2859, 18), 'str', False)
    # Calling str(args, kwargs) (line 2859)
    str_call_result_88428 = invoke(stypy.reporting.localization.Localization(__file__, 2859, 18), str_88425, *[k_88426], **kwargs_88427)
    
    # Applying the binary operator '+' (line 2859)
    result_add_88429 = python_operator(stypy.reporting.localization.Localization(__file__, 2859, 14), '+', a_88424, str_call_result_88428)
    
    # Getting the type of 'args' (line 2859)
    args_88430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2859, 28), 'args')
    # Applying the binary operator 'in' (line 2859)
    result_contains_88431 = python_operator(stypy.reporting.localization.Localization(__file__, 2859, 14), 'in', result_add_88429, args_88430)
    
    # Testing the type of an if condition (line 2859)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2859, 8), result_contains_88431)
    # SSA begins for while statement (line 2859)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    # Assigning a BinOp to a Name (line 2860):
    
    # Assigning a BinOp to a Name (line 2860):
    # Getting the type of 'k' (line 2860)
    k_88432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2860, 16), 'k')
    int_88433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2860, 20), 'int')
    # Applying the binary operator '+' (line 2860)
    result_add_88434 = python_operator(stypy.reporting.localization.Localization(__file__, 2860, 16), '+', k_88432, int_88433)
    
    # Assigning a type to the variable 'k' (line 2860)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2860, 12), 'k', result_add_88434)
    # SSA join for while statement (line 2859)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 2861):
    
    # Assigning a BinOp to a Name (line 2861):
    # Getting the type of 'a' (line 2861)
    a_88435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2861, 12), 'a')
    
    # Call to str(...): (line 2861)
    # Processing the call arguments (line 2861)
    # Getting the type of 'k' (line 2861)
    k_88437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2861, 20), 'k', False)
    # Processing the call keyword arguments (line 2861)
    kwargs_88438 = {}
    # Getting the type of 'str' (line 2861)
    str_88436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2861, 16), 'str', False)
    # Calling str(args, kwargs) (line 2861)
    str_call_result_88439 = invoke(stypy.reporting.localization.Localization(__file__, 2861, 16), str_88436, *[k_88437], **kwargs_88438)
    
    # Applying the binary operator '+' (line 2861)
    result_add_88440 = python_operator(stypy.reporting.localization.Localization(__file__, 2861, 12), '+', a_88435, str_call_result_88439)
    
    # Assigning a type to the variable 'a' (line 2861)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2861, 8), 'a', result_add_88440)
    # SSA join for if statement (line 2857)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'a_is_expr' (line 2862)
    a_is_expr_88441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2862, 7), 'a_is_expr')
    # Testing the type of an if condition (line 2862)
    if_condition_88442 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2862, 4), a_is_expr_88441)
    # Assigning a type to the variable 'if_condition_88442' (line 2862)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2862, 4), 'if_condition_88442', if_condition_88442)
    # SSA begins for if statement (line 2862)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Subscript (line 2863):
    
    # Assigning a Name to a Subscript (line 2863):
    # Getting the type of 'at' (line 2863)
    at_88443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2863, 27), 'at')
    
    # Obtaining the type of the subscript
    str_88444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2863, 14), 'str', 'vars')
    # Getting the type of 'block' (line 2863)
    block_88445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2863, 8), 'block')
    # Obtaining the member '__getitem__' of a type (line 2863)
    getitem___88446 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2863, 8), block_88445, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2863)
    subscript_call_result_88447 = invoke(stypy.reporting.localization.Localization(__file__, 2863, 8), getitem___88446, str_88444)
    
    # Getting the type of 'a' (line 2863)
    a_88448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2863, 22), 'a')
    # Storing an element on a container (line 2863)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2863, 8), subscript_call_result_88447, (a_88448, at_88443))
    # SSA branch for the else part of an if statement (line 2862)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'a' (line 2865)
    a_88449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2865, 11), 'a')
    
    # Obtaining the type of the subscript
    str_88450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2865, 26), 'str', 'vars')
    # Getting the type of 'block' (line 2865)
    block_88451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2865, 20), 'block')
    # Obtaining the member '__getitem__' of a type (line 2865)
    getitem___88452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2865, 20), block_88451, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2865)
    subscript_call_result_88453 = invoke(stypy.reporting.localization.Localization(__file__, 2865, 20), getitem___88452, str_88450)
    
    # Applying the binary operator 'notin' (line 2865)
    result_contains_88454 = python_operator(stypy.reporting.localization.Localization(__file__, 2865, 11), 'notin', a_88449, subscript_call_result_88453)
    
    # Testing the type of an if condition (line 2865)
    if_condition_88455 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2865, 8), result_contains_88454)
    # Assigning a type to the variable 'if_condition_88455' (line 2865)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2865, 8), 'if_condition_88455', if_condition_88455)
    # SSA begins for if statement (line 2865)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'orig_a' (line 2866)
    orig_a_88456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2866, 15), 'orig_a')
    
    # Obtaining the type of the subscript
    str_88457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2866, 31), 'str', 'vars')
    # Getting the type of 'block' (line 2866)
    block_88458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2866, 25), 'block')
    # Obtaining the member '__getitem__' of a type (line 2866)
    getitem___88459 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2866, 25), block_88458, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2866)
    subscript_call_result_88460 = invoke(stypy.reporting.localization.Localization(__file__, 2866, 25), getitem___88459, str_88457)
    
    # Applying the binary operator 'in' (line 2866)
    result_contains_88461 = python_operator(stypy.reporting.localization.Localization(__file__, 2866, 15), 'in', orig_a_88456, subscript_call_result_88460)
    
    # Testing the type of an if condition (line 2866)
    if_condition_88462 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2866, 12), result_contains_88461)
    # Assigning a type to the variable 'if_condition_88462' (line 2866)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2866, 12), 'if_condition_88462', if_condition_88462)
    # SSA begins for if statement (line 2866)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 2867):
    
    # Assigning a Subscript to a Subscript (line 2867):
    
    # Obtaining the type of the subscript
    # Getting the type of 'orig_a' (line 2867)
    orig_a_88463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2867, 49), 'orig_a')
    
    # Obtaining the type of the subscript
    str_88464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2867, 41), 'str', 'vars')
    # Getting the type of 'block' (line 2867)
    block_88465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2867, 35), 'block')
    # Obtaining the member '__getitem__' of a type (line 2867)
    getitem___88466 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2867, 35), block_88465, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2867)
    subscript_call_result_88467 = invoke(stypy.reporting.localization.Localization(__file__, 2867, 35), getitem___88466, str_88464)
    
    # Obtaining the member '__getitem__' of a type (line 2867)
    getitem___88468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2867, 35), subscript_call_result_88467, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2867)
    subscript_call_result_88469 = invoke(stypy.reporting.localization.Localization(__file__, 2867, 35), getitem___88468, orig_a_88463)
    
    
    # Obtaining the type of the subscript
    str_88470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2867, 22), 'str', 'vars')
    # Getting the type of 'block' (line 2867)
    block_88471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2867, 16), 'block')
    # Obtaining the member '__getitem__' of a type (line 2867)
    getitem___88472 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2867, 16), block_88471, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2867)
    subscript_call_result_88473 = invoke(stypy.reporting.localization.Localization(__file__, 2867, 16), getitem___88472, str_88470)
    
    # Getting the type of 'a' (line 2867)
    a_88474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2867, 30), 'a')
    # Storing an element on a container (line 2867)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2867, 16), subscript_call_result_88473, (a_88474, subscript_call_result_88469))
    # SSA branch for the else part of an if statement (line 2866)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Dict to a Subscript (line 2869):
    
    # Assigning a Dict to a Subscript (line 2869):
    
    # Obtaining an instance of the builtin type 'dict' (line 2869)
    dict_88475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2869, 35), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2869)
    
    
    # Obtaining the type of the subscript
    str_88476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2869, 22), 'str', 'vars')
    # Getting the type of 'block' (line 2869)
    block_88477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2869, 16), 'block')
    # Obtaining the member '__getitem__' of a type (line 2869)
    getitem___88478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2869, 16), block_88477, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2869)
    subscript_call_result_88479 = invoke(stypy.reporting.localization.Localization(__file__, 2869, 16), getitem___88478, str_88476)
    
    # Getting the type of 'a' (line 2869)
    a_88480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2869, 30), 'a')
    # Storing an element on a container (line 2869)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2869, 16), subscript_call_result_88479, (a_88480, dict_88475))
    # SSA join for if statement (line 2866)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2865)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    str_88481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2870, 11), 'str', 'externals')
    # Getting the type of 'block' (line 2870)
    block_88482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2870, 26), 'block')
    # Applying the binary operator 'in' (line 2870)
    result_contains_88483 = python_operator(stypy.reporting.localization.Localization(__file__, 2870, 11), 'in', str_88481, block_88482)
    
    
    # Getting the type of 'orig_a' (line 2870)
    orig_a_88484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2870, 36), 'orig_a')
    
    # Obtaining the type of the subscript
    str_88485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2870, 52), 'str', 'externals')
    # Getting the type of 'block' (line 2870)
    block_88486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2870, 46), 'block')
    # Obtaining the member '__getitem__' of a type (line 2870)
    getitem___88487 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2870, 46), block_88486, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2870)
    subscript_call_result_88488 = invoke(stypy.reporting.localization.Localization(__file__, 2870, 46), getitem___88487, str_88485)
    
    
    # Obtaining the type of the subscript
    str_88489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2870, 73), 'str', 'interfaced')
    # Getting the type of 'block' (line 2870)
    block_88490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2870, 67), 'block')
    # Obtaining the member '__getitem__' of a type (line 2870)
    getitem___88491 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2870, 67), block_88490, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2870)
    subscript_call_result_88492 = invoke(stypy.reporting.localization.Localization(__file__, 2870, 67), getitem___88491, str_88489)
    
    # Applying the binary operator '+' (line 2870)
    result_add_88493 = python_operator(stypy.reporting.localization.Localization(__file__, 2870, 46), '+', subscript_call_result_88488, subscript_call_result_88492)
    
    # Applying the binary operator 'in' (line 2870)
    result_contains_88494 = python_operator(stypy.reporting.localization.Localization(__file__, 2870, 36), 'in', orig_a_88484, result_add_88493)
    
    # Applying the binary operator 'and' (line 2870)
    result_and_keyword_88495 = python_operator(stypy.reporting.localization.Localization(__file__, 2870, 11), 'and', result_contains_88483, result_contains_88494)
    
    # Testing the type of an if condition (line 2870)
    if_condition_88496 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2870, 8), result_and_keyword_88495)
    # Assigning a type to the variable 'if_condition_88496' (line 2870)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2870, 8), 'if_condition_88496', if_condition_88496)
    # SSA begins for if statement (line 2870)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Subscript (line 2871):
    
    # Assigning a Call to a Subscript (line 2871):
    
    # Call to setattrspec(...): (line 2871)
    # Processing the call arguments (line 2871)
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 2871)
    a_88498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2871, 57), 'a', False)
    
    # Obtaining the type of the subscript
    str_88499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2871, 49), 'str', 'vars')
    # Getting the type of 'block' (line 2871)
    block_88500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2871, 43), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2871)
    getitem___88501 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2871, 43), block_88500, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2871)
    subscript_call_result_88502 = invoke(stypy.reporting.localization.Localization(__file__, 2871, 43), getitem___88501, str_88499)
    
    # Obtaining the member '__getitem__' of a type (line 2871)
    getitem___88503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2871, 43), subscript_call_result_88502, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2871)
    subscript_call_result_88504 = invoke(stypy.reporting.localization.Localization(__file__, 2871, 43), getitem___88503, a_88498)
    
    str_88505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2871, 61), 'str', 'external')
    # Processing the call keyword arguments (line 2871)
    kwargs_88506 = {}
    # Getting the type of 'setattrspec' (line 2871)
    setattrspec_88497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2871, 31), 'setattrspec', False)
    # Calling setattrspec(args, kwargs) (line 2871)
    setattrspec_call_result_88507 = invoke(stypy.reporting.localization.Localization(__file__, 2871, 31), setattrspec_88497, *[subscript_call_result_88504, str_88505], **kwargs_88506)
    
    
    # Obtaining the type of the subscript
    str_88508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2871, 18), 'str', 'vars')
    # Getting the type of 'block' (line 2871)
    block_88509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2871, 12), 'block')
    # Obtaining the member '__getitem__' of a type (line 2871)
    getitem___88510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2871, 12), block_88509, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2871)
    subscript_call_result_88511 = invoke(stypy.reporting.localization.Localization(__file__, 2871, 12), getitem___88510, str_88508)
    
    # Getting the type of 'a' (line 2871)
    a_88512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2871, 26), 'a')
    # Storing an element on a container (line 2871)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2871, 12), subscript_call_result_88511, (a_88512, setattrspec_call_result_88507))
    # SSA join for if statement (line 2870)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2862)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'a' (line 2872)
    a_88513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2872, 11), 'a')
    # Assigning a type to the variable 'stypy_return_type' (line 2872)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2872, 4), 'stypy_return_type', a_88513)
    
    # ################# End of 'expr2name(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'expr2name' in the type store
    # Getting the type of 'stypy_return_type' (line 2838)
    stypy_return_type_88514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2838, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_88514)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'expr2name'
    return stypy_return_type_88514

# Assigning a type to the variable 'expr2name' (line 2838)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2838, 0), 'expr2name', expr2name)

@norecursion
def analyzeargs(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'analyzeargs'
    module_type_store = module_type_store.open_function_context('analyzeargs', 2875, 0, False)
    
    # Passed parameters checking function
    analyzeargs.stypy_localization = localization
    analyzeargs.stypy_type_of_self = None
    analyzeargs.stypy_type_store = module_type_store
    analyzeargs.stypy_function_name = 'analyzeargs'
    analyzeargs.stypy_param_names_list = ['block']
    analyzeargs.stypy_varargs_param_name = None
    analyzeargs.stypy_kwargs_param_name = None
    analyzeargs.stypy_call_defaults = defaults
    analyzeargs.stypy_call_varargs = varargs
    analyzeargs.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'analyzeargs', ['block'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'analyzeargs', localization, ['block'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'analyzeargs(...)' code ##################

    
    # Call to setmesstext(...): (line 2876)
    # Processing the call arguments (line 2876)
    # Getting the type of 'block' (line 2876)
    block_88516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2876, 16), 'block', False)
    # Processing the call keyword arguments (line 2876)
    kwargs_88517 = {}
    # Getting the type of 'setmesstext' (line 2876)
    setmesstext_88515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2876, 4), 'setmesstext', False)
    # Calling setmesstext(args, kwargs) (line 2876)
    setmesstext_call_result_88518 = invoke(stypy.reporting.localization.Localization(__file__, 2876, 4), setmesstext_88515, *[block_88516], **kwargs_88517)
    
    
    # Assigning a Call to a Tuple (line 2877):
    
    # Assigning a Call to a Name:
    
    # Call to buildimplicitrules(...): (line 2877)
    # Processing the call arguments (line 2877)
    # Getting the type of 'block' (line 2877)
    block_88520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2877, 50), 'block', False)
    # Processing the call keyword arguments (line 2877)
    kwargs_88521 = {}
    # Getting the type of 'buildimplicitrules' (line 2877)
    buildimplicitrules_88519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2877, 31), 'buildimplicitrules', False)
    # Calling buildimplicitrules(args, kwargs) (line 2877)
    buildimplicitrules_call_result_88522 = invoke(stypy.reporting.localization.Localization(__file__, 2877, 31), buildimplicitrules_88519, *[block_88520], **kwargs_88521)
    
    # Assigning a type to the variable 'call_assignment_75835' (line 2877)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2877, 4), 'call_assignment_75835', buildimplicitrules_call_result_88522)
    
    # Assigning a Call to a Name (line 2877):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_88525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2877, 4), 'int')
    # Processing the call keyword arguments
    kwargs_88526 = {}
    # Getting the type of 'call_assignment_75835' (line 2877)
    call_assignment_75835_88523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2877, 4), 'call_assignment_75835', False)
    # Obtaining the member '__getitem__' of a type (line 2877)
    getitem___88524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2877, 4), call_assignment_75835_88523, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_88527 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___88524, *[int_88525], **kwargs_88526)
    
    # Assigning a type to the variable 'call_assignment_75836' (line 2877)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2877, 4), 'call_assignment_75836', getitem___call_result_88527)
    
    # Assigning a Name to a Name (line 2877):
    # Getting the type of 'call_assignment_75836' (line 2877)
    call_assignment_75836_88528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2877, 4), 'call_assignment_75836')
    # Assigning a type to the variable 'implicitrules' (line 2877)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2877, 4), 'implicitrules', call_assignment_75836_88528)
    
    # Assigning a Call to a Name (line 2877):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_88531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2877, 4), 'int')
    # Processing the call keyword arguments
    kwargs_88532 = {}
    # Getting the type of 'call_assignment_75835' (line 2877)
    call_assignment_75835_88529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2877, 4), 'call_assignment_75835', False)
    # Obtaining the member '__getitem__' of a type (line 2877)
    getitem___88530 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2877, 4), call_assignment_75835_88529, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_88533 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___88530, *[int_88531], **kwargs_88532)
    
    # Assigning a type to the variable 'call_assignment_75837' (line 2877)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2877, 4), 'call_assignment_75837', getitem___call_result_88533)
    
    # Assigning a Name to a Name (line 2877):
    # Getting the type of 'call_assignment_75837' (line 2877)
    call_assignment_75837_88534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2877, 4), 'call_assignment_75837')
    # Assigning a type to the variable 'attrrules' (line 2877)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2877, 19), 'attrrules', call_assignment_75837_88534)
    
    
    str_88535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2878, 7), 'str', 'args')
    # Getting the type of 'block' (line 2878)
    block_88536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2878, 21), 'block')
    # Applying the binary operator 'notin' (line 2878)
    result_contains_88537 = python_operator(stypy.reporting.localization.Localization(__file__, 2878, 7), 'notin', str_88535, block_88536)
    
    # Testing the type of an if condition (line 2878)
    if_condition_88538 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2878, 4), result_contains_88537)
    # Assigning a type to the variable 'if_condition_88538' (line 2878)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2878, 4), 'if_condition_88538', if_condition_88538)
    # SSA begins for if statement (line 2878)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Subscript (line 2879):
    
    # Assigning a List to a Subscript (line 2879):
    
    # Obtaining an instance of the builtin type 'list' (line 2879)
    list_88539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2879, 24), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2879)
    
    # Getting the type of 'block' (line 2879)
    block_88540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2879, 8), 'block')
    str_88541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2879, 14), 'str', 'args')
    # Storing an element on a container (line 2879)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2879, 8), block_88540, (str_88541, list_88539))
    # SSA join for if statement (line 2878)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a List to a Name (line 2880):
    
    # Assigning a List to a Name (line 2880):
    
    # Obtaining an instance of the builtin type 'list' (line 2880)
    list_88542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2880, 11), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2880)
    
    # Assigning a type to the variable 'args' (line 2880)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2880, 4), 'args', list_88542)
    
    
    # Obtaining the type of the subscript
    str_88543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2881, 19), 'str', 'args')
    # Getting the type of 'block' (line 2881)
    block_88544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2881, 13), 'block')
    # Obtaining the member '__getitem__' of a type (line 2881)
    getitem___88545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2881, 13), block_88544, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2881)
    subscript_call_result_88546 = invoke(stypy.reporting.localization.Localization(__file__, 2881, 13), getitem___88545, str_88543)
    
    # Testing the type of a for loop iterable (line 2881)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2881, 4), subscript_call_result_88546)
    # Getting the type of the for loop variable (line 2881)
    for_loop_var_88547 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2881, 4), subscript_call_result_88546)
    # Assigning a type to the variable 'a' (line 2881)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2881, 4), 'a', for_loop_var_88547)
    # SSA begins for a for statement (line 2881)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 2882):
    
    # Assigning a Call to a Name (line 2882):
    
    # Call to expr2name(...): (line 2882)
    # Processing the call arguments (line 2882)
    # Getting the type of 'a' (line 2882)
    a_88549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2882, 22), 'a', False)
    # Getting the type of 'block' (line 2882)
    block_88550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2882, 25), 'block', False)
    # Getting the type of 'args' (line 2882)
    args_88551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2882, 32), 'args', False)
    # Processing the call keyword arguments (line 2882)
    kwargs_88552 = {}
    # Getting the type of 'expr2name' (line 2882)
    expr2name_88548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2882, 12), 'expr2name', False)
    # Calling expr2name(args, kwargs) (line 2882)
    expr2name_call_result_88553 = invoke(stypy.reporting.localization.Localization(__file__, 2882, 12), expr2name_88548, *[a_88549, block_88550, args_88551], **kwargs_88552)
    
    # Assigning a type to the variable 'a' (line 2882)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2882, 8), 'a', expr2name_call_result_88553)
    
    # Call to append(...): (line 2883)
    # Processing the call arguments (line 2883)
    # Getting the type of 'a' (line 2883)
    a_88556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2883, 20), 'a', False)
    # Processing the call keyword arguments (line 2883)
    kwargs_88557 = {}
    # Getting the type of 'args' (line 2883)
    args_88554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2883, 8), 'args', False)
    # Obtaining the member 'append' of a type (line 2883)
    append_88555 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2883, 8), args_88554, 'append')
    # Calling append(args, kwargs) (line 2883)
    append_call_result_88558 = invoke(stypy.reporting.localization.Localization(__file__, 2883, 8), append_88555, *[a_88556], **kwargs_88557)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 2884):
    
    # Assigning a Name to a Subscript (line 2884):
    # Getting the type of 'args' (line 2884)
    args_88559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2884, 20), 'args')
    # Getting the type of 'block' (line 2884)
    block_88560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2884, 4), 'block')
    str_88561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2884, 10), 'str', 'args')
    # Storing an element on a container (line 2884)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2884, 4), block_88560, (str_88561, args_88559))
    
    
    str_88562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2885, 7), 'str', 'entry')
    # Getting the type of 'block' (line 2885)
    block_88563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2885, 18), 'block')
    # Applying the binary operator 'in' (line 2885)
    result_contains_88564 = python_operator(stypy.reporting.localization.Localization(__file__, 2885, 7), 'in', str_88562, block_88563)
    
    # Testing the type of an if condition (line 2885)
    if_condition_88565 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2885, 4), result_contains_88564)
    # Assigning a type to the variable 'if_condition_88565' (line 2885)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2885, 4), 'if_condition_88565', if_condition_88565)
    # SSA begins for if statement (line 2885)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Call to list(...): (line 2886)
    # Processing the call arguments (line 2886)
    
    # Call to items(...): (line 2886)
    # Processing the call keyword arguments (line 2886)
    kwargs_88572 = {}
    
    # Obtaining the type of the subscript
    str_88567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2886, 35), 'str', 'entry')
    # Getting the type of 'block' (line 2886)
    block_88568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2886, 29), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2886)
    getitem___88569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2886, 29), block_88568, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2886)
    subscript_call_result_88570 = invoke(stypy.reporting.localization.Localization(__file__, 2886, 29), getitem___88569, str_88567)
    
    # Obtaining the member 'items' of a type (line 2886)
    items_88571 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2886, 29), subscript_call_result_88570, 'items')
    # Calling items(args, kwargs) (line 2886)
    items_call_result_88573 = invoke(stypy.reporting.localization.Localization(__file__, 2886, 29), items_88571, *[], **kwargs_88572)
    
    # Processing the call keyword arguments (line 2886)
    kwargs_88574 = {}
    # Getting the type of 'list' (line 2886)
    list_88566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2886, 24), 'list', False)
    # Calling list(args, kwargs) (line 2886)
    list_call_result_88575 = invoke(stypy.reporting.localization.Localization(__file__, 2886, 24), list_88566, *[items_call_result_88573], **kwargs_88574)
    
    # Testing the type of a for loop iterable (line 2886)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2886, 8), list_call_result_88575)
    # Getting the type of the for loop variable (line 2886)
    for_loop_var_88576 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2886, 8), list_call_result_88575)
    # Assigning a type to the variable 'k' (line 2886)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2886, 8), 'k', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2886, 8), for_loop_var_88576))
    # Assigning a type to the variable 'args1' (line 2886)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2886, 8), 'args1', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2886, 8), for_loop_var_88576))
    # SSA begins for a for statement (line 2886)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'args1' (line 2887)
    args1_88577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2887, 21), 'args1')
    # Testing the type of a for loop iterable (line 2887)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2887, 12), args1_88577)
    # Getting the type of the for loop variable (line 2887)
    for_loop_var_88578 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2887, 12), args1_88577)
    # Assigning a type to the variable 'a' (line 2887)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2887, 12), 'a', for_loop_var_88578)
    # SSA begins for a for statement (line 2887)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'a' (line 2888)
    a_88579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2888, 19), 'a')
    
    # Obtaining the type of the subscript
    str_88580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2888, 34), 'str', 'vars')
    # Getting the type of 'block' (line 2888)
    block_88581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2888, 28), 'block')
    # Obtaining the member '__getitem__' of a type (line 2888)
    getitem___88582 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2888, 28), block_88581, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2888)
    subscript_call_result_88583 = invoke(stypy.reporting.localization.Localization(__file__, 2888, 28), getitem___88582, str_88580)
    
    # Applying the binary operator 'notin' (line 2888)
    result_contains_88584 = python_operator(stypy.reporting.localization.Localization(__file__, 2888, 19), 'notin', a_88579, subscript_call_result_88583)
    
    # Testing the type of an if condition (line 2888)
    if_condition_88585 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2888, 16), result_contains_88584)
    # Assigning a type to the variable 'if_condition_88585' (line 2888)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2888, 16), 'if_condition_88585', if_condition_88585)
    # SSA begins for if statement (line 2888)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Dict to a Subscript (line 2889):
    
    # Assigning a Dict to a Subscript (line 2889):
    
    # Obtaining an instance of the builtin type 'dict' (line 2889)
    dict_88586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2889, 39), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2889)
    
    
    # Obtaining the type of the subscript
    str_88587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2889, 26), 'str', 'vars')
    # Getting the type of 'block' (line 2889)
    block_88588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2889, 20), 'block')
    # Obtaining the member '__getitem__' of a type (line 2889)
    getitem___88589 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2889, 20), block_88588, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2889)
    subscript_call_result_88590 = invoke(stypy.reporting.localization.Localization(__file__, 2889, 20), getitem___88589, str_88587)
    
    # Getting the type of 'a' (line 2889)
    a_88591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2889, 34), 'a')
    # Storing an element on a container (line 2889)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2889, 20), subscript_call_result_88590, (a_88591, dict_88586))
    # SSA join for if statement (line 2888)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2885)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Obtaining the type of the subscript
    str_88592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2891, 19), 'str', 'body')
    # Getting the type of 'block' (line 2891)
    block_88593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2891, 13), 'block')
    # Obtaining the member '__getitem__' of a type (line 2891)
    getitem___88594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2891, 13), block_88593, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2891)
    subscript_call_result_88595 = invoke(stypy.reporting.localization.Localization(__file__, 2891, 13), getitem___88594, str_88592)
    
    # Testing the type of a for loop iterable (line 2891)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2891, 4), subscript_call_result_88595)
    # Getting the type of the for loop variable (line 2891)
    for_loop_var_88596 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2891, 4), subscript_call_result_88595)
    # Assigning a type to the variable 'b' (line 2891)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2891, 4), 'b', for_loop_var_88596)
    # SSA begins for a for statement (line 2891)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Obtaining the type of the subscript
    str_88597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2892, 13), 'str', 'name')
    # Getting the type of 'b' (line 2892)
    b_88598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2892, 11), 'b')
    # Obtaining the member '__getitem__' of a type (line 2892)
    getitem___88599 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2892, 11), b_88598, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2892)
    subscript_call_result_88600 = invoke(stypy.reporting.localization.Localization(__file__, 2892, 11), getitem___88599, str_88597)
    
    # Getting the type of 'args' (line 2892)
    args_88601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2892, 24), 'args')
    # Applying the binary operator 'in' (line 2892)
    result_contains_88602 = python_operator(stypy.reporting.localization.Localization(__file__, 2892, 11), 'in', subscript_call_result_88600, args_88601)
    
    # Testing the type of an if condition (line 2892)
    if_condition_88603 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2892, 8), result_contains_88602)
    # Assigning a type to the variable 'if_condition_88603' (line 2892)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2892, 8), 'if_condition_88603', if_condition_88603)
    # SSA begins for if statement (line 2892)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    str_88604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2893, 15), 'str', 'externals')
    # Getting the type of 'block' (line 2893)
    block_88605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2893, 34), 'block')
    # Applying the binary operator 'notin' (line 2893)
    result_contains_88606 = python_operator(stypy.reporting.localization.Localization(__file__, 2893, 15), 'notin', str_88604, block_88605)
    
    # Testing the type of an if condition (line 2893)
    if_condition_88607 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2893, 12), result_contains_88606)
    # Assigning a type to the variable 'if_condition_88607' (line 2893)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2893, 12), 'if_condition_88607', if_condition_88607)
    # SSA begins for if statement (line 2893)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Subscript (line 2894):
    
    # Assigning a List to a Subscript (line 2894):
    
    # Obtaining an instance of the builtin type 'list' (line 2894)
    list_88608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2894, 37), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2894)
    
    # Getting the type of 'block' (line 2894)
    block_88609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2894, 16), 'block')
    str_88610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2894, 22), 'str', 'externals')
    # Storing an element on a container (line 2894)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2894, 16), block_88609, (str_88610, list_88608))
    # SSA join for if statement (line 2893)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    str_88611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2895, 17), 'str', 'name')
    # Getting the type of 'b' (line 2895)
    b_88612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2895, 15), 'b')
    # Obtaining the member '__getitem__' of a type (line 2895)
    getitem___88613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2895, 15), b_88612, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2895)
    subscript_call_result_88614 = invoke(stypy.reporting.localization.Localization(__file__, 2895, 15), getitem___88613, str_88611)
    
    
    # Obtaining the type of the subscript
    str_88615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2895, 38), 'str', 'externals')
    # Getting the type of 'block' (line 2895)
    block_88616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2895, 32), 'block')
    # Obtaining the member '__getitem__' of a type (line 2895)
    getitem___88617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2895, 32), block_88616, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2895)
    subscript_call_result_88618 = invoke(stypy.reporting.localization.Localization(__file__, 2895, 32), getitem___88617, str_88615)
    
    # Applying the binary operator 'notin' (line 2895)
    result_contains_88619 = python_operator(stypy.reporting.localization.Localization(__file__, 2895, 15), 'notin', subscript_call_result_88614, subscript_call_result_88618)
    
    # Testing the type of an if condition (line 2895)
    if_condition_88620 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2895, 12), result_contains_88619)
    # Assigning a type to the variable 'if_condition_88620' (line 2895)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2895, 12), 'if_condition_88620', if_condition_88620)
    # SSA begins for if statement (line 2895)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2896)
    # Processing the call arguments (line 2896)
    
    # Obtaining the type of the subscript
    str_88626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2896, 44), 'str', 'name')
    # Getting the type of 'b' (line 2896)
    b_88627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2896, 42), 'b', False)
    # Obtaining the member '__getitem__' of a type (line 2896)
    getitem___88628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2896, 42), b_88627, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2896)
    subscript_call_result_88629 = invoke(stypy.reporting.localization.Localization(__file__, 2896, 42), getitem___88628, str_88626)
    
    # Processing the call keyword arguments (line 2896)
    kwargs_88630 = {}
    
    # Obtaining the type of the subscript
    str_88621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2896, 22), 'str', 'externals')
    # Getting the type of 'block' (line 2896)
    block_88622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2896, 16), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2896)
    getitem___88623 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2896, 16), block_88622, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2896)
    subscript_call_result_88624 = invoke(stypy.reporting.localization.Localization(__file__, 2896, 16), getitem___88623, str_88621)
    
    # Obtaining the member 'append' of a type (line 2896)
    append_88625 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2896, 16), subscript_call_result_88624, 'append')
    # Calling append(args, kwargs) (line 2896)
    append_call_result_88631 = invoke(stypy.reporting.localization.Localization(__file__, 2896, 16), append_88625, *[subscript_call_result_88629], **kwargs_88630)
    
    # SSA join for if statement (line 2895)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2892)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    str_88632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2897, 7), 'str', 'result')
    # Getting the type of 'block' (line 2897)
    block_88633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2897, 19), 'block')
    # Applying the binary operator 'in' (line 2897)
    result_contains_88634 = python_operator(stypy.reporting.localization.Localization(__file__, 2897, 7), 'in', str_88632, block_88633)
    
    
    
    # Obtaining the type of the subscript
    str_88635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2897, 35), 'str', 'result')
    # Getting the type of 'block' (line 2897)
    block_88636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2897, 29), 'block')
    # Obtaining the member '__getitem__' of a type (line 2897)
    getitem___88637 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2897, 29), block_88636, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2897)
    subscript_call_result_88638 = invoke(stypy.reporting.localization.Localization(__file__, 2897, 29), getitem___88637, str_88635)
    
    
    # Obtaining the type of the subscript
    str_88639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2897, 58), 'str', 'vars')
    # Getting the type of 'block' (line 2897)
    block_88640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2897, 52), 'block')
    # Obtaining the member '__getitem__' of a type (line 2897)
    getitem___88641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2897, 52), block_88640, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2897)
    subscript_call_result_88642 = invoke(stypy.reporting.localization.Localization(__file__, 2897, 52), getitem___88641, str_88639)
    
    # Applying the binary operator 'notin' (line 2897)
    result_contains_88643 = python_operator(stypy.reporting.localization.Localization(__file__, 2897, 29), 'notin', subscript_call_result_88638, subscript_call_result_88642)
    
    # Applying the binary operator 'and' (line 2897)
    result_and_keyword_88644 = python_operator(stypy.reporting.localization.Localization(__file__, 2897, 7), 'and', result_contains_88634, result_contains_88643)
    
    # Testing the type of an if condition (line 2897)
    if_condition_88645 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2897, 4), result_and_keyword_88644)
    # Assigning a type to the variable 'if_condition_88645' (line 2897)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2897, 4), 'if_condition_88645', if_condition_88645)
    # SSA begins for if statement (line 2897)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Dict to a Subscript (line 2898):
    
    # Assigning a Dict to a Subscript (line 2898):
    
    # Obtaining an instance of the builtin type 'dict' (line 2898)
    dict_88646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2898, 41), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2898)
    
    
    # Obtaining the type of the subscript
    str_88647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2898, 14), 'str', 'vars')
    # Getting the type of 'block' (line 2898)
    block_88648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2898, 8), 'block')
    # Obtaining the member '__getitem__' of a type (line 2898)
    getitem___88649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2898, 8), block_88648, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2898)
    subscript_call_result_88650 = invoke(stypy.reporting.localization.Localization(__file__, 2898, 8), getitem___88649, str_88647)
    
    
    # Obtaining the type of the subscript
    str_88651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2898, 28), 'str', 'result')
    # Getting the type of 'block' (line 2898)
    block_88652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2898, 22), 'block')
    # Obtaining the member '__getitem__' of a type (line 2898)
    getitem___88653 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2898, 22), block_88652, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2898)
    subscript_call_result_88654 = invoke(stypy.reporting.localization.Localization(__file__, 2898, 22), getitem___88653, str_88651)
    
    # Storing an element on a container (line 2898)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2898, 8), subscript_call_result_88650, (subscript_call_result_88654, dict_88646))
    # SSA join for if statement (line 2897)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'block' (line 2899)
    block_88655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2899, 11), 'block')
    # Assigning a type to the variable 'stypy_return_type' (line 2899)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2899, 4), 'stypy_return_type', block_88655)
    
    # ################# End of 'analyzeargs(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'analyzeargs' in the type store
    # Getting the type of 'stypy_return_type' (line 2875)
    stypy_return_type_88656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2875, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_88656)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'analyzeargs'
    return stypy_return_type_88656

# Assigning a type to the variable 'analyzeargs' (line 2875)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2875, 0), 'analyzeargs', analyzeargs)

# Assigning a Call to a Name (line 2901):

# Assigning a Call to a Name (line 2901):

# Call to compile(...): (line 2901)
# Processing the call arguments (line 2901)
str_88659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2901, 36), 'str', '\\A\\(.+?[,].+?\\)\\Z')
# Getting the type of 're' (line 2901)
re_88660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2901, 58), 're', False)
# Obtaining the member 'I' of a type (line 2901)
I_88661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2901, 58), re_88660, 'I')
# Processing the call keyword arguments (line 2901)
kwargs_88662 = {}
# Getting the type of 're' (line 2901)
re_88657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2901, 25), 're', False)
# Obtaining the member 'compile' of a type (line 2901)
compile_88658 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2901, 25), re_88657, 'compile')
# Calling compile(args, kwargs) (line 2901)
compile_call_result_88663 = invoke(stypy.reporting.localization.Localization(__file__, 2901, 25), compile_88658, *[str_88659, I_88661], **kwargs_88662)

# Assigning a type to the variable 'determineexprtype_re_1' (line 2901)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2901, 0), 'determineexprtype_re_1', compile_call_result_88663)

# Assigning a Call to a Name (line 2902):

# Assigning a Call to a Name (line 2902):

# Call to compile(...): (line 2902)
# Processing the call arguments (line 2902)
str_88666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2902, 36), 'str', '\\A[+-]?\\d+(_(P<name>[\\w]+)|)\\Z')
# Getting the type of 're' (line 2902)
re_88667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2902, 71), 're', False)
# Obtaining the member 'I' of a type (line 2902)
I_88668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2902, 71), re_88667, 'I')
# Processing the call keyword arguments (line 2902)
kwargs_88669 = {}
# Getting the type of 're' (line 2902)
re_88664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2902, 25), 're', False)
# Obtaining the member 'compile' of a type (line 2902)
compile_88665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2902, 25), re_88664, 'compile')
# Calling compile(args, kwargs) (line 2902)
compile_call_result_88670 = invoke(stypy.reporting.localization.Localization(__file__, 2902, 25), compile_88665, *[str_88666, I_88668], **kwargs_88669)

# Assigning a type to the variable 'determineexprtype_re_2' (line 2902)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2902, 0), 'determineexprtype_re_2', compile_call_result_88670)

# Assigning a Call to a Name (line 2903):

# Assigning a Call to a Name (line 2903):

# Call to compile(...): (line 2903)
# Processing the call arguments (line 2903)
str_88673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2904, 4), 'str', '\\A[+-]?[\\d.]+[\\d+-de.]*(_(P<name>[\\w]+)|)\\Z')
# Getting the type of 're' (line 2904)
re_88674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2904, 52), 're', False)
# Obtaining the member 'I' of a type (line 2904)
I_88675 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2904, 52), re_88674, 'I')
# Processing the call keyword arguments (line 2903)
kwargs_88676 = {}
# Getting the type of 're' (line 2903)
re_88671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2903, 25), 're', False)
# Obtaining the member 'compile' of a type (line 2903)
compile_88672 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2903, 25), re_88671, 'compile')
# Calling compile(args, kwargs) (line 2903)
compile_call_result_88677 = invoke(stypy.reporting.localization.Localization(__file__, 2903, 25), compile_88672, *[str_88673, I_88675], **kwargs_88676)

# Assigning a type to the variable 'determineexprtype_re_3' (line 2903)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2903, 0), 'determineexprtype_re_3', compile_call_result_88677)

# Assigning a Call to a Name (line 2905):

# Assigning a Call to a Name (line 2905):

# Call to compile(...): (line 2905)
# Processing the call arguments (line 2905)
str_88680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2905, 36), 'str', '\\A\\(.*\\)\\Z')
# Getting the type of 're' (line 2905)
re_88681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2905, 51), 're', False)
# Obtaining the member 'I' of a type (line 2905)
I_88682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2905, 51), re_88681, 'I')
# Processing the call keyword arguments (line 2905)
kwargs_88683 = {}
# Getting the type of 're' (line 2905)
re_88678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2905, 25), 're', False)
# Obtaining the member 'compile' of a type (line 2905)
compile_88679 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2905, 25), re_88678, 'compile')
# Calling compile(args, kwargs) (line 2905)
compile_call_result_88684 = invoke(stypy.reporting.localization.Localization(__file__, 2905, 25), compile_88679, *[str_88680, I_88682], **kwargs_88683)

# Assigning a type to the variable 'determineexprtype_re_4' (line 2905)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2905, 0), 'determineexprtype_re_4', compile_call_result_88684)

# Assigning a Call to a Name (line 2906):

# Assigning a Call to a Name (line 2906):

# Call to compile(...): (line 2906)
# Processing the call arguments (line 2906)
str_88687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2906, 36), 'str', '\\A(?P<name>\\w+)\\s*\\(.*?\\)\\s*\\Z')
# Getting the type of 're' (line 2906)
re_88688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2906, 71), 're', False)
# Obtaining the member 'I' of a type (line 2906)
I_88689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2906, 71), re_88688, 'I')
# Processing the call keyword arguments (line 2906)
kwargs_88690 = {}
# Getting the type of 're' (line 2906)
re_88685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2906, 25), 're', False)
# Obtaining the member 'compile' of a type (line 2906)
compile_88686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2906, 25), re_88685, 'compile')
# Calling compile(args, kwargs) (line 2906)
compile_call_result_88691 = invoke(stypy.reporting.localization.Localization(__file__, 2906, 25), compile_88686, *[str_88687, I_88689], **kwargs_88690)

# Assigning a type to the variable 'determineexprtype_re_5' (line 2906)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2906, 0), 'determineexprtype_re_5', compile_call_result_88691)

@norecursion
def _ensure_exprdict(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_ensure_exprdict'
    module_type_store = module_type_store.open_function_context('_ensure_exprdict', 2909, 0, False)
    
    # Passed parameters checking function
    _ensure_exprdict.stypy_localization = localization
    _ensure_exprdict.stypy_type_of_self = None
    _ensure_exprdict.stypy_type_store = module_type_store
    _ensure_exprdict.stypy_function_name = '_ensure_exprdict'
    _ensure_exprdict.stypy_param_names_list = ['r']
    _ensure_exprdict.stypy_varargs_param_name = None
    _ensure_exprdict.stypy_kwargs_param_name = None
    _ensure_exprdict.stypy_call_defaults = defaults
    _ensure_exprdict.stypy_call_varargs = varargs
    _ensure_exprdict.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_ensure_exprdict', ['r'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_ensure_exprdict', localization, ['r'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_ensure_exprdict(...)' code ##################

    
    # Type idiom detected: calculating its left and rigth part (line 2910)
    # Getting the type of 'int' (line 2910)
    int_88692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2910, 21), 'int')
    # Getting the type of 'r' (line 2910)
    r_88693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2910, 18), 'r')
    
    (may_be_88694, more_types_in_union_88695) = may_be_subtype(int_88692, r_88693)

    if may_be_88694:

        if more_types_in_union_88695:
            # Runtime conditional SSA (line 2910)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        # Assigning a type to the variable 'r' (line 2910)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2910, 4), 'r', remove_not_subtype_from_union(r_88693, int))
        
        # Obtaining an instance of the builtin type 'dict' (line 2911)
        dict_88696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2911, 15), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 2911)
        # Adding element type (key, value) (line 2911)
        str_88697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2911, 16), 'str', 'typespec')
        str_88698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2911, 28), 'str', 'integer')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2911, 15), dict_88696, (str_88697, str_88698))
        
        # Assigning a type to the variable 'stypy_return_type' (line 2911)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2911, 8), 'stypy_return_type', dict_88696)

        if more_types_in_union_88695:
            # SSA join for if statement (line 2910)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Type idiom detected: calculating its left and rigth part (line 2912)
    # Getting the type of 'float' (line 2912)
    float_88699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2912, 21), 'float')
    # Getting the type of 'r' (line 2912)
    r_88700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2912, 18), 'r')
    
    (may_be_88701, more_types_in_union_88702) = may_be_subtype(float_88699, r_88700)

    if may_be_88701:

        if more_types_in_union_88702:
            # Runtime conditional SSA (line 2912)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        # Assigning a type to the variable 'r' (line 2912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2912, 4), 'r', remove_not_subtype_from_union(r_88700, float))
        
        # Obtaining an instance of the builtin type 'dict' (line 2913)
        dict_88703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2913, 15), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 2913)
        # Adding element type (key, value) (line 2913)
        str_88704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2913, 16), 'str', 'typespec')
        str_88705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2913, 28), 'str', 'real')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2913, 15), dict_88703, (str_88704, str_88705))
        
        # Assigning a type to the variable 'stypy_return_type' (line 2913)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2913, 8), 'stypy_return_type', dict_88703)

        if more_types_in_union_88702:
            # SSA join for if statement (line 2912)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Type idiom detected: calculating its left and rigth part (line 2914)
    # Getting the type of 'complex' (line 2914)
    complex_88706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2914, 21), 'complex')
    # Getting the type of 'r' (line 2914)
    r_88707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2914, 18), 'r')
    
    (may_be_88708, more_types_in_union_88709) = may_be_subtype(complex_88706, r_88707)

    if may_be_88708:

        if more_types_in_union_88709:
            # Runtime conditional SSA (line 2914)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        # Assigning a type to the variable 'r' (line 2914)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2914, 4), 'r', remove_not_subtype_from_union(r_88707, complex))
        
        # Obtaining an instance of the builtin type 'dict' (line 2915)
        dict_88710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2915, 15), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 2915)
        # Adding element type (key, value) (line 2915)
        str_88711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2915, 16), 'str', 'typespec')
        str_88712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2915, 28), 'str', 'complex')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2915, 15), dict_88710, (str_88711, str_88712))
        
        # Assigning a type to the variable 'stypy_return_type' (line 2915)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2915, 8), 'stypy_return_type', dict_88710)

        if more_types_in_union_88709:
            # SSA join for if statement (line 2914)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Type idiom detected: calculating its left and rigth part (line 2916)
    # Getting the type of 'dict' (line 2916)
    dict_88713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2916, 21), 'dict')
    # Getting the type of 'r' (line 2916)
    r_88714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2916, 18), 'r')
    
    (may_be_88715, more_types_in_union_88716) = may_be_subtype(dict_88713, r_88714)

    if may_be_88715:

        if more_types_in_union_88716:
            # Runtime conditional SSA (line 2916)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        # Assigning a type to the variable 'r' (line 2916)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2916, 4), 'r', remove_not_subtype_from_union(r_88714, dict))
        # Getting the type of 'r' (line 2917)
        r_88717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2917, 15), 'r')
        # Assigning a type to the variable 'stypy_return_type' (line 2917)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2917, 8), 'stypy_return_type', r_88717)

        if more_types_in_union_88716:
            # SSA join for if statement (line 2916)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Call to AssertionError(...): (line 2918)
    # Processing the call arguments (line 2918)
    
    # Call to repr(...): (line 2918)
    # Processing the call arguments (line 2918)
    # Getting the type of 'r' (line 2918)
    r_88720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2918, 30), 'r', False)
    # Processing the call keyword arguments (line 2918)
    kwargs_88721 = {}
    # Getting the type of 'repr' (line 2918)
    repr_88719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2918, 25), 'repr', False)
    # Calling repr(args, kwargs) (line 2918)
    repr_call_result_88722 = invoke(stypy.reporting.localization.Localization(__file__, 2918, 25), repr_88719, *[r_88720], **kwargs_88721)
    
    # Processing the call keyword arguments (line 2918)
    kwargs_88723 = {}
    # Getting the type of 'AssertionError' (line 2918)
    AssertionError_88718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2918, 10), 'AssertionError', False)
    # Calling AssertionError(args, kwargs) (line 2918)
    AssertionError_call_result_88724 = invoke(stypy.reporting.localization.Localization(__file__, 2918, 10), AssertionError_88718, *[repr_call_result_88722], **kwargs_88723)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2918, 4), AssertionError_call_result_88724, 'raise parameter', BaseException)
    
    # ################# End of '_ensure_exprdict(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_ensure_exprdict' in the type store
    # Getting the type of 'stypy_return_type' (line 2909)
    stypy_return_type_88725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2909, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_88725)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_ensure_exprdict'
    return stypy_return_type_88725

# Assigning a type to the variable '_ensure_exprdict' (line 2909)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2909, 0), '_ensure_exprdict', _ensure_exprdict)

@norecursion
def determineexprtype(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    
    # Obtaining an instance of the builtin type 'dict' (line 2921)
    dict_88726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2921, 40), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2921)
    
    defaults = [dict_88726]
    # Create a new context for function 'determineexprtype'
    module_type_store = module_type_store.open_function_context('determineexprtype', 2921, 0, False)
    
    # Passed parameters checking function
    determineexprtype.stypy_localization = localization
    determineexprtype.stypy_type_of_self = None
    determineexprtype.stypy_type_store = module_type_store
    determineexprtype.stypy_function_name = 'determineexprtype'
    determineexprtype.stypy_param_names_list = ['expr', 'vars', 'rules']
    determineexprtype.stypy_varargs_param_name = None
    determineexprtype.stypy_kwargs_param_name = None
    determineexprtype.stypy_call_defaults = defaults
    determineexprtype.stypy_call_varargs = varargs
    determineexprtype.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'determineexprtype', ['expr', 'vars', 'rules'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'determineexprtype', localization, ['expr', 'vars', 'rules'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'determineexprtype(...)' code ##################

    
    
    # Getting the type of 'expr' (line 2922)
    expr_88727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2922, 7), 'expr')
    # Getting the type of 'vars' (line 2922)
    vars_88728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2922, 15), 'vars')
    # Applying the binary operator 'in' (line 2922)
    result_contains_88729 = python_operator(stypy.reporting.localization.Localization(__file__, 2922, 7), 'in', expr_88727, vars_88728)
    
    # Testing the type of an if condition (line 2922)
    if_condition_88730 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2922, 4), result_contains_88729)
    # Assigning a type to the variable 'if_condition_88730' (line 2922)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2922, 4), 'if_condition_88730', if_condition_88730)
    # SSA begins for if statement (line 2922)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to _ensure_exprdict(...): (line 2923)
    # Processing the call arguments (line 2923)
    
    # Obtaining the type of the subscript
    # Getting the type of 'expr' (line 2923)
    expr_88732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2923, 37), 'expr', False)
    # Getting the type of 'vars' (line 2923)
    vars_88733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2923, 32), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2923)
    getitem___88734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2923, 32), vars_88733, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2923)
    subscript_call_result_88735 = invoke(stypy.reporting.localization.Localization(__file__, 2923, 32), getitem___88734, expr_88732)
    
    # Processing the call keyword arguments (line 2923)
    kwargs_88736 = {}
    # Getting the type of '_ensure_exprdict' (line 2923)
    _ensure_exprdict_88731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2923, 15), '_ensure_exprdict', False)
    # Calling _ensure_exprdict(args, kwargs) (line 2923)
    _ensure_exprdict_call_result_88737 = invoke(stypy.reporting.localization.Localization(__file__, 2923, 15), _ensure_exprdict_88731, *[subscript_call_result_88735], **kwargs_88736)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2923)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2923, 8), 'stypy_return_type', _ensure_exprdict_call_result_88737)
    # SSA join for if statement (line 2922)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2924):
    
    # Assigning a Call to a Name (line 2924):
    
    # Call to strip(...): (line 2924)
    # Processing the call keyword arguments (line 2924)
    kwargs_88740 = {}
    # Getting the type of 'expr' (line 2924)
    expr_88738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2924, 11), 'expr', False)
    # Obtaining the member 'strip' of a type (line 2924)
    strip_88739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2924, 11), expr_88738, 'strip')
    # Calling strip(args, kwargs) (line 2924)
    strip_call_result_88741 = invoke(stypy.reporting.localization.Localization(__file__, 2924, 11), strip_88739, *[], **kwargs_88740)
    
    # Assigning a type to the variable 'expr' (line 2924)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2924, 4), 'expr', strip_call_result_88741)
    
    
    # Call to match(...): (line 2925)
    # Processing the call arguments (line 2925)
    # Getting the type of 'expr' (line 2925)
    expr_88744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2925, 36), 'expr', False)
    # Processing the call keyword arguments (line 2925)
    kwargs_88745 = {}
    # Getting the type of 'determineexprtype_re_1' (line 2925)
    determineexprtype_re_1_88742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2925, 7), 'determineexprtype_re_1', False)
    # Obtaining the member 'match' of a type (line 2925)
    match_88743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2925, 7), determineexprtype_re_1_88742, 'match')
    # Calling match(args, kwargs) (line 2925)
    match_call_result_88746 = invoke(stypy.reporting.localization.Localization(__file__, 2925, 7), match_88743, *[expr_88744], **kwargs_88745)
    
    # Testing the type of an if condition (line 2925)
    if_condition_88747 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2925, 4), match_call_result_88746)
    # Assigning a type to the variable 'if_condition_88747' (line 2925)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2925, 4), 'if_condition_88747', if_condition_88747)
    # SSA begins for if statement (line 2925)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Obtaining an instance of the builtin type 'dict' (line 2926)
    dict_88748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2926, 15), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2926)
    # Adding element type (key, value) (line 2926)
    str_88749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2926, 16), 'str', 'typespec')
    str_88750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2926, 28), 'str', 'complex')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2926, 15), dict_88748, (str_88749, str_88750))
    
    # Assigning a type to the variable 'stypy_return_type' (line 2926)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2926, 8), 'stypy_return_type', dict_88748)
    # SSA join for if statement (line 2925)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2927):
    
    # Assigning a Call to a Name (line 2927):
    
    # Call to match(...): (line 2927)
    # Processing the call arguments (line 2927)
    # Getting the type of 'expr' (line 2927)
    expr_88753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2927, 37), 'expr', False)
    # Processing the call keyword arguments (line 2927)
    kwargs_88754 = {}
    # Getting the type of 'determineexprtype_re_2' (line 2927)
    determineexprtype_re_2_88751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2927, 8), 'determineexprtype_re_2', False)
    # Obtaining the member 'match' of a type (line 2927)
    match_88752 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2927, 8), determineexprtype_re_2_88751, 'match')
    # Calling match(args, kwargs) (line 2927)
    match_call_result_88755 = invoke(stypy.reporting.localization.Localization(__file__, 2927, 8), match_88752, *[expr_88753], **kwargs_88754)
    
    # Assigning a type to the variable 'm' (line 2927)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2927, 4), 'm', match_call_result_88755)
    
    # Getting the type of 'm' (line 2928)
    m_88756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2928, 7), 'm')
    # Testing the type of an if condition (line 2928)
    if_condition_88757 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2928, 4), m_88756)
    # Assigning a type to the variable 'if_condition_88757' (line 2928)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2928, 4), 'if_condition_88757', if_condition_88757)
    # SSA begins for if statement (line 2928)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    
    str_88758 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2929, 11), 'str', 'name')
    
    # Call to groupdict(...): (line 2929)
    # Processing the call keyword arguments (line 2929)
    kwargs_88761 = {}
    # Getting the type of 'm' (line 2929)
    m_88759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2929, 21), 'm', False)
    # Obtaining the member 'groupdict' of a type (line 2929)
    groupdict_88760 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2929, 21), m_88759, 'groupdict')
    # Calling groupdict(args, kwargs) (line 2929)
    groupdict_call_result_88762 = invoke(stypy.reporting.localization.Localization(__file__, 2929, 21), groupdict_88760, *[], **kwargs_88761)
    
    # Applying the binary operator 'in' (line 2929)
    result_contains_88763 = python_operator(stypy.reporting.localization.Localization(__file__, 2929, 11), 'in', str_88758, groupdict_call_result_88762)
    
    
    # Call to group(...): (line 2929)
    # Processing the call arguments (line 2929)
    str_88766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2929, 47), 'str', 'name')
    # Processing the call keyword arguments (line 2929)
    kwargs_88767 = {}
    # Getting the type of 'm' (line 2929)
    m_88764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2929, 39), 'm', False)
    # Obtaining the member 'group' of a type (line 2929)
    group_88765 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2929, 39), m_88764, 'group')
    # Calling group(args, kwargs) (line 2929)
    group_call_result_88768 = invoke(stypy.reporting.localization.Localization(__file__, 2929, 39), group_88765, *[str_88766], **kwargs_88767)
    
    # Applying the binary operator 'and' (line 2929)
    result_and_keyword_88769 = python_operator(stypy.reporting.localization.Localization(__file__, 2929, 11), 'and', result_contains_88763, group_call_result_88768)
    
    # Testing the type of an if condition (line 2929)
    if_condition_88770 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2929, 8), result_and_keyword_88769)
    # Assigning a type to the variable 'if_condition_88770' (line 2929)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2929, 8), 'if_condition_88770', if_condition_88770)
    # SSA begins for if statement (line 2929)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 2930)
    # Processing the call arguments (line 2930)
    str_88772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2931, 16), 'str', 'determineexprtype: selected kind types not supported (%s)\n')
    
    # Call to repr(...): (line 2931)
    # Processing the call arguments (line 2931)
    # Getting the type of 'expr' (line 2931)
    expr_88774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2931, 85), 'expr', False)
    # Processing the call keyword arguments (line 2931)
    kwargs_88775 = {}
    # Getting the type of 'repr' (line 2931)
    repr_88773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2931, 80), 'repr', False)
    # Calling repr(args, kwargs) (line 2931)
    repr_call_result_88776 = invoke(stypy.reporting.localization.Localization(__file__, 2931, 80), repr_88773, *[expr_88774], **kwargs_88775)
    
    # Applying the binary operator '%' (line 2931)
    result_mod_88777 = python_operator(stypy.reporting.localization.Localization(__file__, 2931, 16), '%', str_88772, repr_call_result_88776)
    
    # Processing the call keyword arguments (line 2930)
    kwargs_88778 = {}
    # Getting the type of 'outmess' (line 2930)
    outmess_88771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2930, 12), 'outmess', False)
    # Calling outmess(args, kwargs) (line 2930)
    outmess_call_result_88779 = invoke(stypy.reporting.localization.Localization(__file__, 2930, 12), outmess_88771, *[result_mod_88777], **kwargs_88778)
    
    # SSA join for if statement (line 2929)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Obtaining an instance of the builtin type 'dict' (line 2932)
    dict_88780 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2932, 15), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2932)
    # Adding element type (key, value) (line 2932)
    str_88781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2932, 16), 'str', 'typespec')
    str_88782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2932, 28), 'str', 'integer')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2932, 15), dict_88780, (str_88781, str_88782))
    
    # Assigning a type to the variable 'stypy_return_type' (line 2932)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2932, 8), 'stypy_return_type', dict_88780)
    # SSA join for if statement (line 2928)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2933):
    
    # Assigning a Call to a Name (line 2933):
    
    # Call to match(...): (line 2933)
    # Processing the call arguments (line 2933)
    # Getting the type of 'expr' (line 2933)
    expr_88785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2933, 37), 'expr', False)
    # Processing the call keyword arguments (line 2933)
    kwargs_88786 = {}
    # Getting the type of 'determineexprtype_re_3' (line 2933)
    determineexprtype_re_3_88783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2933, 8), 'determineexprtype_re_3', False)
    # Obtaining the member 'match' of a type (line 2933)
    match_88784 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2933, 8), determineexprtype_re_3_88783, 'match')
    # Calling match(args, kwargs) (line 2933)
    match_call_result_88787 = invoke(stypy.reporting.localization.Localization(__file__, 2933, 8), match_88784, *[expr_88785], **kwargs_88786)
    
    # Assigning a type to the variable 'm' (line 2933)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2933, 4), 'm', match_call_result_88787)
    
    # Getting the type of 'm' (line 2934)
    m_88788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2934, 7), 'm')
    # Testing the type of an if condition (line 2934)
    if_condition_88789 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2934, 4), m_88788)
    # Assigning a type to the variable 'if_condition_88789' (line 2934)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2934, 4), 'if_condition_88789', if_condition_88789)
    # SSA begins for if statement (line 2934)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    
    str_88790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2935, 11), 'str', 'name')
    
    # Call to groupdict(...): (line 2935)
    # Processing the call keyword arguments (line 2935)
    kwargs_88793 = {}
    # Getting the type of 'm' (line 2935)
    m_88791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2935, 21), 'm', False)
    # Obtaining the member 'groupdict' of a type (line 2935)
    groupdict_88792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2935, 21), m_88791, 'groupdict')
    # Calling groupdict(args, kwargs) (line 2935)
    groupdict_call_result_88794 = invoke(stypy.reporting.localization.Localization(__file__, 2935, 21), groupdict_88792, *[], **kwargs_88793)
    
    # Applying the binary operator 'in' (line 2935)
    result_contains_88795 = python_operator(stypy.reporting.localization.Localization(__file__, 2935, 11), 'in', str_88790, groupdict_call_result_88794)
    
    
    # Call to group(...): (line 2935)
    # Processing the call arguments (line 2935)
    str_88798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2935, 47), 'str', 'name')
    # Processing the call keyword arguments (line 2935)
    kwargs_88799 = {}
    # Getting the type of 'm' (line 2935)
    m_88796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2935, 39), 'm', False)
    # Obtaining the member 'group' of a type (line 2935)
    group_88797 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2935, 39), m_88796, 'group')
    # Calling group(args, kwargs) (line 2935)
    group_call_result_88800 = invoke(stypy.reporting.localization.Localization(__file__, 2935, 39), group_88797, *[str_88798], **kwargs_88799)
    
    # Applying the binary operator 'and' (line 2935)
    result_and_keyword_88801 = python_operator(stypy.reporting.localization.Localization(__file__, 2935, 11), 'and', result_contains_88795, group_call_result_88800)
    
    # Testing the type of an if condition (line 2935)
    if_condition_88802 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2935, 8), result_and_keyword_88801)
    # Assigning a type to the variable 'if_condition_88802' (line 2935)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2935, 8), 'if_condition_88802', if_condition_88802)
    # SSA begins for if statement (line 2935)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 2936)
    # Processing the call arguments (line 2936)
    str_88804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2937, 16), 'str', 'determineexprtype: selected kind types not supported (%s)\n')
    
    # Call to repr(...): (line 2937)
    # Processing the call arguments (line 2937)
    # Getting the type of 'expr' (line 2937)
    expr_88806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2937, 85), 'expr', False)
    # Processing the call keyword arguments (line 2937)
    kwargs_88807 = {}
    # Getting the type of 'repr' (line 2937)
    repr_88805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2937, 80), 'repr', False)
    # Calling repr(args, kwargs) (line 2937)
    repr_call_result_88808 = invoke(stypy.reporting.localization.Localization(__file__, 2937, 80), repr_88805, *[expr_88806], **kwargs_88807)
    
    # Applying the binary operator '%' (line 2937)
    result_mod_88809 = python_operator(stypy.reporting.localization.Localization(__file__, 2937, 16), '%', str_88804, repr_call_result_88808)
    
    # Processing the call keyword arguments (line 2936)
    kwargs_88810 = {}
    # Getting the type of 'outmess' (line 2936)
    outmess_88803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2936, 12), 'outmess', False)
    # Calling outmess(args, kwargs) (line 2936)
    outmess_call_result_88811 = invoke(stypy.reporting.localization.Localization(__file__, 2936, 12), outmess_88803, *[result_mod_88809], **kwargs_88810)
    
    # SSA join for if statement (line 2935)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Obtaining an instance of the builtin type 'dict' (line 2938)
    dict_88812 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2938, 15), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2938)
    # Adding element type (key, value) (line 2938)
    str_88813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2938, 16), 'str', 'typespec')
    str_88814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2938, 28), 'str', 'real')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2938, 15), dict_88812, (str_88813, str_88814))
    
    # Assigning a type to the variable 'stypy_return_type' (line 2938)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2938, 8), 'stypy_return_type', dict_88812)
    # SSA join for if statement (line 2934)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Obtaining an instance of the builtin type 'list' (line 2939)
    list_88815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2939, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2939)
    # Adding element type (line 2939)
    str_88816 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2939, 15), 'str', '+')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2939, 14), list_88815, str_88816)
    # Adding element type (line 2939)
    str_88817 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2939, 20), 'str', '-')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2939, 14), list_88815, str_88817)
    # Adding element type (line 2939)
    str_88818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2939, 25), 'str', '*')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2939, 14), list_88815, str_88818)
    # Adding element type (line 2939)
    str_88819 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2939, 30), 'str', '/')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2939, 14), list_88815, str_88819)
    
    # Testing the type of a for loop iterable (line 2939)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2939, 4), list_88815)
    # Getting the type of the for loop variable (line 2939)
    for_loop_var_88820 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2939, 4), list_88815)
    # Assigning a type to the variable 'op' (line 2939)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2939, 4), 'op', for_loop_var_88820)
    # SSA begins for a for statement (line 2939)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to split(...): (line 2940)
    # Processing the call arguments (line 2940)
    str_88832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2940, 74), 'str', '@')
    # Getting the type of 'op' (line 2940)
    op_88833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2940, 80), 'op', False)
    # Applying the binary operator '+' (line 2940)
    result_add_88834 = python_operator(stypy.reporting.localization.Localization(__file__, 2940, 74), '+', str_88832, op_88833)
    
    str_88835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2940, 85), 'str', '@')
    # Applying the binary operator '+' (line 2940)
    result_add_88836 = python_operator(stypy.reporting.localization.Localization(__file__, 2940, 83), '+', result_add_88834, str_88835)
    
    # Processing the call keyword arguments (line 2940)
    kwargs_88837 = {}
    
    # Call to markoutercomma(...): (line 2940)
    # Processing the call arguments (line 2940)
    # Getting the type of 'expr' (line 2940)
    expr_88826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2940, 52), 'expr', False)
    # Processing the call keyword arguments (line 2940)
    # Getting the type of 'op' (line 2940)
    op_88827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2940, 64), 'op', False)
    keyword_88828 = op_88827
    kwargs_88829 = {'comma': keyword_88828}
    # Getting the type of 'markoutercomma' (line 2940)
    markoutercomma_88825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2940, 37), 'markoutercomma', False)
    # Calling markoutercomma(args, kwargs) (line 2940)
    markoutercomma_call_result_88830 = invoke(stypy.reporting.localization.Localization(__file__, 2940, 37), markoutercomma_88825, *[expr_88826], **kwargs_88829)
    
    # Obtaining the member 'split' of a type (line 2940)
    split_88831 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2940, 37), markoutercomma_call_result_88830, 'split')
    # Calling split(args, kwargs) (line 2940)
    split_call_result_88838 = invoke(stypy.reporting.localization.Localization(__file__, 2940, 37), split_88831, *[result_add_88836], **kwargs_88837)
    
    comprehension_88839 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2940, 18), split_call_result_88838)
    # Assigning a type to the variable 'x' (line 2940)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2940, 18), 'x', comprehension_88839)
    
    # Call to strip(...): (line 2940)
    # Processing the call keyword arguments (line 2940)
    kwargs_88823 = {}
    # Getting the type of 'x' (line 2940)
    x_88821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2940, 18), 'x', False)
    # Obtaining the member 'strip' of a type (line 2940)
    strip_88822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2940, 18), x_88821, 'strip')
    # Calling strip(args, kwargs) (line 2940)
    strip_call_result_88824 = invoke(stypy.reporting.localization.Localization(__file__, 2940, 18), strip_88822, *[], **kwargs_88823)
    
    list_88840 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2940, 18), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2940, 18), list_88840, strip_call_result_88824)
    # Testing the type of a for loop iterable (line 2940)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2940, 8), list_88840)
    # Getting the type of the for loop variable (line 2940)
    for_loop_var_88841 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2940, 8), list_88840)
    # Assigning a type to the variable 'e' (line 2940)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2940, 8), 'e', for_loop_var_88841)
    # SSA begins for a for statement (line 2940)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'e' (line 2941)
    e_88842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2941, 15), 'e')
    # Getting the type of 'vars' (line 2941)
    vars_88843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2941, 20), 'vars')
    # Applying the binary operator 'in' (line 2941)
    result_contains_88844 = python_operator(stypy.reporting.localization.Localization(__file__, 2941, 15), 'in', e_88842, vars_88843)
    
    # Testing the type of an if condition (line 2941)
    if_condition_88845 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2941, 12), result_contains_88844)
    # Assigning a type to the variable 'if_condition_88845' (line 2941)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2941, 12), 'if_condition_88845', if_condition_88845)
    # SSA begins for if statement (line 2941)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to _ensure_exprdict(...): (line 2942)
    # Processing the call arguments (line 2942)
    
    # Obtaining the type of the subscript
    # Getting the type of 'e' (line 2942)
    e_88847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2942, 45), 'e', False)
    # Getting the type of 'vars' (line 2942)
    vars_88848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2942, 40), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2942)
    getitem___88849 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2942, 40), vars_88848, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2942)
    subscript_call_result_88850 = invoke(stypy.reporting.localization.Localization(__file__, 2942, 40), getitem___88849, e_88847)
    
    # Processing the call keyword arguments (line 2942)
    kwargs_88851 = {}
    # Getting the type of '_ensure_exprdict' (line 2942)
    _ensure_exprdict_88846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2942, 23), '_ensure_exprdict', False)
    # Calling _ensure_exprdict(args, kwargs) (line 2942)
    _ensure_exprdict_call_result_88852 = invoke(stypy.reporting.localization.Localization(__file__, 2942, 23), _ensure_exprdict_88846, *[subscript_call_result_88850], **kwargs_88851)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2942)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2942, 16), 'stypy_return_type', _ensure_exprdict_call_result_88852)
    # SSA join for if statement (line 2941)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Dict to a Name (line 2943):
    
    # Assigning a Dict to a Name (line 2943):
    
    # Obtaining an instance of the builtin type 'dict' (line 2943)
    dict_88853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2943, 8), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2943)
    
    # Assigning a type to the variable 't' (line 2943)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2943, 4), 't', dict_88853)
    
    
    # Call to match(...): (line 2944)
    # Processing the call arguments (line 2944)
    # Getting the type of 'expr' (line 2944)
    expr_88856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2944, 36), 'expr', False)
    # Processing the call keyword arguments (line 2944)
    kwargs_88857 = {}
    # Getting the type of 'determineexprtype_re_4' (line 2944)
    determineexprtype_re_4_88854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2944, 7), 'determineexprtype_re_4', False)
    # Obtaining the member 'match' of a type (line 2944)
    match_88855 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2944, 7), determineexprtype_re_4_88854, 'match')
    # Calling match(args, kwargs) (line 2944)
    match_call_result_88858 = invoke(stypy.reporting.localization.Localization(__file__, 2944, 7), match_88855, *[expr_88856], **kwargs_88857)
    
    # Testing the type of an if condition (line 2944)
    if_condition_88859 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2944, 4), match_call_result_88858)
    # Assigning a type to the variable 'if_condition_88859' (line 2944)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2944, 4), 'if_condition_88859', if_condition_88859)
    # SSA begins for if statement (line 2944)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2945):
    
    # Assigning a Call to a Name (line 2945):
    
    # Call to determineexprtype(...): (line 2945)
    # Processing the call arguments (line 2945)
    
    # Obtaining the type of the subscript
    int_88861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2945, 35), 'int')
    int_88862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2945, 37), 'int')
    slice_88863 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2945, 30), int_88861, int_88862, None)
    # Getting the type of 'expr' (line 2945)
    expr_88864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2945, 30), 'expr', False)
    # Obtaining the member '__getitem__' of a type (line 2945)
    getitem___88865 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2945, 30), expr_88864, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2945)
    subscript_call_result_88866 = invoke(stypy.reporting.localization.Localization(__file__, 2945, 30), getitem___88865, slice_88863)
    
    # Getting the type of 'vars' (line 2945)
    vars_88867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2945, 42), 'vars', False)
    # Getting the type of 'rules' (line 2945)
    rules_88868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2945, 48), 'rules', False)
    # Processing the call keyword arguments (line 2945)
    kwargs_88869 = {}
    # Getting the type of 'determineexprtype' (line 2945)
    determineexprtype_88860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2945, 12), 'determineexprtype', False)
    # Calling determineexprtype(args, kwargs) (line 2945)
    determineexprtype_call_result_88870 = invoke(stypy.reporting.localization.Localization(__file__, 2945, 12), determineexprtype_88860, *[subscript_call_result_88866, vars_88867, rules_88868], **kwargs_88869)
    
    # Assigning a type to the variable 't' (line 2945)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2945, 8), 't', determineexprtype_call_result_88870)
    # SSA branch for the else part of an if statement (line 2944)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Name (line 2947):
    
    # Assigning a Call to a Name (line 2947):
    
    # Call to match(...): (line 2947)
    # Processing the call arguments (line 2947)
    # Getting the type of 'expr' (line 2947)
    expr_88873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2947, 41), 'expr', False)
    # Processing the call keyword arguments (line 2947)
    kwargs_88874 = {}
    # Getting the type of 'determineexprtype_re_5' (line 2947)
    determineexprtype_re_5_88871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2947, 12), 'determineexprtype_re_5', False)
    # Obtaining the member 'match' of a type (line 2947)
    match_88872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2947, 12), determineexprtype_re_5_88871, 'match')
    # Calling match(args, kwargs) (line 2947)
    match_call_result_88875 = invoke(stypy.reporting.localization.Localization(__file__, 2947, 12), match_88872, *[expr_88873], **kwargs_88874)
    
    # Assigning a type to the variable 'm' (line 2947)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2947, 8), 'm', match_call_result_88875)
    
    # Getting the type of 'm' (line 2948)
    m_88876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2948, 11), 'm')
    # Testing the type of an if condition (line 2948)
    if_condition_88877 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2948, 8), m_88876)
    # Assigning a type to the variable 'if_condition_88877' (line 2948)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2948, 8), 'if_condition_88877', if_condition_88877)
    # SSA begins for if statement (line 2948)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2949):
    
    # Assigning a Call to a Name (line 2949):
    
    # Call to group(...): (line 2949)
    # Processing the call arguments (line 2949)
    str_88880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2949, 25), 'str', 'name')
    # Processing the call keyword arguments (line 2949)
    kwargs_88881 = {}
    # Getting the type of 'm' (line 2949)
    m_88878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2949, 17), 'm', False)
    # Obtaining the member 'group' of a type (line 2949)
    group_88879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2949, 17), m_88878, 'group')
    # Calling group(args, kwargs) (line 2949)
    group_call_result_88882 = invoke(stypy.reporting.localization.Localization(__file__, 2949, 17), group_88879, *[str_88880], **kwargs_88881)
    
    # Assigning a type to the variable 'rn' (line 2949)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2949, 12), 'rn', group_call_result_88882)
    
    # Assigning a Call to a Name (line 2950):
    
    # Assigning a Call to a Name (line 2950):
    
    # Call to determineexprtype(...): (line 2950)
    # Processing the call arguments (line 2950)
    
    # Call to group(...): (line 2950)
    # Processing the call arguments (line 2950)
    str_88886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2950, 42), 'str', 'name')
    # Processing the call keyword arguments (line 2950)
    kwargs_88887 = {}
    # Getting the type of 'm' (line 2950)
    m_88884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2950, 34), 'm', False)
    # Obtaining the member 'group' of a type (line 2950)
    group_88885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2950, 34), m_88884, 'group')
    # Calling group(args, kwargs) (line 2950)
    group_call_result_88888 = invoke(stypy.reporting.localization.Localization(__file__, 2950, 34), group_88885, *[str_88886], **kwargs_88887)
    
    # Getting the type of 'vars' (line 2950)
    vars_88889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2950, 51), 'vars', False)
    # Getting the type of 'rules' (line 2950)
    rules_88890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2950, 57), 'rules', False)
    # Processing the call keyword arguments (line 2950)
    kwargs_88891 = {}
    # Getting the type of 'determineexprtype' (line 2950)
    determineexprtype_88883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2950, 16), 'determineexprtype', False)
    # Calling determineexprtype(args, kwargs) (line 2950)
    determineexprtype_call_result_88892 = invoke(stypy.reporting.localization.Localization(__file__, 2950, 16), determineexprtype_88883, *[group_call_result_88888, vars_88889, rules_88890], **kwargs_88891)
    
    # Assigning a type to the variable 't' (line 2950)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2950, 12), 't', determineexprtype_call_result_88892)
    
    
    # Evaluating a boolean operation
    # Getting the type of 't' (line 2951)
    t_88893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2951, 15), 't')
    
    str_88894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2951, 21), 'str', 'attrspec')
    # Getting the type of 't' (line 2951)
    t_88895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2951, 35), 't')
    # Applying the binary operator 'in' (line 2951)
    result_contains_88896 = python_operator(stypy.reporting.localization.Localization(__file__, 2951, 21), 'in', str_88894, t_88895)
    
    # Applying the binary operator 'and' (line 2951)
    result_and_keyword_88897 = python_operator(stypy.reporting.localization.Localization(__file__, 2951, 15), 'and', t_88893, result_contains_88896)
    
    # Testing the type of an if condition (line 2951)
    if_condition_88898 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2951, 12), result_and_keyword_88897)
    # Assigning a type to the variable 'if_condition_88898' (line 2951)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2951, 12), 'if_condition_88898', if_condition_88898)
    # SSA begins for if statement (line 2951)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Deleting a member
    # Getting the type of 't' (line 2952)
    t_88899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2952, 20), 't')
    
    # Obtaining the type of the subscript
    str_88900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2952, 22), 'str', 'attrspec')
    # Getting the type of 't' (line 2952)
    t_88901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2952, 20), 't')
    # Obtaining the member '__getitem__' of a type (line 2952)
    getitem___88902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2952, 20), t_88901, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2952)
    subscript_call_result_88903 = invoke(stypy.reporting.localization.Localization(__file__, 2952, 20), getitem___88902, str_88900)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2952, 16), t_88899, subscript_call_result_88903)
    # SSA join for if statement (line 2951)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 't' (line 2953)
    t_88904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2953, 19), 't')
    # Applying the 'not' unary operator (line 2953)
    result_not__88905 = python_operator(stypy.reporting.localization.Localization(__file__, 2953, 15), 'not', t_88904)
    
    # Testing the type of an if condition (line 2953)
    if_condition_88906 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2953, 12), result_not__88905)
    # Assigning a type to the variable 'if_condition_88906' (line 2953)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2953, 12), 'if_condition_88906', if_condition_88906)
    # SSA begins for if statement (line 2953)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Obtaining the type of the subscript
    int_88907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2954, 22), 'int')
    # Getting the type of 'rn' (line 2954)
    rn_88908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2954, 19), 'rn')
    # Obtaining the member '__getitem__' of a type (line 2954)
    getitem___88909 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2954, 19), rn_88908, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2954)
    subscript_call_result_88910 = invoke(stypy.reporting.localization.Localization(__file__, 2954, 19), getitem___88909, int_88907)
    
    # Getting the type of 'rules' (line 2954)
    rules_88911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2954, 28), 'rules')
    # Applying the binary operator 'in' (line 2954)
    result_contains_88912 = python_operator(stypy.reporting.localization.Localization(__file__, 2954, 19), 'in', subscript_call_result_88910, rules_88911)
    
    # Testing the type of an if condition (line 2954)
    if_condition_88913 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2954, 16), result_contains_88912)
    # Assigning a type to the variable 'if_condition_88913' (line 2954)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2954, 16), 'if_condition_88913', if_condition_88913)
    # SSA begins for if statement (line 2954)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to _ensure_exprdict(...): (line 2955)
    # Processing the call arguments (line 2955)
    
    # Obtaining the type of the subscript
    
    # Obtaining the type of the subscript
    int_88915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2955, 53), 'int')
    # Getting the type of 'rn' (line 2955)
    rn_88916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2955, 50), 'rn', False)
    # Obtaining the member '__getitem__' of a type (line 2955)
    getitem___88917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2955, 50), rn_88916, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2955)
    subscript_call_result_88918 = invoke(stypy.reporting.localization.Localization(__file__, 2955, 50), getitem___88917, int_88915)
    
    # Getting the type of 'rules' (line 2955)
    rules_88919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2955, 44), 'rules', False)
    # Obtaining the member '__getitem__' of a type (line 2955)
    getitem___88920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2955, 44), rules_88919, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2955)
    subscript_call_result_88921 = invoke(stypy.reporting.localization.Localization(__file__, 2955, 44), getitem___88920, subscript_call_result_88918)
    
    # Processing the call keyword arguments (line 2955)
    kwargs_88922 = {}
    # Getting the type of '_ensure_exprdict' (line 2955)
    _ensure_exprdict_88914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2955, 27), '_ensure_exprdict', False)
    # Calling _ensure_exprdict(args, kwargs) (line 2955)
    _ensure_exprdict_call_result_88923 = invoke(stypy.reporting.localization.Localization(__file__, 2955, 27), _ensure_exprdict_88914, *[subscript_call_result_88921], **kwargs_88922)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2955)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2955, 20), 'stypy_return_type', _ensure_exprdict_call_result_88923)
    # SSA join for if statement (line 2954)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2953)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2948)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2944)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    int_88924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2956, 12), 'int')
    # Getting the type of 'expr' (line 2956)
    expr_88925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2956, 7), 'expr')
    # Obtaining the member '__getitem__' of a type (line 2956)
    getitem___88926 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2956, 7), expr_88925, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2956)
    subscript_call_result_88927 = invoke(stypy.reporting.localization.Localization(__file__, 2956, 7), getitem___88926, int_88924)
    
    str_88928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2956, 18), 'str', '\'"')
    # Applying the binary operator 'in' (line 2956)
    result_contains_88929 = python_operator(stypy.reporting.localization.Localization(__file__, 2956, 7), 'in', subscript_call_result_88927, str_88928)
    
    # Testing the type of an if condition (line 2956)
    if_condition_88930 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2956, 4), result_contains_88929)
    # Assigning a type to the variable 'if_condition_88930' (line 2956)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2956, 4), 'if_condition_88930', if_condition_88930)
    # SSA begins for if statement (line 2956)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Obtaining an instance of the builtin type 'dict' (line 2957)
    dict_88931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2957, 15), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2957)
    # Adding element type (key, value) (line 2957)
    str_88932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2957, 16), 'str', 'typespec')
    str_88933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2957, 28), 'str', 'character')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2957, 15), dict_88931, (str_88932, str_88933))
    # Adding element type (key, value) (line 2957)
    str_88934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2957, 41), 'str', 'charselector')
    
    # Obtaining an instance of the builtin type 'dict' (line 2957)
    dict_88935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2957, 57), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 2957)
    # Adding element type (key, value) (line 2957)
    str_88936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2957, 58), 'str', '*')
    str_88937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2957, 63), 'str', '*')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2957, 57), dict_88935, (str_88936, str_88937))
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2957, 15), dict_88931, (str_88934, dict_88935))
    
    # Assigning a type to the variable 'stypy_return_type' (line 2957)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2957, 8), 'stypy_return_type', dict_88931)
    # SSA join for if statement (line 2956)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 't' (line 2958)
    t_88938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2958, 11), 't')
    # Applying the 'not' unary operator (line 2958)
    result_not__88939 = python_operator(stypy.reporting.localization.Localization(__file__, 2958, 7), 'not', t_88938)
    
    # Testing the type of an if condition (line 2958)
    if_condition_88940 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2958, 4), result_not__88939)
    # Assigning a type to the variable 'if_condition_88940' (line 2958)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2958, 4), 'if_condition_88940', if_condition_88940)
    # SSA begins for if statement (line 2958)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 2959)
    # Processing the call arguments (line 2959)
    str_88942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2960, 12), 'str', 'determineexprtype: could not determine expressions (%s) type.\n')
    
    # Call to repr(...): (line 2960)
    # Processing the call arguments (line 2960)
    # Getting the type of 'expr' (line 2960)
    expr_88944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2960, 86), 'expr', False)
    # Processing the call keyword arguments (line 2960)
    kwargs_88945 = {}
    # Getting the type of 'repr' (line 2960)
    repr_88943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2960, 81), 'repr', False)
    # Calling repr(args, kwargs) (line 2960)
    repr_call_result_88946 = invoke(stypy.reporting.localization.Localization(__file__, 2960, 81), repr_88943, *[expr_88944], **kwargs_88945)
    
    # Applying the binary operator '%' (line 2960)
    result_mod_88947 = python_operator(stypy.reporting.localization.Localization(__file__, 2960, 12), '%', str_88942, repr_call_result_88946)
    
    # Processing the call keyword arguments (line 2959)
    kwargs_88948 = {}
    # Getting the type of 'outmess' (line 2959)
    outmess_88941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2959, 8), 'outmess', False)
    # Calling outmess(args, kwargs) (line 2959)
    outmess_call_result_88949 = invoke(stypy.reporting.localization.Localization(__file__, 2959, 8), outmess_88941, *[result_mod_88947], **kwargs_88948)
    
    # SSA join for if statement (line 2958)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 't' (line 2961)
    t_88950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2961, 11), 't')
    # Assigning a type to the variable 'stypy_return_type' (line 2961)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2961, 4), 'stypy_return_type', t_88950)
    
    # ################# End of 'determineexprtype(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'determineexprtype' in the type store
    # Getting the type of 'stypy_return_type' (line 2921)
    stypy_return_type_88951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2921, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_88951)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'determineexprtype'
    return stypy_return_type_88951

# Assigning a type to the variable 'determineexprtype' (line 2921)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2921, 0), 'determineexprtype', determineexprtype)

@norecursion
def crack2fortrangen(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    str_88952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2966, 32), 'str', '\n')
    # Getting the type of 'False' (line 2966)
    False_88953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2966, 51), 'False')
    defaults = [str_88952, False_88953]
    # Create a new context for function 'crack2fortrangen'
    module_type_store = module_type_store.open_function_context('crack2fortrangen', 2966, 0, False)
    
    # Passed parameters checking function
    crack2fortrangen.stypy_localization = localization
    crack2fortrangen.stypy_type_of_self = None
    crack2fortrangen.stypy_type_store = module_type_store
    crack2fortrangen.stypy_function_name = 'crack2fortrangen'
    crack2fortrangen.stypy_param_names_list = ['block', 'tab', 'as_interface']
    crack2fortrangen.stypy_varargs_param_name = None
    crack2fortrangen.stypy_kwargs_param_name = None
    crack2fortrangen.stypy_call_defaults = defaults
    crack2fortrangen.stypy_call_varargs = varargs
    crack2fortrangen.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'crack2fortrangen', ['block', 'tab', 'as_interface'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'crack2fortrangen', localization, ['block', 'tab', 'as_interface'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'crack2fortrangen(...)' code ##################

    # Marking variables as global (line 2967)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 2967, 4), 'skipfuncs')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 2967, 4), 'onlyfuncs')
    
    # Call to setmesstext(...): (line 2969)
    # Processing the call arguments (line 2969)
    # Getting the type of 'block' (line 2969)
    block_88955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2969, 16), 'block', False)
    # Processing the call keyword arguments (line 2969)
    kwargs_88956 = {}
    # Getting the type of 'setmesstext' (line 2969)
    setmesstext_88954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2969, 4), 'setmesstext', False)
    # Calling setmesstext(args, kwargs) (line 2969)
    setmesstext_call_result_88957 = invoke(stypy.reporting.localization.Localization(__file__, 2969, 4), setmesstext_88954, *[block_88955], **kwargs_88956)
    
    
    # Assigning a Str to a Name (line 2970):
    
    # Assigning a Str to a Name (line 2970):
    str_88958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2970, 10), 'str', '')
    # Assigning a type to the variable 'ret' (line 2970)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2970, 4), 'ret', str_88958)
    
    # Type idiom detected: calculating its left and rigth part (line 2971)
    # Getting the type of 'list' (line 2971)
    list_88959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2971, 25), 'list')
    # Getting the type of 'block' (line 2971)
    block_88960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2971, 18), 'block')
    
    (may_be_88961, more_types_in_union_88962) = may_be_subtype(list_88959, block_88960)

    if may_be_88961:

        if more_types_in_union_88962:
            # Runtime conditional SSA (line 2971)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        # Assigning a type to the variable 'block' (line 2971)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2971, 4), 'block', remove_not_subtype_from_union(block_88960, list))
        
        # Getting the type of 'block' (line 2972)
        block_88963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2972, 17), 'block')
        # Testing the type of a for loop iterable (line 2972)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2972, 8), block_88963)
        # Getting the type of the for loop variable (line 2972)
        for_loop_var_88964 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2972, 8), block_88963)
        # Assigning a type to the variable 'g' (line 2972)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2972, 8), 'g', for_loop_var_88964)
        # SSA begins for a for statement (line 2972)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Evaluating a boolean operation
        # Getting the type of 'g' (line 2973)
        g_88965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2973, 15), 'g')
        
        
        # Obtaining the type of the subscript
        str_88966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2973, 23), 'str', 'block')
        # Getting the type of 'g' (line 2973)
        g_88967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2973, 21), 'g')
        # Obtaining the member '__getitem__' of a type (line 2973)
        getitem___88968 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2973, 21), g_88967, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2973)
        subscript_call_result_88969 = invoke(stypy.reporting.localization.Localization(__file__, 2973, 21), getitem___88968, str_88966)
        
        
        # Obtaining an instance of the builtin type 'list' (line 2973)
        list_88970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2973, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2973)
        # Adding element type (line 2973)
        str_88971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2973, 36), 'str', 'function')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2973, 35), list_88970, str_88971)
        # Adding element type (line 2973)
        str_88972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2973, 48), 'str', 'subroutine')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2973, 35), list_88970, str_88972)
        
        # Applying the binary operator 'in' (line 2973)
        result_contains_88973 = python_operator(stypy.reporting.localization.Localization(__file__, 2973, 21), 'in', subscript_call_result_88969, list_88970)
        
        # Applying the binary operator 'and' (line 2973)
        result_and_keyword_88974 = python_operator(stypy.reporting.localization.Localization(__file__, 2973, 15), 'and', g_88965, result_contains_88973)
        
        # Testing the type of an if condition (line 2973)
        if_condition_88975 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2973, 12), result_and_keyword_88974)
        # Assigning a type to the variable 'if_condition_88975' (line 2973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2973, 12), 'if_condition_88975', if_condition_88975)
        # SSA begins for if statement (line 2973)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        
        # Obtaining the type of the subscript
        str_88976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2974, 21), 'str', 'name')
        # Getting the type of 'g' (line 2974)
        g_88977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2974, 19), 'g')
        # Obtaining the member '__getitem__' of a type (line 2974)
        getitem___88978 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2974, 19), g_88977, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2974)
        subscript_call_result_88979 = invoke(stypy.reporting.localization.Localization(__file__, 2974, 19), getitem___88978, str_88976)
        
        # Getting the type of 'skipfuncs' (line 2974)
        skipfuncs_88980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2974, 32), 'skipfuncs')
        # Applying the binary operator 'in' (line 2974)
        result_contains_88981 = python_operator(stypy.reporting.localization.Localization(__file__, 2974, 19), 'in', subscript_call_result_88979, skipfuncs_88980)
        
        # Testing the type of an if condition (line 2974)
        if_condition_88982 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2974, 16), result_contains_88981)
        # Assigning a type to the variable 'if_condition_88982' (line 2974)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2974, 16), 'if_condition_88982', if_condition_88982)
        # SSA begins for if statement (line 2974)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # SSA join for if statement (line 2974)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        # Getting the type of 'onlyfuncs' (line 2976)
        onlyfuncs_88983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2976, 19), 'onlyfuncs')
        
        
        # Obtaining the type of the subscript
        str_88984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2976, 35), 'str', 'name')
        # Getting the type of 'g' (line 2976)
        g_88985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2976, 33), 'g')
        # Obtaining the member '__getitem__' of a type (line 2976)
        getitem___88986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2976, 33), g_88985, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2976)
        subscript_call_result_88987 = invoke(stypy.reporting.localization.Localization(__file__, 2976, 33), getitem___88986, str_88984)
        
        # Getting the type of 'onlyfuncs' (line 2976)
        onlyfuncs_88988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2976, 50), 'onlyfuncs')
        # Applying the binary operator 'notin' (line 2976)
        result_contains_88989 = python_operator(stypy.reporting.localization.Localization(__file__, 2976, 33), 'notin', subscript_call_result_88987, onlyfuncs_88988)
        
        # Applying the binary operator 'and' (line 2976)
        result_and_keyword_88990 = python_operator(stypy.reporting.localization.Localization(__file__, 2976, 19), 'and', onlyfuncs_88983, result_contains_88989)
        
        # Testing the type of an if condition (line 2976)
        if_condition_88991 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2976, 16), result_and_keyword_88990)
        # Assigning a type to the variable 'if_condition_88991' (line 2976)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2976, 16), 'if_condition_88991', if_condition_88991)
        # SSA begins for if statement (line 2976)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # SSA join for if statement (line 2976)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2973)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 2978):
        
        # Assigning a BinOp to a Name (line 2978):
        # Getting the type of 'ret' (line 2978)
        ret_88992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2978, 18), 'ret')
        
        # Call to crack2fortrangen(...): (line 2978)
        # Processing the call arguments (line 2978)
        # Getting the type of 'g' (line 2978)
        g_88994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2978, 41), 'g', False)
        # Getting the type of 'tab' (line 2978)
        tab_88995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2978, 44), 'tab', False)
        # Processing the call keyword arguments (line 2978)
        # Getting the type of 'as_interface' (line 2978)
        as_interface_88996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2978, 62), 'as_interface', False)
        keyword_88997 = as_interface_88996
        kwargs_88998 = {'as_interface': keyword_88997}
        # Getting the type of 'crack2fortrangen' (line 2978)
        crack2fortrangen_88993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2978, 24), 'crack2fortrangen', False)
        # Calling crack2fortrangen(args, kwargs) (line 2978)
        crack2fortrangen_call_result_88999 = invoke(stypy.reporting.localization.Localization(__file__, 2978, 24), crack2fortrangen_88993, *[g_88994, tab_88995], **kwargs_88998)
        
        # Applying the binary operator '+' (line 2978)
        result_add_89000 = python_operator(stypy.reporting.localization.Localization(__file__, 2978, 18), '+', ret_88992, crack2fortrangen_call_result_88999)
        
        # Assigning a type to the variable 'ret' (line 2978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2978, 12), 'ret', result_add_89000)
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'ret' (line 2979)
        ret_89001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2979, 15), 'ret')
        # Assigning a type to the variable 'stypy_return_type' (line 2979)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2979, 8), 'stypy_return_type', ret_89001)

        if more_types_in_union_88962:
            # SSA join for if statement (line 2971)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Str to a Name (line 2980):
    
    # Assigning a Str to a Name (line 2980):
    str_89002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2980, 13), 'str', '')
    # Assigning a type to the variable 'prefix' (line 2980)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2980, 4), 'prefix', str_89002)
    
    # Assigning a Str to a Name (line 2981):
    
    # Assigning a Str to a Name (line 2981):
    str_89003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2981, 11), 'str', '')
    # Assigning a type to the variable 'name' (line 2981)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2981, 4), 'name', str_89003)
    
    # Assigning a Str to a Name (line 2982):
    
    # Assigning a Str to a Name (line 2982):
    str_89004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2982, 11), 'str', '')
    # Assigning a type to the variable 'args' (line 2982)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2982, 4), 'args', str_89004)
    
    # Assigning a Subscript to a Name (line 2983):
    
    # Assigning a Subscript to a Name (line 2983):
    
    # Obtaining the type of the subscript
    str_89005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2983, 22), 'str', 'block')
    # Getting the type of 'block' (line 2983)
    block_89006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2983, 16), 'block')
    # Obtaining the member '__getitem__' of a type (line 2983)
    getitem___89007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2983, 16), block_89006, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2983)
    subscript_call_result_89008 = invoke(stypy.reporting.localization.Localization(__file__, 2983, 16), getitem___89007, str_89005)
    
    # Assigning a type to the variable 'blocktype' (line 2983)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2983, 4), 'blocktype', subscript_call_result_89008)
    
    
    # Getting the type of 'blocktype' (line 2984)
    blocktype_89009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2984, 7), 'blocktype')
    str_89010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2984, 20), 'str', 'program')
    # Applying the binary operator '==' (line 2984)
    result_eq_89011 = python_operator(stypy.reporting.localization.Localization(__file__, 2984, 7), '==', blocktype_89009, str_89010)
    
    # Testing the type of an if condition (line 2984)
    if_condition_89012 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2984, 4), result_eq_89011)
    # Assigning a type to the variable 'if_condition_89012' (line 2984)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2984, 4), 'if_condition_89012', if_condition_89012)
    # SSA begins for if statement (line 2984)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    str_89013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2985, 15), 'str', '')
    # Assigning a type to the variable 'stypy_return_type' (line 2985)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2985, 8), 'stypy_return_type', str_89013)
    # SSA join for if statement (line 2984)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a List to a Name (line 2986):
    
    # Assigning a List to a Name (line 2986):
    
    # Obtaining an instance of the builtin type 'list' (line 2986)
    list_89014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2986, 12), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2986)
    
    # Assigning a type to the variable 'argsl' (line 2986)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2986, 4), 'argsl', list_89014)
    
    
    str_89015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2987, 7), 'str', 'name')
    # Getting the type of 'block' (line 2987)
    block_89016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2987, 17), 'block')
    # Applying the binary operator 'in' (line 2987)
    result_contains_89017 = python_operator(stypy.reporting.localization.Localization(__file__, 2987, 7), 'in', str_89015, block_89016)
    
    # Testing the type of an if condition (line 2987)
    if_condition_89018 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2987, 4), result_contains_89017)
    # Assigning a type to the variable 'if_condition_89018' (line 2987)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2987, 4), 'if_condition_89018', if_condition_89018)
    # SSA begins for if statement (line 2987)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2988):
    
    # Assigning a Subscript to a Name (line 2988):
    
    # Obtaining the type of the subscript
    str_89019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2988, 21), 'str', 'name')
    # Getting the type of 'block' (line 2988)
    block_89020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2988, 15), 'block')
    # Obtaining the member '__getitem__' of a type (line 2988)
    getitem___89021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2988, 15), block_89020, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2988)
    subscript_call_result_89022 = invoke(stypy.reporting.localization.Localization(__file__, 2988, 15), getitem___89021, str_89019)
    
    # Assigning a type to the variable 'name' (line 2988)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2988, 8), 'name', subscript_call_result_89022)
    # SSA join for if statement (line 2987)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_89023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2989, 7), 'str', 'args')
    # Getting the type of 'block' (line 2989)
    block_89024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2989, 17), 'block')
    # Applying the binary operator 'in' (line 2989)
    result_contains_89025 = python_operator(stypy.reporting.localization.Localization(__file__, 2989, 7), 'in', str_89023, block_89024)
    
    # Testing the type of an if condition (line 2989)
    if_condition_89026 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2989, 4), result_contains_89025)
    # Assigning a type to the variable 'if_condition_89026' (line 2989)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2989, 4), 'if_condition_89026', if_condition_89026)
    # SSA begins for if statement (line 2989)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 2990):
    
    # Assigning a Subscript to a Name (line 2990):
    
    # Obtaining the type of the subscript
    str_89027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2990, 21), 'str', 'vars')
    # Getting the type of 'block' (line 2990)
    block_89028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2990, 15), 'block')
    # Obtaining the member '__getitem__' of a type (line 2990)
    getitem___89029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2990, 15), block_89028, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2990)
    subscript_call_result_89030 = invoke(stypy.reporting.localization.Localization(__file__, 2990, 15), getitem___89029, str_89027)
    
    # Assigning a type to the variable 'vars' (line 2990)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2990, 8), 'vars', subscript_call_result_89030)
    
    
    # Obtaining the type of the subscript
    str_89031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2991, 23), 'str', 'args')
    # Getting the type of 'block' (line 2991)
    block_89032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2991, 17), 'block')
    # Obtaining the member '__getitem__' of a type (line 2991)
    getitem___89033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2991, 17), block_89032, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2991)
    subscript_call_result_89034 = invoke(stypy.reporting.localization.Localization(__file__, 2991, 17), getitem___89033, str_89031)
    
    # Testing the type of a for loop iterable (line 2991)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2991, 8), subscript_call_result_89034)
    # Getting the type of the for loop variable (line 2991)
    for_loop_var_89035 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2991, 8), subscript_call_result_89034)
    # Assigning a type to the variable 'a' (line 2991)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2991, 8), 'a', for_loop_var_89035)
    # SSA begins for a for statement (line 2991)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 2992):
    
    # Assigning a Call to a Name (line 2992):
    
    # Call to expr2name(...): (line 2992)
    # Processing the call arguments (line 2992)
    # Getting the type of 'a' (line 2992)
    a_89037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2992, 26), 'a', False)
    # Getting the type of 'block' (line 2992)
    block_89038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2992, 29), 'block', False)
    # Getting the type of 'argsl' (line 2992)
    argsl_89039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2992, 36), 'argsl', False)
    # Processing the call keyword arguments (line 2992)
    kwargs_89040 = {}
    # Getting the type of 'expr2name' (line 2992)
    expr2name_89036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2992, 16), 'expr2name', False)
    # Calling expr2name(args, kwargs) (line 2992)
    expr2name_call_result_89041 = invoke(stypy.reporting.localization.Localization(__file__, 2992, 16), expr2name_89036, *[a_89037, block_89038, argsl_89039], **kwargs_89040)
    
    # Assigning a type to the variable 'a' (line 2992)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2992, 12), 'a', expr2name_call_result_89041)
    
    
    
    # Call to isintent_callback(...): (line 2993)
    # Processing the call arguments (line 2993)
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 2993)
    a_89043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2993, 42), 'a', False)
    # Getting the type of 'vars' (line 2993)
    vars_89044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2993, 37), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 2993)
    getitem___89045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2993, 37), vars_89044, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2993)
    subscript_call_result_89046 = invoke(stypy.reporting.localization.Localization(__file__, 2993, 37), getitem___89045, a_89043)
    
    # Processing the call keyword arguments (line 2993)
    kwargs_89047 = {}
    # Getting the type of 'isintent_callback' (line 2993)
    isintent_callback_89042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2993, 19), 'isintent_callback', False)
    # Calling isintent_callback(args, kwargs) (line 2993)
    isintent_callback_call_result_89048 = invoke(stypy.reporting.localization.Localization(__file__, 2993, 19), isintent_callback_89042, *[subscript_call_result_89046], **kwargs_89047)
    
    # Applying the 'not' unary operator (line 2993)
    result_not__89049 = python_operator(stypy.reporting.localization.Localization(__file__, 2993, 15), 'not', isintent_callback_call_result_89048)
    
    # Testing the type of an if condition (line 2993)
    if_condition_89050 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2993, 12), result_not__89049)
    # Assigning a type to the variable 'if_condition_89050' (line 2993)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2993, 12), 'if_condition_89050', if_condition_89050)
    # SSA begins for if statement (line 2993)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 2994)
    # Processing the call arguments (line 2994)
    # Getting the type of 'a' (line 2994)
    a_89053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2994, 29), 'a', False)
    # Processing the call keyword arguments (line 2994)
    kwargs_89054 = {}
    # Getting the type of 'argsl' (line 2994)
    argsl_89051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2994, 16), 'argsl', False)
    # Obtaining the member 'append' of a type (line 2994)
    append_89052 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2994, 16), argsl_89051, 'append')
    # Calling append(args, kwargs) (line 2994)
    append_call_result_89055 = invoke(stypy.reporting.localization.Localization(__file__, 2994, 16), append_89052, *[a_89053], **kwargs_89054)
    
    # SSA join for if statement (line 2993)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    
    # Obtaining the type of the subscript
    str_89056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2995, 17), 'str', 'block')
    # Getting the type of 'block' (line 2995)
    block_89057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2995, 11), 'block')
    # Obtaining the member '__getitem__' of a type (line 2995)
    getitem___89058 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2995, 11), block_89057, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2995)
    subscript_call_result_89059 = invoke(stypy.reporting.localization.Localization(__file__, 2995, 11), getitem___89058, str_89056)
    
    str_89060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2995, 29), 'str', 'function')
    # Applying the binary operator '==' (line 2995)
    result_eq_89061 = python_operator(stypy.reporting.localization.Localization(__file__, 2995, 11), '==', subscript_call_result_89059, str_89060)
    
    # Getting the type of 'argsl' (line 2995)
    argsl_89062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2995, 43), 'argsl')
    # Applying the binary operator 'or' (line 2995)
    result_or_keyword_89063 = python_operator(stypy.reporting.localization.Localization(__file__, 2995, 11), 'or', result_eq_89061, argsl_89062)
    
    # Testing the type of an if condition (line 2995)
    if_condition_89064 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2995, 8), result_or_keyword_89063)
    # Assigning a type to the variable 'if_condition_89064' (line 2995)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2995, 8), 'if_condition_89064', if_condition_89064)
    # SSA begins for if statement (line 2995)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 2996):
    
    # Assigning a BinOp to a Name (line 2996):
    str_89065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2996, 19), 'str', '(%s)')
    
    # Call to join(...): (line 2996)
    # Processing the call arguments (line 2996)
    # Getting the type of 'argsl' (line 2996)
    argsl_89068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2996, 37), 'argsl', False)
    # Processing the call keyword arguments (line 2996)
    kwargs_89069 = {}
    str_89066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2996, 28), 'str', ',')
    # Obtaining the member 'join' of a type (line 2996)
    join_89067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2996, 28), str_89066, 'join')
    # Calling join(args, kwargs) (line 2996)
    join_call_result_89070 = invoke(stypy.reporting.localization.Localization(__file__, 2996, 28), join_89067, *[argsl_89068], **kwargs_89069)
    
    # Applying the binary operator '%' (line 2996)
    result_mod_89071 = python_operator(stypy.reporting.localization.Localization(__file__, 2996, 19), '%', str_89065, join_call_result_89070)
    
    # Assigning a type to the variable 'args' (line 2996)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2996, 12), 'args', result_mod_89071)
    # SSA join for if statement (line 2995)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2989)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Str to a Name (line 2997):
    
    # Assigning a Str to a Name (line 2997):
    str_89072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2997, 23), 'str', '')
    # Assigning a type to the variable 'f2pyenhancements' (line 2997)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2997, 4), 'f2pyenhancements', str_89072)
    
    
    str_89073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2998, 7), 'str', 'f2pyenhancements')
    # Getting the type of 'block' (line 2998)
    block_89074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2998, 29), 'block')
    # Applying the binary operator 'in' (line 2998)
    result_contains_89075 = python_operator(stypy.reporting.localization.Localization(__file__, 2998, 7), 'in', str_89073, block_89074)
    
    # Testing the type of an if condition (line 2998)
    if_condition_89076 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2998, 4), result_contains_89075)
    # Assigning a type to the variable 'if_condition_89076' (line 2998)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2998, 4), 'if_condition_89076', if_condition_89076)
    # SSA begins for if statement (line 2998)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Call to list(...): (line 2999)
    # Processing the call arguments (line 2999)
    
    # Call to keys(...): (line 2999)
    # Processing the call keyword arguments (line 2999)
    kwargs_89083 = {}
    
    # Obtaining the type of the subscript
    str_89078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2999, 28), 'str', 'f2pyenhancements')
    # Getting the type of 'block' (line 2999)
    block_89079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2999, 22), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 2999)
    getitem___89080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2999, 22), block_89079, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2999)
    subscript_call_result_89081 = invoke(stypy.reporting.localization.Localization(__file__, 2999, 22), getitem___89080, str_89078)
    
    # Obtaining the member 'keys' of a type (line 2999)
    keys_89082 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2999, 22), subscript_call_result_89081, 'keys')
    # Calling keys(args, kwargs) (line 2999)
    keys_call_result_89084 = invoke(stypy.reporting.localization.Localization(__file__, 2999, 22), keys_89082, *[], **kwargs_89083)
    
    # Processing the call keyword arguments (line 2999)
    kwargs_89085 = {}
    # Getting the type of 'list' (line 2999)
    list_89077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2999, 17), 'list', False)
    # Calling list(args, kwargs) (line 2999)
    list_call_result_89086 = invoke(stypy.reporting.localization.Localization(__file__, 2999, 17), list_89077, *[keys_call_result_89084], **kwargs_89085)
    
    # Testing the type of a for loop iterable (line 2999)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2999, 8), list_call_result_89086)
    # Getting the type of the for loop variable (line 2999)
    for_loop_var_89087 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2999, 8), list_call_result_89086)
    # Assigning a type to the variable 'k' (line 2999)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2999, 8), 'k', for_loop_var_89087)
    # SSA begins for a for statement (line 2999)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a BinOp to a Name (line 3000):
    
    # Assigning a BinOp to a Name (line 3000):
    str_89088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3000, 31), 'str', '%s%s%s %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3001)
    tuple_89089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3001, 16), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3001)
    # Adding element type (line 3001)
    # Getting the type of 'f2pyenhancements' (line 3001)
    f2pyenhancements_89090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3001, 16), 'f2pyenhancements')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3001, 16), tuple_89089, f2pyenhancements_89090)
    # Adding element type (line 3001)
    # Getting the type of 'tab' (line 3001)
    tab_89091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3001, 34), 'tab')
    # Getting the type of 'tabchar' (line 3001)
    tabchar_89092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3001, 40), 'tabchar')
    # Applying the binary operator '+' (line 3001)
    result_add_89093 = python_operator(stypy.reporting.localization.Localization(__file__, 3001, 34), '+', tab_89091, tabchar_89092)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3001, 16), tuple_89089, result_add_89093)
    # Adding element type (line 3001)
    # Getting the type of 'k' (line 3001)
    k_89094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3001, 49), 'k')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3001, 16), tuple_89089, k_89094)
    # Adding element type (line 3001)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 3001)
    k_89095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3001, 78), 'k')
    
    # Obtaining the type of the subscript
    str_89096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3001, 58), 'str', 'f2pyenhancements')
    # Getting the type of 'block' (line 3001)
    block_89097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3001, 52), 'block')
    # Obtaining the member '__getitem__' of a type (line 3001)
    getitem___89098 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3001, 52), block_89097, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3001)
    subscript_call_result_89099 = invoke(stypy.reporting.localization.Localization(__file__, 3001, 52), getitem___89098, str_89096)
    
    # Obtaining the member '__getitem__' of a type (line 3001)
    getitem___89100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3001, 52), subscript_call_result_89099, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3001)
    subscript_call_result_89101 = invoke(stypy.reporting.localization.Localization(__file__, 3001, 52), getitem___89100, k_89095)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3001, 16), tuple_89089, subscript_call_result_89101)
    
    # Applying the binary operator '%' (line 3000)
    result_mod_89102 = python_operator(stypy.reporting.localization.Localization(__file__, 3000, 31), '%', str_89088, tuple_89089)
    
    # Assigning a type to the variable 'f2pyenhancements' (line 3000)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3000, 12), 'f2pyenhancements', result_mod_89102)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2998)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Name (line 3002):
    
    # Assigning a Subscript to a Name (line 3002):
    
    # Obtaining the type of the subscript
    slice_89103 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 3002, 17), None, None, None)
    
    # Call to get(...): (line 3002)
    # Processing the call arguments (line 3002)
    str_89106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3002, 27), 'str', 'intent')
    
    # Obtaining an instance of the builtin type 'list' (line 3002)
    list_89107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3002, 37), 'list')
    # Adding type elements to the builtin type 'list' instance (line 3002)
    
    # Processing the call keyword arguments (line 3002)
    kwargs_89108 = {}
    # Getting the type of 'block' (line 3002)
    block_89104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3002, 17), 'block', False)
    # Obtaining the member 'get' of a type (line 3002)
    get_89105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3002, 17), block_89104, 'get')
    # Calling get(args, kwargs) (line 3002)
    get_call_result_89109 = invoke(stypy.reporting.localization.Localization(__file__, 3002, 17), get_89105, *[str_89106, list_89107], **kwargs_89108)
    
    # Obtaining the member '__getitem__' of a type (line 3002)
    getitem___89110 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3002, 17), get_call_result_89109, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3002)
    subscript_call_result_89111 = invoke(stypy.reporting.localization.Localization(__file__, 3002, 17), getitem___89110, slice_89103)
    
    # Assigning a type to the variable 'intent_lst' (line 3002)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3002, 4), 'intent_lst', subscript_call_result_89111)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'blocktype' (line 3003)
    blocktype_89112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3003, 7), 'blocktype')
    str_89113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3003, 20), 'str', 'function')
    # Applying the binary operator '==' (line 3003)
    result_eq_89114 = python_operator(stypy.reporting.localization.Localization(__file__, 3003, 7), '==', blocktype_89112, str_89113)
    
    
    str_89115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3003, 35), 'str', 'callback')
    # Getting the type of 'intent_lst' (line 3003)
    intent_lst_89116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3003, 49), 'intent_lst')
    # Applying the binary operator 'in' (line 3003)
    result_contains_89117 = python_operator(stypy.reporting.localization.Localization(__file__, 3003, 35), 'in', str_89115, intent_lst_89116)
    
    # Applying the binary operator 'and' (line 3003)
    result_and_keyword_89118 = python_operator(stypy.reporting.localization.Localization(__file__, 3003, 7), 'and', result_eq_89114, result_contains_89117)
    
    # Testing the type of an if condition (line 3003)
    if_condition_89119 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3003, 4), result_and_keyword_89118)
    # Assigning a type to the variable 'if_condition_89119' (line 3003)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3003, 4), 'if_condition_89119', if_condition_89119)
    # SSA begins for if statement (line 3003)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to remove(...): (line 3004)
    # Processing the call arguments (line 3004)
    str_89122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3004, 26), 'str', 'callback')
    # Processing the call keyword arguments (line 3004)
    kwargs_89123 = {}
    # Getting the type of 'intent_lst' (line 3004)
    intent_lst_89120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3004, 8), 'intent_lst', False)
    # Obtaining the member 'remove' of a type (line 3004)
    remove_89121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3004, 8), intent_lst_89120, 'remove')
    # Calling remove(args, kwargs) (line 3004)
    remove_call_result_89124 = invoke(stypy.reporting.localization.Localization(__file__, 3004, 8), remove_89121, *[str_89122], **kwargs_89123)
    
    # SSA join for if statement (line 3003)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'intent_lst' (line 3005)
    intent_lst_89125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3005, 7), 'intent_lst')
    # Testing the type of an if condition (line 3005)
    if_condition_89126 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3005, 4), intent_lst_89125)
    # Assigning a type to the variable 'if_condition_89126' (line 3005)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3005, 4), 'if_condition_89126', if_condition_89126)
    # SSA begins for if statement (line 3005)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3006):
    
    # Assigning a BinOp to a Name (line 3006):
    str_89127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3006, 27), 'str', '%s%sintent(%s) %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3007)
    tuple_89128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3007, 28), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3007)
    # Adding element type (line 3007)
    # Getting the type of 'f2pyenhancements' (line 3007)
    f2pyenhancements_89129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3007, 28), 'f2pyenhancements')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3007, 28), tuple_89128, f2pyenhancements_89129)
    # Adding element type (line 3007)
    # Getting the type of 'tab' (line 3007)
    tab_89130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3007, 46), 'tab')
    # Getting the type of 'tabchar' (line 3007)
    tabchar_89131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3007, 52), 'tabchar')
    # Applying the binary operator '+' (line 3007)
    result_add_89132 = python_operator(stypy.reporting.localization.Localization(__file__, 3007, 46), '+', tab_89130, tabchar_89131)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3007, 28), tuple_89128, result_add_89132)
    # Adding element type (line 3007)
    
    # Call to join(...): (line 3008)
    # Processing the call arguments (line 3008)
    # Getting the type of 'intent_lst' (line 3008)
    intent_lst_89135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3008, 37), 'intent_lst', False)
    # Processing the call keyword arguments (line 3008)
    kwargs_89136 = {}
    str_89133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3008, 28), 'str', ',')
    # Obtaining the member 'join' of a type (line 3008)
    join_89134 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3008, 28), str_89133, 'join')
    # Calling join(args, kwargs) (line 3008)
    join_call_result_89137 = invoke(stypy.reporting.localization.Localization(__file__, 3008, 28), join_89134, *[intent_lst_89135], **kwargs_89136)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3007, 28), tuple_89128, join_call_result_89137)
    # Adding element type (line 3007)
    # Getting the type of 'name' (line 3008)
    name_89138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3008, 50), 'name')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3007, 28), tuple_89128, name_89138)
    
    # Applying the binary operator '%' (line 3006)
    result_mod_89139 = python_operator(stypy.reporting.localization.Localization(__file__, 3006, 27), '%', str_89127, tuple_89128)
    
    # Assigning a type to the variable 'f2pyenhancements' (line 3006)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3006, 8), 'f2pyenhancements', result_mod_89139)
    # SSA join for if statement (line 3005)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Str to a Name (line 3009):
    
    # Assigning a Str to a Name (line 3009):
    str_89140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3009, 10), 'str', '')
    # Assigning a type to the variable 'use' (line 3009)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3009, 4), 'use', str_89140)
    
    
    str_89141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3010, 7), 'str', 'use')
    # Getting the type of 'block' (line 3010)
    block_89142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3010, 16), 'block')
    # Applying the binary operator 'in' (line 3010)
    result_contains_89143 = python_operator(stypy.reporting.localization.Localization(__file__, 3010, 7), 'in', str_89141, block_89142)
    
    # Testing the type of an if condition (line 3010)
    if_condition_89144 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3010, 4), result_contains_89143)
    # Assigning a type to the variable 'if_condition_89144' (line 3010)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3010, 4), 'if_condition_89144', if_condition_89144)
    # SSA begins for if statement (line 3010)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 3011):
    
    # Assigning a Call to a Name (line 3011):
    
    # Call to use2fortran(...): (line 3011)
    # Processing the call arguments (line 3011)
    
    # Obtaining the type of the subscript
    str_89146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3011, 32), 'str', 'use')
    # Getting the type of 'block' (line 3011)
    block_89147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3011, 26), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 3011)
    getitem___89148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3011, 26), block_89147, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3011)
    subscript_call_result_89149 = invoke(stypy.reporting.localization.Localization(__file__, 3011, 26), getitem___89148, str_89146)
    
    # Getting the type of 'tab' (line 3011)
    tab_89150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3011, 40), 'tab', False)
    # Getting the type of 'tabchar' (line 3011)
    tabchar_89151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3011, 46), 'tabchar', False)
    # Applying the binary operator '+' (line 3011)
    result_add_89152 = python_operator(stypy.reporting.localization.Localization(__file__, 3011, 40), '+', tab_89150, tabchar_89151)
    
    # Processing the call keyword arguments (line 3011)
    kwargs_89153 = {}
    # Getting the type of 'use2fortran' (line 3011)
    use2fortran_89145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3011, 14), 'use2fortran', False)
    # Calling use2fortran(args, kwargs) (line 3011)
    use2fortran_call_result_89154 = invoke(stypy.reporting.localization.Localization(__file__, 3011, 14), use2fortran_89145, *[subscript_call_result_89149, result_add_89152], **kwargs_89153)
    
    # Assigning a type to the variable 'use' (line 3011)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3011, 8), 'use', use2fortran_call_result_89154)
    # SSA join for if statement (line 3010)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Str to a Name (line 3012):
    
    # Assigning a Str to a Name (line 3012):
    str_89155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3012, 13), 'str', '')
    # Assigning a type to the variable 'common' (line 3012)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3012, 4), 'common', str_89155)
    
    
    str_89156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3013, 7), 'str', 'common')
    # Getting the type of 'block' (line 3013)
    block_89157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3013, 19), 'block')
    # Applying the binary operator 'in' (line 3013)
    result_contains_89158 = python_operator(stypy.reporting.localization.Localization(__file__, 3013, 7), 'in', str_89156, block_89157)
    
    # Testing the type of an if condition (line 3013)
    if_condition_89159 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3013, 4), result_contains_89158)
    # Assigning a type to the variable 'if_condition_89159' (line 3013)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3013, 4), 'if_condition_89159', if_condition_89159)
    # SSA begins for if statement (line 3013)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 3014):
    
    # Assigning a Call to a Name (line 3014):
    
    # Call to common2fortran(...): (line 3014)
    # Processing the call arguments (line 3014)
    
    # Obtaining the type of the subscript
    str_89161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3014, 38), 'str', 'common')
    # Getting the type of 'block' (line 3014)
    block_89162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3014, 32), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 3014)
    getitem___89163 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3014, 32), block_89162, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3014)
    subscript_call_result_89164 = invoke(stypy.reporting.localization.Localization(__file__, 3014, 32), getitem___89163, str_89161)
    
    # Getting the type of 'tab' (line 3014)
    tab_89165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3014, 49), 'tab', False)
    # Getting the type of 'tabchar' (line 3014)
    tabchar_89166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3014, 55), 'tabchar', False)
    # Applying the binary operator '+' (line 3014)
    result_add_89167 = python_operator(stypy.reporting.localization.Localization(__file__, 3014, 49), '+', tab_89165, tabchar_89166)
    
    # Processing the call keyword arguments (line 3014)
    kwargs_89168 = {}
    # Getting the type of 'common2fortran' (line 3014)
    common2fortran_89160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3014, 17), 'common2fortran', False)
    # Calling common2fortran(args, kwargs) (line 3014)
    common2fortran_call_result_89169 = invoke(stypy.reporting.localization.Localization(__file__, 3014, 17), common2fortran_89160, *[subscript_call_result_89164, result_add_89167], **kwargs_89168)
    
    # Assigning a type to the variable 'common' (line 3014)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3014, 8), 'common', common2fortran_call_result_89169)
    # SSA join for if statement (line 3013)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'name' (line 3015)
    name_89170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3015, 7), 'name')
    str_89171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3015, 15), 'str', 'unknown_interface')
    # Applying the binary operator '==' (line 3015)
    result_eq_89172 = python_operator(stypy.reporting.localization.Localization(__file__, 3015, 7), '==', name_89170, str_89171)
    
    # Testing the type of an if condition (line 3015)
    if_condition_89173 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3015, 4), result_eq_89172)
    # Assigning a type to the variable 'if_condition_89173' (line 3015)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3015, 4), 'if_condition_89173', if_condition_89173)
    # SSA begins for if statement (line 3015)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 3016):
    
    # Assigning a Str to a Name (line 3016):
    str_89174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3016, 15), 'str', '')
    # Assigning a type to the variable 'name' (line 3016)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3016, 8), 'name', str_89174)
    # SSA join for if statement (line 3015)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Str to a Name (line 3017):
    
    # Assigning a Str to a Name (line 3017):
    str_89175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3017, 13), 'str', '')
    # Assigning a type to the variable 'result' (line 3017)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3017, 4), 'result', str_89175)
    
    
    str_89176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3018, 7), 'str', 'result')
    # Getting the type of 'block' (line 3018)
    block_89177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3018, 19), 'block')
    # Applying the binary operator 'in' (line 3018)
    result_contains_89178 = python_operator(stypy.reporting.localization.Localization(__file__, 3018, 7), 'in', str_89176, block_89177)
    
    # Testing the type of an if condition (line 3018)
    if_condition_89179 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3018, 4), result_contains_89178)
    # Assigning a type to the variable 'if_condition_89179' (line 3018)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3018, 4), 'if_condition_89179', if_condition_89179)
    # SSA begins for if statement (line 3018)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3019):
    
    # Assigning a BinOp to a Name (line 3019):
    str_89180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3019, 17), 'str', ' result (%s)')
    
    # Obtaining the type of the subscript
    str_89181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3019, 40), 'str', 'result')
    # Getting the type of 'block' (line 3019)
    block_89182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3019, 34), 'block')
    # Obtaining the member '__getitem__' of a type (line 3019)
    getitem___89183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3019, 34), block_89182, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3019)
    subscript_call_result_89184 = invoke(stypy.reporting.localization.Localization(__file__, 3019, 34), getitem___89183, str_89181)
    
    # Applying the binary operator '%' (line 3019)
    result_mod_89185 = python_operator(stypy.reporting.localization.Localization(__file__, 3019, 17), '%', str_89180, subscript_call_result_89184)
    
    # Assigning a type to the variable 'result' (line 3019)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3019, 8), 'result', result_mod_89185)
    
    
    
    # Obtaining the type of the subscript
    str_89186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3020, 17), 'str', 'result')
    # Getting the type of 'block' (line 3020)
    block_89187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3020, 11), 'block')
    # Obtaining the member '__getitem__' of a type (line 3020)
    getitem___89188 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3020, 11), block_89187, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3020)
    subscript_call_result_89189 = invoke(stypy.reporting.localization.Localization(__file__, 3020, 11), getitem___89188, str_89186)
    
    # Getting the type of 'argsl' (line 3020)
    argsl_89190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3020, 34), 'argsl')
    # Applying the binary operator 'notin' (line 3020)
    result_contains_89191 = python_operator(stypy.reporting.localization.Localization(__file__, 3020, 11), 'notin', subscript_call_result_89189, argsl_89190)
    
    # Testing the type of an if condition (line 3020)
    if_condition_89192 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3020, 8), result_contains_89191)
    # Assigning a type to the variable 'if_condition_89192' (line 3020)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3020, 8), 'if_condition_89192', if_condition_89192)
    # SSA begins for if statement (line 3020)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 3021)
    # Processing the call arguments (line 3021)
    
    # Obtaining the type of the subscript
    str_89195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3021, 31), 'str', 'result')
    # Getting the type of 'block' (line 3021)
    block_89196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3021, 25), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 3021)
    getitem___89197 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3021, 25), block_89196, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3021)
    subscript_call_result_89198 = invoke(stypy.reporting.localization.Localization(__file__, 3021, 25), getitem___89197, str_89195)
    
    # Processing the call keyword arguments (line 3021)
    kwargs_89199 = {}
    # Getting the type of 'argsl' (line 3021)
    argsl_89193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3021, 12), 'argsl', False)
    # Obtaining the member 'append' of a type (line 3021)
    append_89194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3021, 12), argsl_89193, 'append')
    # Calling append(args, kwargs) (line 3021)
    append_call_result_89200 = invoke(stypy.reporting.localization.Localization(__file__, 3021, 12), append_89194, *[subscript_call_result_89198], **kwargs_89199)
    
    # SSA join for if statement (line 3020)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3018)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 3022):
    
    # Assigning a Call to a Name (line 3022):
    
    # Call to crack2fortrangen(...): (line 3022)
    # Processing the call arguments (line 3022)
    
    # Obtaining the type of the subscript
    str_89202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3022, 34), 'str', 'body')
    # Getting the type of 'block' (line 3022)
    block_89203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3022, 28), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 3022)
    getitem___89204 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3022, 28), block_89203, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3022)
    subscript_call_result_89205 = invoke(stypy.reporting.localization.Localization(__file__, 3022, 28), getitem___89204, str_89202)
    
    # Getting the type of 'tab' (line 3022)
    tab_89206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3022, 43), 'tab', False)
    # Getting the type of 'tabchar' (line 3022)
    tabchar_89207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3022, 49), 'tabchar', False)
    # Applying the binary operator '+' (line 3022)
    result_add_89208 = python_operator(stypy.reporting.localization.Localization(__file__, 3022, 43), '+', tab_89206, tabchar_89207)
    
    # Processing the call keyword arguments (line 3022)
    kwargs_89209 = {}
    # Getting the type of 'crack2fortrangen' (line 3022)
    crack2fortrangen_89201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3022, 11), 'crack2fortrangen', False)
    # Calling crack2fortrangen(args, kwargs) (line 3022)
    crack2fortrangen_call_result_89210 = invoke(stypy.reporting.localization.Localization(__file__, 3022, 11), crack2fortrangen_89201, *[subscript_call_result_89205, result_add_89208], **kwargs_89209)
    
    # Assigning a type to the variable 'body' (line 3022)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3022, 4), 'body', crack2fortrangen_call_result_89210)
    
    # Assigning a Call to a Name (line 3023):
    
    # Assigning a Call to a Name (line 3023):
    
    # Call to vars2fortran(...): (line 3023)
    # Processing the call arguments (line 3023)
    # Getting the type of 'block' (line 3024)
    block_89212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3024, 8), 'block', False)
    
    # Obtaining the type of the subscript
    str_89213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3024, 21), 'str', 'vars')
    # Getting the type of 'block' (line 3024)
    block_89214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3024, 15), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 3024)
    getitem___89215 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3024, 15), block_89214, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3024)
    subscript_call_result_89216 = invoke(stypy.reporting.localization.Localization(__file__, 3024, 15), getitem___89215, str_89213)
    
    # Getting the type of 'argsl' (line 3024)
    argsl_89217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3024, 30), 'argsl', False)
    # Getting the type of 'tab' (line 3024)
    tab_89218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3024, 37), 'tab', False)
    # Getting the type of 'tabchar' (line 3024)
    tabchar_89219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3024, 43), 'tabchar', False)
    # Applying the binary operator '+' (line 3024)
    result_add_89220 = python_operator(stypy.reporting.localization.Localization(__file__, 3024, 37), '+', tab_89218, tabchar_89219)
    
    # Processing the call keyword arguments (line 3023)
    # Getting the type of 'as_interface' (line 3024)
    as_interface_89221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3024, 65), 'as_interface', False)
    keyword_89222 = as_interface_89221
    kwargs_89223 = {'as_interface': keyword_89222}
    # Getting the type of 'vars2fortran' (line 3023)
    vars2fortran_89211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3023, 11), 'vars2fortran', False)
    # Calling vars2fortran(args, kwargs) (line 3023)
    vars2fortran_call_result_89224 = invoke(stypy.reporting.localization.Localization(__file__, 3023, 11), vars2fortran_89211, *[block_89212, subscript_call_result_89216, argsl_89217, result_add_89220], **kwargs_89223)
    
    # Assigning a type to the variable 'vars' (line 3023)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3023, 4), 'vars', vars2fortran_call_result_89224)
    
    # Assigning a Str to a Name (line 3025):
    
    # Assigning a Str to a Name (line 3025):
    str_89225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3025, 11), 'str', '')
    # Assigning a type to the variable 'mess' (line 3025)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3025, 4), 'mess', str_89225)
    
    
    # Evaluating a boolean operation
    
    str_89226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3026, 7), 'str', 'from')
    # Getting the type of 'block' (line 3026)
    block_89227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3026, 17), 'block')
    # Applying the binary operator 'in' (line 3026)
    result_contains_89228 = python_operator(stypy.reporting.localization.Localization(__file__, 3026, 7), 'in', str_89226, block_89227)
    
    
    # Getting the type of 'as_interface' (line 3026)
    as_interface_89229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3026, 31), 'as_interface')
    # Applying the 'not' unary operator (line 3026)
    result_not__89230 = python_operator(stypy.reporting.localization.Localization(__file__, 3026, 27), 'not', as_interface_89229)
    
    # Applying the binary operator 'and' (line 3026)
    result_and_keyword_89231 = python_operator(stypy.reporting.localization.Localization(__file__, 3026, 7), 'and', result_contains_89228, result_not__89230)
    
    # Testing the type of an if condition (line 3026)
    if_condition_89232 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3026, 4), result_and_keyword_89231)
    # Assigning a type to the variable 'if_condition_89232' (line 3026)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3026, 4), 'if_condition_89232', if_condition_89232)
    # SSA begins for if statement (line 3026)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3027):
    
    # Assigning a BinOp to a Name (line 3027):
    str_89233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3027, 15), 'str', '! in %s')
    
    # Obtaining the type of the subscript
    str_89234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3027, 33), 'str', 'from')
    # Getting the type of 'block' (line 3027)
    block_89235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3027, 27), 'block')
    # Obtaining the member '__getitem__' of a type (line 3027)
    getitem___89236 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3027, 27), block_89235, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3027)
    subscript_call_result_89237 = invoke(stypy.reporting.localization.Localization(__file__, 3027, 27), getitem___89236, str_89234)
    
    # Applying the binary operator '%' (line 3027)
    result_mod_89238 = python_operator(stypy.reporting.localization.Localization(__file__, 3027, 15), '%', str_89233, subscript_call_result_89237)
    
    # Assigning a type to the variable 'mess' (line 3027)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3027, 8), 'mess', result_mod_89238)
    # SSA join for if statement (line 3026)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_89239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3028, 7), 'str', 'entry')
    # Getting the type of 'block' (line 3028)
    block_89240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3028, 18), 'block')
    # Applying the binary operator 'in' (line 3028)
    result_contains_89241 = python_operator(stypy.reporting.localization.Localization(__file__, 3028, 7), 'in', str_89239, block_89240)
    
    # Testing the type of an if condition (line 3028)
    if_condition_89242 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3028, 4), result_contains_89241)
    # Assigning a type to the variable 'if_condition_89242' (line 3028)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3028, 4), 'if_condition_89242', if_condition_89242)
    # SSA begins for if statement (line 3028)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 3029):
    
    # Assigning a Str to a Name (line 3029):
    str_89243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3029, 22), 'str', '')
    # Assigning a type to the variable 'entry_stmts' (line 3029)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3029, 8), 'entry_stmts', str_89243)
    
    
    # Call to list(...): (line 3030)
    # Processing the call arguments (line 3030)
    
    # Call to items(...): (line 3030)
    # Processing the call keyword arguments (line 3030)
    kwargs_89250 = {}
    
    # Obtaining the type of the subscript
    str_89245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3030, 31), 'str', 'entry')
    # Getting the type of 'block' (line 3030)
    block_89246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3030, 25), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 3030)
    getitem___89247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3030, 25), block_89246, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3030)
    subscript_call_result_89248 = invoke(stypy.reporting.localization.Localization(__file__, 3030, 25), getitem___89247, str_89245)
    
    # Obtaining the member 'items' of a type (line 3030)
    items_89249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3030, 25), subscript_call_result_89248, 'items')
    # Calling items(args, kwargs) (line 3030)
    items_call_result_89251 = invoke(stypy.reporting.localization.Localization(__file__, 3030, 25), items_89249, *[], **kwargs_89250)
    
    # Processing the call keyword arguments (line 3030)
    kwargs_89252 = {}
    # Getting the type of 'list' (line 3030)
    list_89244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3030, 20), 'list', False)
    # Calling list(args, kwargs) (line 3030)
    list_call_result_89253 = invoke(stypy.reporting.localization.Localization(__file__, 3030, 20), list_89244, *[items_call_result_89251], **kwargs_89252)
    
    # Testing the type of a for loop iterable (line 3030)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 3030, 8), list_call_result_89253)
    # Getting the type of the for loop variable (line 3030)
    for_loop_var_89254 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 3030, 8), list_call_result_89253)
    # Assigning a type to the variable 'k' (line 3030)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3030, 8), 'k', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3030, 8), for_loop_var_89254))
    # Assigning a type to the variable 'i' (line 3030)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3030, 8), 'i', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3030, 8), for_loop_var_89254))
    # SSA begins for a for statement (line 3030)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a BinOp to a Name (line 3031):
    
    # Assigning a BinOp to a Name (line 3031):
    str_89255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3031, 26), 'str', '%s%sentry %s(%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3032)
    tuple_89256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3032, 29), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3032)
    # Adding element type (line 3032)
    # Getting the type of 'entry_stmts' (line 3032)
    entry_stmts_89257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3032, 29), 'entry_stmts')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3032, 29), tuple_89256, entry_stmts_89257)
    # Adding element type (line 3032)
    # Getting the type of 'tab' (line 3032)
    tab_89258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3032, 42), 'tab')
    # Getting the type of 'tabchar' (line 3032)
    tabchar_89259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3032, 48), 'tabchar')
    # Applying the binary operator '+' (line 3032)
    result_add_89260 = python_operator(stypy.reporting.localization.Localization(__file__, 3032, 42), '+', tab_89258, tabchar_89259)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3032, 29), tuple_89256, result_add_89260)
    # Adding element type (line 3032)
    # Getting the type of 'k' (line 3032)
    k_89261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3032, 57), 'k')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3032, 29), tuple_89256, k_89261)
    # Adding element type (line 3032)
    
    # Call to join(...): (line 3032)
    # Processing the call arguments (line 3032)
    # Getting the type of 'i' (line 3032)
    i_89264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3032, 69), 'i', False)
    # Processing the call keyword arguments (line 3032)
    kwargs_89265 = {}
    str_89262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3032, 60), 'str', ',')
    # Obtaining the member 'join' of a type (line 3032)
    join_89263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3032, 60), str_89262, 'join')
    # Calling join(args, kwargs) (line 3032)
    join_call_result_89266 = invoke(stypy.reporting.localization.Localization(__file__, 3032, 60), join_89263, *[i_89264], **kwargs_89265)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3032, 29), tuple_89256, join_call_result_89266)
    
    # Applying the binary operator '%' (line 3031)
    result_mod_89267 = python_operator(stypy.reporting.localization.Localization(__file__, 3031, 26), '%', str_89255, tuple_89256)
    
    # Assigning a type to the variable 'entry_stmts' (line 3031)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3031, 12), 'entry_stmts', result_mod_89267)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 3033):
    
    # Assigning a BinOp to a Name (line 3033):
    # Getting the type of 'body' (line 3033)
    body_89268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3033, 15), 'body')
    # Getting the type of 'entry_stmts' (line 3033)
    entry_stmts_89269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3033, 22), 'entry_stmts')
    # Applying the binary operator '+' (line 3033)
    result_add_89270 = python_operator(stypy.reporting.localization.Localization(__file__, 3033, 15), '+', body_89268, entry_stmts_89269)
    
    # Assigning a type to the variable 'body' (line 3033)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3033, 8), 'body', result_add_89270)
    # SSA join for if statement (line 3028)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'blocktype' (line 3034)
    blocktype_89271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3034, 7), 'blocktype')
    str_89272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3034, 20), 'str', 'block data')
    # Applying the binary operator '==' (line 3034)
    result_eq_89273 = python_operator(stypy.reporting.localization.Localization(__file__, 3034, 7), '==', blocktype_89271, str_89272)
    
    
    # Getting the type of 'name' (line 3034)
    name_89274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3034, 37), 'name')
    str_89275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3034, 45), 'str', '_BLOCK_DATA_')
    # Applying the binary operator '==' (line 3034)
    result_eq_89276 = python_operator(stypy.reporting.localization.Localization(__file__, 3034, 37), '==', name_89274, str_89275)
    
    # Applying the binary operator 'and' (line 3034)
    result_and_keyword_89277 = python_operator(stypy.reporting.localization.Localization(__file__, 3034, 7), 'and', result_eq_89273, result_eq_89276)
    
    # Testing the type of an if condition (line 3034)
    if_condition_89278 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3034, 4), result_and_keyword_89277)
    # Assigning a type to the variable 'if_condition_89278' (line 3034)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3034, 4), 'if_condition_89278', if_condition_89278)
    # SSA begins for if statement (line 3034)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 3035):
    
    # Assigning a Str to a Name (line 3035):
    str_89279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3035, 15), 'str', '')
    # Assigning a type to the variable 'name' (line 3035)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3035, 8), 'name', str_89279)
    # SSA join for if statement (line 3034)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 3036):
    
    # Assigning a BinOp to a Name (line 3036):
    str_89280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3036, 10), 'str', '%s%s%s %s%s%s %s%s%s%s%s%s%send %s %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3037)
    tuple_89281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3037, 8), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3037)
    # Adding element type (line 3037)
    # Getting the type of 'tab' (line 3037)
    tab_89282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 8), 'tab')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3037, 8), tuple_89281, tab_89282)
    # Adding element type (line 3037)
    # Getting the type of 'prefix' (line 3037)
    prefix_89283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 13), 'prefix')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3037, 8), tuple_89281, prefix_89283)
    # Adding element type (line 3037)
    # Getting the type of 'blocktype' (line 3037)
    blocktype_89284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 21), 'blocktype')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3037, 8), tuple_89281, blocktype_89284)
    # Adding element type (line 3037)
    # Getting the type of 'name' (line 3037)
    name_89285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 32), 'name')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3037, 8), tuple_89281, name_89285)
    # Adding element type (line 3037)
    # Getting the type of 'args' (line 3037)
    args_89286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 38), 'args')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3037, 8), tuple_89281, args_89286)
    # Adding element type (line 3037)
    # Getting the type of 'result' (line 3037)
    result_89287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 44), 'result')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3037, 8), tuple_89281, result_89287)
    # Adding element type (line 3037)
    # Getting the type of 'mess' (line 3037)
    mess_89288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 52), 'mess')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3037, 8), tuple_89281, mess_89288)
    # Adding element type (line 3037)
    # Getting the type of 'f2pyenhancements' (line 3037)
    f2pyenhancements_89289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 58), 'f2pyenhancements')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3037, 8), tuple_89281, f2pyenhancements_89289)
    # Adding element type (line 3037)
    # Getting the type of 'use' (line 3037)
    use_89290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 76), 'use')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3037, 8), tuple_89281, use_89290)
    # Adding element type (line 3037)
    # Getting the type of 'vars' (line 3037)
    vars_89291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 81), 'vars')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3037, 8), tuple_89281, vars_89291)
    # Adding element type (line 3037)
    # Getting the type of 'common' (line 3037)
    common_89292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 87), 'common')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3037, 8), tuple_89281, common_89292)
    # Adding element type (line 3037)
    # Getting the type of 'body' (line 3037)
    body_89293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 95), 'body')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3037, 8), tuple_89281, body_89293)
    # Adding element type (line 3037)
    # Getting the type of 'tab' (line 3037)
    tab_89294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 101), 'tab')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3037, 8), tuple_89281, tab_89294)
    # Adding element type (line 3037)
    # Getting the type of 'blocktype' (line 3037)
    blocktype_89295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 106), 'blocktype')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3037, 8), tuple_89281, blocktype_89295)
    # Adding element type (line 3037)
    # Getting the type of 'name' (line 3037)
    name_89296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 117), 'name')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3037, 8), tuple_89281, name_89296)
    
    # Applying the binary operator '%' (line 3036)
    result_mod_89297 = python_operator(stypy.reporting.localization.Localization(__file__, 3036, 10), '%', str_89280, tuple_89281)
    
    # Assigning a type to the variable 'ret' (line 3036)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3036, 4), 'ret', result_mod_89297)
    # Getting the type of 'ret' (line 3038)
    ret_89298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3038, 11), 'ret')
    # Assigning a type to the variable 'stypy_return_type' (line 3038)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3038, 4), 'stypy_return_type', ret_89298)
    
    # ################# End of 'crack2fortrangen(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'crack2fortrangen' in the type store
    # Getting the type of 'stypy_return_type' (line 2966)
    stypy_return_type_89299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2966, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_89299)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'crack2fortrangen'
    return stypy_return_type_89299

# Assigning a type to the variable 'crack2fortrangen' (line 2966)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2966, 0), 'crack2fortrangen', crack2fortrangen)

@norecursion
def common2fortran(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    str_89300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3041, 31), 'str', '')
    defaults = [str_89300]
    # Create a new context for function 'common2fortran'
    module_type_store = module_type_store.open_function_context('common2fortran', 3041, 0, False)
    
    # Passed parameters checking function
    common2fortran.stypy_localization = localization
    common2fortran.stypy_type_of_self = None
    common2fortran.stypy_type_store = module_type_store
    common2fortran.stypy_function_name = 'common2fortran'
    common2fortran.stypy_param_names_list = ['common', 'tab']
    common2fortran.stypy_varargs_param_name = None
    common2fortran.stypy_kwargs_param_name = None
    common2fortran.stypy_call_defaults = defaults
    common2fortran.stypy_call_varargs = varargs
    common2fortran.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'common2fortran', ['common', 'tab'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'common2fortran', localization, ['common', 'tab'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'common2fortran(...)' code ##################

    
    # Assigning a Str to a Name (line 3042):
    
    # Assigning a Str to a Name (line 3042):
    str_89301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3042, 10), 'str', '')
    # Assigning a type to the variable 'ret' (line 3042)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3042, 4), 'ret', str_89301)
    
    
    # Call to list(...): (line 3043)
    # Processing the call arguments (line 3043)
    
    # Call to keys(...): (line 3043)
    # Processing the call keyword arguments (line 3043)
    kwargs_89305 = {}
    # Getting the type of 'common' (line 3043)
    common_89303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3043, 18), 'common', False)
    # Obtaining the member 'keys' of a type (line 3043)
    keys_89304 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3043, 18), common_89303, 'keys')
    # Calling keys(args, kwargs) (line 3043)
    keys_call_result_89306 = invoke(stypy.reporting.localization.Localization(__file__, 3043, 18), keys_89304, *[], **kwargs_89305)
    
    # Processing the call keyword arguments (line 3043)
    kwargs_89307 = {}
    # Getting the type of 'list' (line 3043)
    list_89302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3043, 13), 'list', False)
    # Calling list(args, kwargs) (line 3043)
    list_call_result_89308 = invoke(stypy.reporting.localization.Localization(__file__, 3043, 13), list_89302, *[keys_call_result_89306], **kwargs_89307)
    
    # Testing the type of a for loop iterable (line 3043)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 3043, 4), list_call_result_89308)
    # Getting the type of the for loop variable (line 3043)
    for_loop_var_89309 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 3043, 4), list_call_result_89308)
    # Assigning a type to the variable 'k' (line 3043)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3043, 4), 'k', for_loop_var_89309)
    # SSA begins for a for statement (line 3043)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'k' (line 3044)
    k_89310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3044, 11), 'k')
    str_89311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3044, 16), 'str', '_BLNK_')
    # Applying the binary operator '==' (line 3044)
    result_eq_89312 = python_operator(stypy.reporting.localization.Localization(__file__, 3044, 11), '==', k_89310, str_89311)
    
    # Testing the type of an if condition (line 3044)
    if_condition_89313 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3044, 8), result_eq_89312)
    # Assigning a type to the variable 'if_condition_89313' (line 3044)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3044, 8), 'if_condition_89313', if_condition_89313)
    # SSA begins for if statement (line 3044)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3045):
    
    # Assigning a BinOp to a Name (line 3045):
    str_89314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3045, 18), 'str', '%s%scommon %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3045)
    tuple_89315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3045, 37), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3045)
    # Adding element type (line 3045)
    # Getting the type of 'ret' (line 3045)
    ret_89316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3045, 37), 'ret')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3045, 37), tuple_89315, ret_89316)
    # Adding element type (line 3045)
    # Getting the type of 'tab' (line 3045)
    tab_89317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3045, 42), 'tab')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3045, 37), tuple_89315, tab_89317)
    # Adding element type (line 3045)
    
    # Call to join(...): (line 3045)
    # Processing the call arguments (line 3045)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 3045)
    k_89320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3045, 63), 'k', False)
    # Getting the type of 'common' (line 3045)
    common_89321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3045, 56), 'common', False)
    # Obtaining the member '__getitem__' of a type (line 3045)
    getitem___89322 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3045, 56), common_89321, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3045)
    subscript_call_result_89323 = invoke(stypy.reporting.localization.Localization(__file__, 3045, 56), getitem___89322, k_89320)
    
    # Processing the call keyword arguments (line 3045)
    kwargs_89324 = {}
    str_89318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3045, 47), 'str', ',')
    # Obtaining the member 'join' of a type (line 3045)
    join_89319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3045, 47), str_89318, 'join')
    # Calling join(args, kwargs) (line 3045)
    join_call_result_89325 = invoke(stypy.reporting.localization.Localization(__file__, 3045, 47), join_89319, *[subscript_call_result_89323], **kwargs_89324)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3045, 37), tuple_89315, join_call_result_89325)
    
    # Applying the binary operator '%' (line 3045)
    result_mod_89326 = python_operator(stypy.reporting.localization.Localization(__file__, 3045, 18), '%', str_89314, tuple_89315)
    
    # Assigning a type to the variable 'ret' (line 3045)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3045, 12), 'ret', result_mod_89326)
    # SSA branch for the else part of an if statement (line 3044)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 3047):
    
    # Assigning a BinOp to a Name (line 3047):
    str_89327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3047, 18), 'str', '%s%scommon /%s/ %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3047)
    tuple_89328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3047, 42), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3047)
    # Adding element type (line 3047)
    # Getting the type of 'ret' (line 3047)
    ret_89329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3047, 42), 'ret')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3047, 42), tuple_89328, ret_89329)
    # Adding element type (line 3047)
    # Getting the type of 'tab' (line 3047)
    tab_89330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3047, 47), 'tab')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3047, 42), tuple_89328, tab_89330)
    # Adding element type (line 3047)
    # Getting the type of 'k' (line 3047)
    k_89331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3047, 52), 'k')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3047, 42), tuple_89328, k_89331)
    # Adding element type (line 3047)
    
    # Call to join(...): (line 3047)
    # Processing the call arguments (line 3047)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 3047)
    k_89334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3047, 71), 'k', False)
    # Getting the type of 'common' (line 3047)
    common_89335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3047, 64), 'common', False)
    # Obtaining the member '__getitem__' of a type (line 3047)
    getitem___89336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3047, 64), common_89335, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3047)
    subscript_call_result_89337 = invoke(stypy.reporting.localization.Localization(__file__, 3047, 64), getitem___89336, k_89334)
    
    # Processing the call keyword arguments (line 3047)
    kwargs_89338 = {}
    str_89332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3047, 55), 'str', ',')
    # Obtaining the member 'join' of a type (line 3047)
    join_89333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3047, 55), str_89332, 'join')
    # Calling join(args, kwargs) (line 3047)
    join_call_result_89339 = invoke(stypy.reporting.localization.Localization(__file__, 3047, 55), join_89333, *[subscript_call_result_89337], **kwargs_89338)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3047, 42), tuple_89328, join_call_result_89339)
    
    # Applying the binary operator '%' (line 3047)
    result_mod_89340 = python_operator(stypy.reporting.localization.Localization(__file__, 3047, 18), '%', str_89327, tuple_89328)
    
    # Assigning a type to the variable 'ret' (line 3047)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3047, 12), 'ret', result_mod_89340)
    # SSA join for if statement (line 3044)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'ret' (line 3048)
    ret_89341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3048, 11), 'ret')
    # Assigning a type to the variable 'stypy_return_type' (line 3048)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3048, 4), 'stypy_return_type', ret_89341)
    
    # ################# End of 'common2fortran(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'common2fortran' in the type store
    # Getting the type of 'stypy_return_type' (line 3041)
    stypy_return_type_89342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3041, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_89342)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'common2fortran'
    return stypy_return_type_89342

# Assigning a type to the variable 'common2fortran' (line 3041)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3041, 0), 'common2fortran', common2fortran)

@norecursion
def use2fortran(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    str_89343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3051, 25), 'str', '')
    defaults = [str_89343]
    # Create a new context for function 'use2fortran'
    module_type_store = module_type_store.open_function_context('use2fortran', 3051, 0, False)
    
    # Passed parameters checking function
    use2fortran.stypy_localization = localization
    use2fortran.stypy_type_of_self = None
    use2fortran.stypy_type_store = module_type_store
    use2fortran.stypy_function_name = 'use2fortran'
    use2fortran.stypy_param_names_list = ['use', 'tab']
    use2fortran.stypy_varargs_param_name = None
    use2fortran.stypy_kwargs_param_name = None
    use2fortran.stypy_call_defaults = defaults
    use2fortran.stypy_call_varargs = varargs
    use2fortran.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'use2fortran', ['use', 'tab'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'use2fortran', localization, ['use', 'tab'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'use2fortran(...)' code ##################

    
    # Assigning a Str to a Name (line 3052):
    
    # Assigning a Str to a Name (line 3052):
    str_89344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3052, 10), 'str', '')
    # Assigning a type to the variable 'ret' (line 3052)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3052, 4), 'ret', str_89344)
    
    
    # Call to list(...): (line 3053)
    # Processing the call arguments (line 3053)
    
    # Call to keys(...): (line 3053)
    # Processing the call keyword arguments (line 3053)
    kwargs_89348 = {}
    # Getting the type of 'use' (line 3053)
    use_89346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3053, 18), 'use', False)
    # Obtaining the member 'keys' of a type (line 3053)
    keys_89347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3053, 18), use_89346, 'keys')
    # Calling keys(args, kwargs) (line 3053)
    keys_call_result_89349 = invoke(stypy.reporting.localization.Localization(__file__, 3053, 18), keys_89347, *[], **kwargs_89348)
    
    # Processing the call keyword arguments (line 3053)
    kwargs_89350 = {}
    # Getting the type of 'list' (line 3053)
    list_89345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3053, 13), 'list', False)
    # Calling list(args, kwargs) (line 3053)
    list_call_result_89351 = invoke(stypy.reporting.localization.Localization(__file__, 3053, 13), list_89345, *[keys_call_result_89349], **kwargs_89350)
    
    # Testing the type of a for loop iterable (line 3053)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 3053, 4), list_call_result_89351)
    # Getting the type of the for loop variable (line 3053)
    for_loop_var_89352 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 3053, 4), list_call_result_89351)
    # Assigning a type to the variable 'm' (line 3053)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3053, 4), 'm', for_loop_var_89352)
    # SSA begins for a for statement (line 3053)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a BinOp to a Name (line 3054):
    
    # Assigning a BinOp to a Name (line 3054):
    str_89353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3054, 14), 'str', '%s%suse %s,')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3054)
    tuple_89354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3054, 31), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3054)
    # Adding element type (line 3054)
    # Getting the type of 'ret' (line 3054)
    ret_89355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3054, 31), 'ret')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3054, 31), tuple_89354, ret_89355)
    # Adding element type (line 3054)
    # Getting the type of 'tab' (line 3054)
    tab_89356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3054, 36), 'tab')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3054, 31), tuple_89354, tab_89356)
    # Adding element type (line 3054)
    # Getting the type of 'm' (line 3054)
    m_89357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3054, 41), 'm')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3054, 31), tuple_89354, m_89357)
    
    # Applying the binary operator '%' (line 3054)
    result_mod_89358 = python_operator(stypy.reporting.localization.Localization(__file__, 3054, 14), '%', str_89353, tuple_89354)
    
    # Assigning a type to the variable 'ret' (line 3054)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3054, 8), 'ret', result_mod_89358)
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'm' (line 3055)
    m_89359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3055, 15), 'm')
    # Getting the type of 'use' (line 3055)
    use_89360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3055, 11), 'use')
    # Obtaining the member '__getitem__' of a type (line 3055)
    getitem___89361 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3055, 11), use_89360, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3055)
    subscript_call_result_89362 = invoke(stypy.reporting.localization.Localization(__file__, 3055, 11), getitem___89361, m_89359)
    
    
    # Obtaining an instance of the builtin type 'dict' (line 3055)
    dict_89363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3055, 21), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 3055)
    
    # Applying the binary operator '==' (line 3055)
    result_eq_89364 = python_operator(stypy.reporting.localization.Localization(__file__, 3055, 11), '==', subscript_call_result_89362, dict_89363)
    
    # Testing the type of an if condition (line 3055)
    if_condition_89365 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3055, 8), result_eq_89364)
    # Assigning a type to the variable 'if_condition_89365' (line 3055)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3055, 8), 'if_condition_89365', if_condition_89365)
    # SSA begins for if statement (line 3055)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    # Getting the type of 'ret' (line 3056)
    ret_89366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3056, 15), 'ret')
    
    
    # Obtaining the type of the subscript
    int_89367 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3056, 27), 'int')
    # Getting the type of 'ret' (line 3056)
    ret_89368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3056, 23), 'ret')
    # Obtaining the member '__getitem__' of a type (line 3056)
    getitem___89369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3056, 23), ret_89368, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3056)
    subscript_call_result_89370 = invoke(stypy.reporting.localization.Localization(__file__, 3056, 23), getitem___89369, int_89367)
    
    str_89371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3056, 34), 'str', ',')
    # Applying the binary operator '==' (line 3056)
    result_eq_89372 = python_operator(stypy.reporting.localization.Localization(__file__, 3056, 23), '==', subscript_call_result_89370, str_89371)
    
    # Applying the binary operator 'and' (line 3056)
    result_and_keyword_89373 = python_operator(stypy.reporting.localization.Localization(__file__, 3056, 15), 'and', ret_89366, result_eq_89372)
    
    # Testing the type of an if condition (line 3056)
    if_condition_89374 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3056, 12), result_and_keyword_89373)
    # Assigning a type to the variable 'if_condition_89374' (line 3056)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3056, 12), 'if_condition_89374', if_condition_89374)
    # SSA begins for if statement (line 3056)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 3057):
    
    # Assigning a Subscript to a Name (line 3057):
    
    # Obtaining the type of the subscript
    int_89375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3057, 27), 'int')
    slice_89376 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 3057, 22), None, int_89375, None)
    # Getting the type of 'ret' (line 3057)
    ret_89377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3057, 22), 'ret')
    # Obtaining the member '__getitem__' of a type (line 3057)
    getitem___89378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3057, 22), ret_89377, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3057)
    subscript_call_result_89379 = invoke(stypy.reporting.localization.Localization(__file__, 3057, 22), getitem___89378, slice_89376)
    
    # Assigning a type to the variable 'ret' (line 3057)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3057, 16), 'ret', subscript_call_result_89379)
    # SSA join for if statement (line 3056)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3055)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    str_89380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3059, 11), 'str', 'only')
    
    # Obtaining the type of the subscript
    # Getting the type of 'm' (line 3059)
    m_89381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3059, 25), 'm')
    # Getting the type of 'use' (line 3059)
    use_89382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3059, 21), 'use')
    # Obtaining the member '__getitem__' of a type (line 3059)
    getitem___89383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3059, 21), use_89382, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3059)
    subscript_call_result_89384 = invoke(stypy.reporting.localization.Localization(__file__, 3059, 21), getitem___89383, m_89381)
    
    # Applying the binary operator 'in' (line 3059)
    result_contains_89385 = python_operator(stypy.reporting.localization.Localization(__file__, 3059, 11), 'in', str_89380, subscript_call_result_89384)
    
    
    # Obtaining the type of the subscript
    str_89386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3059, 39), 'str', 'only')
    
    # Obtaining the type of the subscript
    # Getting the type of 'm' (line 3059)
    m_89387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3059, 36), 'm')
    # Getting the type of 'use' (line 3059)
    use_89388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3059, 32), 'use')
    # Obtaining the member '__getitem__' of a type (line 3059)
    getitem___89389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3059, 32), use_89388, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3059)
    subscript_call_result_89390 = invoke(stypy.reporting.localization.Localization(__file__, 3059, 32), getitem___89389, m_89387)
    
    # Obtaining the member '__getitem__' of a type (line 3059)
    getitem___89391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3059, 32), subscript_call_result_89390, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3059)
    subscript_call_result_89392 = invoke(stypy.reporting.localization.Localization(__file__, 3059, 32), getitem___89391, str_89386)
    
    # Applying the binary operator 'and' (line 3059)
    result_and_keyword_89393 = python_operator(stypy.reporting.localization.Localization(__file__, 3059, 11), 'and', result_contains_89385, subscript_call_result_89392)
    
    # Testing the type of an if condition (line 3059)
    if_condition_89394 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3059, 8), result_and_keyword_89393)
    # Assigning a type to the variable 'if_condition_89394' (line 3059)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3059, 8), 'if_condition_89394', if_condition_89394)
    # SSA begins for if statement (line 3059)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3060):
    
    # Assigning a BinOp to a Name (line 3060):
    str_89395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3060, 18), 'str', '%s only:')
    # Getting the type of 'ret' (line 3060)
    ret_89396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3060, 32), 'ret')
    # Applying the binary operator '%' (line 3060)
    result_mod_89397 = python_operator(stypy.reporting.localization.Localization(__file__, 3060, 18), '%', str_89395, ret_89396)
    
    # Assigning a type to the variable 'ret' (line 3060)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3060, 12), 'ret', result_mod_89397)
    # SSA join for if statement (line 3059)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    str_89398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3061, 11), 'str', 'map')
    
    # Obtaining the type of the subscript
    # Getting the type of 'm' (line 3061)
    m_89399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3061, 24), 'm')
    # Getting the type of 'use' (line 3061)
    use_89400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3061, 20), 'use')
    # Obtaining the member '__getitem__' of a type (line 3061)
    getitem___89401 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3061, 20), use_89400, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3061)
    subscript_call_result_89402 = invoke(stypy.reporting.localization.Localization(__file__, 3061, 20), getitem___89401, m_89399)
    
    # Applying the binary operator 'in' (line 3061)
    result_contains_89403 = python_operator(stypy.reporting.localization.Localization(__file__, 3061, 11), 'in', str_89398, subscript_call_result_89402)
    
    
    # Obtaining the type of the subscript
    str_89404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3061, 38), 'str', 'map')
    
    # Obtaining the type of the subscript
    # Getting the type of 'm' (line 3061)
    m_89405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3061, 35), 'm')
    # Getting the type of 'use' (line 3061)
    use_89406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3061, 31), 'use')
    # Obtaining the member '__getitem__' of a type (line 3061)
    getitem___89407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3061, 31), use_89406, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3061)
    subscript_call_result_89408 = invoke(stypy.reporting.localization.Localization(__file__, 3061, 31), getitem___89407, m_89405)
    
    # Obtaining the member '__getitem__' of a type (line 3061)
    getitem___89409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3061, 31), subscript_call_result_89408, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3061)
    subscript_call_result_89410 = invoke(stypy.reporting.localization.Localization(__file__, 3061, 31), getitem___89409, str_89404)
    
    # Applying the binary operator 'and' (line 3061)
    result_and_keyword_89411 = python_operator(stypy.reporting.localization.Localization(__file__, 3061, 11), 'and', result_contains_89403, subscript_call_result_89410)
    
    # Testing the type of an if condition (line 3061)
    if_condition_89412 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3061, 8), result_and_keyword_89411)
    # Assigning a type to the variable 'if_condition_89412' (line 3061)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3061, 8), 'if_condition_89412', if_condition_89412)
    # SSA begins for if statement (line 3061)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 3062):
    
    # Assigning a Str to a Name (line 3062):
    str_89413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3062, 16), 'str', ' ')
    # Assigning a type to the variable 'c' (line 3062)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3062, 12), 'c', str_89413)
    
    
    # Call to list(...): (line 3063)
    # Processing the call arguments (line 3063)
    
    # Call to keys(...): (line 3063)
    # Processing the call keyword arguments (line 3063)
    kwargs_89423 = {}
    
    # Obtaining the type of the subscript
    str_89415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3063, 33), 'str', 'map')
    
    # Obtaining the type of the subscript
    # Getting the type of 'm' (line 3063)
    m_89416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3063, 30), 'm', False)
    # Getting the type of 'use' (line 3063)
    use_89417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3063, 26), 'use', False)
    # Obtaining the member '__getitem__' of a type (line 3063)
    getitem___89418 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3063, 26), use_89417, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3063)
    subscript_call_result_89419 = invoke(stypy.reporting.localization.Localization(__file__, 3063, 26), getitem___89418, m_89416)
    
    # Obtaining the member '__getitem__' of a type (line 3063)
    getitem___89420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3063, 26), subscript_call_result_89419, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3063)
    subscript_call_result_89421 = invoke(stypy.reporting.localization.Localization(__file__, 3063, 26), getitem___89420, str_89415)
    
    # Obtaining the member 'keys' of a type (line 3063)
    keys_89422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3063, 26), subscript_call_result_89421, 'keys')
    # Calling keys(args, kwargs) (line 3063)
    keys_call_result_89424 = invoke(stypy.reporting.localization.Localization(__file__, 3063, 26), keys_89422, *[], **kwargs_89423)
    
    # Processing the call keyword arguments (line 3063)
    kwargs_89425 = {}
    # Getting the type of 'list' (line 3063)
    list_89414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3063, 21), 'list', False)
    # Calling list(args, kwargs) (line 3063)
    list_call_result_89426 = invoke(stypy.reporting.localization.Localization(__file__, 3063, 21), list_89414, *[keys_call_result_89424], **kwargs_89425)
    
    # Testing the type of a for loop iterable (line 3063)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 3063, 12), list_call_result_89426)
    # Getting the type of the for loop variable (line 3063)
    for_loop_var_89427 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 3063, 12), list_call_result_89426)
    # Assigning a type to the variable 'k' (line 3063)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3063, 12), 'k', for_loop_var_89427)
    # SSA begins for a for statement (line 3063)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'k' (line 3064)
    k_89428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3064, 19), 'k')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 3064)
    k_89429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3064, 38), 'k')
    
    # Obtaining the type of the subscript
    str_89430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3064, 31), 'str', 'map')
    
    # Obtaining the type of the subscript
    # Getting the type of 'm' (line 3064)
    m_89431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3064, 28), 'm')
    # Getting the type of 'use' (line 3064)
    use_89432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3064, 24), 'use')
    # Obtaining the member '__getitem__' of a type (line 3064)
    getitem___89433 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3064, 24), use_89432, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3064)
    subscript_call_result_89434 = invoke(stypy.reporting.localization.Localization(__file__, 3064, 24), getitem___89433, m_89431)
    
    # Obtaining the member '__getitem__' of a type (line 3064)
    getitem___89435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3064, 24), subscript_call_result_89434, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3064)
    subscript_call_result_89436 = invoke(stypy.reporting.localization.Localization(__file__, 3064, 24), getitem___89435, str_89430)
    
    # Obtaining the member '__getitem__' of a type (line 3064)
    getitem___89437 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3064, 24), subscript_call_result_89436, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3064)
    subscript_call_result_89438 = invoke(stypy.reporting.localization.Localization(__file__, 3064, 24), getitem___89437, k_89429)
    
    # Applying the binary operator '==' (line 3064)
    result_eq_89439 = python_operator(stypy.reporting.localization.Localization(__file__, 3064, 19), '==', k_89428, subscript_call_result_89438)
    
    # Testing the type of an if condition (line 3064)
    if_condition_89440 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3064, 16), result_eq_89439)
    # Assigning a type to the variable 'if_condition_89440' (line 3064)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3064, 16), 'if_condition_89440', if_condition_89440)
    # SSA begins for if statement (line 3064)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3065):
    
    # Assigning a BinOp to a Name (line 3065):
    str_89441 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3065, 26), 'str', '%s%s%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3065)
    tuple_89442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3065, 38), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3065)
    # Adding element type (line 3065)
    # Getting the type of 'ret' (line 3065)
    ret_89443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3065, 38), 'ret')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3065, 38), tuple_89442, ret_89443)
    # Adding element type (line 3065)
    # Getting the type of 'c' (line 3065)
    c_89444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3065, 43), 'c')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3065, 38), tuple_89442, c_89444)
    # Adding element type (line 3065)
    # Getting the type of 'k' (line 3065)
    k_89445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3065, 46), 'k')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3065, 38), tuple_89442, k_89445)
    
    # Applying the binary operator '%' (line 3065)
    result_mod_89446 = python_operator(stypy.reporting.localization.Localization(__file__, 3065, 26), '%', str_89441, tuple_89442)
    
    # Assigning a type to the variable 'ret' (line 3065)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3065, 20), 'ret', result_mod_89446)
    
    # Assigning a Str to a Name (line 3066):
    
    # Assigning a Str to a Name (line 3066):
    str_89447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3066, 24), 'str', ',')
    # Assigning a type to the variable 'c' (line 3066)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3066, 20), 'c', str_89447)
    # SSA branch for the else part of an if statement (line 3064)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 3068):
    
    # Assigning a BinOp to a Name (line 3068):
    str_89448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3068, 26), 'str', '%s%s%s=>%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3068)
    tuple_89449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3068, 42), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3068)
    # Adding element type (line 3068)
    # Getting the type of 'ret' (line 3068)
    ret_89450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3068, 42), 'ret')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3068, 42), tuple_89449, ret_89450)
    # Adding element type (line 3068)
    # Getting the type of 'c' (line 3068)
    c_89451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3068, 47), 'c')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3068, 42), tuple_89449, c_89451)
    # Adding element type (line 3068)
    # Getting the type of 'k' (line 3068)
    k_89452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3068, 50), 'k')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3068, 42), tuple_89449, k_89452)
    # Adding element type (line 3068)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 3068)
    k_89453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3068, 67), 'k')
    
    # Obtaining the type of the subscript
    str_89454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3068, 60), 'str', 'map')
    
    # Obtaining the type of the subscript
    # Getting the type of 'm' (line 3068)
    m_89455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3068, 57), 'm')
    # Getting the type of 'use' (line 3068)
    use_89456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3068, 53), 'use')
    # Obtaining the member '__getitem__' of a type (line 3068)
    getitem___89457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3068, 53), use_89456, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3068)
    subscript_call_result_89458 = invoke(stypy.reporting.localization.Localization(__file__, 3068, 53), getitem___89457, m_89455)
    
    # Obtaining the member '__getitem__' of a type (line 3068)
    getitem___89459 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3068, 53), subscript_call_result_89458, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3068)
    subscript_call_result_89460 = invoke(stypy.reporting.localization.Localization(__file__, 3068, 53), getitem___89459, str_89454)
    
    # Obtaining the member '__getitem__' of a type (line 3068)
    getitem___89461 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3068, 53), subscript_call_result_89460, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3068)
    subscript_call_result_89462 = invoke(stypy.reporting.localization.Localization(__file__, 3068, 53), getitem___89461, k_89453)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3068, 42), tuple_89449, subscript_call_result_89462)
    
    # Applying the binary operator '%' (line 3068)
    result_mod_89463 = python_operator(stypy.reporting.localization.Localization(__file__, 3068, 26), '%', str_89448, tuple_89449)
    
    # Assigning a type to the variable 'ret' (line 3068)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3068, 20), 'ret', result_mod_89463)
    
    # Assigning a Str to a Name (line 3069):
    
    # Assigning a Str to a Name (line 3069):
    str_89464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3069, 24), 'str', ',')
    # Assigning a type to the variable 'c' (line 3069)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3069, 20), 'c', str_89464)
    # SSA join for if statement (line 3064)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3061)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    # Getting the type of 'ret' (line 3070)
    ret_89465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3070, 11), 'ret')
    
    
    # Obtaining the type of the subscript
    int_89466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3070, 23), 'int')
    # Getting the type of 'ret' (line 3070)
    ret_89467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3070, 19), 'ret')
    # Obtaining the member '__getitem__' of a type (line 3070)
    getitem___89468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3070, 19), ret_89467, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3070)
    subscript_call_result_89469 = invoke(stypy.reporting.localization.Localization(__file__, 3070, 19), getitem___89468, int_89466)
    
    str_89470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3070, 30), 'str', ',')
    # Applying the binary operator '==' (line 3070)
    result_eq_89471 = python_operator(stypy.reporting.localization.Localization(__file__, 3070, 19), '==', subscript_call_result_89469, str_89470)
    
    # Applying the binary operator 'and' (line 3070)
    result_and_keyword_89472 = python_operator(stypy.reporting.localization.Localization(__file__, 3070, 11), 'and', ret_89465, result_eq_89471)
    
    # Testing the type of an if condition (line 3070)
    if_condition_89473 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3070, 8), result_and_keyword_89472)
    # Assigning a type to the variable 'if_condition_89473' (line 3070)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3070, 8), 'if_condition_89473', if_condition_89473)
    # SSA begins for if statement (line 3070)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 3071):
    
    # Assigning a Subscript to a Name (line 3071):
    
    # Obtaining the type of the subscript
    int_89474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3071, 23), 'int')
    slice_89475 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 3071, 18), None, int_89474, None)
    # Getting the type of 'ret' (line 3071)
    ret_89476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3071, 18), 'ret')
    # Obtaining the member '__getitem__' of a type (line 3071)
    getitem___89477 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3071, 18), ret_89476, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3071)
    subscript_call_result_89478 = invoke(stypy.reporting.localization.Localization(__file__, 3071, 18), getitem___89477, slice_89475)
    
    # Assigning a type to the variable 'ret' (line 3071)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3071, 12), 'ret', subscript_call_result_89478)
    # SSA join for if statement (line 3070)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'ret' (line 3072)
    ret_89479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3072, 11), 'ret')
    # Assigning a type to the variable 'stypy_return_type' (line 3072)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3072, 4), 'stypy_return_type', ret_89479)
    
    # ################# End of 'use2fortran(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'use2fortran' in the type store
    # Getting the type of 'stypy_return_type' (line 3051)
    stypy_return_type_89480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3051, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_89480)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'use2fortran'
    return stypy_return_type_89480

# Assigning a type to the variable 'use2fortran' (line 3051)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3051, 0), 'use2fortran', use2fortran)

@norecursion
def true_intent_list(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'true_intent_list'
    module_type_store = module_type_store.open_function_context('true_intent_list', 3075, 0, False)
    
    # Passed parameters checking function
    true_intent_list.stypy_localization = localization
    true_intent_list.stypy_type_of_self = None
    true_intent_list.stypy_type_store = module_type_store
    true_intent_list.stypy_function_name = 'true_intent_list'
    true_intent_list.stypy_param_names_list = ['var']
    true_intent_list.stypy_varargs_param_name = None
    true_intent_list.stypy_kwargs_param_name = None
    true_intent_list.stypy_call_defaults = defaults
    true_intent_list.stypy_call_varargs = varargs
    true_intent_list.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'true_intent_list', ['var'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'true_intent_list', localization, ['var'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'true_intent_list(...)' code ##################

    
    # Assigning a Subscript to a Name (line 3076):
    
    # Assigning a Subscript to a Name (line 3076):
    
    # Obtaining the type of the subscript
    str_89481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3076, 14), 'str', 'intent')
    # Getting the type of 'var' (line 3076)
    var_89482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3076, 10), 'var')
    # Obtaining the member '__getitem__' of a type (line 3076)
    getitem___89483 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3076, 10), var_89482, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3076)
    subscript_call_result_89484 = invoke(stypy.reporting.localization.Localization(__file__, 3076, 10), getitem___89483, str_89481)
    
    # Assigning a type to the variable 'lst' (line 3076)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3076, 4), 'lst', subscript_call_result_89484)
    
    # Assigning a List to a Name (line 3077):
    
    # Assigning a List to a Name (line 3077):
    
    # Obtaining an instance of the builtin type 'list' (line 3077)
    list_89485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3077, 10), 'list')
    # Adding type elements to the builtin type 'list' instance (line 3077)
    
    # Assigning a type to the variable 'ret' (line 3077)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3077, 4), 'ret', list_89485)
    
    # Getting the type of 'lst' (line 3078)
    lst_89486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3078, 18), 'lst')
    # Testing the type of a for loop iterable (line 3078)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 3078, 4), lst_89486)
    # Getting the type of the for loop variable (line 3078)
    for_loop_var_89487 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 3078, 4), lst_89486)
    # Assigning a type to the variable 'intent' (line 3078)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3078, 4), 'intent', for_loop_var_89487)
    # SSA begins for a for statement (line 3078)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # SSA begins for try-except statement (line 3079)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 3080):
    
    # Assigning a Call to a Name (line 3080):
    
    # Call to eval(...): (line 3080)
    # Processing the call arguments (line 3080)
    str_89489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3080, 21), 'str', 'isintent_%s(var)')
    # Getting the type of 'intent' (line 3080)
    intent_89490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3080, 42), 'intent', False)
    # Applying the binary operator '%' (line 3080)
    result_mod_89491 = python_operator(stypy.reporting.localization.Localization(__file__, 3080, 21), '%', str_89489, intent_89490)
    
    # Processing the call keyword arguments (line 3080)
    kwargs_89492 = {}
    # Getting the type of 'eval' (line 3080)
    eval_89488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3080, 16), 'eval', False)
    # Calling eval(args, kwargs) (line 3080)
    eval_call_result_89493 = invoke(stypy.reporting.localization.Localization(__file__, 3080, 16), eval_89488, *[result_mod_89491], **kwargs_89492)
    
    # Assigning a type to the variable 'c' (line 3080)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3080, 12), 'c', eval_call_result_89493)
    # SSA branch for the except part of a try statement (line 3079)
    # SSA branch for the except 'NameError' branch of a try statement (line 3079)
    module_type_store.open_ssa_branch('except')
    
    # Assigning a Num to a Name (line 3082):
    
    # Assigning a Num to a Name (line 3082):
    int_89494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3082, 16), 'int')
    # Assigning a type to the variable 'c' (line 3082)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3082, 12), 'c', int_89494)
    # SSA join for try-except statement (line 3079)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'c' (line 3083)
    c_89495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3083, 11), 'c')
    # Testing the type of an if condition (line 3083)
    if_condition_89496 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3083, 8), c_89495)
    # Assigning a type to the variable 'if_condition_89496' (line 3083)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3083, 8), 'if_condition_89496', if_condition_89496)
    # SSA begins for if statement (line 3083)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 3084)
    # Processing the call arguments (line 3084)
    # Getting the type of 'intent' (line 3084)
    intent_89499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3084, 23), 'intent', False)
    # Processing the call keyword arguments (line 3084)
    kwargs_89500 = {}
    # Getting the type of 'ret' (line 3084)
    ret_89497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3084, 12), 'ret', False)
    # Obtaining the member 'append' of a type (line 3084)
    append_89498 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3084, 12), ret_89497, 'append')
    # Calling append(args, kwargs) (line 3084)
    append_call_result_89501 = invoke(stypy.reporting.localization.Localization(__file__, 3084, 12), append_89498, *[intent_89499], **kwargs_89500)
    
    # SSA join for if statement (line 3083)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'ret' (line 3085)
    ret_89502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3085, 11), 'ret')
    # Assigning a type to the variable 'stypy_return_type' (line 3085)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3085, 4), 'stypy_return_type', ret_89502)
    
    # ################# End of 'true_intent_list(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'true_intent_list' in the type store
    # Getting the type of 'stypy_return_type' (line 3075)
    stypy_return_type_89503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3075, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_89503)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'true_intent_list'
    return stypy_return_type_89503

# Assigning a type to the variable 'true_intent_list' (line 3075)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3075, 0), 'true_intent_list', true_intent_list)

@norecursion
def vars2fortran(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    str_89504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3088, 40), 'str', '')
    # Getting the type of 'False' (line 3088)
    False_89505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3088, 57), 'False')
    defaults = [str_89504, False_89505]
    # Create a new context for function 'vars2fortran'
    module_type_store = module_type_store.open_function_context('vars2fortran', 3088, 0, False)
    
    # Passed parameters checking function
    vars2fortran.stypy_localization = localization
    vars2fortran.stypy_type_of_self = None
    vars2fortran.stypy_type_store = module_type_store
    vars2fortran.stypy_function_name = 'vars2fortran'
    vars2fortran.stypy_param_names_list = ['block', 'vars', 'args', 'tab', 'as_interface']
    vars2fortran.stypy_varargs_param_name = None
    vars2fortran.stypy_kwargs_param_name = None
    vars2fortran.stypy_call_defaults = defaults
    vars2fortran.stypy_call_varargs = varargs
    vars2fortran.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'vars2fortran', ['block', 'vars', 'args', 'tab', 'as_interface'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'vars2fortran', localization, ['block', 'vars', 'args', 'tab', 'as_interface'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'vars2fortran(...)' code ##################

    str_89506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3093, (-1)), 'str', '\n    TODO:\n    public sub\n    ...\n    ')
    
    # Call to setmesstext(...): (line 3094)
    # Processing the call arguments (line 3094)
    # Getting the type of 'block' (line 3094)
    block_89508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3094, 16), 'block', False)
    # Processing the call keyword arguments (line 3094)
    kwargs_89509 = {}
    # Getting the type of 'setmesstext' (line 3094)
    setmesstext_89507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3094, 4), 'setmesstext', False)
    # Calling setmesstext(args, kwargs) (line 3094)
    setmesstext_call_result_89510 = invoke(stypy.reporting.localization.Localization(__file__, 3094, 4), setmesstext_89507, *[block_89508], **kwargs_89509)
    
    
    # Assigning a Str to a Name (line 3095):
    
    # Assigning a Str to a Name (line 3095):
    str_89511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3095, 10), 'str', '')
    # Assigning a type to the variable 'ret' (line 3095)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3095, 4), 'ret', str_89511)
    
    # Assigning a List to a Name (line 3096):
    
    # Assigning a List to a Name (line 3096):
    
    # Obtaining an instance of the builtin type 'list' (line 3096)
    list_89512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3096, 11), 'list')
    # Adding type elements to the builtin type 'list' instance (line 3096)
    
    # Assigning a type to the variable 'nout' (line 3096)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3096, 4), 'nout', list_89512)
    
    # Getting the type of 'args' (line 3097)
    args_89513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3097, 13), 'args')
    # Testing the type of a for loop iterable (line 3097)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 3097, 4), args_89513)
    # Getting the type of the for loop variable (line 3097)
    for_loop_var_89514 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 3097, 4), args_89513)
    # Assigning a type to the variable 'a' (line 3097)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3097, 4), 'a', for_loop_var_89514)
    # SSA begins for a for statement (line 3097)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'a' (line 3098)
    a_89515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3098, 11), 'a')
    
    # Obtaining the type of the subscript
    str_89516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3098, 22), 'str', 'vars')
    # Getting the type of 'block' (line 3098)
    block_89517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3098, 16), 'block')
    # Obtaining the member '__getitem__' of a type (line 3098)
    getitem___89518 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3098, 16), block_89517, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3098)
    subscript_call_result_89519 = invoke(stypy.reporting.localization.Localization(__file__, 3098, 16), getitem___89518, str_89516)
    
    # Applying the binary operator 'in' (line 3098)
    result_contains_89520 = python_operator(stypy.reporting.localization.Localization(__file__, 3098, 11), 'in', a_89515, subscript_call_result_89519)
    
    # Testing the type of an if condition (line 3098)
    if_condition_89521 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3098, 8), result_contains_89520)
    # Assigning a type to the variable 'if_condition_89521' (line 3098)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3098, 8), 'if_condition_89521', if_condition_89521)
    # SSA begins for if statement (line 3098)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 3099)
    # Processing the call arguments (line 3099)
    # Getting the type of 'a' (line 3099)
    a_89524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3099, 24), 'a', False)
    # Processing the call keyword arguments (line 3099)
    kwargs_89525 = {}
    # Getting the type of 'nout' (line 3099)
    nout_89522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3099, 12), 'nout', False)
    # Obtaining the member 'append' of a type (line 3099)
    append_89523 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3099, 12), nout_89522, 'append')
    # Calling append(args, kwargs) (line 3099)
    append_call_result_89526 = invoke(stypy.reporting.localization.Localization(__file__, 3099, 12), append_89523, *[a_89524], **kwargs_89525)
    
    # SSA join for if statement (line 3098)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_89527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3100, 7), 'str', 'commonvars')
    # Getting the type of 'block' (line 3100)
    block_89528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3100, 23), 'block')
    # Applying the binary operator 'in' (line 3100)
    result_contains_89529 = python_operator(stypy.reporting.localization.Localization(__file__, 3100, 7), 'in', str_89527, block_89528)
    
    # Testing the type of an if condition (line 3100)
    if_condition_89530 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3100, 4), result_contains_89529)
    # Assigning a type to the variable 'if_condition_89530' (line 3100)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3100, 4), 'if_condition_89530', if_condition_89530)
    # SSA begins for if statement (line 3100)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Obtaining the type of the subscript
    str_89531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3101, 23), 'str', 'commonvars')
    # Getting the type of 'block' (line 3101)
    block_89532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3101, 17), 'block')
    # Obtaining the member '__getitem__' of a type (line 3101)
    getitem___89533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3101, 17), block_89532, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3101)
    subscript_call_result_89534 = invoke(stypy.reporting.localization.Localization(__file__, 3101, 17), getitem___89533, str_89531)
    
    # Testing the type of a for loop iterable (line 3101)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 3101, 8), subscript_call_result_89534)
    # Getting the type of the for loop variable (line 3101)
    for_loop_var_89535 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 3101, 8), subscript_call_result_89534)
    # Assigning a type to the variable 'a' (line 3101)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3101, 8), 'a', for_loop_var_89535)
    # SSA begins for a for statement (line 3101)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'a' (line 3102)
    a_89536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3102, 15), 'a')
    # Getting the type of 'vars' (line 3102)
    vars_89537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3102, 20), 'vars')
    # Applying the binary operator 'in' (line 3102)
    result_contains_89538 = python_operator(stypy.reporting.localization.Localization(__file__, 3102, 15), 'in', a_89536, vars_89537)
    
    # Testing the type of an if condition (line 3102)
    if_condition_89539 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3102, 12), result_contains_89538)
    # Assigning a type to the variable 'if_condition_89539' (line 3102)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3102, 12), 'if_condition_89539', if_condition_89539)
    # SSA begins for if statement (line 3102)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'a' (line 3103)
    a_89540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3103, 19), 'a')
    # Getting the type of 'nout' (line 3103)
    nout_89541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3103, 28), 'nout')
    # Applying the binary operator 'notin' (line 3103)
    result_contains_89542 = python_operator(stypy.reporting.localization.Localization(__file__, 3103, 19), 'notin', a_89540, nout_89541)
    
    # Testing the type of an if condition (line 3103)
    if_condition_89543 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3103, 16), result_contains_89542)
    # Assigning a type to the variable 'if_condition_89543' (line 3103)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3103, 16), 'if_condition_89543', if_condition_89543)
    # SSA begins for if statement (line 3103)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 3104)
    # Processing the call arguments (line 3104)
    # Getting the type of 'a' (line 3104)
    a_89546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3104, 32), 'a', False)
    # Processing the call keyword arguments (line 3104)
    kwargs_89547 = {}
    # Getting the type of 'nout' (line 3104)
    nout_89544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3104, 20), 'nout', False)
    # Obtaining the member 'append' of a type (line 3104)
    append_89545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3104, 20), nout_89544, 'append')
    # Calling append(args, kwargs) (line 3104)
    append_call_result_89548 = invoke(stypy.reporting.localization.Localization(__file__, 3104, 20), append_89545, *[a_89546], **kwargs_89547)
    
    # SSA join for if statement (line 3103)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 3102)
    module_type_store.open_ssa_branch('else')
    
    # Call to errmess(...): (line 3106)
    # Processing the call arguments (line 3106)
    str_89550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3107, 20), 'str', 'vars2fortran: Confused?!: "%s" is not defined in vars.\n')
    # Getting the type of 'a' (line 3107)
    a_89551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3107, 81), 'a', False)
    # Applying the binary operator '%' (line 3107)
    result_mod_89552 = python_operator(stypy.reporting.localization.Localization(__file__, 3107, 20), '%', str_89550, a_89551)
    
    # Processing the call keyword arguments (line 3106)
    kwargs_89553 = {}
    # Getting the type of 'errmess' (line 3106)
    errmess_89549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3106, 16), 'errmess', False)
    # Calling errmess(args, kwargs) (line 3106)
    errmess_call_result_89554 = invoke(stypy.reporting.localization.Localization(__file__, 3106, 16), errmess_89549, *[result_mod_89552], **kwargs_89553)
    
    # SSA join for if statement (line 3102)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3100)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_89555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3108, 7), 'str', 'varnames')
    # Getting the type of 'block' (line 3108)
    block_89556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3108, 21), 'block')
    # Applying the binary operator 'in' (line 3108)
    result_contains_89557 = python_operator(stypy.reporting.localization.Localization(__file__, 3108, 7), 'in', str_89555, block_89556)
    
    # Testing the type of an if condition (line 3108)
    if_condition_89558 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3108, 4), result_contains_89557)
    # Assigning a type to the variable 'if_condition_89558' (line 3108)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3108, 4), 'if_condition_89558', if_condition_89558)
    # SSA begins for if statement (line 3108)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to extend(...): (line 3109)
    # Processing the call arguments (line 3109)
    
    # Obtaining the type of the subscript
    str_89561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3109, 26), 'str', 'varnames')
    # Getting the type of 'block' (line 3109)
    block_89562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3109, 20), 'block', False)
    # Obtaining the member '__getitem__' of a type (line 3109)
    getitem___89563 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3109, 20), block_89562, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3109)
    subscript_call_result_89564 = invoke(stypy.reporting.localization.Localization(__file__, 3109, 20), getitem___89563, str_89561)
    
    # Processing the call keyword arguments (line 3109)
    kwargs_89565 = {}
    # Getting the type of 'nout' (line 3109)
    nout_89559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3109, 8), 'nout', False)
    # Obtaining the member 'extend' of a type (line 3109)
    extend_89560 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3109, 8), nout_89559, 'extend')
    # Calling extend(args, kwargs) (line 3109)
    extend_call_result_89566 = invoke(stypy.reporting.localization.Localization(__file__, 3109, 8), extend_89560, *[subscript_call_result_89564], **kwargs_89565)
    
    # SSA join for if statement (line 3108)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'as_interface' (line 3110)
    as_interface_89567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3110, 11), 'as_interface')
    # Applying the 'not' unary operator (line 3110)
    result_not__89568 = python_operator(stypy.reporting.localization.Localization(__file__, 3110, 7), 'not', as_interface_89567)
    
    # Testing the type of an if condition (line 3110)
    if_condition_89569 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3110, 4), result_not__89568)
    # Assigning a type to the variable 'if_condition_89569' (line 3110)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3110, 4), 'if_condition_89569', if_condition_89569)
    # SSA begins for if statement (line 3110)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Call to list(...): (line 3111)
    # Processing the call arguments (line 3111)
    
    # Call to keys(...): (line 3111)
    # Processing the call keyword arguments (line 3111)
    kwargs_89573 = {}
    # Getting the type of 'vars' (line 3111)
    vars_89571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3111, 22), 'vars', False)
    # Obtaining the member 'keys' of a type (line 3111)
    keys_89572 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3111, 22), vars_89571, 'keys')
    # Calling keys(args, kwargs) (line 3111)
    keys_call_result_89574 = invoke(stypy.reporting.localization.Localization(__file__, 3111, 22), keys_89572, *[], **kwargs_89573)
    
    # Processing the call keyword arguments (line 3111)
    kwargs_89575 = {}
    # Getting the type of 'list' (line 3111)
    list_89570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3111, 17), 'list', False)
    # Calling list(args, kwargs) (line 3111)
    list_call_result_89576 = invoke(stypy.reporting.localization.Localization(__file__, 3111, 17), list_89570, *[keys_call_result_89574], **kwargs_89575)
    
    # Testing the type of a for loop iterable (line 3111)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 3111, 8), list_call_result_89576)
    # Getting the type of the for loop variable (line 3111)
    for_loop_var_89577 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 3111, 8), list_call_result_89576)
    # Assigning a type to the variable 'a' (line 3111)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3111, 8), 'a', for_loop_var_89577)
    # SSA begins for a for statement (line 3111)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'a' (line 3112)
    a_89578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3112, 15), 'a')
    # Getting the type of 'nout' (line 3112)
    nout_89579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3112, 24), 'nout')
    # Applying the binary operator 'notin' (line 3112)
    result_contains_89580 = python_operator(stypy.reporting.localization.Localization(__file__, 3112, 15), 'notin', a_89578, nout_89579)
    
    # Testing the type of an if condition (line 3112)
    if_condition_89581 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3112, 12), result_contains_89580)
    # Assigning a type to the variable 'if_condition_89581' (line 3112)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3112, 12), 'if_condition_89581', if_condition_89581)
    # SSA begins for if statement (line 3112)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 3113)
    # Processing the call arguments (line 3113)
    # Getting the type of 'a' (line 3113)
    a_89584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3113, 28), 'a', False)
    # Processing the call keyword arguments (line 3113)
    kwargs_89585 = {}
    # Getting the type of 'nout' (line 3113)
    nout_89582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3113, 16), 'nout', False)
    # Obtaining the member 'append' of a type (line 3113)
    append_89583 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3113, 16), nout_89582, 'append')
    # Calling append(args, kwargs) (line 3113)
    append_call_result_89586 = invoke(stypy.reporting.localization.Localization(__file__, 3113, 16), append_89583, *[a_89584], **kwargs_89585)
    
    # SSA join for if statement (line 3112)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3110)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'nout' (line 3114)
    nout_89587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3114, 13), 'nout')
    # Testing the type of a for loop iterable (line 3114)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 3114, 4), nout_89587)
    # Getting the type of the for loop variable (line 3114)
    for_loop_var_89588 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 3114, 4), nout_89587)
    # Assigning a type to the variable 'a' (line 3114)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3114, 4), 'a', for_loop_var_89588)
    # SSA begins for a for statement (line 3114)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    str_89589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3115, 11), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3115)
    a_89590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3115, 28), 'a')
    # Getting the type of 'vars' (line 3115)
    vars_89591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3115, 23), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3115)
    getitem___89592 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3115, 23), vars_89591, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3115)
    subscript_call_result_89593 = invoke(stypy.reporting.localization.Localization(__file__, 3115, 23), getitem___89592, a_89590)
    
    # Applying the binary operator 'in' (line 3115)
    result_contains_89594 = python_operator(stypy.reporting.localization.Localization(__file__, 3115, 11), 'in', str_89589, subscript_call_result_89593)
    
    # Testing the type of an if condition (line 3115)
    if_condition_89595 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3115, 8), result_contains_89594)
    # Assigning a type to the variable 'if_condition_89595' (line 3115)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3115, 8), 'if_condition_89595', if_condition_89595)
    # SSA begins for if statement (line 3115)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Obtaining the type of the subscript
    str_89596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3116, 29), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3116)
    a_89597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3116, 26), 'a')
    # Getting the type of 'vars' (line 3116)
    vars_89598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3116, 21), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3116)
    getitem___89599 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3116, 21), vars_89598, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3116)
    subscript_call_result_89600 = invoke(stypy.reporting.localization.Localization(__file__, 3116, 21), getitem___89599, a_89597)
    
    # Obtaining the member '__getitem__' of a type (line 3116)
    getitem___89601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3116, 21), subscript_call_result_89600, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3116)
    subscript_call_result_89602 = invoke(stypy.reporting.localization.Localization(__file__, 3116, 21), getitem___89601, str_89596)
    
    # Testing the type of a for loop iterable (line 3116)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 3116, 12), subscript_call_result_89602)
    # Getting the type of the for loop variable (line 3116)
    for_loop_var_89603 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 3116, 12), subscript_call_result_89602)
    # Assigning a type to the variable 'd' (line 3116)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3116, 12), 'd', for_loop_var_89603)
    # SSA begins for a for statement (line 3116)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'd' (line 3117)
    d_89604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3117, 19), 'd')
    # Getting the type of 'vars' (line 3117)
    vars_89605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3117, 24), 'vars')
    # Applying the binary operator 'in' (line 3117)
    result_contains_89606 = python_operator(stypy.reporting.localization.Localization(__file__, 3117, 19), 'in', d_89604, vars_89605)
    
    
    str_89607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3117, 33), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 3117)
    d_89608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3117, 50), 'd')
    # Getting the type of 'vars' (line 3117)
    vars_89609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3117, 45), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3117)
    getitem___89610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3117, 45), vars_89609, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3117)
    subscript_call_result_89611 = invoke(stypy.reporting.localization.Localization(__file__, 3117, 45), getitem___89610, d_89608)
    
    # Applying the binary operator 'in' (line 3117)
    result_contains_89612 = python_operator(stypy.reporting.localization.Localization(__file__, 3117, 33), 'in', str_89607, subscript_call_result_89611)
    
    # Applying the binary operator 'and' (line 3117)
    result_and_keyword_89613 = python_operator(stypy.reporting.localization.Localization(__file__, 3117, 19), 'and', result_contains_89606, result_contains_89612)
    
    # Getting the type of 'a' (line 3117)
    a_89614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3117, 57), 'a')
    
    # Obtaining the type of the subscript
    str_89615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3117, 70), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'd' (line 3117)
    d_89616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3117, 67), 'd')
    # Getting the type of 'vars' (line 3117)
    vars_89617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3117, 62), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3117)
    getitem___89618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3117, 62), vars_89617, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3117)
    subscript_call_result_89619 = invoke(stypy.reporting.localization.Localization(__file__, 3117, 62), getitem___89618, d_89616)
    
    # Obtaining the member '__getitem__' of a type (line 3117)
    getitem___89620 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3117, 62), subscript_call_result_89619, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3117)
    subscript_call_result_89621 = invoke(stypy.reporting.localization.Localization(__file__, 3117, 62), getitem___89620, str_89615)
    
    # Applying the binary operator 'in' (line 3117)
    result_contains_89622 = python_operator(stypy.reporting.localization.Localization(__file__, 3117, 57), 'in', a_89614, subscript_call_result_89621)
    
    # Applying the binary operator 'and' (line 3117)
    result_and_keyword_89623 = python_operator(stypy.reporting.localization.Localization(__file__, 3117, 19), 'and', result_and_keyword_89613, result_contains_89622)
    
    # Testing the type of an if condition (line 3117)
    if_condition_89624 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3117, 16), result_and_keyword_89623)
    # Assigning a type to the variable 'if_condition_89624' (line 3117)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3117, 16), 'if_condition_89624', if_condition_89624)
    # SSA begins for if statement (line 3117)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to errmess(...): (line 3118)
    # Processing the call arguments (line 3118)
    str_89626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3119, 24), 'str', 'vars2fortran: Warning: cross-dependence between variables "%s" and "%s"\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3119)
    tuple_89627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3119, 103), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3119)
    # Adding element type (line 3119)
    # Getting the type of 'a' (line 3119)
    a_89628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3119, 103), 'a', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3119, 103), tuple_89627, a_89628)
    # Adding element type (line 3119)
    # Getting the type of 'd' (line 3119)
    d_89629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3119, 106), 'd', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3119, 103), tuple_89627, d_89629)
    
    # Applying the binary operator '%' (line 3119)
    result_mod_89630 = python_operator(stypy.reporting.localization.Localization(__file__, 3119, 24), '%', str_89626, tuple_89627)
    
    # Processing the call keyword arguments (line 3118)
    kwargs_89631 = {}
    # Getting the type of 'errmess' (line 3118)
    errmess_89625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3118, 20), 'errmess', False)
    # Calling errmess(args, kwargs) (line 3118)
    errmess_call_result_89632 = invoke(stypy.reporting.localization.Localization(__file__, 3118, 20), errmess_89625, *[result_mod_89630], **kwargs_89631)
    
    # SSA join for if statement (line 3117)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3115)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    str_89633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3120, 11), 'str', 'externals')
    # Getting the type of 'block' (line 3120)
    block_89634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3120, 26), 'block')
    # Applying the binary operator 'in' (line 3120)
    result_contains_89635 = python_operator(stypy.reporting.localization.Localization(__file__, 3120, 11), 'in', str_89633, block_89634)
    
    
    # Getting the type of 'a' (line 3120)
    a_89636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3120, 36), 'a')
    
    # Obtaining the type of the subscript
    str_89637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3120, 47), 'str', 'externals')
    # Getting the type of 'block' (line 3120)
    block_89638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3120, 41), 'block')
    # Obtaining the member '__getitem__' of a type (line 3120)
    getitem___89639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3120, 41), block_89638, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3120)
    subscript_call_result_89640 = invoke(stypy.reporting.localization.Localization(__file__, 3120, 41), getitem___89639, str_89637)
    
    # Applying the binary operator 'in' (line 3120)
    result_contains_89641 = python_operator(stypy.reporting.localization.Localization(__file__, 3120, 36), 'in', a_89636, subscript_call_result_89640)
    
    # Applying the binary operator 'and' (line 3120)
    result_and_keyword_89642 = python_operator(stypy.reporting.localization.Localization(__file__, 3120, 11), 'and', result_contains_89635, result_contains_89641)
    
    # Testing the type of an if condition (line 3120)
    if_condition_89643 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3120, 8), result_and_keyword_89642)
    # Assigning a type to the variable 'if_condition_89643' (line 3120)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3120, 8), 'if_condition_89643', if_condition_89643)
    # SSA begins for if statement (line 3120)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Call to isintent_callback(...): (line 3121)
    # Processing the call arguments (line 3121)
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3121)
    a_89645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3121, 38), 'a', False)
    # Getting the type of 'vars' (line 3121)
    vars_89646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3121, 33), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 3121)
    getitem___89647 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3121, 33), vars_89646, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3121)
    subscript_call_result_89648 = invoke(stypy.reporting.localization.Localization(__file__, 3121, 33), getitem___89647, a_89645)
    
    # Processing the call keyword arguments (line 3121)
    kwargs_89649 = {}
    # Getting the type of 'isintent_callback' (line 3121)
    isintent_callback_89644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3121, 15), 'isintent_callback', False)
    # Calling isintent_callback(args, kwargs) (line 3121)
    isintent_callback_call_result_89650 = invoke(stypy.reporting.localization.Localization(__file__, 3121, 15), isintent_callback_89644, *[subscript_call_result_89648], **kwargs_89649)
    
    # Testing the type of an if condition (line 3121)
    if_condition_89651 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3121, 12), isintent_callback_call_result_89650)
    # Assigning a type to the variable 'if_condition_89651' (line 3121)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3121, 12), 'if_condition_89651', if_condition_89651)
    # SSA begins for if statement (line 3121)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3122):
    
    # Assigning a BinOp to a Name (line 3122):
    str_89652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3122, 22), 'str', '%s%sintent(callback) %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3122)
    tuple_89653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3122, 51), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3122)
    # Adding element type (line 3122)
    # Getting the type of 'ret' (line 3122)
    ret_89654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3122, 51), 'ret')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3122, 51), tuple_89653, ret_89654)
    # Adding element type (line 3122)
    # Getting the type of 'tab' (line 3122)
    tab_89655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3122, 56), 'tab')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3122, 51), tuple_89653, tab_89655)
    # Adding element type (line 3122)
    # Getting the type of 'a' (line 3122)
    a_89656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3122, 61), 'a')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3122, 51), tuple_89653, a_89656)
    
    # Applying the binary operator '%' (line 3122)
    result_mod_89657 = python_operator(stypy.reporting.localization.Localization(__file__, 3122, 22), '%', str_89652, tuple_89653)
    
    # Assigning a type to the variable 'ret' (line 3122)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3122, 16), 'ret', result_mod_89657)
    # SSA join for if statement (line 3121)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 3123):
    
    # Assigning a BinOp to a Name (line 3123):
    str_89658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3123, 18), 'str', '%s%sexternal %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3123)
    tuple_89659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3123, 39), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3123)
    # Adding element type (line 3123)
    # Getting the type of 'ret' (line 3123)
    ret_89660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3123, 39), 'ret')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3123, 39), tuple_89659, ret_89660)
    # Adding element type (line 3123)
    # Getting the type of 'tab' (line 3123)
    tab_89661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3123, 44), 'tab')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3123, 39), tuple_89659, tab_89661)
    # Adding element type (line 3123)
    # Getting the type of 'a' (line 3123)
    a_89662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3123, 49), 'a')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3123, 39), tuple_89659, a_89662)
    
    # Applying the binary operator '%' (line 3123)
    result_mod_89663 = python_operator(stypy.reporting.localization.Localization(__file__, 3123, 18), '%', str_89658, tuple_89659)
    
    # Assigning a type to the variable 'ret' (line 3123)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3123, 12), 'ret', result_mod_89663)
    
    
    # Call to isoptional(...): (line 3124)
    # Processing the call arguments (line 3124)
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3124)
    a_89665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3124, 31), 'a', False)
    # Getting the type of 'vars' (line 3124)
    vars_89666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3124, 26), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 3124)
    getitem___89667 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3124, 26), vars_89666, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3124)
    subscript_call_result_89668 = invoke(stypy.reporting.localization.Localization(__file__, 3124, 26), getitem___89667, a_89665)
    
    # Processing the call keyword arguments (line 3124)
    kwargs_89669 = {}
    # Getting the type of 'isoptional' (line 3124)
    isoptional_89664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3124, 15), 'isoptional', False)
    # Calling isoptional(args, kwargs) (line 3124)
    isoptional_call_result_89670 = invoke(stypy.reporting.localization.Localization(__file__, 3124, 15), isoptional_89664, *[subscript_call_result_89668], **kwargs_89669)
    
    # Testing the type of an if condition (line 3124)
    if_condition_89671 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3124, 12), isoptional_call_result_89670)
    # Assigning a type to the variable 'if_condition_89671' (line 3124)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3124, 12), 'if_condition_89671', if_condition_89671)
    # SSA begins for if statement (line 3124)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3125):
    
    # Assigning a BinOp to a Name (line 3125):
    str_89672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3125, 22), 'str', '%s%soptional %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3125)
    tuple_89673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3125, 43), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3125)
    # Adding element type (line 3125)
    # Getting the type of 'ret' (line 3125)
    ret_89674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3125, 43), 'ret')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3125, 43), tuple_89673, ret_89674)
    # Adding element type (line 3125)
    # Getting the type of 'tab' (line 3125)
    tab_89675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3125, 48), 'tab')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3125, 43), tuple_89673, tab_89675)
    # Adding element type (line 3125)
    # Getting the type of 'a' (line 3125)
    a_89676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3125, 53), 'a')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3125, 43), tuple_89673, a_89676)
    
    # Applying the binary operator '%' (line 3125)
    result_mod_89677 = python_operator(stypy.reporting.localization.Localization(__file__, 3125, 22), '%', str_89672, tuple_89673)
    
    # Assigning a type to the variable 'ret' (line 3125)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3125, 16), 'ret', result_mod_89677)
    # SSA join for if statement (line 3124)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'a' (line 3126)
    a_89678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3126, 15), 'a')
    # Getting the type of 'vars' (line 3126)
    vars_89679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3126, 20), 'vars')
    # Applying the binary operator 'in' (line 3126)
    result_contains_89680 = python_operator(stypy.reporting.localization.Localization(__file__, 3126, 15), 'in', a_89678, vars_89679)
    
    
    str_89681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3126, 29), 'str', 'typespec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3126)
    a_89682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3126, 52), 'a')
    # Getting the type of 'vars' (line 3126)
    vars_89683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3126, 47), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3126)
    getitem___89684 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3126, 47), vars_89683, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3126)
    subscript_call_result_89685 = invoke(stypy.reporting.localization.Localization(__file__, 3126, 47), getitem___89684, a_89682)
    
    # Applying the binary operator 'notin' (line 3126)
    result_contains_89686 = python_operator(stypy.reporting.localization.Localization(__file__, 3126, 29), 'notin', str_89681, subscript_call_result_89685)
    
    # Applying the binary operator 'and' (line 3126)
    result_and_keyword_89687 = python_operator(stypy.reporting.localization.Localization(__file__, 3126, 15), 'and', result_contains_89680, result_contains_89686)
    
    # Testing the type of an if condition (line 3126)
    if_condition_89688 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3126, 12), result_and_keyword_89687)
    # Assigning a type to the variable 'if_condition_89688' (line 3126)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3126, 12), 'if_condition_89688', if_condition_89688)
    # SSA begins for if statement (line 3126)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 3126)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Num to a Name (line 3128):
    
    # Assigning a Num to a Name (line 3128):
    int_89689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3128, 19), 'int')
    # Assigning a type to the variable 'cont' (line 3128)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3128, 12), 'cont', int_89689)
    
    
    # Obtaining the type of the subscript
    str_89690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3129, 27), 'str', 'body')
    # Getting the type of 'block' (line 3129)
    block_89691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3129, 21), 'block')
    # Obtaining the member '__getitem__' of a type (line 3129)
    getitem___89692 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3129, 21), block_89691, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3129)
    subscript_call_result_89693 = invoke(stypy.reporting.localization.Localization(__file__, 3129, 21), getitem___89692, str_89690)
    
    # Testing the type of a for loop iterable (line 3129)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 3129, 12), subscript_call_result_89693)
    # Getting the type of the for loop variable (line 3129)
    for_loop_var_89694 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 3129, 12), subscript_call_result_89693)
    # Assigning a type to the variable 'b' (line 3129)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3129, 12), 'b', for_loop_var_89694)
    # SSA begins for a for statement (line 3129)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'a' (line 3130)
    a_89695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3130, 19), 'a')
    
    # Obtaining the type of the subscript
    str_89696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3130, 26), 'str', 'name')
    # Getting the type of 'b' (line 3130)
    b_89697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3130, 24), 'b')
    # Obtaining the member '__getitem__' of a type (line 3130)
    getitem___89698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3130, 24), b_89697, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3130)
    subscript_call_result_89699 = invoke(stypy.reporting.localization.Localization(__file__, 3130, 24), getitem___89698, str_89696)
    
    # Applying the binary operator '==' (line 3130)
    result_eq_89700 = python_operator(stypy.reporting.localization.Localization(__file__, 3130, 19), '==', a_89695, subscript_call_result_89699)
    
    
    
    # Obtaining the type of the subscript
    str_89701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3130, 40), 'str', 'block')
    # Getting the type of 'b' (line 3130)
    b_89702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3130, 38), 'b')
    # Obtaining the member '__getitem__' of a type (line 3130)
    getitem___89703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3130, 38), b_89702, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3130)
    subscript_call_result_89704 = invoke(stypy.reporting.localization.Localization(__file__, 3130, 38), getitem___89703, str_89701)
    
    str_89705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3130, 52), 'str', 'function')
    # Applying the binary operator '==' (line 3130)
    result_eq_89706 = python_operator(stypy.reporting.localization.Localization(__file__, 3130, 38), '==', subscript_call_result_89704, str_89705)
    
    # Applying the binary operator 'and' (line 3130)
    result_and_keyword_89707 = python_operator(stypy.reporting.localization.Localization(__file__, 3130, 19), 'and', result_eq_89700, result_eq_89706)
    
    # Testing the type of an if condition (line 3130)
    if_condition_89708 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3130, 16), result_and_keyword_89707)
    # Assigning a type to the variable 'if_condition_89708' (line 3130)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3130, 16), 'if_condition_89708', if_condition_89708)
    # SSA begins for if statement (line 3130)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 3131):
    
    # Assigning a Num to a Name (line 3131):
    int_89709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3131, 27), 'int')
    # Assigning a type to the variable 'cont' (line 3131)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3131, 20), 'cont', int_89709)
    # SSA join for if statement (line 3130)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'cont' (line 3133)
    cont_89710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3133, 15), 'cont')
    # Testing the type of an if condition (line 3133)
    if_condition_89711 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3133, 12), cont_89710)
    # Assigning a type to the variable 'if_condition_89711' (line 3133)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3133, 12), 'if_condition_89711', if_condition_89711)
    # SSA begins for if statement (line 3133)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 3133)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3120)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'a' (line 3135)
    a_89712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3135, 11), 'a')
    # Getting the type of 'vars' (line 3135)
    vars_89713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3135, 20), 'vars')
    # Applying the binary operator 'notin' (line 3135)
    result_contains_89714 = python_operator(stypy.reporting.localization.Localization(__file__, 3135, 11), 'notin', a_89712, vars_89713)
    
    # Testing the type of an if condition (line 3135)
    if_condition_89715 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3135, 8), result_contains_89714)
    # Assigning a type to the variable 'if_condition_89715' (line 3135)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3135, 8), 'if_condition_89715', if_condition_89715)
    # SSA begins for if statement (line 3135)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to show(...): (line 3136)
    # Processing the call arguments (line 3136)
    # Getting the type of 'vars' (line 3136)
    vars_89717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3136, 17), 'vars', False)
    # Processing the call keyword arguments (line 3136)
    kwargs_89718 = {}
    # Getting the type of 'show' (line 3136)
    show_89716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3136, 12), 'show', False)
    # Calling show(args, kwargs) (line 3136)
    show_call_result_89719 = invoke(stypy.reporting.localization.Localization(__file__, 3136, 12), show_89716, *[vars_89717], **kwargs_89718)
    
    
    # Call to outmess(...): (line 3137)
    # Processing the call arguments (line 3137)
    str_89721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3137, 20), 'str', 'vars2fortran: No definition for argument "%s".\n')
    # Getting the type of 'a' (line 3137)
    a_89722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3137, 73), 'a', False)
    # Applying the binary operator '%' (line 3137)
    result_mod_89723 = python_operator(stypy.reporting.localization.Localization(__file__, 3137, 20), '%', str_89721, a_89722)
    
    # Processing the call keyword arguments (line 3137)
    kwargs_89724 = {}
    # Getting the type of 'outmess' (line 3137)
    outmess_89720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3137, 12), 'outmess', False)
    # Calling outmess(args, kwargs) (line 3137)
    outmess_call_result_89725 = invoke(stypy.reporting.localization.Localization(__file__, 3137, 12), outmess_89720, *[result_mod_89723], **kwargs_89724)
    
    # SSA join for if statement (line 3135)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'a' (line 3139)
    a_89726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3139, 11), 'a')
    
    # Obtaining the type of the subscript
    str_89727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3139, 22), 'str', 'name')
    # Getting the type of 'block' (line 3139)
    block_89728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3139, 16), 'block')
    # Obtaining the member '__getitem__' of a type (line 3139)
    getitem___89729 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3139, 16), block_89728, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3139)
    subscript_call_result_89730 = invoke(stypy.reporting.localization.Localization(__file__, 3139, 16), getitem___89729, str_89727)
    
    # Applying the binary operator '==' (line 3139)
    result_eq_89731 = python_operator(stypy.reporting.localization.Localization(__file__, 3139, 11), '==', a_89726, subscript_call_result_89730)
    
    
    
    
    # Obtaining the type of the subscript
    str_89732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3139, 44), 'str', 'block')
    # Getting the type of 'block' (line 3139)
    block_89733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3139, 38), 'block')
    # Obtaining the member '__getitem__' of a type (line 3139)
    getitem___89734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3139, 38), block_89733, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3139)
    subscript_call_result_89735 = invoke(stypy.reporting.localization.Localization(__file__, 3139, 38), getitem___89734, str_89732)
    
    str_89736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3139, 56), 'str', 'function')
    # Applying the binary operator '==' (line 3139)
    result_eq_89737 = python_operator(stypy.reporting.localization.Localization(__file__, 3139, 38), '==', subscript_call_result_89735, str_89736)
    
    # Applying the 'not' unary operator (line 3139)
    result_not__89738 = python_operator(stypy.reporting.localization.Localization(__file__, 3139, 34), 'not', result_eq_89737)
    
    # Applying the binary operator 'and' (line 3139)
    result_and_keyword_89739 = python_operator(stypy.reporting.localization.Localization(__file__, 3139, 11), 'and', result_eq_89731, result_not__89738)
    
    # Testing the type of an if condition (line 3139)
    if_condition_89740 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3139, 8), result_and_keyword_89739)
    # Assigning a type to the variable 'if_condition_89740' (line 3139)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3139, 8), 'if_condition_89740', if_condition_89740)
    # SSA begins for if statement (line 3139)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 3139)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_89741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3141, 11), 'str', 'typespec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3141)
    a_89742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3141, 34), 'a')
    # Getting the type of 'vars' (line 3141)
    vars_89743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3141, 29), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3141)
    getitem___89744 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3141, 29), vars_89743, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3141)
    subscript_call_result_89745 = invoke(stypy.reporting.localization.Localization(__file__, 3141, 29), getitem___89744, a_89742)
    
    # Applying the binary operator 'notin' (line 3141)
    result_contains_89746 = python_operator(stypy.reporting.localization.Localization(__file__, 3141, 11), 'notin', str_89741, subscript_call_result_89745)
    
    # Testing the type of an if condition (line 3141)
    if_condition_89747 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3141, 8), result_contains_89746)
    # Assigning a type to the variable 'if_condition_89747' (line 3141)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3141, 8), 'if_condition_89747', if_condition_89747)
    # SSA begins for if statement (line 3141)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    
    str_89748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3142, 15), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3142)
    a_89749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3142, 34), 'a')
    # Getting the type of 'vars' (line 3142)
    vars_89750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3142, 29), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3142)
    getitem___89751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3142, 29), vars_89750, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3142)
    subscript_call_result_89752 = invoke(stypy.reporting.localization.Localization(__file__, 3142, 29), getitem___89751, a_89749)
    
    # Applying the binary operator 'in' (line 3142)
    result_contains_89753 = python_operator(stypy.reporting.localization.Localization(__file__, 3142, 15), 'in', str_89748, subscript_call_result_89752)
    
    
    str_89754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3142, 41), 'str', 'external')
    
    # Obtaining the type of the subscript
    str_89755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3142, 63), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3142)
    a_89756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3142, 60), 'a')
    # Getting the type of 'vars' (line 3142)
    vars_89757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3142, 55), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3142)
    getitem___89758 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3142, 55), vars_89757, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3142)
    subscript_call_result_89759 = invoke(stypy.reporting.localization.Localization(__file__, 3142, 55), getitem___89758, a_89756)
    
    # Obtaining the member '__getitem__' of a type (line 3142)
    getitem___89760 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3142, 55), subscript_call_result_89759, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3142)
    subscript_call_result_89761 = invoke(stypy.reporting.localization.Localization(__file__, 3142, 55), getitem___89760, str_89755)
    
    # Applying the binary operator 'in' (line 3142)
    result_contains_89762 = python_operator(stypy.reporting.localization.Localization(__file__, 3142, 41), 'in', str_89754, subscript_call_result_89761)
    
    # Applying the binary operator 'and' (line 3142)
    result_and_keyword_89763 = python_operator(stypy.reporting.localization.Localization(__file__, 3142, 15), 'and', result_contains_89753, result_contains_89762)
    
    # Testing the type of an if condition (line 3142)
    if_condition_89764 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3142, 12), result_and_keyword_89763)
    # Assigning a type to the variable 'if_condition_89764' (line 3142)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3142, 12), 'if_condition_89764', if_condition_89764)
    # SSA begins for if statement (line 3142)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'a' (line 3143)
    a_89765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3143, 19), 'a')
    # Getting the type of 'args' (line 3143)
    args_89766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3143, 24), 'args')
    # Applying the binary operator 'in' (line 3143)
    result_contains_89767 = python_operator(stypy.reporting.localization.Localization(__file__, 3143, 19), 'in', a_89765, args_89766)
    
    # Testing the type of an if condition (line 3143)
    if_condition_89768 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3143, 16), result_contains_89767)
    # Assigning a type to the variable 'if_condition_89768' (line 3143)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3143, 16), 'if_condition_89768', if_condition_89768)
    # SSA begins for if statement (line 3143)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3144):
    
    # Assigning a BinOp to a Name (line 3144):
    str_89769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3144, 26), 'str', '%s%sexternal %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3144)
    tuple_89770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3144, 47), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3144)
    # Adding element type (line 3144)
    # Getting the type of 'ret' (line 3144)
    ret_89771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3144, 47), 'ret')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3144, 47), tuple_89770, ret_89771)
    # Adding element type (line 3144)
    # Getting the type of 'tab' (line 3144)
    tab_89772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3144, 52), 'tab')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3144, 47), tuple_89770, tab_89772)
    # Adding element type (line 3144)
    # Getting the type of 'a' (line 3144)
    a_89773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3144, 57), 'a')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3144, 47), tuple_89770, a_89773)
    
    # Applying the binary operator '%' (line 3144)
    result_mod_89774 = python_operator(stypy.reporting.localization.Localization(__file__, 3144, 26), '%', str_89769, tuple_89770)
    
    # Assigning a type to the variable 'ret' (line 3144)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3144, 20), 'ret', result_mod_89774)
    # SSA join for if statement (line 3143)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3142)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to show(...): (line 3146)
    # Processing the call arguments (line 3146)
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3146)
    a_89776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3146, 22), 'a', False)
    # Getting the type of 'vars' (line 3146)
    vars_89777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3146, 17), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 3146)
    getitem___89778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3146, 17), vars_89777, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3146)
    subscript_call_result_89779 = invoke(stypy.reporting.localization.Localization(__file__, 3146, 17), getitem___89778, a_89776)
    
    # Processing the call keyword arguments (line 3146)
    kwargs_89780 = {}
    # Getting the type of 'show' (line 3146)
    show_89775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3146, 12), 'show', False)
    # Calling show(args, kwargs) (line 3146)
    show_call_result_89781 = invoke(stypy.reporting.localization.Localization(__file__, 3146, 12), show_89775, *[subscript_call_result_89779], **kwargs_89780)
    
    
    # Call to outmess(...): (line 3147)
    # Processing the call arguments (line 3147)
    str_89783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3147, 20), 'str', 'vars2fortran: No typespec for argument "%s".\n')
    # Getting the type of 'a' (line 3147)
    a_89784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3147, 71), 'a', False)
    # Applying the binary operator '%' (line 3147)
    result_mod_89785 = python_operator(stypy.reporting.localization.Localization(__file__, 3147, 20), '%', str_89783, a_89784)
    
    # Processing the call keyword arguments (line 3147)
    kwargs_89786 = {}
    # Getting the type of 'outmess' (line 3147)
    outmess_89782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3147, 12), 'outmess', False)
    # Calling outmess(args, kwargs) (line 3147)
    outmess_call_result_89787 = invoke(stypy.reporting.localization.Localization(__file__, 3147, 12), outmess_89782, *[result_mod_89785], **kwargs_89786)
    
    # SSA join for if statement (line 3141)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Name (line 3149):
    
    # Assigning a Subscript to a Name (line 3149):
    
    # Obtaining the type of the subscript
    str_89788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3149, 25), 'str', 'typespec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3149)
    a_89789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3149, 22), 'a')
    # Getting the type of 'vars' (line 3149)
    vars_89790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3149, 17), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3149)
    getitem___89791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3149, 17), vars_89790, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3149)
    subscript_call_result_89792 = invoke(stypy.reporting.localization.Localization(__file__, 3149, 17), getitem___89791, a_89789)
    
    # Obtaining the member '__getitem__' of a type (line 3149)
    getitem___89793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3149, 17), subscript_call_result_89792, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3149)
    subscript_call_result_89794 = invoke(stypy.reporting.localization.Localization(__file__, 3149, 17), getitem___89793, str_89788)
    
    # Assigning a type to the variable 'vardef' (line 3149)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3149, 8), 'vardef', subscript_call_result_89794)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'vardef' (line 3150)
    vardef_89795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3150, 11), 'vardef')
    str_89796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3150, 21), 'str', 'type')
    # Applying the binary operator '==' (line 3150)
    result_eq_89797 = python_operator(stypy.reporting.localization.Localization(__file__, 3150, 11), '==', vardef_89795, str_89796)
    
    
    str_89798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3150, 32), 'str', 'typename')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3150)
    a_89799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3150, 51), 'a')
    # Getting the type of 'vars' (line 3150)
    vars_89800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3150, 46), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3150)
    getitem___89801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3150, 46), vars_89800, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3150)
    subscript_call_result_89802 = invoke(stypy.reporting.localization.Localization(__file__, 3150, 46), getitem___89801, a_89799)
    
    # Applying the binary operator 'in' (line 3150)
    result_contains_89803 = python_operator(stypy.reporting.localization.Localization(__file__, 3150, 32), 'in', str_89798, subscript_call_result_89802)
    
    # Applying the binary operator 'and' (line 3150)
    result_and_keyword_89804 = python_operator(stypy.reporting.localization.Localization(__file__, 3150, 11), 'and', result_eq_89797, result_contains_89803)
    
    # Testing the type of an if condition (line 3150)
    if_condition_89805 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3150, 8), result_and_keyword_89804)
    # Assigning a type to the variable 'if_condition_89805' (line 3150)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3150, 8), 'if_condition_89805', if_condition_89805)
    # SSA begins for if statement (line 3150)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3151):
    
    # Assigning a BinOp to a Name (line 3151):
    str_89806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3151, 21), 'str', '%s(%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3151)
    tuple_89807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3151, 33), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3151)
    # Adding element type (line 3151)
    # Getting the type of 'vardef' (line 3151)
    vardef_89808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3151, 33), 'vardef')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3151, 33), tuple_89807, vardef_89808)
    # Adding element type (line 3151)
    
    # Obtaining the type of the subscript
    str_89809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3151, 49), 'str', 'typename')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3151)
    a_89810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3151, 46), 'a')
    # Getting the type of 'vars' (line 3151)
    vars_89811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3151, 41), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3151)
    getitem___89812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3151, 41), vars_89811, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3151)
    subscript_call_result_89813 = invoke(stypy.reporting.localization.Localization(__file__, 3151, 41), getitem___89812, a_89810)
    
    # Obtaining the member '__getitem__' of a type (line 3151)
    getitem___89814 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3151, 41), subscript_call_result_89813, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3151)
    subscript_call_result_89815 = invoke(stypy.reporting.localization.Localization(__file__, 3151, 41), getitem___89814, str_89809)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3151, 33), tuple_89807, subscript_call_result_89815)
    
    # Applying the binary operator '%' (line 3151)
    result_mod_89816 = python_operator(stypy.reporting.localization.Localization(__file__, 3151, 21), '%', str_89806, tuple_89807)
    
    # Assigning a type to the variable 'vardef' (line 3151)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3151, 12), 'vardef', result_mod_89816)
    # SSA join for if statement (line 3150)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Dict to a Name (line 3152):
    
    # Assigning a Dict to a Name (line 3152):
    
    # Obtaining an instance of the builtin type 'dict' (line 3152)
    dict_89817 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3152, 19), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 3152)
    
    # Assigning a type to the variable 'selector' (line 3152)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3152, 8), 'selector', dict_89817)
    
    
    str_89818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3153, 11), 'str', 'kindselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3153)
    a_89819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3153, 34), 'a')
    # Getting the type of 'vars' (line 3153)
    vars_89820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3153, 29), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3153)
    getitem___89821 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3153, 29), vars_89820, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3153)
    subscript_call_result_89822 = invoke(stypy.reporting.localization.Localization(__file__, 3153, 29), getitem___89821, a_89819)
    
    # Applying the binary operator 'in' (line 3153)
    result_contains_89823 = python_operator(stypy.reporting.localization.Localization(__file__, 3153, 11), 'in', str_89818, subscript_call_result_89822)
    
    # Testing the type of an if condition (line 3153)
    if_condition_89824 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3153, 8), result_contains_89823)
    # Assigning a type to the variable 'if_condition_89824' (line 3153)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3153, 8), 'if_condition_89824', if_condition_89824)
    # SSA begins for if statement (line 3153)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 3154):
    
    # Assigning a Subscript to a Name (line 3154):
    
    # Obtaining the type of the subscript
    str_89825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3154, 31), 'str', 'kindselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3154)
    a_89826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3154, 28), 'a')
    # Getting the type of 'vars' (line 3154)
    vars_89827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3154, 23), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3154)
    getitem___89828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3154, 23), vars_89827, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3154)
    subscript_call_result_89829 = invoke(stypy.reporting.localization.Localization(__file__, 3154, 23), getitem___89828, a_89826)
    
    # Obtaining the member '__getitem__' of a type (line 3154)
    getitem___89830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3154, 23), subscript_call_result_89829, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3154)
    subscript_call_result_89831 = invoke(stypy.reporting.localization.Localization(__file__, 3154, 23), getitem___89830, str_89825)
    
    # Assigning a type to the variable 'selector' (line 3154)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3154, 12), 'selector', subscript_call_result_89831)
    # SSA branch for the else part of an if statement (line 3153)
    module_type_store.open_ssa_branch('else')
    
    
    str_89832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3155, 13), 'str', 'charselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3155)
    a_89833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3155, 36), 'a')
    # Getting the type of 'vars' (line 3155)
    vars_89834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3155, 31), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3155)
    getitem___89835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3155, 31), vars_89834, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3155)
    subscript_call_result_89836 = invoke(stypy.reporting.localization.Localization(__file__, 3155, 31), getitem___89835, a_89833)
    
    # Applying the binary operator 'in' (line 3155)
    result_contains_89837 = python_operator(stypy.reporting.localization.Localization(__file__, 3155, 13), 'in', str_89832, subscript_call_result_89836)
    
    # Testing the type of an if condition (line 3155)
    if_condition_89838 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3155, 13), result_contains_89837)
    # Assigning a type to the variable 'if_condition_89838' (line 3155)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3155, 13), 'if_condition_89838', if_condition_89838)
    # SSA begins for if statement (line 3155)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 3156):
    
    # Assigning a Subscript to a Name (line 3156):
    
    # Obtaining the type of the subscript
    str_89839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3156, 31), 'str', 'charselector')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3156)
    a_89840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3156, 28), 'a')
    # Getting the type of 'vars' (line 3156)
    vars_89841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3156, 23), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3156)
    getitem___89842 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3156, 23), vars_89841, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3156)
    subscript_call_result_89843 = invoke(stypy.reporting.localization.Localization(__file__, 3156, 23), getitem___89842, a_89840)
    
    # Obtaining the member '__getitem__' of a type (line 3156)
    getitem___89844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3156, 23), subscript_call_result_89843, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3156)
    subscript_call_result_89845 = invoke(stypy.reporting.localization.Localization(__file__, 3156, 23), getitem___89844, str_89839)
    
    # Assigning a type to the variable 'selector' (line 3156)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3156, 12), 'selector', subscript_call_result_89845)
    # SSA join for if statement (line 3155)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3153)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_89846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3157, 11), 'str', '*')
    # Getting the type of 'selector' (line 3157)
    selector_89847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3157, 18), 'selector')
    # Applying the binary operator 'in' (line 3157)
    result_contains_89848 = python_operator(stypy.reporting.localization.Localization(__file__, 3157, 11), 'in', str_89846, selector_89847)
    
    # Testing the type of an if condition (line 3157)
    if_condition_89849 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3157, 8), result_contains_89848)
    # Assigning a type to the variable 'if_condition_89849' (line 3157)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3157, 8), 'if_condition_89849', if_condition_89849)
    # SSA begins for if statement (line 3157)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Obtaining the type of the subscript
    str_89850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3158, 24), 'str', '*')
    # Getting the type of 'selector' (line 3158)
    selector_89851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3158, 15), 'selector')
    # Obtaining the member '__getitem__' of a type (line 3158)
    getitem___89852 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3158, 15), selector_89851, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3158)
    subscript_call_result_89853 = invoke(stypy.reporting.localization.Localization(__file__, 3158, 15), getitem___89852, str_89850)
    
    
    # Obtaining an instance of the builtin type 'list' (line 3158)
    list_89854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3158, 32), 'list')
    # Adding type elements to the builtin type 'list' instance (line 3158)
    # Adding element type (line 3158)
    str_89855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3158, 33), 'str', '*')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3158, 32), list_89854, str_89855)
    # Adding element type (line 3158)
    str_89856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3158, 38), 'str', ':')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3158, 32), list_89854, str_89856)
    
    # Applying the binary operator 'in' (line 3158)
    result_contains_89857 = python_operator(stypy.reporting.localization.Localization(__file__, 3158, 15), 'in', subscript_call_result_89853, list_89854)
    
    # Testing the type of an if condition (line 3158)
    if_condition_89858 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3158, 12), result_contains_89857)
    # Assigning a type to the variable 'if_condition_89858' (line 3158)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3158, 12), 'if_condition_89858', if_condition_89858)
    # SSA begins for if statement (line 3158)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3159):
    
    # Assigning a BinOp to a Name (line 3159):
    str_89859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3159, 25), 'str', '%s*(%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3159)
    tuple_89860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3159, 38), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3159)
    # Adding element type (line 3159)
    # Getting the type of 'vardef' (line 3159)
    vardef_89861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3159, 38), 'vardef')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3159, 38), tuple_89860, vardef_89861)
    # Adding element type (line 3159)
    
    # Obtaining the type of the subscript
    str_89862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3159, 55), 'str', '*')
    # Getting the type of 'selector' (line 3159)
    selector_89863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3159, 46), 'selector')
    # Obtaining the member '__getitem__' of a type (line 3159)
    getitem___89864 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3159, 46), selector_89863, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3159)
    subscript_call_result_89865 = invoke(stypy.reporting.localization.Localization(__file__, 3159, 46), getitem___89864, str_89862)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3159, 38), tuple_89860, subscript_call_result_89865)
    
    # Applying the binary operator '%' (line 3159)
    result_mod_89866 = python_operator(stypy.reporting.localization.Localization(__file__, 3159, 25), '%', str_89859, tuple_89860)
    
    # Assigning a type to the variable 'vardef' (line 3159)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3159, 16), 'vardef', result_mod_89866)
    # SSA branch for the else part of an if statement (line 3158)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 3161):
    
    # Assigning a BinOp to a Name (line 3161):
    str_89867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3161, 25), 'str', '%s*%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3161)
    tuple_89868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3161, 36), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3161)
    # Adding element type (line 3161)
    # Getting the type of 'vardef' (line 3161)
    vardef_89869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3161, 36), 'vardef')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3161, 36), tuple_89868, vardef_89869)
    # Adding element type (line 3161)
    
    # Obtaining the type of the subscript
    str_89870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3161, 53), 'str', '*')
    # Getting the type of 'selector' (line 3161)
    selector_89871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3161, 44), 'selector')
    # Obtaining the member '__getitem__' of a type (line 3161)
    getitem___89872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3161, 44), selector_89871, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3161)
    subscript_call_result_89873 = invoke(stypy.reporting.localization.Localization(__file__, 3161, 44), getitem___89872, str_89870)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3161, 36), tuple_89868, subscript_call_result_89873)
    
    # Applying the binary operator '%' (line 3161)
    result_mod_89874 = python_operator(stypy.reporting.localization.Localization(__file__, 3161, 25), '%', str_89867, tuple_89868)
    
    # Assigning a type to the variable 'vardef' (line 3161)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3161, 16), 'vardef', result_mod_89874)
    # SSA join for if statement (line 3158)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 3157)
    module_type_store.open_ssa_branch('else')
    
    
    str_89875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3163, 15), 'str', 'len')
    # Getting the type of 'selector' (line 3163)
    selector_89876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3163, 24), 'selector')
    # Applying the binary operator 'in' (line 3163)
    result_contains_89877 = python_operator(stypy.reporting.localization.Localization(__file__, 3163, 15), 'in', str_89875, selector_89876)
    
    # Testing the type of an if condition (line 3163)
    if_condition_89878 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3163, 12), result_contains_89877)
    # Assigning a type to the variable 'if_condition_89878' (line 3163)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3163, 12), 'if_condition_89878', if_condition_89878)
    # SSA begins for if statement (line 3163)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3164):
    
    # Assigning a BinOp to a Name (line 3164):
    str_89879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3164, 25), 'str', '%s(len=%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3164)
    tuple_89880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3164, 40), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3164)
    # Adding element type (line 3164)
    # Getting the type of 'vardef' (line 3164)
    vardef_89881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3164, 40), 'vardef')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3164, 40), tuple_89880, vardef_89881)
    # Adding element type (line 3164)
    
    # Obtaining the type of the subscript
    str_89882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3164, 57), 'str', 'len')
    # Getting the type of 'selector' (line 3164)
    selector_89883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3164, 48), 'selector')
    # Obtaining the member '__getitem__' of a type (line 3164)
    getitem___89884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3164, 48), selector_89883, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3164)
    subscript_call_result_89885 = invoke(stypy.reporting.localization.Localization(__file__, 3164, 48), getitem___89884, str_89882)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3164, 40), tuple_89880, subscript_call_result_89885)
    
    # Applying the binary operator '%' (line 3164)
    result_mod_89886 = python_operator(stypy.reporting.localization.Localization(__file__, 3164, 25), '%', str_89879, tuple_89880)
    
    # Assigning a type to the variable 'vardef' (line 3164)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3164, 16), 'vardef', result_mod_89886)
    
    
    str_89887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3165, 19), 'str', 'kind')
    # Getting the type of 'selector' (line 3165)
    selector_89888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3165, 29), 'selector')
    # Applying the binary operator 'in' (line 3165)
    result_contains_89889 = python_operator(stypy.reporting.localization.Localization(__file__, 3165, 19), 'in', str_89887, selector_89888)
    
    # Testing the type of an if condition (line 3165)
    if_condition_89890 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3165, 16), result_contains_89889)
    # Assigning a type to the variable 'if_condition_89890' (line 3165)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3165, 16), 'if_condition_89890', if_condition_89890)
    # SSA begins for if statement (line 3165)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3166):
    
    # Assigning a BinOp to a Name (line 3166):
    str_89891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3166, 29), 'str', '%s,kind=%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3166)
    tuple_89892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3166, 46), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3166)
    # Adding element type (line 3166)
    # Getting the type of 'vardef' (line 3166)
    vardef_89893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3166, 46), 'vardef')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3166, 46), tuple_89892, vardef_89893)
    # Adding element type (line 3166)
    
    # Obtaining the type of the subscript
    str_89894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3166, 63), 'str', 'kind')
    # Getting the type of 'selector' (line 3166)
    selector_89895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3166, 54), 'selector')
    # Obtaining the member '__getitem__' of a type (line 3166)
    getitem___89896 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3166, 54), selector_89895, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3166)
    subscript_call_result_89897 = invoke(stypy.reporting.localization.Localization(__file__, 3166, 54), getitem___89896, str_89894)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3166, 46), tuple_89892, subscript_call_result_89897)
    
    # Applying the binary operator '%' (line 3166)
    result_mod_89898 = python_operator(stypy.reporting.localization.Localization(__file__, 3166, 29), '%', str_89891, tuple_89892)
    
    # Assigning a type to the variable 'vardef' (line 3166)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3166, 20), 'vardef', result_mod_89898)
    # SSA branch for the else part of an if statement (line 3165)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 3168):
    
    # Assigning a BinOp to a Name (line 3168):
    str_89899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3168, 29), 'str', '%s)')
    # Getting the type of 'vardef' (line 3168)
    vardef_89900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3168, 38), 'vardef')
    # Applying the binary operator '%' (line 3168)
    result_mod_89901 = python_operator(stypy.reporting.localization.Localization(__file__, 3168, 29), '%', str_89899, vardef_89900)
    
    # Assigning a type to the variable 'vardef' (line 3168)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3168, 20), 'vardef', result_mod_89901)
    # SSA join for if statement (line 3165)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 3163)
    module_type_store.open_ssa_branch('else')
    
    
    str_89902 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3169, 17), 'str', 'kind')
    # Getting the type of 'selector' (line 3169)
    selector_89903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3169, 27), 'selector')
    # Applying the binary operator 'in' (line 3169)
    result_contains_89904 = python_operator(stypy.reporting.localization.Localization(__file__, 3169, 17), 'in', str_89902, selector_89903)
    
    # Testing the type of an if condition (line 3169)
    if_condition_89905 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3169, 17), result_contains_89904)
    # Assigning a type to the variable 'if_condition_89905' (line 3169)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3169, 17), 'if_condition_89905', if_condition_89905)
    # SSA begins for if statement (line 3169)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3170):
    
    # Assigning a BinOp to a Name (line 3170):
    str_89906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3170, 25), 'str', '%s(kind=%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3170)
    tuple_89907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3170, 42), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3170)
    # Adding element type (line 3170)
    # Getting the type of 'vardef' (line 3170)
    vardef_89908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3170, 42), 'vardef')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3170, 42), tuple_89907, vardef_89908)
    # Adding element type (line 3170)
    
    # Obtaining the type of the subscript
    str_89909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3170, 59), 'str', 'kind')
    # Getting the type of 'selector' (line 3170)
    selector_89910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3170, 50), 'selector')
    # Obtaining the member '__getitem__' of a type (line 3170)
    getitem___89911 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3170, 50), selector_89910, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3170)
    subscript_call_result_89912 = invoke(stypy.reporting.localization.Localization(__file__, 3170, 50), getitem___89911, str_89909)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3170, 42), tuple_89907, subscript_call_result_89912)
    
    # Applying the binary operator '%' (line 3170)
    result_mod_89913 = python_operator(stypy.reporting.localization.Localization(__file__, 3170, 25), '%', str_89906, tuple_89907)
    
    # Assigning a type to the variable 'vardef' (line 3170)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3170, 16), 'vardef', result_mod_89913)
    # SSA join for if statement (line 3169)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3163)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3157)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Str to a Name (line 3171):
    
    # Assigning a Str to a Name (line 3171):
    str_89914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3171, 12), 'str', ' ')
    # Assigning a type to the variable 'c' (line 3171)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3171, 8), 'c', str_89914)
    
    
    str_89915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3172, 11), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3172)
    a_89916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3172, 30), 'a')
    # Getting the type of 'vars' (line 3172)
    vars_89917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3172, 25), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3172)
    getitem___89918 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3172, 25), vars_89917, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3172)
    subscript_call_result_89919 = invoke(stypy.reporting.localization.Localization(__file__, 3172, 25), getitem___89918, a_89916)
    
    # Applying the binary operator 'in' (line 3172)
    result_contains_89920 = python_operator(stypy.reporting.localization.Localization(__file__, 3172, 11), 'in', str_89915, subscript_call_result_89919)
    
    # Testing the type of an if condition (line 3172)
    if_condition_89921 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3172, 8), result_contains_89920)
    # Assigning a type to the variable 'if_condition_89921' (line 3172)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3172, 8), 'if_condition_89921', if_condition_89921)
    # SSA begins for if statement (line 3172)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Name (line 3173):
    
    # Assigning a List to a Name (line 3173):
    
    # Obtaining an instance of the builtin type 'list' (line 3173)
    list_89922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3173, 19), 'list')
    # Adding type elements to the builtin type 'list' instance (line 3173)
    
    # Assigning a type to the variable 'attr' (line 3173)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3173, 12), 'attr', list_89922)
    
    
    # Obtaining the type of the subscript
    str_89923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3174, 29), 'str', 'attrspec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3174)
    a_89924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3174, 26), 'a')
    # Getting the type of 'vars' (line 3174)
    vars_89925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3174, 21), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3174)
    getitem___89926 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3174, 21), vars_89925, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3174)
    subscript_call_result_89927 = invoke(stypy.reporting.localization.Localization(__file__, 3174, 21), getitem___89926, a_89924)
    
    # Obtaining the member '__getitem__' of a type (line 3174)
    getitem___89928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3174, 21), subscript_call_result_89927, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3174)
    subscript_call_result_89929 = invoke(stypy.reporting.localization.Localization(__file__, 3174, 21), getitem___89928, str_89923)
    
    # Testing the type of a for loop iterable (line 3174)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 3174, 12), subscript_call_result_89929)
    # Getting the type of the for loop variable (line 3174)
    for_loop_var_89930 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 3174, 12), subscript_call_result_89929)
    # Assigning a type to the variable 'l' (line 3174)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3174, 12), 'l', for_loop_var_89930)
    # SSA begins for a for statement (line 3174)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'l' (line 3175)
    l_89931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3175, 19), 'l')
    
    # Obtaining an instance of the builtin type 'list' (line 3175)
    list_89932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3175, 28), 'list')
    # Adding type elements to the builtin type 'list' instance (line 3175)
    # Adding element type (line 3175)
    str_89933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3175, 29), 'str', 'external')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3175, 28), list_89932, str_89933)
    
    # Applying the binary operator 'notin' (line 3175)
    result_contains_89934 = python_operator(stypy.reporting.localization.Localization(__file__, 3175, 19), 'notin', l_89931, list_89932)
    
    # Testing the type of an if condition (line 3175)
    if_condition_89935 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3175, 16), result_contains_89934)
    # Assigning a type to the variable 'if_condition_89935' (line 3175)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3175, 16), 'if_condition_89935', if_condition_89935)
    # SSA begins for if statement (line 3175)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 3176)
    # Processing the call arguments (line 3176)
    # Getting the type of 'l' (line 3176)
    l_89938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3176, 32), 'l', False)
    # Processing the call keyword arguments (line 3176)
    kwargs_89939 = {}
    # Getting the type of 'attr' (line 3176)
    attr_89936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3176, 20), 'attr', False)
    # Obtaining the member 'append' of a type (line 3176)
    append_89937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3176, 20), attr_89936, 'append')
    # Calling append(args, kwargs) (line 3176)
    append_call_result_89940 = invoke(stypy.reporting.localization.Localization(__file__, 3176, 20), append_89937, *[l_89938], **kwargs_89939)
    
    # SSA join for if statement (line 3175)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'attr' (line 3177)
    attr_89941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3177, 15), 'attr')
    # Testing the type of an if condition (line 3177)
    if_condition_89942 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3177, 12), attr_89941)
    # Assigning a type to the variable 'if_condition_89942' (line 3177)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3177, 12), 'if_condition_89942', if_condition_89942)
    # SSA begins for if statement (line 3177)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3178):
    
    # Assigning a BinOp to a Name (line 3178):
    str_89943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3178, 25), 'str', '%s, %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3178)
    tuple_89944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3178, 37), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3178)
    # Adding element type (line 3178)
    # Getting the type of 'vardef' (line 3178)
    vardef_89945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3178, 37), 'vardef')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3178, 37), tuple_89944, vardef_89945)
    # Adding element type (line 3178)
    
    # Call to join(...): (line 3178)
    # Processing the call arguments (line 3178)
    # Getting the type of 'attr' (line 3178)
    attr_89948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3178, 54), 'attr', False)
    # Processing the call keyword arguments (line 3178)
    kwargs_89949 = {}
    str_89946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3178, 45), 'str', ',')
    # Obtaining the member 'join' of a type (line 3178)
    join_89947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3178, 45), str_89946, 'join')
    # Calling join(args, kwargs) (line 3178)
    join_call_result_89950 = invoke(stypy.reporting.localization.Localization(__file__, 3178, 45), join_89947, *[attr_89948], **kwargs_89949)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3178, 37), tuple_89944, join_call_result_89950)
    
    # Applying the binary operator '%' (line 3178)
    result_mod_89951 = python_operator(stypy.reporting.localization.Localization(__file__, 3178, 25), '%', str_89943, tuple_89944)
    
    # Assigning a type to the variable 'vardef' (line 3178)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3178, 16), 'vardef', result_mod_89951)
    
    # Assigning a Str to a Name (line 3179):
    
    # Assigning a Str to a Name (line 3179):
    str_89952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3179, 20), 'str', ',')
    # Assigning a type to the variable 'c' (line 3179)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3179, 16), 'c', str_89952)
    # SSA join for if statement (line 3177)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3172)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_89953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3180, 11), 'str', 'dimension')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3180)
    a_89954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3180, 31), 'a')
    # Getting the type of 'vars' (line 3180)
    vars_89955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3180, 26), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3180)
    getitem___89956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3180, 26), vars_89955, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3180)
    subscript_call_result_89957 = invoke(stypy.reporting.localization.Localization(__file__, 3180, 26), getitem___89956, a_89954)
    
    # Applying the binary operator 'in' (line 3180)
    result_contains_89958 = python_operator(stypy.reporting.localization.Localization(__file__, 3180, 11), 'in', str_89953, subscript_call_result_89957)
    
    # Testing the type of an if condition (line 3180)
    if_condition_89959 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3180, 8), result_contains_89958)
    # Assigning a type to the variable 'if_condition_89959' (line 3180)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3180, 8), 'if_condition_89959', if_condition_89959)
    # SSA begins for if statement (line 3180)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3181):
    
    # Assigning a BinOp to a Name (line 3181):
    str_89960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3181, 21), 'str', '%s%sdimension(%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3182)
    tuple_89961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3182, 16), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3182)
    # Adding element type (line 3182)
    # Getting the type of 'vardef' (line 3182)
    vardef_89962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3182, 16), 'vardef')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3182, 16), tuple_89961, vardef_89962)
    # Adding element type (line 3182)
    # Getting the type of 'c' (line 3182)
    c_89963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3182, 24), 'c')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3182, 16), tuple_89961, c_89963)
    # Adding element type (line 3182)
    
    # Call to join(...): (line 3182)
    # Processing the call arguments (line 3182)
    
    # Obtaining the type of the subscript
    str_89966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3182, 44), 'str', 'dimension')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3182)
    a_89967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3182, 41), 'a', False)
    # Getting the type of 'vars' (line 3182)
    vars_89968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3182, 36), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 3182)
    getitem___89969 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3182, 36), vars_89968, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3182)
    subscript_call_result_89970 = invoke(stypy.reporting.localization.Localization(__file__, 3182, 36), getitem___89969, a_89967)
    
    # Obtaining the member '__getitem__' of a type (line 3182)
    getitem___89971 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3182, 36), subscript_call_result_89970, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3182)
    subscript_call_result_89972 = invoke(stypy.reporting.localization.Localization(__file__, 3182, 36), getitem___89971, str_89966)
    
    # Processing the call keyword arguments (line 3182)
    kwargs_89973 = {}
    str_89964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3182, 27), 'str', ',')
    # Obtaining the member 'join' of a type (line 3182)
    join_89965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3182, 27), str_89964, 'join')
    # Calling join(args, kwargs) (line 3182)
    join_call_result_89974 = invoke(stypy.reporting.localization.Localization(__file__, 3182, 27), join_89965, *[subscript_call_result_89972], **kwargs_89973)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3182, 16), tuple_89961, join_call_result_89974)
    
    # Applying the binary operator '%' (line 3181)
    result_mod_89975 = python_operator(stypy.reporting.localization.Localization(__file__, 3181, 21), '%', str_89960, tuple_89961)
    
    # Assigning a type to the variable 'vardef' (line 3181)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3181, 12), 'vardef', result_mod_89975)
    
    # Assigning a Str to a Name (line 3183):
    
    # Assigning a Str to a Name (line 3183):
    str_89976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3183, 16), 'str', ',')
    # Assigning a type to the variable 'c' (line 3183)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3183, 12), 'c', str_89976)
    # SSA join for if statement (line 3180)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_89977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3184, 11), 'str', 'intent')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3184)
    a_89978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3184, 28), 'a')
    # Getting the type of 'vars' (line 3184)
    vars_89979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3184, 23), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3184)
    getitem___89980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3184, 23), vars_89979, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3184)
    subscript_call_result_89981 = invoke(stypy.reporting.localization.Localization(__file__, 3184, 23), getitem___89980, a_89978)
    
    # Applying the binary operator 'in' (line 3184)
    result_contains_89982 = python_operator(stypy.reporting.localization.Localization(__file__, 3184, 11), 'in', str_89977, subscript_call_result_89981)
    
    # Testing the type of an if condition (line 3184)
    if_condition_89983 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3184, 8), result_contains_89982)
    # Assigning a type to the variable 'if_condition_89983' (line 3184)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3184, 8), 'if_condition_89983', if_condition_89983)
    # SSA begins for if statement (line 3184)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 3185):
    
    # Assigning a Call to a Name (line 3185):
    
    # Call to true_intent_list(...): (line 3185)
    # Processing the call arguments (line 3185)
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3185)
    a_89985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3185, 40), 'a', False)
    # Getting the type of 'vars' (line 3185)
    vars_89986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3185, 35), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 3185)
    getitem___89987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3185, 35), vars_89986, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3185)
    subscript_call_result_89988 = invoke(stypy.reporting.localization.Localization(__file__, 3185, 35), getitem___89987, a_89985)
    
    # Processing the call keyword arguments (line 3185)
    kwargs_89989 = {}
    # Getting the type of 'true_intent_list' (line 3185)
    true_intent_list_89984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3185, 18), 'true_intent_list', False)
    # Calling true_intent_list(args, kwargs) (line 3185)
    true_intent_list_call_result_89990 = invoke(stypy.reporting.localization.Localization(__file__, 3185, 18), true_intent_list_89984, *[subscript_call_result_89988], **kwargs_89989)
    
    # Assigning a type to the variable 'lst' (line 3185)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3185, 12), 'lst', true_intent_list_call_result_89990)
    
    # Getting the type of 'lst' (line 3186)
    lst_89991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3186, 15), 'lst')
    # Testing the type of an if condition (line 3186)
    if_condition_89992 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3186, 12), lst_89991)
    # Assigning a type to the variable 'if_condition_89992' (line 3186)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3186, 12), 'if_condition_89992', if_condition_89992)
    # SSA begins for if statement (line 3186)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3187):
    
    # Assigning a BinOp to a Name (line 3187):
    str_89993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3187, 25), 'str', '%s%sintent(%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3187)
    tuple_89994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3187, 45), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3187)
    # Adding element type (line 3187)
    # Getting the type of 'vardef' (line 3187)
    vardef_89995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3187, 45), 'vardef')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3187, 45), tuple_89994, vardef_89995)
    # Adding element type (line 3187)
    # Getting the type of 'c' (line 3187)
    c_89996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3187, 53), 'c')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3187, 45), tuple_89994, c_89996)
    # Adding element type (line 3187)
    
    # Call to join(...): (line 3187)
    # Processing the call arguments (line 3187)
    # Getting the type of 'lst' (line 3187)
    lst_89999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3187, 65), 'lst', False)
    # Processing the call keyword arguments (line 3187)
    kwargs_90000 = {}
    str_89997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3187, 56), 'str', ',')
    # Obtaining the member 'join' of a type (line 3187)
    join_89998 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3187, 56), str_89997, 'join')
    # Calling join(args, kwargs) (line 3187)
    join_call_result_90001 = invoke(stypy.reporting.localization.Localization(__file__, 3187, 56), join_89998, *[lst_89999], **kwargs_90000)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3187, 45), tuple_89994, join_call_result_90001)
    
    # Applying the binary operator '%' (line 3187)
    result_mod_90002 = python_operator(stypy.reporting.localization.Localization(__file__, 3187, 25), '%', str_89993, tuple_89994)
    
    # Assigning a type to the variable 'vardef' (line 3187)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3187, 16), 'vardef', result_mod_90002)
    # SSA join for if statement (line 3186)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Str to a Name (line 3188):
    
    # Assigning a Str to a Name (line 3188):
    str_90003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3188, 16), 'str', ',')
    # Assigning a type to the variable 'c' (line 3188)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3188, 12), 'c', str_90003)
    # SSA join for if statement (line 3184)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_90004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3189, 11), 'str', 'check')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3189)
    a_90005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3189, 27), 'a')
    # Getting the type of 'vars' (line 3189)
    vars_90006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3189, 22), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3189)
    getitem___90007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3189, 22), vars_90006, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3189)
    subscript_call_result_90008 = invoke(stypy.reporting.localization.Localization(__file__, 3189, 22), getitem___90007, a_90005)
    
    # Applying the binary operator 'in' (line 3189)
    result_contains_90009 = python_operator(stypy.reporting.localization.Localization(__file__, 3189, 11), 'in', str_90004, subscript_call_result_90008)
    
    # Testing the type of an if condition (line 3189)
    if_condition_90010 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3189, 8), result_contains_90009)
    # Assigning a type to the variable 'if_condition_90010' (line 3189)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3189, 8), 'if_condition_90010', if_condition_90010)
    # SSA begins for if statement (line 3189)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3190):
    
    # Assigning a BinOp to a Name (line 3190):
    str_90011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3190, 21), 'str', '%s%scheck(%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3190)
    tuple_90012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3190, 40), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3190)
    # Adding element type (line 3190)
    # Getting the type of 'vardef' (line 3190)
    vardef_90013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3190, 40), 'vardef')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3190, 40), tuple_90012, vardef_90013)
    # Adding element type (line 3190)
    # Getting the type of 'c' (line 3190)
    c_90014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3190, 48), 'c')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3190, 40), tuple_90012, c_90014)
    # Adding element type (line 3190)
    
    # Call to join(...): (line 3190)
    # Processing the call arguments (line 3190)
    
    # Obtaining the type of the subscript
    str_90017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3190, 68), 'str', 'check')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3190)
    a_90018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3190, 65), 'a', False)
    # Getting the type of 'vars' (line 3190)
    vars_90019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3190, 60), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 3190)
    getitem___90020 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3190, 60), vars_90019, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3190)
    subscript_call_result_90021 = invoke(stypy.reporting.localization.Localization(__file__, 3190, 60), getitem___90020, a_90018)
    
    # Obtaining the member '__getitem__' of a type (line 3190)
    getitem___90022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3190, 60), subscript_call_result_90021, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3190)
    subscript_call_result_90023 = invoke(stypy.reporting.localization.Localization(__file__, 3190, 60), getitem___90022, str_90017)
    
    # Processing the call keyword arguments (line 3190)
    kwargs_90024 = {}
    str_90015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3190, 51), 'str', ',')
    # Obtaining the member 'join' of a type (line 3190)
    join_90016 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3190, 51), str_90015, 'join')
    # Calling join(args, kwargs) (line 3190)
    join_call_result_90025 = invoke(stypy.reporting.localization.Localization(__file__, 3190, 51), join_90016, *[subscript_call_result_90023], **kwargs_90024)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3190, 40), tuple_90012, join_call_result_90025)
    
    # Applying the binary operator '%' (line 3190)
    result_mod_90026 = python_operator(stypy.reporting.localization.Localization(__file__, 3190, 21), '%', str_90011, tuple_90012)
    
    # Assigning a type to the variable 'vardef' (line 3190)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3190, 12), 'vardef', result_mod_90026)
    
    # Assigning a Str to a Name (line 3191):
    
    # Assigning a Str to a Name (line 3191):
    str_90027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3191, 16), 'str', ',')
    # Assigning a type to the variable 'c' (line 3191)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3191, 12), 'c', str_90027)
    # SSA join for if statement (line 3189)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_90028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3192, 11), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3192)
    a_90029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3192, 28), 'a')
    # Getting the type of 'vars' (line 3192)
    vars_90030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3192, 23), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3192)
    getitem___90031 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3192, 23), vars_90030, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3192)
    subscript_call_result_90032 = invoke(stypy.reporting.localization.Localization(__file__, 3192, 23), getitem___90031, a_90029)
    
    # Applying the binary operator 'in' (line 3192)
    result_contains_90033 = python_operator(stypy.reporting.localization.Localization(__file__, 3192, 11), 'in', str_90028, subscript_call_result_90032)
    
    # Testing the type of an if condition (line 3192)
    if_condition_90034 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3192, 8), result_contains_90033)
    # Assigning a type to the variable 'if_condition_90034' (line 3192)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3192, 8), 'if_condition_90034', if_condition_90034)
    # SSA begins for if statement (line 3192)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 3193):
    
    # Assigning a BinOp to a Name (line 3193):
    str_90035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3193, 21), 'str', '%s%sdepend(%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3194)
    tuple_90036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3194, 16), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3194)
    # Adding element type (line 3194)
    # Getting the type of 'vardef' (line 3194)
    vardef_90037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3194, 16), 'vardef')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3194, 16), tuple_90036, vardef_90037)
    # Adding element type (line 3194)
    # Getting the type of 'c' (line 3194)
    c_90038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3194, 24), 'c')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3194, 16), tuple_90036, c_90038)
    # Adding element type (line 3194)
    
    # Call to join(...): (line 3194)
    # Processing the call arguments (line 3194)
    
    # Obtaining the type of the subscript
    str_90041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3194, 44), 'str', 'depend')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3194)
    a_90042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3194, 41), 'a', False)
    # Getting the type of 'vars' (line 3194)
    vars_90043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3194, 36), 'vars', False)
    # Obtaining the member '__getitem__' of a type (line 3194)
    getitem___90044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3194, 36), vars_90043, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3194)
    subscript_call_result_90045 = invoke(stypy.reporting.localization.Localization(__file__, 3194, 36), getitem___90044, a_90042)
    
    # Obtaining the member '__getitem__' of a type (line 3194)
    getitem___90046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3194, 36), subscript_call_result_90045, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3194)
    subscript_call_result_90047 = invoke(stypy.reporting.localization.Localization(__file__, 3194, 36), getitem___90046, str_90041)
    
    # Processing the call keyword arguments (line 3194)
    kwargs_90048 = {}
    str_90039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3194, 27), 'str', ',')
    # Obtaining the member 'join' of a type (line 3194)
    join_90040 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3194, 27), str_90039, 'join')
    # Calling join(args, kwargs) (line 3194)
    join_call_result_90049 = invoke(stypy.reporting.localization.Localization(__file__, 3194, 27), join_90040, *[subscript_call_result_90047], **kwargs_90048)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3194, 16), tuple_90036, join_call_result_90049)
    
    # Applying the binary operator '%' (line 3193)
    result_mod_90050 = python_operator(stypy.reporting.localization.Localization(__file__, 3193, 21), '%', str_90035, tuple_90036)
    
    # Assigning a type to the variable 'vardef' (line 3193)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3193, 12), 'vardef', result_mod_90050)
    
    # Assigning a Str to a Name (line 3195):
    
    # Assigning a Str to a Name (line 3195):
    str_90051 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3195, 16), 'str', ',')
    # Assigning a type to the variable 'c' (line 3195)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3195, 12), 'c', str_90051)
    # SSA join for if statement (line 3192)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_90052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3196, 11), 'str', '=')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3196)
    a_90053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3196, 23), 'a')
    # Getting the type of 'vars' (line 3196)
    vars_90054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3196, 18), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3196)
    getitem___90055 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3196, 18), vars_90054, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3196)
    subscript_call_result_90056 = invoke(stypy.reporting.localization.Localization(__file__, 3196, 18), getitem___90055, a_90053)
    
    # Applying the binary operator 'in' (line 3196)
    result_contains_90057 = python_operator(stypy.reporting.localization.Localization(__file__, 3196, 11), 'in', str_90052, subscript_call_result_90056)
    
    # Testing the type of an if condition (line 3196)
    if_condition_90058 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3196, 8), result_contains_90057)
    # Assigning a type to the variable 'if_condition_90058' (line 3196)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3196, 8), 'if_condition_90058', if_condition_90058)
    # SSA begins for if statement (line 3196)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 3197):
    
    # Assigning a Subscript to a Name (line 3197):
    
    # Obtaining the type of the subscript
    str_90059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3197, 24), 'str', '=')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3197)
    a_90060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3197, 21), 'a')
    # Getting the type of 'vars' (line 3197)
    vars_90061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3197, 16), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3197)
    getitem___90062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3197, 16), vars_90061, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3197)
    subscript_call_result_90063 = invoke(stypy.reporting.localization.Localization(__file__, 3197, 16), getitem___90062, a_90060)
    
    # Obtaining the member '__getitem__' of a type (line 3197)
    getitem___90064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3197, 16), subscript_call_result_90063, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3197)
    subscript_call_result_90065 = invoke(stypy.reporting.localization.Localization(__file__, 3197, 16), getitem___90064, str_90059)
    
    # Assigning a type to the variable 'v' (line 3197)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3197, 12), 'v', subscript_call_result_90065)
    
    
    
    # Obtaining the type of the subscript
    str_90066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3198, 23), 'str', 'typespec')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 3198)
    a_90067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3198, 20), 'a')
    # Getting the type of 'vars' (line 3198)
    vars_90068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3198, 15), 'vars')
    # Obtaining the member '__getitem__' of a type (line 3198)
    getitem___90069 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3198, 15), vars_90068, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3198)
    subscript_call_result_90070 = invoke(stypy.reporting.localization.Localization(__file__, 3198, 15), getitem___90069, a_90067)
    
    # Obtaining the member '__getitem__' of a type (line 3198)
    getitem___90071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3198, 15), subscript_call_result_90070, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3198)
    subscript_call_result_90072 = invoke(stypy.reporting.localization.Localization(__file__, 3198, 15), getitem___90071, str_90066)
    
    
    # Obtaining an instance of the builtin type 'list' (line 3198)
    list_90073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3198, 38), 'list')
    # Adding type elements to the builtin type 'list' instance (line 3198)
    # Adding element type (line 3198)
    str_90074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3198, 39), 'str', 'complex')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3198, 38), list_90073, str_90074)
    # Adding element type (line 3198)
    str_90075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3198, 50), 'str', 'double complex')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3198, 38), list_90073, str_90075)
    
    # Applying the binary operator 'in' (line 3198)
    result_contains_90076 = python_operator(stypy.reporting.localization.Localization(__file__, 3198, 15), 'in', subscript_call_result_90072, list_90073)
    
    # Testing the type of an if condition (line 3198)
    if_condition_90077 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3198, 12), result_contains_90076)
    # Assigning a type to the variable 'if_condition_90077' (line 3198)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3198, 12), 'if_condition_90077', if_condition_90077)
    # SSA begins for if statement (line 3198)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # SSA begins for try-except statement (line 3199)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 3200):
    
    # Assigning a Call to a Name (line 3200):
    
    # Call to eval(...): (line 3200)
    # Processing the call arguments (line 3200)
    # Getting the type of 'v' (line 3200)
    v_90079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3200, 29), 'v', False)
    # Processing the call keyword arguments (line 3200)
    kwargs_90080 = {}
    # Getting the type of 'eval' (line 3200)
    eval_90078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3200, 24), 'eval', False)
    # Calling eval(args, kwargs) (line 3200)
    eval_call_result_90081 = invoke(stypy.reporting.localization.Localization(__file__, 3200, 24), eval_90078, *[v_90079], **kwargs_90080)
    
    # Assigning a type to the variable 'v' (line 3200)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3200, 20), 'v', eval_call_result_90081)
    
    # Assigning a BinOp to a Name (line 3201):
    
    # Assigning a BinOp to a Name (line 3201):
    str_90082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3201, 24), 'str', '(%s,%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3201)
    tuple_90083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3201, 37), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3201)
    # Adding element type (line 3201)
    # Getting the type of 'v' (line 3201)
    v_90084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3201, 37), 'v')
    # Obtaining the member 'real' of a type (line 3201)
    real_90085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3201, 37), v_90084, 'real')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3201, 37), tuple_90083, real_90085)
    # Adding element type (line 3201)
    # Getting the type of 'v' (line 3201)
    v_90086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3201, 45), 'v')
    # Obtaining the member 'imag' of a type (line 3201)
    imag_90087 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3201, 45), v_90086, 'imag')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3201, 37), tuple_90083, imag_90087)
    
    # Applying the binary operator '%' (line 3201)
    result_mod_90088 = python_operator(stypy.reporting.localization.Localization(__file__, 3201, 24), '%', str_90082, tuple_90083)
    
    # Assigning a type to the variable 'v' (line 3201)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3201, 20), 'v', result_mod_90088)
    # SSA branch for the except part of a try statement (line 3199)
    # SSA branch for the except '<any exception>' branch of a try statement (line 3199)
    module_type_store.open_ssa_branch('except')
    pass
    # SSA join for try-except statement (line 3199)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3198)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 3204):
    
    # Assigning a BinOp to a Name (line 3204):
    str_90089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3204, 21), 'str', '%s :: %s=%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3204)
    tuple_90090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3204, 38), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3204)
    # Adding element type (line 3204)
    # Getting the type of 'vardef' (line 3204)
    vardef_90091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3204, 38), 'vardef')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3204, 38), tuple_90090, vardef_90091)
    # Adding element type (line 3204)
    # Getting the type of 'a' (line 3204)
    a_90092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3204, 46), 'a')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3204, 38), tuple_90090, a_90092)
    # Adding element type (line 3204)
    # Getting the type of 'v' (line 3204)
    v_90093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3204, 49), 'v')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3204, 38), tuple_90090, v_90093)
    
    # Applying the binary operator '%' (line 3204)
    result_mod_90094 = python_operator(stypy.reporting.localization.Localization(__file__, 3204, 21), '%', str_90089, tuple_90090)
    
    # Assigning a type to the variable 'vardef' (line 3204)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3204, 12), 'vardef', result_mod_90094)
    # SSA branch for the else part of an if statement (line 3196)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 3206):
    
    # Assigning a BinOp to a Name (line 3206):
    str_90095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3206, 21), 'str', '%s :: %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3206)
    tuple_90096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3206, 35), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3206)
    # Adding element type (line 3206)
    # Getting the type of 'vardef' (line 3206)
    vardef_90097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3206, 35), 'vardef')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3206, 35), tuple_90096, vardef_90097)
    # Adding element type (line 3206)
    # Getting the type of 'a' (line 3206)
    a_90098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3206, 43), 'a')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3206, 35), tuple_90096, a_90098)
    
    # Applying the binary operator '%' (line 3206)
    result_mod_90099 = python_operator(stypy.reporting.localization.Localization(__file__, 3206, 21), '%', str_90095, tuple_90096)
    
    # Assigning a type to the variable 'vardef' (line 3206)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3206, 12), 'vardef', result_mod_90099)
    # SSA join for if statement (line 3196)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 3207):
    
    # Assigning a BinOp to a Name (line 3207):
    str_90100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3207, 14), 'str', '%s%s%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 3207)
    tuple_90101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3207, 26), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3207)
    # Adding element type (line 3207)
    # Getting the type of 'ret' (line 3207)
    ret_90102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3207, 26), 'ret')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3207, 26), tuple_90101, ret_90102)
    # Adding element type (line 3207)
    # Getting the type of 'tab' (line 3207)
    tab_90103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3207, 31), 'tab')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3207, 26), tuple_90101, tab_90103)
    # Adding element type (line 3207)
    # Getting the type of 'vardef' (line 3207)
    vardef_90104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3207, 36), 'vardef')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3207, 26), tuple_90101, vardef_90104)
    
    # Applying the binary operator '%' (line 3207)
    result_mod_90105 = python_operator(stypy.reporting.localization.Localization(__file__, 3207, 14), '%', str_90100, tuple_90101)
    
    # Assigning a type to the variable 'ret' (line 3207)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3207, 8), 'ret', result_mod_90105)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'ret' (line 3208)
    ret_90106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3208, 11), 'ret')
    # Assigning a type to the variable 'stypy_return_type' (line 3208)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3208, 4), 'stypy_return_type', ret_90106)
    
    # ################# End of 'vars2fortran(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'vars2fortran' in the type store
    # Getting the type of 'stypy_return_type' (line 3088)
    stypy_return_type_90107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3088, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_90107)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'vars2fortran'
    return stypy_return_type_90107

# Assigning a type to the variable 'vars2fortran' (line 3088)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3088, 0), 'vars2fortran', vars2fortran)

@norecursion
def crackfortran(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'crackfortran'
    module_type_store = module_type_store.open_function_context('crackfortran', 3212, 0, False)
    
    # Passed parameters checking function
    crackfortran.stypy_localization = localization
    crackfortran.stypy_type_of_self = None
    crackfortran.stypy_type_store = module_type_store
    crackfortran.stypy_function_name = 'crackfortran'
    crackfortran.stypy_param_names_list = ['files']
    crackfortran.stypy_varargs_param_name = None
    crackfortran.stypy_kwargs_param_name = None
    crackfortran.stypy_call_defaults = defaults
    crackfortran.stypy_call_varargs = varargs
    crackfortran.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'crackfortran', ['files'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'crackfortran', localization, ['files'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'crackfortran(...)' code ##################

    # Marking variables as global (line 3213)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 3213, 4), 'usermodules')
    
    # Call to outmess(...): (line 3215)
    # Processing the call arguments (line 3215)
    str_90109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3215, 12), 'str', 'Reading fortran codes...\n')
    int_90110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3215, 42), 'int')
    # Processing the call keyword arguments (line 3215)
    kwargs_90111 = {}
    # Getting the type of 'outmess' (line 3215)
    outmess_90108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3215, 4), 'outmess', False)
    # Calling outmess(args, kwargs) (line 3215)
    outmess_call_result_90112 = invoke(stypy.reporting.localization.Localization(__file__, 3215, 4), outmess_90108, *[str_90109, int_90110], **kwargs_90111)
    
    
    # Call to readfortrancode(...): (line 3216)
    # Processing the call arguments (line 3216)
    # Getting the type of 'files' (line 3216)
    files_90114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3216, 20), 'files', False)
    # Getting the type of 'crackline' (line 3216)
    crackline_90115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3216, 27), 'crackline', False)
    # Processing the call keyword arguments (line 3216)
    kwargs_90116 = {}
    # Getting the type of 'readfortrancode' (line 3216)
    readfortrancode_90113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3216, 4), 'readfortrancode', False)
    # Calling readfortrancode(args, kwargs) (line 3216)
    readfortrancode_call_result_90117 = invoke(stypy.reporting.localization.Localization(__file__, 3216, 4), readfortrancode_90113, *[files_90114, crackline_90115], **kwargs_90116)
    
    
    # Call to outmess(...): (line 3217)
    # Processing the call arguments (line 3217)
    str_90119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3217, 12), 'str', 'Post-processing...\n')
    int_90120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3217, 36), 'int')
    # Processing the call keyword arguments (line 3217)
    kwargs_90121 = {}
    # Getting the type of 'outmess' (line 3217)
    outmess_90118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3217, 4), 'outmess', False)
    # Calling outmess(args, kwargs) (line 3217)
    outmess_call_result_90122 = invoke(stypy.reporting.localization.Localization(__file__, 3217, 4), outmess_90118, *[str_90119, int_90120], **kwargs_90121)
    
    
    # Assigning a List to a Name (line 3218):
    
    # Assigning a List to a Name (line 3218):
    
    # Obtaining an instance of the builtin type 'list' (line 3218)
    list_90123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3218, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 3218)
    
    # Assigning a type to the variable 'usermodules' (line 3218)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3218, 4), 'usermodules', list_90123)
    
    # Assigning a Call to a Name (line 3219):
    
    # Assigning a Call to a Name (line 3219):
    
    # Call to postcrack(...): (line 3219)
    # Processing the call arguments (line 3219)
    
    # Obtaining the type of the subscript
    int_90125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3219, 35), 'int')
    # Getting the type of 'grouplist' (line 3219)
    grouplist_90126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3219, 25), 'grouplist', False)
    # Obtaining the member '__getitem__' of a type (line 3219)
    getitem___90127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3219, 25), grouplist_90126, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3219)
    subscript_call_result_90128 = invoke(stypy.reporting.localization.Localization(__file__, 3219, 25), getitem___90127, int_90125)
    
    # Processing the call keyword arguments (line 3219)
    kwargs_90129 = {}
    # Getting the type of 'postcrack' (line 3219)
    postcrack_90124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3219, 15), 'postcrack', False)
    # Calling postcrack(args, kwargs) (line 3219)
    postcrack_call_result_90130 = invoke(stypy.reporting.localization.Localization(__file__, 3219, 15), postcrack_90124, *[subscript_call_result_90128], **kwargs_90129)
    
    # Assigning a type to the variable 'postlist' (line 3219)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3219, 4), 'postlist', postcrack_call_result_90130)
    
    # Call to outmess(...): (line 3220)
    # Processing the call arguments (line 3220)
    str_90132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3220, 12), 'str', 'Post-processing (stage 2)...\n')
    int_90133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3220, 46), 'int')
    # Processing the call keyword arguments (line 3220)
    kwargs_90134 = {}
    # Getting the type of 'outmess' (line 3220)
    outmess_90131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3220, 4), 'outmess', False)
    # Calling outmess(args, kwargs) (line 3220)
    outmess_call_result_90135 = invoke(stypy.reporting.localization.Localization(__file__, 3220, 4), outmess_90131, *[str_90132, int_90133], **kwargs_90134)
    
    
    # Assigning a Call to a Name (line 3221):
    
    # Assigning a Call to a Name (line 3221):
    
    # Call to postcrack2(...): (line 3221)
    # Processing the call arguments (line 3221)
    # Getting the type of 'postlist' (line 3221)
    postlist_90137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3221, 26), 'postlist', False)
    # Processing the call keyword arguments (line 3221)
    kwargs_90138 = {}
    # Getting the type of 'postcrack2' (line 3221)
    postcrack2_90136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3221, 15), 'postcrack2', False)
    # Calling postcrack2(args, kwargs) (line 3221)
    postcrack2_call_result_90139 = invoke(stypy.reporting.localization.Localization(__file__, 3221, 15), postcrack2_90136, *[postlist_90137], **kwargs_90138)
    
    # Assigning a type to the variable 'postlist' (line 3221)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3221, 4), 'postlist', postcrack2_call_result_90139)
    # Getting the type of 'usermodules' (line 3222)
    usermodules_90140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3222, 11), 'usermodules')
    # Getting the type of 'postlist' (line 3222)
    postlist_90141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3222, 25), 'postlist')
    # Applying the binary operator '+' (line 3222)
    result_add_90142 = python_operator(stypy.reporting.localization.Localization(__file__, 3222, 11), '+', usermodules_90140, postlist_90141)
    
    # Assigning a type to the variable 'stypy_return_type' (line 3222)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3222, 4), 'stypy_return_type', result_add_90142)
    
    # ################# End of 'crackfortran(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'crackfortran' in the type store
    # Getting the type of 'stypy_return_type' (line 3212)
    stypy_return_type_90143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3212, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_90143)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'crackfortran'
    return stypy_return_type_90143

# Assigning a type to the variable 'crackfortran' (line 3212)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3212, 0), 'crackfortran', crackfortran)

@norecursion
def crack2fortran(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'crack2fortran'
    module_type_store = module_type_store.open_function_context('crack2fortran', 3225, 0, False)
    
    # Passed parameters checking function
    crack2fortran.stypy_localization = localization
    crack2fortran.stypy_type_of_self = None
    crack2fortran.stypy_type_store = module_type_store
    crack2fortran.stypy_function_name = 'crack2fortran'
    crack2fortran.stypy_param_names_list = ['block']
    crack2fortran.stypy_varargs_param_name = None
    crack2fortran.stypy_kwargs_param_name = None
    crack2fortran.stypy_call_defaults = defaults
    crack2fortran.stypy_call_varargs = varargs
    crack2fortran.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'crack2fortran', ['block'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'crack2fortran', localization, ['block'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'crack2fortran(...)' code ##################

    # Marking variables as global (line 3226)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 3226, 4), 'f2py_version')
    
    # Assigning a BinOp to a Name (line 3228):
    
    # Assigning a BinOp to a Name (line 3228):
    
    # Call to crack2fortrangen(...): (line 3228)
    # Processing the call arguments (line 3228)
    # Getting the type of 'block' (line 3228)
    block_90145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3228, 27), 'block', False)
    # Processing the call keyword arguments (line 3228)
    kwargs_90146 = {}
    # Getting the type of 'crack2fortrangen' (line 3228)
    crack2fortrangen_90144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3228, 10), 'crack2fortrangen', False)
    # Calling crack2fortrangen(args, kwargs) (line 3228)
    crack2fortrangen_call_result_90147 = invoke(stypy.reporting.localization.Localization(__file__, 3228, 10), crack2fortrangen_90144, *[block_90145], **kwargs_90146)
    
    str_90148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3228, 36), 'str', '\n')
    # Applying the binary operator '+' (line 3228)
    result_add_90149 = python_operator(stypy.reporting.localization.Localization(__file__, 3228, 10), '+', crack2fortrangen_call_result_90147, str_90148)
    
    # Assigning a type to the variable 'pyf' (line 3228)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3228, 4), 'pyf', result_add_90149)
    
    # Assigning a Str to a Name (line 3229):
    
    # Assigning a Str to a Name (line 3229):
    str_90150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3231, (-1)), 'str', '!    -*- f90 -*-\n! Note: the context of this file is case sensitive.\n')
    # Assigning a type to the variable 'header' (line 3229)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3229, 4), 'header', str_90150)
    
    # Assigning a BinOp to a Name (line 3232):
    
    # Assigning a BinOp to a Name (line 3232):
    str_90151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3235, (-1)), 'str', '\n! This file was auto-generated with f2py (version:%s).\n! See http://cens.ioc.ee/projects/f2py2e/\n')
    # Getting the type of 'f2py_version' (line 3235)
    f2py_version_90152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3235, 7), 'f2py_version')
    # Applying the binary operator '%' (line 3235)
    result_mod_90153 = python_operator(stypy.reporting.localization.Localization(__file__, 3235, (-1)), '%', str_90151, f2py_version_90152)
    
    # Assigning a type to the variable 'footer' (line 3232)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3232, 4), 'footer', result_mod_90153)
    # Getting the type of 'header' (line 3236)
    header_90154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3236, 11), 'header')
    # Getting the type of 'pyf' (line 3236)
    pyf_90155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3236, 20), 'pyf')
    # Applying the binary operator '+' (line 3236)
    result_add_90156 = python_operator(stypy.reporting.localization.Localization(__file__, 3236, 11), '+', header_90154, pyf_90155)
    
    # Getting the type of 'footer' (line 3236)
    footer_90157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3236, 26), 'footer')
    # Applying the binary operator '+' (line 3236)
    result_add_90158 = python_operator(stypy.reporting.localization.Localization(__file__, 3236, 24), '+', result_add_90156, footer_90157)
    
    # Assigning a type to the variable 'stypy_return_type' (line 3236)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3236, 4), 'stypy_return_type', result_add_90158)
    
    # ################# End of 'crack2fortran(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'crack2fortran' in the type store
    # Getting the type of 'stypy_return_type' (line 3225)
    stypy_return_type_90159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3225, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_90159)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'crack2fortran'
    return stypy_return_type_90159

# Assigning a type to the variable 'crack2fortran' (line 3225)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3225, 0), 'crack2fortran', crack2fortran)

if (__name__ == '__main__'):
    
    # Assigning a List to a Name (line 3239):
    
    # Assigning a List to a Name (line 3239):
    
    # Obtaining an instance of the builtin type 'list' (line 3239)
    list_90160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3239, 12), 'list')
    # Adding type elements to the builtin type 'list' instance (line 3239)
    
    # Assigning a type to the variable 'files' (line 3239)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3239, 4), 'files', list_90160)
    
    # Assigning a List to a Name (line 3240):
    
    # Assigning a List to a Name (line 3240):
    
    # Obtaining an instance of the builtin type 'list' (line 3240)
    list_90161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3240, 12), 'list')
    # Adding type elements to the builtin type 'list' instance (line 3240)
    
    # Assigning a type to the variable 'funcs' (line 3240)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3240, 4), 'funcs', list_90161)
    
    # Assigning a Num to a Name (line 3241):
    
    # Assigning a Num to a Name (line 3241):
    int_90162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3241, 8), 'int')
    # Assigning a type to the variable 'f' (line 3241)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3241, 4), 'f', int_90162)
    
    # Assigning a Num to a Name (line 3242):
    
    # Assigning a Num to a Name (line 3242):
    int_90163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3242, 9), 'int')
    # Assigning a type to the variable 'f2' (line 3242)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3242, 4), 'f2', int_90163)
    
    # Assigning a Num to a Name (line 3243):
    
    # Assigning a Num to a Name (line 3243):
    int_90164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3243, 9), 'int')
    # Assigning a type to the variable 'f3' (line 3243)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3243, 4), 'f3', int_90164)
    
    # Assigning a Num to a Name (line 3244):
    
    # Assigning a Num to a Name (line 3244):
    int_90165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3244, 20), 'int')
    # Assigning a type to the variable 'showblocklist' (line 3244)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3244, 4), 'showblocklist', int_90165)
    
    
    # Obtaining the type of the subscript
    int_90166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3245, 22), 'int')
    slice_90167 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 3245, 13), int_90166, None, None)
    # Getting the type of 'sys' (line 3245)
    sys_90168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3245, 13), 'sys')
    # Obtaining the member 'argv' of a type (line 3245)
    argv_90169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3245, 13), sys_90168, 'argv')
    # Obtaining the member '__getitem__' of a type (line 3245)
    getitem___90170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3245, 13), argv_90169, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3245)
    subscript_call_result_90171 = invoke(stypy.reporting.localization.Localization(__file__, 3245, 13), getitem___90170, slice_90167)
    
    # Testing the type of a for loop iterable (line 3245)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 3245, 4), subscript_call_result_90171)
    # Getting the type of the for loop variable (line 3245)
    for_loop_var_90172 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 3245, 4), subscript_call_result_90171)
    # Assigning a type to the variable 'l' (line 3245)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3245, 4), 'l', for_loop_var_90172)
    # SSA begins for a for statement (line 3245)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'l' (line 3246)
    l_90173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3246, 11), 'l')
    str_90174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3246, 16), 'str', '')
    # Applying the binary operator '==' (line 3246)
    result_eq_90175 = python_operator(stypy.reporting.localization.Localization(__file__, 3246, 11), '==', l_90173, str_90174)
    
    # Testing the type of an if condition (line 3246)
    if_condition_90176 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3246, 8), result_eq_90175)
    # Assigning a type to the variable 'if_condition_90176' (line 3246)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3246, 8), 'if_condition_90176', if_condition_90176)
    # SSA begins for if statement (line 3246)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    pass
    # SSA branch for the else part of an if statement (line 3246)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    int_90177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3248, 15), 'int')
    # Getting the type of 'l' (line 3248)
    l_90178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3248, 13), 'l')
    # Obtaining the member '__getitem__' of a type (line 3248)
    getitem___90179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3248, 13), l_90178, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3248)
    subscript_call_result_90180 = invoke(stypy.reporting.localization.Localization(__file__, 3248, 13), getitem___90179, int_90177)
    
    str_90181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3248, 21), 'str', ':')
    # Applying the binary operator '==' (line 3248)
    result_eq_90182 = python_operator(stypy.reporting.localization.Localization(__file__, 3248, 13), '==', subscript_call_result_90180, str_90181)
    
    # Testing the type of an if condition (line 3248)
    if_condition_90183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3248, 13), result_eq_90182)
    # Assigning a type to the variable 'if_condition_90183' (line 3248)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3248, 13), 'if_condition_90183', if_condition_90183)
    # SSA begins for if statement (line 3248)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 3249):
    
    # Assigning a Num to a Name (line 3249):
    int_90184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3249, 16), 'int')
    # Assigning a type to the variable 'f' (line 3249)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3249, 12), 'f', int_90184)
    # SSA branch for the else part of an if statement (line 3248)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'l' (line 3250)
    l_90185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3250, 13), 'l')
    str_90186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3250, 18), 'str', '-quiet')
    # Applying the binary operator '==' (line 3250)
    result_eq_90187 = python_operator(stypy.reporting.localization.Localization(__file__, 3250, 13), '==', l_90185, str_90186)
    
    # Testing the type of an if condition (line 3250)
    if_condition_90188 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3250, 13), result_eq_90187)
    # Assigning a type to the variable 'if_condition_90188' (line 3250)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3250, 13), 'if_condition_90188', if_condition_90188)
    # SSA begins for if statement (line 3250)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 3251):
    
    # Assigning a Num to a Name (line 3251):
    int_90189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3251, 20), 'int')
    # Assigning a type to the variable 'quiet' (line 3251)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3251, 12), 'quiet', int_90189)
    
    # Assigning a Num to a Name (line 3252):
    
    # Assigning a Num to a Name (line 3252):
    int_90190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3252, 22), 'int')
    # Assigning a type to the variable 'verbose' (line 3252)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3252, 12), 'verbose', int_90190)
    # SSA branch for the else part of an if statement (line 3250)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'l' (line 3253)
    l_90191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3253, 13), 'l')
    str_90192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3253, 18), 'str', '-verbose')
    # Applying the binary operator '==' (line 3253)
    result_eq_90193 = python_operator(stypy.reporting.localization.Localization(__file__, 3253, 13), '==', l_90191, str_90192)
    
    # Testing the type of an if condition (line 3253)
    if_condition_90194 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3253, 13), result_eq_90193)
    # Assigning a type to the variable 'if_condition_90194' (line 3253)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3253, 13), 'if_condition_90194', if_condition_90194)
    # SSA begins for if statement (line 3253)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 3254):
    
    # Assigning a Num to a Name (line 3254):
    int_90195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3254, 22), 'int')
    # Assigning a type to the variable 'verbose' (line 3254)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3254, 12), 'verbose', int_90195)
    
    # Assigning a Num to a Name (line 3255):
    
    # Assigning a Num to a Name (line 3255):
    int_90196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3255, 20), 'int')
    # Assigning a type to the variable 'quiet' (line 3255)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3255, 12), 'quiet', int_90196)
    # SSA branch for the else part of an if statement (line 3253)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'l' (line 3256)
    l_90197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3256, 13), 'l')
    str_90198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3256, 18), 'str', '-fix')
    # Applying the binary operator '==' (line 3256)
    result_eq_90199 = python_operator(stypy.reporting.localization.Localization(__file__, 3256, 13), '==', l_90197, str_90198)
    
    # Testing the type of an if condition (line 3256)
    if_condition_90200 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3256, 13), result_eq_90199)
    # Assigning a type to the variable 'if_condition_90200' (line 3256)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3256, 13), 'if_condition_90200', if_condition_90200)
    # SSA begins for if statement (line 3256)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'strictf77' (line 3257)
    strictf77_90201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3257, 15), 'strictf77')
    # Testing the type of an if condition (line 3257)
    if_condition_90202 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3257, 12), strictf77_90201)
    # Assigning a type to the variable 'if_condition_90202' (line 3257)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3257, 12), 'if_condition_90202', if_condition_90202)
    # SSA begins for if statement (line 3257)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 3258)
    # Processing the call arguments (line 3258)
    str_90204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3259, 20), 'str', 'Use option -f90 before -fix if Fortran 90 code is in fix form.\n')
    int_90205 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3259, 88), 'int')
    # Processing the call keyword arguments (line 3258)
    kwargs_90206 = {}
    # Getting the type of 'outmess' (line 3258)
    outmess_90203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3258, 16), 'outmess', False)
    # Calling outmess(args, kwargs) (line 3258)
    outmess_call_result_90207 = invoke(stypy.reporting.localization.Localization(__file__, 3258, 16), outmess_90203, *[str_90204, int_90205], **kwargs_90206)
    
    # SSA join for if statement (line 3257)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Num to a Name (line 3260):
    
    # Assigning a Num to a Name (line 3260):
    int_90208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3260, 28), 'int')
    # Assigning a type to the variable 'skipemptyends' (line 3260)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3260, 12), 'skipemptyends', int_90208)
    
    # Assigning a Str to a Name (line 3261):
    
    # Assigning a Str to a Name (line 3261):
    str_90209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3261, 29), 'str', 'fix')
    # Assigning a type to the variable 'sourcecodeform' (line 3261)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3261, 12), 'sourcecodeform', str_90209)
    # SSA branch for the else part of an if statement (line 3256)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'l' (line 3262)
    l_90210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3262, 13), 'l')
    str_90211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3262, 18), 'str', '-skipemptyends')
    # Applying the binary operator '==' (line 3262)
    result_eq_90212 = python_operator(stypy.reporting.localization.Localization(__file__, 3262, 13), '==', l_90210, str_90211)
    
    # Testing the type of an if condition (line 3262)
    if_condition_90213 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3262, 13), result_eq_90212)
    # Assigning a type to the variable 'if_condition_90213' (line 3262)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3262, 13), 'if_condition_90213', if_condition_90213)
    # SSA begins for if statement (line 3262)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 3263):
    
    # Assigning a Num to a Name (line 3263):
    int_90214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3263, 28), 'int')
    # Assigning a type to the variable 'skipemptyends' (line 3263)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3263, 12), 'skipemptyends', int_90214)
    # SSA branch for the else part of an if statement (line 3262)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'l' (line 3264)
    l_90215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3264, 13), 'l')
    str_90216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3264, 18), 'str', '--ignore-contains')
    # Applying the binary operator '==' (line 3264)
    result_eq_90217 = python_operator(stypy.reporting.localization.Localization(__file__, 3264, 13), '==', l_90215, str_90216)
    
    # Testing the type of an if condition (line 3264)
    if_condition_90218 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3264, 13), result_eq_90217)
    # Assigning a type to the variable 'if_condition_90218' (line 3264)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3264, 13), 'if_condition_90218', if_condition_90218)
    # SSA begins for if statement (line 3264)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 3265):
    
    # Assigning a Num to a Name (line 3265):
    int_90219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3265, 29), 'int')
    # Assigning a type to the variable 'ignorecontains' (line 3265)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3265, 12), 'ignorecontains', int_90219)
    # SSA branch for the else part of an if statement (line 3264)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'l' (line 3266)
    l_90220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3266, 13), 'l')
    str_90221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3266, 18), 'str', '-f77')
    # Applying the binary operator '==' (line 3266)
    result_eq_90222 = python_operator(stypy.reporting.localization.Localization(__file__, 3266, 13), '==', l_90220, str_90221)
    
    # Testing the type of an if condition (line 3266)
    if_condition_90223 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3266, 13), result_eq_90222)
    # Assigning a type to the variable 'if_condition_90223' (line 3266)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3266, 13), 'if_condition_90223', if_condition_90223)
    # SSA begins for if statement (line 3266)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 3267):
    
    # Assigning a Num to a Name (line 3267):
    int_90224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3267, 24), 'int')
    # Assigning a type to the variable 'strictf77' (line 3267)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3267, 12), 'strictf77', int_90224)
    
    # Assigning a Str to a Name (line 3268):
    
    # Assigning a Str to a Name (line 3268):
    str_90225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3268, 29), 'str', 'fix')
    # Assigning a type to the variable 'sourcecodeform' (line 3268)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3268, 12), 'sourcecodeform', str_90225)
    # SSA branch for the else part of an if statement (line 3266)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'l' (line 3269)
    l_90226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3269, 13), 'l')
    str_90227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3269, 18), 'str', '-f90')
    # Applying the binary operator '==' (line 3269)
    result_eq_90228 = python_operator(stypy.reporting.localization.Localization(__file__, 3269, 13), '==', l_90226, str_90227)
    
    # Testing the type of an if condition (line 3269)
    if_condition_90229 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3269, 13), result_eq_90228)
    # Assigning a type to the variable 'if_condition_90229' (line 3269)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3269, 13), 'if_condition_90229', if_condition_90229)
    # SSA begins for if statement (line 3269)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 3270):
    
    # Assigning a Num to a Name (line 3270):
    int_90230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3270, 24), 'int')
    # Assigning a type to the variable 'strictf77' (line 3270)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3270, 12), 'strictf77', int_90230)
    
    # Assigning a Str to a Name (line 3271):
    
    # Assigning a Str to a Name (line 3271):
    str_90231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3271, 29), 'str', 'free')
    # Assigning a type to the variable 'sourcecodeform' (line 3271)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3271, 12), 'sourcecodeform', str_90231)
    
    # Assigning a Num to a Name (line 3272):
    
    # Assigning a Num to a Name (line 3272):
    int_90232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3272, 28), 'int')
    # Assigning a type to the variable 'skipemptyends' (line 3272)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3272, 12), 'skipemptyends', int_90232)
    # SSA branch for the else part of an if statement (line 3269)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'l' (line 3273)
    l_90233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3273, 13), 'l')
    str_90234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3273, 18), 'str', '-h')
    # Applying the binary operator '==' (line 3273)
    result_eq_90235 = python_operator(stypy.reporting.localization.Localization(__file__, 3273, 13), '==', l_90233, str_90234)
    
    # Testing the type of an if condition (line 3273)
    if_condition_90236 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3273, 13), result_eq_90235)
    # Assigning a type to the variable 'if_condition_90236' (line 3273)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3273, 13), 'if_condition_90236', if_condition_90236)
    # SSA begins for if statement (line 3273)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 3274):
    
    # Assigning a Num to a Name (line 3274):
    int_90237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3274, 17), 'int')
    # Assigning a type to the variable 'f2' (line 3274)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3274, 12), 'f2', int_90237)
    # SSA branch for the else part of an if statement (line 3273)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'l' (line 3275)
    l_90238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3275, 13), 'l')
    str_90239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3275, 18), 'str', '-show')
    # Applying the binary operator '==' (line 3275)
    result_eq_90240 = python_operator(stypy.reporting.localization.Localization(__file__, 3275, 13), '==', l_90238, str_90239)
    
    # Testing the type of an if condition (line 3275)
    if_condition_90241 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3275, 13), result_eq_90240)
    # Assigning a type to the variable 'if_condition_90241' (line 3275)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3275, 13), 'if_condition_90241', if_condition_90241)
    # SSA begins for if statement (line 3275)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 3276):
    
    # Assigning a Num to a Name (line 3276):
    int_90242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3276, 28), 'int')
    # Assigning a type to the variable 'showblocklist' (line 3276)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3276, 12), 'showblocklist', int_90242)
    # SSA branch for the else part of an if statement (line 3275)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'l' (line 3277)
    l_90243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3277, 13), 'l')
    str_90244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3277, 18), 'str', '-m')
    # Applying the binary operator '==' (line 3277)
    result_eq_90245 = python_operator(stypy.reporting.localization.Localization(__file__, 3277, 13), '==', l_90243, str_90244)
    
    # Testing the type of an if condition (line 3277)
    if_condition_90246 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3277, 13), result_eq_90245)
    # Assigning a type to the variable 'if_condition_90246' (line 3277)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3277, 13), 'if_condition_90246', if_condition_90246)
    # SSA begins for if statement (line 3277)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 3278):
    
    # Assigning a Num to a Name (line 3278):
    int_90247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3278, 17), 'int')
    # Assigning a type to the variable 'f3' (line 3278)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3278, 12), 'f3', int_90247)
    # SSA branch for the else part of an if statement (line 3277)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Obtaining the type of the subscript
    int_90248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3279, 15), 'int')
    # Getting the type of 'l' (line 3279)
    l_90249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3279, 13), 'l')
    # Obtaining the member '__getitem__' of a type (line 3279)
    getitem___90250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3279, 13), l_90249, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 3279)
    subscript_call_result_90251 = invoke(stypy.reporting.localization.Localization(__file__, 3279, 13), getitem___90250, int_90248)
    
    str_90252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3279, 21), 'str', '-')
    # Applying the binary operator '==' (line 3279)
    result_eq_90253 = python_operator(stypy.reporting.localization.Localization(__file__, 3279, 13), '==', subscript_call_result_90251, str_90252)
    
    # Testing the type of an if condition (line 3279)
    if_condition_90254 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3279, 13), result_eq_90253)
    # Assigning a type to the variable 'if_condition_90254' (line 3279)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3279, 13), 'if_condition_90254', if_condition_90254)
    # SSA begins for if statement (line 3279)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to errmess(...): (line 3280)
    # Processing the call arguments (line 3280)
    str_90256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3280, 20), 'str', 'Unknown option %s\n')
    
    # Call to repr(...): (line 3280)
    # Processing the call arguments (line 3280)
    # Getting the type of 'l' (line 3280)
    l_90258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3280, 49), 'l', False)
    # Processing the call keyword arguments (line 3280)
    kwargs_90259 = {}
    # Getting the type of 'repr' (line 3280)
    repr_90257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3280, 44), 'repr', False)
    # Calling repr(args, kwargs) (line 3280)
    repr_call_result_90260 = invoke(stypy.reporting.localization.Localization(__file__, 3280, 44), repr_90257, *[l_90258], **kwargs_90259)
    
    # Applying the binary operator '%' (line 3280)
    result_mod_90261 = python_operator(stypy.reporting.localization.Localization(__file__, 3280, 20), '%', str_90256, repr_call_result_90260)
    
    # Processing the call keyword arguments (line 3280)
    kwargs_90262 = {}
    # Getting the type of 'errmess' (line 3280)
    errmess_90255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3280, 12), 'errmess', False)
    # Calling errmess(args, kwargs) (line 3280)
    errmess_call_result_90263 = invoke(stypy.reporting.localization.Localization(__file__, 3280, 12), errmess_90255, *[result_mod_90261], **kwargs_90262)
    
    # SSA branch for the else part of an if statement (line 3279)
    module_type_store.open_ssa_branch('else')
    
    # Getting the type of 'f2' (line 3281)
    f2_90264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3281, 13), 'f2')
    # Testing the type of an if condition (line 3281)
    if_condition_90265 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3281, 13), f2_90264)
    # Assigning a type to the variable 'if_condition_90265' (line 3281)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3281, 13), 'if_condition_90265', if_condition_90265)
    # SSA begins for if statement (line 3281)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 3282):
    
    # Assigning a Num to a Name (line 3282):
    int_90266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3282, 17), 'int')
    # Assigning a type to the variable 'f2' (line 3282)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3282, 12), 'f2', int_90266)
    
    # Assigning a Name to a Name (line 3283):
    
    # Assigning a Name to a Name (line 3283):
    # Getting the type of 'l' (line 3283)
    l_90267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3283, 26), 'l')
    # Assigning a type to the variable 'pyffilename' (line 3283)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3283, 12), 'pyffilename', l_90267)
    # SSA branch for the else part of an if statement (line 3281)
    module_type_store.open_ssa_branch('else')
    
    # Getting the type of 'f3' (line 3284)
    f3_90268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3284, 13), 'f3')
    # Testing the type of an if condition (line 3284)
    if_condition_90269 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3284, 13), f3_90268)
    # Assigning a type to the variable 'if_condition_90269' (line 3284)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3284, 13), 'if_condition_90269', if_condition_90269)
    # SSA begins for if statement (line 3284)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 3285):
    
    # Assigning a Num to a Name (line 3285):
    int_90270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3285, 17), 'int')
    # Assigning a type to the variable 'f3' (line 3285)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3285, 12), 'f3', int_90270)
    
    # Assigning a Name to a Name (line 3286):
    
    # Assigning a Name to a Name (line 3286):
    # Getting the type of 'l' (line 3286)
    l_90271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3286, 28), 'l')
    # Assigning a type to the variable 'f77modulename' (line 3286)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3286, 12), 'f77modulename', l_90271)
    # SSA branch for the else part of an if statement (line 3284)
    module_type_store.open_ssa_branch('else')
    
    # Getting the type of 'f' (line 3287)
    f_90272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3287, 13), 'f')
    # Testing the type of an if condition (line 3287)
    if_condition_90273 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3287, 13), f_90272)
    # Assigning a type to the variable 'if_condition_90273' (line 3287)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3287, 13), 'if_condition_90273', if_condition_90273)
    # SSA begins for if statement (line 3287)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # SSA begins for try-except statement (line 3288)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to close(...): (line 3289)
    # Processing the call keyword arguments (line 3289)
    kwargs_90279 = {}
    
    # Call to open(...): (line 3289)
    # Processing the call arguments (line 3289)
    # Getting the type of 'l' (line 3289)
    l_90275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3289, 21), 'l', False)
    # Processing the call keyword arguments (line 3289)
    kwargs_90276 = {}
    # Getting the type of 'open' (line 3289)
    open_90274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3289, 16), 'open', False)
    # Calling open(args, kwargs) (line 3289)
    open_call_result_90277 = invoke(stypy.reporting.localization.Localization(__file__, 3289, 16), open_90274, *[l_90275], **kwargs_90276)
    
    # Obtaining the member 'close' of a type (line 3289)
    close_90278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3289, 16), open_call_result_90277, 'close')
    # Calling close(args, kwargs) (line 3289)
    close_call_result_90280 = invoke(stypy.reporting.localization.Localization(__file__, 3289, 16), close_90278, *[], **kwargs_90279)
    
    
    # Call to append(...): (line 3290)
    # Processing the call arguments (line 3290)
    # Getting the type of 'l' (line 3290)
    l_90283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3290, 29), 'l', False)
    # Processing the call keyword arguments (line 3290)
    kwargs_90284 = {}
    # Getting the type of 'files' (line 3290)
    files_90281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3290, 16), 'files', False)
    # Obtaining the member 'append' of a type (line 3290)
    append_90282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3290, 16), files_90281, 'append')
    # Calling append(args, kwargs) (line 3290)
    append_call_result_90285 = invoke(stypy.reporting.localization.Localization(__file__, 3290, 16), append_90282, *[l_90283], **kwargs_90284)
    
    # SSA branch for the except part of a try statement (line 3288)
    # SSA branch for the except 'IOError' branch of a try statement (line 3288)
    # Storing handler type
    module_type_store.open_ssa_branch('except')
    # Getting the type of 'IOError' (line 3291)
    IOError_90286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3291, 19), 'IOError')
    # Assigning a type to the variable 'detail' (line 3291)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3291, 12), 'detail', IOError_90286)
    
    # Call to errmess(...): (line 3292)
    # Processing the call arguments (line 3292)
    str_90288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3292, 24), 'str', 'IOError: %s\n')
    
    # Call to str(...): (line 3292)
    # Processing the call arguments (line 3292)
    # Getting the type of 'detail' (line 3292)
    detail_90290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3292, 46), 'detail', False)
    # Processing the call keyword arguments (line 3292)
    kwargs_90291 = {}
    # Getting the type of 'str' (line 3292)
    str_90289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3292, 42), 'str', False)
    # Calling str(args, kwargs) (line 3292)
    str_call_result_90292 = invoke(stypy.reporting.localization.Localization(__file__, 3292, 42), str_90289, *[detail_90290], **kwargs_90291)
    
    # Applying the binary operator '%' (line 3292)
    result_mod_90293 = python_operator(stypy.reporting.localization.Localization(__file__, 3292, 24), '%', str_90288, str_call_result_90292)
    
    # Processing the call keyword arguments (line 3292)
    kwargs_90294 = {}
    # Getting the type of 'errmess' (line 3292)
    errmess_90287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3292, 16), 'errmess', False)
    # Calling errmess(args, kwargs) (line 3292)
    errmess_call_result_90295 = invoke(stypy.reporting.localization.Localization(__file__, 3292, 16), errmess_90287, *[result_mod_90293], **kwargs_90294)
    
    # SSA join for try-except statement (line 3288)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 3287)
    module_type_store.open_ssa_branch('else')
    
    # Call to append(...): (line 3294)
    # Processing the call arguments (line 3294)
    # Getting the type of 'l' (line 3294)
    l_90298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3294, 25), 'l', False)
    # Processing the call keyword arguments (line 3294)
    kwargs_90299 = {}
    # Getting the type of 'funcs' (line 3294)
    funcs_90296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3294, 12), 'funcs', False)
    # Obtaining the member 'append' of a type (line 3294)
    append_90297 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3294, 12), funcs_90296, 'append')
    # Calling append(args, kwargs) (line 3294)
    append_call_result_90300 = invoke(stypy.reporting.localization.Localization(__file__, 3294, 12), append_90297, *[l_90298], **kwargs_90299)
    
    # SSA join for if statement (line 3287)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3284)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3281)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3279)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3277)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3275)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3273)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3269)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3266)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3264)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3262)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3256)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3253)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3250)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3248)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 3246)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'strictf77' (line 3295)
    strictf77_90301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3295, 11), 'strictf77')
    # Applying the 'not' unary operator (line 3295)
    result_not__90302 = python_operator(stypy.reporting.localization.Localization(__file__, 3295, 7), 'not', strictf77_90301)
    
    # Getting the type of 'f77modulename' (line 3295)
    f77modulename_90303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3295, 25), 'f77modulename')
    # Applying the binary operator 'and' (line 3295)
    result_and_keyword_90304 = python_operator(stypy.reporting.localization.Localization(__file__, 3295, 7), 'and', result_not__90302, f77modulename_90303)
    
    # Getting the type of 'skipemptyends' (line 3295)
    skipemptyends_90305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3295, 47), 'skipemptyends')
    # Applying the 'not' unary operator (line 3295)
    result_not__90306 = python_operator(stypy.reporting.localization.Localization(__file__, 3295, 43), 'not', skipemptyends_90305)
    
    # Applying the binary operator 'and' (line 3295)
    result_and_keyword_90307 = python_operator(stypy.reporting.localization.Localization(__file__, 3295, 7), 'and', result_and_keyword_90304, result_not__90306)
    
    # Testing the type of an if condition (line 3295)
    if_condition_90308 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3295, 4), result_and_keyword_90307)
    # Assigning a type to the variable 'if_condition_90308' (line 3295)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3295, 4), 'if_condition_90308', if_condition_90308)
    # SSA begins for if statement (line 3295)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 3296)
    # Processing the call arguments (line 3296)
    str_90310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3301, (-1)), 'str', '  Warning: You have specifyied module name for non Fortran 77 code\n  that should not need one (expect if you are scanning F90 code\n  for non module blocks but then you should use flag -skipemptyends\n  and also be sure that the files do not contain programs without program statement).\n')
    int_90311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3301, 5), 'int')
    # Processing the call keyword arguments (line 3296)
    kwargs_90312 = {}
    # Getting the type of 'outmess' (line 3296)
    outmess_90309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3296, 8), 'outmess', False)
    # Calling outmess(args, kwargs) (line 3296)
    outmess_call_result_90313 = invoke(stypy.reporting.localization.Localization(__file__, 3296, 8), outmess_90309, *[str_90310, int_90311], **kwargs_90312)
    
    # SSA join for if statement (line 3295)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 3303):
    
    # Assigning a Call to a Name (line 3303):
    
    # Call to crackfortran(...): (line 3303)
    # Processing the call arguments (line 3303)
    # Getting the type of 'files' (line 3303)
    files_90315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3303, 28), 'files', False)
    # Getting the type of 'funcs' (line 3303)
    funcs_90316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3303, 35), 'funcs', False)
    # Processing the call keyword arguments (line 3303)
    kwargs_90317 = {}
    # Getting the type of 'crackfortran' (line 3303)
    crackfortran_90314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3303, 15), 'crackfortran', False)
    # Calling crackfortran(args, kwargs) (line 3303)
    crackfortran_call_result_90318 = invoke(stypy.reporting.localization.Localization(__file__, 3303, 15), crackfortran_90314, *[files_90315, funcs_90316], **kwargs_90317)
    
    # Assigning a type to the variable 'postlist' (line 3303)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3303, 4), 'postlist', crackfortran_call_result_90318)
    
    # Getting the type of 'pyffilename' (line 3304)
    pyffilename_90319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3304, 7), 'pyffilename')
    # Testing the type of an if condition (line 3304)
    if_condition_90320 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3304, 4), pyffilename_90319)
    # Assigning a type to the variable 'if_condition_90320' (line 3304)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3304, 4), 'if_condition_90320', if_condition_90320)
    # SSA begins for if statement (line 3304)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 3305)
    # Processing the call arguments (line 3305)
    str_90322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3305, 16), 'str', 'Writing fortran code to file %s\n')
    
    # Call to repr(...): (line 3305)
    # Processing the call arguments (line 3305)
    # Getting the type of 'pyffilename' (line 3305)
    pyffilename_90324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3305, 59), 'pyffilename', False)
    # Processing the call keyword arguments (line 3305)
    kwargs_90325 = {}
    # Getting the type of 'repr' (line 3305)
    repr_90323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3305, 54), 'repr', False)
    # Calling repr(args, kwargs) (line 3305)
    repr_call_result_90326 = invoke(stypy.reporting.localization.Localization(__file__, 3305, 54), repr_90323, *[pyffilename_90324], **kwargs_90325)
    
    # Applying the binary operator '%' (line 3305)
    result_mod_90327 = python_operator(stypy.reporting.localization.Localization(__file__, 3305, 16), '%', str_90322, repr_call_result_90326)
    
    int_90328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3305, 73), 'int')
    # Processing the call keyword arguments (line 3305)
    kwargs_90329 = {}
    # Getting the type of 'outmess' (line 3305)
    outmess_90321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3305, 8), 'outmess', False)
    # Calling outmess(args, kwargs) (line 3305)
    outmess_call_result_90330 = invoke(stypy.reporting.localization.Localization(__file__, 3305, 8), outmess_90321, *[result_mod_90327, int_90328], **kwargs_90329)
    
    
    # Assigning a Call to a Name (line 3306):
    
    # Assigning a Call to a Name (line 3306):
    
    # Call to crack2fortran(...): (line 3306)
    # Processing the call arguments (line 3306)
    # Getting the type of 'postlist' (line 3306)
    postlist_90332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3306, 28), 'postlist', False)
    # Processing the call keyword arguments (line 3306)
    kwargs_90333 = {}
    # Getting the type of 'crack2fortran' (line 3306)
    crack2fortran_90331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3306, 14), 'crack2fortran', False)
    # Calling crack2fortran(args, kwargs) (line 3306)
    crack2fortran_call_result_90334 = invoke(stypy.reporting.localization.Localization(__file__, 3306, 14), crack2fortran_90331, *[postlist_90332], **kwargs_90333)
    
    # Assigning a type to the variable 'pyf' (line 3306)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3306, 8), 'pyf', crack2fortran_call_result_90334)
    
    # Assigning a Call to a Name (line 3307):
    
    # Assigning a Call to a Name (line 3307):
    
    # Call to open(...): (line 3307)
    # Processing the call arguments (line 3307)
    # Getting the type of 'pyffilename' (line 3307)
    pyffilename_90336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3307, 17), 'pyffilename', False)
    str_90337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3307, 30), 'str', 'w')
    # Processing the call keyword arguments (line 3307)
    kwargs_90338 = {}
    # Getting the type of 'open' (line 3307)
    open_90335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3307, 12), 'open', False)
    # Calling open(args, kwargs) (line 3307)
    open_call_result_90339 = invoke(stypy.reporting.localization.Localization(__file__, 3307, 12), open_90335, *[pyffilename_90336, str_90337], **kwargs_90338)
    
    # Assigning a type to the variable 'f' (line 3307)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3307, 8), 'f', open_call_result_90339)
    
    # Call to write(...): (line 3308)
    # Processing the call arguments (line 3308)
    # Getting the type of 'pyf' (line 3308)
    pyf_90342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3308, 16), 'pyf', False)
    # Processing the call keyword arguments (line 3308)
    kwargs_90343 = {}
    # Getting the type of 'f' (line 3308)
    f_90340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3308, 8), 'f', False)
    # Obtaining the member 'write' of a type (line 3308)
    write_90341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3308, 8), f_90340, 'write')
    # Calling write(args, kwargs) (line 3308)
    write_call_result_90344 = invoke(stypy.reporting.localization.Localization(__file__, 3308, 8), write_90341, *[pyf_90342], **kwargs_90343)
    
    
    # Call to close(...): (line 3309)
    # Processing the call keyword arguments (line 3309)
    kwargs_90347 = {}
    # Getting the type of 'f' (line 3309)
    f_90345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3309, 8), 'f', False)
    # Obtaining the member 'close' of a type (line 3309)
    close_90346 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3309, 8), f_90345, 'close')
    # Calling close(args, kwargs) (line 3309)
    close_call_result_90348 = invoke(stypy.reporting.localization.Localization(__file__, 3309, 8), close_90346, *[], **kwargs_90347)
    
    # SSA join for if statement (line 3304)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'showblocklist' (line 3310)
    showblocklist_90349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3310, 7), 'showblocklist')
    # Testing the type of an if condition (line 3310)
    if_condition_90350 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3310, 4), showblocklist_90349)
    # Assigning a type to the variable 'if_condition_90350' (line 3310)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3310, 4), 'if_condition_90350', if_condition_90350)
    # SSA begins for if statement (line 3310)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to show(...): (line 3311)
    # Processing the call arguments (line 3311)
    # Getting the type of 'postlist' (line 3311)
    postlist_90352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3311, 13), 'postlist', False)
    # Processing the call keyword arguments (line 3311)
    kwargs_90353 = {}
    # Getting the type of 'show' (line 3311)
    show_90351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3311, 8), 'show', False)
    # Calling show(args, kwargs) (line 3311)
    show_call_result_90354 = invoke(stypy.reporting.localization.Localization(__file__, 3311, 8), show_90351, *[postlist_90352], **kwargs_90353)
    
    # SSA join for if statement (line 3310)
    module_type_store = module_type_store.join_ssa_context()
    


# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
