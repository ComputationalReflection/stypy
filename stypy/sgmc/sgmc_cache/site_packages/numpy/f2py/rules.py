
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: #!/usr/bin/env python
2: '''
3: 
4: Rules for building C/API module with f2py2e.
5: 
6: Here is a skeleton of a new wrapper function (13Dec2001):
7: 
8: wrapper_function(args)
9:   declarations
10:   get_python_arguments, say, `a' and `b'
11: 
12:   get_a_from_python
13:   if (successful) {
14: 
15:     get_b_from_python
16:     if (successful) {
17: 
18:       callfortran
19:       if (succesful) {
20: 
21:         put_a_to_python
22:         if (succesful) {
23: 
24:           put_b_to_python
25:           if (succesful) {
26: 
27:             buildvalue = ...
28: 
29:           }
30: 
31:         }
32: 
33:       }
34: 
35:     }
36:     cleanup_b
37: 
38:   }
39:   cleanup_a
40: 
41:   return buildvalue
42: 
43: Copyright 1999,2000 Pearu Peterson all rights reserved,
44: Pearu Peterson <pearu@ioc.ee>
45: Permission to use, modify, and distribute this software is given under the
46: terms of the NumPy License.
47: 
48: NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
49: $Date: 2005/08/30 08:58:42 $
50: Pearu Peterson
51: 
52: '''
53: from __future__ import division, absolute_import, print_function
54: 
55: __version__ = "$Revision: 1.129 $"[10:-1]
56: 
57: from . import __version__
58: f2py_version = __version__.version
59: 
60: import os
61: import time
62: import copy
63: 
64: from .auxfuncs import (
65:     applyrules, debugcapi, dictappend, errmess, gentitle, getargs2,
66:     hascallstatement, hasexternals, hasinitvalue, hasnote, hasresultnote,
67:     isarray, isarrayofstrings, iscomplex, iscomplexarray,
68:     iscomplexfunction, iscomplexfunction_warn, isdummyroutine, isexternal,
69:     isfunction, isfunction_wrap, isint1array, isintent_aux, isintent_c,
70:     isintent_callback, isintent_copy, isintent_hide, isintent_inout,
71:     isintent_nothide, isintent_out, isintent_overwrite, islogical,
72:     islong_complex, islong_double, islong_doublefunction, islong_long,
73:     islong_longfunction, ismoduleroutine, isoptional, isrequired, isscalar,
74:     issigned_long_longarray, isstring, isstringarray, isstringfunction,
75:     issubroutine, issubroutine_wrap, isthreadsafe, isunsigned,
76:     isunsigned_char, isunsigned_chararray, isunsigned_long_long,
77:     isunsigned_long_longarray, isunsigned_short, isunsigned_shortarray,
78:     l_and, l_not, l_or, outmess, replace, stripcomma,
79: )
80: 
81: from . import capi_maps
82: from . import cfuncs
83: from . import common_rules
84: from . import use_rules
85: from . import f90mod_rules
86: from . import func2subr
87: 
88: options = {}
89: sepdict = {}
90: #for k in ['need_cfuncs']: sepdict[k]=','
91: for k in ['decl',
92:           'frompyobj',
93:           'cleanupfrompyobj',
94:           'topyarr', 'method',
95:           'pyobjfrom', 'closepyobjfrom',
96:           'freemem',
97:           'userincludes',
98:           'includes0', 'includes', 'typedefs', 'typedefs_generated',
99:           'cppmacros', 'cfuncs', 'callbacks',
100:           'latexdoc',
101:           'restdoc',
102:           'routine_defs', 'externroutines',
103:           'initf2pywraphooks',
104:           'commonhooks', 'initcommonhooks',
105:           'f90modhooks', 'initf90modhooks']:
106:     sepdict[k] = '\n'
107: 
108: #################### Rules for C/API module #################
109: 
110: module_rules = {
111:     'modulebody': '''\
112: /* File: #modulename#module.c
113:  * This file is auto-generated with f2py (version:#f2py_version#).
114:  * f2py is a Fortran to Python Interface Generator (FPIG), Second Edition,
115:  * written by Pearu Peterson <pearu@cens.ioc.ee>.
116:  * See http://cens.ioc.ee/projects/f2py2e/
117:  * Generation date: ''' + time.asctime(time.localtime(time.time())) + '''
118:  * $R''' + '''evision:$
119:  * $D''' + '''ate:$
120:  * Do not edit this file directly unless you know what you are doing!!!
121:  */
122: 
123: #ifdef __cplusplus
124: extern \"C\" {
125: #endif
126: 
127: ''' + gentitle("See f2py2e/cfuncs.py: includes") + '''
128: #includes#
129: #includes0#
130: 
131: ''' + gentitle("See f2py2e/rules.py: mod_rules['modulebody']") + '''
132: static PyObject *#modulename#_error;
133: static PyObject *#modulename#_module;
134: 
135: ''' + gentitle("See f2py2e/cfuncs.py: typedefs") + '''
136: #typedefs#
137: 
138: ''' + gentitle("See f2py2e/cfuncs.py: typedefs_generated") + '''
139: #typedefs_generated#
140: 
141: ''' + gentitle("See f2py2e/cfuncs.py: cppmacros") + '''
142: #cppmacros#
143: 
144: ''' + gentitle("See f2py2e/cfuncs.py: cfuncs") + '''
145: #cfuncs#
146: 
147: ''' + gentitle("See f2py2e/cfuncs.py: userincludes") + '''
148: #userincludes#
149: 
150: ''' + gentitle("See f2py2e/capi_rules.py: usercode") + '''
151: #usercode#
152: 
153: /* See f2py2e/rules.py */
154: #externroutines#
155: 
156: ''' + gentitle("See f2py2e/capi_rules.py: usercode1") + '''
157: #usercode1#
158: 
159: ''' + gentitle("See f2py2e/cb_rules.py: buildcallback") + '''
160: #callbacks#
161: 
162: ''' + gentitle("See f2py2e/rules.py: buildapi") + '''
163: #body#
164: 
165: ''' + gentitle("See f2py2e/f90mod_rules.py: buildhooks") + '''
166: #f90modhooks#
167: 
168: ''' + gentitle("See f2py2e/rules.py: module_rules['modulebody']") + '''
169: 
170: ''' + gentitle("See f2py2e/common_rules.py: buildhooks") + '''
171: #commonhooks#
172: 
173: ''' + gentitle("See f2py2e/rules.py") + '''
174: 
175: static FortranDataDef f2py_routine_defs[] = {
176: #routine_defs#
177: \t{NULL}
178: };
179: 
180: static PyMethodDef f2py_module_methods[] = {
181: #pymethoddef#
182: \t{NULL,NULL}
183: };
184: 
185: #if PY_VERSION_HEX >= 0x03000000
186: static struct PyModuleDef moduledef = {
187: \tPyModuleDef_HEAD_INIT,
188: \t"#modulename#",
189: \tNULL,
190: \t-1,
191: \tf2py_module_methods,
192: \tNULL,
193: \tNULL,
194: \tNULL,
195: \tNULL
196: };
197: #endif
198: 
199: #if PY_VERSION_HEX >= 0x03000000
200: #define RETVAL m
201: PyMODINIT_FUNC PyInit_#modulename#(void) {
202: #else
203: #define RETVAL
204: PyMODINIT_FUNC init#modulename#(void) {
205: #endif
206: \tint i;
207: \tPyObject *m,*d, *s;
208: #if PY_VERSION_HEX >= 0x03000000
209: \tm = #modulename#_module = PyModule_Create(&moduledef);
210: #else
211: \tm = #modulename#_module = Py_InitModule(\"#modulename#\", f2py_module_methods);
212: #endif
213: \tPy_TYPE(&PyFortran_Type) = &PyType_Type;
214: \timport_array();
215: \tif (PyErr_Occurred())
216: \t\t{PyErr_SetString(PyExc_ImportError, \"can't initialize module #modulename# (failed to import numpy)\"); return RETVAL;}
217: \td = PyModule_GetDict(m);
218: \ts = PyString_FromString(\"$R''' + '''evision: $\");
219: \tPyDict_SetItemString(d, \"__version__\", s);
220: #if PY_VERSION_HEX >= 0x03000000
221: \ts = PyUnicode_FromString(
222: #else
223: \ts = PyString_FromString(
224: #endif
225: \t\t\"This module '#modulename#' is auto-generated with f2py (version:#f2py_version#).\\nFunctions:\\n\"\n#docs#\".\");
226: \tPyDict_SetItemString(d, \"__doc__\", s);
227: \t#modulename#_error = PyErr_NewException (\"#modulename#.error\", NULL, NULL);
228: \tPy_DECREF(s);
229: \tfor(i=0;f2py_routine_defs[i].name!=NULL;i++)
230: \t\tPyDict_SetItemString(d, f2py_routine_defs[i].name,PyFortranObject_NewAsAttr(&f2py_routine_defs[i]));
231: #initf2pywraphooks#
232: #initf90modhooks#
233: #initcommonhooks#
234: #interface_usercode#
235: 
236: #ifdef F2PY_REPORT_ATEXIT
237: \tif (! PyErr_Occurred())
238: \t\ton_exit(f2py_report_on_exit,(void*)\"#modulename#\");
239: #endif
240: 
241: \treturn RETVAL;
242: }
243: #ifdef __cplusplus
244: }
245: #endif
246: ''',
247:     'separatorsfor': {'latexdoc': '\n\n',
248:                       'restdoc': '\n\n'},
249:     'latexdoc': ['\\section{Module \\texttt{#texmodulename#}}\n',
250:                  '#modnote#\n',
251:                  '#latexdoc#'],
252:     'restdoc': ['Module #modulename#\n' + '=' * 80,
253:                 '\n#restdoc#']
254: }
255: 
256: defmod_rules = [
257:     {'body': '/*eof body*/',
258:      'method': '/*eof method*/',
259:      'externroutines': '/*eof externroutines*/',
260:      'routine_defs': '/*eof routine_defs*/',
261:      'initf90modhooks': '/*eof initf90modhooks*/',
262:      'initf2pywraphooks': '/*eof initf2pywraphooks*/',
263:      'initcommonhooks': '/*eof initcommonhooks*/',
264:      'latexdoc': '',
265:      'restdoc': '',
266:      'modnote': {hasnote: '#note#', l_not(hasnote): ''},
267:      }
268: ]
269: 
270: routine_rules = {
271:     'separatorsfor': sepdict,
272:     'body': '''
273: #begintitle#
274: static char doc_#apiname#[] = \"\\\n#docreturn##name#(#docsignatureshort#)\\n\\nWrapper for ``#name#``.\\\n\\n#docstrsigns#\";
275: /* #declfortranroutine# */
276: static PyObject *#apiname#(const PyObject *capi_self,
277:                            PyObject *capi_args,
278:                            PyObject *capi_keywds,
279:                            #functype# (*f2py_func)(#callprotoargument#)) {
280: \tPyObject * volatile capi_buildvalue = NULL;
281: \tvolatile int f2py_success = 1;
282: #decl#
283: \tstatic char *capi_kwlist[] = {#kwlist##kwlistopt##kwlistxa#NULL};
284: #usercode#
285: #routdebugenter#
286: #ifdef F2PY_REPORT_ATEXIT
287: f2py_start_clock();
288: #endif
289: \tif (!PyArg_ParseTupleAndKeywords(capi_args,capi_keywds,\\
290: \t\t\"#argformat##keyformat##xaformat#:#pyname#\",\\
291: \t\tcapi_kwlist#args_capi##keys_capi##keys_xa#))\n\t\treturn NULL;
292: #frompyobj#
293: /*end of frompyobj*/
294: #ifdef F2PY_REPORT_ATEXIT
295: f2py_start_call_clock();
296: #endif
297: #callfortranroutine#
298: if (PyErr_Occurred())
299:   f2py_success = 0;
300: #ifdef F2PY_REPORT_ATEXIT
301: f2py_stop_call_clock();
302: #endif
303: /*end of callfortranroutine*/
304: \t\tif (f2py_success) {
305: #pyobjfrom#
306: /*end of pyobjfrom*/
307: \t\tCFUNCSMESS(\"Building return value.\\n\");
308: \t\tcapi_buildvalue = Py_BuildValue(\"#returnformat#\"#return#);
309: /*closepyobjfrom*/
310: #closepyobjfrom#
311: \t\t} /*if (f2py_success) after callfortranroutine*/
312: /*cleanupfrompyobj*/
313: #cleanupfrompyobj#
314: \tif (capi_buildvalue == NULL) {
315: #routdebugfailure#
316: \t} else {
317: #routdebugleave#
318: \t}
319: \tCFUNCSMESS(\"Freeing memory.\\n\");
320: #freemem#
321: #ifdef F2PY_REPORT_ATEXIT
322: f2py_stop_clock();
323: #endif
324: \treturn capi_buildvalue;
325: }
326: #endtitle#
327: ''',
328:     'routine_defs': '#routine_def#',
329:     'initf2pywraphooks': '#initf2pywraphook#',
330:     'externroutines': '#declfortranroutine#',
331:     'doc': '#docreturn##name#(#docsignature#)',
332:     'docshort': '#docreturn##name#(#docsignatureshort#)',
333:     'docs': '"\t#docreturn##name#(#docsignature#)\\n"\n',
334:     'need': ['arrayobject.h', 'CFUNCSMESS', 'MINMAX'],
335:     'cppmacros': {debugcapi: '#define DEBUGCFUNCS'},
336:     'latexdoc': ['\\subsection{Wrapper function \\texttt{#texname#}}\n',
337:                  '''
338: \\noindent{{}\\verb@#docreturn##name#@{}}\\texttt{(#latexdocsignatureshort#)}
339: #routnote#
340: 
341: #latexdocstrsigns#
342: '''],
343:     'restdoc': ['Wrapped function ``#name#``\n' + '-' * 80,
344: 
345:                 ]
346: }
347: 
348: ################## Rules for C/API function ##############
349: 
350: rout_rules = [
351:     {  # Init
352:         'separatorsfor': {'callfortranroutine': '\n', 'routdebugenter': '\n', 'decl': '\n',
353:                           'routdebugleave': '\n', 'routdebugfailure': '\n',
354:                           'setjmpbuf': ' || ',
355:                           'docstrreq': '\n', 'docstropt': '\n', 'docstrout': '\n',
356:                           'docstrcbs': '\n', 'docstrsigns': '\\n"\n"',
357:                           'latexdocstrsigns': '\n',
358:                           'latexdocstrreq': '\n', 'latexdocstropt': '\n',
359:                           'latexdocstrout': '\n', 'latexdocstrcbs': '\n',
360:                           },
361:         'kwlist': '', 'kwlistopt': '', 'callfortran': '', 'callfortranappend': '',
362:         'docsign': '', 'docsignopt': '', 'decl': '/*decl*/',
363:         'freemem': '/*freemem*/',
364:         'docsignshort': '', 'docsignoptshort': '',
365:         'docstrsigns': '', 'latexdocstrsigns': '',
366:         'docstrreq': '\\nParameters\\n----------',
367:         'docstropt': '\\nOther Parameters\\n----------------',
368:         'docstrout': '\\nReturns\\n-------',
369:         'docstrcbs': '\\nNotes\\n-----\\nCall-back functions::\\n',
370:         'latexdocstrreq': '\\noindent Required arguments:',
371:         'latexdocstropt': '\\noindent Optional arguments:',
372:         'latexdocstrout': '\\noindent Return objects:',
373:         'latexdocstrcbs': '\\noindent Call-back functions:',
374:         'args_capi': '', 'keys_capi': '', 'functype': '',
375:         'frompyobj': '/*frompyobj*/',
376:         # this list will be reversed
377:         'cleanupfrompyobj': ['/*end of cleanupfrompyobj*/'],
378:         'pyobjfrom': '/*pyobjfrom*/',
379:         # this list will be reversed
380:         'closepyobjfrom': ['/*end of closepyobjfrom*/'],
381:         'topyarr': '/*topyarr*/', 'routdebugleave': '/*routdebugleave*/',
382:         'routdebugenter': '/*routdebugenter*/',
383:         'routdebugfailure': '/*routdebugfailure*/',
384:         'callfortranroutine': '/*callfortranroutine*/',
385:         'argformat': '', 'keyformat': '', 'need_cfuncs': '',
386:         'docreturn': '', 'return': '', 'returnformat': '', 'rformat': '',
387:         'kwlistxa': '', 'keys_xa': '', 'xaformat': '', 'docsignxa': '', 'docsignxashort': '',
388:         'initf2pywraphook': '',
389:         'routnote': {hasnote: '--- #note#', l_not(hasnote): ''},
390:     }, {
391:         'apiname': 'f2py_rout_#modulename#_#name#',
392:         'pyname': '#modulename#.#name#',
393:         'decl': '',
394:         '_check': l_not(ismoduleroutine)
395:     }, {
396:         'apiname': 'f2py_rout_#modulename#_#f90modulename#_#name#',
397:         'pyname': '#modulename#.#f90modulename#.#name#',
398:         'decl': '',
399:         '_check': ismoduleroutine
400:     }, {  # Subroutine
401:         'functype': 'void',
402:         'declfortranroutine': {l_and(l_not(l_or(ismoduleroutine, isintent_c)), l_not(isdummyroutine)): 'extern void #F_FUNC#(#fortranname#,#FORTRANNAME#)(#callprotoargument#);',
403:                                l_and(l_not(ismoduleroutine), isintent_c, l_not(isdummyroutine)): 'extern void #fortranname#(#callprotoargument#);',
404:                                ismoduleroutine: '',
405:                                isdummyroutine: ''
406:                                },
407:         'routine_def': {l_not(l_or(ismoduleroutine, isintent_c, isdummyroutine)): '\t{\"#name#\",-1,{{-1}},0,(char *)#F_FUNC#(#fortranname#,#FORTRANNAME#),(f2py_init_func)#apiname#,doc_#apiname#},',
408:                         l_and(l_not(ismoduleroutine), isintent_c, l_not(isdummyroutine)): '\t{\"#name#\",-1,{{-1}},0,(char *)#fortranname#,(f2py_init_func)#apiname#,doc_#apiname#},',
409:                         l_and(l_not(ismoduleroutine), isdummyroutine): '\t{\"#name#\",-1,{{-1}},0,NULL,(f2py_init_func)#apiname#,doc_#apiname#},',
410:                         },
411:         'need': {l_and(l_not(l_or(ismoduleroutine, isintent_c)), l_not(isdummyroutine)): 'F_FUNC'},
412:         'callfortranroutine': [
413:             {debugcapi: [
414:                 '''\tfprintf(stderr,\"debug-capi:Fortran subroutine `#fortranname#(#callfortran#)\'\\n\");''']},
415:             {hasexternals: '''\
416: \t\tif (#setjmpbuf#) {
417: \t\t\tf2py_success = 0;
418: \t\t} else {'''},
419:             {isthreadsafe: '\t\t\tPy_BEGIN_ALLOW_THREADS'},
420:             {hascallstatement: '''\t\t\t\t#callstatement#;
421: \t\t\t\t/*(*f2py_func)(#callfortran#);*/'''},
422:             {l_not(l_or(hascallstatement, isdummyroutine))
423:                    : '\t\t\t\t(*f2py_func)(#callfortran#);'},
424:             {isthreadsafe: '\t\t\tPy_END_ALLOW_THREADS'},
425:             {hasexternals: '''\t\t}'''}
426:         ],
427:         '_check': l_and(issubroutine, l_not(issubroutine_wrap)),
428:     }, {  # Wrapped function
429:         'functype': 'void',
430:         'declfortranroutine': {l_not(l_or(ismoduleroutine, isdummyroutine)): 'extern void #F_WRAPPEDFUNC#(#name_lower#,#NAME#)(#callprotoargument#);',
431:                                isdummyroutine: '',
432:                                },
433: 
434:         'routine_def': {l_not(l_or(ismoduleroutine, isdummyroutine)): '\t{\"#name#\",-1,{{-1}},0,(char *)#F_WRAPPEDFUNC#(#name_lower#,#NAME#),(f2py_init_func)#apiname#,doc_#apiname#},',
435:                         isdummyroutine: '\t{\"#name#\",-1,{{-1}},0,NULL,(f2py_init_func)#apiname#,doc_#apiname#},',
436:                         },
437:         'initf2pywraphook': {l_not(l_or(ismoduleroutine, isdummyroutine)): '''
438:     {
439:       extern #ctype# #F_FUNC#(#name_lower#,#NAME#)(void);
440:       PyObject* o = PyDict_GetItemString(d,"#name#");
441:       PyObject_SetAttrString(o,"_cpointer", F2PyCapsule_FromVoidPtr((void*)#F_FUNC#(#name_lower#,#NAME#),NULL));
442: #if PY_VERSION_HEX >= 0x03000000
443:       PyObject_SetAttrString(o,"__name__", PyUnicode_FromString("#name#"));
444: #else
445:       PyObject_SetAttrString(o,"__name__", PyString_FromString("#name#"));
446: #endif
447:     }
448:     '''},
449:         'need': {l_not(l_or(ismoduleroutine, isdummyroutine)): ['F_WRAPPEDFUNC', 'F_FUNC']},
450:         'callfortranroutine': [
451:             {debugcapi: [
452:                 '''\tfprintf(stderr,\"debug-capi:Fortran subroutine `f2pywrap#name_lower#(#callfortran#)\'\\n\");''']},
453:             {hasexternals: '''\
454: \tif (#setjmpbuf#) {
455: \t\tf2py_success = 0;
456: \t} else {'''},
457:             {isthreadsafe: '\tPy_BEGIN_ALLOW_THREADS'},
458:             {l_not(l_or(hascallstatement, isdummyroutine))
459:                    : '\t(*f2py_func)(#callfortran#);'},
460:             {hascallstatement:
461:                 '\t#callstatement#;\n\t/*(*f2py_func)(#callfortran#);*/'},
462:             {isthreadsafe: '\tPy_END_ALLOW_THREADS'},
463:             {hasexternals: '\t}'}
464:         ],
465:         '_check': isfunction_wrap,
466:     }, {  # Wrapped subroutine
467:         'functype': 'void',
468:         'declfortranroutine': {l_not(l_or(ismoduleroutine, isdummyroutine)): 'extern void #F_WRAPPEDFUNC#(#name_lower#,#NAME#)(#callprotoargument#);',
469:                                isdummyroutine: '',
470:                                },
471: 
472:         'routine_def': {l_not(l_or(ismoduleroutine, isdummyroutine)): '\t{\"#name#\",-1,{{-1}},0,(char *)#F_WRAPPEDFUNC#(#name_lower#,#NAME#),(f2py_init_func)#apiname#,doc_#apiname#},',
473:                         isdummyroutine: '\t{\"#name#\",-1,{{-1}},0,NULL,(f2py_init_func)#apiname#,doc_#apiname#},',
474:                         },
475:         'initf2pywraphook': {l_not(l_or(ismoduleroutine, isdummyroutine)): '''
476:     {
477:       extern void #F_FUNC#(#name_lower#,#NAME#)(void);
478:       PyObject* o = PyDict_GetItemString(d,"#name#");
479:       PyObject_SetAttrString(o,"_cpointer", F2PyCapsule_FromVoidPtr((void*)#F_FUNC#(#name_lower#,#NAME#),NULL));
480: #if PY_VERSION_HEX >= 0x03000000
481:       PyObject_SetAttrString(o,"__name__", PyUnicode_FromString("#name#"));
482: #else
483:       PyObject_SetAttrString(o,"__name__", PyString_FromString("#name#"));
484: #endif
485:     }
486:     '''},
487:         'need': {l_not(l_or(ismoduleroutine, isdummyroutine)): ['F_WRAPPEDFUNC', 'F_FUNC']},
488:         'callfortranroutine': [
489:             {debugcapi: [
490:                 '''\tfprintf(stderr,\"debug-capi:Fortran subroutine `f2pywrap#name_lower#(#callfortran#)\'\\n\");''']},
491:             {hasexternals: '''\
492: \tif (#setjmpbuf#) {
493: \t\tf2py_success = 0;
494: \t} else {'''},
495:             {isthreadsafe: '\tPy_BEGIN_ALLOW_THREADS'},
496:             {l_not(l_or(hascallstatement, isdummyroutine))
497:                    : '\t(*f2py_func)(#callfortran#);'},
498:             {hascallstatement:
499:                 '\t#callstatement#;\n\t/*(*f2py_func)(#callfortran#);*/'},
500:             {isthreadsafe: '\tPy_END_ALLOW_THREADS'},
501:             {hasexternals: '\t}'}
502:         ],
503:         '_check': issubroutine_wrap,
504:     }, {  # Function
505:         'functype': '#ctype#',
506:         'docreturn': {l_not(isintent_hide): '#rname#,'},
507:         'docstrout': '#pydocsignout#',
508:         'latexdocstrout': ['\\item[]{{}\\verb@#pydocsignout#@{}}',
509:                            {hasresultnote: '--- #resultnote#'}],
510:         'callfortranroutine': [{l_and(debugcapi, isstringfunction): '''\
511: #ifdef USESCOMPAQFORTRAN
512: \tfprintf(stderr,\"debug-capi:Fortran function #ctype# #fortranname#(#callcompaqfortran#)\\n\");
513: #else
514: \tfprintf(stderr,\"debug-capi:Fortran function #ctype# #fortranname#(#callfortran#)\\n\");
515: #endif
516: '''},
517:                                {l_and(debugcapi, l_not(isstringfunction)): '''\
518: \tfprintf(stderr,\"debug-capi:Fortran function #ctype# #fortranname#(#callfortran#)\\n\");
519: '''}
520:                                ],
521:         '_check': l_and(isfunction, l_not(isfunction_wrap))
522:     }, {  # Scalar function
523:         'declfortranroutine': {l_and(l_not(l_or(ismoduleroutine, isintent_c)), l_not(isdummyroutine)): 'extern #ctype# #F_FUNC#(#fortranname#,#FORTRANNAME#)(#callprotoargument#);',
524:                                l_and(l_not(ismoduleroutine), isintent_c, l_not(isdummyroutine)): 'extern #ctype# #fortranname#(#callprotoargument#);',
525:                                isdummyroutine: ''
526:                                },
527:         'routine_def': {l_and(l_not(l_or(ismoduleroutine, isintent_c)), l_not(isdummyroutine)): '\t{\"#name#\",-1,{{-1}},0,(char *)#F_FUNC#(#fortranname#,#FORTRANNAME#),(f2py_init_func)#apiname#,doc_#apiname#},',
528:                         l_and(l_not(ismoduleroutine), isintent_c, l_not(isdummyroutine)): '\t{\"#name#\",-1,{{-1}},0,(char *)#fortranname#,(f2py_init_func)#apiname#,doc_#apiname#},',
529:                         isdummyroutine: '\t{\"#name#\",-1,{{-1}},0,NULL,(f2py_init_func)#apiname#,doc_#apiname#},',
530:                         },
531:         'decl': [{iscomplexfunction_warn: '\t#ctype# #name#_return_value={0,0};',
532:                   l_not(iscomplexfunction): '\t#ctype# #name#_return_value=0;'},
533:                  {iscomplexfunction:
534:                   '\tPyObject *#name#_return_value_capi = Py_None;'}
535:                  ],
536:         'callfortranroutine': [
537:             {hasexternals: '''\
538: \tif (#setjmpbuf#) {
539: \t\tf2py_success = 0;
540: \t} else {'''},
541:             {isthreadsafe: '\tPy_BEGIN_ALLOW_THREADS'},
542:             {hascallstatement: '''\t#callstatement#;
543: /*\t#name#_return_value = (*f2py_func)(#callfortran#);*/
544: '''},
545:             {l_not(l_or(hascallstatement, isdummyroutine))
546:                    : '\t#name#_return_value = (*f2py_func)(#callfortran#);'},
547:             {isthreadsafe: '\tPy_END_ALLOW_THREADS'},
548:             {hasexternals: '\t}'},
549:             {l_and(debugcapi, iscomplexfunction)
550:                    : '\tfprintf(stderr,"#routdebugshowvalue#\\n",#name#_return_value.r,#name#_return_value.i);'},
551:             {l_and(debugcapi, l_not(iscomplexfunction)): '\tfprintf(stderr,"#routdebugshowvalue#\\n",#name#_return_value);'}],
552:         'pyobjfrom': {iscomplexfunction: '\t#name#_return_value_capi = pyobj_from_#ctype#1(#name#_return_value);'},
553:         'need': [{l_not(isdummyroutine): 'F_FUNC'},
554:                  {iscomplexfunction: 'pyobj_from_#ctype#1'},
555:                  {islong_longfunction: 'long_long'},
556:                  {islong_doublefunction: 'long_double'}],
557:         'returnformat': {l_not(isintent_hide): '#rformat#'},
558:         'return': {iscomplexfunction: ',#name#_return_value_capi',
559:                    l_not(l_or(iscomplexfunction, isintent_hide)): ',#name#_return_value'},
560:         '_check': l_and(isfunction, l_not(isstringfunction), l_not(isfunction_wrap))
561:     }, {  # String function # in use for --no-wrap
562:         'declfortranroutine': 'extern void #F_FUNC#(#fortranname#,#FORTRANNAME#)(#callprotoargument#);',
563:         'routine_def': {l_not(l_or(ismoduleroutine, isintent_c)):
564:                         '\t{\"#name#\",-1,{{-1}},0,(char *)#F_FUNC#(#fortranname#,#FORTRANNAME#),(f2py_init_func)#apiname#,doc_#apiname#},',
565:                         l_and(l_not(ismoduleroutine), isintent_c):
566:                         '\t{\"#name#\",-1,{{-1}},0,(char *)#fortranname#,(f2py_init_func)#apiname#,doc_#apiname#},'
567:                         },
568:         'decl': ['\t#ctype# #name#_return_value = NULL;',
569:                  '\tint #name#_return_value_len = 0;'],
570:         'callfortran':'#name#_return_value,#name#_return_value_len,',
571:         'callfortranroutine':['\t#name#_return_value_len = #rlength#;',
572:                               '\tif ((#name#_return_value = (string)malloc(sizeof(char)*(#name#_return_value_len+1))) == NULL) {',
573:                               '\t\tPyErr_SetString(PyExc_MemoryError, \"out of memory\");',
574:                               '\t\tf2py_success = 0;',
575:                               '\t} else {',
576:                               "\t\t(#name#_return_value)[#name#_return_value_len] = '\\0';",
577:                               '\t}',
578:                               '\tif (f2py_success) {',
579:                               {hasexternals: '''\
580: \t\tif (#setjmpbuf#) {
581: \t\t\tf2py_success = 0;
582: \t\t} else {'''},
583:                               {isthreadsafe: '\t\tPy_BEGIN_ALLOW_THREADS'},
584:                               '''\
585: #ifdef USESCOMPAQFORTRAN
586: \t\t(*f2py_func)(#callcompaqfortran#);
587: #else
588: \t\t(*f2py_func)(#callfortran#);
589: #endif
590: ''',
591:                               {isthreadsafe: '\t\tPy_END_ALLOW_THREADS'},
592:                               {hasexternals: '\t\t}'},
593:                               {debugcapi:
594:                                   '\t\tfprintf(stderr,"#routdebugshowvalue#\\n",#name#_return_value_len,#name#_return_value);'},
595:                               '\t} /* if (f2py_success) after (string)malloc */',
596:                               ],
597:         'returnformat': '#rformat#',
598:         'return': ',#name#_return_value',
599:         'freemem': '\tSTRINGFREE(#name#_return_value);',
600:         'need': ['F_FUNC', '#ctype#', 'STRINGFREE'],
601:         '_check':l_and(isstringfunction, l_not(isfunction_wrap))  # ???obsolete
602:     },
603:     {  # Debugging
604:         'routdebugenter': '\tfprintf(stderr,"debug-capi:Python C/API function #modulename#.#name#(#docsignature#)\\n");',
605:         'routdebugleave': '\tfprintf(stderr,"debug-capi:Python C/API function #modulename#.#name#: successful.\\n");',
606:         'routdebugfailure': '\tfprintf(stderr,"debug-capi:Python C/API function #modulename#.#name#: failure.\\n");',
607:         '_check': debugcapi
608:     }
609: ]
610: 
611: ################ Rules for arguments ##################
612: 
613: typedef_need_dict = {islong_long: 'long_long',
614:                      islong_double: 'long_double',
615:                      islong_complex: 'complex_long_double',
616:                      isunsigned_char: 'unsigned_char',
617:                      isunsigned_short: 'unsigned_short',
618:                      isunsigned: 'unsigned',
619:                      isunsigned_long_long: 'unsigned_long_long',
620:                      isunsigned_chararray: 'unsigned_char',
621:                      isunsigned_shortarray: 'unsigned_short',
622:                      isunsigned_long_longarray: 'unsigned_long_long',
623:                      issigned_long_longarray: 'long_long',
624:                      }
625: 
626: aux_rules = [
627:     {
628:         'separatorsfor': sepdict
629:     },
630:     {  # Common
631:         'frompyobj': ['\t/* Processing auxiliary variable #varname# */',
632:                       {debugcapi: '\tfprintf(stderr,"#vardebuginfo#\\n");'}, ],
633:         'cleanupfrompyobj': '\t/* End of cleaning variable #varname# */',
634:         'need': typedef_need_dict,
635:     },
636:     # Scalars (not complex)
637:     {  # Common
638:         'decl': '\t#ctype# #varname# = 0;',
639:         'need': {hasinitvalue: 'math.h'},
640:         'frompyobj': {hasinitvalue: '\t#varname# = #init#;'},
641:         '_check': l_and(isscalar, l_not(iscomplex)),
642:     },
643:     {
644:         'return': ',#varname#',
645:         'docstrout': '#pydocsignout#',
646:         'docreturn': '#outvarname#,',
647:         'returnformat': '#varrformat#',
648:         '_check': l_and(isscalar, l_not(iscomplex), isintent_out),
649:     },
650:     # Complex scalars
651:     {  # Common
652:         'decl': '\t#ctype# #varname#;',
653:         'frompyobj': {hasinitvalue: '\t#varname#.r = #init.r#, #varname#.i = #init.i#;'},
654:         '_check': iscomplex
655:     },
656:     # String
657:     {  # Common
658:         'decl': ['\t#ctype# #varname# = NULL;',
659:                  '\tint slen(#varname#);',
660:                  ],
661:         'need':['len..'],
662:         '_check':isstring
663:     },
664:     # Array
665:     {  # Common
666:         'decl': ['\t#ctype# *#varname# = NULL;',
667:                  '\tnpy_intp #varname#_Dims[#rank#] = {#rank*[-1]#};',
668:                  '\tconst int #varname#_Rank = #rank#;',
669:                  ],
670:         'need':['len..', {hasinitvalue: 'forcomb'}, {hasinitvalue: 'CFUNCSMESS'}],
671:         '_check': isarray
672:     },
673:     # Scalararray
674:     {  # Common
675:         '_check': l_and(isarray, l_not(iscomplexarray))
676:     }, {  # Not hidden
677:         '_check': l_and(isarray, l_not(iscomplexarray), isintent_nothide)
678:     },
679:     # Integer*1 array
680:     {'need': '#ctype#',
681:      '_check': isint1array,
682:      '_depend': ''
683:      },
684:     # Integer*-1 array
685:     {'need': '#ctype#',
686:      '_check': isunsigned_chararray,
687:      '_depend': ''
688:      },
689:     # Integer*-2 array
690:     {'need': '#ctype#',
691:      '_check': isunsigned_shortarray,
692:      '_depend': ''
693:      },
694:     # Integer*-8 array
695:     {'need': '#ctype#',
696:      '_check': isunsigned_long_longarray,
697:      '_depend': ''
698:      },
699:     # Complexarray
700:     {'need': '#ctype#',
701:      '_check': iscomplexarray,
702:      '_depend': ''
703:      },
704:     # Stringarray
705:     {
706:         'callfortranappend': {isarrayofstrings: 'flen(#varname#),'},
707:         'need': 'string',
708:         '_check': isstringarray
709:     }
710: ]
711: 
712: arg_rules = [
713:     {
714:         'separatorsfor': sepdict
715:     },
716:     {  # Common
717:         'frompyobj': ['\t/* Processing variable #varname# */',
718:                       {debugcapi: '\tfprintf(stderr,"#vardebuginfo#\\n");'}, ],
719:         'cleanupfrompyobj': '\t/* End of cleaning variable #varname# */',
720:         '_depend': '',
721:         'need': typedef_need_dict,
722:     },
723:     # Doc signatures
724:     {
725:         'docstropt': {l_and(isoptional, isintent_nothide): '#pydocsign#'},
726:         'docstrreq': {l_and(isrequired, isintent_nothide): '#pydocsign#'},
727:         'docstrout': {isintent_out: '#pydocsignout#'},
728:         'latexdocstropt': {l_and(isoptional, isintent_nothide): ['\\item[]{{}\\verb@#pydocsign#@{}}',
729:                                                                  {hasnote: '--- #note#'}]},
730:         'latexdocstrreq': {l_and(isrequired, isintent_nothide): ['\\item[]{{}\\verb@#pydocsign#@{}}',
731:                                                                  {hasnote: '--- #note#'}]},
732:         'latexdocstrout': {isintent_out: ['\\item[]{{}\\verb@#pydocsignout#@{}}',
733:                                           {l_and(hasnote, isintent_hide): '--- #note#',
734:                                            l_and(hasnote, isintent_nothide): '--- See above.'}]},
735:         'depend': ''
736:     },
737:     # Required/Optional arguments
738:     {
739:         'kwlist': '"#varname#",',
740:         'docsign': '#varname#,',
741:         '_check': l_and(isintent_nothide, l_not(isoptional))
742:     },
743:     {
744:         'kwlistopt': '"#varname#",',
745:         'docsignopt': '#varname#=#showinit#,',
746:         'docsignoptshort': '#varname#,',
747:         '_check': l_and(isintent_nothide, isoptional)
748:     },
749:     # Docstring/BuildValue
750:     {
751:         'docreturn': '#outvarname#,',
752:         'returnformat': '#varrformat#',
753:         '_check': isintent_out
754:     },
755:     # Externals (call-back functions)
756:     {  # Common
757:         'docsignxa': {isintent_nothide: '#varname#_extra_args=(),'},
758:         'docsignxashort': {isintent_nothide: '#varname#_extra_args,'},
759:         'docstropt': {isintent_nothide: '#varname#_extra_args : input tuple, optional\\n    Default: ()'},
760:         'docstrcbs': '#cbdocstr#',
761:         'latexdocstrcbs': '\\item[] #cblatexdocstr#',
762:         'latexdocstropt': {isintent_nothide: '\\item[]{{}\\verb@#varname#_extra_args := () input tuple@{}} --- Extra arguments for call-back function {{}\\verb@#varname#@{}}.'},
763:         'decl': ['\tPyObject *#varname#_capi = Py_None;',
764:                  '\tPyTupleObject *#varname#_xa_capi = NULL;',
765:                  '\tPyTupleObject *#varname#_args_capi = NULL;',
766:                  '\tint #varname#_nofargs_capi = 0;',
767:                  {l_not(isintent_callback):
768:                   '\t#cbname#_typedef #varname#_cptr;'}
769:                  ],
770:         'kwlistxa': {isintent_nothide: '"#varname#_extra_args",'},
771:         'argformat': {isrequired: 'O'},
772:         'keyformat': {isoptional: 'O'},
773:         'xaformat': {isintent_nothide: 'O!'},
774:         'args_capi': {isrequired: ',&#varname#_capi'},
775:         'keys_capi': {isoptional: ',&#varname#_capi'},
776:         'keys_xa': ',&PyTuple_Type,&#varname#_xa_capi',
777:         'setjmpbuf': '(setjmp(#cbname#_jmpbuf))',
778:         'callfortran': {l_not(isintent_callback): '#varname#_cptr,'},
779:         'need': ['#cbname#', 'setjmp.h'],
780:         '_check':isexternal
781:     },
782:     {
783:         'frompyobj': [{l_not(isintent_callback): '''\
784: if(F2PyCapsule_Check(#varname#_capi)) {
785:   #varname#_cptr = F2PyCapsule_AsVoidPtr(#varname#_capi);
786: } else {
787:   #varname#_cptr = #cbname#;
788: }
789: '''}, {isintent_callback: '''\
790: if (#varname#_capi==Py_None) {
791:   #varname#_capi = PyObject_GetAttrString(#modulename#_module,\"#varname#\");
792:   if (#varname#_capi) {
793:     if (#varname#_xa_capi==NULL) {
794:       if (PyObject_HasAttrString(#modulename#_module,\"#varname#_extra_args\")) {
795:         PyObject* capi_tmp = PyObject_GetAttrString(#modulename#_module,\"#varname#_extra_args\");
796:         if (capi_tmp)
797:           #varname#_xa_capi = (PyTupleObject *)PySequence_Tuple(capi_tmp);
798:         else
799:           #varname#_xa_capi = (PyTupleObject *)Py_BuildValue(\"()\");
800:         if (#varname#_xa_capi==NULL) {
801:           PyErr_SetString(#modulename#_error,\"Failed to convert #modulename#.#varname#_extra_args to tuple.\\n\");
802:           return NULL;
803:         }
804:       }
805:     }
806:   }
807:   if (#varname#_capi==NULL) {
808:     PyErr_SetString(#modulename#_error,\"Callback #varname# not defined (as an argument or module #modulename# attribute).\\n\");
809:     return NULL;
810:   }
811: }
812: '''},
813:             '''\
814: \t#varname#_nofargs_capi = #cbname#_nofargs;
815: \tif (create_cb_arglist(#varname#_capi,#varname#_xa_capi,#maxnofargs#,#nofoptargs#,&#cbname#_nofargs,&#varname#_args_capi,\"failed in processing argument list for call-back #varname#.\")) {
816: \t\tjmp_buf #varname#_jmpbuf;''',
817:             {debugcapi: ['''\
818: \t\tfprintf(stderr,\"debug-capi:Assuming %d arguments; at most #maxnofargs#(-#nofoptargs#) is expected.\\n\",#cbname#_nofargs);
819: \t\tCFUNCSMESSPY(\"for #varname#=\",#cbname#_capi);''',
820:                          {l_not(isintent_callback): '''\t\tfprintf(stderr,\"#vardebugshowvalue# (call-back in C).\\n\",#cbname#);'''}]},
821:             '''\
822: \t\tCFUNCSMESS(\"Saving jmpbuf for `#varname#`.\\n\");
823: \t\tSWAP(#varname#_capi,#cbname#_capi,PyObject);
824: \t\tSWAP(#varname#_args_capi,#cbname#_args_capi,PyTupleObject);
825: \t\tmemcpy(&#varname#_jmpbuf,&#cbname#_jmpbuf,sizeof(jmp_buf));''',
826:         ],
827:         'cleanupfrompyobj':
828:         '''\
829: \t\tCFUNCSMESS(\"Restoring jmpbuf for `#varname#`.\\n\");
830: \t\t#cbname#_capi = #varname#_capi;
831: \t\tPy_DECREF(#cbname#_args_capi);
832: \t\t#cbname#_args_capi = #varname#_args_capi;
833: \t\t#cbname#_nofargs = #varname#_nofargs_capi;
834: \t\tmemcpy(&#cbname#_jmpbuf,&#varname#_jmpbuf,sizeof(jmp_buf));
835: \t}''',
836:         'need': ['SWAP', 'create_cb_arglist'],
837:         '_check':isexternal,
838:         '_depend':''
839:     },
840:     # Scalars (not complex)
841:     {  # Common
842:         'decl': '\t#ctype# #varname# = 0;',
843:         'pyobjfrom': {debugcapi: '\tfprintf(stderr,"#vardebugshowvalue#\\n",#varname#);'},
844:         'callfortran': {isintent_c: '#varname#,', l_not(isintent_c): '&#varname#,'},
845:         'return': {isintent_out: ',#varname#'},
846:         '_check': l_and(isscalar, l_not(iscomplex))
847:     }, {
848:         'need': {hasinitvalue: 'math.h'},
849:         '_check': l_and(isscalar, l_not(iscomplex)),
850:     }, {  # Not hidden
851:         'decl': '\tPyObject *#varname#_capi = Py_None;',
852:         'argformat': {isrequired: 'O'},
853:         'keyformat': {isoptional: 'O'},
854:         'args_capi': {isrequired: ',&#varname#_capi'},
855:         'keys_capi': {isoptional: ',&#varname#_capi'},
856:         'pyobjfrom': {isintent_inout: '''\
857: \tf2py_success = try_pyarr_from_#ctype#(#varname#_capi,&#varname#);
858: \tif (f2py_success) {'''},
859:         'closepyobjfrom': {isintent_inout: "\t} /*if (f2py_success) of #varname# pyobjfrom*/"},
860:         'need': {isintent_inout: 'try_pyarr_from_#ctype#'},
861:         '_check': l_and(isscalar, l_not(iscomplex), isintent_nothide)
862:     }, {
863:         'frompyobj': [
864:             # hasinitvalue...
865:             #   if pyobj is None:
866:             #     varname = init
867:             #   else
868:             #     from_pyobj(varname)
869:             #
870:             # isoptional and noinitvalue...
871:             #   if pyobj is not None:
872:             #     from_pyobj(varname)
873:             #   else:
874:             #     varname is uninitialized
875:             #
876:             # ...
877:             #   from_pyobj(varname)
878:             #
879:             {hasinitvalue: '\tif (#varname#_capi == Py_None) #varname# = #init#; else',
880:              '_depend': ''},
881:             {l_and(isoptional, l_not(hasinitvalue)): '\tif (#varname#_capi != Py_None)',
882:              '_depend': ''},
883:             {l_not(islogical): '''\
884: \t\tf2py_success = #ctype#_from_pyobj(&#varname#,#varname#_capi,"#pyname#() #nth# (#varname#) can\'t be converted to #ctype#");
885: \tif (f2py_success) {'''},
886:             {islogical: '''\
887: \t\t#varname# = (#ctype#)PyObject_IsTrue(#varname#_capi);
888: \t\tf2py_success = 1;
889: \tif (f2py_success) {'''},
890:         ],
891:         'cleanupfrompyobj': '\t} /*if (f2py_success) of #varname#*/',
892:         'need': {l_not(islogical): '#ctype#_from_pyobj'},
893:         '_check': l_and(isscalar, l_not(iscomplex), isintent_nothide),
894:         '_depend': ''
895:     }, {  # Hidden
896:         'frompyobj': {hasinitvalue: '\t#varname# = #init#;'},
897:         'need': typedef_need_dict,
898:         '_check': l_and(isscalar, l_not(iscomplex), isintent_hide),
899:         '_depend': ''
900:     }, {  # Common
901:         'frompyobj': {debugcapi: '\tfprintf(stderr,"#vardebugshowvalue#\\n",#varname#);'},
902:         '_check': l_and(isscalar, l_not(iscomplex)),
903:         '_depend': ''
904:     },
905:     # Complex scalars
906:     {  # Common
907:         'decl': '\t#ctype# #varname#;',
908:         'callfortran': {isintent_c: '#varname#,', l_not(isintent_c): '&#varname#,'},
909:         'pyobjfrom': {debugcapi: '\tfprintf(stderr,"#vardebugshowvalue#\\n",#varname#.r,#varname#.i);'},
910:         'return': {isintent_out: ',#varname#_capi'},
911:         '_check': iscomplex
912:     }, {  # Not hidden
913:         'decl': '\tPyObject *#varname#_capi = Py_None;',
914:         'argformat': {isrequired: 'O'},
915:         'keyformat': {isoptional: 'O'},
916:         'args_capi': {isrequired: ',&#varname#_capi'},
917:         'keys_capi': {isoptional: ',&#varname#_capi'},
918:         'need': {isintent_inout: 'try_pyarr_from_#ctype#'},
919:         'pyobjfrom': {isintent_inout: '''\
920: \t\tf2py_success = try_pyarr_from_#ctype#(#varname#_capi,&#varname#);
921: \t\tif (f2py_success) {'''},
922:         'closepyobjfrom': {isintent_inout: "\t\t} /*if (f2py_success) of #varname# pyobjfrom*/"},
923:         '_check': l_and(iscomplex, isintent_nothide)
924:     }, {
925:         'frompyobj': [{hasinitvalue: '\tif (#varname#_capi==Py_None) {#varname#.r = #init.r#, #varname#.i = #init.i#;} else'},
926:                       {l_and(isoptional, l_not(hasinitvalue))
927:                              : '\tif (#varname#_capi != Py_None)'},
928:                       '\t\tf2py_success = #ctype#_from_pyobj(&#varname#,#varname#_capi,"#pyname#() #nth# (#varname#) can\'t be converted to #ctype#");'
929:                       '\n\tif (f2py_success) {'],
930:         'cleanupfrompyobj': '\t}  /*if (f2py_success) of #varname# frompyobj*/',
931:         'need': ['#ctype#_from_pyobj'],
932:         '_check': l_and(iscomplex, isintent_nothide),
933:         '_depend': ''
934:     }, {  # Hidden
935:         'decl': {isintent_out: '\tPyObject *#varname#_capi = Py_None;'},
936:         '_check': l_and(iscomplex, isintent_hide)
937:     }, {
938:         'frompyobj': {hasinitvalue: '\t#varname#.r = #init.r#, #varname#.i = #init.i#;'},
939:         '_check': l_and(iscomplex, isintent_hide),
940:         '_depend': ''
941:     }, {  # Common
942:         'pyobjfrom': {isintent_out: '\t#varname#_capi = pyobj_from_#ctype#1(#varname#);'},
943:         'need': ['pyobj_from_#ctype#1'],
944:         '_check': iscomplex
945:     }, {
946:         'frompyobj': {debugcapi: '\tfprintf(stderr,"#vardebugshowvalue#\\n",#varname#.r,#varname#.i);'},
947:         '_check': iscomplex,
948:         '_depend': ''
949:     },
950:     # String
951:     {  # Common
952:         'decl': ['\t#ctype# #varname# = NULL;',
953:                  '\tint slen(#varname#);',
954:                  '\tPyObject *#varname#_capi = Py_None;'],
955:         'callfortran':'#varname#,',
956:         'callfortranappend':'slen(#varname#),',
957:         'pyobjfrom':{debugcapi: '\tfprintf(stderr,"#vardebugshowvalue#\\n",slen(#varname#),#varname#);'},
958:         'return': {isintent_out: ',#varname#'},
959:         'need': ['len..'],  # 'STRINGFREE'],
960:         '_check':isstring
961:     }, {  # Common
962:         'frompyobj': '''\
963: \tslen(#varname#) = #length#;
964: \tf2py_success = #ctype#_from_pyobj(&#varname#,&slen(#varname#),#init#,#varname#_capi,\"#ctype#_from_pyobj failed in converting #nth# `#varname#\' of #pyname# to C #ctype#\");
965: \tif (f2py_success) {''',
966:         'cleanupfrompyobj': '''\
967: \t\tSTRINGFREE(#varname#);
968: \t}  /*if (f2py_success) of #varname#*/''',
969:         'need': ['#ctype#_from_pyobj', 'len..', 'STRINGFREE'],
970:         '_check':isstring,
971:         '_depend':''
972:     }, {  # Not hidden
973:         'argformat': {isrequired: 'O'},
974:         'keyformat': {isoptional: 'O'},
975:         'args_capi': {isrequired: ',&#varname#_capi'},
976:         'keys_capi': {isoptional: ',&#varname#_capi'},
977:         'pyobjfrom': {isintent_inout: '''\
978: \tf2py_success = try_pyarr_from_#ctype#(#varname#_capi,#varname#);
979: \tif (f2py_success) {'''},
980:         'closepyobjfrom': {isintent_inout: '\t} /*if (f2py_success) of #varname# pyobjfrom*/'},
981:         'need': {isintent_inout: 'try_pyarr_from_#ctype#'},
982:         '_check': l_and(isstring, isintent_nothide)
983:     }, {  # Hidden
984:         '_check': l_and(isstring, isintent_hide)
985:     }, {
986:         'frompyobj': {debugcapi: '\tfprintf(stderr,"#vardebugshowvalue#\\n",slen(#varname#),#varname#);'},
987:         '_check': isstring,
988:         '_depend': ''
989:     },
990:     # Array
991:     {  # Common
992:         'decl': ['\t#ctype# *#varname# = NULL;',
993:                  '\tnpy_intp #varname#_Dims[#rank#] = {#rank*[-1]#};',
994:                  '\tconst int #varname#_Rank = #rank#;',
995:                  '\tPyArrayObject *capi_#varname#_tmp = NULL;',
996:                  '\tint capi_#varname#_intent = 0;',
997:                  ],
998:         'callfortran':'#varname#,',
999:         'return':{isintent_out: ',capi_#varname#_tmp'},
1000:         'need': 'len..',
1001:         '_check': isarray
1002:     }, {  # intent(overwrite) array
1003:         'decl': '\tint capi_overwrite_#varname# = 1;',
1004:         'kwlistxa': '"overwrite_#varname#",',
1005:         'xaformat': 'i',
1006:         'keys_xa': ',&capi_overwrite_#varname#',
1007:         'docsignxa': 'overwrite_#varname#=1,',
1008:         'docsignxashort': 'overwrite_#varname#,',
1009:         'docstropt': 'overwrite_#varname# : input int, optional\\n    Default: 1',
1010:         '_check': l_and(isarray, isintent_overwrite),
1011:     }, {
1012:         'frompyobj': '\tcapi_#varname#_intent |= (capi_overwrite_#varname#?0:F2PY_INTENT_COPY);',
1013:         '_check': l_and(isarray, isintent_overwrite),
1014:         '_depend': '',
1015:     },
1016:     {  # intent(copy) array
1017:         'decl': '\tint capi_overwrite_#varname# = 0;',
1018:         'kwlistxa': '"overwrite_#varname#",',
1019:         'xaformat': 'i',
1020:         'keys_xa': ',&capi_overwrite_#varname#',
1021:         'docsignxa': 'overwrite_#varname#=0,',
1022:         'docsignxashort': 'overwrite_#varname#,',
1023:         'docstropt': 'overwrite_#varname# : input int, optional\\n    Default: 0',
1024:         '_check': l_and(isarray, isintent_copy),
1025:     }, {
1026:         'frompyobj': '\tcapi_#varname#_intent |= (capi_overwrite_#varname#?0:F2PY_INTENT_COPY);',
1027:         '_check': l_and(isarray, isintent_copy),
1028:         '_depend': '',
1029:     }, {
1030:         'need': [{hasinitvalue: 'forcomb'}, {hasinitvalue: 'CFUNCSMESS'}],
1031:         '_check': isarray,
1032:         '_depend': ''
1033:     }, {  # Not hidden
1034:         'decl': '\tPyObject *#varname#_capi = Py_None;',
1035:         'argformat': {isrequired: 'O'},
1036:         'keyformat': {isoptional: 'O'},
1037:         'args_capi': {isrequired: ',&#varname#_capi'},
1038:         'keys_capi': {isoptional: ',&#varname#_capi'},
1039:         '_check': l_and(isarray, isintent_nothide)
1040:     }, {
1041:         'frompyobj': ['\t#setdims#;',
1042:                       '\tcapi_#varname#_intent |= #intent#;',
1043:                       {isintent_hide:
1044:                        '\tcapi_#varname#_tmp = array_from_pyobj(#atype#,#varname#_Dims,#varname#_Rank,capi_#varname#_intent,Py_None);'},
1045:                       {isintent_nothide:
1046:                        '\tcapi_#varname#_tmp = array_from_pyobj(#atype#,#varname#_Dims,#varname#_Rank,capi_#varname#_intent,#varname#_capi);'},
1047:                       '''\
1048: \tif (capi_#varname#_tmp == NULL) {
1049: \t\tif (!PyErr_Occurred())
1050: \t\t\tPyErr_SetString(#modulename#_error,\"failed in converting #nth# `#varname#\' of #pyname# to C/Fortran array\" );
1051: \t} else {
1052: \t\t#varname# = (#ctype# *)(PyArray_DATA(capi_#varname#_tmp));
1053: ''',
1054:                       {hasinitvalue: [
1055:                           {isintent_nothide:
1056:                               '\tif (#varname#_capi == Py_None) {'},
1057:                           {isintent_hide: '\t{'},
1058:                           {iscomplexarray: '\t\t#ctype# capi_c;'},
1059:                           '''\
1060: \t\tint *_i,capi_i=0;
1061: \t\tCFUNCSMESS(\"#name#: Initializing #varname#=#init#\\n\");
1062: \t\tif (initforcomb(PyArray_DIMS(capi_#varname#_tmp),PyArray_NDIM(capi_#varname#_tmp),1)) {
1063: \t\t\twhile ((_i = nextforcomb()))
1064: \t\t\t\t#varname#[capi_i++] = #init#; /* fortran way */
1065: \t\t} else {
1066: \t\t\tif (!PyErr_Occurred())
1067: \t\t\t\tPyErr_SetString(#modulename#_error,\"Initialization of #nth# #varname# failed (initforcomb).\");
1068: \t\t\tf2py_success = 0;
1069: \t\t}
1070: \t}
1071: \tif (f2py_success) {''']},
1072:                       ],
1073:         'cleanupfrompyobj': [  # note that this list will be reversed
1074:             '\t}  /*if (capi_#varname#_tmp == NULL) ... else of #varname#*/',
1075:             {l_not(l_or(isintent_out, isintent_hide)): '''\
1076: \tif((PyObject *)capi_#varname#_tmp!=#varname#_capi) {
1077: \t\tPy_XDECREF(capi_#varname#_tmp); }'''},
1078:             {l_and(isintent_hide, l_not(isintent_out))
1079:                    : '''\t\tPy_XDECREF(capi_#varname#_tmp);'''},
1080:             {hasinitvalue: '\t}  /*if (f2py_success) of #varname# init*/'},
1081:         ],
1082:         '_check': isarray,
1083:         '_depend': ''
1084:     },
1085:     # Scalararray
1086:     {  # Common
1087:         '_check': l_and(isarray, l_not(iscomplexarray))
1088:     }, {  # Not hidden
1089:         '_check': l_and(isarray, l_not(iscomplexarray), isintent_nothide)
1090:     },
1091:     # Integer*1 array
1092:     {'need': '#ctype#',
1093:      '_check': isint1array,
1094:      '_depend': ''
1095:      },
1096:     # Integer*-1 array
1097:     {'need': '#ctype#',
1098:      '_check': isunsigned_chararray,
1099:      '_depend': ''
1100:      },
1101:     # Integer*-2 array
1102:     {'need': '#ctype#',
1103:      '_check': isunsigned_shortarray,
1104:      '_depend': ''
1105:      },
1106:     # Integer*-8 array
1107:     {'need': '#ctype#',
1108:      '_check': isunsigned_long_longarray,
1109:      '_depend': ''
1110:      },
1111:     # Complexarray
1112:     {'need': '#ctype#',
1113:      '_check': iscomplexarray,
1114:      '_depend': ''
1115:      },
1116:     # Stringarray
1117:     {
1118:         'callfortranappend': {isarrayofstrings: 'flen(#varname#),'},
1119:         'need': 'string',
1120:         '_check': isstringarray
1121:     }
1122: ]
1123: 
1124: ################# Rules for checking ###############
1125: 
1126: check_rules = [
1127:     {
1128:         'frompyobj': {debugcapi: '\tfprintf(stderr,\"debug-capi:Checking `#check#\'\\n\");'},
1129:         'need': 'len..'
1130:     }, {
1131:         'frompyobj': '\tCHECKSCALAR(#check#,\"#check#\",\"#nth# #varname#\",\"#varshowvalue#\",#varname#) {',
1132:         'cleanupfrompyobj': '\t} /*CHECKSCALAR(#check#)*/',
1133:         'need': 'CHECKSCALAR',
1134:         '_check': l_and(isscalar, l_not(iscomplex)),
1135:         '_break': ''
1136:     }, {
1137:         'frompyobj': '\tCHECKSTRING(#check#,\"#check#\",\"#nth# #varname#\",\"#varshowvalue#\",#varname#) {',
1138:         'cleanupfrompyobj': '\t} /*CHECKSTRING(#check#)*/',
1139:         'need': 'CHECKSTRING',
1140:         '_check': isstring,
1141:         '_break': ''
1142:     }, {
1143:         'need': 'CHECKARRAY',
1144:         'frompyobj': '\tCHECKARRAY(#check#,\"#check#\",\"#nth# #varname#\") {',
1145:         'cleanupfrompyobj': '\t} /*CHECKARRAY(#check#)*/',
1146:         '_check': isarray,
1147:         '_break': ''
1148:     }, {
1149:         'need': 'CHECKGENERIC',
1150:         'frompyobj': '\tCHECKGENERIC(#check#,\"#check#\",\"#nth# #varname#\") {',
1151:         'cleanupfrompyobj': '\t} /*CHECKGENERIC(#check#)*/',
1152:     }
1153: ]
1154: 
1155: ########## Applying the rules. No need to modify what follows #############
1156: 
1157: #################### Build C/API module #######################
1158: 
1159: 
1160: def buildmodule(m, um):
1161:     '''
1162:     Return
1163:     '''
1164:     global f2py_version, options
1165:     outmess('\tBuilding module "%s"...\n' % (m['name']))
1166:     ret = {}
1167:     mod_rules = defmod_rules[:]
1168:     vrd = capi_maps.modsign2map(m)
1169:     rd = dictappend({'f2py_version': f2py_version}, vrd)
1170:     funcwrappers = []
1171:     funcwrappers2 = []  # F90 codes
1172:     for n in m['interfaced']:
1173:         nb = None
1174:         for bi in m['body']:
1175:             if not bi['block'] == 'interface':
1176:                 errmess('buildmodule: Expected interface block. Skipping.\n')
1177:                 continue
1178:             for b in bi['body']:
1179:                 if b['name'] == n:
1180:                     nb = b
1181:                     break
1182: 
1183:         if not nb:
1184:             errmess(
1185:                 'buildmodule: Could not found the body of interfaced routine "%s". Skipping.\n' % (n))
1186:             continue
1187:         nb_list = [nb]
1188:         if 'entry' in nb:
1189:             for k, a in nb['entry'].items():
1190:                 nb1 = copy.deepcopy(nb)
1191:                 del nb1['entry']
1192:                 nb1['name'] = k
1193:                 nb1['args'] = a
1194:                 nb_list.append(nb1)
1195:         for nb in nb_list:
1196:             api, wrap = buildapi(nb)
1197:             if wrap:
1198:                 if ismoduleroutine(nb):
1199:                     funcwrappers2.append(wrap)
1200:                 else:
1201:                     funcwrappers.append(wrap)
1202:             ar = applyrules(api, vrd)
1203:             rd = dictappend(rd, ar)
1204: 
1205:     # Construct COMMON block support
1206:     cr, wrap = common_rules.buildhooks(m)
1207:     if wrap:
1208:         funcwrappers.append(wrap)
1209:     ar = applyrules(cr, vrd)
1210:     rd = dictappend(rd, ar)
1211: 
1212:     # Construct F90 module support
1213:     mr, wrap = f90mod_rules.buildhooks(m)
1214:     if wrap:
1215:         funcwrappers2.append(wrap)
1216:     ar = applyrules(mr, vrd)
1217:     rd = dictappend(rd, ar)
1218: 
1219:     for u in um:
1220:         ar = use_rules.buildusevars(u, m['use'][u['name']])
1221:         rd = dictappend(rd, ar)
1222: 
1223:     needs = cfuncs.get_needs()
1224:     code = {}
1225:     for n in needs.keys():
1226:         code[n] = []
1227:         for k in needs[n]:
1228:             c = ''
1229:             if k in cfuncs.includes0:
1230:                 c = cfuncs.includes0[k]
1231:             elif k in cfuncs.includes:
1232:                 c = cfuncs.includes[k]
1233:             elif k in cfuncs.userincludes:
1234:                 c = cfuncs.userincludes[k]
1235:             elif k in cfuncs.typedefs:
1236:                 c = cfuncs.typedefs[k]
1237:             elif k in cfuncs.typedefs_generated:
1238:                 c = cfuncs.typedefs_generated[k]
1239:             elif k in cfuncs.cppmacros:
1240:                 c = cfuncs.cppmacros[k]
1241:             elif k in cfuncs.cfuncs:
1242:                 c = cfuncs.cfuncs[k]
1243:             elif k in cfuncs.callbacks:
1244:                 c = cfuncs.callbacks[k]
1245:             elif k in cfuncs.f90modhooks:
1246:                 c = cfuncs.f90modhooks[k]
1247:             elif k in cfuncs.commonhooks:
1248:                 c = cfuncs.commonhooks[k]
1249:             else:
1250:                 errmess('buildmodule: unknown need %s.\n' % (repr(k)))
1251:                 continue
1252:             code[n].append(c)
1253:     mod_rules.append(code)
1254:     for r in mod_rules:
1255:         if ('_check' in r and r['_check'](m)) or ('_check' not in r):
1256:             ar = applyrules(r, vrd, m)
1257:             rd = dictappend(rd, ar)
1258:     ar = applyrules(module_rules, rd)
1259: 
1260:     fn = os.path.join(options['buildpath'], vrd['coutput'])
1261:     ret['csrc'] = fn
1262:     f = open(fn, 'w')
1263:     f.write(ar['modulebody'].replace('\t', 2 * ' '))
1264:     f.close()
1265:     outmess('\tWrote C/API module "%s" to file "%s"\n' % (m['name'], fn))
1266: 
1267:     if options['dorestdoc']:
1268:         fn = os.path.join(
1269:             options['buildpath'], vrd['modulename'] + 'module.rest')
1270:         f = open(fn, 'w')
1271:         f.write('.. -*- rest -*-\n')
1272:         f.write('\n'.join(ar['restdoc']))
1273:         f.close()
1274:         outmess('\tReST Documentation is saved to file "%s/%smodule.rest"\n' %
1275:                 (options['buildpath'], vrd['modulename']))
1276:     if options['dolatexdoc']:
1277:         fn = os.path.join(
1278:             options['buildpath'], vrd['modulename'] + 'module.tex')
1279:         ret['ltx'] = fn
1280:         f = open(fn, 'w')
1281:         f.write(
1282:             '%% This file is auto-generated with f2py (version:%s)\n' % (f2py_version))
1283:         if 'shortlatex' not in options:
1284:             f.write(
1285:                 '\\documentclass{article}\n\\usepackage{a4wide}\n\\begin{document}\n\\tableofcontents\n\n')
1286:         f.write('\n'.join(ar['latexdoc']))
1287:         if 'shortlatex' not in options:
1288:             f.write('\\end{document}')
1289:         f.close()
1290:         outmess('\tDocumentation is saved to file "%s/%smodule.tex"\n' %
1291:                 (options['buildpath'], vrd['modulename']))
1292:     if funcwrappers:
1293:         wn = os.path.join(options['buildpath'], vrd['f2py_wrapper_output'])
1294:         ret['fsrc'] = wn
1295:         f = open(wn, 'w')
1296:         f.write('C     -*- fortran -*-\n')
1297:         f.write(
1298:             'C     This file is autogenerated with f2py (version:%s)\n' % (f2py_version))
1299:         f.write(
1300:             'C     It contains Fortran 77 wrappers to fortran functions.\n')
1301:         lines = []
1302:         for l in ('\n\n'.join(funcwrappers) + '\n').split('\n'):
1303:             if l and l[0] == ' ':
1304:                 while len(l) >= 66:
1305:                     lines.append(l[:66] + '\n     &')
1306:                     l = l[66:]
1307:                 lines.append(l + '\n')
1308:             else:
1309:                 lines.append(l + '\n')
1310:         lines = ''.join(lines).replace('\n     &\n', '\n')
1311:         f.write(lines)
1312:         f.close()
1313:         outmess('\tFortran 77 wrappers are saved to "%s"\n' % (wn))
1314:     if funcwrappers2:
1315:         wn = os.path.join(
1316:             options['buildpath'], '%s-f2pywrappers2.f90' % (vrd['modulename']))
1317:         ret['fsrc'] = wn
1318:         f = open(wn, 'w')
1319:         f.write('!     -*- f90 -*-\n')
1320:         f.write(
1321:             '!     This file is autogenerated with f2py (version:%s)\n' % (f2py_version))
1322:         f.write(
1323:             '!     It contains Fortran 90 wrappers to fortran functions.\n')
1324:         lines = []
1325:         for l in ('\n\n'.join(funcwrappers2) + '\n').split('\n'):
1326:             if len(l) > 72 and l[0] == ' ':
1327:                 lines.append(l[:72] + '&\n     &')
1328:                 l = l[72:]
1329:                 while len(l) > 66:
1330:                     lines.append(l[:66] + '&\n     &')
1331:                     l = l[66:]
1332:                 lines.append(l + '\n')
1333:             else:
1334:                 lines.append(l + '\n')
1335:         lines = ''.join(lines).replace('\n     &\n', '\n')
1336:         f.write(lines)
1337:         f.close()
1338:         outmess('\tFortran 90 wrappers are saved to "%s"\n' % (wn))
1339:     return ret
1340: 
1341: ################## Build C/API function #############
1342: 
1343: stnd = {1: 'st', 2: 'nd', 3: 'rd', 4: 'th', 5: 'th',
1344:         6: 'th', 7: 'th', 8: 'th', 9: 'th', 0: 'th'}
1345: 
1346: 
1347: def buildapi(rout):
1348:     rout, wrap = func2subr.assubr(rout)
1349:     args, depargs = getargs2(rout)
1350:     capi_maps.depargs = depargs
1351:     var = rout['vars']
1352: 
1353:     if ismoduleroutine(rout):
1354:         outmess('\t\t\tConstructing wrapper function "%s.%s"...\n' %
1355:                 (rout['modulename'], rout['name']))
1356:     else:
1357:         outmess('\t\tConstructing wrapper function "%s"...\n' % (rout['name']))
1358:     # Routine
1359:     vrd = capi_maps.routsign2map(rout)
1360:     rd = dictappend({}, vrd)
1361:     for r in rout_rules:
1362:         if ('_check' in r and r['_check'](rout)) or ('_check' not in r):
1363:             ar = applyrules(r, vrd, rout)
1364:             rd = dictappend(rd, ar)
1365: 
1366:     # Args
1367:     nth, nthk = 0, 0
1368:     savevrd = {}
1369:     for a in args:
1370:         vrd = capi_maps.sign2map(a, var[a])
1371:         if isintent_aux(var[a]):
1372:             _rules = aux_rules
1373:         else:
1374:             _rules = arg_rules
1375:             if not isintent_hide(var[a]):
1376:                 if not isoptional(var[a]):
1377:                     nth = nth + 1
1378:                     vrd['nth'] = repr(nth) + stnd[nth % 10] + ' argument'
1379:                 else:
1380:                     nthk = nthk + 1
1381:                     vrd['nth'] = repr(nthk) + stnd[nthk % 10] + ' keyword'
1382:             else:
1383:                 vrd['nth'] = 'hidden'
1384:         savevrd[a] = vrd
1385:         for r in _rules:
1386:             if '_depend' in r:
1387:                 continue
1388:             if ('_check' in r and r['_check'](var[a])) or ('_check' not in r):
1389:                 ar = applyrules(r, vrd, var[a])
1390:                 rd = dictappend(rd, ar)
1391:                 if '_break' in r:
1392:                     break
1393:     for a in depargs:
1394:         if isintent_aux(var[a]):
1395:             _rules = aux_rules
1396:         else:
1397:             _rules = arg_rules
1398:         vrd = savevrd[a]
1399:         for r in _rules:
1400:             if '_depend' not in r:
1401:                 continue
1402:             if ('_check' in r and r['_check'](var[a])) or ('_check' not in r):
1403:                 ar = applyrules(r, vrd, var[a])
1404:                 rd = dictappend(rd, ar)
1405:                 if '_break' in r:
1406:                     break
1407:         if 'check' in var[a]:
1408:             for c in var[a]['check']:
1409:                 vrd['check'] = c
1410:                 ar = applyrules(check_rules, vrd, var[a])
1411:                 rd = dictappend(rd, ar)
1412:     if isinstance(rd['cleanupfrompyobj'], list):
1413:         rd['cleanupfrompyobj'].reverse()
1414:     if isinstance(rd['closepyobjfrom'], list):
1415:         rd['closepyobjfrom'].reverse()
1416:     rd['docsignature'] = stripcomma(replace('#docsign##docsignopt##docsignxa#',
1417:                                             {'docsign': rd['docsign'],
1418:                                              'docsignopt': rd['docsignopt'],
1419:                                              'docsignxa': rd['docsignxa']}))
1420:     optargs = stripcomma(replace('#docsignopt##docsignxa#',
1421:                                  {'docsignxa': rd['docsignxashort'],
1422:                                   'docsignopt': rd['docsignoptshort']}
1423:                                  ))
1424:     if optargs == '':
1425:         rd['docsignatureshort'] = stripcomma(
1426:             replace('#docsign#', {'docsign': rd['docsign']}))
1427:     else:
1428:         rd['docsignatureshort'] = replace('#docsign#[#docsignopt#]',
1429:                                           {'docsign': rd['docsign'],
1430:                                            'docsignopt': optargs,
1431:                                            })
1432:     rd['latexdocsignatureshort'] = rd['docsignatureshort'].replace('_', '\\_')
1433:     rd['latexdocsignatureshort'] = rd[
1434:         'latexdocsignatureshort'].replace(',', ', ')
1435:     cfs = stripcomma(replace('#callfortran##callfortranappend#', {
1436:                      'callfortran': rd['callfortran'], 'callfortranappend': rd['callfortranappend']}))
1437:     if len(rd['callfortranappend']) > 1:
1438:         rd['callcompaqfortran'] = stripcomma(replace('#callfortran# 0,#callfortranappend#', {
1439:                                              'callfortran': rd['callfortran'], 'callfortranappend': rd['callfortranappend']}))
1440:     else:
1441:         rd['callcompaqfortran'] = cfs
1442:     rd['callfortran'] = cfs
1443:     if isinstance(rd['docreturn'], list):
1444:         rd['docreturn'] = stripcomma(
1445:             replace('#docreturn#', {'docreturn': rd['docreturn']})) + ' = '
1446:     rd['docstrsigns'] = []
1447:     rd['latexdocstrsigns'] = []
1448:     for k in ['docstrreq', 'docstropt', 'docstrout', 'docstrcbs']:
1449:         if k in rd and isinstance(rd[k], list):
1450:             rd['docstrsigns'] = rd['docstrsigns'] + rd[k]
1451:         k = 'latex' + k
1452:         if k in rd and isinstance(rd[k], list):
1453:             rd['latexdocstrsigns'] = rd['latexdocstrsigns'] + rd[k][0:1] +\
1454:                 ['\\begin{description}'] + rd[k][1:] +\
1455:                 ['\\end{description}']
1456: 
1457:     # Workaround for Python 2.6, 2.6.1 bug: http://bugs.python.org/issue4720
1458:     if rd['keyformat'] or rd['xaformat']:
1459:         argformat = rd['argformat']
1460:         if isinstance(argformat, list):
1461:             argformat.append('|')
1462:         else:
1463:             assert isinstance(argformat, str), repr(
1464:                 (argformat, type(argformat)))
1465:             rd['argformat'] += '|'
1466: 
1467:     ar = applyrules(routine_rules, rd)
1468:     if ismoduleroutine(rout):
1469:         outmess('\t\t\t  %s\n' % (ar['docshort']))
1470:     else:
1471:         outmess('\t\t  %s\n' % (ar['docshort']))
1472:     return ar, wrap
1473: 
1474: 
1475: #################### EOF rules.py #######################
1476: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

str_95486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 52, (-1)), 'str', "\n\nRules for building C/API module with f2py2e.\n\nHere is a skeleton of a new wrapper function (13Dec2001):\n\nwrapper_function(args)\n  declarations\n  get_python_arguments, say, `a' and `b'\n\n  get_a_from_python\n  if (successful) {\n\n    get_b_from_python\n    if (successful) {\n\n      callfortran\n      if (succesful) {\n\n        put_a_to_python\n        if (succesful) {\n\n          put_b_to_python\n          if (succesful) {\n\n            buildvalue = ...\n\n          }\n\n        }\n\n      }\n\n    }\n    cleanup_b\n\n  }\n  cleanup_a\n\n  return buildvalue\n\nCopyright 1999,2000 Pearu Peterson all rights reserved,\nPearu Peterson <pearu@ioc.ee>\nPermission to use, modify, and distribute this software is given under the\nterms of the NumPy License.\n\nNO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.\n$Date: 2005/08/30 08:58:42 $\nPearu Peterson\n\n")

# Assigning a Subscript to a Name (line 55):

# Assigning a Subscript to a Name (line 55):

# Obtaining the type of the subscript
int_95487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 55, 35), 'int')
int_95488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 55, 38), 'int')
slice_95489 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 55, 14), int_95487, int_95488, None)
str_95490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 55, 14), 'str', '$Revision: 1.129 $')
# Obtaining the member '__getitem__' of a type (line 55)
getitem___95491 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 55, 14), str_95490, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 55)
subscript_call_result_95492 = invoke(stypy.reporting.localization.Localization(__file__, 55, 14), getitem___95491, slice_95489)

# Assigning a type to the variable '__version__' (line 55)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 55, 0), '__version__', subscript_call_result_95492)
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 57, 0))

# 'from numpy.f2py import __version__' statement (line 57)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/numpy/f2py/')
import_95493 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 57, 0), 'numpy.f2py')

if (type(import_95493) is not StypyTypeError):

    if (import_95493 != 'pyd_module'):
        __import__(import_95493)
        sys_modules_95494 = sys.modules[import_95493]
        import_from_module(stypy.reporting.localization.Localization(__file__, 57, 0), 'numpy.f2py', sys_modules_95494.module_type_store, module_type_store, ['__version__'])
        nest_module(stypy.reporting.localization.Localization(__file__, 57, 0), __file__, sys_modules_95494, sys_modules_95494.module_type_store, module_type_store)
    else:
        from numpy.f2py import __version__

        import_from_module(stypy.reporting.localization.Localization(__file__, 57, 0), 'numpy.f2py', None, module_type_store, ['__version__'], [__version__])

else:
    # Assigning a type to the variable 'numpy.f2py' (line 57)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 57, 0), 'numpy.f2py', import_95493)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/numpy/f2py/')


# Assigning a Attribute to a Name (line 58):

# Assigning a Attribute to a Name (line 58):
# Getting the type of '__version__' (line 58)
version___95495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 58, 15), '__version__')
# Obtaining the member 'version' of a type (line 58)
version_95496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 58, 15), version___95495, 'version')
# Assigning a type to the variable 'f2py_version' (line 58)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 58, 0), 'f2py_version', version_95496)
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 60, 0))

# 'import os' statement (line 60)
import os

import_module(stypy.reporting.localization.Localization(__file__, 60, 0), 'os', os, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 61, 0))

# 'import time' statement (line 61)
import time

import_module(stypy.reporting.localization.Localization(__file__, 61, 0), 'time', time, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 62, 0))

# 'import copy' statement (line 62)
import copy

import_module(stypy.reporting.localization.Localization(__file__, 62, 0), 'copy', copy, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 64, 0))

# 'from numpy.f2py.auxfuncs import applyrules, debugcapi, dictappend, errmess, gentitle, getargs2, hascallstatement, hasexternals, hasinitvalue, hasnote, hasresultnote, isarray, isarrayofstrings, iscomplex, iscomplexarray, iscomplexfunction, iscomplexfunction_warn, isdummyroutine, isexternal, isfunction, isfunction_wrap, isint1array, isintent_aux, isintent_c, isintent_callback, isintent_copy, isintent_hide, isintent_inout, isintent_nothide, isintent_out, isintent_overwrite, islogical, islong_complex, islong_double, islong_doublefunction, islong_long, islong_longfunction, ismoduleroutine, isoptional, isrequired, isscalar, issigned_long_longarray, isstring, isstringarray, isstringfunction, issubroutine, issubroutine_wrap, isthreadsafe, isunsigned, isunsigned_char, isunsigned_chararray, isunsigned_long_long, isunsigned_long_longarray, isunsigned_short, isunsigned_shortarray, l_and, l_not, l_or, outmess, replace, stripcomma' statement (line 64)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/numpy/f2py/')
import_95497 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 64, 0), 'numpy.f2py.auxfuncs')

if (type(import_95497) is not StypyTypeError):

    if (import_95497 != 'pyd_module'):
        __import__(import_95497)
        sys_modules_95498 = sys.modules[import_95497]
        import_from_module(stypy.reporting.localization.Localization(__file__, 64, 0), 'numpy.f2py.auxfuncs', sys_modules_95498.module_type_store, module_type_store, ['applyrules', 'debugcapi', 'dictappend', 'errmess', 'gentitle', 'getargs2', 'hascallstatement', 'hasexternals', 'hasinitvalue', 'hasnote', 'hasresultnote', 'isarray', 'isarrayofstrings', 'iscomplex', 'iscomplexarray', 'iscomplexfunction', 'iscomplexfunction_warn', 'isdummyroutine', 'isexternal', 'isfunction', 'isfunction_wrap', 'isint1array', 'isintent_aux', 'isintent_c', 'isintent_callback', 'isintent_copy', 'isintent_hide', 'isintent_inout', 'isintent_nothide', 'isintent_out', 'isintent_overwrite', 'islogical', 'islong_complex', 'islong_double', 'islong_doublefunction', 'islong_long', 'islong_longfunction', 'ismoduleroutine', 'isoptional', 'isrequired', 'isscalar', 'issigned_long_longarray', 'isstring', 'isstringarray', 'isstringfunction', 'issubroutine', 'issubroutine_wrap', 'isthreadsafe', 'isunsigned', 'isunsigned_char', 'isunsigned_chararray', 'isunsigned_long_long', 'isunsigned_long_longarray', 'isunsigned_short', 'isunsigned_shortarray', 'l_and', 'l_not', 'l_or', 'outmess', 'replace', 'stripcomma'])
        nest_module(stypy.reporting.localization.Localization(__file__, 64, 0), __file__, sys_modules_95498, sys_modules_95498.module_type_store, module_type_store)
    else:
        from numpy.f2py.auxfuncs import applyrules, debugcapi, dictappend, errmess, gentitle, getargs2, hascallstatement, hasexternals, hasinitvalue, hasnote, hasresultnote, isarray, isarrayofstrings, iscomplex, iscomplexarray, iscomplexfunction, iscomplexfunction_warn, isdummyroutine, isexternal, isfunction, isfunction_wrap, isint1array, isintent_aux, isintent_c, isintent_callback, isintent_copy, isintent_hide, isintent_inout, isintent_nothide, isintent_out, isintent_overwrite, islogical, islong_complex, islong_double, islong_doublefunction, islong_long, islong_longfunction, ismoduleroutine, isoptional, isrequired, isscalar, issigned_long_longarray, isstring, isstringarray, isstringfunction, issubroutine, issubroutine_wrap, isthreadsafe, isunsigned, isunsigned_char, isunsigned_chararray, isunsigned_long_long, isunsigned_long_longarray, isunsigned_short, isunsigned_shortarray, l_and, l_not, l_or, outmess, replace, stripcomma

        import_from_module(stypy.reporting.localization.Localization(__file__, 64, 0), 'numpy.f2py.auxfuncs', None, module_type_store, ['applyrules', 'debugcapi', 'dictappend', 'errmess', 'gentitle', 'getargs2', 'hascallstatement', 'hasexternals', 'hasinitvalue', 'hasnote', 'hasresultnote', 'isarray', 'isarrayofstrings', 'iscomplex', 'iscomplexarray', 'iscomplexfunction', 'iscomplexfunction_warn', 'isdummyroutine', 'isexternal', 'isfunction', 'isfunction_wrap', 'isint1array', 'isintent_aux', 'isintent_c', 'isintent_callback', 'isintent_copy', 'isintent_hide', 'isintent_inout', 'isintent_nothide', 'isintent_out', 'isintent_overwrite', 'islogical', 'islong_complex', 'islong_double', 'islong_doublefunction', 'islong_long', 'islong_longfunction', 'ismoduleroutine', 'isoptional', 'isrequired', 'isscalar', 'issigned_long_longarray', 'isstring', 'isstringarray', 'isstringfunction', 'issubroutine', 'issubroutine_wrap', 'isthreadsafe', 'isunsigned', 'isunsigned_char', 'isunsigned_chararray', 'isunsigned_long_long', 'isunsigned_long_longarray', 'isunsigned_short', 'isunsigned_shortarray', 'l_and', 'l_not', 'l_or', 'outmess', 'replace', 'stripcomma'], [applyrules, debugcapi, dictappend, errmess, gentitle, getargs2, hascallstatement, hasexternals, hasinitvalue, hasnote, hasresultnote, isarray, isarrayofstrings, iscomplex, iscomplexarray, iscomplexfunction, iscomplexfunction_warn, isdummyroutine, isexternal, isfunction, isfunction_wrap, isint1array, isintent_aux, isintent_c, isintent_callback, isintent_copy, isintent_hide, isintent_inout, isintent_nothide, isintent_out, isintent_overwrite, islogical, islong_complex, islong_double, islong_doublefunction, islong_long, islong_longfunction, ismoduleroutine, isoptional, isrequired, isscalar, issigned_long_longarray, isstring, isstringarray, isstringfunction, issubroutine, issubroutine_wrap, isthreadsafe, isunsigned, isunsigned_char, isunsigned_chararray, isunsigned_long_long, isunsigned_long_longarray, isunsigned_short, isunsigned_shortarray, l_and, l_not, l_or, outmess, replace, stripcomma])

else:
    # Assigning a type to the variable 'numpy.f2py.auxfuncs' (line 64)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 64, 0), 'numpy.f2py.auxfuncs', import_95497)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/numpy/f2py/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 81, 0))

# 'from numpy.f2py import capi_maps' statement (line 81)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/numpy/f2py/')
import_95499 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 81, 0), 'numpy.f2py')

if (type(import_95499) is not StypyTypeError):

    if (import_95499 != 'pyd_module'):
        __import__(import_95499)
        sys_modules_95500 = sys.modules[import_95499]
        import_from_module(stypy.reporting.localization.Localization(__file__, 81, 0), 'numpy.f2py', sys_modules_95500.module_type_store, module_type_store, ['capi_maps'])
        nest_module(stypy.reporting.localization.Localization(__file__, 81, 0), __file__, sys_modules_95500, sys_modules_95500.module_type_store, module_type_store)
    else:
        from numpy.f2py import capi_maps

        import_from_module(stypy.reporting.localization.Localization(__file__, 81, 0), 'numpy.f2py', None, module_type_store, ['capi_maps'], [capi_maps])

else:
    # Assigning a type to the variable 'numpy.f2py' (line 81)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 0), 'numpy.f2py', import_95499)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/numpy/f2py/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 82, 0))

# 'from numpy.f2py import cfuncs' statement (line 82)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/numpy/f2py/')
import_95501 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 82, 0), 'numpy.f2py')

if (type(import_95501) is not StypyTypeError):

    if (import_95501 != 'pyd_module'):
        __import__(import_95501)
        sys_modules_95502 = sys.modules[import_95501]
        import_from_module(stypy.reporting.localization.Localization(__file__, 82, 0), 'numpy.f2py', sys_modules_95502.module_type_store, module_type_store, ['cfuncs'])
        nest_module(stypy.reporting.localization.Localization(__file__, 82, 0), __file__, sys_modules_95502, sys_modules_95502.module_type_store, module_type_store)
    else:
        from numpy.f2py import cfuncs

        import_from_module(stypy.reporting.localization.Localization(__file__, 82, 0), 'numpy.f2py', None, module_type_store, ['cfuncs'], [cfuncs])

else:
    # Assigning a type to the variable 'numpy.f2py' (line 82)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 82, 0), 'numpy.f2py', import_95501)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/numpy/f2py/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 83, 0))

# 'from numpy.f2py import common_rules' statement (line 83)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/numpy/f2py/')
import_95503 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 83, 0), 'numpy.f2py')

if (type(import_95503) is not StypyTypeError):

    if (import_95503 != 'pyd_module'):
        __import__(import_95503)
        sys_modules_95504 = sys.modules[import_95503]
        import_from_module(stypy.reporting.localization.Localization(__file__, 83, 0), 'numpy.f2py', sys_modules_95504.module_type_store, module_type_store, ['common_rules'])
        nest_module(stypy.reporting.localization.Localization(__file__, 83, 0), __file__, sys_modules_95504, sys_modules_95504.module_type_store, module_type_store)
    else:
        from numpy.f2py import common_rules

        import_from_module(stypy.reporting.localization.Localization(__file__, 83, 0), 'numpy.f2py', None, module_type_store, ['common_rules'], [common_rules])

else:
    # Assigning a type to the variable 'numpy.f2py' (line 83)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 83, 0), 'numpy.f2py', import_95503)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/numpy/f2py/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 84, 0))

# 'from numpy.f2py import use_rules' statement (line 84)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/numpy/f2py/')
import_95505 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 84, 0), 'numpy.f2py')

if (type(import_95505) is not StypyTypeError):

    if (import_95505 != 'pyd_module'):
        __import__(import_95505)
        sys_modules_95506 = sys.modules[import_95505]
        import_from_module(stypy.reporting.localization.Localization(__file__, 84, 0), 'numpy.f2py', sys_modules_95506.module_type_store, module_type_store, ['use_rules'])
        nest_module(stypy.reporting.localization.Localization(__file__, 84, 0), __file__, sys_modules_95506, sys_modules_95506.module_type_store, module_type_store)
    else:
        from numpy.f2py import use_rules

        import_from_module(stypy.reporting.localization.Localization(__file__, 84, 0), 'numpy.f2py', None, module_type_store, ['use_rules'], [use_rules])

else:
    # Assigning a type to the variable 'numpy.f2py' (line 84)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 0), 'numpy.f2py', import_95505)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/numpy/f2py/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 85, 0))

# 'from numpy.f2py import f90mod_rules' statement (line 85)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/numpy/f2py/')
import_95507 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 85, 0), 'numpy.f2py')

if (type(import_95507) is not StypyTypeError):

    if (import_95507 != 'pyd_module'):
        __import__(import_95507)
        sys_modules_95508 = sys.modules[import_95507]
        import_from_module(stypy.reporting.localization.Localization(__file__, 85, 0), 'numpy.f2py', sys_modules_95508.module_type_store, module_type_store, ['f90mod_rules'])
        nest_module(stypy.reporting.localization.Localization(__file__, 85, 0), __file__, sys_modules_95508, sys_modules_95508.module_type_store, module_type_store)
    else:
        from numpy.f2py import f90mod_rules

        import_from_module(stypy.reporting.localization.Localization(__file__, 85, 0), 'numpy.f2py', None, module_type_store, ['f90mod_rules'], [f90mod_rules])

else:
    # Assigning a type to the variable 'numpy.f2py' (line 85)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 85, 0), 'numpy.f2py', import_95507)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/numpy/f2py/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 86, 0))

# 'from numpy.f2py import func2subr' statement (line 86)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/numpy/f2py/')
import_95509 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 86, 0), 'numpy.f2py')

if (type(import_95509) is not StypyTypeError):

    if (import_95509 != 'pyd_module'):
        __import__(import_95509)
        sys_modules_95510 = sys.modules[import_95509]
        import_from_module(stypy.reporting.localization.Localization(__file__, 86, 0), 'numpy.f2py', sys_modules_95510.module_type_store, module_type_store, ['func2subr'])
        nest_module(stypy.reporting.localization.Localization(__file__, 86, 0), __file__, sys_modules_95510, sys_modules_95510.module_type_store, module_type_store)
    else:
        from numpy.f2py import func2subr

        import_from_module(stypy.reporting.localization.Localization(__file__, 86, 0), 'numpy.f2py', None, module_type_store, ['func2subr'], [func2subr])

else:
    # Assigning a type to the variable 'numpy.f2py' (line 86)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 0), 'numpy.f2py', import_95509)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/numpy/f2py/')


# Assigning a Dict to a Name (line 88):

# Assigning a Dict to a Name (line 88):

# Obtaining an instance of the builtin type 'dict' (line 88)
dict_95511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 88, 10), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 88)

# Assigning a type to the variable 'options' (line 88)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 88, 0), 'options', dict_95511)

# Assigning a Dict to a Name (line 89):

# Assigning a Dict to a Name (line 89):

# Obtaining an instance of the builtin type 'dict' (line 89)
dict_95512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 89, 10), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 89)

# Assigning a type to the variable 'sepdict' (line 89)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 89, 0), 'sepdict', dict_95512)


# Obtaining an instance of the builtin type 'list' (line 91)
list_95513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 91, 9), 'list')
# Adding type elements to the builtin type 'list' instance (line 91)
# Adding element type (line 91)
str_95514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 91, 10), 'str', 'decl')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95514)
# Adding element type (line 91)
str_95515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 92, 10), 'str', 'frompyobj')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95515)
# Adding element type (line 91)
str_95516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 93, 10), 'str', 'cleanupfrompyobj')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95516)
# Adding element type (line 91)
str_95517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 94, 10), 'str', 'topyarr')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95517)
# Adding element type (line 91)
str_95518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 94, 21), 'str', 'method')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95518)
# Adding element type (line 91)
str_95519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 95, 10), 'str', 'pyobjfrom')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95519)
# Adding element type (line 91)
str_95520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 95, 23), 'str', 'closepyobjfrom')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95520)
# Adding element type (line 91)
str_95521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 10), 'str', 'freemem')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95521)
# Adding element type (line 91)
str_95522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 97, 10), 'str', 'userincludes')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95522)
# Adding element type (line 91)
str_95523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 98, 10), 'str', 'includes0')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95523)
# Adding element type (line 91)
str_95524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 98, 23), 'str', 'includes')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95524)
# Adding element type (line 91)
str_95525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 98, 35), 'str', 'typedefs')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95525)
# Adding element type (line 91)
str_95526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 98, 47), 'str', 'typedefs_generated')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95526)
# Adding element type (line 91)
str_95527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 99, 10), 'str', 'cppmacros')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95527)
# Adding element type (line 91)
str_95528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 99, 23), 'str', 'cfuncs')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95528)
# Adding element type (line 91)
str_95529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 99, 33), 'str', 'callbacks')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95529)
# Adding element type (line 91)
str_95530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 100, 10), 'str', 'latexdoc')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95530)
# Adding element type (line 91)
str_95531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 101, 10), 'str', 'restdoc')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95531)
# Adding element type (line 91)
str_95532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 10), 'str', 'routine_defs')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95532)
# Adding element type (line 91)
str_95533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 26), 'str', 'externroutines')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95533)
# Adding element type (line 91)
str_95534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 103, 10), 'str', 'initf2pywraphooks')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95534)
# Adding element type (line 91)
str_95535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 104, 10), 'str', 'commonhooks')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95535)
# Adding element type (line 91)
str_95536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 104, 25), 'str', 'initcommonhooks')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95536)
# Adding element type (line 91)
str_95537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 105, 10), 'str', 'f90modhooks')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95537)
# Adding element type (line 91)
str_95538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 105, 25), 'str', 'initf90modhooks')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 9), list_95513, str_95538)

# Testing the type of a for loop iterable (line 91)
is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 91, 0), list_95513)
# Getting the type of the for loop variable (line 91)
for_loop_var_95539 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 91, 0), list_95513)
# Assigning a type to the variable 'k' (line 91)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 0), 'k', for_loop_var_95539)
# SSA begins for a for statement (line 91)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')

# Assigning a Str to a Subscript (line 106):

# Assigning a Str to a Subscript (line 106):
str_95540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 106, 17), 'str', '\n')
# Getting the type of 'sepdict' (line 106)
sepdict_95541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 4), 'sepdict')
# Getting the type of 'k' (line 106)
k_95542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 12), 'k')
# Storing an element on a container (line 106)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 4), sepdict_95541, (k_95542, str_95540))
# SSA join for a for statement
module_type_store = module_type_store.join_ssa_context()


# Assigning a Dict to a Name (line 110):

# Assigning a Dict to a Name (line 110):

# Obtaining an instance of the builtin type 'dict' (line 110)
dict_95543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 110, 15), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 110)
# Adding element type (key, value) (line 110)
str_95544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 4), 'str', 'modulebody')
str_95545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 117, (-1)), 'str', '/* File: #modulename#module.c\n * This file is auto-generated with f2py (version:#f2py_version#).\n * f2py is a Fortran to Python Interface Generator (FPIG), Second Edition,\n * written by Pearu Peterson <pearu@cens.ioc.ee>.\n * See http://cens.ioc.ee/projects/f2py2e/\n * Generation date: ')

# Call to asctime(...): (line 117)
# Processing the call arguments (line 117)

# Call to localtime(...): (line 117)
# Processing the call arguments (line 117)

# Call to time(...): (line 117)
# Processing the call keyword arguments (line 117)
kwargs_95552 = {}
# Getting the type of 'time' (line 117)
time_95550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 54), 'time', False)
# Obtaining the member 'time' of a type (line 117)
time_95551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 117, 54), time_95550, 'time')
# Calling time(args, kwargs) (line 117)
time_call_result_95553 = invoke(stypy.reporting.localization.Localization(__file__, 117, 54), time_95551, *[], **kwargs_95552)

# Processing the call keyword arguments (line 117)
kwargs_95554 = {}
# Getting the type of 'time' (line 117)
time_95548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 39), 'time', False)
# Obtaining the member 'localtime' of a type (line 117)
localtime_95549 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 117, 39), time_95548, 'localtime')
# Calling localtime(args, kwargs) (line 117)
localtime_call_result_95555 = invoke(stypy.reporting.localization.Localization(__file__, 117, 39), localtime_95549, *[time_call_result_95553], **kwargs_95554)

# Processing the call keyword arguments (line 117)
kwargs_95556 = {}
# Getting the type of 'time' (line 117)
time_95546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 26), 'time', False)
# Obtaining the member 'asctime' of a type (line 117)
asctime_95547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 117, 26), time_95546, 'asctime')
# Calling asctime(args, kwargs) (line 117)
asctime_call_result_95557 = invoke(stypy.reporting.localization.Localization(__file__, 117, 26), asctime_95547, *[localtime_call_result_95555], **kwargs_95556)

# Applying the binary operator '+' (line 117)
result_add_95558 = python_operator(stypy.reporting.localization.Localization(__file__, 117, (-1)), '+', str_95545, asctime_call_result_95557)

str_95559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, (-1)), 'str', '\n * $R')
# Applying the binary operator '+' (line 117)
result_add_95560 = python_operator(stypy.reporting.localization.Localization(__file__, 117, 68), '+', result_add_95558, str_95559)

str_95561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, (-1)), 'str', 'evision:$\n * $D')
# Applying the binary operator '+' (line 118)
result_add_95562 = python_operator(stypy.reporting.localization.Localization(__file__, 118, 9), '+', result_add_95560, str_95561)

str_95563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, (-1)), 'str', 'ate:$\n * Do not edit this file directly unless you know what you are doing!!!\n */\n\n#ifdef __cplusplus\nextern "C" {\n#endif\n\n')
# Applying the binary operator '+' (line 119)
result_add_95564 = python_operator(stypy.reporting.localization.Localization(__file__, 119, 9), '+', result_add_95562, str_95563)


# Call to gentitle(...): (line 127)
# Processing the call arguments (line 127)
str_95566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 15), 'str', 'See f2py2e/cfuncs.py: includes')
# Processing the call keyword arguments (line 127)
kwargs_95567 = {}
# Getting the type of 'gentitle' (line 127)
gentitle_95565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 127, 6), 'gentitle', False)
# Calling gentitle(args, kwargs) (line 127)
gentitle_call_result_95568 = invoke(stypy.reporting.localization.Localization(__file__, 127, 6), gentitle_95565, *[str_95566], **kwargs_95567)

# Applying the binary operator '+' (line 127)
result_add_95569 = python_operator(stypy.reporting.localization.Localization(__file__, 127, 4), '+', result_add_95564, gentitle_call_result_95568)

str_95570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, (-1)), 'str', '\n#includes#\n#includes0#\n\n')
# Applying the binary operator '+' (line 127)
result_add_95571 = python_operator(stypy.reporting.localization.Localization(__file__, 127, 49), '+', result_add_95569, str_95570)


# Call to gentitle(...): (line 131)
# Processing the call arguments (line 131)
str_95573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, 15), 'str', "See f2py2e/rules.py: mod_rules['modulebody']")
# Processing the call keyword arguments (line 131)
kwargs_95574 = {}
# Getting the type of 'gentitle' (line 131)
gentitle_95572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 131, 6), 'gentitle', False)
# Calling gentitle(args, kwargs) (line 131)
gentitle_call_result_95575 = invoke(stypy.reporting.localization.Localization(__file__, 131, 6), gentitle_95572, *[str_95573], **kwargs_95574)

# Applying the binary operator '+' (line 131)
result_add_95576 = python_operator(stypy.reporting.localization.Localization(__file__, 131, 4), '+', result_add_95571, gentitle_call_result_95575)

str_95577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, (-1)), 'str', '\nstatic PyObject *#modulename#_error;\nstatic PyObject *#modulename#_module;\n\n')
# Applying the binary operator '+' (line 131)
result_add_95578 = python_operator(stypy.reporting.localization.Localization(__file__, 131, 63), '+', result_add_95576, str_95577)


# Call to gentitle(...): (line 135)
# Processing the call arguments (line 135)
str_95580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 15), 'str', 'See f2py2e/cfuncs.py: typedefs')
# Processing the call keyword arguments (line 135)
kwargs_95581 = {}
# Getting the type of 'gentitle' (line 135)
gentitle_95579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 135, 6), 'gentitle', False)
# Calling gentitle(args, kwargs) (line 135)
gentitle_call_result_95582 = invoke(stypy.reporting.localization.Localization(__file__, 135, 6), gentitle_95579, *[str_95580], **kwargs_95581)

# Applying the binary operator '+' (line 135)
result_add_95583 = python_operator(stypy.reporting.localization.Localization(__file__, 135, 4), '+', result_add_95578, gentitle_call_result_95582)

str_95584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, (-1)), 'str', '\n#typedefs#\n\n')
# Applying the binary operator '+' (line 135)
result_add_95585 = python_operator(stypy.reporting.localization.Localization(__file__, 135, 49), '+', result_add_95583, str_95584)


# Call to gentitle(...): (line 138)
# Processing the call arguments (line 138)
str_95587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 15), 'str', 'See f2py2e/cfuncs.py: typedefs_generated')
# Processing the call keyword arguments (line 138)
kwargs_95588 = {}
# Getting the type of 'gentitle' (line 138)
gentitle_95586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 6), 'gentitle', False)
# Calling gentitle(args, kwargs) (line 138)
gentitle_call_result_95589 = invoke(stypy.reporting.localization.Localization(__file__, 138, 6), gentitle_95586, *[str_95587], **kwargs_95588)

# Applying the binary operator '+' (line 138)
result_add_95590 = python_operator(stypy.reporting.localization.Localization(__file__, 138, 4), '+', result_add_95585, gentitle_call_result_95589)

str_95591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, (-1)), 'str', '\n#typedefs_generated#\n\n')
# Applying the binary operator '+' (line 138)
result_add_95592 = python_operator(stypy.reporting.localization.Localization(__file__, 138, 59), '+', result_add_95590, str_95591)


# Call to gentitle(...): (line 141)
# Processing the call arguments (line 141)
str_95594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 15), 'str', 'See f2py2e/cfuncs.py: cppmacros')
# Processing the call keyword arguments (line 141)
kwargs_95595 = {}
# Getting the type of 'gentitle' (line 141)
gentitle_95593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 6), 'gentitle', False)
# Calling gentitle(args, kwargs) (line 141)
gentitle_call_result_95596 = invoke(stypy.reporting.localization.Localization(__file__, 141, 6), gentitle_95593, *[str_95594], **kwargs_95595)

# Applying the binary operator '+' (line 141)
result_add_95597 = python_operator(stypy.reporting.localization.Localization(__file__, 141, 4), '+', result_add_95592, gentitle_call_result_95596)

str_95598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, (-1)), 'str', '\n#cppmacros#\n\n')
# Applying the binary operator '+' (line 141)
result_add_95599 = python_operator(stypy.reporting.localization.Localization(__file__, 141, 50), '+', result_add_95597, str_95598)


# Call to gentitle(...): (line 144)
# Processing the call arguments (line 144)
str_95601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 15), 'str', 'See f2py2e/cfuncs.py: cfuncs')
# Processing the call keyword arguments (line 144)
kwargs_95602 = {}
# Getting the type of 'gentitle' (line 144)
gentitle_95600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 6), 'gentitle', False)
# Calling gentitle(args, kwargs) (line 144)
gentitle_call_result_95603 = invoke(stypy.reporting.localization.Localization(__file__, 144, 6), gentitle_95600, *[str_95601], **kwargs_95602)

# Applying the binary operator '+' (line 144)
result_add_95604 = python_operator(stypy.reporting.localization.Localization(__file__, 144, 4), '+', result_add_95599, gentitle_call_result_95603)

str_95605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, (-1)), 'str', '\n#cfuncs#\n\n')
# Applying the binary operator '+' (line 144)
result_add_95606 = python_operator(stypy.reporting.localization.Localization(__file__, 144, 47), '+', result_add_95604, str_95605)


# Call to gentitle(...): (line 147)
# Processing the call arguments (line 147)
str_95608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 15), 'str', 'See f2py2e/cfuncs.py: userincludes')
# Processing the call keyword arguments (line 147)
kwargs_95609 = {}
# Getting the type of 'gentitle' (line 147)
gentitle_95607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 6), 'gentitle', False)
# Calling gentitle(args, kwargs) (line 147)
gentitle_call_result_95610 = invoke(stypy.reporting.localization.Localization(__file__, 147, 6), gentitle_95607, *[str_95608], **kwargs_95609)

# Applying the binary operator '+' (line 147)
result_add_95611 = python_operator(stypy.reporting.localization.Localization(__file__, 147, 4), '+', result_add_95606, gentitle_call_result_95610)

str_95612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 150, (-1)), 'str', '\n#userincludes#\n\n')
# Applying the binary operator '+' (line 147)
result_add_95613 = python_operator(stypy.reporting.localization.Localization(__file__, 147, 53), '+', result_add_95611, str_95612)


# Call to gentitle(...): (line 150)
# Processing the call arguments (line 150)
str_95615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 150, 15), 'str', 'See f2py2e/capi_rules.py: usercode')
# Processing the call keyword arguments (line 150)
kwargs_95616 = {}
# Getting the type of 'gentitle' (line 150)
gentitle_95614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 6), 'gentitle', False)
# Calling gentitle(args, kwargs) (line 150)
gentitle_call_result_95617 = invoke(stypy.reporting.localization.Localization(__file__, 150, 6), gentitle_95614, *[str_95615], **kwargs_95616)

# Applying the binary operator '+' (line 150)
result_add_95618 = python_operator(stypy.reporting.localization.Localization(__file__, 150, 4), '+', result_add_95613, gentitle_call_result_95617)

str_95619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 156, (-1)), 'str', '\n#usercode#\n\n/* See f2py2e/rules.py */\n#externroutines#\n\n')
# Applying the binary operator '+' (line 150)
result_add_95620 = python_operator(stypy.reporting.localization.Localization(__file__, 150, 53), '+', result_add_95618, str_95619)


# Call to gentitle(...): (line 156)
# Processing the call arguments (line 156)
str_95622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 156, 15), 'str', 'See f2py2e/capi_rules.py: usercode1')
# Processing the call keyword arguments (line 156)
kwargs_95623 = {}
# Getting the type of 'gentitle' (line 156)
gentitle_95621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 6), 'gentitle', False)
# Calling gentitle(args, kwargs) (line 156)
gentitle_call_result_95624 = invoke(stypy.reporting.localization.Localization(__file__, 156, 6), gentitle_95621, *[str_95622], **kwargs_95623)

# Applying the binary operator '+' (line 156)
result_add_95625 = python_operator(stypy.reporting.localization.Localization(__file__, 156, 4), '+', result_add_95620, gentitle_call_result_95624)

str_95626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 159, (-1)), 'str', '\n#usercode1#\n\n')
# Applying the binary operator '+' (line 156)
result_add_95627 = python_operator(stypy.reporting.localization.Localization(__file__, 156, 54), '+', result_add_95625, str_95626)


# Call to gentitle(...): (line 159)
# Processing the call arguments (line 159)
str_95629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 159, 15), 'str', 'See f2py2e/cb_rules.py: buildcallback')
# Processing the call keyword arguments (line 159)
kwargs_95630 = {}
# Getting the type of 'gentitle' (line 159)
gentitle_95628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 6), 'gentitle', False)
# Calling gentitle(args, kwargs) (line 159)
gentitle_call_result_95631 = invoke(stypy.reporting.localization.Localization(__file__, 159, 6), gentitle_95628, *[str_95629], **kwargs_95630)

# Applying the binary operator '+' (line 159)
result_add_95632 = python_operator(stypy.reporting.localization.Localization(__file__, 159, 4), '+', result_add_95627, gentitle_call_result_95631)

str_95633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, (-1)), 'str', '\n#callbacks#\n\n')
# Applying the binary operator '+' (line 159)
result_add_95634 = python_operator(stypy.reporting.localization.Localization(__file__, 159, 56), '+', result_add_95632, str_95633)


# Call to gentitle(...): (line 162)
# Processing the call arguments (line 162)
str_95636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 15), 'str', 'See f2py2e/rules.py: buildapi')
# Processing the call keyword arguments (line 162)
kwargs_95637 = {}
# Getting the type of 'gentitle' (line 162)
gentitle_95635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 6), 'gentitle', False)
# Calling gentitle(args, kwargs) (line 162)
gentitle_call_result_95638 = invoke(stypy.reporting.localization.Localization(__file__, 162, 6), gentitle_95635, *[str_95636], **kwargs_95637)

# Applying the binary operator '+' (line 162)
result_add_95639 = python_operator(stypy.reporting.localization.Localization(__file__, 162, 4), '+', result_add_95634, gentitle_call_result_95638)

str_95640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, (-1)), 'str', '\n#body#\n\n')
# Applying the binary operator '+' (line 162)
result_add_95641 = python_operator(stypy.reporting.localization.Localization(__file__, 162, 48), '+', result_add_95639, str_95640)


# Call to gentitle(...): (line 165)
# Processing the call arguments (line 165)
str_95643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 15), 'str', 'See f2py2e/f90mod_rules.py: buildhooks')
# Processing the call keyword arguments (line 165)
kwargs_95644 = {}
# Getting the type of 'gentitle' (line 165)
gentitle_95642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 6), 'gentitle', False)
# Calling gentitle(args, kwargs) (line 165)
gentitle_call_result_95645 = invoke(stypy.reporting.localization.Localization(__file__, 165, 6), gentitle_95642, *[str_95643], **kwargs_95644)

# Applying the binary operator '+' (line 165)
result_add_95646 = python_operator(stypy.reporting.localization.Localization(__file__, 165, 4), '+', result_add_95641, gentitle_call_result_95645)

str_95647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 168, (-1)), 'str', '\n#f90modhooks#\n\n')
# Applying the binary operator '+' (line 165)
result_add_95648 = python_operator(stypy.reporting.localization.Localization(__file__, 165, 57), '+', result_add_95646, str_95647)


# Call to gentitle(...): (line 168)
# Processing the call arguments (line 168)
str_95650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 168, 15), 'str', "See f2py2e/rules.py: module_rules['modulebody']")
# Processing the call keyword arguments (line 168)
kwargs_95651 = {}
# Getting the type of 'gentitle' (line 168)
gentitle_95649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 6), 'gentitle', False)
# Calling gentitle(args, kwargs) (line 168)
gentitle_call_result_95652 = invoke(stypy.reporting.localization.Localization(__file__, 168, 6), gentitle_95649, *[str_95650], **kwargs_95651)

# Applying the binary operator '+' (line 168)
result_add_95653 = python_operator(stypy.reporting.localization.Localization(__file__, 168, 4), '+', result_add_95648, gentitle_call_result_95652)

str_95654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 170, (-1)), 'str', '\n\n')
# Applying the binary operator '+' (line 168)
result_add_95655 = python_operator(stypy.reporting.localization.Localization(__file__, 168, 66), '+', result_add_95653, str_95654)


# Call to gentitle(...): (line 170)
# Processing the call arguments (line 170)
str_95657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 170, 15), 'str', 'See f2py2e/common_rules.py: buildhooks')
# Processing the call keyword arguments (line 170)
kwargs_95658 = {}
# Getting the type of 'gentitle' (line 170)
gentitle_95656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 6), 'gentitle', False)
# Calling gentitle(args, kwargs) (line 170)
gentitle_call_result_95659 = invoke(stypy.reporting.localization.Localization(__file__, 170, 6), gentitle_95656, *[str_95657], **kwargs_95658)

# Applying the binary operator '+' (line 170)
result_add_95660 = python_operator(stypy.reporting.localization.Localization(__file__, 170, 4), '+', result_add_95655, gentitle_call_result_95659)

str_95661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 173, (-1)), 'str', '\n#commonhooks#\n\n')
# Applying the binary operator '+' (line 170)
result_add_95662 = python_operator(stypy.reporting.localization.Localization(__file__, 170, 57), '+', result_add_95660, str_95661)


# Call to gentitle(...): (line 173)
# Processing the call arguments (line 173)
str_95664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 173, 15), 'str', 'See f2py2e/rules.py')
# Processing the call keyword arguments (line 173)
kwargs_95665 = {}
# Getting the type of 'gentitle' (line 173)
gentitle_95663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 6), 'gentitle', False)
# Calling gentitle(args, kwargs) (line 173)
gentitle_call_result_95666 = invoke(stypy.reporting.localization.Localization(__file__, 173, 6), gentitle_95663, *[str_95664], **kwargs_95665)

# Applying the binary operator '+' (line 173)
result_add_95667 = python_operator(stypy.reporting.localization.Localization(__file__, 173, 4), '+', result_add_95662, gentitle_call_result_95666)

str_95668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 218, (-1)), 'str', '\n\nstatic FortranDataDef f2py_routine_defs[] = {\n#routine_defs#\n\t{NULL}\n};\n\nstatic PyMethodDef f2py_module_methods[] = {\n#pymethoddef#\n\t{NULL,NULL}\n};\n\n#if PY_VERSION_HEX >= 0x03000000\nstatic struct PyModuleDef moduledef = {\n\tPyModuleDef_HEAD_INIT,\n\t"#modulename#",\n\tNULL,\n\t-1,\n\tf2py_module_methods,\n\tNULL,\n\tNULL,\n\tNULL,\n\tNULL\n};\n#endif\n\n#if PY_VERSION_HEX >= 0x03000000\n#define RETVAL m\nPyMODINIT_FUNC PyInit_#modulename#(void) {\n#else\n#define RETVAL\nPyMODINIT_FUNC init#modulename#(void) {\n#endif\n\tint i;\n\tPyObject *m,*d, *s;\n#if PY_VERSION_HEX >= 0x03000000\n\tm = #modulename#_module = PyModule_Create(&moduledef);\n#else\n\tm = #modulename#_module = Py_InitModule("#modulename#", f2py_module_methods);\n#endif\n\tPy_TYPE(&PyFortran_Type) = &PyType_Type;\n\timport_array();\n\tif (PyErr_Occurred())\n\t\t{PyErr_SetString(PyExc_ImportError, "can\'t initialize module #modulename# (failed to import numpy)"); return RETVAL;}\n\td = PyModule_GetDict(m);\n\ts = PyString_FromString("$R')
# Applying the binary operator '+' (line 173)
result_add_95669 = python_operator(stypy.reporting.localization.Localization(__file__, 173, 38), '+', result_add_95667, str_95668)

str_95670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 246, (-1)), 'str', 'evision: $");\n\tPyDict_SetItemString(d, "__version__", s);\n#if PY_VERSION_HEX >= 0x03000000\n\ts = PyUnicode_FromString(\n#else\n\ts = PyString_FromString(\n#endif\n\t\t"This module \'#modulename#\' is auto-generated with f2py (version:#f2py_version#).\\nFunctions:\\n"\n#docs#".");\n\tPyDict_SetItemString(d, "__doc__", s);\n\t#modulename#_error = PyErr_NewException ("#modulename#.error", NULL, NULL);\n\tPy_DECREF(s);\n\tfor(i=0;f2py_routine_defs[i].name!=NULL;i++)\n\t\tPyDict_SetItemString(d, f2py_routine_defs[i].name,PyFortranObject_NewAsAttr(&f2py_routine_defs[i]));\n#initf2pywraphooks#\n#initf90modhooks#\n#initcommonhooks#\n#interface_usercode#\n\n#ifdef F2PY_REPORT_ATEXIT\n\tif (! PyErr_Occurred())\n\t\ton_exit(f2py_report_on_exit,(void*)"#modulename#");\n#endif\n\n\treturn RETVAL;\n}\n#ifdef __cplusplus\n}\n#endif\n')
# Applying the binary operator '+' (line 218)
result_add_95671 = python_operator(stypy.reporting.localization.Localization(__file__, 218, 34), '+', result_add_95669, str_95670)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 110, 15), dict_95543, (str_95544, result_add_95671))
# Adding element type (key, value) (line 110)
str_95672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 4), 'str', 'separatorsfor')

# Obtaining an instance of the builtin type 'dict' (line 247)
dict_95673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 247)
# Adding element type (key, value) (line 247)
str_95674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 22), 'str', 'latexdoc')
str_95675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 34), 'str', '\n\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 21), dict_95673, (str_95674, str_95675))
# Adding element type (key, value) (line 247)
str_95676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 22), 'str', 'restdoc')
str_95677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 33), 'str', '\n\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 21), dict_95673, (str_95676, str_95677))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 110, 15), dict_95543, (str_95672, dict_95673))
# Adding element type (key, value) (line 110)
str_95678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 4), 'str', 'latexdoc')

# Obtaining an instance of the builtin type 'list' (line 249)
list_95679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 249)
# Adding element type (line 249)
str_95680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 17), 'str', '\\section{Module \\texttt{#texmodulename#}}\n')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 249, 16), list_95679, str_95680)
# Adding element type (line 249)
str_95681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 250, 17), 'str', '#modnote#\n')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 249, 16), list_95679, str_95681)
# Adding element type (line 249)
str_95682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 251, 17), 'str', '#latexdoc#')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 249, 16), list_95679, str_95682)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 110, 15), dict_95543, (str_95678, list_95679))
# Adding element type (key, value) (line 110)
str_95683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 4), 'str', 'restdoc')

# Obtaining an instance of the builtin type 'list' (line 252)
list_95684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 15), 'list')
# Adding type elements to the builtin type 'list' instance (line 252)
# Adding element type (line 252)
str_95685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 16), 'str', 'Module #modulename#\n')
str_95686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 42), 'str', '=')
int_95687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 48), 'int')
# Applying the binary operator '*' (line 252)
result_mul_95688 = python_operator(stypy.reporting.localization.Localization(__file__, 252, 42), '*', str_95686, int_95687)

# Applying the binary operator '+' (line 252)
result_add_95689 = python_operator(stypy.reporting.localization.Localization(__file__, 252, 16), '+', str_95685, result_mul_95688)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 15), list_95684, result_add_95689)
# Adding element type (line 252)
str_95690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 253, 16), 'str', '\n#restdoc#')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 15), list_95684, str_95690)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 110, 15), dict_95543, (str_95683, list_95684))

# Assigning a type to the variable 'module_rules' (line 110)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 110, 0), 'module_rules', dict_95543)

# Assigning a List to a Name (line 256):

# Assigning a List to a Name (line 256):

# Obtaining an instance of the builtin type 'list' (line 256)
list_95691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 15), 'list')
# Adding type elements to the builtin type 'list' instance (line 256)
# Adding element type (line 256)

# Obtaining an instance of the builtin type 'dict' (line 257)
dict_95692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 257)
# Adding element type (key, value) (line 257)
str_95693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 5), 'str', 'body')
str_95694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 13), 'str', '/*eof body*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 4), dict_95692, (str_95693, str_95694))
# Adding element type (key, value) (line 257)
str_95695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 5), 'str', 'method')
str_95696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 15), 'str', '/*eof method*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 4), dict_95692, (str_95695, str_95696))
# Adding element type (key, value) (line 257)
str_95697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 5), 'str', 'externroutines')
str_95698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 23), 'str', '/*eof externroutines*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 4), dict_95692, (str_95697, str_95698))
# Adding element type (key, value) (line 257)
str_95699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 5), 'str', 'routine_defs')
str_95700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 21), 'str', '/*eof routine_defs*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 4), dict_95692, (str_95699, str_95700))
# Adding element type (key, value) (line 257)
str_95701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 5), 'str', 'initf90modhooks')
str_95702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 24), 'str', '/*eof initf90modhooks*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 4), dict_95692, (str_95701, str_95702))
# Adding element type (key, value) (line 257)
str_95703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 5), 'str', 'initf2pywraphooks')
str_95704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 26), 'str', '/*eof initf2pywraphooks*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 4), dict_95692, (str_95703, str_95704))
# Adding element type (key, value) (line 257)
str_95705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 5), 'str', 'initcommonhooks')
str_95706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 24), 'str', '/*eof initcommonhooks*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 4), dict_95692, (str_95705, str_95706))
# Adding element type (key, value) (line 257)
str_95707 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 5), 'str', 'latexdoc')
str_95708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 17), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 4), dict_95692, (str_95707, str_95708))
# Adding element type (key, value) (line 257)
str_95709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 5), 'str', 'restdoc')
str_95710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 16), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 4), dict_95692, (str_95709, str_95710))
# Adding element type (key, value) (line 257)
str_95711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 266, 5), 'str', 'modnote')

# Obtaining an instance of the builtin type 'dict' (line 266)
dict_95712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 266, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 266)
# Adding element type (key, value) (line 266)
# Getting the type of 'hasnote' (line 266)
hasnote_95713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 17), 'hasnote')
str_95714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 266, 26), 'str', '#note#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 266, 16), dict_95712, (hasnote_95713, str_95714))
# Adding element type (key, value) (line 266)

# Call to l_not(...): (line 266)
# Processing the call arguments (line 266)
# Getting the type of 'hasnote' (line 266)
hasnote_95716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 42), 'hasnote', False)
# Processing the call keyword arguments (line 266)
kwargs_95717 = {}
# Getting the type of 'l_not' (line 266)
l_not_95715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 36), 'l_not', False)
# Calling l_not(args, kwargs) (line 266)
l_not_call_result_95718 = invoke(stypy.reporting.localization.Localization(__file__, 266, 36), l_not_95715, *[hasnote_95716], **kwargs_95717)

str_95719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 266, 52), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 266, 16), dict_95712, (l_not_call_result_95718, str_95719))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 4), dict_95692, (str_95711, dict_95712))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 256, 15), list_95691, dict_95692)

# Assigning a type to the variable 'defmod_rules' (line 256)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 256, 0), 'defmod_rules', list_95691)

# Assigning a Dict to a Name (line 270):

# Assigning a Dict to a Name (line 270):

# Obtaining an instance of the builtin type 'dict' (line 270)
dict_95720 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 270)
# Adding element type (key, value) (line 270)
str_95721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 4), 'str', 'separatorsfor')
# Getting the type of 'sepdict' (line 271)
sepdict_95722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 21), 'sepdict')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 16), dict_95720, (str_95721, sepdict_95722))
# Adding element type (key, value) (line 270)
str_95723 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 272, 4), 'str', 'body')
str_95724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 327, (-1)), 'str', '\n#begintitle#\nstatic char doc_#apiname#[] = "\\\n#docreturn##name#(#docsignatureshort#)\\n\\nWrapper for ``#name#``.\\\n\\n#docstrsigns#";\n/* #declfortranroutine# */\nstatic PyObject *#apiname#(const PyObject *capi_self,\n                           PyObject *capi_args,\n                           PyObject *capi_keywds,\n                           #functype# (*f2py_func)(#callprotoargument#)) {\n\tPyObject * volatile capi_buildvalue = NULL;\n\tvolatile int f2py_success = 1;\n#decl#\n\tstatic char *capi_kwlist[] = {#kwlist##kwlistopt##kwlistxa#NULL};\n#usercode#\n#routdebugenter#\n#ifdef F2PY_REPORT_ATEXIT\nf2py_start_clock();\n#endif\n\tif (!PyArg_ParseTupleAndKeywords(capi_args,capi_keywds,\\\n\t\t"#argformat##keyformat##xaformat#:#pyname#",\\\n\t\tcapi_kwlist#args_capi##keys_capi##keys_xa#))\n\t\treturn NULL;\n#frompyobj#\n/*end of frompyobj*/\n#ifdef F2PY_REPORT_ATEXIT\nf2py_start_call_clock();\n#endif\n#callfortranroutine#\nif (PyErr_Occurred())\n  f2py_success = 0;\n#ifdef F2PY_REPORT_ATEXIT\nf2py_stop_call_clock();\n#endif\n/*end of callfortranroutine*/\n\t\tif (f2py_success) {\n#pyobjfrom#\n/*end of pyobjfrom*/\n\t\tCFUNCSMESS("Building return value.\\n");\n\t\tcapi_buildvalue = Py_BuildValue("#returnformat#"#return#);\n/*closepyobjfrom*/\n#closepyobjfrom#\n\t\t} /*if (f2py_success) after callfortranroutine*/\n/*cleanupfrompyobj*/\n#cleanupfrompyobj#\n\tif (capi_buildvalue == NULL) {\n#routdebugfailure#\n\t} else {\n#routdebugleave#\n\t}\n\tCFUNCSMESS("Freeing memory.\\n");\n#freemem#\n#ifdef F2PY_REPORT_ATEXIT\nf2py_stop_clock();\n#endif\n\treturn capi_buildvalue;\n}\n#endtitle#\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 16), dict_95720, (str_95723, str_95724))
# Adding element type (key, value) (line 270)
str_95725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 4), 'str', 'routine_defs')
str_95726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 20), 'str', '#routine_def#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 16), dict_95720, (str_95725, str_95726))
# Adding element type (key, value) (line 270)
str_95727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 329, 4), 'str', 'initf2pywraphooks')
str_95728 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 329, 25), 'str', '#initf2pywraphook#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 16), dict_95720, (str_95727, str_95728))
# Adding element type (key, value) (line 270)
str_95729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 330, 4), 'str', 'externroutines')
str_95730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 330, 22), 'str', '#declfortranroutine#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 16), dict_95720, (str_95729, str_95730))
# Adding element type (key, value) (line 270)
str_95731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 331, 4), 'str', 'doc')
str_95732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 331, 11), 'str', '#docreturn##name#(#docsignature#)')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 16), dict_95720, (str_95731, str_95732))
# Adding element type (key, value) (line 270)
str_95733 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 332, 4), 'str', 'docshort')
str_95734 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 332, 16), 'str', '#docreturn##name#(#docsignatureshort#)')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 16), dict_95720, (str_95733, str_95734))
# Adding element type (key, value) (line 270)
str_95735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 4), 'str', 'docs')
str_95736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 12), 'str', '"\t#docreturn##name#(#docsignature#)\\n"\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 16), dict_95720, (str_95735, str_95736))
# Adding element type (key, value) (line 270)
str_95737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 4), 'str', 'need')

# Obtaining an instance of the builtin type 'list' (line 334)
list_95738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 12), 'list')
# Adding type elements to the builtin type 'list' instance (line 334)
# Adding element type (line 334)
str_95739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 13), 'str', 'arrayobject.h')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 334, 12), list_95738, str_95739)
# Adding element type (line 334)
str_95740 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 30), 'str', 'CFUNCSMESS')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 334, 12), list_95738, str_95740)
# Adding element type (line 334)
str_95741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 44), 'str', 'MINMAX')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 334, 12), list_95738, str_95741)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 16), dict_95720, (str_95737, list_95738))
# Adding element type (key, value) (line 270)
str_95742 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 4), 'str', 'cppmacros')

# Obtaining an instance of the builtin type 'dict' (line 335)
dict_95743 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 17), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 335)
# Adding element type (key, value) (line 335)
# Getting the type of 'debugcapi' (line 335)
debugcapi_95744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 18), 'debugcapi')
str_95745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 29), 'str', '#define DEBUGCFUNCS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 335, 17), dict_95743, (debugcapi_95744, str_95745))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 16), dict_95720, (str_95742, dict_95743))
# Adding element type (key, value) (line 270)
str_95746 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 4), 'str', 'latexdoc')

# Obtaining an instance of the builtin type 'list' (line 336)
list_95747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 336)
# Adding element type (line 336)
str_95748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 17), 'str', '\\subsection{Wrapper function \\texttt{#texname#}}\n')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 336, 16), list_95747, str_95748)
# Adding element type (line 336)
str_95749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, (-1)), 'str', '\n\\noindent{{}\\verb@#docreturn##name#@{}}\\texttt{(#latexdocsignatureshort#)}\n#routnote#\n\n#latexdocstrsigns#\n')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 336, 16), list_95747, str_95749)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 16), dict_95720, (str_95746, list_95747))
# Adding element type (key, value) (line 270)
str_95750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 343, 4), 'str', 'restdoc')

# Obtaining an instance of the builtin type 'list' (line 343)
list_95751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 343, 15), 'list')
# Adding type elements to the builtin type 'list' instance (line 343)
# Adding element type (line 343)
str_95752 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 343, 16), 'str', 'Wrapped function ``#name#``\n')
str_95753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 343, 50), 'str', '-')
int_95754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 343, 56), 'int')
# Applying the binary operator '*' (line 343)
result_mul_95755 = python_operator(stypy.reporting.localization.Localization(__file__, 343, 50), '*', str_95753, int_95754)

# Applying the binary operator '+' (line 343)
result_add_95756 = python_operator(stypy.reporting.localization.Localization(__file__, 343, 16), '+', str_95752, result_mul_95755)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 343, 15), list_95751, result_add_95756)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 16), dict_95720, (str_95750, list_95751))

# Assigning a type to the variable 'routine_rules' (line 270)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 0), 'routine_rules', dict_95720)

# Assigning a List to a Name (line 350):

# Assigning a List to a Name (line 350):

# Obtaining an instance of the builtin type 'list' (line 350)
list_95757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 350, 13), 'list')
# Adding type elements to the builtin type 'list' instance (line 350)
# Adding element type (line 350)

# Obtaining an instance of the builtin type 'dict' (line 351)
dict_95758 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 351, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 351)
# Adding element type (key, value) (line 351)
str_95759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 8), 'str', 'separatorsfor')

# Obtaining an instance of the builtin type 'dict' (line 352)
dict_95760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 25), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 352)
# Adding element type (key, value) (line 352)
str_95761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 26), 'str', 'callfortranroutine')
str_95762 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 48), 'str', '\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 25), dict_95760, (str_95761, str_95762))
# Adding element type (key, value) (line 352)
str_95763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 54), 'str', 'routdebugenter')
str_95764 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 72), 'str', '\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 25), dict_95760, (str_95763, str_95764))
# Adding element type (key, value) (line 352)
str_95765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 78), 'str', 'decl')
str_95766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 86), 'str', '\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 25), dict_95760, (str_95765, str_95766))
# Adding element type (key, value) (line 352)
str_95767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 26), 'str', 'routdebugleave')
str_95768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 44), 'str', '\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 25), dict_95760, (str_95767, str_95768))
# Adding element type (key, value) (line 352)
str_95769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 50), 'str', 'routdebugfailure')
str_95770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 70), 'str', '\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 25), dict_95760, (str_95769, str_95770))
# Adding element type (key, value) (line 352)
str_95771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 354, 26), 'str', 'setjmpbuf')
str_95772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 354, 39), 'str', ' || ')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 25), dict_95760, (str_95771, str_95772))
# Adding element type (key, value) (line 352)
str_95773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 355, 26), 'str', 'docstrreq')
str_95774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 355, 39), 'str', '\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 25), dict_95760, (str_95773, str_95774))
# Adding element type (key, value) (line 352)
str_95775 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 355, 45), 'str', 'docstropt')
str_95776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 355, 58), 'str', '\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 25), dict_95760, (str_95775, str_95776))
# Adding element type (key, value) (line 352)
str_95777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 355, 64), 'str', 'docstrout')
str_95778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 355, 77), 'str', '\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 25), dict_95760, (str_95777, str_95778))
# Adding element type (key, value) (line 352)
str_95779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 356, 26), 'str', 'docstrcbs')
str_95780 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 356, 39), 'str', '\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 25), dict_95760, (str_95779, str_95780))
# Adding element type (key, value) (line 352)
str_95781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 356, 45), 'str', 'docstrsigns')
str_95782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 356, 60), 'str', '\\n"\n"')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 25), dict_95760, (str_95781, str_95782))
# Adding element type (key, value) (line 352)
str_95783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 357, 26), 'str', 'latexdocstrsigns')
str_95784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 357, 46), 'str', '\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 25), dict_95760, (str_95783, str_95784))
# Adding element type (key, value) (line 352)
str_95785 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 26), 'str', 'latexdocstrreq')
str_95786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 44), 'str', '\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 25), dict_95760, (str_95785, str_95786))
# Adding element type (key, value) (line 352)
str_95787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 50), 'str', 'latexdocstropt')
str_95788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 68), 'str', '\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 25), dict_95760, (str_95787, str_95788))
# Adding element type (key, value) (line 352)
str_95789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 359, 26), 'str', 'latexdocstrout')
str_95790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 359, 44), 'str', '\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 25), dict_95760, (str_95789, str_95790))
# Adding element type (key, value) (line 352)
str_95791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 359, 50), 'str', 'latexdocstrcbs')
str_95792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 359, 68), 'str', '\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 25), dict_95760, (str_95791, str_95792))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95759, dict_95760))
# Adding element type (key, value) (line 351)
str_95793 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 8), 'str', 'kwlist')
str_95794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 18), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95793, str_95794))
# Adding element type (key, value) (line 351)
str_95795 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 22), 'str', 'kwlistopt')
str_95796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 35), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95795, str_95796))
# Adding element type (key, value) (line 351)
str_95797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 39), 'str', 'callfortran')
str_95798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 54), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95797, str_95798))
# Adding element type (key, value) (line 351)
str_95799 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 58), 'str', 'callfortranappend')
str_95800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 79), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95799, str_95800))
# Adding element type (key, value) (line 351)
str_95801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 362, 8), 'str', 'docsign')
str_95802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 362, 19), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95801, str_95802))
# Adding element type (key, value) (line 351)
str_95803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 362, 23), 'str', 'docsignopt')
str_95804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 362, 37), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95803, str_95804))
# Adding element type (key, value) (line 351)
str_95805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 362, 41), 'str', 'decl')
str_95806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 362, 49), 'str', '/*decl*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95805, str_95806))
# Adding element type (key, value) (line 351)
str_95807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 8), 'str', 'freemem')
str_95808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 19), 'str', '/*freemem*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95807, str_95808))
# Adding element type (key, value) (line 351)
str_95809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 364, 8), 'str', 'docsignshort')
str_95810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 364, 24), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95809, str_95810))
# Adding element type (key, value) (line 351)
str_95811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 364, 28), 'str', 'docsignoptshort')
str_95812 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 364, 47), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95811, str_95812))
# Adding element type (key, value) (line 351)
str_95813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 365, 8), 'str', 'docstrsigns')
str_95814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 365, 23), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95813, str_95814))
# Adding element type (key, value) (line 351)
str_95815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 365, 27), 'str', 'latexdocstrsigns')
str_95816 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 365, 47), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95815, str_95816))
# Adding element type (key, value) (line 351)
str_95817 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 366, 8), 'str', 'docstrreq')
str_95818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 366, 21), 'str', '\\nParameters\\n----------')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95817, str_95818))
# Adding element type (key, value) (line 351)
str_95819 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 367, 8), 'str', 'docstropt')
str_95820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 367, 21), 'str', '\\nOther Parameters\\n----------------')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95819, str_95820))
# Adding element type (key, value) (line 351)
str_95821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 368, 8), 'str', 'docstrout')
str_95822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 368, 21), 'str', '\\nReturns\\n-------')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95821, str_95822))
# Adding element type (key, value) (line 351)
str_95823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 369, 8), 'str', 'docstrcbs')
str_95824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 369, 21), 'str', '\\nNotes\\n-----\\nCall-back functions::\\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95823, str_95824))
# Adding element type (key, value) (line 351)
str_95825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 370, 8), 'str', 'latexdocstrreq')
str_95826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 370, 26), 'str', '\\noindent Required arguments:')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95825, str_95826))
# Adding element type (key, value) (line 351)
str_95827 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 371, 8), 'str', 'latexdocstropt')
str_95828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 371, 26), 'str', '\\noindent Optional arguments:')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95827, str_95828))
# Adding element type (key, value) (line 351)
str_95829 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 372, 8), 'str', 'latexdocstrout')
str_95830 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 372, 26), 'str', '\\noindent Return objects:')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95829, str_95830))
# Adding element type (key, value) (line 351)
str_95831 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 373, 8), 'str', 'latexdocstrcbs')
str_95832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 373, 26), 'str', '\\noindent Call-back functions:')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95831, str_95832))
# Adding element type (key, value) (line 351)
str_95833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 8), 'str', 'args_capi')
str_95834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 21), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95833, str_95834))
# Adding element type (key, value) (line 351)
str_95835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 25), 'str', 'keys_capi')
str_95836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 38), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95835, str_95836))
# Adding element type (key, value) (line 351)
str_95837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 42), 'str', 'functype')
str_95838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 54), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95837, str_95838))
# Adding element type (key, value) (line 351)
str_95839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 375, 8), 'str', 'frompyobj')
str_95840 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 375, 21), 'str', '/*frompyobj*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95839, str_95840))
# Adding element type (key, value) (line 351)
str_95841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 377, 8), 'str', 'cleanupfrompyobj')

# Obtaining an instance of the builtin type 'list' (line 377)
list_95842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 377, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 377)
# Adding element type (line 377)
str_95843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 377, 29), 'str', '/*end of cleanupfrompyobj*/')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 377, 28), list_95842, str_95843)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95841, list_95842))
# Adding element type (key, value) (line 351)
str_95844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 8), 'str', 'pyobjfrom')
str_95845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 21), 'str', '/*pyobjfrom*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95844, str_95845))
# Adding element type (key, value) (line 351)
str_95846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 380, 8), 'str', 'closepyobjfrom')

# Obtaining an instance of the builtin type 'list' (line 380)
list_95847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 380, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 380)
# Adding element type (line 380)
str_95848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 380, 27), 'str', '/*end of closepyobjfrom*/')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 380, 26), list_95847, str_95848)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95846, list_95847))
# Adding element type (key, value) (line 351)
str_95849 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 8), 'str', 'topyarr')
str_95850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 19), 'str', '/*topyarr*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95849, str_95850))
# Adding element type (key, value) (line 351)
str_95851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 34), 'str', 'routdebugleave')
str_95852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 52), 'str', '/*routdebugleave*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95851, str_95852))
# Adding element type (key, value) (line 351)
str_95853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 382, 8), 'str', 'routdebugenter')
str_95854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 382, 26), 'str', '/*routdebugenter*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95853, str_95854))
# Adding element type (key, value) (line 351)
str_95855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 383, 8), 'str', 'routdebugfailure')
str_95856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 383, 28), 'str', '/*routdebugfailure*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95855, str_95856))
# Adding element type (key, value) (line 351)
str_95857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 8), 'str', 'callfortranroutine')
str_95858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 30), 'str', '/*callfortranroutine*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95857, str_95858))
# Adding element type (key, value) (line 351)
str_95859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 8), 'str', 'argformat')
str_95860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 21), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95859, str_95860))
# Adding element type (key, value) (line 351)
str_95861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 25), 'str', 'keyformat')
str_95862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 38), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95861, str_95862))
# Adding element type (key, value) (line 351)
str_95863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 42), 'str', 'need_cfuncs')
str_95864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 57), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95863, str_95864))
# Adding element type (key, value) (line 351)
str_95865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 8), 'str', 'docreturn')
str_95866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 21), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95865, str_95866))
# Adding element type (key, value) (line 351)
str_95867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 25), 'str', 'return')
str_95868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 35), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95867, str_95868))
# Adding element type (key, value) (line 351)
str_95869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 39), 'str', 'returnformat')
str_95870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 55), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95869, str_95870))
# Adding element type (key, value) (line 351)
str_95871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 59), 'str', 'rformat')
str_95872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 70), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95871, str_95872))
# Adding element type (key, value) (line 351)
str_95873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 8), 'str', 'kwlistxa')
str_95874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 20), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95873, str_95874))
# Adding element type (key, value) (line 351)
str_95875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 24), 'str', 'keys_xa')
str_95876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 35), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95875, str_95876))
# Adding element type (key, value) (line 351)
str_95877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 39), 'str', 'xaformat')
str_95878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 51), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95877, str_95878))
# Adding element type (key, value) (line 351)
str_95879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 55), 'str', 'docsignxa')
str_95880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 68), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95879, str_95880))
# Adding element type (key, value) (line 351)
str_95881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 72), 'str', 'docsignxashort')
str_95882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 90), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95881, str_95882))
# Adding element type (key, value) (line 351)
str_95883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 8), 'str', 'initf2pywraphook')
str_95884 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 28), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95883, str_95884))
# Adding element type (key, value) (line 351)
str_95885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 8), 'str', 'routnote')

# Obtaining an instance of the builtin type 'dict' (line 389)
dict_95886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 20), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 389)
# Adding element type (key, value) (line 389)
# Getting the type of 'hasnote' (line 389)
hasnote_95887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 21), 'hasnote')
str_95888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 30), 'str', '--- #note#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 389, 20), dict_95886, (hasnote_95887, str_95888))
# Adding element type (key, value) (line 389)

# Call to l_not(...): (line 389)
# Processing the call arguments (line 389)
# Getting the type of 'hasnote' (line 389)
hasnote_95890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 50), 'hasnote', False)
# Processing the call keyword arguments (line 389)
kwargs_95891 = {}
# Getting the type of 'l_not' (line 389)
l_not_95889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 44), 'l_not', False)
# Calling l_not(args, kwargs) (line 389)
l_not_call_result_95892 = invoke(stypy.reporting.localization.Localization(__file__, 389, 44), l_not_95889, *[hasnote_95890], **kwargs_95891)

str_95893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 60), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 389, 20), dict_95886, (l_not_call_result_95892, str_95893))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 4), dict_95758, (str_95885, dict_95886))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 13), list_95757, dict_95758)
# Adding element type (line 350)

# Obtaining an instance of the builtin type 'dict' (line 390)
dict_95894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 390)
# Adding element type (key, value) (line 390)
str_95895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 391, 8), 'str', 'apiname')
str_95896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 391, 19), 'str', 'f2py_rout_#modulename#_#name#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 390, 7), dict_95894, (str_95895, str_95896))
# Adding element type (key, value) (line 390)
str_95897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 8), 'str', 'pyname')
str_95898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 18), 'str', '#modulename#.#name#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 390, 7), dict_95894, (str_95897, str_95898))
# Adding element type (key, value) (line 390)
str_95899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 393, 8), 'str', 'decl')
str_95900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 393, 16), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 390, 7), dict_95894, (str_95899, str_95900))
# Adding element type (key, value) (line 390)
str_95901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 394, 8), 'str', '_check')

# Call to l_not(...): (line 394)
# Processing the call arguments (line 394)
# Getting the type of 'ismoduleroutine' (line 394)
ismoduleroutine_95903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 24), 'ismoduleroutine', False)
# Processing the call keyword arguments (line 394)
kwargs_95904 = {}
# Getting the type of 'l_not' (line 394)
l_not_95902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 18), 'l_not', False)
# Calling l_not(args, kwargs) (line 394)
l_not_call_result_95905 = invoke(stypy.reporting.localization.Localization(__file__, 394, 18), l_not_95902, *[ismoduleroutine_95903], **kwargs_95904)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 390, 7), dict_95894, (str_95901, l_not_call_result_95905))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 13), list_95757, dict_95894)
# Adding element type (line 350)

# Obtaining an instance of the builtin type 'dict' (line 395)
dict_95906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 395, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 395)
# Adding element type (key, value) (line 395)
str_95907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 396, 8), 'str', 'apiname')
str_95908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 396, 19), 'str', 'f2py_rout_#modulename#_#f90modulename#_#name#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 395, 7), dict_95906, (str_95907, str_95908))
# Adding element type (key, value) (line 395)
str_95909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 397, 8), 'str', 'pyname')
str_95910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 397, 18), 'str', '#modulename#.#f90modulename#.#name#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 395, 7), dict_95906, (str_95909, str_95910))
# Adding element type (key, value) (line 395)
str_95911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 398, 8), 'str', 'decl')
str_95912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 398, 16), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 395, 7), dict_95906, (str_95911, str_95912))
# Adding element type (key, value) (line 395)
str_95913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 8), 'str', '_check')
# Getting the type of 'ismoduleroutine' (line 399)
ismoduleroutine_95914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 18), 'ismoduleroutine')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 395, 7), dict_95906, (str_95913, ismoduleroutine_95914))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 13), list_95757, dict_95906)
# Adding element type (line 350)

# Obtaining an instance of the builtin type 'dict' (line 400)
dict_95915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 400, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 400)
# Adding element type (key, value) (line 400)
str_95916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 8), 'str', 'functype')
str_95917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 20), 'str', 'void')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 400, 7), dict_95915, (str_95916, str_95917))
# Adding element type (key, value) (line 400)
str_95918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 402, 8), 'str', 'declfortranroutine')

# Obtaining an instance of the builtin type 'dict' (line 402)
dict_95919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 402, 30), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 402)
# Adding element type (key, value) (line 402)

# Call to l_and(...): (line 402)
# Processing the call arguments (line 402)

# Call to l_not(...): (line 402)
# Processing the call arguments (line 402)

# Call to l_or(...): (line 402)
# Processing the call arguments (line 402)
# Getting the type of 'ismoduleroutine' (line 402)
ismoduleroutine_95923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 48), 'ismoduleroutine', False)
# Getting the type of 'isintent_c' (line 402)
isintent_c_95924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 65), 'isintent_c', False)
# Processing the call keyword arguments (line 402)
kwargs_95925 = {}
# Getting the type of 'l_or' (line 402)
l_or_95922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 43), 'l_or', False)
# Calling l_or(args, kwargs) (line 402)
l_or_call_result_95926 = invoke(stypy.reporting.localization.Localization(__file__, 402, 43), l_or_95922, *[ismoduleroutine_95923, isintent_c_95924], **kwargs_95925)

# Processing the call keyword arguments (line 402)
kwargs_95927 = {}
# Getting the type of 'l_not' (line 402)
l_not_95921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 37), 'l_not', False)
# Calling l_not(args, kwargs) (line 402)
l_not_call_result_95928 = invoke(stypy.reporting.localization.Localization(__file__, 402, 37), l_not_95921, *[l_or_call_result_95926], **kwargs_95927)


# Call to l_not(...): (line 402)
# Processing the call arguments (line 402)
# Getting the type of 'isdummyroutine' (line 402)
isdummyroutine_95930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 85), 'isdummyroutine', False)
# Processing the call keyword arguments (line 402)
kwargs_95931 = {}
# Getting the type of 'l_not' (line 402)
l_not_95929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 79), 'l_not', False)
# Calling l_not(args, kwargs) (line 402)
l_not_call_result_95932 = invoke(stypy.reporting.localization.Localization(__file__, 402, 79), l_not_95929, *[isdummyroutine_95930], **kwargs_95931)

# Processing the call keyword arguments (line 402)
kwargs_95933 = {}
# Getting the type of 'l_and' (line 402)
l_and_95920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 31), 'l_and', False)
# Calling l_and(args, kwargs) (line 402)
l_and_call_result_95934 = invoke(stypy.reporting.localization.Localization(__file__, 402, 31), l_and_95920, *[l_not_call_result_95928, l_not_call_result_95932], **kwargs_95933)

str_95935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 402, 103), 'str', 'extern void #F_FUNC#(#fortranname#,#FORTRANNAME#)(#callprotoargument#);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 402, 30), dict_95919, (l_and_call_result_95934, str_95935))
# Adding element type (key, value) (line 402)

# Call to l_and(...): (line 403)
# Processing the call arguments (line 403)

# Call to l_not(...): (line 403)
# Processing the call arguments (line 403)
# Getting the type of 'ismoduleroutine' (line 403)
ismoduleroutine_95938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 43), 'ismoduleroutine', False)
# Processing the call keyword arguments (line 403)
kwargs_95939 = {}
# Getting the type of 'l_not' (line 403)
l_not_95937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 37), 'l_not', False)
# Calling l_not(args, kwargs) (line 403)
l_not_call_result_95940 = invoke(stypy.reporting.localization.Localization(__file__, 403, 37), l_not_95937, *[ismoduleroutine_95938], **kwargs_95939)

# Getting the type of 'isintent_c' (line 403)
isintent_c_95941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 61), 'isintent_c', False)

# Call to l_not(...): (line 403)
# Processing the call arguments (line 403)
# Getting the type of 'isdummyroutine' (line 403)
isdummyroutine_95943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 79), 'isdummyroutine', False)
# Processing the call keyword arguments (line 403)
kwargs_95944 = {}
# Getting the type of 'l_not' (line 403)
l_not_95942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 73), 'l_not', False)
# Calling l_not(args, kwargs) (line 403)
l_not_call_result_95945 = invoke(stypy.reporting.localization.Localization(__file__, 403, 73), l_not_95942, *[isdummyroutine_95943], **kwargs_95944)

# Processing the call keyword arguments (line 403)
kwargs_95946 = {}
# Getting the type of 'l_and' (line 403)
l_and_95936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 31), 'l_and', False)
# Calling l_and(args, kwargs) (line 403)
l_and_call_result_95947 = invoke(stypy.reporting.localization.Localization(__file__, 403, 31), l_and_95936, *[l_not_call_result_95940, isintent_c_95941, l_not_call_result_95945], **kwargs_95946)

str_95948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 403, 97), 'str', 'extern void #fortranname#(#callprotoargument#);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 402, 30), dict_95919, (l_and_call_result_95947, str_95948))
# Adding element type (key, value) (line 402)
# Getting the type of 'ismoduleroutine' (line 404)
ismoduleroutine_95949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 31), 'ismoduleroutine')
str_95950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 404, 48), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 402, 30), dict_95919, (ismoduleroutine_95949, str_95950))
# Adding element type (key, value) (line 402)
# Getting the type of 'isdummyroutine' (line 405)
isdummyroutine_95951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 31), 'isdummyroutine')
str_95952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 405, 47), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 402, 30), dict_95919, (isdummyroutine_95951, str_95952))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 400, 7), dict_95915, (str_95918, dict_95919))
# Adding element type (key, value) (line 400)
str_95953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, 8), 'str', 'routine_def')

# Obtaining an instance of the builtin type 'dict' (line 407)
dict_95954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, 23), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 407)
# Adding element type (key, value) (line 407)

# Call to l_not(...): (line 407)
# Processing the call arguments (line 407)

# Call to l_or(...): (line 407)
# Processing the call arguments (line 407)
# Getting the type of 'ismoduleroutine' (line 407)
ismoduleroutine_95957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 35), 'ismoduleroutine', False)
# Getting the type of 'isintent_c' (line 407)
isintent_c_95958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 52), 'isintent_c', False)
# Getting the type of 'isdummyroutine' (line 407)
isdummyroutine_95959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 64), 'isdummyroutine', False)
# Processing the call keyword arguments (line 407)
kwargs_95960 = {}
# Getting the type of 'l_or' (line 407)
l_or_95956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 30), 'l_or', False)
# Calling l_or(args, kwargs) (line 407)
l_or_call_result_95961 = invoke(stypy.reporting.localization.Localization(__file__, 407, 30), l_or_95956, *[ismoduleroutine_95957, isintent_c_95958, isdummyroutine_95959], **kwargs_95960)

# Processing the call keyword arguments (line 407)
kwargs_95962 = {}
# Getting the type of 'l_not' (line 407)
l_not_95955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 24), 'l_not', False)
# Calling l_not(args, kwargs) (line 407)
l_not_call_result_95963 = invoke(stypy.reporting.localization.Localization(__file__, 407, 24), l_not_95955, *[l_or_call_result_95961], **kwargs_95962)

str_95964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, 82), 'str', '\t{"#name#",-1,{{-1}},0,(char *)#F_FUNC#(#fortranname#,#FORTRANNAME#),(f2py_init_func)#apiname#,doc_#apiname#},')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 407, 23), dict_95954, (l_not_call_result_95963, str_95964))
# Adding element type (key, value) (line 407)

# Call to l_and(...): (line 408)
# Processing the call arguments (line 408)

# Call to l_not(...): (line 408)
# Processing the call arguments (line 408)
# Getting the type of 'ismoduleroutine' (line 408)
ismoduleroutine_95967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 36), 'ismoduleroutine', False)
# Processing the call keyword arguments (line 408)
kwargs_95968 = {}
# Getting the type of 'l_not' (line 408)
l_not_95966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 30), 'l_not', False)
# Calling l_not(args, kwargs) (line 408)
l_not_call_result_95969 = invoke(stypy.reporting.localization.Localization(__file__, 408, 30), l_not_95966, *[ismoduleroutine_95967], **kwargs_95968)

# Getting the type of 'isintent_c' (line 408)
isintent_c_95970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 54), 'isintent_c', False)

# Call to l_not(...): (line 408)
# Processing the call arguments (line 408)
# Getting the type of 'isdummyroutine' (line 408)
isdummyroutine_95972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 72), 'isdummyroutine', False)
# Processing the call keyword arguments (line 408)
kwargs_95973 = {}
# Getting the type of 'l_not' (line 408)
l_not_95971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 66), 'l_not', False)
# Calling l_not(args, kwargs) (line 408)
l_not_call_result_95974 = invoke(stypy.reporting.localization.Localization(__file__, 408, 66), l_not_95971, *[isdummyroutine_95972], **kwargs_95973)

# Processing the call keyword arguments (line 408)
kwargs_95975 = {}
# Getting the type of 'l_and' (line 408)
l_and_95965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 24), 'l_and', False)
# Calling l_and(args, kwargs) (line 408)
l_and_call_result_95976 = invoke(stypy.reporting.localization.Localization(__file__, 408, 24), l_and_95965, *[l_not_call_result_95969, isintent_c_95970, l_not_call_result_95974], **kwargs_95975)

str_95977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 408, 90), 'str', '\t{"#name#",-1,{{-1}},0,(char *)#fortranname#,(f2py_init_func)#apiname#,doc_#apiname#},')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 407, 23), dict_95954, (l_and_call_result_95976, str_95977))
# Adding element type (key, value) (line 407)

# Call to l_and(...): (line 409)
# Processing the call arguments (line 409)

# Call to l_not(...): (line 409)
# Processing the call arguments (line 409)
# Getting the type of 'ismoduleroutine' (line 409)
ismoduleroutine_95980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 36), 'ismoduleroutine', False)
# Processing the call keyword arguments (line 409)
kwargs_95981 = {}
# Getting the type of 'l_not' (line 409)
l_not_95979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 30), 'l_not', False)
# Calling l_not(args, kwargs) (line 409)
l_not_call_result_95982 = invoke(stypy.reporting.localization.Localization(__file__, 409, 30), l_not_95979, *[ismoduleroutine_95980], **kwargs_95981)

# Getting the type of 'isdummyroutine' (line 409)
isdummyroutine_95983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 54), 'isdummyroutine', False)
# Processing the call keyword arguments (line 409)
kwargs_95984 = {}
# Getting the type of 'l_and' (line 409)
l_and_95978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 24), 'l_and', False)
# Calling l_and(args, kwargs) (line 409)
l_and_call_result_95985 = invoke(stypy.reporting.localization.Localization(__file__, 409, 24), l_and_95978, *[l_not_call_result_95982, isdummyroutine_95983], **kwargs_95984)

str_95986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 409, 71), 'str', '\t{"#name#",-1,{{-1}},0,NULL,(f2py_init_func)#apiname#,doc_#apiname#},')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 407, 23), dict_95954, (l_and_call_result_95985, str_95986))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 400, 7), dict_95915, (str_95953, dict_95954))
# Adding element type (key, value) (line 400)
str_95987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'dict' (line 411)
dict_95988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 411)
# Adding element type (key, value) (line 411)

# Call to l_and(...): (line 411)
# Processing the call arguments (line 411)

# Call to l_not(...): (line 411)
# Processing the call arguments (line 411)

# Call to l_or(...): (line 411)
# Processing the call arguments (line 411)
# Getting the type of 'ismoduleroutine' (line 411)
ismoduleroutine_95992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 34), 'ismoduleroutine', False)
# Getting the type of 'isintent_c' (line 411)
isintent_c_95993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 51), 'isintent_c', False)
# Processing the call keyword arguments (line 411)
kwargs_95994 = {}
# Getting the type of 'l_or' (line 411)
l_or_95991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 29), 'l_or', False)
# Calling l_or(args, kwargs) (line 411)
l_or_call_result_95995 = invoke(stypy.reporting.localization.Localization(__file__, 411, 29), l_or_95991, *[ismoduleroutine_95992, isintent_c_95993], **kwargs_95994)

# Processing the call keyword arguments (line 411)
kwargs_95996 = {}
# Getting the type of 'l_not' (line 411)
l_not_95990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 23), 'l_not', False)
# Calling l_not(args, kwargs) (line 411)
l_not_call_result_95997 = invoke(stypy.reporting.localization.Localization(__file__, 411, 23), l_not_95990, *[l_or_call_result_95995], **kwargs_95996)


# Call to l_not(...): (line 411)
# Processing the call arguments (line 411)
# Getting the type of 'isdummyroutine' (line 411)
isdummyroutine_95999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 71), 'isdummyroutine', False)
# Processing the call keyword arguments (line 411)
kwargs_96000 = {}
# Getting the type of 'l_not' (line 411)
l_not_95998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 65), 'l_not', False)
# Calling l_not(args, kwargs) (line 411)
l_not_call_result_96001 = invoke(stypy.reporting.localization.Localization(__file__, 411, 65), l_not_95998, *[isdummyroutine_95999], **kwargs_96000)

# Processing the call keyword arguments (line 411)
kwargs_96002 = {}
# Getting the type of 'l_and' (line 411)
l_and_95989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 17), 'l_and', False)
# Calling l_and(args, kwargs) (line 411)
l_and_call_result_96003 = invoke(stypy.reporting.localization.Localization(__file__, 411, 17), l_and_95989, *[l_not_call_result_95997, l_not_call_result_96001], **kwargs_96002)

str_96004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 89), 'str', 'F_FUNC')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 411, 16), dict_95988, (l_and_call_result_96003, str_96004))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 400, 7), dict_95915, (str_95987, dict_95988))
# Adding element type (key, value) (line 400)
str_96005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 8), 'str', 'callfortranroutine')

# Obtaining an instance of the builtin type 'list' (line 412)
list_96006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 412)
# Adding element type (line 412)

# Obtaining an instance of the builtin type 'dict' (line 413)
dict_96007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 413)
# Adding element type (key, value) (line 413)
# Getting the type of 'debugcapi' (line 413)
debugcapi_96008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 13), 'debugcapi')

# Obtaining an instance of the builtin type 'list' (line 413)
list_96009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 413)
# Adding element type (line 413)
str_96010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 16), 'str', '\tfprintf(stderr,"debug-capi:Fortran subroutine `#fortranname#(#callfortran#)\'\\n");')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 413, 24), list_96009, str_96010)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 413, 12), dict_96007, (debugcapi_96008, list_96009))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 412, 30), list_96006, dict_96007)
# Adding element type (line 412)

# Obtaining an instance of the builtin type 'dict' (line 415)
dict_96011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 415, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 415)
# Adding element type (key, value) (line 415)
# Getting the type of 'hasexternals' (line 415)
hasexternals_96012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 13), 'hasexternals')
str_96013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, (-1)), 'str', '\t\tif (#setjmpbuf#) {\n\t\t\tf2py_success = 0;\n\t\t} else {')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 415, 12), dict_96011, (hasexternals_96012, str_96013))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 412, 30), list_96006, dict_96011)
# Adding element type (line 412)

# Obtaining an instance of the builtin type 'dict' (line 419)
dict_96014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 419, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 419)
# Adding element type (key, value) (line 419)
# Getting the type of 'isthreadsafe' (line 419)
isthreadsafe_96015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 13), 'isthreadsafe')
str_96016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 419, 27), 'str', '\t\t\tPy_BEGIN_ALLOW_THREADS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 419, 12), dict_96014, (isthreadsafe_96015, str_96016))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 412, 30), list_96006, dict_96014)
# Adding element type (line 412)

# Obtaining an instance of the builtin type 'dict' (line 420)
dict_96017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 420, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 420)
# Adding element type (key, value) (line 420)
# Getting the type of 'hascallstatement' (line 420)
hascallstatement_96018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 13), 'hascallstatement')
str_96019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, (-1)), 'str', '\t\t\t\t#callstatement#;\n\t\t\t\t/*(*f2py_func)(#callfortran#);*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 420, 12), dict_96017, (hascallstatement_96018, str_96019))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 412, 30), list_96006, dict_96017)
# Adding element type (line 412)

# Obtaining an instance of the builtin type 'dict' (line 422)
dict_96020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 422, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 422)
# Adding element type (key, value) (line 422)

# Call to l_not(...): (line 422)
# Processing the call arguments (line 422)

# Call to l_or(...): (line 422)
# Processing the call arguments (line 422)
# Getting the type of 'hascallstatement' (line 422)
hascallstatement_96023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 24), 'hascallstatement', False)
# Getting the type of 'isdummyroutine' (line 422)
isdummyroutine_96024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 42), 'isdummyroutine', False)
# Processing the call keyword arguments (line 422)
kwargs_96025 = {}
# Getting the type of 'l_or' (line 422)
l_or_96022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 19), 'l_or', False)
# Calling l_or(args, kwargs) (line 422)
l_or_call_result_96026 = invoke(stypy.reporting.localization.Localization(__file__, 422, 19), l_or_96022, *[hascallstatement_96023, isdummyroutine_96024], **kwargs_96025)

# Processing the call keyword arguments (line 422)
kwargs_96027 = {}
# Getting the type of 'l_not' (line 422)
l_not_96021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 13), 'l_not', False)
# Calling l_not(args, kwargs) (line 422)
l_not_call_result_96028 = invoke(stypy.reporting.localization.Localization(__file__, 422, 13), l_not_96021, *[l_or_call_result_96026], **kwargs_96027)

str_96029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 423, 21), 'str', '\t\t\t\t(*f2py_func)(#callfortran#);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 422, 12), dict_96020, (l_not_call_result_96028, str_96029))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 412, 30), list_96006, dict_96020)
# Adding element type (line 412)

# Obtaining an instance of the builtin type 'dict' (line 424)
dict_96030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 424)
# Adding element type (key, value) (line 424)
# Getting the type of 'isthreadsafe' (line 424)
isthreadsafe_96031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 13), 'isthreadsafe')
str_96032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 27), 'str', '\t\t\tPy_END_ALLOW_THREADS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 424, 12), dict_96030, (isthreadsafe_96031, str_96032))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 412, 30), list_96006, dict_96030)
# Adding element type (line 412)

# Obtaining an instance of the builtin type 'dict' (line 425)
dict_96033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 425, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 425)
# Adding element type (key, value) (line 425)
# Getting the type of 'hasexternals' (line 425)
hasexternals_96034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 13), 'hasexternals')
str_96035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 425, 27), 'str', '\t\t}')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 425, 12), dict_96033, (hasexternals_96034, str_96035))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 412, 30), list_96006, dict_96033)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 400, 7), dict_95915, (str_96005, list_96006))
# Adding element type (key, value) (line 400)
str_96036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 427, 8), 'str', '_check')

# Call to l_and(...): (line 427)
# Processing the call arguments (line 427)
# Getting the type of 'issubroutine' (line 427)
issubroutine_96038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 24), 'issubroutine', False)

# Call to l_not(...): (line 427)
# Processing the call arguments (line 427)
# Getting the type of 'issubroutine_wrap' (line 427)
issubroutine_wrap_96040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 44), 'issubroutine_wrap', False)
# Processing the call keyword arguments (line 427)
kwargs_96041 = {}
# Getting the type of 'l_not' (line 427)
l_not_96039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 38), 'l_not', False)
# Calling l_not(args, kwargs) (line 427)
l_not_call_result_96042 = invoke(stypy.reporting.localization.Localization(__file__, 427, 38), l_not_96039, *[issubroutine_wrap_96040], **kwargs_96041)

# Processing the call keyword arguments (line 427)
kwargs_96043 = {}
# Getting the type of 'l_and' (line 427)
l_and_96037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 427)
l_and_call_result_96044 = invoke(stypy.reporting.localization.Localization(__file__, 427, 18), l_and_96037, *[issubroutine_96038, l_not_call_result_96042], **kwargs_96043)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 400, 7), dict_95915, (str_96036, l_and_call_result_96044))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 13), list_95757, dict_95915)
# Adding element type (line 350)

# Obtaining an instance of the builtin type 'dict' (line 428)
dict_96045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 428)
# Adding element type (key, value) (line 428)
str_96046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 429, 8), 'str', 'functype')
str_96047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 429, 20), 'str', 'void')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 428, 7), dict_96045, (str_96046, str_96047))
# Adding element type (key, value) (line 428)
str_96048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 8), 'str', 'declfortranroutine')

# Obtaining an instance of the builtin type 'dict' (line 430)
dict_96049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 30), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 430)
# Adding element type (key, value) (line 430)

# Call to l_not(...): (line 430)
# Processing the call arguments (line 430)

# Call to l_or(...): (line 430)
# Processing the call arguments (line 430)
# Getting the type of 'ismoduleroutine' (line 430)
ismoduleroutine_96052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 42), 'ismoduleroutine', False)
# Getting the type of 'isdummyroutine' (line 430)
isdummyroutine_96053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 59), 'isdummyroutine', False)
# Processing the call keyword arguments (line 430)
kwargs_96054 = {}
# Getting the type of 'l_or' (line 430)
l_or_96051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 37), 'l_or', False)
# Calling l_or(args, kwargs) (line 430)
l_or_call_result_96055 = invoke(stypy.reporting.localization.Localization(__file__, 430, 37), l_or_96051, *[ismoduleroutine_96052, isdummyroutine_96053], **kwargs_96054)

# Processing the call keyword arguments (line 430)
kwargs_96056 = {}
# Getting the type of 'l_not' (line 430)
l_not_96050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 31), 'l_not', False)
# Calling l_not(args, kwargs) (line 430)
l_not_call_result_96057 = invoke(stypy.reporting.localization.Localization(__file__, 430, 31), l_not_96050, *[l_or_call_result_96055], **kwargs_96056)

str_96058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 77), 'str', 'extern void #F_WRAPPEDFUNC#(#name_lower#,#NAME#)(#callprotoargument#);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 430, 30), dict_96049, (l_not_call_result_96057, str_96058))
# Adding element type (key, value) (line 430)
# Getting the type of 'isdummyroutine' (line 431)
isdummyroutine_96059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 31), 'isdummyroutine')
str_96060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 47), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 430, 30), dict_96049, (isdummyroutine_96059, str_96060))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 428, 7), dict_96045, (str_96048, dict_96049))
# Adding element type (key, value) (line 428)
str_96061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 434, 8), 'str', 'routine_def')

# Obtaining an instance of the builtin type 'dict' (line 434)
dict_96062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 434, 23), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 434)
# Adding element type (key, value) (line 434)

# Call to l_not(...): (line 434)
# Processing the call arguments (line 434)

# Call to l_or(...): (line 434)
# Processing the call arguments (line 434)
# Getting the type of 'ismoduleroutine' (line 434)
ismoduleroutine_96065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 35), 'ismoduleroutine', False)
# Getting the type of 'isdummyroutine' (line 434)
isdummyroutine_96066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 52), 'isdummyroutine', False)
# Processing the call keyword arguments (line 434)
kwargs_96067 = {}
# Getting the type of 'l_or' (line 434)
l_or_96064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 30), 'l_or', False)
# Calling l_or(args, kwargs) (line 434)
l_or_call_result_96068 = invoke(stypy.reporting.localization.Localization(__file__, 434, 30), l_or_96064, *[ismoduleroutine_96065, isdummyroutine_96066], **kwargs_96067)

# Processing the call keyword arguments (line 434)
kwargs_96069 = {}
# Getting the type of 'l_not' (line 434)
l_not_96063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 24), 'l_not', False)
# Calling l_not(args, kwargs) (line 434)
l_not_call_result_96070 = invoke(stypy.reporting.localization.Localization(__file__, 434, 24), l_not_96063, *[l_or_call_result_96068], **kwargs_96069)

str_96071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 434, 70), 'str', '\t{"#name#",-1,{{-1}},0,(char *)#F_WRAPPEDFUNC#(#name_lower#,#NAME#),(f2py_init_func)#apiname#,doc_#apiname#},')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 434, 23), dict_96062, (l_not_call_result_96070, str_96071))
# Adding element type (key, value) (line 434)
# Getting the type of 'isdummyroutine' (line 435)
isdummyroutine_96072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 24), 'isdummyroutine')
str_96073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 435, 40), 'str', '\t{"#name#",-1,{{-1}},0,NULL,(f2py_init_func)#apiname#,doc_#apiname#},')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 434, 23), dict_96062, (isdummyroutine_96072, str_96073))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 428, 7), dict_96045, (str_96061, dict_96062))
# Adding element type (key, value) (line 428)
str_96074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 8), 'str', 'initf2pywraphook')

# Obtaining an instance of the builtin type 'dict' (line 437)
dict_96075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 28), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 437)
# Adding element type (key, value) (line 437)

# Call to l_not(...): (line 437)
# Processing the call arguments (line 437)

# Call to l_or(...): (line 437)
# Processing the call arguments (line 437)
# Getting the type of 'ismoduleroutine' (line 437)
ismoduleroutine_96078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 40), 'ismoduleroutine', False)
# Getting the type of 'isdummyroutine' (line 437)
isdummyroutine_96079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 57), 'isdummyroutine', False)
# Processing the call keyword arguments (line 437)
kwargs_96080 = {}
# Getting the type of 'l_or' (line 437)
l_or_96077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 35), 'l_or', False)
# Calling l_or(args, kwargs) (line 437)
l_or_call_result_96081 = invoke(stypy.reporting.localization.Localization(__file__, 437, 35), l_or_96077, *[ismoduleroutine_96078, isdummyroutine_96079], **kwargs_96080)

# Processing the call keyword arguments (line 437)
kwargs_96082 = {}
# Getting the type of 'l_not' (line 437)
l_not_96076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 29), 'l_not', False)
# Calling l_not(args, kwargs) (line 437)
l_not_call_result_96083 = invoke(stypy.reporting.localization.Localization(__file__, 437, 29), l_not_96076, *[l_or_call_result_96081], **kwargs_96082)

str_96084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, (-1)), 'str', '\n    {\n      extern #ctype# #F_FUNC#(#name_lower#,#NAME#)(void);\n      PyObject* o = PyDict_GetItemString(d,"#name#");\n      PyObject_SetAttrString(o,"_cpointer", F2PyCapsule_FromVoidPtr((void*)#F_FUNC#(#name_lower#,#NAME#),NULL));\n#if PY_VERSION_HEX >= 0x03000000\n      PyObject_SetAttrString(o,"__name__", PyUnicode_FromString("#name#"));\n#else\n      PyObject_SetAttrString(o,"__name__", PyString_FromString("#name#"));\n#endif\n    }\n    ')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 437, 28), dict_96075, (l_not_call_result_96083, str_96084))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 428, 7), dict_96045, (str_96074, dict_96075))
# Adding element type (key, value) (line 428)
str_96085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 449, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'dict' (line 449)
dict_96086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 449, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 449)
# Adding element type (key, value) (line 449)

# Call to l_not(...): (line 449)
# Processing the call arguments (line 449)

# Call to l_or(...): (line 449)
# Processing the call arguments (line 449)
# Getting the type of 'ismoduleroutine' (line 449)
ismoduleroutine_96089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 28), 'ismoduleroutine', False)
# Getting the type of 'isdummyroutine' (line 449)
isdummyroutine_96090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 45), 'isdummyroutine', False)
# Processing the call keyword arguments (line 449)
kwargs_96091 = {}
# Getting the type of 'l_or' (line 449)
l_or_96088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 23), 'l_or', False)
# Calling l_or(args, kwargs) (line 449)
l_or_call_result_96092 = invoke(stypy.reporting.localization.Localization(__file__, 449, 23), l_or_96088, *[ismoduleroutine_96089, isdummyroutine_96090], **kwargs_96091)

# Processing the call keyword arguments (line 449)
kwargs_96093 = {}
# Getting the type of 'l_not' (line 449)
l_not_96087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 17), 'l_not', False)
# Calling l_not(args, kwargs) (line 449)
l_not_call_result_96094 = invoke(stypy.reporting.localization.Localization(__file__, 449, 17), l_not_96087, *[l_or_call_result_96092], **kwargs_96093)


# Obtaining an instance of the builtin type 'list' (line 449)
list_96095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 449, 63), 'list')
# Adding type elements to the builtin type 'list' instance (line 449)
# Adding element type (line 449)
str_96096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 449, 64), 'str', 'F_WRAPPEDFUNC')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 449, 63), list_96095, str_96096)
# Adding element type (line 449)
str_96097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 449, 81), 'str', 'F_FUNC')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 449, 63), list_96095, str_96097)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 449, 16), dict_96086, (l_not_call_result_96094, list_96095))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 428, 7), dict_96045, (str_96085, dict_96086))
# Adding element type (key, value) (line 428)
str_96098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 450, 8), 'str', 'callfortranroutine')

# Obtaining an instance of the builtin type 'list' (line 450)
list_96099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 450, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 450)
# Adding element type (line 450)

# Obtaining an instance of the builtin type 'dict' (line 451)
dict_96100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 451, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 451)
# Adding element type (key, value) (line 451)
# Getting the type of 'debugcapi' (line 451)
debugcapi_96101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 13), 'debugcapi')

# Obtaining an instance of the builtin type 'list' (line 451)
list_96102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 451, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 451)
# Adding element type (line 451)
str_96103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 452, 16), 'str', '\tfprintf(stderr,"debug-capi:Fortran subroutine `f2pywrap#name_lower#(#callfortran#)\'\\n");')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 451, 24), list_96102, str_96103)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 451, 12), dict_96100, (debugcapi_96101, list_96102))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 450, 30), list_96099, dict_96100)
# Adding element type (line 450)

# Obtaining an instance of the builtin type 'dict' (line 453)
dict_96104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 453, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 453)
# Adding element type (key, value) (line 453)
# Getting the type of 'hasexternals' (line 453)
hasexternals_96105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 13), 'hasexternals')
str_96106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 456, (-1)), 'str', '\tif (#setjmpbuf#) {\n\t\tf2py_success = 0;\n\t} else {')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 453, 12), dict_96104, (hasexternals_96105, str_96106))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 450, 30), list_96099, dict_96104)
# Adding element type (line 450)

# Obtaining an instance of the builtin type 'dict' (line 457)
dict_96107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 457, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 457)
# Adding element type (key, value) (line 457)
# Getting the type of 'isthreadsafe' (line 457)
isthreadsafe_96108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 13), 'isthreadsafe')
str_96109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 457, 27), 'str', '\tPy_BEGIN_ALLOW_THREADS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 457, 12), dict_96107, (isthreadsafe_96108, str_96109))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 450, 30), list_96099, dict_96107)
# Adding element type (line 450)

# Obtaining an instance of the builtin type 'dict' (line 458)
dict_96110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 458)
# Adding element type (key, value) (line 458)

# Call to l_not(...): (line 458)
# Processing the call arguments (line 458)

# Call to l_or(...): (line 458)
# Processing the call arguments (line 458)
# Getting the type of 'hascallstatement' (line 458)
hascallstatement_96113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 24), 'hascallstatement', False)
# Getting the type of 'isdummyroutine' (line 458)
isdummyroutine_96114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 42), 'isdummyroutine', False)
# Processing the call keyword arguments (line 458)
kwargs_96115 = {}
# Getting the type of 'l_or' (line 458)
l_or_96112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 19), 'l_or', False)
# Calling l_or(args, kwargs) (line 458)
l_or_call_result_96116 = invoke(stypy.reporting.localization.Localization(__file__, 458, 19), l_or_96112, *[hascallstatement_96113, isdummyroutine_96114], **kwargs_96115)

# Processing the call keyword arguments (line 458)
kwargs_96117 = {}
# Getting the type of 'l_not' (line 458)
l_not_96111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 13), 'l_not', False)
# Calling l_not(args, kwargs) (line 458)
l_not_call_result_96118 = invoke(stypy.reporting.localization.Localization(__file__, 458, 13), l_not_96111, *[l_or_call_result_96116], **kwargs_96117)

str_96119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 459, 21), 'str', '\t(*f2py_func)(#callfortran#);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 458, 12), dict_96110, (l_not_call_result_96118, str_96119))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 450, 30), list_96099, dict_96110)
# Adding element type (line 450)

# Obtaining an instance of the builtin type 'dict' (line 460)
dict_96120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 460)
# Adding element type (key, value) (line 460)
# Getting the type of 'hascallstatement' (line 460)
hascallstatement_96121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 13), 'hascallstatement')
str_96122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 461, 16), 'str', '\t#callstatement#;\n\t/*(*f2py_func)(#callfortran#);*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 460, 12), dict_96120, (hascallstatement_96121, str_96122))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 450, 30), list_96099, dict_96120)
# Adding element type (line 450)

# Obtaining an instance of the builtin type 'dict' (line 462)
dict_96123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 462, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 462)
# Adding element type (key, value) (line 462)
# Getting the type of 'isthreadsafe' (line 462)
isthreadsafe_96124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 13), 'isthreadsafe')
str_96125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 462, 27), 'str', '\tPy_END_ALLOW_THREADS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 462, 12), dict_96123, (isthreadsafe_96124, str_96125))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 450, 30), list_96099, dict_96123)
# Adding element type (line 450)

# Obtaining an instance of the builtin type 'dict' (line 463)
dict_96126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 463)
# Adding element type (key, value) (line 463)
# Getting the type of 'hasexternals' (line 463)
hasexternals_96127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 13), 'hasexternals')
str_96128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 27), 'str', '\t}')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 463, 12), dict_96126, (hasexternals_96127, str_96128))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 450, 30), list_96099, dict_96126)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 428, 7), dict_96045, (str_96098, list_96099))
# Adding element type (key, value) (line 428)
str_96129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 465, 8), 'str', '_check')
# Getting the type of 'isfunction_wrap' (line 465)
isfunction_wrap_96130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 18), 'isfunction_wrap')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 428, 7), dict_96045, (str_96129, isfunction_wrap_96130))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 13), list_95757, dict_96045)
# Adding element type (line 350)

# Obtaining an instance of the builtin type 'dict' (line 466)
dict_96131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 466, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 466)
# Adding element type (key, value) (line 466)
str_96132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 8), 'str', 'functype')
str_96133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 20), 'str', 'void')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 466, 7), dict_96131, (str_96132, str_96133))
# Adding element type (key, value) (line 466)
str_96134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 8), 'str', 'declfortranroutine')

# Obtaining an instance of the builtin type 'dict' (line 468)
dict_96135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 30), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 468)
# Adding element type (key, value) (line 468)

# Call to l_not(...): (line 468)
# Processing the call arguments (line 468)

# Call to l_or(...): (line 468)
# Processing the call arguments (line 468)
# Getting the type of 'ismoduleroutine' (line 468)
ismoduleroutine_96138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 42), 'ismoduleroutine', False)
# Getting the type of 'isdummyroutine' (line 468)
isdummyroutine_96139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 59), 'isdummyroutine', False)
# Processing the call keyword arguments (line 468)
kwargs_96140 = {}
# Getting the type of 'l_or' (line 468)
l_or_96137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 37), 'l_or', False)
# Calling l_or(args, kwargs) (line 468)
l_or_call_result_96141 = invoke(stypy.reporting.localization.Localization(__file__, 468, 37), l_or_96137, *[ismoduleroutine_96138, isdummyroutine_96139], **kwargs_96140)

# Processing the call keyword arguments (line 468)
kwargs_96142 = {}
# Getting the type of 'l_not' (line 468)
l_not_96136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 31), 'l_not', False)
# Calling l_not(args, kwargs) (line 468)
l_not_call_result_96143 = invoke(stypy.reporting.localization.Localization(__file__, 468, 31), l_not_96136, *[l_or_call_result_96141], **kwargs_96142)

str_96144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 77), 'str', 'extern void #F_WRAPPEDFUNC#(#name_lower#,#NAME#)(#callprotoargument#);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 30), dict_96135, (l_not_call_result_96143, str_96144))
# Adding element type (key, value) (line 468)
# Getting the type of 'isdummyroutine' (line 469)
isdummyroutine_96145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 31), 'isdummyroutine')
str_96146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 47), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 30), dict_96135, (isdummyroutine_96145, str_96146))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 466, 7), dict_96131, (str_96134, dict_96135))
# Adding element type (key, value) (line 466)
str_96147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 8), 'str', 'routine_def')

# Obtaining an instance of the builtin type 'dict' (line 472)
dict_96148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 23), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 472)
# Adding element type (key, value) (line 472)

# Call to l_not(...): (line 472)
# Processing the call arguments (line 472)

# Call to l_or(...): (line 472)
# Processing the call arguments (line 472)
# Getting the type of 'ismoduleroutine' (line 472)
ismoduleroutine_96151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 35), 'ismoduleroutine', False)
# Getting the type of 'isdummyroutine' (line 472)
isdummyroutine_96152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 52), 'isdummyroutine', False)
# Processing the call keyword arguments (line 472)
kwargs_96153 = {}
# Getting the type of 'l_or' (line 472)
l_or_96150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 30), 'l_or', False)
# Calling l_or(args, kwargs) (line 472)
l_or_call_result_96154 = invoke(stypy.reporting.localization.Localization(__file__, 472, 30), l_or_96150, *[ismoduleroutine_96151, isdummyroutine_96152], **kwargs_96153)

# Processing the call keyword arguments (line 472)
kwargs_96155 = {}
# Getting the type of 'l_not' (line 472)
l_not_96149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 24), 'l_not', False)
# Calling l_not(args, kwargs) (line 472)
l_not_call_result_96156 = invoke(stypy.reporting.localization.Localization(__file__, 472, 24), l_not_96149, *[l_or_call_result_96154], **kwargs_96155)

str_96157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 70), 'str', '\t{"#name#",-1,{{-1}},0,(char *)#F_WRAPPEDFUNC#(#name_lower#,#NAME#),(f2py_init_func)#apiname#,doc_#apiname#},')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 472, 23), dict_96148, (l_not_call_result_96156, str_96157))
# Adding element type (key, value) (line 472)
# Getting the type of 'isdummyroutine' (line 473)
isdummyroutine_96158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 24), 'isdummyroutine')
str_96159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 40), 'str', '\t{"#name#",-1,{{-1}},0,NULL,(f2py_init_func)#apiname#,doc_#apiname#},')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 472, 23), dict_96148, (isdummyroutine_96158, str_96159))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 466, 7), dict_96131, (str_96147, dict_96148))
# Adding element type (key, value) (line 466)
str_96160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 475, 8), 'str', 'initf2pywraphook')

# Obtaining an instance of the builtin type 'dict' (line 475)
dict_96161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 475, 28), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 475)
# Adding element type (key, value) (line 475)

# Call to l_not(...): (line 475)
# Processing the call arguments (line 475)

# Call to l_or(...): (line 475)
# Processing the call arguments (line 475)
# Getting the type of 'ismoduleroutine' (line 475)
ismoduleroutine_96164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 40), 'ismoduleroutine', False)
# Getting the type of 'isdummyroutine' (line 475)
isdummyroutine_96165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 57), 'isdummyroutine', False)
# Processing the call keyword arguments (line 475)
kwargs_96166 = {}
# Getting the type of 'l_or' (line 475)
l_or_96163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 35), 'l_or', False)
# Calling l_or(args, kwargs) (line 475)
l_or_call_result_96167 = invoke(stypy.reporting.localization.Localization(__file__, 475, 35), l_or_96163, *[ismoduleroutine_96164, isdummyroutine_96165], **kwargs_96166)

# Processing the call keyword arguments (line 475)
kwargs_96168 = {}
# Getting the type of 'l_not' (line 475)
l_not_96162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 29), 'l_not', False)
# Calling l_not(args, kwargs) (line 475)
l_not_call_result_96169 = invoke(stypy.reporting.localization.Localization(__file__, 475, 29), l_not_96162, *[l_or_call_result_96167], **kwargs_96168)

str_96170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 486, (-1)), 'str', '\n    {\n      extern void #F_FUNC#(#name_lower#,#NAME#)(void);\n      PyObject* o = PyDict_GetItemString(d,"#name#");\n      PyObject_SetAttrString(o,"_cpointer", F2PyCapsule_FromVoidPtr((void*)#F_FUNC#(#name_lower#,#NAME#),NULL));\n#if PY_VERSION_HEX >= 0x03000000\n      PyObject_SetAttrString(o,"__name__", PyUnicode_FromString("#name#"));\n#else\n      PyObject_SetAttrString(o,"__name__", PyString_FromString("#name#"));\n#endif\n    }\n    ')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 475, 28), dict_96161, (l_not_call_result_96169, str_96170))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 466, 7), dict_96131, (str_96160, dict_96161))
# Adding element type (key, value) (line 466)
str_96171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'dict' (line 487)
dict_96172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 487)
# Adding element type (key, value) (line 487)

# Call to l_not(...): (line 487)
# Processing the call arguments (line 487)

# Call to l_or(...): (line 487)
# Processing the call arguments (line 487)
# Getting the type of 'ismoduleroutine' (line 487)
ismoduleroutine_96175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 28), 'ismoduleroutine', False)
# Getting the type of 'isdummyroutine' (line 487)
isdummyroutine_96176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 45), 'isdummyroutine', False)
# Processing the call keyword arguments (line 487)
kwargs_96177 = {}
# Getting the type of 'l_or' (line 487)
l_or_96174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 23), 'l_or', False)
# Calling l_or(args, kwargs) (line 487)
l_or_call_result_96178 = invoke(stypy.reporting.localization.Localization(__file__, 487, 23), l_or_96174, *[ismoduleroutine_96175, isdummyroutine_96176], **kwargs_96177)

# Processing the call keyword arguments (line 487)
kwargs_96179 = {}
# Getting the type of 'l_not' (line 487)
l_not_96173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 17), 'l_not', False)
# Calling l_not(args, kwargs) (line 487)
l_not_call_result_96180 = invoke(stypy.reporting.localization.Localization(__file__, 487, 17), l_not_96173, *[l_or_call_result_96178], **kwargs_96179)


# Obtaining an instance of the builtin type 'list' (line 487)
list_96181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 63), 'list')
# Adding type elements to the builtin type 'list' instance (line 487)
# Adding element type (line 487)
str_96182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 64), 'str', 'F_WRAPPEDFUNC')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 487, 63), list_96181, str_96182)
# Adding element type (line 487)
str_96183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 81), 'str', 'F_FUNC')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 487, 63), list_96181, str_96183)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 487, 16), dict_96172, (l_not_call_result_96180, list_96181))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 466, 7), dict_96131, (str_96171, dict_96172))
# Adding element type (key, value) (line 466)
str_96184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 8), 'str', 'callfortranroutine')

# Obtaining an instance of the builtin type 'list' (line 488)
list_96185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 488)
# Adding element type (line 488)

# Obtaining an instance of the builtin type 'dict' (line 489)
dict_96186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 489)
# Adding element type (key, value) (line 489)
# Getting the type of 'debugcapi' (line 489)
debugcapi_96187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 13), 'debugcapi')

# Obtaining an instance of the builtin type 'list' (line 489)
list_96188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 489)
# Adding element type (line 489)
str_96189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 16), 'str', '\tfprintf(stderr,"debug-capi:Fortran subroutine `f2pywrap#name_lower#(#callfortran#)\'\\n");')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 24), list_96188, str_96189)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 12), dict_96186, (debugcapi_96187, list_96188))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 30), list_96185, dict_96186)
# Adding element type (line 488)

# Obtaining an instance of the builtin type 'dict' (line 491)
dict_96190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 491, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 491)
# Adding element type (key, value) (line 491)
# Getting the type of 'hasexternals' (line 491)
hasexternals_96191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 13), 'hasexternals')
str_96192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, (-1)), 'str', '\tif (#setjmpbuf#) {\n\t\tf2py_success = 0;\n\t} else {')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 491, 12), dict_96190, (hasexternals_96191, str_96192))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 30), list_96185, dict_96190)
# Adding element type (line 488)

# Obtaining an instance of the builtin type 'dict' (line 495)
dict_96193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 495)
# Adding element type (key, value) (line 495)
# Getting the type of 'isthreadsafe' (line 495)
isthreadsafe_96194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 13), 'isthreadsafe')
str_96195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 27), 'str', '\tPy_BEGIN_ALLOW_THREADS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 495, 12), dict_96193, (isthreadsafe_96194, str_96195))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 30), list_96185, dict_96193)
# Adding element type (line 488)

# Obtaining an instance of the builtin type 'dict' (line 496)
dict_96196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 496)
# Adding element type (key, value) (line 496)

# Call to l_not(...): (line 496)
# Processing the call arguments (line 496)

# Call to l_or(...): (line 496)
# Processing the call arguments (line 496)
# Getting the type of 'hascallstatement' (line 496)
hascallstatement_96199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 24), 'hascallstatement', False)
# Getting the type of 'isdummyroutine' (line 496)
isdummyroutine_96200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 42), 'isdummyroutine', False)
# Processing the call keyword arguments (line 496)
kwargs_96201 = {}
# Getting the type of 'l_or' (line 496)
l_or_96198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 19), 'l_or', False)
# Calling l_or(args, kwargs) (line 496)
l_or_call_result_96202 = invoke(stypy.reporting.localization.Localization(__file__, 496, 19), l_or_96198, *[hascallstatement_96199, isdummyroutine_96200], **kwargs_96201)

# Processing the call keyword arguments (line 496)
kwargs_96203 = {}
# Getting the type of 'l_not' (line 496)
l_not_96197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 13), 'l_not', False)
# Calling l_not(args, kwargs) (line 496)
l_not_call_result_96204 = invoke(stypy.reporting.localization.Localization(__file__, 496, 13), l_not_96197, *[l_or_call_result_96202], **kwargs_96203)

str_96205 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 21), 'str', '\t(*f2py_func)(#callfortran#);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 496, 12), dict_96196, (l_not_call_result_96204, str_96205))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 30), list_96185, dict_96196)
# Adding element type (line 488)

# Obtaining an instance of the builtin type 'dict' (line 498)
dict_96206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 498, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 498)
# Adding element type (key, value) (line 498)
# Getting the type of 'hascallstatement' (line 498)
hascallstatement_96207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 13), 'hascallstatement')
str_96208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 499, 16), 'str', '\t#callstatement#;\n\t/*(*f2py_func)(#callfortran#);*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 498, 12), dict_96206, (hascallstatement_96207, str_96208))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 30), list_96185, dict_96206)
# Adding element type (line 488)

# Obtaining an instance of the builtin type 'dict' (line 500)
dict_96209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 500, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 500)
# Adding element type (key, value) (line 500)
# Getting the type of 'isthreadsafe' (line 500)
isthreadsafe_96210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 13), 'isthreadsafe')
str_96211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 500, 27), 'str', '\tPy_END_ALLOW_THREADS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 500, 12), dict_96209, (isthreadsafe_96210, str_96211))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 30), list_96185, dict_96209)
# Adding element type (line 488)

# Obtaining an instance of the builtin type 'dict' (line 501)
dict_96212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 501, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 501)
# Adding element type (key, value) (line 501)
# Getting the type of 'hasexternals' (line 501)
hasexternals_96213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 13), 'hasexternals')
str_96214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 501, 27), 'str', '\t}')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 501, 12), dict_96212, (hasexternals_96213, str_96214))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 30), list_96185, dict_96212)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 466, 7), dict_96131, (str_96184, list_96185))
# Adding element type (key, value) (line 466)
str_96215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 503, 8), 'str', '_check')
# Getting the type of 'issubroutine_wrap' (line 503)
issubroutine_wrap_96216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 18), 'issubroutine_wrap')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 466, 7), dict_96131, (str_96215, issubroutine_wrap_96216))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 13), list_95757, dict_96131)
# Adding element type (line 350)

# Obtaining an instance of the builtin type 'dict' (line 504)
dict_96217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 504, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 504)
# Adding element type (key, value) (line 504)
str_96218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 8), 'str', 'functype')
str_96219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 20), 'str', '#ctype#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 7), dict_96217, (str_96218, str_96219))
# Adding element type (key, value) (line 504)
str_96220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 8), 'str', 'docreturn')

# Obtaining an instance of the builtin type 'dict' (line 506)
dict_96221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 506)
# Adding element type (key, value) (line 506)

# Call to l_not(...): (line 506)
# Processing the call arguments (line 506)
# Getting the type of 'isintent_hide' (line 506)
isintent_hide_96223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 28), 'isintent_hide', False)
# Processing the call keyword arguments (line 506)
kwargs_96224 = {}
# Getting the type of 'l_not' (line 506)
l_not_96222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 22), 'l_not', False)
# Calling l_not(args, kwargs) (line 506)
l_not_call_result_96225 = invoke(stypy.reporting.localization.Localization(__file__, 506, 22), l_not_96222, *[isintent_hide_96223], **kwargs_96224)

str_96226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 44), 'str', '#rname#,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 506, 21), dict_96221, (l_not_call_result_96225, str_96226))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 7), dict_96217, (str_96220, dict_96221))
# Adding element type (key, value) (line 504)
str_96227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 8), 'str', 'docstrout')
str_96228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 21), 'str', '#pydocsignout#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 7), dict_96217, (str_96227, str_96228))
# Adding element type (key, value) (line 504)
str_96229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 508, 8), 'str', 'latexdocstrout')

# Obtaining an instance of the builtin type 'list' (line 508)
list_96230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 508, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 508)
# Adding element type (line 508)
str_96231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 508, 27), 'str', '\\item[]{{}\\verb@#pydocsignout#@{}}')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 508, 26), list_96230, str_96231)
# Adding element type (line 508)

# Obtaining an instance of the builtin type 'dict' (line 509)
dict_96232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 27), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 509)
# Adding element type (key, value) (line 509)
# Getting the type of 'hasresultnote' (line 509)
hasresultnote_96233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 28), 'hasresultnote')
str_96234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 43), 'str', '--- #resultnote#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 509, 27), dict_96232, (hasresultnote_96233, str_96234))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 508, 26), list_96230, dict_96232)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 7), dict_96217, (str_96229, list_96230))
# Adding element type (key, value) (line 504)
str_96235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 510, 8), 'str', 'callfortranroutine')

# Obtaining an instance of the builtin type 'list' (line 510)
list_96236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 510, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 510)
# Adding element type (line 510)

# Obtaining an instance of the builtin type 'dict' (line 510)
dict_96237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 510, 31), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 510)
# Adding element type (key, value) (line 510)

# Call to l_and(...): (line 510)
# Processing the call arguments (line 510)
# Getting the type of 'debugcapi' (line 510)
debugcapi_96239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 38), 'debugcapi', False)
# Getting the type of 'isstringfunction' (line 510)
isstringfunction_96240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 49), 'isstringfunction', False)
# Processing the call keyword arguments (line 510)
kwargs_96241 = {}
# Getting the type of 'l_and' (line 510)
l_and_96238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 32), 'l_and', False)
# Calling l_and(args, kwargs) (line 510)
l_and_call_result_96242 = invoke(stypy.reporting.localization.Localization(__file__, 510, 32), l_and_96238, *[debugcapi_96239, isstringfunction_96240], **kwargs_96241)

str_96243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 516, (-1)), 'str', '#ifdef USESCOMPAQFORTRAN\n\tfprintf(stderr,"debug-capi:Fortran function #ctype# #fortranname#(#callcompaqfortran#)\\n");\n#else\n\tfprintf(stderr,"debug-capi:Fortran function #ctype# #fortranname#(#callfortran#)\\n");\n#endif\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 510, 31), dict_96237, (l_and_call_result_96242, str_96243))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 510, 30), list_96236, dict_96237)
# Adding element type (line 510)

# Obtaining an instance of the builtin type 'dict' (line 517)
dict_96244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 31), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 517)
# Adding element type (key, value) (line 517)

# Call to l_and(...): (line 517)
# Processing the call arguments (line 517)
# Getting the type of 'debugcapi' (line 517)
debugcapi_96246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 38), 'debugcapi', False)

# Call to l_not(...): (line 517)
# Processing the call arguments (line 517)
# Getting the type of 'isstringfunction' (line 517)
isstringfunction_96248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 55), 'isstringfunction', False)
# Processing the call keyword arguments (line 517)
kwargs_96249 = {}
# Getting the type of 'l_not' (line 517)
l_not_96247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 49), 'l_not', False)
# Calling l_not(args, kwargs) (line 517)
l_not_call_result_96250 = invoke(stypy.reporting.localization.Localization(__file__, 517, 49), l_not_96247, *[isstringfunction_96248], **kwargs_96249)

# Processing the call keyword arguments (line 517)
kwargs_96251 = {}
# Getting the type of 'l_and' (line 517)
l_and_96245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 32), 'l_and', False)
# Calling l_and(args, kwargs) (line 517)
l_and_call_result_96252 = invoke(stypy.reporting.localization.Localization(__file__, 517, 32), l_and_96245, *[debugcapi_96246, l_not_call_result_96250], **kwargs_96251)

str_96253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 519, (-1)), 'str', '\tfprintf(stderr,"debug-capi:Fortran function #ctype# #fortranname#(#callfortran#)\\n");\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 517, 31), dict_96244, (l_and_call_result_96252, str_96253))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 510, 30), list_96236, dict_96244)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 7), dict_96217, (str_96235, list_96236))
# Adding element type (key, value) (line 504)
str_96254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 521, 8), 'str', '_check')

# Call to l_and(...): (line 521)
# Processing the call arguments (line 521)
# Getting the type of 'isfunction' (line 521)
isfunction_96256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 24), 'isfunction', False)

# Call to l_not(...): (line 521)
# Processing the call arguments (line 521)
# Getting the type of 'isfunction_wrap' (line 521)
isfunction_wrap_96258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 42), 'isfunction_wrap', False)
# Processing the call keyword arguments (line 521)
kwargs_96259 = {}
# Getting the type of 'l_not' (line 521)
l_not_96257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 36), 'l_not', False)
# Calling l_not(args, kwargs) (line 521)
l_not_call_result_96260 = invoke(stypy.reporting.localization.Localization(__file__, 521, 36), l_not_96257, *[isfunction_wrap_96258], **kwargs_96259)

# Processing the call keyword arguments (line 521)
kwargs_96261 = {}
# Getting the type of 'l_and' (line 521)
l_and_96255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 521)
l_and_call_result_96262 = invoke(stypy.reporting.localization.Localization(__file__, 521, 18), l_and_96255, *[isfunction_96256, l_not_call_result_96260], **kwargs_96261)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 7), dict_96217, (str_96254, l_and_call_result_96262))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 13), list_95757, dict_96217)
# Adding element type (line 350)

# Obtaining an instance of the builtin type 'dict' (line 522)
dict_96263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 522, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 522)
# Adding element type (key, value) (line 522)
str_96264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 523, 8), 'str', 'declfortranroutine')

# Obtaining an instance of the builtin type 'dict' (line 523)
dict_96265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 523, 30), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 523)
# Adding element type (key, value) (line 523)

# Call to l_and(...): (line 523)
# Processing the call arguments (line 523)

# Call to l_not(...): (line 523)
# Processing the call arguments (line 523)

# Call to l_or(...): (line 523)
# Processing the call arguments (line 523)
# Getting the type of 'ismoduleroutine' (line 523)
ismoduleroutine_96269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 48), 'ismoduleroutine', False)
# Getting the type of 'isintent_c' (line 523)
isintent_c_96270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 65), 'isintent_c', False)
# Processing the call keyword arguments (line 523)
kwargs_96271 = {}
# Getting the type of 'l_or' (line 523)
l_or_96268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 43), 'l_or', False)
# Calling l_or(args, kwargs) (line 523)
l_or_call_result_96272 = invoke(stypy.reporting.localization.Localization(__file__, 523, 43), l_or_96268, *[ismoduleroutine_96269, isintent_c_96270], **kwargs_96271)

# Processing the call keyword arguments (line 523)
kwargs_96273 = {}
# Getting the type of 'l_not' (line 523)
l_not_96267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 37), 'l_not', False)
# Calling l_not(args, kwargs) (line 523)
l_not_call_result_96274 = invoke(stypy.reporting.localization.Localization(__file__, 523, 37), l_not_96267, *[l_or_call_result_96272], **kwargs_96273)


# Call to l_not(...): (line 523)
# Processing the call arguments (line 523)
# Getting the type of 'isdummyroutine' (line 523)
isdummyroutine_96276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 85), 'isdummyroutine', False)
# Processing the call keyword arguments (line 523)
kwargs_96277 = {}
# Getting the type of 'l_not' (line 523)
l_not_96275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 79), 'l_not', False)
# Calling l_not(args, kwargs) (line 523)
l_not_call_result_96278 = invoke(stypy.reporting.localization.Localization(__file__, 523, 79), l_not_96275, *[isdummyroutine_96276], **kwargs_96277)

# Processing the call keyword arguments (line 523)
kwargs_96279 = {}
# Getting the type of 'l_and' (line 523)
l_and_96266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 31), 'l_and', False)
# Calling l_and(args, kwargs) (line 523)
l_and_call_result_96280 = invoke(stypy.reporting.localization.Localization(__file__, 523, 31), l_and_96266, *[l_not_call_result_96274, l_not_call_result_96278], **kwargs_96279)

str_96281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 523, 103), 'str', 'extern #ctype# #F_FUNC#(#fortranname#,#FORTRANNAME#)(#callprotoargument#);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 523, 30), dict_96265, (l_and_call_result_96280, str_96281))
# Adding element type (key, value) (line 523)

# Call to l_and(...): (line 524)
# Processing the call arguments (line 524)

# Call to l_not(...): (line 524)
# Processing the call arguments (line 524)
# Getting the type of 'ismoduleroutine' (line 524)
ismoduleroutine_96284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 43), 'ismoduleroutine', False)
# Processing the call keyword arguments (line 524)
kwargs_96285 = {}
# Getting the type of 'l_not' (line 524)
l_not_96283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 37), 'l_not', False)
# Calling l_not(args, kwargs) (line 524)
l_not_call_result_96286 = invoke(stypy.reporting.localization.Localization(__file__, 524, 37), l_not_96283, *[ismoduleroutine_96284], **kwargs_96285)

# Getting the type of 'isintent_c' (line 524)
isintent_c_96287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 61), 'isintent_c', False)

# Call to l_not(...): (line 524)
# Processing the call arguments (line 524)
# Getting the type of 'isdummyroutine' (line 524)
isdummyroutine_96289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 79), 'isdummyroutine', False)
# Processing the call keyword arguments (line 524)
kwargs_96290 = {}
# Getting the type of 'l_not' (line 524)
l_not_96288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 73), 'l_not', False)
# Calling l_not(args, kwargs) (line 524)
l_not_call_result_96291 = invoke(stypy.reporting.localization.Localization(__file__, 524, 73), l_not_96288, *[isdummyroutine_96289], **kwargs_96290)

# Processing the call keyword arguments (line 524)
kwargs_96292 = {}
# Getting the type of 'l_and' (line 524)
l_and_96282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 31), 'l_and', False)
# Calling l_and(args, kwargs) (line 524)
l_and_call_result_96293 = invoke(stypy.reporting.localization.Localization(__file__, 524, 31), l_and_96282, *[l_not_call_result_96286, isintent_c_96287, l_not_call_result_96291], **kwargs_96292)

str_96294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 524, 97), 'str', 'extern #ctype# #fortranname#(#callprotoargument#);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 523, 30), dict_96265, (l_and_call_result_96293, str_96294))
# Adding element type (key, value) (line 523)
# Getting the type of 'isdummyroutine' (line 525)
isdummyroutine_96295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 31), 'isdummyroutine')
str_96296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 525, 47), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 523, 30), dict_96265, (isdummyroutine_96295, str_96296))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 522, 7), dict_96263, (str_96264, dict_96265))
# Adding element type (key, value) (line 522)
str_96297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 527, 8), 'str', 'routine_def')

# Obtaining an instance of the builtin type 'dict' (line 527)
dict_96298 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 527, 23), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 527)
# Adding element type (key, value) (line 527)

# Call to l_and(...): (line 527)
# Processing the call arguments (line 527)

# Call to l_not(...): (line 527)
# Processing the call arguments (line 527)

# Call to l_or(...): (line 527)
# Processing the call arguments (line 527)
# Getting the type of 'ismoduleroutine' (line 527)
ismoduleroutine_96302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 41), 'ismoduleroutine', False)
# Getting the type of 'isintent_c' (line 527)
isintent_c_96303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 58), 'isintent_c', False)
# Processing the call keyword arguments (line 527)
kwargs_96304 = {}
# Getting the type of 'l_or' (line 527)
l_or_96301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 36), 'l_or', False)
# Calling l_or(args, kwargs) (line 527)
l_or_call_result_96305 = invoke(stypy.reporting.localization.Localization(__file__, 527, 36), l_or_96301, *[ismoduleroutine_96302, isintent_c_96303], **kwargs_96304)

# Processing the call keyword arguments (line 527)
kwargs_96306 = {}
# Getting the type of 'l_not' (line 527)
l_not_96300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 30), 'l_not', False)
# Calling l_not(args, kwargs) (line 527)
l_not_call_result_96307 = invoke(stypy.reporting.localization.Localization(__file__, 527, 30), l_not_96300, *[l_or_call_result_96305], **kwargs_96306)


# Call to l_not(...): (line 527)
# Processing the call arguments (line 527)
# Getting the type of 'isdummyroutine' (line 527)
isdummyroutine_96309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 78), 'isdummyroutine', False)
# Processing the call keyword arguments (line 527)
kwargs_96310 = {}
# Getting the type of 'l_not' (line 527)
l_not_96308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 72), 'l_not', False)
# Calling l_not(args, kwargs) (line 527)
l_not_call_result_96311 = invoke(stypy.reporting.localization.Localization(__file__, 527, 72), l_not_96308, *[isdummyroutine_96309], **kwargs_96310)

# Processing the call keyword arguments (line 527)
kwargs_96312 = {}
# Getting the type of 'l_and' (line 527)
l_and_96299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 24), 'l_and', False)
# Calling l_and(args, kwargs) (line 527)
l_and_call_result_96313 = invoke(stypy.reporting.localization.Localization(__file__, 527, 24), l_and_96299, *[l_not_call_result_96307, l_not_call_result_96311], **kwargs_96312)

str_96314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 527, 96), 'str', '\t{"#name#",-1,{{-1}},0,(char *)#F_FUNC#(#fortranname#,#FORTRANNAME#),(f2py_init_func)#apiname#,doc_#apiname#},')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 527, 23), dict_96298, (l_and_call_result_96313, str_96314))
# Adding element type (key, value) (line 527)

# Call to l_and(...): (line 528)
# Processing the call arguments (line 528)

# Call to l_not(...): (line 528)
# Processing the call arguments (line 528)
# Getting the type of 'ismoduleroutine' (line 528)
ismoduleroutine_96317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 36), 'ismoduleroutine', False)
# Processing the call keyword arguments (line 528)
kwargs_96318 = {}
# Getting the type of 'l_not' (line 528)
l_not_96316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 30), 'l_not', False)
# Calling l_not(args, kwargs) (line 528)
l_not_call_result_96319 = invoke(stypy.reporting.localization.Localization(__file__, 528, 30), l_not_96316, *[ismoduleroutine_96317], **kwargs_96318)

# Getting the type of 'isintent_c' (line 528)
isintent_c_96320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 54), 'isintent_c', False)

# Call to l_not(...): (line 528)
# Processing the call arguments (line 528)
# Getting the type of 'isdummyroutine' (line 528)
isdummyroutine_96322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 72), 'isdummyroutine', False)
# Processing the call keyword arguments (line 528)
kwargs_96323 = {}
# Getting the type of 'l_not' (line 528)
l_not_96321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 66), 'l_not', False)
# Calling l_not(args, kwargs) (line 528)
l_not_call_result_96324 = invoke(stypy.reporting.localization.Localization(__file__, 528, 66), l_not_96321, *[isdummyroutine_96322], **kwargs_96323)

# Processing the call keyword arguments (line 528)
kwargs_96325 = {}
# Getting the type of 'l_and' (line 528)
l_and_96315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 24), 'l_and', False)
# Calling l_and(args, kwargs) (line 528)
l_and_call_result_96326 = invoke(stypy.reporting.localization.Localization(__file__, 528, 24), l_and_96315, *[l_not_call_result_96319, isintent_c_96320, l_not_call_result_96324], **kwargs_96325)

str_96327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 528, 90), 'str', '\t{"#name#",-1,{{-1}},0,(char *)#fortranname#,(f2py_init_func)#apiname#,doc_#apiname#},')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 527, 23), dict_96298, (l_and_call_result_96326, str_96327))
# Adding element type (key, value) (line 527)
# Getting the type of 'isdummyroutine' (line 529)
isdummyroutine_96328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 24), 'isdummyroutine')
str_96329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 529, 40), 'str', '\t{"#name#",-1,{{-1}},0,NULL,(f2py_init_func)#apiname#,doc_#apiname#},')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 527, 23), dict_96298, (isdummyroutine_96328, str_96329))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 522, 7), dict_96263, (str_96297, dict_96298))
# Adding element type (key, value) (line 522)
str_96330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 8), 'str', 'decl')

# Obtaining an instance of the builtin type 'list' (line 531)
list_96331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 531)
# Adding element type (line 531)

# Obtaining an instance of the builtin type 'dict' (line 531)
dict_96332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 17), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 531)
# Adding element type (key, value) (line 531)
# Getting the type of 'iscomplexfunction_warn' (line 531)
iscomplexfunction_warn_96333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 18), 'iscomplexfunction_warn')
str_96334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 42), 'str', '\t#ctype# #name#_return_value={0,0};')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 531, 17), dict_96332, (iscomplexfunction_warn_96333, str_96334))
# Adding element type (key, value) (line 531)

# Call to l_not(...): (line 532)
# Processing the call arguments (line 532)
# Getting the type of 'iscomplexfunction' (line 532)
iscomplexfunction_96336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 24), 'iscomplexfunction', False)
# Processing the call keyword arguments (line 532)
kwargs_96337 = {}
# Getting the type of 'l_not' (line 532)
l_not_96335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 18), 'l_not', False)
# Calling l_not(args, kwargs) (line 532)
l_not_call_result_96338 = invoke(stypy.reporting.localization.Localization(__file__, 532, 18), l_not_96335, *[iscomplexfunction_96336], **kwargs_96337)

str_96339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 44), 'str', '\t#ctype# #name#_return_value=0;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 531, 17), dict_96332, (l_not_call_result_96338, str_96339))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 531, 16), list_96331, dict_96332)
# Adding element type (line 531)

# Obtaining an instance of the builtin type 'dict' (line 533)
dict_96340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 17), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 533)
# Adding element type (key, value) (line 533)
# Getting the type of 'iscomplexfunction' (line 533)
iscomplexfunction_96341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 18), 'iscomplexfunction')
str_96342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 18), 'str', '\tPyObject *#name#_return_value_capi = Py_None;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 533, 17), dict_96340, (iscomplexfunction_96341, str_96342))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 531, 16), list_96331, dict_96340)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 522, 7), dict_96263, (str_96330, list_96331))
# Adding element type (key, value) (line 522)
str_96343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 536, 8), 'str', 'callfortranroutine')

# Obtaining an instance of the builtin type 'list' (line 536)
list_96344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 536, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 536)
# Adding element type (line 536)

# Obtaining an instance of the builtin type 'dict' (line 537)
dict_96345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 537, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 537)
# Adding element type (key, value) (line 537)
# Getting the type of 'hasexternals' (line 537)
hasexternals_96346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 13), 'hasexternals')
str_96347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, (-1)), 'str', '\tif (#setjmpbuf#) {\n\t\tf2py_success = 0;\n\t} else {')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 537, 12), dict_96345, (hasexternals_96346, str_96347))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 30), list_96344, dict_96345)
# Adding element type (line 536)

# Obtaining an instance of the builtin type 'dict' (line 541)
dict_96348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 541)
# Adding element type (key, value) (line 541)
# Getting the type of 'isthreadsafe' (line 541)
isthreadsafe_96349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 13), 'isthreadsafe')
str_96350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 27), 'str', '\tPy_BEGIN_ALLOW_THREADS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 12), dict_96348, (isthreadsafe_96349, str_96350))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 30), list_96344, dict_96348)
# Adding element type (line 536)

# Obtaining an instance of the builtin type 'dict' (line 542)
dict_96351 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 542)
# Adding element type (key, value) (line 542)
# Getting the type of 'hascallstatement' (line 542)
hascallstatement_96352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 13), 'hascallstatement')
str_96353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, (-1)), 'str', '\t#callstatement#;\n/*\t#name#_return_value = (*f2py_func)(#callfortran#);*/\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 542, 12), dict_96351, (hascallstatement_96352, str_96353))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 30), list_96344, dict_96351)
# Adding element type (line 536)

# Obtaining an instance of the builtin type 'dict' (line 545)
dict_96354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 545, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 545)
# Adding element type (key, value) (line 545)

# Call to l_not(...): (line 545)
# Processing the call arguments (line 545)

# Call to l_or(...): (line 545)
# Processing the call arguments (line 545)
# Getting the type of 'hascallstatement' (line 545)
hascallstatement_96357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 24), 'hascallstatement', False)
# Getting the type of 'isdummyroutine' (line 545)
isdummyroutine_96358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 42), 'isdummyroutine', False)
# Processing the call keyword arguments (line 545)
kwargs_96359 = {}
# Getting the type of 'l_or' (line 545)
l_or_96356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 19), 'l_or', False)
# Calling l_or(args, kwargs) (line 545)
l_or_call_result_96360 = invoke(stypy.reporting.localization.Localization(__file__, 545, 19), l_or_96356, *[hascallstatement_96357, isdummyroutine_96358], **kwargs_96359)

# Processing the call keyword arguments (line 545)
kwargs_96361 = {}
# Getting the type of 'l_not' (line 545)
l_not_96355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 13), 'l_not', False)
# Calling l_not(args, kwargs) (line 545)
l_not_call_result_96362 = invoke(stypy.reporting.localization.Localization(__file__, 545, 13), l_not_96355, *[l_or_call_result_96360], **kwargs_96361)

str_96363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 546, 21), 'str', '\t#name#_return_value = (*f2py_func)(#callfortran#);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 545, 12), dict_96354, (l_not_call_result_96362, str_96363))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 30), list_96344, dict_96354)
# Adding element type (line 536)

# Obtaining an instance of the builtin type 'dict' (line 547)
dict_96364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 547, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 547)
# Adding element type (key, value) (line 547)
# Getting the type of 'isthreadsafe' (line 547)
isthreadsafe_96365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 13), 'isthreadsafe')
str_96366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 547, 27), 'str', '\tPy_END_ALLOW_THREADS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 547, 12), dict_96364, (isthreadsafe_96365, str_96366))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 30), list_96344, dict_96364)
# Adding element type (line 536)

# Obtaining an instance of the builtin type 'dict' (line 548)
dict_96367 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 548)
# Adding element type (key, value) (line 548)
# Getting the type of 'hasexternals' (line 548)
hasexternals_96368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 13), 'hasexternals')
str_96369 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 27), 'str', '\t}')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 12), dict_96367, (hasexternals_96368, str_96369))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 30), list_96344, dict_96367)
# Adding element type (line 536)

# Obtaining an instance of the builtin type 'dict' (line 549)
dict_96370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 549)
# Adding element type (key, value) (line 549)

# Call to l_and(...): (line 549)
# Processing the call arguments (line 549)
# Getting the type of 'debugcapi' (line 549)
debugcapi_96372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 19), 'debugcapi', False)
# Getting the type of 'iscomplexfunction' (line 549)
iscomplexfunction_96373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 30), 'iscomplexfunction', False)
# Processing the call keyword arguments (line 549)
kwargs_96374 = {}
# Getting the type of 'l_and' (line 549)
l_and_96371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 13), 'l_and', False)
# Calling l_and(args, kwargs) (line 549)
l_and_call_result_96375 = invoke(stypy.reporting.localization.Localization(__file__, 549, 13), l_and_96371, *[debugcapi_96372, iscomplexfunction_96373], **kwargs_96374)

str_96376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 21), 'str', '\tfprintf(stderr,"#routdebugshowvalue#\\n",#name#_return_value.r,#name#_return_value.i);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 12), dict_96370, (l_and_call_result_96375, str_96376))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 30), list_96344, dict_96370)
# Adding element type (line 536)

# Obtaining an instance of the builtin type 'dict' (line 551)
dict_96377 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 551, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 551)
# Adding element type (key, value) (line 551)

# Call to l_and(...): (line 551)
# Processing the call arguments (line 551)
# Getting the type of 'debugcapi' (line 551)
debugcapi_96379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 19), 'debugcapi', False)

# Call to l_not(...): (line 551)
# Processing the call arguments (line 551)
# Getting the type of 'iscomplexfunction' (line 551)
iscomplexfunction_96381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 36), 'iscomplexfunction', False)
# Processing the call keyword arguments (line 551)
kwargs_96382 = {}
# Getting the type of 'l_not' (line 551)
l_not_96380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 30), 'l_not', False)
# Calling l_not(args, kwargs) (line 551)
l_not_call_result_96383 = invoke(stypy.reporting.localization.Localization(__file__, 551, 30), l_not_96380, *[iscomplexfunction_96381], **kwargs_96382)

# Processing the call keyword arguments (line 551)
kwargs_96384 = {}
# Getting the type of 'l_and' (line 551)
l_and_96378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 13), 'l_and', False)
# Calling l_and(args, kwargs) (line 551)
l_and_call_result_96385 = invoke(stypy.reporting.localization.Localization(__file__, 551, 13), l_and_96378, *[debugcapi_96379, l_not_call_result_96383], **kwargs_96384)

str_96386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 551, 57), 'str', '\tfprintf(stderr,"#routdebugshowvalue#\\n",#name#_return_value);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 551, 12), dict_96377, (l_and_call_result_96385, str_96386))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 30), list_96344, dict_96377)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 522, 7), dict_96263, (str_96343, list_96344))
# Adding element type (key, value) (line 522)
str_96387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 8), 'str', 'pyobjfrom')

# Obtaining an instance of the builtin type 'dict' (line 552)
dict_96388 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 552)
# Adding element type (key, value) (line 552)
# Getting the type of 'iscomplexfunction' (line 552)
iscomplexfunction_96389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 22), 'iscomplexfunction')
str_96390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 41), 'str', '\t#name#_return_value_capi = pyobj_from_#ctype#1(#name#_return_value);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 552, 21), dict_96388, (iscomplexfunction_96389, str_96390))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 522, 7), dict_96263, (str_96387, dict_96388))
# Adding element type (key, value) (line 522)
str_96391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'list' (line 553)
list_96392 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 553)
# Adding element type (line 553)

# Obtaining an instance of the builtin type 'dict' (line 553)
dict_96393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 17), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 553)
# Adding element type (key, value) (line 553)

# Call to l_not(...): (line 553)
# Processing the call arguments (line 553)
# Getting the type of 'isdummyroutine' (line 553)
isdummyroutine_96395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 24), 'isdummyroutine', False)
# Processing the call keyword arguments (line 553)
kwargs_96396 = {}
# Getting the type of 'l_not' (line 553)
l_not_96394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 18), 'l_not', False)
# Calling l_not(args, kwargs) (line 553)
l_not_call_result_96397 = invoke(stypy.reporting.localization.Localization(__file__, 553, 18), l_not_96394, *[isdummyroutine_96395], **kwargs_96396)

str_96398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 41), 'str', 'F_FUNC')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 17), dict_96393, (l_not_call_result_96397, str_96398))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 16), list_96392, dict_96393)
# Adding element type (line 553)

# Obtaining an instance of the builtin type 'dict' (line 554)
dict_96399 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 554, 17), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 554)
# Adding element type (key, value) (line 554)
# Getting the type of 'iscomplexfunction' (line 554)
iscomplexfunction_96400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 18), 'iscomplexfunction')
str_96401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 554, 37), 'str', 'pyobj_from_#ctype#1')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 554, 17), dict_96399, (iscomplexfunction_96400, str_96401))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 16), list_96392, dict_96399)
# Adding element type (line 553)

# Obtaining an instance of the builtin type 'dict' (line 555)
dict_96402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 555, 17), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 555)
# Adding element type (key, value) (line 555)
# Getting the type of 'islong_longfunction' (line 555)
islong_longfunction_96403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 18), 'islong_longfunction')
str_96404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 555, 39), 'str', 'long_long')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 555, 17), dict_96402, (islong_longfunction_96403, str_96404))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 16), list_96392, dict_96402)
# Adding element type (line 553)

# Obtaining an instance of the builtin type 'dict' (line 556)
dict_96405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 556, 17), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 556)
# Adding element type (key, value) (line 556)
# Getting the type of 'islong_doublefunction' (line 556)
islong_doublefunction_96406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 18), 'islong_doublefunction')
str_96407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 556, 41), 'str', 'long_double')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 556, 17), dict_96405, (islong_doublefunction_96406, str_96407))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 16), list_96392, dict_96405)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 522, 7), dict_96263, (str_96391, list_96392))
# Adding element type (key, value) (line 522)
str_96408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 557, 8), 'str', 'returnformat')

# Obtaining an instance of the builtin type 'dict' (line 557)
dict_96409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 557, 24), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 557)
# Adding element type (key, value) (line 557)

# Call to l_not(...): (line 557)
# Processing the call arguments (line 557)
# Getting the type of 'isintent_hide' (line 557)
isintent_hide_96411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 31), 'isintent_hide', False)
# Processing the call keyword arguments (line 557)
kwargs_96412 = {}
# Getting the type of 'l_not' (line 557)
l_not_96410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 25), 'l_not', False)
# Calling l_not(args, kwargs) (line 557)
l_not_call_result_96413 = invoke(stypy.reporting.localization.Localization(__file__, 557, 25), l_not_96410, *[isintent_hide_96411], **kwargs_96412)

str_96414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 557, 47), 'str', '#rformat#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 557, 24), dict_96409, (l_not_call_result_96413, str_96414))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 522, 7), dict_96263, (str_96408, dict_96409))
# Adding element type (key, value) (line 522)
str_96415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 8), 'str', 'return')

# Obtaining an instance of the builtin type 'dict' (line 558)
dict_96416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 18), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 558)
# Adding element type (key, value) (line 558)
# Getting the type of 'iscomplexfunction' (line 558)
iscomplexfunction_96417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 19), 'iscomplexfunction')
str_96418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 38), 'str', ',#name#_return_value_capi')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 18), dict_96416, (iscomplexfunction_96417, str_96418))
# Adding element type (key, value) (line 558)

# Call to l_not(...): (line 559)
# Processing the call arguments (line 559)

# Call to l_or(...): (line 559)
# Processing the call arguments (line 559)
# Getting the type of 'iscomplexfunction' (line 559)
iscomplexfunction_96421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 30), 'iscomplexfunction', False)
# Getting the type of 'isintent_hide' (line 559)
isintent_hide_96422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 49), 'isintent_hide', False)
# Processing the call keyword arguments (line 559)
kwargs_96423 = {}
# Getting the type of 'l_or' (line 559)
l_or_96420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 25), 'l_or', False)
# Calling l_or(args, kwargs) (line 559)
l_or_call_result_96424 = invoke(stypy.reporting.localization.Localization(__file__, 559, 25), l_or_96420, *[iscomplexfunction_96421, isintent_hide_96422], **kwargs_96423)

# Processing the call keyword arguments (line 559)
kwargs_96425 = {}
# Getting the type of 'l_not' (line 559)
l_not_96419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 19), 'l_not', False)
# Calling l_not(args, kwargs) (line 559)
l_not_call_result_96426 = invoke(stypy.reporting.localization.Localization(__file__, 559, 19), l_not_96419, *[l_or_call_result_96424], **kwargs_96425)

str_96427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 66), 'str', ',#name#_return_value')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 18), dict_96416, (l_not_call_result_96426, str_96427))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 522, 7), dict_96263, (str_96415, dict_96416))
# Adding element type (key, value) (line 522)
str_96428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 8), 'str', '_check')

# Call to l_and(...): (line 560)
# Processing the call arguments (line 560)
# Getting the type of 'isfunction' (line 560)
isfunction_96430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 24), 'isfunction', False)

# Call to l_not(...): (line 560)
# Processing the call arguments (line 560)
# Getting the type of 'isstringfunction' (line 560)
isstringfunction_96432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 42), 'isstringfunction', False)
# Processing the call keyword arguments (line 560)
kwargs_96433 = {}
# Getting the type of 'l_not' (line 560)
l_not_96431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 36), 'l_not', False)
# Calling l_not(args, kwargs) (line 560)
l_not_call_result_96434 = invoke(stypy.reporting.localization.Localization(__file__, 560, 36), l_not_96431, *[isstringfunction_96432], **kwargs_96433)


# Call to l_not(...): (line 560)
# Processing the call arguments (line 560)
# Getting the type of 'isfunction_wrap' (line 560)
isfunction_wrap_96436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 67), 'isfunction_wrap', False)
# Processing the call keyword arguments (line 560)
kwargs_96437 = {}
# Getting the type of 'l_not' (line 560)
l_not_96435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 61), 'l_not', False)
# Calling l_not(args, kwargs) (line 560)
l_not_call_result_96438 = invoke(stypy.reporting.localization.Localization(__file__, 560, 61), l_not_96435, *[isfunction_wrap_96436], **kwargs_96437)

# Processing the call keyword arguments (line 560)
kwargs_96439 = {}
# Getting the type of 'l_and' (line 560)
l_and_96429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 560)
l_and_call_result_96440 = invoke(stypy.reporting.localization.Localization(__file__, 560, 18), l_and_96429, *[isfunction_96430, l_not_call_result_96434, l_not_call_result_96438], **kwargs_96439)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 522, 7), dict_96263, (str_96428, l_and_call_result_96440))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 13), list_95757, dict_96263)
# Adding element type (line 350)

# Obtaining an instance of the builtin type 'dict' (line 561)
dict_96441 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 561)
# Adding element type (key, value) (line 561)
str_96442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 8), 'str', 'declfortranroutine')
str_96443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 30), 'str', 'extern void #F_FUNC#(#fortranname#,#FORTRANNAME#)(#callprotoargument#);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 7), dict_96441, (str_96442, str_96443))
# Adding element type (key, value) (line 561)
str_96444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 8), 'str', 'routine_def')

# Obtaining an instance of the builtin type 'dict' (line 563)
dict_96445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 23), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 563)
# Adding element type (key, value) (line 563)

# Call to l_not(...): (line 563)
# Processing the call arguments (line 563)

# Call to l_or(...): (line 563)
# Processing the call arguments (line 563)
# Getting the type of 'ismoduleroutine' (line 563)
ismoduleroutine_96448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 35), 'ismoduleroutine', False)
# Getting the type of 'isintent_c' (line 563)
isintent_c_96449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 52), 'isintent_c', False)
# Processing the call keyword arguments (line 563)
kwargs_96450 = {}
# Getting the type of 'l_or' (line 563)
l_or_96447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 30), 'l_or', False)
# Calling l_or(args, kwargs) (line 563)
l_or_call_result_96451 = invoke(stypy.reporting.localization.Localization(__file__, 563, 30), l_or_96447, *[ismoduleroutine_96448, isintent_c_96449], **kwargs_96450)

# Processing the call keyword arguments (line 563)
kwargs_96452 = {}
# Getting the type of 'l_not' (line 563)
l_not_96446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 24), 'l_not', False)
# Calling l_not(args, kwargs) (line 563)
l_not_call_result_96453 = invoke(stypy.reporting.localization.Localization(__file__, 563, 24), l_not_96446, *[l_or_call_result_96451], **kwargs_96452)

str_96454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 24), 'str', '\t{"#name#",-1,{{-1}},0,(char *)#F_FUNC#(#fortranname#,#FORTRANNAME#),(f2py_init_func)#apiname#,doc_#apiname#},')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 23), dict_96445, (l_not_call_result_96453, str_96454))
# Adding element type (key, value) (line 563)

# Call to l_and(...): (line 565)
# Processing the call arguments (line 565)

# Call to l_not(...): (line 565)
# Processing the call arguments (line 565)
# Getting the type of 'ismoduleroutine' (line 565)
ismoduleroutine_96457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 36), 'ismoduleroutine', False)
# Processing the call keyword arguments (line 565)
kwargs_96458 = {}
# Getting the type of 'l_not' (line 565)
l_not_96456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 30), 'l_not', False)
# Calling l_not(args, kwargs) (line 565)
l_not_call_result_96459 = invoke(stypy.reporting.localization.Localization(__file__, 565, 30), l_not_96456, *[ismoduleroutine_96457], **kwargs_96458)

# Getting the type of 'isintent_c' (line 565)
isintent_c_96460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 54), 'isintent_c', False)
# Processing the call keyword arguments (line 565)
kwargs_96461 = {}
# Getting the type of 'l_and' (line 565)
l_and_96455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 24), 'l_and', False)
# Calling l_and(args, kwargs) (line 565)
l_and_call_result_96462 = invoke(stypy.reporting.localization.Localization(__file__, 565, 24), l_and_96455, *[l_not_call_result_96459, isintent_c_96460], **kwargs_96461)

str_96463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 24), 'str', '\t{"#name#",-1,{{-1}},0,(char *)#fortranname#,(f2py_init_func)#apiname#,doc_#apiname#},')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 23), dict_96445, (l_and_call_result_96462, str_96463))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 7), dict_96441, (str_96444, dict_96445))
# Adding element type (key, value) (line 561)
str_96464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 8), 'str', 'decl')

# Obtaining an instance of the builtin type 'list' (line 568)
list_96465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 568)
# Adding element type (line 568)
str_96466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 17), 'str', '\t#ctype# #name#_return_value = NULL;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 568, 16), list_96465, str_96466)
# Adding element type (line 568)
str_96467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 17), 'str', '\tint #name#_return_value_len = 0;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 568, 16), list_96465, str_96467)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 7), dict_96441, (str_96464, list_96465))
# Adding element type (key, value) (line 561)
str_96468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 8), 'str', 'callfortran')
str_96469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 22), 'str', '#name#_return_value,#name#_return_value_len,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 7), dict_96441, (str_96468, str_96469))
# Adding element type (key, value) (line 561)
str_96470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 8), 'str', 'callfortranroutine')

# Obtaining an instance of the builtin type 'list' (line 571)
list_96471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 571)
# Adding element type (line 571)
str_96472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 30), 'str', '\t#name#_return_value_len = #rlength#;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 29), list_96471, str_96472)
# Adding element type (line 571)
str_96473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 30), 'str', '\tif ((#name#_return_value = (string)malloc(sizeof(char)*(#name#_return_value_len+1))) == NULL) {')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 29), list_96471, str_96473)
# Adding element type (line 571)
str_96474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 30), 'str', '\t\tPyErr_SetString(PyExc_MemoryError, "out of memory");')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 29), list_96471, str_96474)
# Adding element type (line 571)
str_96475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 30), 'str', '\t\tf2py_success = 0;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 29), list_96471, str_96475)
# Adding element type (line 571)
str_96476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 30), 'str', '\t} else {')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 29), list_96471, str_96476)
# Adding element type (line 571)
str_96477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 30), 'str', "\t\t(#name#_return_value)[#name#_return_value_len] = '\\0';")
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 29), list_96471, str_96477)
# Adding element type (line 571)
str_96478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 577, 30), 'str', '\t}')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 29), list_96471, str_96478)
# Adding element type (line 571)
str_96479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 30), 'str', '\tif (f2py_success) {')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 29), list_96471, str_96479)
# Adding element type (line 571)

# Obtaining an instance of the builtin type 'dict' (line 579)
dict_96480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 579, 30), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 579)
# Adding element type (key, value) (line 579)
# Getting the type of 'hasexternals' (line 579)
hasexternals_96481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 31), 'hasexternals')
str_96482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, (-1)), 'str', '\t\tif (#setjmpbuf#) {\n\t\t\tf2py_success = 0;\n\t\t} else {')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 579, 30), dict_96480, (hasexternals_96481, str_96482))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 29), list_96471, dict_96480)
# Adding element type (line 571)

# Obtaining an instance of the builtin type 'dict' (line 583)
dict_96483 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 583, 30), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 583)
# Adding element type (key, value) (line 583)
# Getting the type of 'isthreadsafe' (line 583)
isthreadsafe_96484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 31), 'isthreadsafe')
str_96485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 583, 45), 'str', '\t\tPy_BEGIN_ALLOW_THREADS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 583, 30), dict_96483, (isthreadsafe_96484, str_96485))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 29), list_96471, dict_96483)
# Adding element type (line 571)
str_96486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, (-1)), 'str', '#ifdef USESCOMPAQFORTRAN\n\t\t(*f2py_func)(#callcompaqfortran#);\n#else\n\t\t(*f2py_func)(#callfortran#);\n#endif\n')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 29), list_96471, str_96486)
# Adding element type (line 571)

# Obtaining an instance of the builtin type 'dict' (line 591)
dict_96487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 591, 30), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 591)
# Adding element type (key, value) (line 591)
# Getting the type of 'isthreadsafe' (line 591)
isthreadsafe_96488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 31), 'isthreadsafe')
str_96489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 591, 45), 'str', '\t\tPy_END_ALLOW_THREADS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 30), dict_96487, (isthreadsafe_96488, str_96489))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 29), list_96471, dict_96487)
# Adding element type (line 571)

# Obtaining an instance of the builtin type 'dict' (line 592)
dict_96490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 30), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 592)
# Adding element type (key, value) (line 592)
# Getting the type of 'hasexternals' (line 592)
hasexternals_96491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 31), 'hasexternals')
str_96492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 45), 'str', '\t\t}')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 592, 30), dict_96490, (hasexternals_96491, str_96492))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 29), list_96471, dict_96490)
# Adding element type (line 571)

# Obtaining an instance of the builtin type 'dict' (line 593)
dict_96493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 30), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 593)
# Adding element type (key, value) (line 593)
# Getting the type of 'debugcapi' (line 593)
debugcapi_96494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 31), 'debugcapi')
str_96495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 34), 'str', '\t\tfprintf(stderr,"#routdebugshowvalue#\\n",#name#_return_value_len,#name#_return_value);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 593, 30), dict_96493, (debugcapi_96494, str_96495))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 29), list_96471, dict_96493)
# Adding element type (line 571)
str_96496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 595, 30), 'str', '\t} /* if (f2py_success) after (string)malloc */')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 29), list_96471, str_96496)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 7), dict_96441, (str_96470, list_96471))
# Adding element type (key, value) (line 561)
str_96497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 8), 'str', 'returnformat')
str_96498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 24), 'str', '#rformat#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 7), dict_96441, (str_96497, str_96498))
# Adding element type (key, value) (line 561)
str_96499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 8), 'str', 'return')
str_96500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 18), 'str', ',#name#_return_value')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 7), dict_96441, (str_96499, str_96500))
# Adding element type (key, value) (line 561)
str_96501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 8), 'str', 'freemem')
str_96502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 19), 'str', '\tSTRINGFREE(#name#_return_value);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 7), dict_96441, (str_96501, str_96502))
# Adding element type (key, value) (line 561)
str_96503 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 600, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'list' (line 600)
list_96504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 600, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 600)
# Adding element type (line 600)
str_96505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 600, 17), 'str', 'F_FUNC')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 600, 16), list_96504, str_96505)
# Adding element type (line 600)
str_96506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 600, 27), 'str', '#ctype#')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 600, 16), list_96504, str_96506)
# Adding element type (line 600)
str_96507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 600, 38), 'str', 'STRINGFREE')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 600, 16), list_96504, str_96507)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 7), dict_96441, (str_96503, list_96504))
# Adding element type (key, value) (line 561)
str_96508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 601, 8), 'str', '_check')

# Call to l_and(...): (line 601)
# Processing the call arguments (line 601)
# Getting the type of 'isstringfunction' (line 601)
isstringfunction_96510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 23), 'isstringfunction', False)

# Call to l_not(...): (line 601)
# Processing the call arguments (line 601)
# Getting the type of 'isfunction_wrap' (line 601)
isfunction_wrap_96512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 47), 'isfunction_wrap', False)
# Processing the call keyword arguments (line 601)
kwargs_96513 = {}
# Getting the type of 'l_not' (line 601)
l_not_96511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 41), 'l_not', False)
# Calling l_not(args, kwargs) (line 601)
l_not_call_result_96514 = invoke(stypy.reporting.localization.Localization(__file__, 601, 41), l_not_96511, *[isfunction_wrap_96512], **kwargs_96513)

# Processing the call keyword arguments (line 601)
kwargs_96515 = {}
# Getting the type of 'l_and' (line 601)
l_and_96509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 17), 'l_and', False)
# Calling l_and(args, kwargs) (line 601)
l_and_call_result_96516 = invoke(stypy.reporting.localization.Localization(__file__, 601, 17), l_and_96509, *[isstringfunction_96510, l_not_call_result_96514], **kwargs_96515)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 7), dict_96441, (str_96508, l_and_call_result_96516))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 13), list_95757, dict_96441)
# Adding element type (line 350)

# Obtaining an instance of the builtin type 'dict' (line 603)
dict_96517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 603)
# Adding element type (key, value) (line 603)
str_96518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 8), 'str', 'routdebugenter')
str_96519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 26), 'str', '\tfprintf(stderr,"debug-capi:Python C/API function #modulename#.#name#(#docsignature#)\\n");')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 4), dict_96517, (str_96518, str_96519))
# Adding element type (key, value) (line 603)
str_96520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 8), 'str', 'routdebugleave')
str_96521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 26), 'str', '\tfprintf(stderr,"debug-capi:Python C/API function #modulename#.#name#: successful.\\n");')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 4), dict_96517, (str_96520, str_96521))
# Adding element type (key, value) (line 603)
str_96522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 8), 'str', 'routdebugfailure')
str_96523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 28), 'str', '\tfprintf(stderr,"debug-capi:Python C/API function #modulename#.#name#: failure.\\n");')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 4), dict_96517, (str_96522, str_96523))
# Adding element type (key, value) (line 603)
str_96524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 607, 8), 'str', '_check')
# Getting the type of 'debugcapi' (line 607)
debugcapi_96525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 18), 'debugcapi')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 4), dict_96517, (str_96524, debugcapi_96525))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 13), list_95757, dict_96517)

# Assigning a type to the variable 'rout_rules' (line 350)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 350, 0), 'rout_rules', list_95757)

# Assigning a Dict to a Name (line 613):

# Assigning a Dict to a Name (line 613):

# Obtaining an instance of the builtin type 'dict' (line 613)
dict_96526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 20), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 613)
# Adding element type (key, value) (line 613)
# Getting the type of 'islong_long' (line 613)
islong_long_96527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 21), 'islong_long')
str_96528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 34), 'str', 'long_long')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 20), dict_96526, (islong_long_96527, str_96528))
# Adding element type (key, value) (line 613)
# Getting the type of 'islong_double' (line 614)
islong_double_96529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 21), 'islong_double')
str_96530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 36), 'str', 'long_double')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 20), dict_96526, (islong_double_96529, str_96530))
# Adding element type (key, value) (line 613)
# Getting the type of 'islong_complex' (line 615)
islong_complex_96531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 21), 'islong_complex')
str_96532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 615, 37), 'str', 'complex_long_double')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 20), dict_96526, (islong_complex_96531, str_96532))
# Adding element type (key, value) (line 613)
# Getting the type of 'isunsigned_char' (line 616)
isunsigned_char_96533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 21), 'isunsigned_char')
str_96534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 616, 38), 'str', 'unsigned_char')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 20), dict_96526, (isunsigned_char_96533, str_96534))
# Adding element type (key, value) (line 613)
# Getting the type of 'isunsigned_short' (line 617)
isunsigned_short_96535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 21), 'isunsigned_short')
str_96536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 617, 39), 'str', 'unsigned_short')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 20), dict_96526, (isunsigned_short_96535, str_96536))
# Adding element type (key, value) (line 613)
# Getting the type of 'isunsigned' (line 618)
isunsigned_96537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 21), 'isunsigned')
str_96538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 618, 33), 'str', 'unsigned')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 20), dict_96526, (isunsigned_96537, str_96538))
# Adding element type (key, value) (line 613)
# Getting the type of 'isunsigned_long_long' (line 619)
isunsigned_long_long_96539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 21), 'isunsigned_long_long')
str_96540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 43), 'str', 'unsigned_long_long')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 20), dict_96526, (isunsigned_long_long_96539, str_96540))
# Adding element type (key, value) (line 613)
# Getting the type of 'isunsigned_chararray' (line 620)
isunsigned_chararray_96541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 21), 'isunsigned_chararray')
str_96542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 620, 43), 'str', 'unsigned_char')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 20), dict_96526, (isunsigned_chararray_96541, str_96542))
# Adding element type (key, value) (line 613)
# Getting the type of 'isunsigned_shortarray' (line 621)
isunsigned_shortarray_96543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 21), 'isunsigned_shortarray')
str_96544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 621, 44), 'str', 'unsigned_short')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 20), dict_96526, (isunsigned_shortarray_96543, str_96544))
# Adding element type (key, value) (line 613)
# Getting the type of 'isunsigned_long_longarray' (line 622)
isunsigned_long_longarray_96545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 21), 'isunsigned_long_longarray')
str_96546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 622, 48), 'str', 'unsigned_long_long')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 20), dict_96526, (isunsigned_long_longarray_96545, str_96546))
# Adding element type (key, value) (line 613)
# Getting the type of 'issigned_long_longarray' (line 623)
issigned_long_longarray_96547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 21), 'issigned_long_longarray')
str_96548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 623, 46), 'str', 'long_long')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 20), dict_96526, (issigned_long_longarray_96547, str_96548))

# Assigning a type to the variable 'typedef_need_dict' (line 613)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 613, 0), 'typedef_need_dict', dict_96526)

# Assigning a List to a Name (line 626):

# Assigning a List to a Name (line 626):

# Obtaining an instance of the builtin type 'list' (line 626)
list_96549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 12), 'list')
# Adding type elements to the builtin type 'list' instance (line 626)
# Adding element type (line 626)

# Obtaining an instance of the builtin type 'dict' (line 627)
dict_96550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 627, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 627)
# Adding element type (key, value) (line 627)
str_96551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 8), 'str', 'separatorsfor')
# Getting the type of 'sepdict' (line 628)
sepdict_96552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 25), 'sepdict')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 627, 4), dict_96550, (str_96551, sepdict_96552))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 12), list_96549, dict_96550)
# Adding element type (line 626)

# Obtaining an instance of the builtin type 'dict' (line 630)
dict_96553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 630, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 630)
# Adding element type (key, value) (line 630)
str_96554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 8), 'str', 'frompyobj')

# Obtaining an instance of the builtin type 'list' (line 631)
list_96555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 631)
# Adding element type (line 631)
str_96556 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 22), 'str', '\t/* Processing auxiliary variable #varname# */')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 631, 21), list_96555, str_96556)
# Adding element type (line 631)

# Obtaining an instance of the builtin type 'dict' (line 632)
dict_96557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 632, 22), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 632)
# Adding element type (key, value) (line 632)
# Getting the type of 'debugcapi' (line 632)
debugcapi_96558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 23), 'debugcapi')
str_96559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 632, 34), 'str', '\tfprintf(stderr,"#vardebuginfo#\\n");')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 632, 22), dict_96557, (debugcapi_96558, str_96559))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 631, 21), list_96555, dict_96557)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 630, 4), dict_96553, (str_96554, list_96555))
# Adding element type (key, value) (line 630)
str_96560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 633, 8), 'str', 'cleanupfrompyobj')
str_96561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 633, 28), 'str', '\t/* End of cleaning variable #varname# */')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 630, 4), dict_96553, (str_96560, str_96561))
# Adding element type (key, value) (line 630)
str_96562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 634, 8), 'str', 'need')
# Getting the type of 'typedef_need_dict' (line 634)
typedef_need_dict_96563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 16), 'typedef_need_dict')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 630, 4), dict_96553, (str_96562, typedef_need_dict_96563))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 12), list_96549, dict_96553)
# Adding element type (line 626)

# Obtaining an instance of the builtin type 'dict' (line 637)
dict_96564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 637)
# Adding element type (key, value) (line 637)
str_96565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 8), 'str', 'decl')
str_96566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 16), 'str', '\t#ctype# #varname# = 0;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 637, 4), dict_96564, (str_96565, str_96566))
# Adding element type (key, value) (line 637)
str_96567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'dict' (line 639)
dict_96568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 639)
# Adding element type (key, value) (line 639)
# Getting the type of 'hasinitvalue' (line 639)
hasinitvalue_96569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 17), 'hasinitvalue')
str_96570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 31), 'str', 'math.h')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 639, 16), dict_96568, (hasinitvalue_96569, str_96570))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 637, 4), dict_96564, (str_96567, dict_96568))
# Adding element type (key, value) (line 637)
str_96571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 640, 8), 'str', 'frompyobj')

# Obtaining an instance of the builtin type 'dict' (line 640)
dict_96572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 640, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 640)
# Adding element type (key, value) (line 640)
# Getting the type of 'hasinitvalue' (line 640)
hasinitvalue_96573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 22), 'hasinitvalue')
str_96574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 640, 36), 'str', '\t#varname# = #init#;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 640, 21), dict_96572, (hasinitvalue_96573, str_96574))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 637, 4), dict_96564, (str_96571, dict_96572))
# Adding element type (key, value) (line 637)
str_96575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, 8), 'str', '_check')

# Call to l_and(...): (line 641)
# Processing the call arguments (line 641)
# Getting the type of 'isscalar' (line 641)
isscalar_96577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 24), 'isscalar', False)

# Call to l_not(...): (line 641)
# Processing the call arguments (line 641)
# Getting the type of 'iscomplex' (line 641)
iscomplex_96579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 40), 'iscomplex', False)
# Processing the call keyword arguments (line 641)
kwargs_96580 = {}
# Getting the type of 'l_not' (line 641)
l_not_96578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 34), 'l_not', False)
# Calling l_not(args, kwargs) (line 641)
l_not_call_result_96581 = invoke(stypy.reporting.localization.Localization(__file__, 641, 34), l_not_96578, *[iscomplex_96579], **kwargs_96580)

# Processing the call keyword arguments (line 641)
kwargs_96582 = {}
# Getting the type of 'l_and' (line 641)
l_and_96576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 641)
l_and_call_result_96583 = invoke(stypy.reporting.localization.Localization(__file__, 641, 18), l_and_96576, *[isscalar_96577, l_not_call_result_96581], **kwargs_96582)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 637, 4), dict_96564, (str_96575, l_and_call_result_96583))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 12), list_96549, dict_96564)
# Adding element type (line 626)

# Obtaining an instance of the builtin type 'dict' (line 643)
dict_96584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 643)
# Adding element type (key, value) (line 643)
str_96585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 8), 'str', 'return')
str_96586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 18), 'str', ',#varname#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 643, 4), dict_96584, (str_96585, str_96586))
# Adding element type (key, value) (line 643)
str_96587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 8), 'str', 'docstrout')
str_96588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 21), 'str', '#pydocsignout#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 643, 4), dict_96584, (str_96587, str_96588))
# Adding element type (key, value) (line 643)
str_96589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 646, 8), 'str', 'docreturn')
str_96590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 646, 21), 'str', '#outvarname#,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 643, 4), dict_96584, (str_96589, str_96590))
# Adding element type (key, value) (line 643)
str_96591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 647, 8), 'str', 'returnformat')
str_96592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 647, 24), 'str', '#varrformat#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 643, 4), dict_96584, (str_96591, str_96592))
# Adding element type (key, value) (line 643)
str_96593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 8), 'str', '_check')

# Call to l_and(...): (line 648)
# Processing the call arguments (line 648)
# Getting the type of 'isscalar' (line 648)
isscalar_96595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 24), 'isscalar', False)

# Call to l_not(...): (line 648)
# Processing the call arguments (line 648)
# Getting the type of 'iscomplex' (line 648)
iscomplex_96597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 40), 'iscomplex', False)
# Processing the call keyword arguments (line 648)
kwargs_96598 = {}
# Getting the type of 'l_not' (line 648)
l_not_96596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 34), 'l_not', False)
# Calling l_not(args, kwargs) (line 648)
l_not_call_result_96599 = invoke(stypy.reporting.localization.Localization(__file__, 648, 34), l_not_96596, *[iscomplex_96597], **kwargs_96598)

# Getting the type of 'isintent_out' (line 648)
isintent_out_96600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 52), 'isintent_out', False)
# Processing the call keyword arguments (line 648)
kwargs_96601 = {}
# Getting the type of 'l_and' (line 648)
l_and_96594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 648)
l_and_call_result_96602 = invoke(stypy.reporting.localization.Localization(__file__, 648, 18), l_and_96594, *[isscalar_96595, l_not_call_result_96599, isintent_out_96600], **kwargs_96601)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 643, 4), dict_96584, (str_96593, l_and_call_result_96602))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 12), list_96549, dict_96584)
# Adding element type (line 626)

# Obtaining an instance of the builtin type 'dict' (line 651)
dict_96603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 651, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 651)
# Adding element type (key, value) (line 651)
str_96604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 8), 'str', 'decl')
str_96605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 16), 'str', '\t#ctype# #varname#;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 651, 4), dict_96603, (str_96604, str_96605))
# Adding element type (key, value) (line 651)
str_96606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 8), 'str', 'frompyobj')

# Obtaining an instance of the builtin type 'dict' (line 653)
dict_96607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 653)
# Adding element type (key, value) (line 653)
# Getting the type of 'hasinitvalue' (line 653)
hasinitvalue_96608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 22), 'hasinitvalue')
str_96609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 36), 'str', '\t#varname#.r = #init.r#, #varname#.i = #init.i#;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 653, 21), dict_96607, (hasinitvalue_96608, str_96609))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 651, 4), dict_96603, (str_96606, dict_96607))
# Adding element type (key, value) (line 651)
str_96610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 8), 'str', '_check')
# Getting the type of 'iscomplex' (line 654)
iscomplex_96611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 18), 'iscomplex')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 651, 4), dict_96603, (str_96610, iscomplex_96611))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 12), list_96549, dict_96603)
# Adding element type (line 626)

# Obtaining an instance of the builtin type 'dict' (line 657)
dict_96612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 657)
# Adding element type (key, value) (line 657)
str_96613 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 8), 'str', 'decl')

# Obtaining an instance of the builtin type 'list' (line 658)
list_96614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 658)
# Adding element type (line 658)
str_96615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 17), 'str', '\t#ctype# #varname# = NULL;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 658, 16), list_96614, str_96615)
# Adding element type (line 658)
str_96616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 17), 'str', '\tint slen(#varname#);')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 658, 16), list_96614, str_96616)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 4), dict_96612, (str_96613, list_96614))
# Adding element type (key, value) (line 657)
str_96617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 661, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'list' (line 661)
list_96618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 661, 15), 'list')
# Adding type elements to the builtin type 'list' instance (line 661)
# Adding element type (line 661)
str_96619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 661, 16), 'str', 'len..')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 661, 15), list_96618, str_96619)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 4), dict_96612, (str_96617, list_96618))
# Adding element type (key, value) (line 657)
str_96620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 662, 8), 'str', '_check')
# Getting the type of 'isstring' (line 662)
isstring_96621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 17), 'isstring')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 4), dict_96612, (str_96620, isstring_96621))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 12), list_96549, dict_96612)
# Adding element type (line 626)

# Obtaining an instance of the builtin type 'dict' (line 665)
dict_96622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 665, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 665)
# Adding element type (key, value) (line 665)
str_96623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 666, 8), 'str', 'decl')

# Obtaining an instance of the builtin type 'list' (line 666)
list_96624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 666, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 666)
# Adding element type (line 666)
str_96625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 666, 17), 'str', '\t#ctype# *#varname# = NULL;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 666, 16), list_96624, str_96625)
# Adding element type (line 666)
str_96626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 667, 17), 'str', '\tnpy_intp #varname#_Dims[#rank#] = {#rank*[-1]#};')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 666, 16), list_96624, str_96626)
# Adding element type (line 666)
str_96627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 668, 17), 'str', '\tconst int #varname#_Rank = #rank#;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 666, 16), list_96624, str_96627)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 665, 4), dict_96622, (str_96623, list_96624))
# Adding element type (key, value) (line 665)
str_96628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'list' (line 670)
list_96629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 15), 'list')
# Adding type elements to the builtin type 'list' instance (line 670)
# Adding element type (line 670)
str_96630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 16), 'str', 'len..')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 15), list_96629, str_96630)
# Adding element type (line 670)

# Obtaining an instance of the builtin type 'dict' (line 670)
dict_96631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 25), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 670)
# Adding element type (key, value) (line 670)
# Getting the type of 'hasinitvalue' (line 670)
hasinitvalue_96632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 26), 'hasinitvalue')
str_96633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 40), 'str', 'forcomb')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 25), dict_96631, (hasinitvalue_96632, str_96633))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 15), list_96629, dict_96631)
# Adding element type (line 670)

# Obtaining an instance of the builtin type 'dict' (line 670)
dict_96634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 52), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 670)
# Adding element type (key, value) (line 670)
# Getting the type of 'hasinitvalue' (line 670)
hasinitvalue_96635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 53), 'hasinitvalue')
str_96636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 67), 'str', 'CFUNCSMESS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 52), dict_96634, (hasinitvalue_96635, str_96636))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 15), list_96629, dict_96634)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 665, 4), dict_96622, (str_96628, list_96629))
# Adding element type (key, value) (line 665)
str_96637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 8), 'str', '_check')
# Getting the type of 'isarray' (line 671)
isarray_96638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 18), 'isarray')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 665, 4), dict_96622, (str_96637, isarray_96638))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 12), list_96549, dict_96622)
# Adding element type (line 626)

# Obtaining an instance of the builtin type 'dict' (line 674)
dict_96639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 674, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 674)
# Adding element type (key, value) (line 674)
str_96640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 675, 8), 'str', '_check')

# Call to l_and(...): (line 675)
# Processing the call arguments (line 675)
# Getting the type of 'isarray' (line 675)
isarray_96642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 24), 'isarray', False)

# Call to l_not(...): (line 675)
# Processing the call arguments (line 675)
# Getting the type of 'iscomplexarray' (line 675)
iscomplexarray_96644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 39), 'iscomplexarray', False)
# Processing the call keyword arguments (line 675)
kwargs_96645 = {}
# Getting the type of 'l_not' (line 675)
l_not_96643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 33), 'l_not', False)
# Calling l_not(args, kwargs) (line 675)
l_not_call_result_96646 = invoke(stypy.reporting.localization.Localization(__file__, 675, 33), l_not_96643, *[iscomplexarray_96644], **kwargs_96645)

# Processing the call keyword arguments (line 675)
kwargs_96647 = {}
# Getting the type of 'l_and' (line 675)
l_and_96641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 675)
l_and_call_result_96648 = invoke(stypy.reporting.localization.Localization(__file__, 675, 18), l_and_96641, *[isarray_96642, l_not_call_result_96646], **kwargs_96647)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 674, 4), dict_96639, (str_96640, l_and_call_result_96648))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 12), list_96549, dict_96639)
# Adding element type (line 626)

# Obtaining an instance of the builtin type 'dict' (line 676)
dict_96649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 676, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 676)
# Adding element type (key, value) (line 676)
str_96650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 677, 8), 'str', '_check')

# Call to l_and(...): (line 677)
# Processing the call arguments (line 677)
# Getting the type of 'isarray' (line 677)
isarray_96652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 24), 'isarray', False)

# Call to l_not(...): (line 677)
# Processing the call arguments (line 677)
# Getting the type of 'iscomplexarray' (line 677)
iscomplexarray_96654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 39), 'iscomplexarray', False)
# Processing the call keyword arguments (line 677)
kwargs_96655 = {}
# Getting the type of 'l_not' (line 677)
l_not_96653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 33), 'l_not', False)
# Calling l_not(args, kwargs) (line 677)
l_not_call_result_96656 = invoke(stypy.reporting.localization.Localization(__file__, 677, 33), l_not_96653, *[iscomplexarray_96654], **kwargs_96655)

# Getting the type of 'isintent_nothide' (line 677)
isintent_nothide_96657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 56), 'isintent_nothide', False)
# Processing the call keyword arguments (line 677)
kwargs_96658 = {}
# Getting the type of 'l_and' (line 677)
l_and_96651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 677)
l_and_call_result_96659 = invoke(stypy.reporting.localization.Localization(__file__, 677, 18), l_and_96651, *[isarray_96652, l_not_call_result_96656, isintent_nothide_96657], **kwargs_96658)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 676, 7), dict_96649, (str_96650, l_and_call_result_96659))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 12), list_96549, dict_96649)
# Adding element type (line 626)

# Obtaining an instance of the builtin type 'dict' (line 680)
dict_96660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 680, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 680)
# Adding element type (key, value) (line 680)
str_96661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 680, 5), 'str', 'need')
str_96662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 680, 13), 'str', '#ctype#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 680, 4), dict_96660, (str_96661, str_96662))
# Adding element type (key, value) (line 680)
str_96663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 681, 5), 'str', '_check')
# Getting the type of 'isint1array' (line 681)
isint1array_96664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 15), 'isint1array')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 680, 4), dict_96660, (str_96663, isint1array_96664))
# Adding element type (key, value) (line 680)
str_96665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 682, 5), 'str', '_depend')
str_96666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 682, 16), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 680, 4), dict_96660, (str_96665, str_96666))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 12), list_96549, dict_96660)
# Adding element type (line 626)

# Obtaining an instance of the builtin type 'dict' (line 685)
dict_96667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 685)
# Adding element type (key, value) (line 685)
str_96668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 5), 'str', 'need')
str_96669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 13), 'str', '#ctype#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 685, 4), dict_96667, (str_96668, str_96669))
# Adding element type (key, value) (line 685)
str_96670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 686, 5), 'str', '_check')
# Getting the type of 'isunsigned_chararray' (line 686)
isunsigned_chararray_96671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 15), 'isunsigned_chararray')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 685, 4), dict_96667, (str_96670, isunsigned_chararray_96671))
# Adding element type (key, value) (line 685)
str_96672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 687, 5), 'str', '_depend')
str_96673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 687, 16), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 685, 4), dict_96667, (str_96672, str_96673))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 12), list_96549, dict_96667)
# Adding element type (line 626)

# Obtaining an instance of the builtin type 'dict' (line 690)
dict_96674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 690, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 690)
# Adding element type (key, value) (line 690)
str_96675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 690, 5), 'str', 'need')
str_96676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 690, 13), 'str', '#ctype#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 690, 4), dict_96674, (str_96675, str_96676))
# Adding element type (key, value) (line 690)
str_96677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 5), 'str', '_check')
# Getting the type of 'isunsigned_shortarray' (line 691)
isunsigned_shortarray_96678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 15), 'isunsigned_shortarray')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 690, 4), dict_96674, (str_96677, isunsigned_shortarray_96678))
# Adding element type (key, value) (line 690)
str_96679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 692, 5), 'str', '_depend')
str_96680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 692, 16), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 690, 4), dict_96674, (str_96679, str_96680))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 12), list_96549, dict_96674)
# Adding element type (line 626)

# Obtaining an instance of the builtin type 'dict' (line 695)
dict_96681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 695, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 695)
# Adding element type (key, value) (line 695)
str_96682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 695, 5), 'str', 'need')
str_96683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 695, 13), 'str', '#ctype#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 695, 4), dict_96681, (str_96682, str_96683))
# Adding element type (key, value) (line 695)
str_96684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 696, 5), 'str', '_check')
# Getting the type of 'isunsigned_long_longarray' (line 696)
isunsigned_long_longarray_96685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 15), 'isunsigned_long_longarray')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 695, 4), dict_96681, (str_96684, isunsigned_long_longarray_96685))
# Adding element type (key, value) (line 695)
str_96686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 5), 'str', '_depend')
str_96687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 16), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 695, 4), dict_96681, (str_96686, str_96687))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 12), list_96549, dict_96681)
# Adding element type (line 626)

# Obtaining an instance of the builtin type 'dict' (line 700)
dict_96688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 700, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 700)
# Adding element type (key, value) (line 700)
str_96689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 700, 5), 'str', 'need')
str_96690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 700, 13), 'str', '#ctype#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 700, 4), dict_96688, (str_96689, str_96690))
# Adding element type (key, value) (line 700)
str_96691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 701, 5), 'str', '_check')
# Getting the type of 'iscomplexarray' (line 701)
iscomplexarray_96692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 15), 'iscomplexarray')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 700, 4), dict_96688, (str_96691, iscomplexarray_96692))
# Adding element type (key, value) (line 700)
str_96693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 702, 5), 'str', '_depend')
str_96694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 702, 16), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 700, 4), dict_96688, (str_96693, str_96694))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 12), list_96549, dict_96688)
# Adding element type (line 626)

# Obtaining an instance of the builtin type 'dict' (line 705)
dict_96695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 705, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 705)
# Adding element type (key, value) (line 705)
str_96696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 8), 'str', 'callfortranappend')

# Obtaining an instance of the builtin type 'dict' (line 706)
dict_96697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 29), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 706)
# Adding element type (key, value) (line 706)
# Getting the type of 'isarrayofstrings' (line 706)
isarrayofstrings_96698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 30), 'isarrayofstrings')
str_96699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 48), 'str', 'flen(#varname#),')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 706, 29), dict_96697, (isarrayofstrings_96698, str_96699))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 705, 4), dict_96695, (str_96696, dict_96697))
# Adding element type (key, value) (line 705)
str_96700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 707, 8), 'str', 'need')
str_96701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 707, 16), 'str', 'string')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 705, 4), dict_96695, (str_96700, str_96701))
# Adding element type (key, value) (line 705)
str_96702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 8), 'str', '_check')
# Getting the type of 'isstringarray' (line 708)
isstringarray_96703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 18), 'isstringarray')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 705, 4), dict_96695, (str_96702, isstringarray_96703))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 12), list_96549, dict_96695)

# Assigning a type to the variable 'aux_rules' (line 626)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 626, 0), 'aux_rules', list_96549)

# Assigning a List to a Name (line 712):

# Assigning a List to a Name (line 712):

# Obtaining an instance of the builtin type 'list' (line 712)
list_96704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 12), 'list')
# Adding type elements to the builtin type 'list' instance (line 712)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 713)
dict_96705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 713, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 713)
# Adding element type (key, value) (line 713)
str_96706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 8), 'str', 'separatorsfor')
# Getting the type of 'sepdict' (line 714)
sepdict_96707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 25), 'sepdict')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 713, 4), dict_96705, (str_96706, sepdict_96707))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_96705)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 716)
dict_96708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 716)
# Adding element type (key, value) (line 716)
str_96709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 8), 'str', 'frompyobj')

# Obtaining an instance of the builtin type 'list' (line 717)
list_96710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 717)
# Adding element type (line 717)
str_96711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 22), 'str', '\t/* Processing variable #varname# */')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 717, 21), list_96710, str_96711)
# Adding element type (line 717)

# Obtaining an instance of the builtin type 'dict' (line 718)
dict_96712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 22), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 718)
# Adding element type (key, value) (line 718)
# Getting the type of 'debugcapi' (line 718)
debugcapi_96713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 718, 23), 'debugcapi')
str_96714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 34), 'str', '\tfprintf(stderr,"#vardebuginfo#\\n");')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 718, 22), dict_96712, (debugcapi_96713, str_96714))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 717, 21), list_96710, dict_96712)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 4), dict_96708, (str_96709, list_96710))
# Adding element type (key, value) (line 716)
str_96715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 8), 'str', 'cleanupfrompyobj')
str_96716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 28), 'str', '\t/* End of cleaning variable #varname# */')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 4), dict_96708, (str_96715, str_96716))
# Adding element type (key, value) (line 716)
str_96717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 8), 'str', '_depend')
str_96718 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 19), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 4), dict_96708, (str_96717, str_96718))
# Adding element type (key, value) (line 716)
str_96719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 8), 'str', 'need')
# Getting the type of 'typedef_need_dict' (line 721)
typedef_need_dict_96720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 16), 'typedef_need_dict')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 4), dict_96708, (str_96719, typedef_need_dict_96720))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_96708)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 724)
dict_96721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 724)
# Adding element type (key, value) (line 724)
str_96722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 8), 'str', 'docstropt')

# Obtaining an instance of the builtin type 'dict' (line 725)
dict_96723 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 725)
# Adding element type (key, value) (line 725)

# Call to l_and(...): (line 725)
# Processing the call arguments (line 725)
# Getting the type of 'isoptional' (line 725)
isoptional_96725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 28), 'isoptional', False)
# Getting the type of 'isintent_nothide' (line 725)
isintent_nothide_96726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 40), 'isintent_nothide', False)
# Processing the call keyword arguments (line 725)
kwargs_96727 = {}
# Getting the type of 'l_and' (line 725)
l_and_96724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 22), 'l_and', False)
# Calling l_and(args, kwargs) (line 725)
l_and_call_result_96728 = invoke(stypy.reporting.localization.Localization(__file__, 725, 22), l_and_96724, *[isoptional_96725, isintent_nothide_96726], **kwargs_96727)

str_96729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 59), 'str', '#pydocsign#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 21), dict_96723, (l_and_call_result_96728, str_96729))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 4), dict_96721, (str_96722, dict_96723))
# Adding element type (key, value) (line 724)
str_96730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 8), 'str', 'docstrreq')

# Obtaining an instance of the builtin type 'dict' (line 726)
dict_96731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 726)
# Adding element type (key, value) (line 726)

# Call to l_and(...): (line 726)
# Processing the call arguments (line 726)
# Getting the type of 'isrequired' (line 726)
isrequired_96733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 28), 'isrequired', False)
# Getting the type of 'isintent_nothide' (line 726)
isintent_nothide_96734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 40), 'isintent_nothide', False)
# Processing the call keyword arguments (line 726)
kwargs_96735 = {}
# Getting the type of 'l_and' (line 726)
l_and_96732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 22), 'l_and', False)
# Calling l_and(args, kwargs) (line 726)
l_and_call_result_96736 = invoke(stypy.reporting.localization.Localization(__file__, 726, 22), l_and_96732, *[isrequired_96733, isintent_nothide_96734], **kwargs_96735)

str_96737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 59), 'str', '#pydocsign#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 726, 21), dict_96731, (l_and_call_result_96736, str_96737))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 4), dict_96721, (str_96730, dict_96731))
# Adding element type (key, value) (line 724)
str_96738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 8), 'str', 'docstrout')

# Obtaining an instance of the builtin type 'dict' (line 727)
dict_96739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 727)
# Adding element type (key, value) (line 727)
# Getting the type of 'isintent_out' (line 727)
isintent_out_96740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 22), 'isintent_out')
str_96741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 36), 'str', '#pydocsignout#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 727, 21), dict_96739, (isintent_out_96740, str_96741))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 4), dict_96721, (str_96738, dict_96739))
# Adding element type (key, value) (line 724)
str_96742 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 8), 'str', 'latexdocstropt')

# Obtaining an instance of the builtin type 'dict' (line 728)
dict_96743 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 26), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 728)
# Adding element type (key, value) (line 728)

# Call to l_and(...): (line 728)
# Processing the call arguments (line 728)
# Getting the type of 'isoptional' (line 728)
isoptional_96745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 33), 'isoptional', False)
# Getting the type of 'isintent_nothide' (line 728)
isintent_nothide_96746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 45), 'isintent_nothide', False)
# Processing the call keyword arguments (line 728)
kwargs_96747 = {}
# Getting the type of 'l_and' (line 728)
l_and_96744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 27), 'l_and', False)
# Calling l_and(args, kwargs) (line 728)
l_and_call_result_96748 = invoke(stypy.reporting.localization.Localization(__file__, 728, 27), l_and_96744, *[isoptional_96745, isintent_nothide_96746], **kwargs_96747)


# Obtaining an instance of the builtin type 'list' (line 728)
list_96749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 64), 'list')
# Adding type elements to the builtin type 'list' instance (line 728)
# Adding element type (line 728)
str_96750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 65), 'str', '\\item[]{{}\\verb@#pydocsign#@{}}')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 64), list_96749, str_96750)
# Adding element type (line 728)

# Obtaining an instance of the builtin type 'dict' (line 729)
dict_96751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 65), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 729)
# Adding element type (key, value) (line 729)
# Getting the type of 'hasnote' (line 729)
hasnote_96752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 66), 'hasnote')
str_96753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 75), 'str', '--- #note#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 729, 65), dict_96751, (hasnote_96752, str_96753))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 64), list_96749, dict_96751)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 26), dict_96743, (l_and_call_result_96748, list_96749))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 4), dict_96721, (str_96742, dict_96743))
# Adding element type (key, value) (line 724)
str_96754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 8), 'str', 'latexdocstrreq')

# Obtaining an instance of the builtin type 'dict' (line 730)
dict_96755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 26), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 730)
# Adding element type (key, value) (line 730)

# Call to l_and(...): (line 730)
# Processing the call arguments (line 730)
# Getting the type of 'isrequired' (line 730)
isrequired_96757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 33), 'isrequired', False)
# Getting the type of 'isintent_nothide' (line 730)
isintent_nothide_96758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 45), 'isintent_nothide', False)
# Processing the call keyword arguments (line 730)
kwargs_96759 = {}
# Getting the type of 'l_and' (line 730)
l_and_96756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 27), 'l_and', False)
# Calling l_and(args, kwargs) (line 730)
l_and_call_result_96760 = invoke(stypy.reporting.localization.Localization(__file__, 730, 27), l_and_96756, *[isrequired_96757, isintent_nothide_96758], **kwargs_96759)


# Obtaining an instance of the builtin type 'list' (line 730)
list_96761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 64), 'list')
# Adding type elements to the builtin type 'list' instance (line 730)
# Adding element type (line 730)
str_96762 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 65), 'str', '\\item[]{{}\\verb@#pydocsign#@{}}')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 64), list_96761, str_96762)
# Adding element type (line 730)

# Obtaining an instance of the builtin type 'dict' (line 731)
dict_96763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 65), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 731)
# Adding element type (key, value) (line 731)
# Getting the type of 'hasnote' (line 731)
hasnote_96764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 66), 'hasnote')
str_96765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 75), 'str', '--- #note#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 65), dict_96763, (hasnote_96764, str_96765))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 64), list_96761, dict_96763)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 26), dict_96755, (l_and_call_result_96760, list_96761))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 4), dict_96721, (str_96754, dict_96755))
# Adding element type (key, value) (line 724)
str_96766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 8), 'str', 'latexdocstrout')

# Obtaining an instance of the builtin type 'dict' (line 732)
dict_96767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 26), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 732)
# Adding element type (key, value) (line 732)
# Getting the type of 'isintent_out' (line 732)
isintent_out_96768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 27), 'isintent_out')

# Obtaining an instance of the builtin type 'list' (line 732)
list_96769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 41), 'list')
# Adding type elements to the builtin type 'list' instance (line 732)
# Adding element type (line 732)
str_96770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 42), 'str', '\\item[]{{}\\verb@#pydocsignout#@{}}')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 41), list_96769, str_96770)
# Adding element type (line 732)

# Obtaining an instance of the builtin type 'dict' (line 733)
dict_96771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 733, 42), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 733)
# Adding element type (key, value) (line 733)

# Call to l_and(...): (line 733)
# Processing the call arguments (line 733)
# Getting the type of 'hasnote' (line 733)
hasnote_96773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 49), 'hasnote', False)
# Getting the type of 'isintent_hide' (line 733)
isintent_hide_96774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 58), 'isintent_hide', False)
# Processing the call keyword arguments (line 733)
kwargs_96775 = {}
# Getting the type of 'l_and' (line 733)
l_and_96772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 43), 'l_and', False)
# Calling l_and(args, kwargs) (line 733)
l_and_call_result_96776 = invoke(stypy.reporting.localization.Localization(__file__, 733, 43), l_and_96772, *[hasnote_96773, isintent_hide_96774], **kwargs_96775)

str_96777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 733, 74), 'str', '--- #note#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 733, 42), dict_96771, (l_and_call_result_96776, str_96777))
# Adding element type (key, value) (line 733)

# Call to l_and(...): (line 734)
# Processing the call arguments (line 734)
# Getting the type of 'hasnote' (line 734)
hasnote_96779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 49), 'hasnote', False)
# Getting the type of 'isintent_nothide' (line 734)
isintent_nothide_96780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 58), 'isintent_nothide', False)
# Processing the call keyword arguments (line 734)
kwargs_96781 = {}
# Getting the type of 'l_and' (line 734)
l_and_96778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 43), 'l_and', False)
# Calling l_and(args, kwargs) (line 734)
l_and_call_result_96782 = invoke(stypy.reporting.localization.Localization(__file__, 734, 43), l_and_96778, *[hasnote_96779, isintent_nothide_96780], **kwargs_96781)

str_96783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 77), 'str', '--- See above.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 733, 42), dict_96771, (l_and_call_result_96782, str_96783))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 41), list_96769, dict_96771)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 26), dict_96767, (isintent_out_96768, list_96769))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 4), dict_96721, (str_96766, dict_96767))
# Adding element type (key, value) (line 724)
str_96784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 735, 8), 'str', 'depend')
str_96785 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 735, 18), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 4), dict_96721, (str_96784, str_96785))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_96721)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 738)
dict_96786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 738)
# Adding element type (key, value) (line 738)
str_96787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 739, 8), 'str', 'kwlist')
str_96788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 739, 18), 'str', '"#varname#",')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 4), dict_96786, (str_96787, str_96788))
# Adding element type (key, value) (line 738)
str_96789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 8), 'str', 'docsign')
str_96790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 19), 'str', '#varname#,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 4), dict_96786, (str_96789, str_96790))
# Adding element type (key, value) (line 738)
str_96791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 741, 8), 'str', '_check')

# Call to l_and(...): (line 741)
# Processing the call arguments (line 741)
# Getting the type of 'isintent_nothide' (line 741)
isintent_nothide_96793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 24), 'isintent_nothide', False)

# Call to l_not(...): (line 741)
# Processing the call arguments (line 741)
# Getting the type of 'isoptional' (line 741)
isoptional_96795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 48), 'isoptional', False)
# Processing the call keyword arguments (line 741)
kwargs_96796 = {}
# Getting the type of 'l_not' (line 741)
l_not_96794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 42), 'l_not', False)
# Calling l_not(args, kwargs) (line 741)
l_not_call_result_96797 = invoke(stypy.reporting.localization.Localization(__file__, 741, 42), l_not_96794, *[isoptional_96795], **kwargs_96796)

# Processing the call keyword arguments (line 741)
kwargs_96798 = {}
# Getting the type of 'l_and' (line 741)
l_and_96792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 741)
l_and_call_result_96799 = invoke(stypy.reporting.localization.Localization(__file__, 741, 18), l_and_96792, *[isintent_nothide_96793, l_not_call_result_96797], **kwargs_96798)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 4), dict_96786, (str_96791, l_and_call_result_96799))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_96786)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 743)
dict_96800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 743, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 743)
# Adding element type (key, value) (line 743)
str_96801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 744, 8), 'str', 'kwlistopt')
str_96802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 744, 21), 'str', '"#varname#",')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 743, 4), dict_96800, (str_96801, str_96802))
# Adding element type (key, value) (line 743)
str_96803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 745, 8), 'str', 'docsignopt')
str_96804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 745, 22), 'str', '#varname#=#showinit#,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 743, 4), dict_96800, (str_96803, str_96804))
# Adding element type (key, value) (line 743)
str_96805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 8), 'str', 'docsignoptshort')
str_96806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 27), 'str', '#varname#,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 743, 4), dict_96800, (str_96805, str_96806))
# Adding element type (key, value) (line 743)
str_96807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 8), 'str', '_check')

# Call to l_and(...): (line 747)
# Processing the call arguments (line 747)
# Getting the type of 'isintent_nothide' (line 747)
isintent_nothide_96809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 24), 'isintent_nothide', False)
# Getting the type of 'isoptional' (line 747)
isoptional_96810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 42), 'isoptional', False)
# Processing the call keyword arguments (line 747)
kwargs_96811 = {}
# Getting the type of 'l_and' (line 747)
l_and_96808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 747)
l_and_call_result_96812 = invoke(stypy.reporting.localization.Localization(__file__, 747, 18), l_and_96808, *[isintent_nothide_96809, isoptional_96810], **kwargs_96811)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 743, 4), dict_96800, (str_96807, l_and_call_result_96812))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_96800)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 750)
dict_96813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 750, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 750)
# Adding element type (key, value) (line 750)
str_96814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 751, 8), 'str', 'docreturn')
str_96815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 751, 21), 'str', '#outvarname#,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 750, 4), dict_96813, (str_96814, str_96815))
# Adding element type (key, value) (line 750)
str_96816 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 8), 'str', 'returnformat')
str_96817 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 24), 'str', '#varrformat#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 750, 4), dict_96813, (str_96816, str_96817))
# Adding element type (key, value) (line 750)
str_96818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 8), 'str', '_check')
# Getting the type of 'isintent_out' (line 753)
isintent_out_96819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 18), 'isintent_out')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 750, 4), dict_96813, (str_96818, isintent_out_96819))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_96813)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 756)
dict_96820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 756, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 756)
# Adding element type (key, value) (line 756)
str_96821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 757, 8), 'str', 'docsignxa')

# Obtaining an instance of the builtin type 'dict' (line 757)
dict_96822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 757, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 757)
# Adding element type (key, value) (line 757)
# Getting the type of 'isintent_nothide' (line 757)
isintent_nothide_96823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 22), 'isintent_nothide')
str_96824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 757, 40), 'str', '#varname#_extra_args=(),')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 757, 21), dict_96822, (isintent_nothide_96823, str_96824))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 756, 4), dict_96820, (str_96821, dict_96822))
# Adding element type (key, value) (line 756)
str_96825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 758, 8), 'str', 'docsignxashort')

# Obtaining an instance of the builtin type 'dict' (line 758)
dict_96826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 758, 26), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 758)
# Adding element type (key, value) (line 758)
# Getting the type of 'isintent_nothide' (line 758)
isintent_nothide_96827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 27), 'isintent_nothide')
str_96828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 758, 45), 'str', '#varname#_extra_args,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 758, 26), dict_96826, (isintent_nothide_96827, str_96828))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 756, 4), dict_96820, (str_96825, dict_96826))
# Adding element type (key, value) (line 756)
str_96829 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 8), 'str', 'docstropt')

# Obtaining an instance of the builtin type 'dict' (line 759)
dict_96830 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 759)
# Adding element type (key, value) (line 759)
# Getting the type of 'isintent_nothide' (line 759)
isintent_nothide_96831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 22), 'isintent_nothide')
str_96832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 40), 'str', '#varname#_extra_args : input tuple, optional\\n    Default: ()')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 21), dict_96830, (isintent_nothide_96831, str_96832))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 756, 4), dict_96820, (str_96829, dict_96830))
# Adding element type (key, value) (line 756)
str_96833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 760, 8), 'str', 'docstrcbs')
str_96834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 760, 21), 'str', '#cbdocstr#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 756, 4), dict_96820, (str_96833, str_96834))
# Adding element type (key, value) (line 756)
str_96835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 761, 8), 'str', 'latexdocstrcbs')
str_96836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 761, 26), 'str', '\\item[] #cblatexdocstr#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 756, 4), dict_96820, (str_96835, str_96836))
# Adding element type (key, value) (line 756)
str_96837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 762, 8), 'str', 'latexdocstropt')

# Obtaining an instance of the builtin type 'dict' (line 762)
dict_96838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 762, 26), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 762)
# Adding element type (key, value) (line 762)
# Getting the type of 'isintent_nothide' (line 762)
isintent_nothide_96839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 762, 27), 'isintent_nothide')
str_96840 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 762, 45), 'str', '\\item[]{{}\\verb@#varname#_extra_args := () input tuple@{}} --- Extra arguments for call-back function {{}\\verb@#varname#@{}}.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 762, 26), dict_96838, (isintent_nothide_96839, str_96840))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 756, 4), dict_96820, (str_96837, dict_96838))
# Adding element type (key, value) (line 756)
str_96841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 763, 8), 'str', 'decl')

# Obtaining an instance of the builtin type 'list' (line 763)
list_96842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 763, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 763)
# Adding element type (line 763)
str_96843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 763, 17), 'str', '\tPyObject *#varname#_capi = Py_None;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 763, 16), list_96842, str_96843)
# Adding element type (line 763)
str_96844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 764, 17), 'str', '\tPyTupleObject *#varname#_xa_capi = NULL;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 763, 16), list_96842, str_96844)
# Adding element type (line 763)
str_96845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 765, 17), 'str', '\tPyTupleObject *#varname#_args_capi = NULL;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 763, 16), list_96842, str_96845)
# Adding element type (line 763)
str_96846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 17), 'str', '\tint #varname#_nofargs_capi = 0;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 763, 16), list_96842, str_96846)
# Adding element type (line 763)

# Obtaining an instance of the builtin type 'dict' (line 767)
dict_96847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 767, 17), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 767)
# Adding element type (key, value) (line 767)

# Call to l_not(...): (line 767)
# Processing the call arguments (line 767)
# Getting the type of 'isintent_callback' (line 767)
isintent_callback_96849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 24), 'isintent_callback', False)
# Processing the call keyword arguments (line 767)
kwargs_96850 = {}
# Getting the type of 'l_not' (line 767)
l_not_96848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 18), 'l_not', False)
# Calling l_not(args, kwargs) (line 767)
l_not_call_result_96851 = invoke(stypy.reporting.localization.Localization(__file__, 767, 18), l_not_96848, *[isintent_callback_96849], **kwargs_96850)

str_96852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 768, 18), 'str', '\t#cbname#_typedef #varname#_cptr;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 767, 17), dict_96847, (l_not_call_result_96851, str_96852))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 763, 16), list_96842, dict_96847)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 756, 4), dict_96820, (str_96841, list_96842))
# Adding element type (key, value) (line 756)
str_96853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 770, 8), 'str', 'kwlistxa')

# Obtaining an instance of the builtin type 'dict' (line 770)
dict_96854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 770, 20), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 770)
# Adding element type (key, value) (line 770)
# Getting the type of 'isintent_nothide' (line 770)
isintent_nothide_96855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 21), 'isintent_nothide')
str_96856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 770, 39), 'str', '"#varname#_extra_args",')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 770, 20), dict_96854, (isintent_nothide_96855, str_96856))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 756, 4), dict_96820, (str_96853, dict_96854))
# Adding element type (key, value) (line 756)
str_96857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 771, 8), 'str', 'argformat')

# Obtaining an instance of the builtin type 'dict' (line 771)
dict_96858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 771, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 771)
# Adding element type (key, value) (line 771)
# Getting the type of 'isrequired' (line 771)
isrequired_96859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 22), 'isrequired')
str_96860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 771, 34), 'str', 'O')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 771, 21), dict_96858, (isrequired_96859, str_96860))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 756, 4), dict_96820, (str_96857, dict_96858))
# Adding element type (key, value) (line 756)
str_96861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 772, 8), 'str', 'keyformat')

# Obtaining an instance of the builtin type 'dict' (line 772)
dict_96862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 772, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 772)
# Adding element type (key, value) (line 772)
# Getting the type of 'isoptional' (line 772)
isoptional_96863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 22), 'isoptional')
str_96864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 772, 34), 'str', 'O')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 772, 21), dict_96862, (isoptional_96863, str_96864))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 756, 4), dict_96820, (str_96861, dict_96862))
# Adding element type (key, value) (line 756)
str_96865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 8), 'str', 'xaformat')

# Obtaining an instance of the builtin type 'dict' (line 773)
dict_96866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 20), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 773)
# Adding element type (key, value) (line 773)
# Getting the type of 'isintent_nothide' (line 773)
isintent_nothide_96867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 21), 'isintent_nothide')
str_96868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 39), 'str', 'O!')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 773, 20), dict_96866, (isintent_nothide_96867, str_96868))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 756, 4), dict_96820, (str_96865, dict_96866))
# Adding element type (key, value) (line 756)
str_96869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 8), 'str', 'args_capi')

# Obtaining an instance of the builtin type 'dict' (line 774)
dict_96870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 774)
# Adding element type (key, value) (line 774)
# Getting the type of 'isrequired' (line 774)
isrequired_96871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 22), 'isrequired')
str_96872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 34), 'str', ',&#varname#_capi')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 774, 21), dict_96870, (isrequired_96871, str_96872))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 756, 4), dict_96820, (str_96869, dict_96870))
# Adding element type (key, value) (line 756)
str_96873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 775, 8), 'str', 'keys_capi')

# Obtaining an instance of the builtin type 'dict' (line 775)
dict_96874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 775, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 775)
# Adding element type (key, value) (line 775)
# Getting the type of 'isoptional' (line 775)
isoptional_96875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 22), 'isoptional')
str_96876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 775, 34), 'str', ',&#varname#_capi')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 775, 21), dict_96874, (isoptional_96875, str_96876))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 756, 4), dict_96820, (str_96873, dict_96874))
# Adding element type (key, value) (line 756)
str_96877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 8), 'str', 'keys_xa')
str_96878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 19), 'str', ',&PyTuple_Type,&#varname#_xa_capi')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 756, 4), dict_96820, (str_96877, str_96878))
# Adding element type (key, value) (line 756)
str_96879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 777, 8), 'str', 'setjmpbuf')
str_96880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 777, 21), 'str', '(setjmp(#cbname#_jmpbuf))')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 756, 4), dict_96820, (str_96879, str_96880))
# Adding element type (key, value) (line 756)
str_96881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 778, 8), 'str', 'callfortran')

# Obtaining an instance of the builtin type 'dict' (line 778)
dict_96882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 778, 23), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 778)
# Adding element type (key, value) (line 778)

# Call to l_not(...): (line 778)
# Processing the call arguments (line 778)
# Getting the type of 'isintent_callback' (line 778)
isintent_callback_96884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 30), 'isintent_callback', False)
# Processing the call keyword arguments (line 778)
kwargs_96885 = {}
# Getting the type of 'l_not' (line 778)
l_not_96883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 24), 'l_not', False)
# Calling l_not(args, kwargs) (line 778)
l_not_call_result_96886 = invoke(stypy.reporting.localization.Localization(__file__, 778, 24), l_not_96883, *[isintent_callback_96884], **kwargs_96885)

str_96887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 778, 50), 'str', '#varname#_cptr,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 778, 23), dict_96882, (l_not_call_result_96886, str_96887))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 756, 4), dict_96820, (str_96881, dict_96882))
# Adding element type (key, value) (line 756)
str_96888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 779, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'list' (line 779)
list_96889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 779, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 779)
# Adding element type (line 779)
str_96890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 779, 17), 'str', '#cbname#')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 779, 16), list_96889, str_96890)
# Adding element type (line 779)
str_96891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 779, 29), 'str', 'setjmp.h')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 779, 16), list_96889, str_96891)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 756, 4), dict_96820, (str_96888, list_96889))
# Adding element type (key, value) (line 756)
str_96892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 780, 8), 'str', '_check')
# Getting the type of 'isexternal' (line 780)
isexternal_96893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 17), 'isexternal')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 756, 4), dict_96820, (str_96892, isexternal_96893))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_96820)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 782)
dict_96894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 782, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 782)
# Adding element type (key, value) (line 782)
str_96895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 783, 8), 'str', 'frompyobj')

# Obtaining an instance of the builtin type 'list' (line 783)
list_96896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 783, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 783)
# Adding element type (line 783)

# Obtaining an instance of the builtin type 'dict' (line 783)
dict_96897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 783, 22), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 783)
# Adding element type (key, value) (line 783)

# Call to l_not(...): (line 783)
# Processing the call arguments (line 783)
# Getting the type of 'isintent_callback' (line 783)
isintent_callback_96899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 29), 'isintent_callback', False)
# Processing the call keyword arguments (line 783)
kwargs_96900 = {}
# Getting the type of 'l_not' (line 783)
l_not_96898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 23), 'l_not', False)
# Calling l_not(args, kwargs) (line 783)
l_not_call_result_96901 = invoke(stypy.reporting.localization.Localization(__file__, 783, 23), l_not_96898, *[isintent_callback_96899], **kwargs_96900)

str_96902 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 789, (-1)), 'str', 'if(F2PyCapsule_Check(#varname#_capi)) {\n  #varname#_cptr = F2PyCapsule_AsVoidPtr(#varname#_capi);\n} else {\n  #varname#_cptr = #cbname#;\n}\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 783, 22), dict_96897, (l_not_call_result_96901, str_96902))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 783, 21), list_96896, dict_96897)
# Adding element type (line 783)

# Obtaining an instance of the builtin type 'dict' (line 789)
dict_96903 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 789, 6), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 789)
# Adding element type (key, value) (line 789)
# Getting the type of 'isintent_callback' (line 789)
isintent_callback_96904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 7), 'isintent_callback')
str_96905 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, (-1)), 'str', 'if (#varname#_capi==Py_None) {\n  #varname#_capi = PyObject_GetAttrString(#modulename#_module,"#varname#");\n  if (#varname#_capi) {\n    if (#varname#_xa_capi==NULL) {\n      if (PyObject_HasAttrString(#modulename#_module,"#varname#_extra_args")) {\n        PyObject* capi_tmp = PyObject_GetAttrString(#modulename#_module,"#varname#_extra_args");\n        if (capi_tmp)\n          #varname#_xa_capi = (PyTupleObject *)PySequence_Tuple(capi_tmp);\n        else\n          #varname#_xa_capi = (PyTupleObject *)Py_BuildValue("()");\n        if (#varname#_xa_capi==NULL) {\n          PyErr_SetString(#modulename#_error,"Failed to convert #modulename#.#varname#_extra_args to tuple.\\n");\n          return NULL;\n        }\n      }\n    }\n  }\n  if (#varname#_capi==NULL) {\n    PyErr_SetString(#modulename#_error,"Callback #varname# not defined (as an argument or module #modulename# attribute).\\n");\n    return NULL;\n  }\n}\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 789, 6), dict_96903, (isintent_callback_96904, str_96905))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 783, 21), list_96896, dict_96903)
# Adding element type (line 783)
str_96906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, (-1)), 'str', '\t#varname#_nofargs_capi = #cbname#_nofargs;\n\tif (create_cb_arglist(#varname#_capi,#varname#_xa_capi,#maxnofargs#,#nofoptargs#,&#cbname#_nofargs,&#varname#_args_capi,"failed in processing argument list for call-back #varname#.")) {\n\t\tjmp_buf #varname#_jmpbuf;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 783, 21), list_96896, str_96906)
# Adding element type (line 783)

# Obtaining an instance of the builtin type 'dict' (line 817)
dict_96907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 817)
# Adding element type (key, value) (line 817)
# Getting the type of 'debugcapi' (line 817)
debugcapi_96908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 13), 'debugcapi')

# Obtaining an instance of the builtin type 'list' (line 817)
list_96909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 817)
# Adding element type (line 817)
str_96910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 819, (-1)), 'str', '\t\tfprintf(stderr,"debug-capi:Assuming %d arguments; at most #maxnofargs#(-#nofoptargs#) is expected.\\n",#cbname#_nofargs);\n\t\tCFUNCSMESSPY("for #varname#=",#cbname#_capi);')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 817, 24), list_96909, str_96910)
# Adding element type (line 817)

# Obtaining an instance of the builtin type 'dict' (line 820)
dict_96911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 820, 25), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 820)
# Adding element type (key, value) (line 820)

# Call to l_not(...): (line 820)
# Processing the call arguments (line 820)
# Getting the type of 'isintent_callback' (line 820)
isintent_callback_96913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 32), 'isintent_callback', False)
# Processing the call keyword arguments (line 820)
kwargs_96914 = {}
# Getting the type of 'l_not' (line 820)
l_not_96912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 26), 'l_not', False)
# Calling l_not(args, kwargs) (line 820)
l_not_call_result_96915 = invoke(stypy.reporting.localization.Localization(__file__, 820, 26), l_not_96912, *[isintent_callback_96913], **kwargs_96914)

str_96916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 820, 52), 'str', '\t\tfprintf(stderr,"#vardebugshowvalue# (call-back in C).\\n",#cbname#);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 820, 25), dict_96911, (l_not_call_result_96915, str_96916))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 817, 24), list_96909, dict_96911)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 817, 12), dict_96907, (debugcapi_96908, list_96909))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 783, 21), list_96896, dict_96907)
# Adding element type (line 783)
str_96917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, (-1)), 'str', '\t\tCFUNCSMESS("Saving jmpbuf for `#varname#`.\\n");\n\t\tSWAP(#varname#_capi,#cbname#_capi,PyObject);\n\t\tSWAP(#varname#_args_capi,#cbname#_args_capi,PyTupleObject);\n\t\tmemcpy(&#varname#_jmpbuf,&#cbname#_jmpbuf,sizeof(jmp_buf));')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 783, 21), list_96896, str_96917)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 782, 4), dict_96894, (str_96895, list_96896))
# Adding element type (key, value) (line 782)
str_96918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 8), 'str', 'cleanupfrompyobj')
str_96919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 835, (-1)), 'str', '\t\tCFUNCSMESS("Restoring jmpbuf for `#varname#`.\\n");\n\t\t#cbname#_capi = #varname#_capi;\n\t\tPy_DECREF(#cbname#_args_capi);\n\t\t#cbname#_args_capi = #varname#_args_capi;\n\t\t#cbname#_nofargs = #varname#_nofargs_capi;\n\t\tmemcpy(&#cbname#_jmpbuf,&#varname#_jmpbuf,sizeof(jmp_buf));\n\t}')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 782, 4), dict_96894, (str_96918, str_96919))
# Adding element type (key, value) (line 782)
str_96920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'list' (line 836)
list_96921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 836)
# Adding element type (line 836)
str_96922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 17), 'str', 'SWAP')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 836, 16), list_96921, str_96922)
# Adding element type (line 836)
str_96923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 25), 'str', 'create_cb_arglist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 836, 16), list_96921, str_96923)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 782, 4), dict_96894, (str_96920, list_96921))
# Adding element type (key, value) (line 782)
str_96924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 8), 'str', '_check')
# Getting the type of 'isexternal' (line 837)
isexternal_96925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 17), 'isexternal')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 782, 4), dict_96894, (str_96924, isexternal_96925))
# Adding element type (key, value) (line 782)
str_96926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 8), 'str', '_depend')
str_96927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 18), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 782, 4), dict_96894, (str_96926, str_96927))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_96894)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 841)
dict_96928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 841)
# Adding element type (key, value) (line 841)
str_96929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 8), 'str', 'decl')
str_96930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 16), 'str', '\t#ctype# #varname# = 0;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 4), dict_96928, (str_96929, str_96930))
# Adding element type (key, value) (line 841)
str_96931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 8), 'str', 'pyobjfrom')

# Obtaining an instance of the builtin type 'dict' (line 843)
dict_96932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 843)
# Adding element type (key, value) (line 843)
# Getting the type of 'debugcapi' (line 843)
debugcapi_96933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 22), 'debugcapi')
str_96934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 33), 'str', '\tfprintf(stderr,"#vardebugshowvalue#\\n",#varname#);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 843, 21), dict_96932, (debugcapi_96933, str_96934))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 4), dict_96928, (str_96931, dict_96932))
# Adding element type (key, value) (line 841)
str_96935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 8), 'str', 'callfortran')

# Obtaining an instance of the builtin type 'dict' (line 844)
dict_96936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 23), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 844)
# Adding element type (key, value) (line 844)
# Getting the type of 'isintent_c' (line 844)
isintent_c_96937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 24), 'isintent_c')
str_96938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 36), 'str', '#varname#,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 844, 23), dict_96936, (isintent_c_96937, str_96938))
# Adding element type (key, value) (line 844)

# Call to l_not(...): (line 844)
# Processing the call arguments (line 844)
# Getting the type of 'isintent_c' (line 844)
isintent_c_96940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 56), 'isintent_c', False)
# Processing the call keyword arguments (line 844)
kwargs_96941 = {}
# Getting the type of 'l_not' (line 844)
l_not_96939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 50), 'l_not', False)
# Calling l_not(args, kwargs) (line 844)
l_not_call_result_96942 = invoke(stypy.reporting.localization.Localization(__file__, 844, 50), l_not_96939, *[isintent_c_96940], **kwargs_96941)

str_96943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 69), 'str', '&#varname#,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 844, 23), dict_96936, (l_not_call_result_96942, str_96943))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 4), dict_96928, (str_96935, dict_96936))
# Adding element type (key, value) (line 841)
str_96944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 845, 8), 'str', 'return')

# Obtaining an instance of the builtin type 'dict' (line 845)
dict_96945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 845, 18), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 845)
# Adding element type (key, value) (line 845)
# Getting the type of 'isintent_out' (line 845)
isintent_out_96946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 19), 'isintent_out')
str_96947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 845, 33), 'str', ',#varname#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 845, 18), dict_96945, (isintent_out_96946, str_96947))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 4), dict_96928, (str_96944, dict_96945))
# Adding element type (key, value) (line 841)
str_96948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 846, 8), 'str', '_check')

# Call to l_and(...): (line 846)
# Processing the call arguments (line 846)
# Getting the type of 'isscalar' (line 846)
isscalar_96950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 24), 'isscalar', False)

# Call to l_not(...): (line 846)
# Processing the call arguments (line 846)
# Getting the type of 'iscomplex' (line 846)
iscomplex_96952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 40), 'iscomplex', False)
# Processing the call keyword arguments (line 846)
kwargs_96953 = {}
# Getting the type of 'l_not' (line 846)
l_not_96951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 34), 'l_not', False)
# Calling l_not(args, kwargs) (line 846)
l_not_call_result_96954 = invoke(stypy.reporting.localization.Localization(__file__, 846, 34), l_not_96951, *[iscomplex_96952], **kwargs_96953)

# Processing the call keyword arguments (line 846)
kwargs_96955 = {}
# Getting the type of 'l_and' (line 846)
l_and_96949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 846)
l_and_call_result_96956 = invoke(stypy.reporting.localization.Localization(__file__, 846, 18), l_and_96949, *[isscalar_96950, l_not_call_result_96954], **kwargs_96955)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 841, 4), dict_96928, (str_96948, l_and_call_result_96956))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_96928)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 847)
dict_96957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 847, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 847)
# Adding element type (key, value) (line 847)
str_96958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 848, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'dict' (line 848)
dict_96959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 848, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 848)
# Adding element type (key, value) (line 848)
# Getting the type of 'hasinitvalue' (line 848)
hasinitvalue_96960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 17), 'hasinitvalue')
str_96961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 848, 31), 'str', 'math.h')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 848, 16), dict_96959, (hasinitvalue_96960, str_96961))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 847, 7), dict_96957, (str_96958, dict_96959))
# Adding element type (key, value) (line 847)
str_96962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 8), 'str', '_check')

# Call to l_and(...): (line 849)
# Processing the call arguments (line 849)
# Getting the type of 'isscalar' (line 849)
isscalar_96964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 24), 'isscalar', False)

# Call to l_not(...): (line 849)
# Processing the call arguments (line 849)
# Getting the type of 'iscomplex' (line 849)
iscomplex_96966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 40), 'iscomplex', False)
# Processing the call keyword arguments (line 849)
kwargs_96967 = {}
# Getting the type of 'l_not' (line 849)
l_not_96965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 34), 'l_not', False)
# Calling l_not(args, kwargs) (line 849)
l_not_call_result_96968 = invoke(stypy.reporting.localization.Localization(__file__, 849, 34), l_not_96965, *[iscomplex_96966], **kwargs_96967)

# Processing the call keyword arguments (line 849)
kwargs_96969 = {}
# Getting the type of 'l_and' (line 849)
l_and_96963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 849)
l_and_call_result_96970 = invoke(stypy.reporting.localization.Localization(__file__, 849, 18), l_and_96963, *[isscalar_96964, l_not_call_result_96968], **kwargs_96969)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 847, 7), dict_96957, (str_96962, l_and_call_result_96970))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_96957)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 850)
dict_96971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 850, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 850)
# Adding element type (key, value) (line 850)
str_96972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 851, 8), 'str', 'decl')
str_96973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 851, 16), 'str', '\tPyObject *#varname#_capi = Py_None;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 850, 7), dict_96971, (str_96972, str_96973))
# Adding element type (key, value) (line 850)
str_96974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 8), 'str', 'argformat')

# Obtaining an instance of the builtin type 'dict' (line 852)
dict_96975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 852)
# Adding element type (key, value) (line 852)
# Getting the type of 'isrequired' (line 852)
isrequired_96976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 22), 'isrequired')
str_96977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 34), 'str', 'O')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 852, 21), dict_96975, (isrequired_96976, str_96977))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 850, 7), dict_96971, (str_96974, dict_96975))
# Adding element type (key, value) (line 850)
str_96978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 853, 8), 'str', 'keyformat')

# Obtaining an instance of the builtin type 'dict' (line 853)
dict_96979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 853, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 853)
# Adding element type (key, value) (line 853)
# Getting the type of 'isoptional' (line 853)
isoptional_96980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 22), 'isoptional')
str_96981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 853, 34), 'str', 'O')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 853, 21), dict_96979, (isoptional_96980, str_96981))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 850, 7), dict_96971, (str_96978, dict_96979))
# Adding element type (key, value) (line 850)
str_96982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 8), 'str', 'args_capi')

# Obtaining an instance of the builtin type 'dict' (line 854)
dict_96983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 854)
# Adding element type (key, value) (line 854)
# Getting the type of 'isrequired' (line 854)
isrequired_96984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 22), 'isrequired')
str_96985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 34), 'str', ',&#varname#_capi')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 854, 21), dict_96983, (isrequired_96984, str_96985))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 850, 7), dict_96971, (str_96982, dict_96983))
# Adding element type (key, value) (line 850)
str_96986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 855, 8), 'str', 'keys_capi')

# Obtaining an instance of the builtin type 'dict' (line 855)
dict_96987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 855, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 855)
# Adding element type (key, value) (line 855)
# Getting the type of 'isoptional' (line 855)
isoptional_96988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 22), 'isoptional')
str_96989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 855, 34), 'str', ',&#varname#_capi')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 855, 21), dict_96987, (isoptional_96988, str_96989))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 850, 7), dict_96971, (str_96986, dict_96987))
# Adding element type (key, value) (line 850)
str_96990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 856, 8), 'str', 'pyobjfrom')

# Obtaining an instance of the builtin type 'dict' (line 856)
dict_96991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 856, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 856)
# Adding element type (key, value) (line 856)
# Getting the type of 'isintent_inout' (line 856)
isintent_inout_96992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 22), 'isintent_inout')
str_96993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, (-1)), 'str', '\tf2py_success = try_pyarr_from_#ctype#(#varname#_capi,&#varname#);\n\tif (f2py_success) {')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 856, 21), dict_96991, (isintent_inout_96992, str_96993))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 850, 7), dict_96971, (str_96990, dict_96991))
# Adding element type (key, value) (line 850)
str_96994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 8), 'str', 'closepyobjfrom')

# Obtaining an instance of the builtin type 'dict' (line 859)
dict_96995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 26), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 859)
# Adding element type (key, value) (line 859)
# Getting the type of 'isintent_inout' (line 859)
isintent_inout_96996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 27), 'isintent_inout')
str_96997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 43), 'str', '\t} /*if (f2py_success) of #varname# pyobjfrom*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 859, 26), dict_96995, (isintent_inout_96996, str_96997))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 850, 7), dict_96971, (str_96994, dict_96995))
# Adding element type (key, value) (line 850)
str_96998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 860, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'dict' (line 860)
dict_96999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 860, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 860)
# Adding element type (key, value) (line 860)
# Getting the type of 'isintent_inout' (line 860)
isintent_inout_97000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 17), 'isintent_inout')
str_97001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 860, 33), 'str', 'try_pyarr_from_#ctype#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 860, 16), dict_96999, (isintent_inout_97000, str_97001))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 850, 7), dict_96971, (str_96998, dict_96999))
# Adding element type (key, value) (line 850)
str_97002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 861, 8), 'str', '_check')

# Call to l_and(...): (line 861)
# Processing the call arguments (line 861)
# Getting the type of 'isscalar' (line 861)
isscalar_97004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 24), 'isscalar', False)

# Call to l_not(...): (line 861)
# Processing the call arguments (line 861)
# Getting the type of 'iscomplex' (line 861)
iscomplex_97006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 40), 'iscomplex', False)
# Processing the call keyword arguments (line 861)
kwargs_97007 = {}
# Getting the type of 'l_not' (line 861)
l_not_97005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 34), 'l_not', False)
# Calling l_not(args, kwargs) (line 861)
l_not_call_result_97008 = invoke(stypy.reporting.localization.Localization(__file__, 861, 34), l_not_97005, *[iscomplex_97006], **kwargs_97007)

# Getting the type of 'isintent_nothide' (line 861)
isintent_nothide_97009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 52), 'isintent_nothide', False)
# Processing the call keyword arguments (line 861)
kwargs_97010 = {}
# Getting the type of 'l_and' (line 861)
l_and_97003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 861)
l_and_call_result_97011 = invoke(stypy.reporting.localization.Localization(__file__, 861, 18), l_and_97003, *[isscalar_97004, l_not_call_result_97008, isintent_nothide_97009], **kwargs_97010)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 850, 7), dict_96971, (str_97002, l_and_call_result_97011))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_96971)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 862)
dict_97012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 862, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 862)
# Adding element type (key, value) (line 862)
str_97013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 863, 8), 'str', 'frompyobj')

# Obtaining an instance of the builtin type 'list' (line 863)
list_97014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 863, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 863)
# Adding element type (line 863)

# Obtaining an instance of the builtin type 'dict' (line 879)
dict_97015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 879, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 879)
# Adding element type (key, value) (line 879)
# Getting the type of 'hasinitvalue' (line 879)
hasinitvalue_97016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 13), 'hasinitvalue')
str_97017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 879, 27), 'str', '\tif (#varname#_capi == Py_None) #varname# = #init#; else')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 879, 12), dict_97015, (hasinitvalue_97016, str_97017))
# Adding element type (key, value) (line 879)
str_97018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 880, 13), 'str', '_depend')
str_97019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 880, 24), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 879, 12), dict_97015, (str_97018, str_97019))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 863, 21), list_97014, dict_97015)
# Adding element type (line 863)

# Obtaining an instance of the builtin type 'dict' (line 881)
dict_97020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 881, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 881)
# Adding element type (key, value) (line 881)

# Call to l_and(...): (line 881)
# Processing the call arguments (line 881)
# Getting the type of 'isoptional' (line 881)
isoptional_97022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 19), 'isoptional', False)

# Call to l_not(...): (line 881)
# Processing the call arguments (line 881)
# Getting the type of 'hasinitvalue' (line 881)
hasinitvalue_97024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 37), 'hasinitvalue', False)
# Processing the call keyword arguments (line 881)
kwargs_97025 = {}
# Getting the type of 'l_not' (line 881)
l_not_97023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 31), 'l_not', False)
# Calling l_not(args, kwargs) (line 881)
l_not_call_result_97026 = invoke(stypy.reporting.localization.Localization(__file__, 881, 31), l_not_97023, *[hasinitvalue_97024], **kwargs_97025)

# Processing the call keyword arguments (line 881)
kwargs_97027 = {}
# Getting the type of 'l_and' (line 881)
l_and_97021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 13), 'l_and', False)
# Calling l_and(args, kwargs) (line 881)
l_and_call_result_97028 = invoke(stypy.reporting.localization.Localization(__file__, 881, 13), l_and_97021, *[isoptional_97022, l_not_call_result_97026], **kwargs_97027)

str_97029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 881, 53), 'str', '\tif (#varname#_capi != Py_None)')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 881, 12), dict_97020, (l_and_call_result_97028, str_97029))
# Adding element type (key, value) (line 881)
str_97030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 882, 13), 'str', '_depend')
str_97031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 882, 24), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 881, 12), dict_97020, (str_97030, str_97031))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 863, 21), list_97014, dict_97020)
# Adding element type (line 863)

# Obtaining an instance of the builtin type 'dict' (line 883)
dict_97032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 883, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 883)
# Adding element type (key, value) (line 883)

# Call to l_not(...): (line 883)
# Processing the call arguments (line 883)
# Getting the type of 'islogical' (line 883)
islogical_97034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 19), 'islogical', False)
# Processing the call keyword arguments (line 883)
kwargs_97035 = {}
# Getting the type of 'l_not' (line 883)
l_not_97033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 13), 'l_not', False)
# Calling l_not(args, kwargs) (line 883)
l_not_call_result_97036 = invoke(stypy.reporting.localization.Localization(__file__, 883, 13), l_not_97033, *[islogical_97034], **kwargs_97035)

str_97037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 885, (-1)), 'str', '\t\tf2py_success = #ctype#_from_pyobj(&#varname#,#varname#_capi,"#pyname#() #nth# (#varname#) can\'t be converted to #ctype#");\n\tif (f2py_success) {')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 883, 12), dict_97032, (l_not_call_result_97036, str_97037))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 863, 21), list_97014, dict_97032)
# Adding element type (line 863)

# Obtaining an instance of the builtin type 'dict' (line 886)
dict_97038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 886)
# Adding element type (key, value) (line 886)
# Getting the type of 'islogical' (line 886)
islogical_97039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 13), 'islogical')
str_97040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, (-1)), 'str', '\t\t#varname# = (#ctype#)PyObject_IsTrue(#varname#_capi);\n\t\tf2py_success = 1;\n\tif (f2py_success) {')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 886, 12), dict_97038, (islogical_97039, str_97040))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 863, 21), list_97014, dict_97038)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 862, 7), dict_97012, (str_97013, list_97014))
# Adding element type (key, value) (line 862)
str_97041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 891, 8), 'str', 'cleanupfrompyobj')
str_97042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 891, 28), 'str', '\t} /*if (f2py_success) of #varname#*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 862, 7), dict_97012, (str_97041, str_97042))
# Adding element type (key, value) (line 862)
str_97043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'dict' (line 892)
dict_97044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 892)
# Adding element type (key, value) (line 892)

# Call to l_not(...): (line 892)
# Processing the call arguments (line 892)
# Getting the type of 'islogical' (line 892)
islogical_97046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 23), 'islogical', False)
# Processing the call keyword arguments (line 892)
kwargs_97047 = {}
# Getting the type of 'l_not' (line 892)
l_not_97045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 17), 'l_not', False)
# Calling l_not(args, kwargs) (line 892)
l_not_call_result_97048 = invoke(stypy.reporting.localization.Localization(__file__, 892, 17), l_not_97045, *[islogical_97046], **kwargs_97047)

str_97049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 35), 'str', '#ctype#_from_pyobj')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 892, 16), dict_97044, (l_not_call_result_97048, str_97049))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 862, 7), dict_97012, (str_97043, dict_97044))
# Adding element type (key, value) (line 862)
str_97050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 8), 'str', '_check')

# Call to l_and(...): (line 893)
# Processing the call arguments (line 893)
# Getting the type of 'isscalar' (line 893)
isscalar_97052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 24), 'isscalar', False)

# Call to l_not(...): (line 893)
# Processing the call arguments (line 893)
# Getting the type of 'iscomplex' (line 893)
iscomplex_97054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 40), 'iscomplex', False)
# Processing the call keyword arguments (line 893)
kwargs_97055 = {}
# Getting the type of 'l_not' (line 893)
l_not_97053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 34), 'l_not', False)
# Calling l_not(args, kwargs) (line 893)
l_not_call_result_97056 = invoke(stypy.reporting.localization.Localization(__file__, 893, 34), l_not_97053, *[iscomplex_97054], **kwargs_97055)

# Getting the type of 'isintent_nothide' (line 893)
isintent_nothide_97057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 52), 'isintent_nothide', False)
# Processing the call keyword arguments (line 893)
kwargs_97058 = {}
# Getting the type of 'l_and' (line 893)
l_and_97051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 893)
l_and_call_result_97059 = invoke(stypy.reporting.localization.Localization(__file__, 893, 18), l_and_97051, *[isscalar_97052, l_not_call_result_97056, isintent_nothide_97057], **kwargs_97058)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 862, 7), dict_97012, (str_97050, l_and_call_result_97059))
# Adding element type (key, value) (line 862)
str_97060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, 8), 'str', '_depend')
str_97061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, 19), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 862, 7), dict_97012, (str_97060, str_97061))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97012)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 895)
dict_97062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 895, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 895)
# Adding element type (key, value) (line 895)
str_97063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 8), 'str', 'frompyobj')

# Obtaining an instance of the builtin type 'dict' (line 896)
dict_97064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 896)
# Adding element type (key, value) (line 896)
# Getting the type of 'hasinitvalue' (line 896)
hasinitvalue_97065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 22), 'hasinitvalue')
str_97066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 36), 'str', '\t#varname# = #init#;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 896, 21), dict_97064, (hasinitvalue_97065, str_97066))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 895, 7), dict_97062, (str_97063, dict_97064))
# Adding element type (key, value) (line 895)
str_97067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, 8), 'str', 'need')
# Getting the type of 'typedef_need_dict' (line 897)
typedef_need_dict_97068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 897, 16), 'typedef_need_dict')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 895, 7), dict_97062, (str_97067, typedef_need_dict_97068))
# Adding element type (key, value) (line 895)
str_97069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 8), 'str', '_check')

# Call to l_and(...): (line 898)
# Processing the call arguments (line 898)
# Getting the type of 'isscalar' (line 898)
isscalar_97071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 24), 'isscalar', False)

# Call to l_not(...): (line 898)
# Processing the call arguments (line 898)
# Getting the type of 'iscomplex' (line 898)
iscomplex_97073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 40), 'iscomplex', False)
# Processing the call keyword arguments (line 898)
kwargs_97074 = {}
# Getting the type of 'l_not' (line 898)
l_not_97072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 34), 'l_not', False)
# Calling l_not(args, kwargs) (line 898)
l_not_call_result_97075 = invoke(stypy.reporting.localization.Localization(__file__, 898, 34), l_not_97072, *[iscomplex_97073], **kwargs_97074)

# Getting the type of 'isintent_hide' (line 898)
isintent_hide_97076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 52), 'isintent_hide', False)
# Processing the call keyword arguments (line 898)
kwargs_97077 = {}
# Getting the type of 'l_and' (line 898)
l_and_97070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 898)
l_and_call_result_97078 = invoke(stypy.reporting.localization.Localization(__file__, 898, 18), l_and_97070, *[isscalar_97071, l_not_call_result_97075, isintent_hide_97076], **kwargs_97077)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 895, 7), dict_97062, (str_97069, l_and_call_result_97078))
# Adding element type (key, value) (line 895)
str_97079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 899, 8), 'str', '_depend')
str_97080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 899, 19), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 895, 7), dict_97062, (str_97079, str_97080))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97062)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 900)
dict_97081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 900, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 900)
# Adding element type (key, value) (line 900)
str_97082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 8), 'str', 'frompyobj')

# Obtaining an instance of the builtin type 'dict' (line 901)
dict_97083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 901)
# Adding element type (key, value) (line 901)
# Getting the type of 'debugcapi' (line 901)
debugcapi_97084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 22), 'debugcapi')
str_97085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 33), 'str', '\tfprintf(stderr,"#vardebugshowvalue#\\n",#varname#);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 21), dict_97083, (debugcapi_97084, str_97085))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 7), dict_97081, (str_97082, dict_97083))
# Adding element type (key, value) (line 900)
str_97086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 902, 8), 'str', '_check')

# Call to l_and(...): (line 902)
# Processing the call arguments (line 902)
# Getting the type of 'isscalar' (line 902)
isscalar_97088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 24), 'isscalar', False)

# Call to l_not(...): (line 902)
# Processing the call arguments (line 902)
# Getting the type of 'iscomplex' (line 902)
iscomplex_97090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 40), 'iscomplex', False)
# Processing the call keyword arguments (line 902)
kwargs_97091 = {}
# Getting the type of 'l_not' (line 902)
l_not_97089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 34), 'l_not', False)
# Calling l_not(args, kwargs) (line 902)
l_not_call_result_97092 = invoke(stypy.reporting.localization.Localization(__file__, 902, 34), l_not_97089, *[iscomplex_97090], **kwargs_97091)

# Processing the call keyword arguments (line 902)
kwargs_97093 = {}
# Getting the type of 'l_and' (line 902)
l_and_97087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 902)
l_and_call_result_97094 = invoke(stypy.reporting.localization.Localization(__file__, 902, 18), l_and_97087, *[isscalar_97088, l_not_call_result_97092], **kwargs_97093)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 7), dict_97081, (str_97086, l_and_call_result_97094))
# Adding element type (key, value) (line 900)
str_97095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 8), 'str', '_depend')
str_97096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 19), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 7), dict_97081, (str_97095, str_97096))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97081)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 906)
dict_97097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 906, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 906)
# Adding element type (key, value) (line 906)
str_97098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 907, 8), 'str', 'decl')
str_97099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 907, 16), 'str', '\t#ctype# #varname#;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 906, 4), dict_97097, (str_97098, str_97099))
# Adding element type (key, value) (line 906)
str_97100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 908, 8), 'str', 'callfortran')

# Obtaining an instance of the builtin type 'dict' (line 908)
dict_97101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 908, 23), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 908)
# Adding element type (key, value) (line 908)
# Getting the type of 'isintent_c' (line 908)
isintent_c_97102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 24), 'isintent_c')
str_97103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 908, 36), 'str', '#varname#,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 908, 23), dict_97101, (isintent_c_97102, str_97103))
# Adding element type (key, value) (line 908)

# Call to l_not(...): (line 908)
# Processing the call arguments (line 908)
# Getting the type of 'isintent_c' (line 908)
isintent_c_97105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 56), 'isintent_c', False)
# Processing the call keyword arguments (line 908)
kwargs_97106 = {}
# Getting the type of 'l_not' (line 908)
l_not_97104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 50), 'l_not', False)
# Calling l_not(args, kwargs) (line 908)
l_not_call_result_97107 = invoke(stypy.reporting.localization.Localization(__file__, 908, 50), l_not_97104, *[isintent_c_97105], **kwargs_97106)

str_97108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 908, 69), 'str', '&#varname#,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 908, 23), dict_97101, (l_not_call_result_97107, str_97108))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 906, 4), dict_97097, (str_97100, dict_97101))
# Adding element type (key, value) (line 906)
str_97109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 909, 8), 'str', 'pyobjfrom')

# Obtaining an instance of the builtin type 'dict' (line 909)
dict_97110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 909, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 909)
# Adding element type (key, value) (line 909)
# Getting the type of 'debugcapi' (line 909)
debugcapi_97111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 22), 'debugcapi')
str_97112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 909, 33), 'str', '\tfprintf(stderr,"#vardebugshowvalue#\\n",#varname#.r,#varname#.i);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 909, 21), dict_97110, (debugcapi_97111, str_97112))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 906, 4), dict_97097, (str_97109, dict_97110))
# Adding element type (key, value) (line 906)
str_97113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 910, 8), 'str', 'return')

# Obtaining an instance of the builtin type 'dict' (line 910)
dict_97114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 910, 18), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 910)
# Adding element type (key, value) (line 910)
# Getting the type of 'isintent_out' (line 910)
isintent_out_97115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 19), 'isintent_out')
str_97116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 910, 33), 'str', ',#varname#_capi')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 910, 18), dict_97114, (isintent_out_97115, str_97116))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 906, 4), dict_97097, (str_97113, dict_97114))
# Adding element type (key, value) (line 906)
str_97117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 911, 8), 'str', '_check')
# Getting the type of 'iscomplex' (line 911)
iscomplex_97118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 911, 18), 'iscomplex')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 906, 4), dict_97097, (str_97117, iscomplex_97118))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97097)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 912)
dict_97119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 912, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 912)
# Adding element type (key, value) (line 912)
str_97120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 913, 8), 'str', 'decl')
str_97121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 913, 16), 'str', '\tPyObject *#varname#_capi = Py_None;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 7), dict_97119, (str_97120, str_97121))
# Adding element type (key, value) (line 912)
str_97122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 914, 8), 'str', 'argformat')

# Obtaining an instance of the builtin type 'dict' (line 914)
dict_97123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 914, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 914)
# Adding element type (key, value) (line 914)
# Getting the type of 'isrequired' (line 914)
isrequired_97124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 22), 'isrequired')
str_97125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 914, 34), 'str', 'O')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 914, 21), dict_97123, (isrequired_97124, str_97125))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 7), dict_97119, (str_97122, dict_97123))
# Adding element type (key, value) (line 912)
str_97126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 8), 'str', 'keyformat')

# Obtaining an instance of the builtin type 'dict' (line 915)
dict_97127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 915)
# Adding element type (key, value) (line 915)
# Getting the type of 'isoptional' (line 915)
isoptional_97128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 22), 'isoptional')
str_97129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 34), 'str', 'O')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 915, 21), dict_97127, (isoptional_97128, str_97129))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 7), dict_97119, (str_97126, dict_97127))
# Adding element type (key, value) (line 912)
str_97130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 916, 8), 'str', 'args_capi')

# Obtaining an instance of the builtin type 'dict' (line 916)
dict_97131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 916, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 916)
# Adding element type (key, value) (line 916)
# Getting the type of 'isrequired' (line 916)
isrequired_97132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 22), 'isrequired')
str_97133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 916, 34), 'str', ',&#varname#_capi')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 916, 21), dict_97131, (isrequired_97132, str_97133))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 7), dict_97119, (str_97130, dict_97131))
# Adding element type (key, value) (line 912)
str_97134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 917, 8), 'str', 'keys_capi')

# Obtaining an instance of the builtin type 'dict' (line 917)
dict_97135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 917, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 917)
# Adding element type (key, value) (line 917)
# Getting the type of 'isoptional' (line 917)
isoptional_97136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 917, 22), 'isoptional')
str_97137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 917, 34), 'str', ',&#varname#_capi')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 917, 21), dict_97135, (isoptional_97136, str_97137))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 7), dict_97119, (str_97134, dict_97135))
# Adding element type (key, value) (line 912)
str_97138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'dict' (line 918)
dict_97139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 918)
# Adding element type (key, value) (line 918)
# Getting the type of 'isintent_inout' (line 918)
isintent_inout_97140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 17), 'isintent_inout')
str_97141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 33), 'str', 'try_pyarr_from_#ctype#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 918, 16), dict_97139, (isintent_inout_97140, str_97141))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 7), dict_97119, (str_97138, dict_97139))
# Adding element type (key, value) (line 912)
str_97142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 919, 8), 'str', 'pyobjfrom')

# Obtaining an instance of the builtin type 'dict' (line 919)
dict_97143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 919, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 919)
# Adding element type (key, value) (line 919)
# Getting the type of 'isintent_inout' (line 919)
isintent_inout_97144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 919, 22), 'isintent_inout')
str_97145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 921, (-1)), 'str', '\t\tf2py_success = try_pyarr_from_#ctype#(#varname#_capi,&#varname#);\n\t\tif (f2py_success) {')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 919, 21), dict_97143, (isintent_inout_97144, str_97145))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 7), dict_97119, (str_97142, dict_97143))
# Adding element type (key, value) (line 912)
str_97146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 922, 8), 'str', 'closepyobjfrom')

# Obtaining an instance of the builtin type 'dict' (line 922)
dict_97147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 922, 26), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 922)
# Adding element type (key, value) (line 922)
# Getting the type of 'isintent_inout' (line 922)
isintent_inout_97148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 27), 'isintent_inout')
str_97149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 922, 43), 'str', '\t\t} /*if (f2py_success) of #varname# pyobjfrom*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 922, 26), dict_97147, (isintent_inout_97148, str_97149))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 7), dict_97119, (str_97146, dict_97147))
# Adding element type (key, value) (line 912)
str_97150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 923, 8), 'str', '_check')

# Call to l_and(...): (line 923)
# Processing the call arguments (line 923)
# Getting the type of 'iscomplex' (line 923)
iscomplex_97152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 24), 'iscomplex', False)
# Getting the type of 'isintent_nothide' (line 923)
isintent_nothide_97153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 35), 'isintent_nothide', False)
# Processing the call keyword arguments (line 923)
kwargs_97154 = {}
# Getting the type of 'l_and' (line 923)
l_and_97151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 923)
l_and_call_result_97155 = invoke(stypy.reporting.localization.Localization(__file__, 923, 18), l_and_97151, *[iscomplex_97152, isintent_nothide_97153], **kwargs_97154)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 7), dict_97119, (str_97150, l_and_call_result_97155))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97119)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 924)
dict_97156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 924, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 924)
# Adding element type (key, value) (line 924)
str_97157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 925, 8), 'str', 'frompyobj')

# Obtaining an instance of the builtin type 'list' (line 925)
list_97158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 925, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 925)
# Adding element type (line 925)

# Obtaining an instance of the builtin type 'dict' (line 925)
dict_97159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 925, 22), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 925)
# Adding element type (key, value) (line 925)
# Getting the type of 'hasinitvalue' (line 925)
hasinitvalue_97160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 925, 23), 'hasinitvalue')
str_97161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 925, 37), 'str', '\tif (#varname#_capi==Py_None) {#varname#.r = #init.r#, #varname#.i = #init.i#;} else')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 925, 22), dict_97159, (hasinitvalue_97160, str_97161))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 925, 21), list_97158, dict_97159)
# Adding element type (line 925)

# Obtaining an instance of the builtin type 'dict' (line 926)
dict_97162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 926, 22), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 926)
# Adding element type (key, value) (line 926)

# Call to l_and(...): (line 926)
# Processing the call arguments (line 926)
# Getting the type of 'isoptional' (line 926)
isoptional_97164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 29), 'isoptional', False)

# Call to l_not(...): (line 926)
# Processing the call arguments (line 926)
# Getting the type of 'hasinitvalue' (line 926)
hasinitvalue_97166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 47), 'hasinitvalue', False)
# Processing the call keyword arguments (line 926)
kwargs_97167 = {}
# Getting the type of 'l_not' (line 926)
l_not_97165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 41), 'l_not', False)
# Calling l_not(args, kwargs) (line 926)
l_not_call_result_97168 = invoke(stypy.reporting.localization.Localization(__file__, 926, 41), l_not_97165, *[hasinitvalue_97166], **kwargs_97167)

# Processing the call keyword arguments (line 926)
kwargs_97169 = {}
# Getting the type of 'l_and' (line 926)
l_and_97163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 23), 'l_and', False)
# Calling l_and(args, kwargs) (line 926)
l_and_call_result_97170 = invoke(stypy.reporting.localization.Localization(__file__, 926, 23), l_and_97163, *[isoptional_97164, l_not_call_result_97168], **kwargs_97169)

str_97171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 927, 31), 'str', '\tif (#varname#_capi != Py_None)')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 926, 22), dict_97162, (l_and_call_result_97170, str_97171))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 925, 21), list_97158, dict_97162)
# Adding element type (line 925)
str_97172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 928, 22), 'str', '\t\tf2py_success = #ctype#_from_pyobj(&#varname#,#varname#_capi,"#pyname#() #nth# (#varname#) can\'t be converted to #ctype#");\n\tif (f2py_success) {')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 925, 21), list_97158, str_97172)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 7), dict_97156, (str_97157, list_97158))
# Adding element type (key, value) (line 924)
str_97173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 8), 'str', 'cleanupfrompyobj')
str_97174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 28), 'str', '\t}  /*if (f2py_success) of #varname# frompyobj*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 7), dict_97156, (str_97173, str_97174))
# Adding element type (key, value) (line 924)
str_97175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 931, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'list' (line 931)
list_97176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 931, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 931)
# Adding element type (line 931)
str_97177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 931, 17), 'str', '#ctype#_from_pyobj')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 931, 16), list_97176, str_97177)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 7), dict_97156, (str_97175, list_97176))
# Adding element type (key, value) (line 924)
str_97178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 932, 8), 'str', '_check')

# Call to l_and(...): (line 932)
# Processing the call arguments (line 932)
# Getting the type of 'iscomplex' (line 932)
iscomplex_97180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 932, 24), 'iscomplex', False)
# Getting the type of 'isintent_nothide' (line 932)
isintent_nothide_97181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 932, 35), 'isintent_nothide', False)
# Processing the call keyword arguments (line 932)
kwargs_97182 = {}
# Getting the type of 'l_and' (line 932)
l_and_97179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 932, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 932)
l_and_call_result_97183 = invoke(stypy.reporting.localization.Localization(__file__, 932, 18), l_and_97179, *[iscomplex_97180, isintent_nothide_97181], **kwargs_97182)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 7), dict_97156, (str_97178, l_and_call_result_97183))
# Adding element type (key, value) (line 924)
str_97184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 8), 'str', '_depend')
str_97185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 19), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 7), dict_97156, (str_97184, str_97185))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97156)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 934)
dict_97186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 934, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 934)
# Adding element type (key, value) (line 934)
str_97187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 935, 8), 'str', 'decl')

# Obtaining an instance of the builtin type 'dict' (line 935)
dict_97188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 935, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 935)
# Adding element type (key, value) (line 935)
# Getting the type of 'isintent_out' (line 935)
isintent_out_97189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 17), 'isintent_out')
str_97190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 935, 31), 'str', '\tPyObject *#varname#_capi = Py_None;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 935, 16), dict_97188, (isintent_out_97189, str_97190))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 934, 7), dict_97186, (str_97187, dict_97188))
# Adding element type (key, value) (line 934)
str_97191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 936, 8), 'str', '_check')

# Call to l_and(...): (line 936)
# Processing the call arguments (line 936)
# Getting the type of 'iscomplex' (line 936)
iscomplex_97193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 24), 'iscomplex', False)
# Getting the type of 'isintent_hide' (line 936)
isintent_hide_97194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 35), 'isintent_hide', False)
# Processing the call keyword arguments (line 936)
kwargs_97195 = {}
# Getting the type of 'l_and' (line 936)
l_and_97192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 936)
l_and_call_result_97196 = invoke(stypy.reporting.localization.Localization(__file__, 936, 18), l_and_97192, *[iscomplex_97193, isintent_hide_97194], **kwargs_97195)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 934, 7), dict_97186, (str_97191, l_and_call_result_97196))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97186)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 937)
dict_97197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 937, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 937)
# Adding element type (key, value) (line 937)
str_97198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 8), 'str', 'frompyobj')

# Obtaining an instance of the builtin type 'dict' (line 938)
dict_97199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 938)
# Adding element type (key, value) (line 938)
# Getting the type of 'hasinitvalue' (line 938)
hasinitvalue_97200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 22), 'hasinitvalue')
str_97201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 36), 'str', '\t#varname#.r = #init.r#, #varname#.i = #init.i#;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 938, 21), dict_97199, (hasinitvalue_97200, str_97201))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 937, 7), dict_97197, (str_97198, dict_97199))
# Adding element type (key, value) (line 937)
str_97202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 939, 8), 'str', '_check')

# Call to l_and(...): (line 939)
# Processing the call arguments (line 939)
# Getting the type of 'iscomplex' (line 939)
iscomplex_97204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 24), 'iscomplex', False)
# Getting the type of 'isintent_hide' (line 939)
isintent_hide_97205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 35), 'isintent_hide', False)
# Processing the call keyword arguments (line 939)
kwargs_97206 = {}
# Getting the type of 'l_and' (line 939)
l_and_97203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 939)
l_and_call_result_97207 = invoke(stypy.reporting.localization.Localization(__file__, 939, 18), l_and_97203, *[iscomplex_97204, isintent_hide_97205], **kwargs_97206)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 937, 7), dict_97197, (str_97202, l_and_call_result_97207))
# Adding element type (key, value) (line 937)
str_97208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 940, 8), 'str', '_depend')
str_97209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 940, 19), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 937, 7), dict_97197, (str_97208, str_97209))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97197)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 941)
dict_97210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 941, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 941)
# Adding element type (key, value) (line 941)
str_97211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 942, 8), 'str', 'pyobjfrom')

# Obtaining an instance of the builtin type 'dict' (line 942)
dict_97212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 942, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 942)
# Adding element type (key, value) (line 942)
# Getting the type of 'isintent_out' (line 942)
isintent_out_97213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 942, 22), 'isintent_out')
str_97214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 942, 36), 'str', '\t#varname#_capi = pyobj_from_#ctype#1(#varname#);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 942, 21), dict_97212, (isintent_out_97213, str_97214))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 941, 7), dict_97210, (str_97211, dict_97212))
# Adding element type (key, value) (line 941)
str_97215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'list' (line 943)
list_97216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 943)
# Adding element type (line 943)
str_97217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 17), 'str', 'pyobj_from_#ctype#1')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 943, 16), list_97216, str_97217)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 941, 7), dict_97210, (str_97215, list_97216))
# Adding element type (key, value) (line 941)
str_97218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 944, 8), 'str', '_check')
# Getting the type of 'iscomplex' (line 944)
iscomplex_97219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 18), 'iscomplex')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 941, 7), dict_97210, (str_97218, iscomplex_97219))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97210)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 945)
dict_97220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 945, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 945)
# Adding element type (key, value) (line 945)
str_97221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 946, 8), 'str', 'frompyobj')

# Obtaining an instance of the builtin type 'dict' (line 946)
dict_97222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 946, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 946)
# Adding element type (key, value) (line 946)
# Getting the type of 'debugcapi' (line 946)
debugcapi_97223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 22), 'debugcapi')
str_97224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 946, 33), 'str', '\tfprintf(stderr,"#vardebugshowvalue#\\n",#varname#.r,#varname#.i);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 946, 21), dict_97222, (debugcapi_97223, str_97224))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 945, 7), dict_97220, (str_97221, dict_97222))
# Adding element type (key, value) (line 945)
str_97225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 947, 8), 'str', '_check')
# Getting the type of 'iscomplex' (line 947)
iscomplex_97226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 947, 18), 'iscomplex')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 945, 7), dict_97220, (str_97225, iscomplex_97226))
# Adding element type (key, value) (line 945)
str_97227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 8), 'str', '_depend')
str_97228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 19), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 945, 7), dict_97220, (str_97227, str_97228))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97220)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 951)
dict_97229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 951, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 951)
# Adding element type (key, value) (line 951)
str_97230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 952, 8), 'str', 'decl')

# Obtaining an instance of the builtin type 'list' (line 952)
list_97231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 952, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 952)
# Adding element type (line 952)
str_97232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 952, 17), 'str', '\t#ctype# #varname# = NULL;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 952, 16), list_97231, str_97232)
# Adding element type (line 952)
str_97233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 953, 17), 'str', '\tint slen(#varname#);')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 952, 16), list_97231, str_97233)
# Adding element type (line 952)
str_97234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 954, 17), 'str', '\tPyObject *#varname#_capi = Py_None;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 952, 16), list_97231, str_97234)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 951, 4), dict_97229, (str_97230, list_97231))
# Adding element type (key, value) (line 951)
str_97235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 955, 8), 'str', 'callfortran')
str_97236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 955, 22), 'str', '#varname#,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 951, 4), dict_97229, (str_97235, str_97236))
# Adding element type (key, value) (line 951)
str_97237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 956, 8), 'str', 'callfortranappend')
str_97238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 956, 28), 'str', 'slen(#varname#),')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 951, 4), dict_97229, (str_97237, str_97238))
# Adding element type (key, value) (line 951)
str_97239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 957, 8), 'str', 'pyobjfrom')

# Obtaining an instance of the builtin type 'dict' (line 957)
dict_97240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 957, 20), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 957)
# Adding element type (key, value) (line 957)
# Getting the type of 'debugcapi' (line 957)
debugcapi_97241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 957, 21), 'debugcapi')
str_97242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 957, 32), 'str', '\tfprintf(stderr,"#vardebugshowvalue#\\n",slen(#varname#),#varname#);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 957, 20), dict_97240, (debugcapi_97241, str_97242))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 951, 4), dict_97229, (str_97239, dict_97240))
# Adding element type (key, value) (line 951)
str_97243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 958, 8), 'str', 'return')

# Obtaining an instance of the builtin type 'dict' (line 958)
dict_97244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 958, 18), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 958)
# Adding element type (key, value) (line 958)
# Getting the type of 'isintent_out' (line 958)
isintent_out_97245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 19), 'isintent_out')
str_97246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 958, 33), 'str', ',#varname#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 18), dict_97244, (isintent_out_97245, str_97246))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 951, 4), dict_97229, (str_97243, dict_97244))
# Adding element type (key, value) (line 951)
str_97247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 959, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'list' (line 959)
list_97248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 959, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 959)
# Adding element type (line 959)
str_97249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 959, 17), 'str', 'len..')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 959, 16), list_97248, str_97249)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 951, 4), dict_97229, (str_97247, list_97248))
# Adding element type (key, value) (line 951)
str_97250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 960, 8), 'str', '_check')
# Getting the type of 'isstring' (line 960)
isstring_97251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 17), 'isstring')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 951, 4), dict_97229, (str_97250, isstring_97251))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97229)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 961)
dict_97252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 961, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 961)
# Adding element type (key, value) (line 961)
str_97253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 962, 8), 'str', 'frompyobj')
str_97254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, (-1)), 'str', '\tslen(#varname#) = #length#;\n\tf2py_success = #ctype#_from_pyobj(&#varname#,&slen(#varname#),#init#,#varname#_capi,"#ctype#_from_pyobj failed in converting #nth# `#varname#\' of #pyname# to C #ctype#");\n\tif (f2py_success) {')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 961, 7), dict_97252, (str_97253, str_97254))
# Adding element type (key, value) (line 961)
str_97255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 966, 8), 'str', 'cleanupfrompyobj')
str_97256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 968, (-1)), 'str', '\t\tSTRINGFREE(#varname#);\n\t}  /*if (f2py_success) of #varname#*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 961, 7), dict_97252, (str_97255, str_97256))
# Adding element type (key, value) (line 961)
str_97257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 969, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'list' (line 969)
list_97258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 969, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 969)
# Adding element type (line 969)
str_97259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 969, 17), 'str', '#ctype#_from_pyobj')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 969, 16), list_97258, str_97259)
# Adding element type (line 969)
str_97260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 969, 39), 'str', 'len..')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 969, 16), list_97258, str_97260)
# Adding element type (line 969)
str_97261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 969, 48), 'str', 'STRINGFREE')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 969, 16), list_97258, str_97261)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 961, 7), dict_97252, (str_97257, list_97258))
# Adding element type (key, value) (line 961)
str_97262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 970, 8), 'str', '_check')
# Getting the type of 'isstring' (line 970)
isstring_97263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 17), 'isstring')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 961, 7), dict_97252, (str_97262, isstring_97263))
# Adding element type (key, value) (line 961)
str_97264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 971, 8), 'str', '_depend')
str_97265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 971, 18), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 961, 7), dict_97252, (str_97264, str_97265))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97252)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 972)
dict_97266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 972, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 972)
# Adding element type (key, value) (line 972)
str_97267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 8), 'str', 'argformat')

# Obtaining an instance of the builtin type 'dict' (line 973)
dict_97268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 973)
# Adding element type (key, value) (line 973)
# Getting the type of 'isrequired' (line 973)
isrequired_97269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 22), 'isrequired')
str_97270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 34), 'str', 'O')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 973, 21), dict_97268, (isrequired_97269, str_97270))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 972, 7), dict_97266, (str_97267, dict_97268))
# Adding element type (key, value) (line 972)
str_97271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 974, 8), 'str', 'keyformat')

# Obtaining an instance of the builtin type 'dict' (line 974)
dict_97272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 974, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 974)
# Adding element type (key, value) (line 974)
# Getting the type of 'isoptional' (line 974)
isoptional_97273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 22), 'isoptional')
str_97274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 974, 34), 'str', 'O')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 974, 21), dict_97272, (isoptional_97273, str_97274))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 972, 7), dict_97266, (str_97271, dict_97272))
# Adding element type (key, value) (line 972)
str_97275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 975, 8), 'str', 'args_capi')

# Obtaining an instance of the builtin type 'dict' (line 975)
dict_97276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 975, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 975)
# Adding element type (key, value) (line 975)
# Getting the type of 'isrequired' (line 975)
isrequired_97277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 975, 22), 'isrequired')
str_97278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 975, 34), 'str', ',&#varname#_capi')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 975, 21), dict_97276, (isrequired_97277, str_97278))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 972, 7), dict_97266, (str_97275, dict_97276))
# Adding element type (key, value) (line 972)
str_97279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 8), 'str', 'keys_capi')

# Obtaining an instance of the builtin type 'dict' (line 976)
dict_97280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 976)
# Adding element type (key, value) (line 976)
# Getting the type of 'isoptional' (line 976)
isoptional_97281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 22), 'isoptional')
str_97282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 34), 'str', ',&#varname#_capi')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 976, 21), dict_97280, (isoptional_97281, str_97282))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 972, 7), dict_97266, (str_97279, dict_97280))
# Adding element type (key, value) (line 972)
str_97283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 977, 8), 'str', 'pyobjfrom')

# Obtaining an instance of the builtin type 'dict' (line 977)
dict_97284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 977, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 977)
# Adding element type (key, value) (line 977)
# Getting the type of 'isintent_inout' (line 977)
isintent_inout_97285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 22), 'isintent_inout')
str_97286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 979, (-1)), 'str', '\tf2py_success = try_pyarr_from_#ctype#(#varname#_capi,#varname#);\n\tif (f2py_success) {')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 977, 21), dict_97284, (isintent_inout_97285, str_97286))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 972, 7), dict_97266, (str_97283, dict_97284))
# Adding element type (key, value) (line 972)
str_97287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 980, 8), 'str', 'closepyobjfrom')

# Obtaining an instance of the builtin type 'dict' (line 980)
dict_97288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 980, 26), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 980)
# Adding element type (key, value) (line 980)
# Getting the type of 'isintent_inout' (line 980)
isintent_inout_97289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 27), 'isintent_inout')
str_97290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 980, 43), 'str', '\t} /*if (f2py_success) of #varname# pyobjfrom*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 980, 26), dict_97288, (isintent_inout_97289, str_97290))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 972, 7), dict_97266, (str_97287, dict_97288))
# Adding element type (key, value) (line 972)
str_97291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 981, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'dict' (line 981)
dict_97292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 981, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 981)
# Adding element type (key, value) (line 981)
# Getting the type of 'isintent_inout' (line 981)
isintent_inout_97293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 17), 'isintent_inout')
str_97294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 981, 33), 'str', 'try_pyarr_from_#ctype#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 981, 16), dict_97292, (isintent_inout_97293, str_97294))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 972, 7), dict_97266, (str_97291, dict_97292))
# Adding element type (key, value) (line 972)
str_97295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 982, 8), 'str', '_check')

# Call to l_and(...): (line 982)
# Processing the call arguments (line 982)
# Getting the type of 'isstring' (line 982)
isstring_97297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 24), 'isstring', False)
# Getting the type of 'isintent_nothide' (line 982)
isintent_nothide_97298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 34), 'isintent_nothide', False)
# Processing the call keyword arguments (line 982)
kwargs_97299 = {}
# Getting the type of 'l_and' (line 982)
l_and_97296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 982)
l_and_call_result_97300 = invoke(stypy.reporting.localization.Localization(__file__, 982, 18), l_and_97296, *[isstring_97297, isintent_nothide_97298], **kwargs_97299)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 972, 7), dict_97266, (str_97295, l_and_call_result_97300))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97266)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 983)
dict_97301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 983, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 983)
# Adding element type (key, value) (line 983)
str_97302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 984, 8), 'str', '_check')

# Call to l_and(...): (line 984)
# Processing the call arguments (line 984)
# Getting the type of 'isstring' (line 984)
isstring_97304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 24), 'isstring', False)
# Getting the type of 'isintent_hide' (line 984)
isintent_hide_97305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 34), 'isintent_hide', False)
# Processing the call keyword arguments (line 984)
kwargs_97306 = {}
# Getting the type of 'l_and' (line 984)
l_and_97303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 984)
l_and_call_result_97307 = invoke(stypy.reporting.localization.Localization(__file__, 984, 18), l_and_97303, *[isstring_97304, isintent_hide_97305], **kwargs_97306)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 983, 7), dict_97301, (str_97302, l_and_call_result_97307))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97301)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 985)
dict_97308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 985, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 985)
# Adding element type (key, value) (line 985)
str_97309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 986, 8), 'str', 'frompyobj')

# Obtaining an instance of the builtin type 'dict' (line 986)
dict_97310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 986, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 986)
# Adding element type (key, value) (line 986)
# Getting the type of 'debugcapi' (line 986)
debugcapi_97311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 22), 'debugcapi')
str_97312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 986, 33), 'str', '\tfprintf(stderr,"#vardebugshowvalue#\\n",slen(#varname#),#varname#);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 986, 21), dict_97310, (debugcapi_97311, str_97312))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 985, 7), dict_97308, (str_97309, dict_97310))
# Adding element type (key, value) (line 985)
str_97313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 987, 8), 'str', '_check')
# Getting the type of 'isstring' (line 987)
isstring_97314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 18), 'isstring')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 985, 7), dict_97308, (str_97313, isstring_97314))
# Adding element type (key, value) (line 985)
str_97315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 988, 8), 'str', '_depend')
str_97316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 988, 19), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 985, 7), dict_97308, (str_97315, str_97316))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97308)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 991)
dict_97317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 991, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 991)
# Adding element type (key, value) (line 991)
str_97318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 992, 8), 'str', 'decl')

# Obtaining an instance of the builtin type 'list' (line 992)
list_97319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 992, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 992)
# Adding element type (line 992)
str_97320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 992, 17), 'str', '\t#ctype# *#varname# = NULL;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 992, 16), list_97319, str_97320)
# Adding element type (line 992)
str_97321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 17), 'str', '\tnpy_intp #varname#_Dims[#rank#] = {#rank*[-1]#};')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 992, 16), list_97319, str_97321)
# Adding element type (line 992)
str_97322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 994, 17), 'str', '\tconst int #varname#_Rank = #rank#;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 992, 16), list_97319, str_97322)
# Adding element type (line 992)
str_97323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 995, 17), 'str', '\tPyArrayObject *capi_#varname#_tmp = NULL;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 992, 16), list_97319, str_97323)
# Adding element type (line 992)
str_97324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 996, 17), 'str', '\tint capi_#varname#_intent = 0;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 992, 16), list_97319, str_97324)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 991, 4), dict_97317, (str_97318, list_97319))
# Adding element type (key, value) (line 991)
str_97325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 998, 8), 'str', 'callfortran')
str_97326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 998, 22), 'str', '#varname#,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 991, 4), dict_97317, (str_97325, str_97326))
# Adding element type (key, value) (line 991)
str_97327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 8), 'str', 'return')

# Obtaining an instance of the builtin type 'dict' (line 999)
dict_97328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 17), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 999)
# Adding element type (key, value) (line 999)
# Getting the type of 'isintent_out' (line 999)
isintent_out_97329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 18), 'isintent_out')
str_97330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 32), 'str', ',capi_#varname#_tmp')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 999, 17), dict_97328, (isintent_out_97329, str_97330))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 991, 4), dict_97317, (str_97327, dict_97328))
# Adding element type (key, value) (line 991)
str_97331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1000, 8), 'str', 'need')
str_97332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1000, 16), 'str', 'len..')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 991, 4), dict_97317, (str_97331, str_97332))
# Adding element type (key, value) (line 991)
str_97333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1001, 8), 'str', '_check')
# Getting the type of 'isarray' (line 1001)
isarray_97334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 18), 'isarray')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 991, 4), dict_97317, (str_97333, isarray_97334))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97317)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 1002)
dict_97335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1002, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1002)
# Adding element type (key, value) (line 1002)
str_97336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1003, 8), 'str', 'decl')
str_97337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1003, 16), 'str', '\tint capi_overwrite_#varname# = 1;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1002, 7), dict_97335, (str_97336, str_97337))
# Adding element type (key, value) (line 1002)
str_97338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1004, 8), 'str', 'kwlistxa')
str_97339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1004, 20), 'str', '"overwrite_#varname#",')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1002, 7), dict_97335, (str_97338, str_97339))
# Adding element type (key, value) (line 1002)
str_97340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 8), 'str', 'xaformat')
str_97341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 20), 'str', 'i')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1002, 7), dict_97335, (str_97340, str_97341))
# Adding element type (key, value) (line 1002)
str_97342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1006, 8), 'str', 'keys_xa')
str_97343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1006, 19), 'str', ',&capi_overwrite_#varname#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1002, 7), dict_97335, (str_97342, str_97343))
# Adding element type (key, value) (line 1002)
str_97344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1007, 8), 'str', 'docsignxa')
str_97345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1007, 21), 'str', 'overwrite_#varname#=1,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1002, 7), dict_97335, (str_97344, str_97345))
# Adding element type (key, value) (line 1002)
str_97346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1008, 8), 'str', 'docsignxashort')
str_97347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1008, 26), 'str', 'overwrite_#varname#,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1002, 7), dict_97335, (str_97346, str_97347))
# Adding element type (key, value) (line 1002)
str_97348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1009, 8), 'str', 'docstropt')
str_97349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1009, 21), 'str', 'overwrite_#varname# : input int, optional\\n    Default: 1')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1002, 7), dict_97335, (str_97348, str_97349))
# Adding element type (key, value) (line 1002)
str_97350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1010, 8), 'str', '_check')

# Call to l_and(...): (line 1010)
# Processing the call arguments (line 1010)
# Getting the type of 'isarray' (line 1010)
isarray_97352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 24), 'isarray', False)
# Getting the type of 'isintent_overwrite' (line 1010)
isintent_overwrite_97353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 33), 'isintent_overwrite', False)
# Processing the call keyword arguments (line 1010)
kwargs_97354 = {}
# Getting the type of 'l_and' (line 1010)
l_and_97351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 1010)
l_and_call_result_97355 = invoke(stypy.reporting.localization.Localization(__file__, 1010, 18), l_and_97351, *[isarray_97352, isintent_overwrite_97353], **kwargs_97354)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1002, 7), dict_97335, (str_97350, l_and_call_result_97355))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97335)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 1011)
dict_97356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1011, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1011)
# Adding element type (key, value) (line 1011)
str_97357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1012, 8), 'str', 'frompyobj')
str_97358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1012, 21), 'str', '\tcapi_#varname#_intent |= (capi_overwrite_#varname#?0:F2PY_INTENT_COPY);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1011, 7), dict_97356, (str_97357, str_97358))
# Adding element type (key, value) (line 1011)
str_97359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 8), 'str', '_check')

# Call to l_and(...): (line 1013)
# Processing the call arguments (line 1013)
# Getting the type of 'isarray' (line 1013)
isarray_97361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 24), 'isarray', False)
# Getting the type of 'isintent_overwrite' (line 1013)
isintent_overwrite_97362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 33), 'isintent_overwrite', False)
# Processing the call keyword arguments (line 1013)
kwargs_97363 = {}
# Getting the type of 'l_and' (line 1013)
l_and_97360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 1013)
l_and_call_result_97364 = invoke(stypy.reporting.localization.Localization(__file__, 1013, 18), l_and_97360, *[isarray_97361, isintent_overwrite_97362], **kwargs_97363)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1011, 7), dict_97356, (str_97359, l_and_call_result_97364))
# Adding element type (key, value) (line 1011)
str_97365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1014, 8), 'str', '_depend')
str_97366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1014, 19), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1011, 7), dict_97356, (str_97365, str_97366))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97356)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 1016)
dict_97367 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1016, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1016)
# Adding element type (key, value) (line 1016)
str_97368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1017, 8), 'str', 'decl')
str_97369 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1017, 16), 'str', '\tint capi_overwrite_#varname# = 0;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1016, 4), dict_97367, (str_97368, str_97369))
# Adding element type (key, value) (line 1016)
str_97370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1018, 8), 'str', 'kwlistxa')
str_97371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1018, 20), 'str', '"overwrite_#varname#",')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1016, 4), dict_97367, (str_97370, str_97371))
# Adding element type (key, value) (line 1016)
str_97372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1019, 8), 'str', 'xaformat')
str_97373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1019, 20), 'str', 'i')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1016, 4), dict_97367, (str_97372, str_97373))
# Adding element type (key, value) (line 1016)
str_97374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1020, 8), 'str', 'keys_xa')
str_97375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1020, 19), 'str', ',&capi_overwrite_#varname#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1016, 4), dict_97367, (str_97374, str_97375))
# Adding element type (key, value) (line 1016)
str_97376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1021, 8), 'str', 'docsignxa')
str_97377 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1021, 21), 'str', 'overwrite_#varname#=0,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1016, 4), dict_97367, (str_97376, str_97377))
# Adding element type (key, value) (line 1016)
str_97378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1022, 8), 'str', 'docsignxashort')
str_97379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1022, 26), 'str', 'overwrite_#varname#,')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1016, 4), dict_97367, (str_97378, str_97379))
# Adding element type (key, value) (line 1016)
str_97380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1023, 8), 'str', 'docstropt')
str_97381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1023, 21), 'str', 'overwrite_#varname# : input int, optional\\n    Default: 0')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1016, 4), dict_97367, (str_97380, str_97381))
# Adding element type (key, value) (line 1016)
str_97382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1024, 8), 'str', '_check')

# Call to l_and(...): (line 1024)
# Processing the call arguments (line 1024)
# Getting the type of 'isarray' (line 1024)
isarray_97384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 24), 'isarray', False)
# Getting the type of 'isintent_copy' (line 1024)
isintent_copy_97385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 33), 'isintent_copy', False)
# Processing the call keyword arguments (line 1024)
kwargs_97386 = {}
# Getting the type of 'l_and' (line 1024)
l_and_97383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 1024)
l_and_call_result_97387 = invoke(stypy.reporting.localization.Localization(__file__, 1024, 18), l_and_97383, *[isarray_97384, isintent_copy_97385], **kwargs_97386)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1016, 4), dict_97367, (str_97382, l_and_call_result_97387))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97367)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 1025)
dict_97388 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1025, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1025)
# Adding element type (key, value) (line 1025)
str_97389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1026, 8), 'str', 'frompyobj')
str_97390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1026, 21), 'str', '\tcapi_#varname#_intent |= (capi_overwrite_#varname#?0:F2PY_INTENT_COPY);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1025, 7), dict_97388, (str_97389, str_97390))
# Adding element type (key, value) (line 1025)
str_97391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1027, 8), 'str', '_check')

# Call to l_and(...): (line 1027)
# Processing the call arguments (line 1027)
# Getting the type of 'isarray' (line 1027)
isarray_97393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 24), 'isarray', False)
# Getting the type of 'isintent_copy' (line 1027)
isintent_copy_97394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 33), 'isintent_copy', False)
# Processing the call keyword arguments (line 1027)
kwargs_97395 = {}
# Getting the type of 'l_and' (line 1027)
l_and_97392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 1027)
l_and_call_result_97396 = invoke(stypy.reporting.localization.Localization(__file__, 1027, 18), l_and_97392, *[isarray_97393, isintent_copy_97394], **kwargs_97395)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1025, 7), dict_97388, (str_97391, l_and_call_result_97396))
# Adding element type (key, value) (line 1025)
str_97397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1028, 8), 'str', '_depend')
str_97398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1028, 19), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1025, 7), dict_97388, (str_97397, str_97398))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97388)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 1029)
dict_97399 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1029)
# Adding element type (key, value) (line 1029)
str_97400 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1030, 8), 'str', 'need')

# Obtaining an instance of the builtin type 'list' (line 1030)
list_97401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1030, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 1030)
# Adding element type (line 1030)

# Obtaining an instance of the builtin type 'dict' (line 1030)
dict_97402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1030, 17), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1030)
# Adding element type (key, value) (line 1030)
# Getting the type of 'hasinitvalue' (line 1030)
hasinitvalue_97403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1030, 18), 'hasinitvalue')
str_97404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1030, 32), 'str', 'forcomb')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1030, 17), dict_97402, (hasinitvalue_97403, str_97404))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1030, 16), list_97401, dict_97402)
# Adding element type (line 1030)

# Obtaining an instance of the builtin type 'dict' (line 1030)
dict_97405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1030, 44), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1030)
# Adding element type (key, value) (line 1030)
# Getting the type of 'hasinitvalue' (line 1030)
hasinitvalue_97406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1030, 45), 'hasinitvalue')
str_97407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1030, 59), 'str', 'CFUNCSMESS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1030, 44), dict_97405, (hasinitvalue_97406, str_97407))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1030, 16), list_97401, dict_97405)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1029, 7), dict_97399, (str_97400, list_97401))
# Adding element type (key, value) (line 1029)
str_97408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1031, 8), 'str', '_check')
# Getting the type of 'isarray' (line 1031)
isarray_97409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1031, 18), 'isarray')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1029, 7), dict_97399, (str_97408, isarray_97409))
# Adding element type (key, value) (line 1029)
str_97410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1032, 8), 'str', '_depend')
str_97411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1032, 19), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1029, 7), dict_97399, (str_97410, str_97411))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97399)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 1033)
dict_97412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1033, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1033)
# Adding element type (key, value) (line 1033)
str_97413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1034, 8), 'str', 'decl')
str_97414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1034, 16), 'str', '\tPyObject *#varname#_capi = Py_None;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1033, 7), dict_97412, (str_97413, str_97414))
# Adding element type (key, value) (line 1033)
str_97415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 8), 'str', 'argformat')

# Obtaining an instance of the builtin type 'dict' (line 1035)
dict_97416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1035)
# Adding element type (key, value) (line 1035)
# Getting the type of 'isrequired' (line 1035)
isrequired_97417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 22), 'isrequired')
str_97418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 34), 'str', 'O')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1035, 21), dict_97416, (isrequired_97417, str_97418))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1033, 7), dict_97412, (str_97415, dict_97416))
# Adding element type (key, value) (line 1033)
str_97419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1036, 8), 'str', 'keyformat')

# Obtaining an instance of the builtin type 'dict' (line 1036)
dict_97420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1036, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1036)
# Adding element type (key, value) (line 1036)
# Getting the type of 'isoptional' (line 1036)
isoptional_97421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 22), 'isoptional')
str_97422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1036, 34), 'str', 'O')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1036, 21), dict_97420, (isoptional_97421, str_97422))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1033, 7), dict_97412, (str_97419, dict_97420))
# Adding element type (key, value) (line 1033)
str_97423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1037, 8), 'str', 'args_capi')

# Obtaining an instance of the builtin type 'dict' (line 1037)
dict_97424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1037, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1037)
# Adding element type (key, value) (line 1037)
# Getting the type of 'isrequired' (line 1037)
isrequired_97425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 22), 'isrequired')
str_97426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1037, 34), 'str', ',&#varname#_capi')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1037, 21), dict_97424, (isrequired_97425, str_97426))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1033, 7), dict_97412, (str_97423, dict_97424))
# Adding element type (key, value) (line 1033)
str_97427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 8), 'str', 'keys_capi')

# Obtaining an instance of the builtin type 'dict' (line 1038)
dict_97428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1038)
# Adding element type (key, value) (line 1038)
# Getting the type of 'isoptional' (line 1038)
isoptional_97429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 22), 'isoptional')
str_97430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 34), 'str', ',&#varname#_capi')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1038, 21), dict_97428, (isoptional_97429, str_97430))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1033, 7), dict_97412, (str_97427, dict_97428))
# Adding element type (key, value) (line 1033)
str_97431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1039, 8), 'str', '_check')

# Call to l_and(...): (line 1039)
# Processing the call arguments (line 1039)
# Getting the type of 'isarray' (line 1039)
isarray_97433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1039, 24), 'isarray', False)
# Getting the type of 'isintent_nothide' (line 1039)
isintent_nothide_97434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1039, 33), 'isintent_nothide', False)
# Processing the call keyword arguments (line 1039)
kwargs_97435 = {}
# Getting the type of 'l_and' (line 1039)
l_and_97432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1039, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 1039)
l_and_call_result_97436 = invoke(stypy.reporting.localization.Localization(__file__, 1039, 18), l_and_97432, *[isarray_97433, isintent_nothide_97434], **kwargs_97435)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1033, 7), dict_97412, (str_97431, l_and_call_result_97436))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97412)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 1040)
dict_97437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1040)
# Adding element type (key, value) (line 1040)
str_97438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1041, 8), 'str', 'frompyobj')

# Obtaining an instance of the builtin type 'list' (line 1041)
list_97439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1041, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 1041)
# Adding element type (line 1041)
str_97440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1041, 22), 'str', '\t#setdims#;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1041, 21), list_97439, str_97440)
# Adding element type (line 1041)
str_97441 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1042, 22), 'str', '\tcapi_#varname#_intent |= #intent#;')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1041, 21), list_97439, str_97441)
# Adding element type (line 1041)

# Obtaining an instance of the builtin type 'dict' (line 1043)
dict_97442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1043, 22), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1043)
# Adding element type (key, value) (line 1043)
# Getting the type of 'isintent_hide' (line 1043)
isintent_hide_97443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 23), 'isintent_hide')
str_97444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 23), 'str', '\tcapi_#varname#_tmp = array_from_pyobj(#atype#,#varname#_Dims,#varname#_Rank,capi_#varname#_intent,Py_None);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1043, 22), dict_97442, (isintent_hide_97443, str_97444))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1041, 21), list_97439, dict_97442)
# Adding element type (line 1041)

# Obtaining an instance of the builtin type 'dict' (line 1045)
dict_97445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1045, 22), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1045)
# Adding element type (key, value) (line 1045)
# Getting the type of 'isintent_nothide' (line 1045)
isintent_nothide_97446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1045, 23), 'isintent_nothide')
str_97447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1046, 23), 'str', '\tcapi_#varname#_tmp = array_from_pyobj(#atype#,#varname#_Dims,#varname#_Rank,capi_#varname#_intent,#varname#_capi);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1045, 22), dict_97445, (isintent_nothide_97446, str_97447))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1041, 21), list_97439, dict_97445)
# Adding element type (line 1041)
str_97448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1053, (-1)), 'str', '\tif (capi_#varname#_tmp == NULL) {\n\t\tif (!PyErr_Occurred())\n\t\t\tPyErr_SetString(#modulename#_error,"failed in converting #nth# `#varname#\' of #pyname# to C/Fortran array" );\n\t} else {\n\t\t#varname# = (#ctype# *)(PyArray_DATA(capi_#varname#_tmp));\n')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1041, 21), list_97439, str_97448)
# Adding element type (line 1041)

# Obtaining an instance of the builtin type 'dict' (line 1054)
dict_97449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1054, 22), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1054)
# Adding element type (key, value) (line 1054)
# Getting the type of 'hasinitvalue' (line 1054)
hasinitvalue_97450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 23), 'hasinitvalue')

# Obtaining an instance of the builtin type 'list' (line 1054)
list_97451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1054, 37), 'list')
# Adding type elements to the builtin type 'list' instance (line 1054)
# Adding element type (line 1054)

# Obtaining an instance of the builtin type 'dict' (line 1055)
dict_97452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1055, 26), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1055)
# Adding element type (key, value) (line 1055)
# Getting the type of 'isintent_nothide' (line 1055)
isintent_nothide_97453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1055, 27), 'isintent_nothide')
str_97454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1056, 30), 'str', '\tif (#varname#_capi == Py_None) {')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1055, 26), dict_97452, (isintent_nothide_97453, str_97454))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1054, 37), list_97451, dict_97452)
# Adding element type (line 1054)

# Obtaining an instance of the builtin type 'dict' (line 1057)
dict_97455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1057, 26), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1057)
# Adding element type (key, value) (line 1057)
# Getting the type of 'isintent_hide' (line 1057)
isintent_hide_97456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 27), 'isintent_hide')
str_97457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1057, 42), 'str', '\t{')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1057, 26), dict_97455, (isintent_hide_97456, str_97457))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1054, 37), list_97451, dict_97455)
# Adding element type (line 1054)

# Obtaining an instance of the builtin type 'dict' (line 1058)
dict_97458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1058, 26), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1058)
# Adding element type (key, value) (line 1058)
# Getting the type of 'iscomplexarray' (line 1058)
iscomplexarray_97459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1058, 27), 'iscomplexarray')
str_97460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1058, 43), 'str', '\t\t#ctype# capi_c;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1058, 26), dict_97458, (iscomplexarray_97459, str_97460))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1054, 37), list_97451, dict_97458)
# Adding element type (line 1054)
str_97461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1071, (-1)), 'str', '\t\tint *_i,capi_i=0;\n\t\tCFUNCSMESS("#name#: Initializing #varname#=#init#\\n");\n\t\tif (initforcomb(PyArray_DIMS(capi_#varname#_tmp),PyArray_NDIM(capi_#varname#_tmp),1)) {\n\t\t\twhile ((_i = nextforcomb()))\n\t\t\t\t#varname#[capi_i++] = #init#; /* fortran way */\n\t\t} else {\n\t\t\tif (!PyErr_Occurred())\n\t\t\t\tPyErr_SetString(#modulename#_error,"Initialization of #nth# #varname# failed (initforcomb).");\n\t\t\tf2py_success = 0;\n\t\t}\n\t}\n\tif (f2py_success) {')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1054, 37), list_97451, str_97461)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1054, 22), dict_97449, (hasinitvalue_97450, list_97451))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1041, 21), list_97439, dict_97449)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1040, 7), dict_97437, (str_97438, list_97439))
# Adding element type (key, value) (line 1040)
str_97462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1073, 8), 'str', 'cleanupfrompyobj')

# Obtaining an instance of the builtin type 'list' (line 1073)
list_97463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1073, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 1073)
# Adding element type (line 1073)
str_97464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1074, 12), 'str', '\t}  /*if (capi_#varname#_tmp == NULL) ... else of #varname#*/')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1073, 28), list_97463, str_97464)
# Adding element type (line 1073)

# Obtaining an instance of the builtin type 'dict' (line 1075)
dict_97465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1075, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1075)
# Adding element type (key, value) (line 1075)

# Call to l_not(...): (line 1075)
# Processing the call arguments (line 1075)

# Call to l_or(...): (line 1075)
# Processing the call arguments (line 1075)
# Getting the type of 'isintent_out' (line 1075)
isintent_out_97468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 24), 'isintent_out', False)
# Getting the type of 'isintent_hide' (line 1075)
isintent_hide_97469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 38), 'isintent_hide', False)
# Processing the call keyword arguments (line 1075)
kwargs_97470 = {}
# Getting the type of 'l_or' (line 1075)
l_or_97467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 19), 'l_or', False)
# Calling l_or(args, kwargs) (line 1075)
l_or_call_result_97471 = invoke(stypy.reporting.localization.Localization(__file__, 1075, 19), l_or_97467, *[isintent_out_97468, isintent_hide_97469], **kwargs_97470)

# Processing the call keyword arguments (line 1075)
kwargs_97472 = {}
# Getting the type of 'l_not' (line 1075)
l_not_97466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 13), 'l_not', False)
# Calling l_not(args, kwargs) (line 1075)
l_not_call_result_97473 = invoke(stypy.reporting.localization.Localization(__file__, 1075, 13), l_not_97466, *[l_or_call_result_97471], **kwargs_97472)

str_97474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1077, (-1)), 'str', '\tif((PyObject *)capi_#varname#_tmp!=#varname#_capi) {\n\t\tPy_XDECREF(capi_#varname#_tmp); }')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1075, 12), dict_97465, (l_not_call_result_97473, str_97474))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1073, 28), list_97463, dict_97465)
# Adding element type (line 1073)

# Obtaining an instance of the builtin type 'dict' (line 1078)
dict_97475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1078, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1078)
# Adding element type (key, value) (line 1078)

# Call to l_and(...): (line 1078)
# Processing the call arguments (line 1078)
# Getting the type of 'isintent_hide' (line 1078)
isintent_hide_97477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 19), 'isintent_hide', False)

# Call to l_not(...): (line 1078)
# Processing the call arguments (line 1078)
# Getting the type of 'isintent_out' (line 1078)
isintent_out_97479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 40), 'isintent_out', False)
# Processing the call keyword arguments (line 1078)
kwargs_97480 = {}
# Getting the type of 'l_not' (line 1078)
l_not_97478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 34), 'l_not', False)
# Calling l_not(args, kwargs) (line 1078)
l_not_call_result_97481 = invoke(stypy.reporting.localization.Localization(__file__, 1078, 34), l_not_97478, *[isintent_out_97479], **kwargs_97480)

# Processing the call keyword arguments (line 1078)
kwargs_97482 = {}
# Getting the type of 'l_and' (line 1078)
l_and_97476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 13), 'l_and', False)
# Calling l_and(args, kwargs) (line 1078)
l_and_call_result_97483 = invoke(stypy.reporting.localization.Localization(__file__, 1078, 13), l_and_97476, *[isintent_hide_97477, l_not_call_result_97481], **kwargs_97482)

str_97484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1079, 21), 'str', '\t\tPy_XDECREF(capi_#varname#_tmp);')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1078, 12), dict_97475, (l_and_call_result_97483, str_97484))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1073, 28), list_97463, dict_97475)
# Adding element type (line 1073)

# Obtaining an instance of the builtin type 'dict' (line 1080)
dict_97485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1080, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1080)
# Adding element type (key, value) (line 1080)
# Getting the type of 'hasinitvalue' (line 1080)
hasinitvalue_97486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1080, 13), 'hasinitvalue')
str_97487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1080, 27), 'str', '\t}  /*if (f2py_success) of #varname# init*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1080, 12), dict_97485, (hasinitvalue_97486, str_97487))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1073, 28), list_97463, dict_97485)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1040, 7), dict_97437, (str_97462, list_97463))
# Adding element type (key, value) (line 1040)
str_97488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1082, 8), 'str', '_check')
# Getting the type of 'isarray' (line 1082)
isarray_97489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1082, 18), 'isarray')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1040, 7), dict_97437, (str_97488, isarray_97489))
# Adding element type (key, value) (line 1040)
str_97490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1083, 8), 'str', '_depend')
str_97491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1083, 19), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1040, 7), dict_97437, (str_97490, str_97491))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97437)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 1086)
dict_97492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1086, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1086)
# Adding element type (key, value) (line 1086)
str_97493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1087, 8), 'str', '_check')

# Call to l_and(...): (line 1087)
# Processing the call arguments (line 1087)
# Getting the type of 'isarray' (line 1087)
isarray_97495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1087, 24), 'isarray', False)

# Call to l_not(...): (line 1087)
# Processing the call arguments (line 1087)
# Getting the type of 'iscomplexarray' (line 1087)
iscomplexarray_97497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1087, 39), 'iscomplexarray', False)
# Processing the call keyword arguments (line 1087)
kwargs_97498 = {}
# Getting the type of 'l_not' (line 1087)
l_not_97496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1087, 33), 'l_not', False)
# Calling l_not(args, kwargs) (line 1087)
l_not_call_result_97499 = invoke(stypy.reporting.localization.Localization(__file__, 1087, 33), l_not_97496, *[iscomplexarray_97497], **kwargs_97498)

# Processing the call keyword arguments (line 1087)
kwargs_97500 = {}
# Getting the type of 'l_and' (line 1087)
l_and_97494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1087, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 1087)
l_and_call_result_97501 = invoke(stypy.reporting.localization.Localization(__file__, 1087, 18), l_and_97494, *[isarray_97495, l_not_call_result_97499], **kwargs_97500)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1086, 4), dict_97492, (str_97493, l_and_call_result_97501))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97492)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 1088)
dict_97502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1088, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1088)
# Adding element type (key, value) (line 1088)
str_97503 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1089, 8), 'str', '_check')

# Call to l_and(...): (line 1089)
# Processing the call arguments (line 1089)
# Getting the type of 'isarray' (line 1089)
isarray_97505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 24), 'isarray', False)

# Call to l_not(...): (line 1089)
# Processing the call arguments (line 1089)
# Getting the type of 'iscomplexarray' (line 1089)
iscomplexarray_97507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 39), 'iscomplexarray', False)
# Processing the call keyword arguments (line 1089)
kwargs_97508 = {}
# Getting the type of 'l_not' (line 1089)
l_not_97506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 33), 'l_not', False)
# Calling l_not(args, kwargs) (line 1089)
l_not_call_result_97509 = invoke(stypy.reporting.localization.Localization(__file__, 1089, 33), l_not_97506, *[iscomplexarray_97507], **kwargs_97508)

# Getting the type of 'isintent_nothide' (line 1089)
isintent_nothide_97510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 56), 'isintent_nothide', False)
# Processing the call keyword arguments (line 1089)
kwargs_97511 = {}
# Getting the type of 'l_and' (line 1089)
l_and_97504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 1089)
l_and_call_result_97512 = invoke(stypy.reporting.localization.Localization(__file__, 1089, 18), l_and_97504, *[isarray_97505, l_not_call_result_97509, isintent_nothide_97510], **kwargs_97511)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1088, 7), dict_97502, (str_97503, l_and_call_result_97512))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97502)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 1092)
dict_97513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1092, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1092)
# Adding element type (key, value) (line 1092)
str_97514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1092, 5), 'str', 'need')
str_97515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1092, 13), 'str', '#ctype#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1092, 4), dict_97513, (str_97514, str_97515))
# Adding element type (key, value) (line 1092)
str_97516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1093, 5), 'str', '_check')
# Getting the type of 'isint1array' (line 1093)
isint1array_97517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1093, 15), 'isint1array')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1092, 4), dict_97513, (str_97516, isint1array_97517))
# Adding element type (key, value) (line 1092)
str_97518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1094, 5), 'str', '_depend')
str_97519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1094, 16), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1092, 4), dict_97513, (str_97518, str_97519))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97513)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 1097)
dict_97520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1097, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1097)
# Adding element type (key, value) (line 1097)
str_97521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1097, 5), 'str', 'need')
str_97522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1097, 13), 'str', '#ctype#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1097, 4), dict_97520, (str_97521, str_97522))
# Adding element type (key, value) (line 1097)
str_97523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1098, 5), 'str', '_check')
# Getting the type of 'isunsigned_chararray' (line 1098)
isunsigned_chararray_97524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1098, 15), 'isunsigned_chararray')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1097, 4), dict_97520, (str_97523, isunsigned_chararray_97524))
# Adding element type (key, value) (line 1097)
str_97525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1099, 5), 'str', '_depend')
str_97526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1099, 16), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1097, 4), dict_97520, (str_97525, str_97526))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97520)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 1102)
dict_97527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1102, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1102)
# Adding element type (key, value) (line 1102)
str_97528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1102, 5), 'str', 'need')
str_97529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1102, 13), 'str', '#ctype#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1102, 4), dict_97527, (str_97528, str_97529))
# Adding element type (key, value) (line 1102)
str_97530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1103, 5), 'str', '_check')
# Getting the type of 'isunsigned_shortarray' (line 1103)
isunsigned_shortarray_97531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 15), 'isunsigned_shortarray')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1102, 4), dict_97527, (str_97530, isunsigned_shortarray_97531))
# Adding element type (key, value) (line 1102)
str_97532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1104, 5), 'str', '_depend')
str_97533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1104, 16), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1102, 4), dict_97527, (str_97532, str_97533))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97527)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 1107)
dict_97534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1107, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1107)
# Adding element type (key, value) (line 1107)
str_97535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1107, 5), 'str', 'need')
str_97536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1107, 13), 'str', '#ctype#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1107, 4), dict_97534, (str_97535, str_97536))
# Adding element type (key, value) (line 1107)
str_97537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1108, 5), 'str', '_check')
# Getting the type of 'isunsigned_long_longarray' (line 1108)
isunsigned_long_longarray_97538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1108, 15), 'isunsigned_long_longarray')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1107, 4), dict_97534, (str_97537, isunsigned_long_longarray_97538))
# Adding element type (key, value) (line 1107)
str_97539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1109, 5), 'str', '_depend')
str_97540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1109, 16), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1107, 4), dict_97534, (str_97539, str_97540))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97534)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 1112)
dict_97541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1112, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1112)
# Adding element type (key, value) (line 1112)
str_97542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1112, 5), 'str', 'need')
str_97543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1112, 13), 'str', '#ctype#')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1112, 4), dict_97541, (str_97542, str_97543))
# Adding element type (key, value) (line 1112)
str_97544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1113, 5), 'str', '_check')
# Getting the type of 'iscomplexarray' (line 1113)
iscomplexarray_97545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1113, 15), 'iscomplexarray')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1112, 4), dict_97541, (str_97544, iscomplexarray_97545))
# Adding element type (key, value) (line 1112)
str_97546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1114, 5), 'str', '_depend')
str_97547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1114, 16), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1112, 4), dict_97541, (str_97546, str_97547))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97541)
# Adding element type (line 712)

# Obtaining an instance of the builtin type 'dict' (line 1117)
dict_97548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1117, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1117)
# Adding element type (key, value) (line 1117)
str_97549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1118, 8), 'str', 'callfortranappend')

# Obtaining an instance of the builtin type 'dict' (line 1118)
dict_97550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1118, 29), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1118)
# Adding element type (key, value) (line 1118)
# Getting the type of 'isarrayofstrings' (line 1118)
isarrayofstrings_97551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 30), 'isarrayofstrings')
str_97552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1118, 48), 'str', 'flen(#varname#),')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1118, 29), dict_97550, (isarrayofstrings_97551, str_97552))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1117, 4), dict_97548, (str_97549, dict_97550))
# Adding element type (key, value) (line 1117)
str_97553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1119, 8), 'str', 'need')
str_97554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1119, 16), 'str', 'string')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1117, 4), dict_97548, (str_97553, str_97554))
# Adding element type (key, value) (line 1117)
str_97555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1120, 8), 'str', '_check')
# Getting the type of 'isstringarray' (line 1120)
isstringarray_97556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1120, 18), 'isstringarray')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1117, 4), dict_97548, (str_97555, isstringarray_97556))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 12), list_96704, dict_97548)

# Assigning a type to the variable 'arg_rules' (line 712)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 712, 0), 'arg_rules', list_96704)

# Assigning a List to a Name (line 1126):

# Assigning a List to a Name (line 1126):

# Obtaining an instance of the builtin type 'list' (line 1126)
list_97557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1126, 14), 'list')
# Adding type elements to the builtin type 'list' instance (line 1126)
# Adding element type (line 1126)

# Obtaining an instance of the builtin type 'dict' (line 1127)
dict_97558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1127, 4), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1127)
# Adding element type (key, value) (line 1127)
str_97559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1128, 8), 'str', 'frompyobj')

# Obtaining an instance of the builtin type 'dict' (line 1128)
dict_97560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1128, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1128)
# Adding element type (key, value) (line 1128)
# Getting the type of 'debugcapi' (line 1128)
debugcapi_97561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1128, 22), 'debugcapi')
str_97562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1128, 33), 'str', '\tfprintf(stderr,"debug-capi:Checking `#check#\'\\n");')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1128, 21), dict_97560, (debugcapi_97561, str_97562))

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1127, 4), dict_97558, (str_97559, dict_97560))
# Adding element type (key, value) (line 1127)
str_97563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1129, 8), 'str', 'need')
str_97564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1129, 16), 'str', 'len..')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1127, 4), dict_97558, (str_97563, str_97564))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1126, 14), list_97557, dict_97558)
# Adding element type (line 1126)

# Obtaining an instance of the builtin type 'dict' (line 1130)
dict_97565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1130, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1130)
# Adding element type (key, value) (line 1130)
str_97566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1131, 8), 'str', 'frompyobj')
str_97567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1131, 21), 'str', '\tCHECKSCALAR(#check#,"#check#","#nth# #varname#","#varshowvalue#",#varname#) {')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1130, 7), dict_97565, (str_97566, str_97567))
# Adding element type (key, value) (line 1130)
str_97568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1132, 8), 'str', 'cleanupfrompyobj')
str_97569 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1132, 28), 'str', '\t} /*CHECKSCALAR(#check#)*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1130, 7), dict_97565, (str_97568, str_97569))
# Adding element type (key, value) (line 1130)
str_97570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1133, 8), 'str', 'need')
str_97571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1133, 16), 'str', 'CHECKSCALAR')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1130, 7), dict_97565, (str_97570, str_97571))
# Adding element type (key, value) (line 1130)
str_97572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1134, 8), 'str', '_check')

# Call to l_and(...): (line 1134)
# Processing the call arguments (line 1134)
# Getting the type of 'isscalar' (line 1134)
isscalar_97574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1134, 24), 'isscalar', False)

# Call to l_not(...): (line 1134)
# Processing the call arguments (line 1134)
# Getting the type of 'iscomplex' (line 1134)
iscomplex_97576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1134, 40), 'iscomplex', False)
# Processing the call keyword arguments (line 1134)
kwargs_97577 = {}
# Getting the type of 'l_not' (line 1134)
l_not_97575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1134, 34), 'l_not', False)
# Calling l_not(args, kwargs) (line 1134)
l_not_call_result_97578 = invoke(stypy.reporting.localization.Localization(__file__, 1134, 34), l_not_97575, *[iscomplex_97576], **kwargs_97577)

# Processing the call keyword arguments (line 1134)
kwargs_97579 = {}
# Getting the type of 'l_and' (line 1134)
l_and_97573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1134, 18), 'l_and', False)
# Calling l_and(args, kwargs) (line 1134)
l_and_call_result_97580 = invoke(stypy.reporting.localization.Localization(__file__, 1134, 18), l_and_97573, *[isscalar_97574, l_not_call_result_97578], **kwargs_97579)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1130, 7), dict_97565, (str_97572, l_and_call_result_97580))
# Adding element type (key, value) (line 1130)
str_97581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1135, 8), 'str', '_break')
str_97582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1135, 18), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1130, 7), dict_97565, (str_97581, str_97582))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1126, 14), list_97557, dict_97565)
# Adding element type (line 1126)

# Obtaining an instance of the builtin type 'dict' (line 1136)
dict_97583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1136, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1136)
# Adding element type (key, value) (line 1136)
str_97584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1137, 8), 'str', 'frompyobj')
str_97585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1137, 21), 'str', '\tCHECKSTRING(#check#,"#check#","#nth# #varname#","#varshowvalue#",#varname#) {')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1136, 7), dict_97583, (str_97584, str_97585))
# Adding element type (key, value) (line 1136)
str_97586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1138, 8), 'str', 'cleanupfrompyobj')
str_97587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1138, 28), 'str', '\t} /*CHECKSTRING(#check#)*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1136, 7), dict_97583, (str_97586, str_97587))
# Adding element type (key, value) (line 1136)
str_97588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1139, 8), 'str', 'need')
str_97589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1139, 16), 'str', 'CHECKSTRING')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1136, 7), dict_97583, (str_97588, str_97589))
# Adding element type (key, value) (line 1136)
str_97590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1140, 8), 'str', '_check')
# Getting the type of 'isstring' (line 1140)
isstring_97591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1140, 18), 'isstring')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1136, 7), dict_97583, (str_97590, isstring_97591))
# Adding element type (key, value) (line 1136)
str_97592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1141, 8), 'str', '_break')
str_97593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1141, 18), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1136, 7), dict_97583, (str_97592, str_97593))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1126, 14), list_97557, dict_97583)
# Adding element type (line 1126)

# Obtaining an instance of the builtin type 'dict' (line 1142)
dict_97594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1142, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1142)
# Adding element type (key, value) (line 1142)
str_97595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1143, 8), 'str', 'need')
str_97596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1143, 16), 'str', 'CHECKARRAY')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1142, 7), dict_97594, (str_97595, str_97596))
# Adding element type (key, value) (line 1142)
str_97597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1144, 8), 'str', 'frompyobj')
str_97598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1144, 21), 'str', '\tCHECKARRAY(#check#,"#check#","#nth# #varname#") {')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1142, 7), dict_97594, (str_97597, str_97598))
# Adding element type (key, value) (line 1142)
str_97599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1145, 8), 'str', 'cleanupfrompyobj')
str_97600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1145, 28), 'str', '\t} /*CHECKARRAY(#check#)*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1142, 7), dict_97594, (str_97599, str_97600))
# Adding element type (key, value) (line 1142)
str_97601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1146, 8), 'str', '_check')
# Getting the type of 'isarray' (line 1146)
isarray_97602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1146, 18), 'isarray')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1142, 7), dict_97594, (str_97601, isarray_97602))
# Adding element type (key, value) (line 1142)
str_97603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1147, 8), 'str', '_break')
str_97604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1147, 18), 'str', '')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1142, 7), dict_97594, (str_97603, str_97604))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1126, 14), list_97557, dict_97594)
# Adding element type (line 1126)

# Obtaining an instance of the builtin type 'dict' (line 1148)
dict_97605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1148, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1148)
# Adding element type (key, value) (line 1148)
str_97606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 8), 'str', 'need')
str_97607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 16), 'str', 'CHECKGENERIC')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1148, 7), dict_97605, (str_97606, str_97607))
# Adding element type (key, value) (line 1148)
str_97608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1150, 8), 'str', 'frompyobj')
str_97609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1150, 21), 'str', '\tCHECKGENERIC(#check#,"#check#","#nth# #varname#") {')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1148, 7), dict_97605, (str_97608, str_97609))
# Adding element type (key, value) (line 1148)
str_97610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1151, 8), 'str', 'cleanupfrompyobj')
str_97611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1151, 28), 'str', '\t} /*CHECKGENERIC(#check#)*/')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1148, 7), dict_97605, (str_97610, str_97611))

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1126, 14), list_97557, dict_97605)

# Assigning a type to the variable 'check_rules' (line 1126)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1126, 0), 'check_rules', list_97557)

@norecursion
def buildmodule(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'buildmodule'
    module_type_store = module_type_store.open_function_context('buildmodule', 1160, 0, False)
    
    # Passed parameters checking function
    buildmodule.stypy_localization = localization
    buildmodule.stypy_type_of_self = None
    buildmodule.stypy_type_store = module_type_store
    buildmodule.stypy_function_name = 'buildmodule'
    buildmodule.stypy_param_names_list = ['m', 'um']
    buildmodule.stypy_varargs_param_name = None
    buildmodule.stypy_kwargs_param_name = None
    buildmodule.stypy_call_defaults = defaults
    buildmodule.stypy_call_varargs = varargs
    buildmodule.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'buildmodule', ['m', 'um'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'buildmodule', localization, ['m', 'um'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'buildmodule(...)' code ##################

    str_97612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1163, (-1)), 'str', '\n    Return\n    ')
    # Marking variables as global (line 1164)
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 1164, 4), 'f2py_version')
    module_type_store.declare_global(stypy.reporting.localization.Localization(__file__, 1164, 4), 'options')
    
    # Call to outmess(...): (line 1165)
    # Processing the call arguments (line 1165)
    str_97614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1165, 12), 'str', '\tBuilding module "%s"...\n')
    
    # Obtaining the type of the subscript
    str_97615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1165, 47), 'str', 'name')
    # Getting the type of 'm' (line 1165)
    m_97616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1165, 45), 'm', False)
    # Obtaining the member '__getitem__' of a type (line 1165)
    getitem___97617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1165, 45), m_97616, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1165)
    subscript_call_result_97618 = invoke(stypy.reporting.localization.Localization(__file__, 1165, 45), getitem___97617, str_97615)
    
    # Applying the binary operator '%' (line 1165)
    result_mod_97619 = python_operator(stypy.reporting.localization.Localization(__file__, 1165, 12), '%', str_97614, subscript_call_result_97618)
    
    # Processing the call keyword arguments (line 1165)
    kwargs_97620 = {}
    # Getting the type of 'outmess' (line 1165)
    outmess_97613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1165, 4), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1165)
    outmess_call_result_97621 = invoke(stypy.reporting.localization.Localization(__file__, 1165, 4), outmess_97613, *[result_mod_97619], **kwargs_97620)
    
    
    # Assigning a Dict to a Name (line 1166):
    
    # Assigning a Dict to a Name (line 1166):
    
    # Obtaining an instance of the builtin type 'dict' (line 1166)
    dict_97622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1166, 10), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1166)
    
    # Assigning a type to the variable 'ret' (line 1166)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1166, 4), 'ret', dict_97622)
    
    # Assigning a Subscript to a Name (line 1167):
    
    # Assigning a Subscript to a Name (line 1167):
    
    # Obtaining the type of the subscript
    slice_97623 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1167, 16), None, None, None)
    # Getting the type of 'defmod_rules' (line 1167)
    defmod_rules_97624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 16), 'defmod_rules')
    # Obtaining the member '__getitem__' of a type (line 1167)
    getitem___97625 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1167, 16), defmod_rules_97624, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1167)
    subscript_call_result_97626 = invoke(stypy.reporting.localization.Localization(__file__, 1167, 16), getitem___97625, slice_97623)
    
    # Assigning a type to the variable 'mod_rules' (line 1167)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1167, 4), 'mod_rules', subscript_call_result_97626)
    
    # Assigning a Call to a Name (line 1168):
    
    # Assigning a Call to a Name (line 1168):
    
    # Call to modsign2map(...): (line 1168)
    # Processing the call arguments (line 1168)
    # Getting the type of 'm' (line 1168)
    m_97629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1168, 32), 'm', False)
    # Processing the call keyword arguments (line 1168)
    kwargs_97630 = {}
    # Getting the type of 'capi_maps' (line 1168)
    capi_maps_97627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1168, 10), 'capi_maps', False)
    # Obtaining the member 'modsign2map' of a type (line 1168)
    modsign2map_97628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1168, 10), capi_maps_97627, 'modsign2map')
    # Calling modsign2map(args, kwargs) (line 1168)
    modsign2map_call_result_97631 = invoke(stypy.reporting.localization.Localization(__file__, 1168, 10), modsign2map_97628, *[m_97629], **kwargs_97630)
    
    # Assigning a type to the variable 'vrd' (line 1168)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1168, 4), 'vrd', modsign2map_call_result_97631)
    
    # Assigning a Call to a Name (line 1169):
    
    # Assigning a Call to a Name (line 1169):
    
    # Call to dictappend(...): (line 1169)
    # Processing the call arguments (line 1169)
    
    # Obtaining an instance of the builtin type 'dict' (line 1169)
    dict_97633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1169, 20), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1169)
    # Adding element type (key, value) (line 1169)
    str_97634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1169, 21), 'str', 'f2py_version')
    # Getting the type of 'f2py_version' (line 1169)
    f2py_version_97635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1169, 37), 'f2py_version', False)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1169, 20), dict_97633, (str_97634, f2py_version_97635))
    
    # Getting the type of 'vrd' (line 1169)
    vrd_97636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1169, 52), 'vrd', False)
    # Processing the call keyword arguments (line 1169)
    kwargs_97637 = {}
    # Getting the type of 'dictappend' (line 1169)
    dictappend_97632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1169, 9), 'dictappend', False)
    # Calling dictappend(args, kwargs) (line 1169)
    dictappend_call_result_97638 = invoke(stypy.reporting.localization.Localization(__file__, 1169, 9), dictappend_97632, *[dict_97633, vrd_97636], **kwargs_97637)
    
    # Assigning a type to the variable 'rd' (line 1169)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1169, 4), 'rd', dictappend_call_result_97638)
    
    # Assigning a List to a Name (line 1170):
    
    # Assigning a List to a Name (line 1170):
    
    # Obtaining an instance of the builtin type 'list' (line 1170)
    list_97639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1170, 19), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1170)
    
    # Assigning a type to the variable 'funcwrappers' (line 1170)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1170, 4), 'funcwrappers', list_97639)
    
    # Assigning a List to a Name (line 1171):
    
    # Assigning a List to a Name (line 1171):
    
    # Obtaining an instance of the builtin type 'list' (line 1171)
    list_97640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1171, 20), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1171)
    
    # Assigning a type to the variable 'funcwrappers2' (line 1171)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 4), 'funcwrappers2', list_97640)
    
    
    # Obtaining the type of the subscript
    str_97641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1172, 15), 'str', 'interfaced')
    # Getting the type of 'm' (line 1172)
    m_97642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 13), 'm')
    # Obtaining the member '__getitem__' of a type (line 1172)
    getitem___97643 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 13), m_97642, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1172)
    subscript_call_result_97644 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 13), getitem___97643, str_97641)
    
    # Testing the type of a for loop iterable (line 1172)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1172, 4), subscript_call_result_97644)
    # Getting the type of the for loop variable (line 1172)
    for_loop_var_97645 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1172, 4), subscript_call_result_97644)
    # Assigning a type to the variable 'n' (line 1172)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1172, 4), 'n', for_loop_var_97645)
    # SSA begins for a for statement (line 1172)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Name to a Name (line 1173):
    
    # Assigning a Name to a Name (line 1173):
    # Getting the type of 'None' (line 1173)
    None_97646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 13), 'None')
    # Assigning a type to the variable 'nb' (line 1173)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1173, 8), 'nb', None_97646)
    
    
    # Obtaining the type of the subscript
    str_97647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1174, 20), 'str', 'body')
    # Getting the type of 'm' (line 1174)
    m_97648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1174, 18), 'm')
    # Obtaining the member '__getitem__' of a type (line 1174)
    getitem___97649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1174, 18), m_97648, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1174)
    subscript_call_result_97650 = invoke(stypy.reporting.localization.Localization(__file__, 1174, 18), getitem___97649, str_97647)
    
    # Testing the type of a for loop iterable (line 1174)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1174, 8), subscript_call_result_97650)
    # Getting the type of the for loop variable (line 1174)
    for_loop_var_97651 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1174, 8), subscript_call_result_97650)
    # Assigning a type to the variable 'bi' (line 1174)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1174, 8), 'bi', for_loop_var_97651)
    # SSA begins for a for statement (line 1174)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    
    # Obtaining the type of the subscript
    str_97652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1175, 22), 'str', 'block')
    # Getting the type of 'bi' (line 1175)
    bi_97653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1175, 19), 'bi')
    # Obtaining the member '__getitem__' of a type (line 1175)
    getitem___97654 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1175, 19), bi_97653, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1175)
    subscript_call_result_97655 = invoke(stypy.reporting.localization.Localization(__file__, 1175, 19), getitem___97654, str_97652)
    
    str_97656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1175, 34), 'str', 'interface')
    # Applying the binary operator '==' (line 1175)
    result_eq_97657 = python_operator(stypy.reporting.localization.Localization(__file__, 1175, 19), '==', subscript_call_result_97655, str_97656)
    
    # Applying the 'not' unary operator (line 1175)
    result_not__97658 = python_operator(stypy.reporting.localization.Localization(__file__, 1175, 15), 'not', result_eq_97657)
    
    # Testing the type of an if condition (line 1175)
    if_condition_97659 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1175, 12), result_not__97658)
    # Assigning a type to the variable 'if_condition_97659' (line 1175)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1175, 12), 'if_condition_97659', if_condition_97659)
    # SSA begins for if statement (line 1175)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to errmess(...): (line 1176)
    # Processing the call arguments (line 1176)
    str_97661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1176, 24), 'str', 'buildmodule: Expected interface block. Skipping.\n')
    # Processing the call keyword arguments (line 1176)
    kwargs_97662 = {}
    # Getting the type of 'errmess' (line 1176)
    errmess_97660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 16), 'errmess', False)
    # Calling errmess(args, kwargs) (line 1176)
    errmess_call_result_97663 = invoke(stypy.reporting.localization.Localization(__file__, 1176, 16), errmess_97660, *[str_97661], **kwargs_97662)
    
    # SSA join for if statement (line 1175)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Obtaining the type of the subscript
    str_97664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1178, 24), 'str', 'body')
    # Getting the type of 'bi' (line 1178)
    bi_97665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1178, 21), 'bi')
    # Obtaining the member '__getitem__' of a type (line 1178)
    getitem___97666 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1178, 21), bi_97665, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1178)
    subscript_call_result_97667 = invoke(stypy.reporting.localization.Localization(__file__, 1178, 21), getitem___97666, str_97664)
    
    # Testing the type of a for loop iterable (line 1178)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1178, 12), subscript_call_result_97667)
    # Getting the type of the for loop variable (line 1178)
    for_loop_var_97668 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1178, 12), subscript_call_result_97667)
    # Assigning a type to the variable 'b' (line 1178)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1178, 12), 'b', for_loop_var_97668)
    # SSA begins for a for statement (line 1178)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Obtaining the type of the subscript
    str_97669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1179, 21), 'str', 'name')
    # Getting the type of 'b' (line 1179)
    b_97670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1179, 19), 'b')
    # Obtaining the member '__getitem__' of a type (line 1179)
    getitem___97671 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1179, 19), b_97670, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1179)
    subscript_call_result_97672 = invoke(stypy.reporting.localization.Localization(__file__, 1179, 19), getitem___97671, str_97669)
    
    # Getting the type of 'n' (line 1179)
    n_97673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1179, 32), 'n')
    # Applying the binary operator '==' (line 1179)
    result_eq_97674 = python_operator(stypy.reporting.localization.Localization(__file__, 1179, 19), '==', subscript_call_result_97672, n_97673)
    
    # Testing the type of an if condition (line 1179)
    if_condition_97675 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1179, 16), result_eq_97674)
    # Assigning a type to the variable 'if_condition_97675' (line 1179)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1179, 16), 'if_condition_97675', if_condition_97675)
    # SSA begins for if statement (line 1179)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 1180):
    
    # Assigning a Name to a Name (line 1180):
    # Getting the type of 'b' (line 1180)
    b_97676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1180, 25), 'b')
    # Assigning a type to the variable 'nb' (line 1180)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1180, 20), 'nb', b_97676)
    # SSA join for if statement (line 1179)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'nb' (line 1183)
    nb_97677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1183, 15), 'nb')
    # Applying the 'not' unary operator (line 1183)
    result_not__97678 = python_operator(stypy.reporting.localization.Localization(__file__, 1183, 11), 'not', nb_97677)
    
    # Testing the type of an if condition (line 1183)
    if_condition_97679 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1183, 8), result_not__97678)
    # Assigning a type to the variable 'if_condition_97679' (line 1183)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1183, 8), 'if_condition_97679', if_condition_97679)
    # SSA begins for if statement (line 1183)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to errmess(...): (line 1184)
    # Processing the call arguments (line 1184)
    str_97681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1185, 16), 'str', 'buildmodule: Could not found the body of interfaced routine "%s". Skipping.\n')
    # Getting the type of 'n' (line 1185)
    n_97682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 99), 'n', False)
    # Applying the binary operator '%' (line 1185)
    result_mod_97683 = python_operator(stypy.reporting.localization.Localization(__file__, 1185, 16), '%', str_97681, n_97682)
    
    # Processing the call keyword arguments (line 1184)
    kwargs_97684 = {}
    # Getting the type of 'errmess' (line 1184)
    errmess_97680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1184, 12), 'errmess', False)
    # Calling errmess(args, kwargs) (line 1184)
    errmess_call_result_97685 = invoke(stypy.reporting.localization.Localization(__file__, 1184, 12), errmess_97680, *[result_mod_97683], **kwargs_97684)
    
    # SSA join for if statement (line 1183)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a List to a Name (line 1187):
    
    # Assigning a List to a Name (line 1187):
    
    # Obtaining an instance of the builtin type 'list' (line 1187)
    list_97686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1187, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1187)
    # Adding element type (line 1187)
    # Getting the type of 'nb' (line 1187)
    nb_97687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1187, 19), 'nb')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1187, 18), list_97686, nb_97687)
    
    # Assigning a type to the variable 'nb_list' (line 1187)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1187, 8), 'nb_list', list_97686)
    
    
    str_97688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1188, 11), 'str', 'entry')
    # Getting the type of 'nb' (line 1188)
    nb_97689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1188, 22), 'nb')
    # Applying the binary operator 'in' (line 1188)
    result_contains_97690 = python_operator(stypy.reporting.localization.Localization(__file__, 1188, 11), 'in', str_97688, nb_97689)
    
    # Testing the type of an if condition (line 1188)
    if_condition_97691 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1188, 8), result_contains_97690)
    # Assigning a type to the variable 'if_condition_97691' (line 1188)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1188, 8), 'if_condition_97691', if_condition_97691)
    # SSA begins for if statement (line 1188)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Call to items(...): (line 1189)
    # Processing the call keyword arguments (line 1189)
    kwargs_97697 = {}
    
    # Obtaining the type of the subscript
    str_97692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1189, 27), 'str', 'entry')
    # Getting the type of 'nb' (line 1189)
    nb_97693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1189, 24), 'nb', False)
    # Obtaining the member '__getitem__' of a type (line 1189)
    getitem___97694 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1189, 24), nb_97693, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1189)
    subscript_call_result_97695 = invoke(stypy.reporting.localization.Localization(__file__, 1189, 24), getitem___97694, str_97692)
    
    # Obtaining the member 'items' of a type (line 1189)
    items_97696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1189, 24), subscript_call_result_97695, 'items')
    # Calling items(args, kwargs) (line 1189)
    items_call_result_97698 = invoke(stypy.reporting.localization.Localization(__file__, 1189, 24), items_97696, *[], **kwargs_97697)
    
    # Testing the type of a for loop iterable (line 1189)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1189, 12), items_call_result_97698)
    # Getting the type of the for loop variable (line 1189)
    for_loop_var_97699 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1189, 12), items_call_result_97698)
    # Assigning a type to the variable 'k' (line 1189)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1189, 12), 'k', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1189, 12), for_loop_var_97699))
    # Assigning a type to the variable 'a' (line 1189)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1189, 12), 'a', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1189, 12), for_loop_var_97699))
    # SSA begins for a for statement (line 1189)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 1190):
    
    # Assigning a Call to a Name (line 1190):
    
    # Call to deepcopy(...): (line 1190)
    # Processing the call arguments (line 1190)
    # Getting the type of 'nb' (line 1190)
    nb_97702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1190, 36), 'nb', False)
    # Processing the call keyword arguments (line 1190)
    kwargs_97703 = {}
    # Getting the type of 'copy' (line 1190)
    copy_97700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1190, 22), 'copy', False)
    # Obtaining the member 'deepcopy' of a type (line 1190)
    deepcopy_97701 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1190, 22), copy_97700, 'deepcopy')
    # Calling deepcopy(args, kwargs) (line 1190)
    deepcopy_call_result_97704 = invoke(stypy.reporting.localization.Localization(__file__, 1190, 22), deepcopy_97701, *[nb_97702], **kwargs_97703)
    
    # Assigning a type to the variable 'nb1' (line 1190)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1190, 16), 'nb1', deepcopy_call_result_97704)
    # Deleting a member
    # Getting the type of 'nb1' (line 1191)
    nb1_97705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1191, 20), 'nb1')
    
    # Obtaining the type of the subscript
    str_97706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1191, 24), 'str', 'entry')
    # Getting the type of 'nb1' (line 1191)
    nb1_97707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1191, 20), 'nb1')
    # Obtaining the member '__getitem__' of a type (line 1191)
    getitem___97708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1191, 20), nb1_97707, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1191)
    subscript_call_result_97709 = invoke(stypy.reporting.localization.Localization(__file__, 1191, 20), getitem___97708, str_97706)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1191, 16), nb1_97705, subscript_call_result_97709)
    
    # Assigning a Name to a Subscript (line 1192):
    
    # Assigning a Name to a Subscript (line 1192):
    # Getting the type of 'k' (line 1192)
    k_97710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1192, 30), 'k')
    # Getting the type of 'nb1' (line 1192)
    nb1_97711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1192, 16), 'nb1')
    str_97712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1192, 20), 'str', 'name')
    # Storing an element on a container (line 1192)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1192, 16), nb1_97711, (str_97712, k_97710))
    
    # Assigning a Name to a Subscript (line 1193):
    
    # Assigning a Name to a Subscript (line 1193):
    # Getting the type of 'a' (line 1193)
    a_97713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1193, 30), 'a')
    # Getting the type of 'nb1' (line 1193)
    nb1_97714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1193, 16), 'nb1')
    str_97715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1193, 20), 'str', 'args')
    # Storing an element on a container (line 1193)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1193, 16), nb1_97714, (str_97715, a_97713))
    
    # Call to append(...): (line 1194)
    # Processing the call arguments (line 1194)
    # Getting the type of 'nb1' (line 1194)
    nb1_97718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1194, 31), 'nb1', False)
    # Processing the call keyword arguments (line 1194)
    kwargs_97719 = {}
    # Getting the type of 'nb_list' (line 1194)
    nb_list_97716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1194, 16), 'nb_list', False)
    # Obtaining the member 'append' of a type (line 1194)
    append_97717 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1194, 16), nb_list_97716, 'append')
    # Calling append(args, kwargs) (line 1194)
    append_call_result_97720 = invoke(stypy.reporting.localization.Localization(__file__, 1194, 16), append_97717, *[nb1_97718], **kwargs_97719)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1188)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'nb_list' (line 1195)
    nb_list_97721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1195, 18), 'nb_list')
    # Testing the type of a for loop iterable (line 1195)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1195, 8), nb_list_97721)
    # Getting the type of the for loop variable (line 1195)
    for_loop_var_97722 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1195, 8), nb_list_97721)
    # Assigning a type to the variable 'nb' (line 1195)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1195, 8), 'nb', for_loop_var_97722)
    # SSA begins for a for statement (line 1195)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Tuple (line 1196):
    
    # Assigning a Call to a Name:
    
    # Call to buildapi(...): (line 1196)
    # Processing the call arguments (line 1196)
    # Getting the type of 'nb' (line 1196)
    nb_97724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1196, 33), 'nb', False)
    # Processing the call keyword arguments (line 1196)
    kwargs_97725 = {}
    # Getting the type of 'buildapi' (line 1196)
    buildapi_97723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1196, 24), 'buildapi', False)
    # Calling buildapi(args, kwargs) (line 1196)
    buildapi_call_result_97726 = invoke(stypy.reporting.localization.Localization(__file__, 1196, 24), buildapi_97723, *[nb_97724], **kwargs_97725)
    
    # Assigning a type to the variable 'call_assignment_95469' (line 1196)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1196, 12), 'call_assignment_95469', buildapi_call_result_97726)
    
    # Assigning a Call to a Name (line 1196):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_97729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1196, 12), 'int')
    # Processing the call keyword arguments
    kwargs_97730 = {}
    # Getting the type of 'call_assignment_95469' (line 1196)
    call_assignment_95469_97727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1196, 12), 'call_assignment_95469', False)
    # Obtaining the member '__getitem__' of a type (line 1196)
    getitem___97728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1196, 12), call_assignment_95469_97727, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_97731 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___97728, *[int_97729], **kwargs_97730)
    
    # Assigning a type to the variable 'call_assignment_95470' (line 1196)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1196, 12), 'call_assignment_95470', getitem___call_result_97731)
    
    # Assigning a Name to a Name (line 1196):
    # Getting the type of 'call_assignment_95470' (line 1196)
    call_assignment_95470_97732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1196, 12), 'call_assignment_95470')
    # Assigning a type to the variable 'api' (line 1196)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1196, 12), 'api', call_assignment_95470_97732)
    
    # Assigning a Call to a Name (line 1196):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_97735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1196, 12), 'int')
    # Processing the call keyword arguments
    kwargs_97736 = {}
    # Getting the type of 'call_assignment_95469' (line 1196)
    call_assignment_95469_97733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1196, 12), 'call_assignment_95469', False)
    # Obtaining the member '__getitem__' of a type (line 1196)
    getitem___97734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1196, 12), call_assignment_95469_97733, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_97737 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___97734, *[int_97735], **kwargs_97736)
    
    # Assigning a type to the variable 'call_assignment_95471' (line 1196)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1196, 12), 'call_assignment_95471', getitem___call_result_97737)
    
    # Assigning a Name to a Name (line 1196):
    # Getting the type of 'call_assignment_95471' (line 1196)
    call_assignment_95471_97738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1196, 12), 'call_assignment_95471')
    # Assigning a type to the variable 'wrap' (line 1196)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1196, 17), 'wrap', call_assignment_95471_97738)
    
    # Getting the type of 'wrap' (line 1197)
    wrap_97739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1197, 15), 'wrap')
    # Testing the type of an if condition (line 1197)
    if_condition_97740 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1197, 12), wrap_97739)
    # Assigning a type to the variable 'if_condition_97740' (line 1197)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1197, 12), 'if_condition_97740', if_condition_97740)
    # SSA begins for if statement (line 1197)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Call to ismoduleroutine(...): (line 1198)
    # Processing the call arguments (line 1198)
    # Getting the type of 'nb' (line 1198)
    nb_97742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1198, 35), 'nb', False)
    # Processing the call keyword arguments (line 1198)
    kwargs_97743 = {}
    # Getting the type of 'ismoduleroutine' (line 1198)
    ismoduleroutine_97741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1198, 19), 'ismoduleroutine', False)
    # Calling ismoduleroutine(args, kwargs) (line 1198)
    ismoduleroutine_call_result_97744 = invoke(stypy.reporting.localization.Localization(__file__, 1198, 19), ismoduleroutine_97741, *[nb_97742], **kwargs_97743)
    
    # Testing the type of an if condition (line 1198)
    if_condition_97745 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1198, 16), ismoduleroutine_call_result_97744)
    # Assigning a type to the variable 'if_condition_97745' (line 1198)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1198, 16), 'if_condition_97745', if_condition_97745)
    # SSA begins for if statement (line 1198)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1199)
    # Processing the call arguments (line 1199)
    # Getting the type of 'wrap' (line 1199)
    wrap_97748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1199, 41), 'wrap', False)
    # Processing the call keyword arguments (line 1199)
    kwargs_97749 = {}
    # Getting the type of 'funcwrappers2' (line 1199)
    funcwrappers2_97746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1199, 20), 'funcwrappers2', False)
    # Obtaining the member 'append' of a type (line 1199)
    append_97747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1199, 20), funcwrappers2_97746, 'append')
    # Calling append(args, kwargs) (line 1199)
    append_call_result_97750 = invoke(stypy.reporting.localization.Localization(__file__, 1199, 20), append_97747, *[wrap_97748], **kwargs_97749)
    
    # SSA branch for the else part of an if statement (line 1198)
    module_type_store.open_ssa_branch('else')
    
    # Call to append(...): (line 1201)
    # Processing the call arguments (line 1201)
    # Getting the type of 'wrap' (line 1201)
    wrap_97753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 40), 'wrap', False)
    # Processing the call keyword arguments (line 1201)
    kwargs_97754 = {}
    # Getting the type of 'funcwrappers' (line 1201)
    funcwrappers_97751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 20), 'funcwrappers', False)
    # Obtaining the member 'append' of a type (line 1201)
    append_97752 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1201, 20), funcwrappers_97751, 'append')
    # Calling append(args, kwargs) (line 1201)
    append_call_result_97755 = invoke(stypy.reporting.localization.Localization(__file__, 1201, 20), append_97752, *[wrap_97753], **kwargs_97754)
    
    # SSA join for if statement (line 1198)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1197)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1202):
    
    # Assigning a Call to a Name (line 1202):
    
    # Call to applyrules(...): (line 1202)
    # Processing the call arguments (line 1202)
    # Getting the type of 'api' (line 1202)
    api_97757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 28), 'api', False)
    # Getting the type of 'vrd' (line 1202)
    vrd_97758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 33), 'vrd', False)
    # Processing the call keyword arguments (line 1202)
    kwargs_97759 = {}
    # Getting the type of 'applyrules' (line 1202)
    applyrules_97756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 17), 'applyrules', False)
    # Calling applyrules(args, kwargs) (line 1202)
    applyrules_call_result_97760 = invoke(stypy.reporting.localization.Localization(__file__, 1202, 17), applyrules_97756, *[api_97757, vrd_97758], **kwargs_97759)
    
    # Assigning a type to the variable 'ar' (line 1202)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1202, 12), 'ar', applyrules_call_result_97760)
    
    # Assigning a Call to a Name (line 1203):
    
    # Assigning a Call to a Name (line 1203):
    
    # Call to dictappend(...): (line 1203)
    # Processing the call arguments (line 1203)
    # Getting the type of 'rd' (line 1203)
    rd_97762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 28), 'rd', False)
    # Getting the type of 'ar' (line 1203)
    ar_97763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 32), 'ar', False)
    # Processing the call keyword arguments (line 1203)
    kwargs_97764 = {}
    # Getting the type of 'dictappend' (line 1203)
    dictappend_97761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 17), 'dictappend', False)
    # Calling dictappend(args, kwargs) (line 1203)
    dictappend_call_result_97765 = invoke(stypy.reporting.localization.Localization(__file__, 1203, 17), dictappend_97761, *[rd_97762, ar_97763], **kwargs_97764)
    
    # Assigning a type to the variable 'rd' (line 1203)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1203, 12), 'rd', dictappend_call_result_97765)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Tuple (line 1206):
    
    # Assigning a Call to a Name:
    
    # Call to buildhooks(...): (line 1206)
    # Processing the call arguments (line 1206)
    # Getting the type of 'm' (line 1206)
    m_97768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1206, 39), 'm', False)
    # Processing the call keyword arguments (line 1206)
    kwargs_97769 = {}
    # Getting the type of 'common_rules' (line 1206)
    common_rules_97766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1206, 15), 'common_rules', False)
    # Obtaining the member 'buildhooks' of a type (line 1206)
    buildhooks_97767 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1206, 15), common_rules_97766, 'buildhooks')
    # Calling buildhooks(args, kwargs) (line 1206)
    buildhooks_call_result_97770 = invoke(stypy.reporting.localization.Localization(__file__, 1206, 15), buildhooks_97767, *[m_97768], **kwargs_97769)
    
    # Assigning a type to the variable 'call_assignment_95472' (line 1206)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1206, 4), 'call_assignment_95472', buildhooks_call_result_97770)
    
    # Assigning a Call to a Name (line 1206):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_97773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1206, 4), 'int')
    # Processing the call keyword arguments
    kwargs_97774 = {}
    # Getting the type of 'call_assignment_95472' (line 1206)
    call_assignment_95472_97771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1206, 4), 'call_assignment_95472', False)
    # Obtaining the member '__getitem__' of a type (line 1206)
    getitem___97772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1206, 4), call_assignment_95472_97771, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_97775 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___97772, *[int_97773], **kwargs_97774)
    
    # Assigning a type to the variable 'call_assignment_95473' (line 1206)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1206, 4), 'call_assignment_95473', getitem___call_result_97775)
    
    # Assigning a Name to a Name (line 1206):
    # Getting the type of 'call_assignment_95473' (line 1206)
    call_assignment_95473_97776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1206, 4), 'call_assignment_95473')
    # Assigning a type to the variable 'cr' (line 1206)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1206, 4), 'cr', call_assignment_95473_97776)
    
    # Assigning a Call to a Name (line 1206):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_97779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1206, 4), 'int')
    # Processing the call keyword arguments
    kwargs_97780 = {}
    # Getting the type of 'call_assignment_95472' (line 1206)
    call_assignment_95472_97777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1206, 4), 'call_assignment_95472', False)
    # Obtaining the member '__getitem__' of a type (line 1206)
    getitem___97778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1206, 4), call_assignment_95472_97777, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_97781 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___97778, *[int_97779], **kwargs_97780)
    
    # Assigning a type to the variable 'call_assignment_95474' (line 1206)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1206, 4), 'call_assignment_95474', getitem___call_result_97781)
    
    # Assigning a Name to a Name (line 1206):
    # Getting the type of 'call_assignment_95474' (line 1206)
    call_assignment_95474_97782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1206, 4), 'call_assignment_95474')
    # Assigning a type to the variable 'wrap' (line 1206)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1206, 8), 'wrap', call_assignment_95474_97782)
    
    # Getting the type of 'wrap' (line 1207)
    wrap_97783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 7), 'wrap')
    # Testing the type of an if condition (line 1207)
    if_condition_97784 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1207, 4), wrap_97783)
    # Assigning a type to the variable 'if_condition_97784' (line 1207)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1207, 4), 'if_condition_97784', if_condition_97784)
    # SSA begins for if statement (line 1207)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1208)
    # Processing the call arguments (line 1208)
    # Getting the type of 'wrap' (line 1208)
    wrap_97787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1208, 28), 'wrap', False)
    # Processing the call keyword arguments (line 1208)
    kwargs_97788 = {}
    # Getting the type of 'funcwrappers' (line 1208)
    funcwrappers_97785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1208, 8), 'funcwrappers', False)
    # Obtaining the member 'append' of a type (line 1208)
    append_97786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1208, 8), funcwrappers_97785, 'append')
    # Calling append(args, kwargs) (line 1208)
    append_call_result_97789 = invoke(stypy.reporting.localization.Localization(__file__, 1208, 8), append_97786, *[wrap_97787], **kwargs_97788)
    
    # SSA join for if statement (line 1207)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1209):
    
    # Assigning a Call to a Name (line 1209):
    
    # Call to applyrules(...): (line 1209)
    # Processing the call arguments (line 1209)
    # Getting the type of 'cr' (line 1209)
    cr_97791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1209, 20), 'cr', False)
    # Getting the type of 'vrd' (line 1209)
    vrd_97792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1209, 24), 'vrd', False)
    # Processing the call keyword arguments (line 1209)
    kwargs_97793 = {}
    # Getting the type of 'applyrules' (line 1209)
    applyrules_97790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1209, 9), 'applyrules', False)
    # Calling applyrules(args, kwargs) (line 1209)
    applyrules_call_result_97794 = invoke(stypy.reporting.localization.Localization(__file__, 1209, 9), applyrules_97790, *[cr_97791, vrd_97792], **kwargs_97793)
    
    # Assigning a type to the variable 'ar' (line 1209)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1209, 4), 'ar', applyrules_call_result_97794)
    
    # Assigning a Call to a Name (line 1210):
    
    # Assigning a Call to a Name (line 1210):
    
    # Call to dictappend(...): (line 1210)
    # Processing the call arguments (line 1210)
    # Getting the type of 'rd' (line 1210)
    rd_97796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1210, 20), 'rd', False)
    # Getting the type of 'ar' (line 1210)
    ar_97797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1210, 24), 'ar', False)
    # Processing the call keyword arguments (line 1210)
    kwargs_97798 = {}
    # Getting the type of 'dictappend' (line 1210)
    dictappend_97795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1210, 9), 'dictappend', False)
    # Calling dictappend(args, kwargs) (line 1210)
    dictappend_call_result_97799 = invoke(stypy.reporting.localization.Localization(__file__, 1210, 9), dictappend_97795, *[rd_97796, ar_97797], **kwargs_97798)
    
    # Assigning a type to the variable 'rd' (line 1210)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1210, 4), 'rd', dictappend_call_result_97799)
    
    # Assigning a Call to a Tuple (line 1213):
    
    # Assigning a Call to a Name:
    
    # Call to buildhooks(...): (line 1213)
    # Processing the call arguments (line 1213)
    # Getting the type of 'm' (line 1213)
    m_97802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1213, 39), 'm', False)
    # Processing the call keyword arguments (line 1213)
    kwargs_97803 = {}
    # Getting the type of 'f90mod_rules' (line 1213)
    f90mod_rules_97800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1213, 15), 'f90mod_rules', False)
    # Obtaining the member 'buildhooks' of a type (line 1213)
    buildhooks_97801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1213, 15), f90mod_rules_97800, 'buildhooks')
    # Calling buildhooks(args, kwargs) (line 1213)
    buildhooks_call_result_97804 = invoke(stypy.reporting.localization.Localization(__file__, 1213, 15), buildhooks_97801, *[m_97802], **kwargs_97803)
    
    # Assigning a type to the variable 'call_assignment_95475' (line 1213)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1213, 4), 'call_assignment_95475', buildhooks_call_result_97804)
    
    # Assigning a Call to a Name (line 1213):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_97807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1213, 4), 'int')
    # Processing the call keyword arguments
    kwargs_97808 = {}
    # Getting the type of 'call_assignment_95475' (line 1213)
    call_assignment_95475_97805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1213, 4), 'call_assignment_95475', False)
    # Obtaining the member '__getitem__' of a type (line 1213)
    getitem___97806 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1213, 4), call_assignment_95475_97805, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_97809 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___97806, *[int_97807], **kwargs_97808)
    
    # Assigning a type to the variable 'call_assignment_95476' (line 1213)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1213, 4), 'call_assignment_95476', getitem___call_result_97809)
    
    # Assigning a Name to a Name (line 1213):
    # Getting the type of 'call_assignment_95476' (line 1213)
    call_assignment_95476_97810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1213, 4), 'call_assignment_95476')
    # Assigning a type to the variable 'mr' (line 1213)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1213, 4), 'mr', call_assignment_95476_97810)
    
    # Assigning a Call to a Name (line 1213):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_97813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1213, 4), 'int')
    # Processing the call keyword arguments
    kwargs_97814 = {}
    # Getting the type of 'call_assignment_95475' (line 1213)
    call_assignment_95475_97811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1213, 4), 'call_assignment_95475', False)
    # Obtaining the member '__getitem__' of a type (line 1213)
    getitem___97812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1213, 4), call_assignment_95475_97811, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_97815 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___97812, *[int_97813], **kwargs_97814)
    
    # Assigning a type to the variable 'call_assignment_95477' (line 1213)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1213, 4), 'call_assignment_95477', getitem___call_result_97815)
    
    # Assigning a Name to a Name (line 1213):
    # Getting the type of 'call_assignment_95477' (line 1213)
    call_assignment_95477_97816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1213, 4), 'call_assignment_95477')
    # Assigning a type to the variable 'wrap' (line 1213)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1213, 8), 'wrap', call_assignment_95477_97816)
    
    # Getting the type of 'wrap' (line 1214)
    wrap_97817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1214, 7), 'wrap')
    # Testing the type of an if condition (line 1214)
    if_condition_97818 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1214, 4), wrap_97817)
    # Assigning a type to the variable 'if_condition_97818' (line 1214)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1214, 4), 'if_condition_97818', if_condition_97818)
    # SSA begins for if statement (line 1214)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1215)
    # Processing the call arguments (line 1215)
    # Getting the type of 'wrap' (line 1215)
    wrap_97821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1215, 29), 'wrap', False)
    # Processing the call keyword arguments (line 1215)
    kwargs_97822 = {}
    # Getting the type of 'funcwrappers2' (line 1215)
    funcwrappers2_97819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1215, 8), 'funcwrappers2', False)
    # Obtaining the member 'append' of a type (line 1215)
    append_97820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1215, 8), funcwrappers2_97819, 'append')
    # Calling append(args, kwargs) (line 1215)
    append_call_result_97823 = invoke(stypy.reporting.localization.Localization(__file__, 1215, 8), append_97820, *[wrap_97821], **kwargs_97822)
    
    # SSA join for if statement (line 1214)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1216):
    
    # Assigning a Call to a Name (line 1216):
    
    # Call to applyrules(...): (line 1216)
    # Processing the call arguments (line 1216)
    # Getting the type of 'mr' (line 1216)
    mr_97825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1216, 20), 'mr', False)
    # Getting the type of 'vrd' (line 1216)
    vrd_97826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1216, 24), 'vrd', False)
    # Processing the call keyword arguments (line 1216)
    kwargs_97827 = {}
    # Getting the type of 'applyrules' (line 1216)
    applyrules_97824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1216, 9), 'applyrules', False)
    # Calling applyrules(args, kwargs) (line 1216)
    applyrules_call_result_97828 = invoke(stypy.reporting.localization.Localization(__file__, 1216, 9), applyrules_97824, *[mr_97825, vrd_97826], **kwargs_97827)
    
    # Assigning a type to the variable 'ar' (line 1216)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1216, 4), 'ar', applyrules_call_result_97828)
    
    # Assigning a Call to a Name (line 1217):
    
    # Assigning a Call to a Name (line 1217):
    
    # Call to dictappend(...): (line 1217)
    # Processing the call arguments (line 1217)
    # Getting the type of 'rd' (line 1217)
    rd_97830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1217, 20), 'rd', False)
    # Getting the type of 'ar' (line 1217)
    ar_97831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1217, 24), 'ar', False)
    # Processing the call keyword arguments (line 1217)
    kwargs_97832 = {}
    # Getting the type of 'dictappend' (line 1217)
    dictappend_97829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1217, 9), 'dictappend', False)
    # Calling dictappend(args, kwargs) (line 1217)
    dictappend_call_result_97833 = invoke(stypy.reporting.localization.Localization(__file__, 1217, 9), dictappend_97829, *[rd_97830, ar_97831], **kwargs_97832)
    
    # Assigning a type to the variable 'rd' (line 1217)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1217, 4), 'rd', dictappend_call_result_97833)
    
    # Getting the type of 'um' (line 1219)
    um_97834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1219, 13), 'um')
    # Testing the type of a for loop iterable (line 1219)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1219, 4), um_97834)
    # Getting the type of the for loop variable (line 1219)
    for_loop_var_97835 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1219, 4), um_97834)
    # Assigning a type to the variable 'u' (line 1219)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1219, 4), 'u', for_loop_var_97835)
    # SSA begins for a for statement (line 1219)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 1220):
    
    # Assigning a Call to a Name (line 1220):
    
    # Call to buildusevars(...): (line 1220)
    # Processing the call arguments (line 1220)
    # Getting the type of 'u' (line 1220)
    u_97838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1220, 36), 'u', False)
    
    # Obtaining the type of the subscript
    
    # Obtaining the type of the subscript
    str_97839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1220, 50), 'str', 'name')
    # Getting the type of 'u' (line 1220)
    u_97840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1220, 48), 'u', False)
    # Obtaining the member '__getitem__' of a type (line 1220)
    getitem___97841 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1220, 48), u_97840, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1220)
    subscript_call_result_97842 = invoke(stypy.reporting.localization.Localization(__file__, 1220, 48), getitem___97841, str_97839)
    
    
    # Obtaining the type of the subscript
    str_97843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1220, 41), 'str', 'use')
    # Getting the type of 'm' (line 1220)
    m_97844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1220, 39), 'm', False)
    # Obtaining the member '__getitem__' of a type (line 1220)
    getitem___97845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1220, 39), m_97844, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1220)
    subscript_call_result_97846 = invoke(stypy.reporting.localization.Localization(__file__, 1220, 39), getitem___97845, str_97843)
    
    # Obtaining the member '__getitem__' of a type (line 1220)
    getitem___97847 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1220, 39), subscript_call_result_97846, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1220)
    subscript_call_result_97848 = invoke(stypy.reporting.localization.Localization(__file__, 1220, 39), getitem___97847, subscript_call_result_97842)
    
    # Processing the call keyword arguments (line 1220)
    kwargs_97849 = {}
    # Getting the type of 'use_rules' (line 1220)
    use_rules_97836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1220, 13), 'use_rules', False)
    # Obtaining the member 'buildusevars' of a type (line 1220)
    buildusevars_97837 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1220, 13), use_rules_97836, 'buildusevars')
    # Calling buildusevars(args, kwargs) (line 1220)
    buildusevars_call_result_97850 = invoke(stypy.reporting.localization.Localization(__file__, 1220, 13), buildusevars_97837, *[u_97838, subscript_call_result_97848], **kwargs_97849)
    
    # Assigning a type to the variable 'ar' (line 1220)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1220, 8), 'ar', buildusevars_call_result_97850)
    
    # Assigning a Call to a Name (line 1221):
    
    # Assigning a Call to a Name (line 1221):
    
    # Call to dictappend(...): (line 1221)
    # Processing the call arguments (line 1221)
    # Getting the type of 'rd' (line 1221)
    rd_97852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1221, 24), 'rd', False)
    # Getting the type of 'ar' (line 1221)
    ar_97853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1221, 28), 'ar', False)
    # Processing the call keyword arguments (line 1221)
    kwargs_97854 = {}
    # Getting the type of 'dictappend' (line 1221)
    dictappend_97851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1221, 13), 'dictappend', False)
    # Calling dictappend(args, kwargs) (line 1221)
    dictappend_call_result_97855 = invoke(stypy.reporting.localization.Localization(__file__, 1221, 13), dictappend_97851, *[rd_97852, ar_97853], **kwargs_97854)
    
    # Assigning a type to the variable 'rd' (line 1221)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1221, 8), 'rd', dictappend_call_result_97855)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1223):
    
    # Assigning a Call to a Name (line 1223):
    
    # Call to get_needs(...): (line 1223)
    # Processing the call keyword arguments (line 1223)
    kwargs_97858 = {}
    # Getting the type of 'cfuncs' (line 1223)
    cfuncs_97856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1223, 12), 'cfuncs', False)
    # Obtaining the member 'get_needs' of a type (line 1223)
    get_needs_97857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1223, 12), cfuncs_97856, 'get_needs')
    # Calling get_needs(args, kwargs) (line 1223)
    get_needs_call_result_97859 = invoke(stypy.reporting.localization.Localization(__file__, 1223, 12), get_needs_97857, *[], **kwargs_97858)
    
    # Assigning a type to the variable 'needs' (line 1223)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1223, 4), 'needs', get_needs_call_result_97859)
    
    # Assigning a Dict to a Name (line 1224):
    
    # Assigning a Dict to a Name (line 1224):
    
    # Obtaining an instance of the builtin type 'dict' (line 1224)
    dict_97860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1224, 11), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1224)
    
    # Assigning a type to the variable 'code' (line 1224)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1224, 4), 'code', dict_97860)
    
    
    # Call to keys(...): (line 1225)
    # Processing the call keyword arguments (line 1225)
    kwargs_97863 = {}
    # Getting the type of 'needs' (line 1225)
    needs_97861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1225, 13), 'needs', False)
    # Obtaining the member 'keys' of a type (line 1225)
    keys_97862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1225, 13), needs_97861, 'keys')
    # Calling keys(args, kwargs) (line 1225)
    keys_call_result_97864 = invoke(stypy.reporting.localization.Localization(__file__, 1225, 13), keys_97862, *[], **kwargs_97863)
    
    # Testing the type of a for loop iterable (line 1225)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1225, 4), keys_call_result_97864)
    # Getting the type of the for loop variable (line 1225)
    for_loop_var_97865 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1225, 4), keys_call_result_97864)
    # Assigning a type to the variable 'n' (line 1225)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1225, 4), 'n', for_loop_var_97865)
    # SSA begins for a for statement (line 1225)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a List to a Subscript (line 1226):
    
    # Assigning a List to a Subscript (line 1226):
    
    # Obtaining an instance of the builtin type 'list' (line 1226)
    list_97866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1226, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1226)
    
    # Getting the type of 'code' (line 1226)
    code_97867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1226, 8), 'code')
    # Getting the type of 'n' (line 1226)
    n_97868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1226, 13), 'n')
    # Storing an element on a container (line 1226)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1226, 8), code_97867, (n_97868, list_97866))
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 1227)
    n_97869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1227, 23), 'n')
    # Getting the type of 'needs' (line 1227)
    needs_97870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1227, 17), 'needs')
    # Obtaining the member '__getitem__' of a type (line 1227)
    getitem___97871 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1227, 17), needs_97870, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1227)
    subscript_call_result_97872 = invoke(stypy.reporting.localization.Localization(__file__, 1227, 17), getitem___97871, n_97869)
    
    # Testing the type of a for loop iterable (line 1227)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1227, 8), subscript_call_result_97872)
    # Getting the type of the for loop variable (line 1227)
    for_loop_var_97873 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1227, 8), subscript_call_result_97872)
    # Assigning a type to the variable 'k' (line 1227)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1227, 8), 'k', for_loop_var_97873)
    # SSA begins for a for statement (line 1227)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Str to a Name (line 1228):
    
    # Assigning a Str to a Name (line 1228):
    str_97874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1228, 16), 'str', '')
    # Assigning a type to the variable 'c' (line 1228)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1228, 12), 'c', str_97874)
    
    
    # Getting the type of 'k' (line 1229)
    k_97875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 15), 'k')
    # Getting the type of 'cfuncs' (line 1229)
    cfuncs_97876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 20), 'cfuncs')
    # Obtaining the member 'includes0' of a type (line 1229)
    includes0_97877 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1229, 20), cfuncs_97876, 'includes0')
    # Applying the binary operator 'in' (line 1229)
    result_contains_97878 = python_operator(stypy.reporting.localization.Localization(__file__, 1229, 15), 'in', k_97875, includes0_97877)
    
    # Testing the type of an if condition (line 1229)
    if_condition_97879 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1229, 12), result_contains_97878)
    # Assigning a type to the variable 'if_condition_97879' (line 1229)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1229, 12), 'if_condition_97879', if_condition_97879)
    # SSA begins for if statement (line 1229)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1230):
    
    # Assigning a Subscript to a Name (line 1230):
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1230)
    k_97880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1230, 37), 'k')
    # Getting the type of 'cfuncs' (line 1230)
    cfuncs_97881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1230, 20), 'cfuncs')
    # Obtaining the member 'includes0' of a type (line 1230)
    includes0_97882 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1230, 20), cfuncs_97881, 'includes0')
    # Obtaining the member '__getitem__' of a type (line 1230)
    getitem___97883 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1230, 20), includes0_97882, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1230)
    subscript_call_result_97884 = invoke(stypy.reporting.localization.Localization(__file__, 1230, 20), getitem___97883, k_97880)
    
    # Assigning a type to the variable 'c' (line 1230)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1230, 16), 'c', subscript_call_result_97884)
    # SSA branch for the else part of an if statement (line 1229)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'k' (line 1231)
    k_97885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1231, 17), 'k')
    # Getting the type of 'cfuncs' (line 1231)
    cfuncs_97886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1231, 22), 'cfuncs')
    # Obtaining the member 'includes' of a type (line 1231)
    includes_97887 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1231, 22), cfuncs_97886, 'includes')
    # Applying the binary operator 'in' (line 1231)
    result_contains_97888 = python_operator(stypy.reporting.localization.Localization(__file__, 1231, 17), 'in', k_97885, includes_97887)
    
    # Testing the type of an if condition (line 1231)
    if_condition_97889 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1231, 17), result_contains_97888)
    # Assigning a type to the variable 'if_condition_97889' (line 1231)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1231, 17), 'if_condition_97889', if_condition_97889)
    # SSA begins for if statement (line 1231)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1232):
    
    # Assigning a Subscript to a Name (line 1232):
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1232)
    k_97890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1232, 36), 'k')
    # Getting the type of 'cfuncs' (line 1232)
    cfuncs_97891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1232, 20), 'cfuncs')
    # Obtaining the member 'includes' of a type (line 1232)
    includes_97892 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1232, 20), cfuncs_97891, 'includes')
    # Obtaining the member '__getitem__' of a type (line 1232)
    getitem___97893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1232, 20), includes_97892, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1232)
    subscript_call_result_97894 = invoke(stypy.reporting.localization.Localization(__file__, 1232, 20), getitem___97893, k_97890)
    
    # Assigning a type to the variable 'c' (line 1232)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1232, 16), 'c', subscript_call_result_97894)
    # SSA branch for the else part of an if statement (line 1231)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'k' (line 1233)
    k_97895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1233, 17), 'k')
    # Getting the type of 'cfuncs' (line 1233)
    cfuncs_97896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1233, 22), 'cfuncs')
    # Obtaining the member 'userincludes' of a type (line 1233)
    userincludes_97897 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1233, 22), cfuncs_97896, 'userincludes')
    # Applying the binary operator 'in' (line 1233)
    result_contains_97898 = python_operator(stypy.reporting.localization.Localization(__file__, 1233, 17), 'in', k_97895, userincludes_97897)
    
    # Testing the type of an if condition (line 1233)
    if_condition_97899 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1233, 17), result_contains_97898)
    # Assigning a type to the variable 'if_condition_97899' (line 1233)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1233, 17), 'if_condition_97899', if_condition_97899)
    # SSA begins for if statement (line 1233)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1234):
    
    # Assigning a Subscript to a Name (line 1234):
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1234)
    k_97900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1234, 40), 'k')
    # Getting the type of 'cfuncs' (line 1234)
    cfuncs_97901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1234, 20), 'cfuncs')
    # Obtaining the member 'userincludes' of a type (line 1234)
    userincludes_97902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1234, 20), cfuncs_97901, 'userincludes')
    # Obtaining the member '__getitem__' of a type (line 1234)
    getitem___97903 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1234, 20), userincludes_97902, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1234)
    subscript_call_result_97904 = invoke(stypy.reporting.localization.Localization(__file__, 1234, 20), getitem___97903, k_97900)
    
    # Assigning a type to the variable 'c' (line 1234)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1234, 16), 'c', subscript_call_result_97904)
    # SSA branch for the else part of an if statement (line 1233)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'k' (line 1235)
    k_97905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1235, 17), 'k')
    # Getting the type of 'cfuncs' (line 1235)
    cfuncs_97906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1235, 22), 'cfuncs')
    # Obtaining the member 'typedefs' of a type (line 1235)
    typedefs_97907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1235, 22), cfuncs_97906, 'typedefs')
    # Applying the binary operator 'in' (line 1235)
    result_contains_97908 = python_operator(stypy.reporting.localization.Localization(__file__, 1235, 17), 'in', k_97905, typedefs_97907)
    
    # Testing the type of an if condition (line 1235)
    if_condition_97909 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1235, 17), result_contains_97908)
    # Assigning a type to the variable 'if_condition_97909' (line 1235)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1235, 17), 'if_condition_97909', if_condition_97909)
    # SSA begins for if statement (line 1235)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1236):
    
    # Assigning a Subscript to a Name (line 1236):
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1236)
    k_97910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 36), 'k')
    # Getting the type of 'cfuncs' (line 1236)
    cfuncs_97911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 20), 'cfuncs')
    # Obtaining the member 'typedefs' of a type (line 1236)
    typedefs_97912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1236, 20), cfuncs_97911, 'typedefs')
    # Obtaining the member '__getitem__' of a type (line 1236)
    getitem___97913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1236, 20), typedefs_97912, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1236)
    subscript_call_result_97914 = invoke(stypy.reporting.localization.Localization(__file__, 1236, 20), getitem___97913, k_97910)
    
    # Assigning a type to the variable 'c' (line 1236)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1236, 16), 'c', subscript_call_result_97914)
    # SSA branch for the else part of an if statement (line 1235)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'k' (line 1237)
    k_97915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1237, 17), 'k')
    # Getting the type of 'cfuncs' (line 1237)
    cfuncs_97916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1237, 22), 'cfuncs')
    # Obtaining the member 'typedefs_generated' of a type (line 1237)
    typedefs_generated_97917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1237, 22), cfuncs_97916, 'typedefs_generated')
    # Applying the binary operator 'in' (line 1237)
    result_contains_97918 = python_operator(stypy.reporting.localization.Localization(__file__, 1237, 17), 'in', k_97915, typedefs_generated_97917)
    
    # Testing the type of an if condition (line 1237)
    if_condition_97919 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1237, 17), result_contains_97918)
    # Assigning a type to the variable 'if_condition_97919' (line 1237)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1237, 17), 'if_condition_97919', if_condition_97919)
    # SSA begins for if statement (line 1237)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1238):
    
    # Assigning a Subscript to a Name (line 1238):
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1238)
    k_97920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1238, 46), 'k')
    # Getting the type of 'cfuncs' (line 1238)
    cfuncs_97921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1238, 20), 'cfuncs')
    # Obtaining the member 'typedefs_generated' of a type (line 1238)
    typedefs_generated_97922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1238, 20), cfuncs_97921, 'typedefs_generated')
    # Obtaining the member '__getitem__' of a type (line 1238)
    getitem___97923 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1238, 20), typedefs_generated_97922, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1238)
    subscript_call_result_97924 = invoke(stypy.reporting.localization.Localization(__file__, 1238, 20), getitem___97923, k_97920)
    
    # Assigning a type to the variable 'c' (line 1238)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1238, 16), 'c', subscript_call_result_97924)
    # SSA branch for the else part of an if statement (line 1237)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'k' (line 1239)
    k_97925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 17), 'k')
    # Getting the type of 'cfuncs' (line 1239)
    cfuncs_97926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 22), 'cfuncs')
    # Obtaining the member 'cppmacros' of a type (line 1239)
    cppmacros_97927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1239, 22), cfuncs_97926, 'cppmacros')
    # Applying the binary operator 'in' (line 1239)
    result_contains_97928 = python_operator(stypy.reporting.localization.Localization(__file__, 1239, 17), 'in', k_97925, cppmacros_97927)
    
    # Testing the type of an if condition (line 1239)
    if_condition_97929 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1239, 17), result_contains_97928)
    # Assigning a type to the variable 'if_condition_97929' (line 1239)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1239, 17), 'if_condition_97929', if_condition_97929)
    # SSA begins for if statement (line 1239)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1240):
    
    # Assigning a Subscript to a Name (line 1240):
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1240)
    k_97930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 37), 'k')
    # Getting the type of 'cfuncs' (line 1240)
    cfuncs_97931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 20), 'cfuncs')
    # Obtaining the member 'cppmacros' of a type (line 1240)
    cppmacros_97932 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1240, 20), cfuncs_97931, 'cppmacros')
    # Obtaining the member '__getitem__' of a type (line 1240)
    getitem___97933 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1240, 20), cppmacros_97932, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1240)
    subscript_call_result_97934 = invoke(stypy.reporting.localization.Localization(__file__, 1240, 20), getitem___97933, k_97930)
    
    # Assigning a type to the variable 'c' (line 1240)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1240, 16), 'c', subscript_call_result_97934)
    # SSA branch for the else part of an if statement (line 1239)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'k' (line 1241)
    k_97935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1241, 17), 'k')
    # Getting the type of 'cfuncs' (line 1241)
    cfuncs_97936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1241, 22), 'cfuncs')
    # Obtaining the member 'cfuncs' of a type (line 1241)
    cfuncs_97937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1241, 22), cfuncs_97936, 'cfuncs')
    # Applying the binary operator 'in' (line 1241)
    result_contains_97938 = python_operator(stypy.reporting.localization.Localization(__file__, 1241, 17), 'in', k_97935, cfuncs_97937)
    
    # Testing the type of an if condition (line 1241)
    if_condition_97939 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1241, 17), result_contains_97938)
    # Assigning a type to the variable 'if_condition_97939' (line 1241)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1241, 17), 'if_condition_97939', if_condition_97939)
    # SSA begins for if statement (line 1241)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1242):
    
    # Assigning a Subscript to a Name (line 1242):
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1242)
    k_97940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1242, 34), 'k')
    # Getting the type of 'cfuncs' (line 1242)
    cfuncs_97941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1242, 20), 'cfuncs')
    # Obtaining the member 'cfuncs' of a type (line 1242)
    cfuncs_97942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1242, 20), cfuncs_97941, 'cfuncs')
    # Obtaining the member '__getitem__' of a type (line 1242)
    getitem___97943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1242, 20), cfuncs_97942, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1242)
    subscript_call_result_97944 = invoke(stypy.reporting.localization.Localization(__file__, 1242, 20), getitem___97943, k_97940)
    
    # Assigning a type to the variable 'c' (line 1242)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1242, 16), 'c', subscript_call_result_97944)
    # SSA branch for the else part of an if statement (line 1241)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'k' (line 1243)
    k_97945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1243, 17), 'k')
    # Getting the type of 'cfuncs' (line 1243)
    cfuncs_97946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1243, 22), 'cfuncs')
    # Obtaining the member 'callbacks' of a type (line 1243)
    callbacks_97947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1243, 22), cfuncs_97946, 'callbacks')
    # Applying the binary operator 'in' (line 1243)
    result_contains_97948 = python_operator(stypy.reporting.localization.Localization(__file__, 1243, 17), 'in', k_97945, callbacks_97947)
    
    # Testing the type of an if condition (line 1243)
    if_condition_97949 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1243, 17), result_contains_97948)
    # Assigning a type to the variable 'if_condition_97949' (line 1243)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1243, 17), 'if_condition_97949', if_condition_97949)
    # SSA begins for if statement (line 1243)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1244):
    
    # Assigning a Subscript to a Name (line 1244):
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1244)
    k_97950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1244, 37), 'k')
    # Getting the type of 'cfuncs' (line 1244)
    cfuncs_97951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1244, 20), 'cfuncs')
    # Obtaining the member 'callbacks' of a type (line 1244)
    callbacks_97952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1244, 20), cfuncs_97951, 'callbacks')
    # Obtaining the member '__getitem__' of a type (line 1244)
    getitem___97953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1244, 20), callbacks_97952, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1244)
    subscript_call_result_97954 = invoke(stypy.reporting.localization.Localization(__file__, 1244, 20), getitem___97953, k_97950)
    
    # Assigning a type to the variable 'c' (line 1244)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1244, 16), 'c', subscript_call_result_97954)
    # SSA branch for the else part of an if statement (line 1243)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'k' (line 1245)
    k_97955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 17), 'k')
    # Getting the type of 'cfuncs' (line 1245)
    cfuncs_97956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 22), 'cfuncs')
    # Obtaining the member 'f90modhooks' of a type (line 1245)
    f90modhooks_97957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1245, 22), cfuncs_97956, 'f90modhooks')
    # Applying the binary operator 'in' (line 1245)
    result_contains_97958 = python_operator(stypy.reporting.localization.Localization(__file__, 1245, 17), 'in', k_97955, f90modhooks_97957)
    
    # Testing the type of an if condition (line 1245)
    if_condition_97959 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1245, 17), result_contains_97958)
    # Assigning a type to the variable 'if_condition_97959' (line 1245)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1245, 17), 'if_condition_97959', if_condition_97959)
    # SSA begins for if statement (line 1245)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1246):
    
    # Assigning a Subscript to a Name (line 1246):
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1246)
    k_97960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 39), 'k')
    # Getting the type of 'cfuncs' (line 1246)
    cfuncs_97961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 20), 'cfuncs')
    # Obtaining the member 'f90modhooks' of a type (line 1246)
    f90modhooks_97962 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1246, 20), cfuncs_97961, 'f90modhooks')
    # Obtaining the member '__getitem__' of a type (line 1246)
    getitem___97963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1246, 20), f90modhooks_97962, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1246)
    subscript_call_result_97964 = invoke(stypy.reporting.localization.Localization(__file__, 1246, 20), getitem___97963, k_97960)
    
    # Assigning a type to the variable 'c' (line 1246)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1246, 16), 'c', subscript_call_result_97964)
    # SSA branch for the else part of an if statement (line 1245)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'k' (line 1247)
    k_97965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1247, 17), 'k')
    # Getting the type of 'cfuncs' (line 1247)
    cfuncs_97966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1247, 22), 'cfuncs')
    # Obtaining the member 'commonhooks' of a type (line 1247)
    commonhooks_97967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1247, 22), cfuncs_97966, 'commonhooks')
    # Applying the binary operator 'in' (line 1247)
    result_contains_97968 = python_operator(stypy.reporting.localization.Localization(__file__, 1247, 17), 'in', k_97965, commonhooks_97967)
    
    # Testing the type of an if condition (line 1247)
    if_condition_97969 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1247, 17), result_contains_97968)
    # Assigning a type to the variable 'if_condition_97969' (line 1247)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1247, 17), 'if_condition_97969', if_condition_97969)
    # SSA begins for if statement (line 1247)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1248):
    
    # Assigning a Subscript to a Name (line 1248):
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1248)
    k_97970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1248, 39), 'k')
    # Getting the type of 'cfuncs' (line 1248)
    cfuncs_97971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1248, 20), 'cfuncs')
    # Obtaining the member 'commonhooks' of a type (line 1248)
    commonhooks_97972 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1248, 20), cfuncs_97971, 'commonhooks')
    # Obtaining the member '__getitem__' of a type (line 1248)
    getitem___97973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1248, 20), commonhooks_97972, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1248)
    subscript_call_result_97974 = invoke(stypy.reporting.localization.Localization(__file__, 1248, 20), getitem___97973, k_97970)
    
    # Assigning a type to the variable 'c' (line 1248)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1248, 16), 'c', subscript_call_result_97974)
    # SSA branch for the else part of an if statement (line 1247)
    module_type_store.open_ssa_branch('else')
    
    # Call to errmess(...): (line 1250)
    # Processing the call arguments (line 1250)
    str_97976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1250, 24), 'str', 'buildmodule: unknown need %s.\n')
    
    # Call to repr(...): (line 1250)
    # Processing the call arguments (line 1250)
    # Getting the type of 'k' (line 1250)
    k_97978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1250, 66), 'k', False)
    # Processing the call keyword arguments (line 1250)
    kwargs_97979 = {}
    # Getting the type of 'repr' (line 1250)
    repr_97977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1250, 61), 'repr', False)
    # Calling repr(args, kwargs) (line 1250)
    repr_call_result_97980 = invoke(stypy.reporting.localization.Localization(__file__, 1250, 61), repr_97977, *[k_97978], **kwargs_97979)
    
    # Applying the binary operator '%' (line 1250)
    result_mod_97981 = python_operator(stypy.reporting.localization.Localization(__file__, 1250, 24), '%', str_97976, repr_call_result_97980)
    
    # Processing the call keyword arguments (line 1250)
    kwargs_97982 = {}
    # Getting the type of 'errmess' (line 1250)
    errmess_97975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1250, 16), 'errmess', False)
    # Calling errmess(args, kwargs) (line 1250)
    errmess_call_result_97983 = invoke(stypy.reporting.localization.Localization(__file__, 1250, 16), errmess_97975, *[result_mod_97981], **kwargs_97982)
    
    # SSA join for if statement (line 1247)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1245)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1243)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1241)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1239)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1237)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1235)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1233)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1231)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1229)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 1252)
    # Processing the call arguments (line 1252)
    # Getting the type of 'c' (line 1252)
    c_97989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1252, 27), 'c', False)
    # Processing the call keyword arguments (line 1252)
    kwargs_97990 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'n' (line 1252)
    n_97984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1252, 17), 'n', False)
    # Getting the type of 'code' (line 1252)
    code_97985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1252, 12), 'code', False)
    # Obtaining the member '__getitem__' of a type (line 1252)
    getitem___97986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1252, 12), code_97985, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1252)
    subscript_call_result_97987 = invoke(stypy.reporting.localization.Localization(__file__, 1252, 12), getitem___97986, n_97984)
    
    # Obtaining the member 'append' of a type (line 1252)
    append_97988 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1252, 12), subscript_call_result_97987, 'append')
    # Calling append(args, kwargs) (line 1252)
    append_call_result_97991 = invoke(stypy.reporting.localization.Localization(__file__, 1252, 12), append_97988, *[c_97989], **kwargs_97990)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 1253)
    # Processing the call arguments (line 1253)
    # Getting the type of 'code' (line 1253)
    code_97994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 21), 'code', False)
    # Processing the call keyword arguments (line 1253)
    kwargs_97995 = {}
    # Getting the type of 'mod_rules' (line 1253)
    mod_rules_97992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 4), 'mod_rules', False)
    # Obtaining the member 'append' of a type (line 1253)
    append_97993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1253, 4), mod_rules_97992, 'append')
    # Calling append(args, kwargs) (line 1253)
    append_call_result_97996 = invoke(stypy.reporting.localization.Localization(__file__, 1253, 4), append_97993, *[code_97994], **kwargs_97995)
    
    
    # Getting the type of 'mod_rules' (line 1254)
    mod_rules_97997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1254, 13), 'mod_rules')
    # Testing the type of a for loop iterable (line 1254)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1254, 4), mod_rules_97997)
    # Getting the type of the for loop variable (line 1254)
    for_loop_var_97998 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1254, 4), mod_rules_97997)
    # Assigning a type to the variable 'r' (line 1254)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1254, 4), 'r', for_loop_var_97998)
    # SSA begins for a for statement (line 1254)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    # Evaluating a boolean operation
    
    str_97999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1255, 12), 'str', '_check')
    # Getting the type of 'r' (line 1255)
    r_98000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 24), 'r')
    # Applying the binary operator 'in' (line 1255)
    result_contains_98001 = python_operator(stypy.reporting.localization.Localization(__file__, 1255, 12), 'in', str_97999, r_98000)
    
    
    # Call to (...): (line 1255)
    # Processing the call arguments (line 1255)
    # Getting the type of 'm' (line 1255)
    m_98006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 42), 'm', False)
    # Processing the call keyword arguments (line 1255)
    kwargs_98007 = {}
    
    # Obtaining the type of the subscript
    str_98002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1255, 32), 'str', '_check')
    # Getting the type of 'r' (line 1255)
    r_98003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 30), 'r', False)
    # Obtaining the member '__getitem__' of a type (line 1255)
    getitem___98004 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1255, 30), r_98003, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1255)
    subscript_call_result_98005 = invoke(stypy.reporting.localization.Localization(__file__, 1255, 30), getitem___98004, str_98002)
    
    # Calling (args, kwargs) (line 1255)
    _call_result_98008 = invoke(stypy.reporting.localization.Localization(__file__, 1255, 30), subscript_call_result_98005, *[m_98006], **kwargs_98007)
    
    # Applying the binary operator 'and' (line 1255)
    result_and_keyword_98009 = python_operator(stypy.reporting.localization.Localization(__file__, 1255, 12), 'and', result_contains_98001, _call_result_98008)
    
    
    str_98010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1255, 50), 'str', '_check')
    # Getting the type of 'r' (line 1255)
    r_98011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 66), 'r')
    # Applying the binary operator 'notin' (line 1255)
    result_contains_98012 = python_operator(stypy.reporting.localization.Localization(__file__, 1255, 50), 'notin', str_98010, r_98011)
    
    # Applying the binary operator 'or' (line 1255)
    result_or_keyword_98013 = python_operator(stypy.reporting.localization.Localization(__file__, 1255, 11), 'or', result_and_keyword_98009, result_contains_98012)
    
    # Testing the type of an if condition (line 1255)
    if_condition_98014 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1255, 8), result_or_keyword_98013)
    # Assigning a type to the variable 'if_condition_98014' (line 1255)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1255, 8), 'if_condition_98014', if_condition_98014)
    # SSA begins for if statement (line 1255)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1256):
    
    # Assigning a Call to a Name (line 1256):
    
    # Call to applyrules(...): (line 1256)
    # Processing the call arguments (line 1256)
    # Getting the type of 'r' (line 1256)
    r_98016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1256, 28), 'r', False)
    # Getting the type of 'vrd' (line 1256)
    vrd_98017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1256, 31), 'vrd', False)
    # Getting the type of 'm' (line 1256)
    m_98018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1256, 36), 'm', False)
    # Processing the call keyword arguments (line 1256)
    kwargs_98019 = {}
    # Getting the type of 'applyrules' (line 1256)
    applyrules_98015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1256, 17), 'applyrules', False)
    # Calling applyrules(args, kwargs) (line 1256)
    applyrules_call_result_98020 = invoke(stypy.reporting.localization.Localization(__file__, 1256, 17), applyrules_98015, *[r_98016, vrd_98017, m_98018], **kwargs_98019)
    
    # Assigning a type to the variable 'ar' (line 1256)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1256, 12), 'ar', applyrules_call_result_98020)
    
    # Assigning a Call to a Name (line 1257):
    
    # Assigning a Call to a Name (line 1257):
    
    # Call to dictappend(...): (line 1257)
    # Processing the call arguments (line 1257)
    # Getting the type of 'rd' (line 1257)
    rd_98022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1257, 28), 'rd', False)
    # Getting the type of 'ar' (line 1257)
    ar_98023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1257, 32), 'ar', False)
    # Processing the call keyword arguments (line 1257)
    kwargs_98024 = {}
    # Getting the type of 'dictappend' (line 1257)
    dictappend_98021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1257, 17), 'dictappend', False)
    # Calling dictappend(args, kwargs) (line 1257)
    dictappend_call_result_98025 = invoke(stypy.reporting.localization.Localization(__file__, 1257, 17), dictappend_98021, *[rd_98022, ar_98023], **kwargs_98024)
    
    # Assigning a type to the variable 'rd' (line 1257)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1257, 12), 'rd', dictappend_call_result_98025)
    # SSA join for if statement (line 1255)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1258):
    
    # Assigning a Call to a Name (line 1258):
    
    # Call to applyrules(...): (line 1258)
    # Processing the call arguments (line 1258)
    # Getting the type of 'module_rules' (line 1258)
    module_rules_98027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1258, 20), 'module_rules', False)
    # Getting the type of 'rd' (line 1258)
    rd_98028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1258, 34), 'rd', False)
    # Processing the call keyword arguments (line 1258)
    kwargs_98029 = {}
    # Getting the type of 'applyrules' (line 1258)
    applyrules_98026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1258, 9), 'applyrules', False)
    # Calling applyrules(args, kwargs) (line 1258)
    applyrules_call_result_98030 = invoke(stypy.reporting.localization.Localization(__file__, 1258, 9), applyrules_98026, *[module_rules_98027, rd_98028], **kwargs_98029)
    
    # Assigning a type to the variable 'ar' (line 1258)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1258, 4), 'ar', applyrules_call_result_98030)
    
    # Assigning a Call to a Name (line 1260):
    
    # Assigning a Call to a Name (line 1260):
    
    # Call to join(...): (line 1260)
    # Processing the call arguments (line 1260)
    
    # Obtaining the type of the subscript
    str_98034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1260, 30), 'str', 'buildpath')
    # Getting the type of 'options' (line 1260)
    options_98035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 22), 'options', False)
    # Obtaining the member '__getitem__' of a type (line 1260)
    getitem___98036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1260, 22), options_98035, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1260)
    subscript_call_result_98037 = invoke(stypy.reporting.localization.Localization(__file__, 1260, 22), getitem___98036, str_98034)
    
    
    # Obtaining the type of the subscript
    str_98038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1260, 48), 'str', 'coutput')
    # Getting the type of 'vrd' (line 1260)
    vrd_98039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 44), 'vrd', False)
    # Obtaining the member '__getitem__' of a type (line 1260)
    getitem___98040 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1260, 44), vrd_98039, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1260)
    subscript_call_result_98041 = invoke(stypy.reporting.localization.Localization(__file__, 1260, 44), getitem___98040, str_98038)
    
    # Processing the call keyword arguments (line 1260)
    kwargs_98042 = {}
    # Getting the type of 'os' (line 1260)
    os_98031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 9), 'os', False)
    # Obtaining the member 'path' of a type (line 1260)
    path_98032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1260, 9), os_98031, 'path')
    # Obtaining the member 'join' of a type (line 1260)
    join_98033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1260, 9), path_98032, 'join')
    # Calling join(args, kwargs) (line 1260)
    join_call_result_98043 = invoke(stypy.reporting.localization.Localization(__file__, 1260, 9), join_98033, *[subscript_call_result_98037, subscript_call_result_98041], **kwargs_98042)
    
    # Assigning a type to the variable 'fn' (line 1260)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1260, 4), 'fn', join_call_result_98043)
    
    # Assigning a Name to a Subscript (line 1261):
    
    # Assigning a Name to a Subscript (line 1261):
    # Getting the type of 'fn' (line 1261)
    fn_98044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 18), 'fn')
    # Getting the type of 'ret' (line 1261)
    ret_98045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 4), 'ret')
    str_98046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1261, 8), 'str', 'csrc')
    # Storing an element on a container (line 1261)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1261, 4), ret_98045, (str_98046, fn_98044))
    
    # Assigning a Call to a Name (line 1262):
    
    # Assigning a Call to a Name (line 1262):
    
    # Call to open(...): (line 1262)
    # Processing the call arguments (line 1262)
    # Getting the type of 'fn' (line 1262)
    fn_98048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 13), 'fn', False)
    str_98049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1262, 17), 'str', 'w')
    # Processing the call keyword arguments (line 1262)
    kwargs_98050 = {}
    # Getting the type of 'open' (line 1262)
    open_98047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 8), 'open', False)
    # Calling open(args, kwargs) (line 1262)
    open_call_result_98051 = invoke(stypy.reporting.localization.Localization(__file__, 1262, 8), open_98047, *[fn_98048, str_98049], **kwargs_98050)
    
    # Assigning a type to the variable 'f' (line 1262)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1262, 4), 'f', open_call_result_98051)
    
    # Call to write(...): (line 1263)
    # Processing the call arguments (line 1263)
    
    # Call to replace(...): (line 1263)
    # Processing the call arguments (line 1263)
    str_98059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1263, 37), 'str', '\t')
    int_98060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1263, 43), 'int')
    str_98061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1263, 47), 'str', ' ')
    # Applying the binary operator '*' (line 1263)
    result_mul_98062 = python_operator(stypy.reporting.localization.Localization(__file__, 1263, 43), '*', int_98060, str_98061)
    
    # Processing the call keyword arguments (line 1263)
    kwargs_98063 = {}
    
    # Obtaining the type of the subscript
    str_98054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1263, 15), 'str', 'modulebody')
    # Getting the type of 'ar' (line 1263)
    ar_98055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1263, 12), 'ar', False)
    # Obtaining the member '__getitem__' of a type (line 1263)
    getitem___98056 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1263, 12), ar_98055, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1263)
    subscript_call_result_98057 = invoke(stypy.reporting.localization.Localization(__file__, 1263, 12), getitem___98056, str_98054)
    
    # Obtaining the member 'replace' of a type (line 1263)
    replace_98058 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1263, 12), subscript_call_result_98057, 'replace')
    # Calling replace(args, kwargs) (line 1263)
    replace_call_result_98064 = invoke(stypy.reporting.localization.Localization(__file__, 1263, 12), replace_98058, *[str_98059, result_mul_98062], **kwargs_98063)
    
    # Processing the call keyword arguments (line 1263)
    kwargs_98065 = {}
    # Getting the type of 'f' (line 1263)
    f_98052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1263, 4), 'f', False)
    # Obtaining the member 'write' of a type (line 1263)
    write_98053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1263, 4), f_98052, 'write')
    # Calling write(args, kwargs) (line 1263)
    write_call_result_98066 = invoke(stypy.reporting.localization.Localization(__file__, 1263, 4), write_98053, *[replace_call_result_98064], **kwargs_98065)
    
    
    # Call to close(...): (line 1264)
    # Processing the call keyword arguments (line 1264)
    kwargs_98069 = {}
    # Getting the type of 'f' (line 1264)
    f_98067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1264, 4), 'f', False)
    # Obtaining the member 'close' of a type (line 1264)
    close_98068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1264, 4), f_98067, 'close')
    # Calling close(args, kwargs) (line 1264)
    close_call_result_98070 = invoke(stypy.reporting.localization.Localization(__file__, 1264, 4), close_98068, *[], **kwargs_98069)
    
    
    # Call to outmess(...): (line 1265)
    # Processing the call arguments (line 1265)
    str_98072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1265, 12), 'str', '\tWrote C/API module "%s" to file "%s"\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1265)
    tuple_98073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1265, 58), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1265)
    # Adding element type (line 1265)
    
    # Obtaining the type of the subscript
    str_98074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1265, 60), 'str', 'name')
    # Getting the type of 'm' (line 1265)
    m_98075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 58), 'm', False)
    # Obtaining the member '__getitem__' of a type (line 1265)
    getitem___98076 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1265, 58), m_98075, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1265)
    subscript_call_result_98077 = invoke(stypy.reporting.localization.Localization(__file__, 1265, 58), getitem___98076, str_98074)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1265, 58), tuple_98073, subscript_call_result_98077)
    # Adding element type (line 1265)
    # Getting the type of 'fn' (line 1265)
    fn_98078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 69), 'fn', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1265, 58), tuple_98073, fn_98078)
    
    # Applying the binary operator '%' (line 1265)
    result_mod_98079 = python_operator(stypy.reporting.localization.Localization(__file__, 1265, 12), '%', str_98072, tuple_98073)
    
    # Processing the call keyword arguments (line 1265)
    kwargs_98080 = {}
    # Getting the type of 'outmess' (line 1265)
    outmess_98071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 4), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1265)
    outmess_call_result_98081 = invoke(stypy.reporting.localization.Localization(__file__, 1265, 4), outmess_98071, *[result_mod_98079], **kwargs_98080)
    
    
    
    # Obtaining the type of the subscript
    str_98082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1267, 15), 'str', 'dorestdoc')
    # Getting the type of 'options' (line 1267)
    options_98083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1267, 7), 'options')
    # Obtaining the member '__getitem__' of a type (line 1267)
    getitem___98084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1267, 7), options_98083, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1267)
    subscript_call_result_98085 = invoke(stypy.reporting.localization.Localization(__file__, 1267, 7), getitem___98084, str_98082)
    
    # Testing the type of an if condition (line 1267)
    if_condition_98086 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1267, 4), subscript_call_result_98085)
    # Assigning a type to the variable 'if_condition_98086' (line 1267)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1267, 4), 'if_condition_98086', if_condition_98086)
    # SSA begins for if statement (line 1267)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1268):
    
    # Assigning a Call to a Name (line 1268):
    
    # Call to join(...): (line 1268)
    # Processing the call arguments (line 1268)
    
    # Obtaining the type of the subscript
    str_98090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1269, 20), 'str', 'buildpath')
    # Getting the type of 'options' (line 1269)
    options_98091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1269, 12), 'options', False)
    # Obtaining the member '__getitem__' of a type (line 1269)
    getitem___98092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1269, 12), options_98091, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1269)
    subscript_call_result_98093 = invoke(stypy.reporting.localization.Localization(__file__, 1269, 12), getitem___98092, str_98090)
    
    
    # Obtaining the type of the subscript
    str_98094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1269, 38), 'str', 'modulename')
    # Getting the type of 'vrd' (line 1269)
    vrd_98095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1269, 34), 'vrd', False)
    # Obtaining the member '__getitem__' of a type (line 1269)
    getitem___98096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1269, 34), vrd_98095, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1269)
    subscript_call_result_98097 = invoke(stypy.reporting.localization.Localization(__file__, 1269, 34), getitem___98096, str_98094)
    
    str_98098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1269, 54), 'str', 'module.rest')
    # Applying the binary operator '+' (line 1269)
    result_add_98099 = python_operator(stypy.reporting.localization.Localization(__file__, 1269, 34), '+', subscript_call_result_98097, str_98098)
    
    # Processing the call keyword arguments (line 1268)
    kwargs_98100 = {}
    # Getting the type of 'os' (line 1268)
    os_98087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1268, 13), 'os', False)
    # Obtaining the member 'path' of a type (line 1268)
    path_98088 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1268, 13), os_98087, 'path')
    # Obtaining the member 'join' of a type (line 1268)
    join_98089 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1268, 13), path_98088, 'join')
    # Calling join(args, kwargs) (line 1268)
    join_call_result_98101 = invoke(stypy.reporting.localization.Localization(__file__, 1268, 13), join_98089, *[subscript_call_result_98093, result_add_98099], **kwargs_98100)
    
    # Assigning a type to the variable 'fn' (line 1268)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1268, 8), 'fn', join_call_result_98101)
    
    # Assigning a Call to a Name (line 1270):
    
    # Assigning a Call to a Name (line 1270):
    
    # Call to open(...): (line 1270)
    # Processing the call arguments (line 1270)
    # Getting the type of 'fn' (line 1270)
    fn_98103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1270, 17), 'fn', False)
    str_98104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1270, 21), 'str', 'w')
    # Processing the call keyword arguments (line 1270)
    kwargs_98105 = {}
    # Getting the type of 'open' (line 1270)
    open_98102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1270, 12), 'open', False)
    # Calling open(args, kwargs) (line 1270)
    open_call_result_98106 = invoke(stypy.reporting.localization.Localization(__file__, 1270, 12), open_98102, *[fn_98103, str_98104], **kwargs_98105)
    
    # Assigning a type to the variable 'f' (line 1270)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1270, 8), 'f', open_call_result_98106)
    
    # Call to write(...): (line 1271)
    # Processing the call arguments (line 1271)
    str_98109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1271, 16), 'str', '.. -*- rest -*-\n')
    # Processing the call keyword arguments (line 1271)
    kwargs_98110 = {}
    # Getting the type of 'f' (line 1271)
    f_98107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1271, 8), 'f', False)
    # Obtaining the member 'write' of a type (line 1271)
    write_98108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1271, 8), f_98107, 'write')
    # Calling write(args, kwargs) (line 1271)
    write_call_result_98111 = invoke(stypy.reporting.localization.Localization(__file__, 1271, 8), write_98108, *[str_98109], **kwargs_98110)
    
    
    # Call to write(...): (line 1272)
    # Processing the call arguments (line 1272)
    
    # Call to join(...): (line 1272)
    # Processing the call arguments (line 1272)
    
    # Obtaining the type of the subscript
    str_98116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1272, 29), 'str', 'restdoc')
    # Getting the type of 'ar' (line 1272)
    ar_98117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1272, 26), 'ar', False)
    # Obtaining the member '__getitem__' of a type (line 1272)
    getitem___98118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1272, 26), ar_98117, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1272)
    subscript_call_result_98119 = invoke(stypy.reporting.localization.Localization(__file__, 1272, 26), getitem___98118, str_98116)
    
    # Processing the call keyword arguments (line 1272)
    kwargs_98120 = {}
    str_98114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1272, 16), 'str', '\n')
    # Obtaining the member 'join' of a type (line 1272)
    join_98115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1272, 16), str_98114, 'join')
    # Calling join(args, kwargs) (line 1272)
    join_call_result_98121 = invoke(stypy.reporting.localization.Localization(__file__, 1272, 16), join_98115, *[subscript_call_result_98119], **kwargs_98120)
    
    # Processing the call keyword arguments (line 1272)
    kwargs_98122 = {}
    # Getting the type of 'f' (line 1272)
    f_98112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1272, 8), 'f', False)
    # Obtaining the member 'write' of a type (line 1272)
    write_98113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1272, 8), f_98112, 'write')
    # Calling write(args, kwargs) (line 1272)
    write_call_result_98123 = invoke(stypy.reporting.localization.Localization(__file__, 1272, 8), write_98113, *[join_call_result_98121], **kwargs_98122)
    
    
    # Call to close(...): (line 1273)
    # Processing the call keyword arguments (line 1273)
    kwargs_98126 = {}
    # Getting the type of 'f' (line 1273)
    f_98124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1273, 8), 'f', False)
    # Obtaining the member 'close' of a type (line 1273)
    close_98125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1273, 8), f_98124, 'close')
    # Calling close(args, kwargs) (line 1273)
    close_call_result_98127 = invoke(stypy.reporting.localization.Localization(__file__, 1273, 8), close_98125, *[], **kwargs_98126)
    
    
    # Call to outmess(...): (line 1274)
    # Processing the call arguments (line 1274)
    str_98129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1274, 16), 'str', '\tReST Documentation is saved to file "%s/%smodule.rest"\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1275)
    tuple_98130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1275, 17), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1275)
    # Adding element type (line 1275)
    
    # Obtaining the type of the subscript
    str_98131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1275, 25), 'str', 'buildpath')
    # Getting the type of 'options' (line 1275)
    options_98132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1275, 17), 'options', False)
    # Obtaining the member '__getitem__' of a type (line 1275)
    getitem___98133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1275, 17), options_98132, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1275)
    subscript_call_result_98134 = invoke(stypy.reporting.localization.Localization(__file__, 1275, 17), getitem___98133, str_98131)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1275, 17), tuple_98130, subscript_call_result_98134)
    # Adding element type (line 1275)
    
    # Obtaining the type of the subscript
    str_98135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1275, 43), 'str', 'modulename')
    # Getting the type of 'vrd' (line 1275)
    vrd_98136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1275, 39), 'vrd', False)
    # Obtaining the member '__getitem__' of a type (line 1275)
    getitem___98137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1275, 39), vrd_98136, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1275)
    subscript_call_result_98138 = invoke(stypy.reporting.localization.Localization(__file__, 1275, 39), getitem___98137, str_98135)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1275, 17), tuple_98130, subscript_call_result_98138)
    
    # Applying the binary operator '%' (line 1274)
    result_mod_98139 = python_operator(stypy.reporting.localization.Localization(__file__, 1274, 16), '%', str_98129, tuple_98130)
    
    # Processing the call keyword arguments (line 1274)
    kwargs_98140 = {}
    # Getting the type of 'outmess' (line 1274)
    outmess_98128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1274, 8), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1274)
    outmess_call_result_98141 = invoke(stypy.reporting.localization.Localization(__file__, 1274, 8), outmess_98128, *[result_mod_98139], **kwargs_98140)
    
    # SSA join for if statement (line 1267)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Obtaining the type of the subscript
    str_98142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1276, 15), 'str', 'dolatexdoc')
    # Getting the type of 'options' (line 1276)
    options_98143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1276, 7), 'options')
    # Obtaining the member '__getitem__' of a type (line 1276)
    getitem___98144 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1276, 7), options_98143, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1276)
    subscript_call_result_98145 = invoke(stypy.reporting.localization.Localization(__file__, 1276, 7), getitem___98144, str_98142)
    
    # Testing the type of an if condition (line 1276)
    if_condition_98146 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1276, 4), subscript_call_result_98145)
    # Assigning a type to the variable 'if_condition_98146' (line 1276)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1276, 4), 'if_condition_98146', if_condition_98146)
    # SSA begins for if statement (line 1276)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1277):
    
    # Assigning a Call to a Name (line 1277):
    
    # Call to join(...): (line 1277)
    # Processing the call arguments (line 1277)
    
    # Obtaining the type of the subscript
    str_98150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1278, 20), 'str', 'buildpath')
    # Getting the type of 'options' (line 1278)
    options_98151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1278, 12), 'options', False)
    # Obtaining the member '__getitem__' of a type (line 1278)
    getitem___98152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1278, 12), options_98151, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1278)
    subscript_call_result_98153 = invoke(stypy.reporting.localization.Localization(__file__, 1278, 12), getitem___98152, str_98150)
    
    
    # Obtaining the type of the subscript
    str_98154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1278, 38), 'str', 'modulename')
    # Getting the type of 'vrd' (line 1278)
    vrd_98155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1278, 34), 'vrd', False)
    # Obtaining the member '__getitem__' of a type (line 1278)
    getitem___98156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1278, 34), vrd_98155, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1278)
    subscript_call_result_98157 = invoke(stypy.reporting.localization.Localization(__file__, 1278, 34), getitem___98156, str_98154)
    
    str_98158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1278, 54), 'str', 'module.tex')
    # Applying the binary operator '+' (line 1278)
    result_add_98159 = python_operator(stypy.reporting.localization.Localization(__file__, 1278, 34), '+', subscript_call_result_98157, str_98158)
    
    # Processing the call keyword arguments (line 1277)
    kwargs_98160 = {}
    # Getting the type of 'os' (line 1277)
    os_98147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1277, 13), 'os', False)
    # Obtaining the member 'path' of a type (line 1277)
    path_98148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1277, 13), os_98147, 'path')
    # Obtaining the member 'join' of a type (line 1277)
    join_98149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1277, 13), path_98148, 'join')
    # Calling join(args, kwargs) (line 1277)
    join_call_result_98161 = invoke(stypy.reporting.localization.Localization(__file__, 1277, 13), join_98149, *[subscript_call_result_98153, result_add_98159], **kwargs_98160)
    
    # Assigning a type to the variable 'fn' (line 1277)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1277, 8), 'fn', join_call_result_98161)
    
    # Assigning a Name to a Subscript (line 1279):
    
    # Assigning a Name to a Subscript (line 1279):
    # Getting the type of 'fn' (line 1279)
    fn_98162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1279, 21), 'fn')
    # Getting the type of 'ret' (line 1279)
    ret_98163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1279, 8), 'ret')
    str_98164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1279, 12), 'str', 'ltx')
    # Storing an element on a container (line 1279)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1279, 8), ret_98163, (str_98164, fn_98162))
    
    # Assigning a Call to a Name (line 1280):
    
    # Assigning a Call to a Name (line 1280):
    
    # Call to open(...): (line 1280)
    # Processing the call arguments (line 1280)
    # Getting the type of 'fn' (line 1280)
    fn_98166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1280, 17), 'fn', False)
    str_98167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1280, 21), 'str', 'w')
    # Processing the call keyword arguments (line 1280)
    kwargs_98168 = {}
    # Getting the type of 'open' (line 1280)
    open_98165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1280, 12), 'open', False)
    # Calling open(args, kwargs) (line 1280)
    open_call_result_98169 = invoke(stypy.reporting.localization.Localization(__file__, 1280, 12), open_98165, *[fn_98166, str_98167], **kwargs_98168)
    
    # Assigning a type to the variable 'f' (line 1280)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1280, 8), 'f', open_call_result_98169)
    
    # Call to write(...): (line 1281)
    # Processing the call arguments (line 1281)
    str_98172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1282, 12), 'str', '%% This file is auto-generated with f2py (version:%s)\n')
    # Getting the type of 'f2py_version' (line 1282)
    f2py_version_98173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1282, 73), 'f2py_version', False)
    # Applying the binary operator '%' (line 1282)
    result_mod_98174 = python_operator(stypy.reporting.localization.Localization(__file__, 1282, 12), '%', str_98172, f2py_version_98173)
    
    # Processing the call keyword arguments (line 1281)
    kwargs_98175 = {}
    # Getting the type of 'f' (line 1281)
    f_98170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1281, 8), 'f', False)
    # Obtaining the member 'write' of a type (line 1281)
    write_98171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1281, 8), f_98170, 'write')
    # Calling write(args, kwargs) (line 1281)
    write_call_result_98176 = invoke(stypy.reporting.localization.Localization(__file__, 1281, 8), write_98171, *[result_mod_98174], **kwargs_98175)
    
    
    
    str_98177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1283, 11), 'str', 'shortlatex')
    # Getting the type of 'options' (line 1283)
    options_98178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1283, 31), 'options')
    # Applying the binary operator 'notin' (line 1283)
    result_contains_98179 = python_operator(stypy.reporting.localization.Localization(__file__, 1283, 11), 'notin', str_98177, options_98178)
    
    # Testing the type of an if condition (line 1283)
    if_condition_98180 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1283, 8), result_contains_98179)
    # Assigning a type to the variable 'if_condition_98180' (line 1283)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1283, 8), 'if_condition_98180', if_condition_98180)
    # SSA begins for if statement (line 1283)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to write(...): (line 1284)
    # Processing the call arguments (line 1284)
    str_98183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1285, 16), 'str', '\\documentclass{article}\n\\usepackage{a4wide}\n\\begin{document}\n\\tableofcontents\n\n')
    # Processing the call keyword arguments (line 1284)
    kwargs_98184 = {}
    # Getting the type of 'f' (line 1284)
    f_98181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1284, 12), 'f', False)
    # Obtaining the member 'write' of a type (line 1284)
    write_98182 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1284, 12), f_98181, 'write')
    # Calling write(args, kwargs) (line 1284)
    write_call_result_98185 = invoke(stypy.reporting.localization.Localization(__file__, 1284, 12), write_98182, *[str_98183], **kwargs_98184)
    
    # SSA join for if statement (line 1283)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to write(...): (line 1286)
    # Processing the call arguments (line 1286)
    
    # Call to join(...): (line 1286)
    # Processing the call arguments (line 1286)
    
    # Obtaining the type of the subscript
    str_98190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1286, 29), 'str', 'latexdoc')
    # Getting the type of 'ar' (line 1286)
    ar_98191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1286, 26), 'ar', False)
    # Obtaining the member '__getitem__' of a type (line 1286)
    getitem___98192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1286, 26), ar_98191, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1286)
    subscript_call_result_98193 = invoke(stypy.reporting.localization.Localization(__file__, 1286, 26), getitem___98192, str_98190)
    
    # Processing the call keyword arguments (line 1286)
    kwargs_98194 = {}
    str_98188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1286, 16), 'str', '\n')
    # Obtaining the member 'join' of a type (line 1286)
    join_98189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1286, 16), str_98188, 'join')
    # Calling join(args, kwargs) (line 1286)
    join_call_result_98195 = invoke(stypy.reporting.localization.Localization(__file__, 1286, 16), join_98189, *[subscript_call_result_98193], **kwargs_98194)
    
    # Processing the call keyword arguments (line 1286)
    kwargs_98196 = {}
    # Getting the type of 'f' (line 1286)
    f_98186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1286, 8), 'f', False)
    # Obtaining the member 'write' of a type (line 1286)
    write_98187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1286, 8), f_98186, 'write')
    # Calling write(args, kwargs) (line 1286)
    write_call_result_98197 = invoke(stypy.reporting.localization.Localization(__file__, 1286, 8), write_98187, *[join_call_result_98195], **kwargs_98196)
    
    
    
    str_98198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1287, 11), 'str', 'shortlatex')
    # Getting the type of 'options' (line 1287)
    options_98199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 31), 'options')
    # Applying the binary operator 'notin' (line 1287)
    result_contains_98200 = python_operator(stypy.reporting.localization.Localization(__file__, 1287, 11), 'notin', str_98198, options_98199)
    
    # Testing the type of an if condition (line 1287)
    if_condition_98201 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1287, 8), result_contains_98200)
    # Assigning a type to the variable 'if_condition_98201' (line 1287)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 8), 'if_condition_98201', if_condition_98201)
    # SSA begins for if statement (line 1287)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to write(...): (line 1288)
    # Processing the call arguments (line 1288)
    str_98204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1288, 20), 'str', '\\end{document}')
    # Processing the call keyword arguments (line 1288)
    kwargs_98205 = {}
    # Getting the type of 'f' (line 1288)
    f_98202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 12), 'f', False)
    # Obtaining the member 'write' of a type (line 1288)
    write_98203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1288, 12), f_98202, 'write')
    # Calling write(args, kwargs) (line 1288)
    write_call_result_98206 = invoke(stypy.reporting.localization.Localization(__file__, 1288, 12), write_98203, *[str_98204], **kwargs_98205)
    
    # SSA join for if statement (line 1287)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to close(...): (line 1289)
    # Processing the call keyword arguments (line 1289)
    kwargs_98209 = {}
    # Getting the type of 'f' (line 1289)
    f_98207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1289, 8), 'f', False)
    # Obtaining the member 'close' of a type (line 1289)
    close_98208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1289, 8), f_98207, 'close')
    # Calling close(args, kwargs) (line 1289)
    close_call_result_98210 = invoke(stypy.reporting.localization.Localization(__file__, 1289, 8), close_98208, *[], **kwargs_98209)
    
    
    # Call to outmess(...): (line 1290)
    # Processing the call arguments (line 1290)
    str_98212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1290, 16), 'str', '\tDocumentation is saved to file "%s/%smodule.tex"\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1291)
    tuple_98213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1291, 17), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1291)
    # Adding element type (line 1291)
    
    # Obtaining the type of the subscript
    str_98214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1291, 25), 'str', 'buildpath')
    # Getting the type of 'options' (line 1291)
    options_98215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1291, 17), 'options', False)
    # Obtaining the member '__getitem__' of a type (line 1291)
    getitem___98216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1291, 17), options_98215, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1291)
    subscript_call_result_98217 = invoke(stypy.reporting.localization.Localization(__file__, 1291, 17), getitem___98216, str_98214)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1291, 17), tuple_98213, subscript_call_result_98217)
    # Adding element type (line 1291)
    
    # Obtaining the type of the subscript
    str_98218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1291, 43), 'str', 'modulename')
    # Getting the type of 'vrd' (line 1291)
    vrd_98219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1291, 39), 'vrd', False)
    # Obtaining the member '__getitem__' of a type (line 1291)
    getitem___98220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1291, 39), vrd_98219, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1291)
    subscript_call_result_98221 = invoke(stypy.reporting.localization.Localization(__file__, 1291, 39), getitem___98220, str_98218)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1291, 17), tuple_98213, subscript_call_result_98221)
    
    # Applying the binary operator '%' (line 1290)
    result_mod_98222 = python_operator(stypy.reporting.localization.Localization(__file__, 1290, 16), '%', str_98212, tuple_98213)
    
    # Processing the call keyword arguments (line 1290)
    kwargs_98223 = {}
    # Getting the type of 'outmess' (line 1290)
    outmess_98211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1290, 8), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1290)
    outmess_call_result_98224 = invoke(stypy.reporting.localization.Localization(__file__, 1290, 8), outmess_98211, *[result_mod_98222], **kwargs_98223)
    
    # SSA join for if statement (line 1276)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'funcwrappers' (line 1292)
    funcwrappers_98225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1292, 7), 'funcwrappers')
    # Testing the type of an if condition (line 1292)
    if_condition_98226 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1292, 4), funcwrappers_98225)
    # Assigning a type to the variable 'if_condition_98226' (line 1292)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1292, 4), 'if_condition_98226', if_condition_98226)
    # SSA begins for if statement (line 1292)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1293):
    
    # Assigning a Call to a Name (line 1293):
    
    # Call to join(...): (line 1293)
    # Processing the call arguments (line 1293)
    
    # Obtaining the type of the subscript
    str_98230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1293, 34), 'str', 'buildpath')
    # Getting the type of 'options' (line 1293)
    options_98231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 26), 'options', False)
    # Obtaining the member '__getitem__' of a type (line 1293)
    getitem___98232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1293, 26), options_98231, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1293)
    subscript_call_result_98233 = invoke(stypy.reporting.localization.Localization(__file__, 1293, 26), getitem___98232, str_98230)
    
    
    # Obtaining the type of the subscript
    str_98234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1293, 52), 'str', 'f2py_wrapper_output')
    # Getting the type of 'vrd' (line 1293)
    vrd_98235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 48), 'vrd', False)
    # Obtaining the member '__getitem__' of a type (line 1293)
    getitem___98236 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1293, 48), vrd_98235, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1293)
    subscript_call_result_98237 = invoke(stypy.reporting.localization.Localization(__file__, 1293, 48), getitem___98236, str_98234)
    
    # Processing the call keyword arguments (line 1293)
    kwargs_98238 = {}
    # Getting the type of 'os' (line 1293)
    os_98227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 13), 'os', False)
    # Obtaining the member 'path' of a type (line 1293)
    path_98228 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1293, 13), os_98227, 'path')
    # Obtaining the member 'join' of a type (line 1293)
    join_98229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1293, 13), path_98228, 'join')
    # Calling join(args, kwargs) (line 1293)
    join_call_result_98239 = invoke(stypy.reporting.localization.Localization(__file__, 1293, 13), join_98229, *[subscript_call_result_98233, subscript_call_result_98237], **kwargs_98238)
    
    # Assigning a type to the variable 'wn' (line 1293)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1293, 8), 'wn', join_call_result_98239)
    
    # Assigning a Name to a Subscript (line 1294):
    
    # Assigning a Name to a Subscript (line 1294):
    # Getting the type of 'wn' (line 1294)
    wn_98240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1294, 22), 'wn')
    # Getting the type of 'ret' (line 1294)
    ret_98241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1294, 8), 'ret')
    str_98242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1294, 12), 'str', 'fsrc')
    # Storing an element on a container (line 1294)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1294, 8), ret_98241, (str_98242, wn_98240))
    
    # Assigning a Call to a Name (line 1295):
    
    # Assigning a Call to a Name (line 1295):
    
    # Call to open(...): (line 1295)
    # Processing the call arguments (line 1295)
    # Getting the type of 'wn' (line 1295)
    wn_98244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1295, 17), 'wn', False)
    str_98245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1295, 21), 'str', 'w')
    # Processing the call keyword arguments (line 1295)
    kwargs_98246 = {}
    # Getting the type of 'open' (line 1295)
    open_98243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1295, 12), 'open', False)
    # Calling open(args, kwargs) (line 1295)
    open_call_result_98247 = invoke(stypy.reporting.localization.Localization(__file__, 1295, 12), open_98243, *[wn_98244, str_98245], **kwargs_98246)
    
    # Assigning a type to the variable 'f' (line 1295)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1295, 8), 'f', open_call_result_98247)
    
    # Call to write(...): (line 1296)
    # Processing the call arguments (line 1296)
    str_98250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1296, 16), 'str', 'C     -*- fortran -*-\n')
    # Processing the call keyword arguments (line 1296)
    kwargs_98251 = {}
    # Getting the type of 'f' (line 1296)
    f_98248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1296, 8), 'f', False)
    # Obtaining the member 'write' of a type (line 1296)
    write_98249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1296, 8), f_98248, 'write')
    # Calling write(args, kwargs) (line 1296)
    write_call_result_98252 = invoke(stypy.reporting.localization.Localization(__file__, 1296, 8), write_98249, *[str_98250], **kwargs_98251)
    
    
    # Call to write(...): (line 1297)
    # Processing the call arguments (line 1297)
    str_98255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1298, 12), 'str', 'C     This file is autogenerated with f2py (version:%s)\n')
    # Getting the type of 'f2py_version' (line 1298)
    f2py_version_98256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1298, 75), 'f2py_version', False)
    # Applying the binary operator '%' (line 1298)
    result_mod_98257 = python_operator(stypy.reporting.localization.Localization(__file__, 1298, 12), '%', str_98255, f2py_version_98256)
    
    # Processing the call keyword arguments (line 1297)
    kwargs_98258 = {}
    # Getting the type of 'f' (line 1297)
    f_98253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 8), 'f', False)
    # Obtaining the member 'write' of a type (line 1297)
    write_98254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1297, 8), f_98253, 'write')
    # Calling write(args, kwargs) (line 1297)
    write_call_result_98259 = invoke(stypy.reporting.localization.Localization(__file__, 1297, 8), write_98254, *[result_mod_98257], **kwargs_98258)
    
    
    # Call to write(...): (line 1299)
    # Processing the call arguments (line 1299)
    str_98262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1300, 12), 'str', 'C     It contains Fortran 77 wrappers to fortran functions.\n')
    # Processing the call keyword arguments (line 1299)
    kwargs_98263 = {}
    # Getting the type of 'f' (line 1299)
    f_98260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 8), 'f', False)
    # Obtaining the member 'write' of a type (line 1299)
    write_98261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1299, 8), f_98260, 'write')
    # Calling write(args, kwargs) (line 1299)
    write_call_result_98264 = invoke(stypy.reporting.localization.Localization(__file__, 1299, 8), write_98261, *[str_98262], **kwargs_98263)
    
    
    # Assigning a List to a Name (line 1301):
    
    # Assigning a List to a Name (line 1301):
    
    # Obtaining an instance of the builtin type 'list' (line 1301)
    list_98265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1301, 16), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1301)
    
    # Assigning a type to the variable 'lines' (line 1301)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1301, 8), 'lines', list_98265)
    
    
    # Call to split(...): (line 1302)
    # Processing the call arguments (line 1302)
    str_98274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1302, 58), 'str', '\n')
    # Processing the call keyword arguments (line 1302)
    kwargs_98275 = {}
    
    # Call to join(...): (line 1302)
    # Processing the call arguments (line 1302)
    # Getting the type of 'funcwrappers' (line 1302)
    funcwrappers_98268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1302, 30), 'funcwrappers', False)
    # Processing the call keyword arguments (line 1302)
    kwargs_98269 = {}
    str_98266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1302, 18), 'str', '\n\n')
    # Obtaining the member 'join' of a type (line 1302)
    join_98267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1302, 18), str_98266, 'join')
    # Calling join(args, kwargs) (line 1302)
    join_call_result_98270 = invoke(stypy.reporting.localization.Localization(__file__, 1302, 18), join_98267, *[funcwrappers_98268], **kwargs_98269)
    
    str_98271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1302, 46), 'str', '\n')
    # Applying the binary operator '+' (line 1302)
    result_add_98272 = python_operator(stypy.reporting.localization.Localization(__file__, 1302, 18), '+', join_call_result_98270, str_98271)
    
    # Obtaining the member 'split' of a type (line 1302)
    split_98273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1302, 18), result_add_98272, 'split')
    # Calling split(args, kwargs) (line 1302)
    split_call_result_98276 = invoke(stypy.reporting.localization.Localization(__file__, 1302, 18), split_98273, *[str_98274], **kwargs_98275)
    
    # Testing the type of a for loop iterable (line 1302)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1302, 8), split_call_result_98276)
    # Getting the type of the for loop variable (line 1302)
    for_loop_var_98277 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1302, 8), split_call_result_98276)
    # Assigning a type to the variable 'l' (line 1302)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1302, 8), 'l', for_loop_var_98277)
    # SSA begins for a for statement (line 1302)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    # Getting the type of 'l' (line 1303)
    l_98278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1303, 15), 'l')
    
    
    # Obtaining the type of the subscript
    int_98279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1303, 23), 'int')
    # Getting the type of 'l' (line 1303)
    l_98280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1303, 21), 'l')
    # Obtaining the member '__getitem__' of a type (line 1303)
    getitem___98281 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1303, 21), l_98280, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1303)
    subscript_call_result_98282 = invoke(stypy.reporting.localization.Localization(__file__, 1303, 21), getitem___98281, int_98279)
    
    str_98283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1303, 29), 'str', ' ')
    # Applying the binary operator '==' (line 1303)
    result_eq_98284 = python_operator(stypy.reporting.localization.Localization(__file__, 1303, 21), '==', subscript_call_result_98282, str_98283)
    
    # Applying the binary operator 'and' (line 1303)
    result_and_keyword_98285 = python_operator(stypy.reporting.localization.Localization(__file__, 1303, 15), 'and', l_98278, result_eq_98284)
    
    # Testing the type of an if condition (line 1303)
    if_condition_98286 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1303, 12), result_and_keyword_98285)
    # Assigning a type to the variable 'if_condition_98286' (line 1303)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1303, 12), 'if_condition_98286', if_condition_98286)
    # SSA begins for if statement (line 1303)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Call to len(...): (line 1304)
    # Processing the call arguments (line 1304)
    # Getting the type of 'l' (line 1304)
    l_98288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1304, 26), 'l', False)
    # Processing the call keyword arguments (line 1304)
    kwargs_98289 = {}
    # Getting the type of 'len' (line 1304)
    len_98287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1304, 22), 'len', False)
    # Calling len(args, kwargs) (line 1304)
    len_call_result_98290 = invoke(stypy.reporting.localization.Localization(__file__, 1304, 22), len_98287, *[l_98288], **kwargs_98289)
    
    int_98291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1304, 32), 'int')
    # Applying the binary operator '>=' (line 1304)
    result_ge_98292 = python_operator(stypy.reporting.localization.Localization(__file__, 1304, 22), '>=', len_call_result_98290, int_98291)
    
    # Testing the type of an if condition (line 1304)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1304, 16), result_ge_98292)
    # SSA begins for while statement (line 1304)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    # Call to append(...): (line 1305)
    # Processing the call arguments (line 1305)
    
    # Obtaining the type of the subscript
    int_98295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1305, 36), 'int')
    slice_98296 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1305, 33), None, int_98295, None)
    # Getting the type of 'l' (line 1305)
    l_98297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 33), 'l', False)
    # Obtaining the member '__getitem__' of a type (line 1305)
    getitem___98298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1305, 33), l_98297, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1305)
    subscript_call_result_98299 = invoke(stypy.reporting.localization.Localization(__file__, 1305, 33), getitem___98298, slice_98296)
    
    str_98300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1305, 42), 'str', '\n     &')
    # Applying the binary operator '+' (line 1305)
    result_add_98301 = python_operator(stypy.reporting.localization.Localization(__file__, 1305, 33), '+', subscript_call_result_98299, str_98300)
    
    # Processing the call keyword arguments (line 1305)
    kwargs_98302 = {}
    # Getting the type of 'lines' (line 1305)
    lines_98293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 20), 'lines', False)
    # Obtaining the member 'append' of a type (line 1305)
    append_98294 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1305, 20), lines_98293, 'append')
    # Calling append(args, kwargs) (line 1305)
    append_call_result_98303 = invoke(stypy.reporting.localization.Localization(__file__, 1305, 20), append_98294, *[result_add_98301], **kwargs_98302)
    
    
    # Assigning a Subscript to a Name (line 1306):
    
    # Assigning a Subscript to a Name (line 1306):
    
    # Obtaining the type of the subscript
    int_98304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1306, 26), 'int')
    slice_98305 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1306, 24), int_98304, None, None)
    # Getting the type of 'l' (line 1306)
    l_98306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1306, 24), 'l')
    # Obtaining the member '__getitem__' of a type (line 1306)
    getitem___98307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1306, 24), l_98306, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1306)
    subscript_call_result_98308 = invoke(stypy.reporting.localization.Localization(__file__, 1306, 24), getitem___98307, slice_98305)
    
    # Assigning a type to the variable 'l' (line 1306)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1306, 20), 'l', subscript_call_result_98308)
    # SSA join for while statement (line 1304)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 1307)
    # Processing the call arguments (line 1307)
    # Getting the type of 'l' (line 1307)
    l_98311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1307, 29), 'l', False)
    str_98312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1307, 33), 'str', '\n')
    # Applying the binary operator '+' (line 1307)
    result_add_98313 = python_operator(stypy.reporting.localization.Localization(__file__, 1307, 29), '+', l_98311, str_98312)
    
    # Processing the call keyword arguments (line 1307)
    kwargs_98314 = {}
    # Getting the type of 'lines' (line 1307)
    lines_98309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1307, 16), 'lines', False)
    # Obtaining the member 'append' of a type (line 1307)
    append_98310 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1307, 16), lines_98309, 'append')
    # Calling append(args, kwargs) (line 1307)
    append_call_result_98315 = invoke(stypy.reporting.localization.Localization(__file__, 1307, 16), append_98310, *[result_add_98313], **kwargs_98314)
    
    # SSA branch for the else part of an if statement (line 1303)
    module_type_store.open_ssa_branch('else')
    
    # Call to append(...): (line 1309)
    # Processing the call arguments (line 1309)
    # Getting the type of 'l' (line 1309)
    l_98318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1309, 29), 'l', False)
    str_98319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1309, 33), 'str', '\n')
    # Applying the binary operator '+' (line 1309)
    result_add_98320 = python_operator(stypy.reporting.localization.Localization(__file__, 1309, 29), '+', l_98318, str_98319)
    
    # Processing the call keyword arguments (line 1309)
    kwargs_98321 = {}
    # Getting the type of 'lines' (line 1309)
    lines_98316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1309, 16), 'lines', False)
    # Obtaining the member 'append' of a type (line 1309)
    append_98317 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1309, 16), lines_98316, 'append')
    # Calling append(args, kwargs) (line 1309)
    append_call_result_98322 = invoke(stypy.reporting.localization.Localization(__file__, 1309, 16), append_98317, *[result_add_98320], **kwargs_98321)
    
    # SSA join for if statement (line 1303)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1310):
    
    # Assigning a Call to a Name (line 1310):
    
    # Call to replace(...): (line 1310)
    # Processing the call arguments (line 1310)
    str_98329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1310, 39), 'str', '\n     &\n')
    str_98330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1310, 53), 'str', '\n')
    # Processing the call keyword arguments (line 1310)
    kwargs_98331 = {}
    
    # Call to join(...): (line 1310)
    # Processing the call arguments (line 1310)
    # Getting the type of 'lines' (line 1310)
    lines_98325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1310, 24), 'lines', False)
    # Processing the call keyword arguments (line 1310)
    kwargs_98326 = {}
    str_98323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1310, 16), 'str', '')
    # Obtaining the member 'join' of a type (line 1310)
    join_98324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1310, 16), str_98323, 'join')
    # Calling join(args, kwargs) (line 1310)
    join_call_result_98327 = invoke(stypy.reporting.localization.Localization(__file__, 1310, 16), join_98324, *[lines_98325], **kwargs_98326)
    
    # Obtaining the member 'replace' of a type (line 1310)
    replace_98328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1310, 16), join_call_result_98327, 'replace')
    # Calling replace(args, kwargs) (line 1310)
    replace_call_result_98332 = invoke(stypy.reporting.localization.Localization(__file__, 1310, 16), replace_98328, *[str_98329, str_98330], **kwargs_98331)
    
    # Assigning a type to the variable 'lines' (line 1310)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1310, 8), 'lines', replace_call_result_98332)
    
    # Call to write(...): (line 1311)
    # Processing the call arguments (line 1311)
    # Getting the type of 'lines' (line 1311)
    lines_98335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 16), 'lines', False)
    # Processing the call keyword arguments (line 1311)
    kwargs_98336 = {}
    # Getting the type of 'f' (line 1311)
    f_98333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 8), 'f', False)
    # Obtaining the member 'write' of a type (line 1311)
    write_98334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1311, 8), f_98333, 'write')
    # Calling write(args, kwargs) (line 1311)
    write_call_result_98337 = invoke(stypy.reporting.localization.Localization(__file__, 1311, 8), write_98334, *[lines_98335], **kwargs_98336)
    
    
    # Call to close(...): (line 1312)
    # Processing the call keyword arguments (line 1312)
    kwargs_98340 = {}
    # Getting the type of 'f' (line 1312)
    f_98338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1312, 8), 'f', False)
    # Obtaining the member 'close' of a type (line 1312)
    close_98339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1312, 8), f_98338, 'close')
    # Calling close(args, kwargs) (line 1312)
    close_call_result_98341 = invoke(stypy.reporting.localization.Localization(__file__, 1312, 8), close_98339, *[], **kwargs_98340)
    
    
    # Call to outmess(...): (line 1313)
    # Processing the call arguments (line 1313)
    str_98343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1313, 16), 'str', '\tFortran 77 wrappers are saved to "%s"\n')
    # Getting the type of 'wn' (line 1313)
    wn_98344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1313, 63), 'wn', False)
    # Applying the binary operator '%' (line 1313)
    result_mod_98345 = python_operator(stypy.reporting.localization.Localization(__file__, 1313, 16), '%', str_98343, wn_98344)
    
    # Processing the call keyword arguments (line 1313)
    kwargs_98346 = {}
    # Getting the type of 'outmess' (line 1313)
    outmess_98342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1313, 8), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1313)
    outmess_call_result_98347 = invoke(stypy.reporting.localization.Localization(__file__, 1313, 8), outmess_98342, *[result_mod_98345], **kwargs_98346)
    
    # SSA join for if statement (line 1292)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'funcwrappers2' (line 1314)
    funcwrappers2_98348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1314, 7), 'funcwrappers2')
    # Testing the type of an if condition (line 1314)
    if_condition_98349 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1314, 4), funcwrappers2_98348)
    # Assigning a type to the variable 'if_condition_98349' (line 1314)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1314, 4), 'if_condition_98349', if_condition_98349)
    # SSA begins for if statement (line 1314)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1315):
    
    # Assigning a Call to a Name (line 1315):
    
    # Call to join(...): (line 1315)
    # Processing the call arguments (line 1315)
    
    # Obtaining the type of the subscript
    str_98353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1316, 20), 'str', 'buildpath')
    # Getting the type of 'options' (line 1316)
    options_98354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1316, 12), 'options', False)
    # Obtaining the member '__getitem__' of a type (line 1316)
    getitem___98355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1316, 12), options_98354, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1316)
    subscript_call_result_98356 = invoke(stypy.reporting.localization.Localization(__file__, 1316, 12), getitem___98355, str_98353)
    
    str_98357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1316, 34), 'str', '%s-f2pywrappers2.f90')
    
    # Obtaining the type of the subscript
    str_98358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1316, 64), 'str', 'modulename')
    # Getting the type of 'vrd' (line 1316)
    vrd_98359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1316, 60), 'vrd', False)
    # Obtaining the member '__getitem__' of a type (line 1316)
    getitem___98360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1316, 60), vrd_98359, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1316)
    subscript_call_result_98361 = invoke(stypy.reporting.localization.Localization(__file__, 1316, 60), getitem___98360, str_98358)
    
    # Applying the binary operator '%' (line 1316)
    result_mod_98362 = python_operator(stypy.reporting.localization.Localization(__file__, 1316, 34), '%', str_98357, subscript_call_result_98361)
    
    # Processing the call keyword arguments (line 1315)
    kwargs_98363 = {}
    # Getting the type of 'os' (line 1315)
    os_98350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1315, 13), 'os', False)
    # Obtaining the member 'path' of a type (line 1315)
    path_98351 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1315, 13), os_98350, 'path')
    # Obtaining the member 'join' of a type (line 1315)
    join_98352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1315, 13), path_98351, 'join')
    # Calling join(args, kwargs) (line 1315)
    join_call_result_98364 = invoke(stypy.reporting.localization.Localization(__file__, 1315, 13), join_98352, *[subscript_call_result_98356, result_mod_98362], **kwargs_98363)
    
    # Assigning a type to the variable 'wn' (line 1315)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1315, 8), 'wn', join_call_result_98364)
    
    # Assigning a Name to a Subscript (line 1317):
    
    # Assigning a Name to a Subscript (line 1317):
    # Getting the type of 'wn' (line 1317)
    wn_98365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1317, 22), 'wn')
    # Getting the type of 'ret' (line 1317)
    ret_98366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1317, 8), 'ret')
    str_98367 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1317, 12), 'str', 'fsrc')
    # Storing an element on a container (line 1317)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1317, 8), ret_98366, (str_98367, wn_98365))
    
    # Assigning a Call to a Name (line 1318):
    
    # Assigning a Call to a Name (line 1318):
    
    # Call to open(...): (line 1318)
    # Processing the call arguments (line 1318)
    # Getting the type of 'wn' (line 1318)
    wn_98369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1318, 17), 'wn', False)
    str_98370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1318, 21), 'str', 'w')
    # Processing the call keyword arguments (line 1318)
    kwargs_98371 = {}
    # Getting the type of 'open' (line 1318)
    open_98368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1318, 12), 'open', False)
    # Calling open(args, kwargs) (line 1318)
    open_call_result_98372 = invoke(stypy.reporting.localization.Localization(__file__, 1318, 12), open_98368, *[wn_98369, str_98370], **kwargs_98371)
    
    # Assigning a type to the variable 'f' (line 1318)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1318, 8), 'f', open_call_result_98372)
    
    # Call to write(...): (line 1319)
    # Processing the call arguments (line 1319)
    str_98375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1319, 16), 'str', '!     -*- f90 -*-\n')
    # Processing the call keyword arguments (line 1319)
    kwargs_98376 = {}
    # Getting the type of 'f' (line 1319)
    f_98373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1319, 8), 'f', False)
    # Obtaining the member 'write' of a type (line 1319)
    write_98374 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1319, 8), f_98373, 'write')
    # Calling write(args, kwargs) (line 1319)
    write_call_result_98377 = invoke(stypy.reporting.localization.Localization(__file__, 1319, 8), write_98374, *[str_98375], **kwargs_98376)
    
    
    # Call to write(...): (line 1320)
    # Processing the call arguments (line 1320)
    str_98380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1321, 12), 'str', '!     This file is autogenerated with f2py (version:%s)\n')
    # Getting the type of 'f2py_version' (line 1321)
    f2py_version_98381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1321, 75), 'f2py_version', False)
    # Applying the binary operator '%' (line 1321)
    result_mod_98382 = python_operator(stypy.reporting.localization.Localization(__file__, 1321, 12), '%', str_98380, f2py_version_98381)
    
    # Processing the call keyword arguments (line 1320)
    kwargs_98383 = {}
    # Getting the type of 'f' (line 1320)
    f_98378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1320, 8), 'f', False)
    # Obtaining the member 'write' of a type (line 1320)
    write_98379 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1320, 8), f_98378, 'write')
    # Calling write(args, kwargs) (line 1320)
    write_call_result_98384 = invoke(stypy.reporting.localization.Localization(__file__, 1320, 8), write_98379, *[result_mod_98382], **kwargs_98383)
    
    
    # Call to write(...): (line 1322)
    # Processing the call arguments (line 1322)
    str_98387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1323, 12), 'str', '!     It contains Fortran 90 wrappers to fortran functions.\n')
    # Processing the call keyword arguments (line 1322)
    kwargs_98388 = {}
    # Getting the type of 'f' (line 1322)
    f_98385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1322, 8), 'f', False)
    # Obtaining the member 'write' of a type (line 1322)
    write_98386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1322, 8), f_98385, 'write')
    # Calling write(args, kwargs) (line 1322)
    write_call_result_98389 = invoke(stypy.reporting.localization.Localization(__file__, 1322, 8), write_98386, *[str_98387], **kwargs_98388)
    
    
    # Assigning a List to a Name (line 1324):
    
    # Assigning a List to a Name (line 1324):
    
    # Obtaining an instance of the builtin type 'list' (line 1324)
    list_98390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1324, 16), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1324)
    
    # Assigning a type to the variable 'lines' (line 1324)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1324, 8), 'lines', list_98390)
    
    
    # Call to split(...): (line 1325)
    # Processing the call arguments (line 1325)
    str_98399 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1325, 59), 'str', '\n')
    # Processing the call keyword arguments (line 1325)
    kwargs_98400 = {}
    
    # Call to join(...): (line 1325)
    # Processing the call arguments (line 1325)
    # Getting the type of 'funcwrappers2' (line 1325)
    funcwrappers2_98393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1325, 30), 'funcwrappers2', False)
    # Processing the call keyword arguments (line 1325)
    kwargs_98394 = {}
    str_98391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1325, 18), 'str', '\n\n')
    # Obtaining the member 'join' of a type (line 1325)
    join_98392 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1325, 18), str_98391, 'join')
    # Calling join(args, kwargs) (line 1325)
    join_call_result_98395 = invoke(stypy.reporting.localization.Localization(__file__, 1325, 18), join_98392, *[funcwrappers2_98393], **kwargs_98394)
    
    str_98396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1325, 47), 'str', '\n')
    # Applying the binary operator '+' (line 1325)
    result_add_98397 = python_operator(stypy.reporting.localization.Localization(__file__, 1325, 18), '+', join_call_result_98395, str_98396)
    
    # Obtaining the member 'split' of a type (line 1325)
    split_98398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1325, 18), result_add_98397, 'split')
    # Calling split(args, kwargs) (line 1325)
    split_call_result_98401 = invoke(stypy.reporting.localization.Localization(__file__, 1325, 18), split_98398, *[str_98399], **kwargs_98400)
    
    # Testing the type of a for loop iterable (line 1325)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1325, 8), split_call_result_98401)
    # Getting the type of the for loop variable (line 1325)
    for_loop_var_98402 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1325, 8), split_call_result_98401)
    # Assigning a type to the variable 'l' (line 1325)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1325, 8), 'l', for_loop_var_98402)
    # SSA begins for a for statement (line 1325)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    
    # Call to len(...): (line 1326)
    # Processing the call arguments (line 1326)
    # Getting the type of 'l' (line 1326)
    l_98404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1326, 19), 'l', False)
    # Processing the call keyword arguments (line 1326)
    kwargs_98405 = {}
    # Getting the type of 'len' (line 1326)
    len_98403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1326, 15), 'len', False)
    # Calling len(args, kwargs) (line 1326)
    len_call_result_98406 = invoke(stypy.reporting.localization.Localization(__file__, 1326, 15), len_98403, *[l_98404], **kwargs_98405)
    
    int_98407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1326, 24), 'int')
    # Applying the binary operator '>' (line 1326)
    result_gt_98408 = python_operator(stypy.reporting.localization.Localization(__file__, 1326, 15), '>', len_call_result_98406, int_98407)
    
    
    
    # Obtaining the type of the subscript
    int_98409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1326, 33), 'int')
    # Getting the type of 'l' (line 1326)
    l_98410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1326, 31), 'l')
    # Obtaining the member '__getitem__' of a type (line 1326)
    getitem___98411 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1326, 31), l_98410, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1326)
    subscript_call_result_98412 = invoke(stypy.reporting.localization.Localization(__file__, 1326, 31), getitem___98411, int_98409)
    
    str_98413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1326, 39), 'str', ' ')
    # Applying the binary operator '==' (line 1326)
    result_eq_98414 = python_operator(stypy.reporting.localization.Localization(__file__, 1326, 31), '==', subscript_call_result_98412, str_98413)
    
    # Applying the binary operator 'and' (line 1326)
    result_and_keyword_98415 = python_operator(stypy.reporting.localization.Localization(__file__, 1326, 15), 'and', result_gt_98408, result_eq_98414)
    
    # Testing the type of an if condition (line 1326)
    if_condition_98416 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1326, 12), result_and_keyword_98415)
    # Assigning a type to the variable 'if_condition_98416' (line 1326)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1326, 12), 'if_condition_98416', if_condition_98416)
    # SSA begins for if statement (line 1326)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1327)
    # Processing the call arguments (line 1327)
    
    # Obtaining the type of the subscript
    int_98419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1327, 32), 'int')
    slice_98420 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1327, 29), None, int_98419, None)
    # Getting the type of 'l' (line 1327)
    l_98421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1327, 29), 'l', False)
    # Obtaining the member '__getitem__' of a type (line 1327)
    getitem___98422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1327, 29), l_98421, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1327)
    subscript_call_result_98423 = invoke(stypy.reporting.localization.Localization(__file__, 1327, 29), getitem___98422, slice_98420)
    
    str_98424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1327, 38), 'str', '&\n     &')
    # Applying the binary operator '+' (line 1327)
    result_add_98425 = python_operator(stypy.reporting.localization.Localization(__file__, 1327, 29), '+', subscript_call_result_98423, str_98424)
    
    # Processing the call keyword arguments (line 1327)
    kwargs_98426 = {}
    # Getting the type of 'lines' (line 1327)
    lines_98417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1327, 16), 'lines', False)
    # Obtaining the member 'append' of a type (line 1327)
    append_98418 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1327, 16), lines_98417, 'append')
    # Calling append(args, kwargs) (line 1327)
    append_call_result_98427 = invoke(stypy.reporting.localization.Localization(__file__, 1327, 16), append_98418, *[result_add_98425], **kwargs_98426)
    
    
    # Assigning a Subscript to a Name (line 1328):
    
    # Assigning a Subscript to a Name (line 1328):
    
    # Obtaining the type of the subscript
    int_98428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1328, 22), 'int')
    slice_98429 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1328, 20), int_98428, None, None)
    # Getting the type of 'l' (line 1328)
    l_98430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1328, 20), 'l')
    # Obtaining the member '__getitem__' of a type (line 1328)
    getitem___98431 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1328, 20), l_98430, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1328)
    subscript_call_result_98432 = invoke(stypy.reporting.localization.Localization(__file__, 1328, 20), getitem___98431, slice_98429)
    
    # Assigning a type to the variable 'l' (line 1328)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1328, 16), 'l', subscript_call_result_98432)
    
    
    
    # Call to len(...): (line 1329)
    # Processing the call arguments (line 1329)
    # Getting the type of 'l' (line 1329)
    l_98434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1329, 26), 'l', False)
    # Processing the call keyword arguments (line 1329)
    kwargs_98435 = {}
    # Getting the type of 'len' (line 1329)
    len_98433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1329, 22), 'len', False)
    # Calling len(args, kwargs) (line 1329)
    len_call_result_98436 = invoke(stypy.reporting.localization.Localization(__file__, 1329, 22), len_98433, *[l_98434], **kwargs_98435)
    
    int_98437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1329, 31), 'int')
    # Applying the binary operator '>' (line 1329)
    result_gt_98438 = python_operator(stypy.reporting.localization.Localization(__file__, 1329, 22), '>', len_call_result_98436, int_98437)
    
    # Testing the type of an if condition (line 1329)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1329, 16), result_gt_98438)
    # SSA begins for while statement (line 1329)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    # Call to append(...): (line 1330)
    # Processing the call arguments (line 1330)
    
    # Obtaining the type of the subscript
    int_98441 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1330, 36), 'int')
    slice_98442 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1330, 33), None, int_98441, None)
    # Getting the type of 'l' (line 1330)
    l_98443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1330, 33), 'l', False)
    # Obtaining the member '__getitem__' of a type (line 1330)
    getitem___98444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1330, 33), l_98443, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1330)
    subscript_call_result_98445 = invoke(stypy.reporting.localization.Localization(__file__, 1330, 33), getitem___98444, slice_98442)
    
    str_98446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1330, 42), 'str', '&\n     &')
    # Applying the binary operator '+' (line 1330)
    result_add_98447 = python_operator(stypy.reporting.localization.Localization(__file__, 1330, 33), '+', subscript_call_result_98445, str_98446)
    
    # Processing the call keyword arguments (line 1330)
    kwargs_98448 = {}
    # Getting the type of 'lines' (line 1330)
    lines_98439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1330, 20), 'lines', False)
    # Obtaining the member 'append' of a type (line 1330)
    append_98440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1330, 20), lines_98439, 'append')
    # Calling append(args, kwargs) (line 1330)
    append_call_result_98449 = invoke(stypy.reporting.localization.Localization(__file__, 1330, 20), append_98440, *[result_add_98447], **kwargs_98448)
    
    
    # Assigning a Subscript to a Name (line 1331):
    
    # Assigning a Subscript to a Name (line 1331):
    
    # Obtaining the type of the subscript
    int_98450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1331, 26), 'int')
    slice_98451 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1331, 24), int_98450, None, None)
    # Getting the type of 'l' (line 1331)
    l_98452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1331, 24), 'l')
    # Obtaining the member '__getitem__' of a type (line 1331)
    getitem___98453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1331, 24), l_98452, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1331)
    subscript_call_result_98454 = invoke(stypy.reporting.localization.Localization(__file__, 1331, 24), getitem___98453, slice_98451)
    
    # Assigning a type to the variable 'l' (line 1331)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1331, 20), 'l', subscript_call_result_98454)
    # SSA join for while statement (line 1329)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 1332)
    # Processing the call arguments (line 1332)
    # Getting the type of 'l' (line 1332)
    l_98457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 29), 'l', False)
    str_98458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1332, 33), 'str', '\n')
    # Applying the binary operator '+' (line 1332)
    result_add_98459 = python_operator(stypy.reporting.localization.Localization(__file__, 1332, 29), '+', l_98457, str_98458)
    
    # Processing the call keyword arguments (line 1332)
    kwargs_98460 = {}
    # Getting the type of 'lines' (line 1332)
    lines_98455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 16), 'lines', False)
    # Obtaining the member 'append' of a type (line 1332)
    append_98456 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1332, 16), lines_98455, 'append')
    # Calling append(args, kwargs) (line 1332)
    append_call_result_98461 = invoke(stypy.reporting.localization.Localization(__file__, 1332, 16), append_98456, *[result_add_98459], **kwargs_98460)
    
    # SSA branch for the else part of an if statement (line 1326)
    module_type_store.open_ssa_branch('else')
    
    # Call to append(...): (line 1334)
    # Processing the call arguments (line 1334)
    # Getting the type of 'l' (line 1334)
    l_98464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1334, 29), 'l', False)
    str_98465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1334, 33), 'str', '\n')
    # Applying the binary operator '+' (line 1334)
    result_add_98466 = python_operator(stypy.reporting.localization.Localization(__file__, 1334, 29), '+', l_98464, str_98465)
    
    # Processing the call keyword arguments (line 1334)
    kwargs_98467 = {}
    # Getting the type of 'lines' (line 1334)
    lines_98462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1334, 16), 'lines', False)
    # Obtaining the member 'append' of a type (line 1334)
    append_98463 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1334, 16), lines_98462, 'append')
    # Calling append(args, kwargs) (line 1334)
    append_call_result_98468 = invoke(stypy.reporting.localization.Localization(__file__, 1334, 16), append_98463, *[result_add_98466], **kwargs_98467)
    
    # SSA join for if statement (line 1326)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1335):
    
    # Assigning a Call to a Name (line 1335):
    
    # Call to replace(...): (line 1335)
    # Processing the call arguments (line 1335)
    str_98475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1335, 39), 'str', '\n     &\n')
    str_98476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1335, 53), 'str', '\n')
    # Processing the call keyword arguments (line 1335)
    kwargs_98477 = {}
    
    # Call to join(...): (line 1335)
    # Processing the call arguments (line 1335)
    # Getting the type of 'lines' (line 1335)
    lines_98471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1335, 24), 'lines', False)
    # Processing the call keyword arguments (line 1335)
    kwargs_98472 = {}
    str_98469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1335, 16), 'str', '')
    # Obtaining the member 'join' of a type (line 1335)
    join_98470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1335, 16), str_98469, 'join')
    # Calling join(args, kwargs) (line 1335)
    join_call_result_98473 = invoke(stypy.reporting.localization.Localization(__file__, 1335, 16), join_98470, *[lines_98471], **kwargs_98472)
    
    # Obtaining the member 'replace' of a type (line 1335)
    replace_98474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1335, 16), join_call_result_98473, 'replace')
    # Calling replace(args, kwargs) (line 1335)
    replace_call_result_98478 = invoke(stypy.reporting.localization.Localization(__file__, 1335, 16), replace_98474, *[str_98475, str_98476], **kwargs_98477)
    
    # Assigning a type to the variable 'lines' (line 1335)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1335, 8), 'lines', replace_call_result_98478)
    
    # Call to write(...): (line 1336)
    # Processing the call arguments (line 1336)
    # Getting the type of 'lines' (line 1336)
    lines_98481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1336, 16), 'lines', False)
    # Processing the call keyword arguments (line 1336)
    kwargs_98482 = {}
    # Getting the type of 'f' (line 1336)
    f_98479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1336, 8), 'f', False)
    # Obtaining the member 'write' of a type (line 1336)
    write_98480 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1336, 8), f_98479, 'write')
    # Calling write(args, kwargs) (line 1336)
    write_call_result_98483 = invoke(stypy.reporting.localization.Localization(__file__, 1336, 8), write_98480, *[lines_98481], **kwargs_98482)
    
    
    # Call to close(...): (line 1337)
    # Processing the call keyword arguments (line 1337)
    kwargs_98486 = {}
    # Getting the type of 'f' (line 1337)
    f_98484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1337, 8), 'f', False)
    # Obtaining the member 'close' of a type (line 1337)
    close_98485 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1337, 8), f_98484, 'close')
    # Calling close(args, kwargs) (line 1337)
    close_call_result_98487 = invoke(stypy.reporting.localization.Localization(__file__, 1337, 8), close_98485, *[], **kwargs_98486)
    
    
    # Call to outmess(...): (line 1338)
    # Processing the call arguments (line 1338)
    str_98489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1338, 16), 'str', '\tFortran 90 wrappers are saved to "%s"\n')
    # Getting the type of 'wn' (line 1338)
    wn_98490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1338, 63), 'wn', False)
    # Applying the binary operator '%' (line 1338)
    result_mod_98491 = python_operator(stypy.reporting.localization.Localization(__file__, 1338, 16), '%', str_98489, wn_98490)
    
    # Processing the call keyword arguments (line 1338)
    kwargs_98492 = {}
    # Getting the type of 'outmess' (line 1338)
    outmess_98488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1338, 8), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1338)
    outmess_call_result_98493 = invoke(stypy.reporting.localization.Localization(__file__, 1338, 8), outmess_98488, *[result_mod_98491], **kwargs_98492)
    
    # SSA join for if statement (line 1314)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'ret' (line 1339)
    ret_98494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1339, 11), 'ret')
    # Assigning a type to the variable 'stypy_return_type' (line 1339)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1339, 4), 'stypy_return_type', ret_98494)
    
    # ################# End of 'buildmodule(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'buildmodule' in the type store
    # Getting the type of 'stypy_return_type' (line 1160)
    stypy_return_type_98495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1160, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_98495)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'buildmodule'
    return stypy_return_type_98495

# Assigning a type to the variable 'buildmodule' (line 1160)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1160, 0), 'buildmodule', buildmodule)

# Assigning a Dict to a Name (line 1343):

# Assigning a Dict to a Name (line 1343):

# Obtaining an instance of the builtin type 'dict' (line 1343)
dict_98496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1343, 7), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1343)
# Adding element type (key, value) (line 1343)
int_98497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1343, 8), 'int')
str_98498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1343, 11), 'str', 'st')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 7), dict_98496, (int_98497, str_98498))
# Adding element type (key, value) (line 1343)
int_98499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1343, 17), 'int')
str_98500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1343, 20), 'str', 'nd')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 7), dict_98496, (int_98499, str_98500))
# Adding element type (key, value) (line 1343)
int_98501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1343, 26), 'int')
str_98502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1343, 29), 'str', 'rd')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 7), dict_98496, (int_98501, str_98502))
# Adding element type (key, value) (line 1343)
int_98503 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1343, 35), 'int')
str_98504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1343, 38), 'str', 'th')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 7), dict_98496, (int_98503, str_98504))
# Adding element type (key, value) (line 1343)
int_98505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1343, 44), 'int')
str_98506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1343, 47), 'str', 'th')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 7), dict_98496, (int_98505, str_98506))
# Adding element type (key, value) (line 1343)
int_98507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 8), 'int')
str_98508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 11), 'str', 'th')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 7), dict_98496, (int_98507, str_98508))
# Adding element type (key, value) (line 1343)
int_98509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 17), 'int')
str_98510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 20), 'str', 'th')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 7), dict_98496, (int_98509, str_98510))
# Adding element type (key, value) (line 1343)
int_98511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 26), 'int')
str_98512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 29), 'str', 'th')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 7), dict_98496, (int_98511, str_98512))
# Adding element type (key, value) (line 1343)
int_98513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 35), 'int')
str_98514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 38), 'str', 'th')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 7), dict_98496, (int_98513, str_98514))
# Adding element type (key, value) (line 1343)
int_98515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 44), 'int')
str_98516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 47), 'str', 'th')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 7), dict_98496, (int_98515, str_98516))

# Assigning a type to the variable 'stnd' (line 1343)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1343, 0), 'stnd', dict_98496)

@norecursion
def buildapi(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'buildapi'
    module_type_store = module_type_store.open_function_context('buildapi', 1347, 0, False)
    
    # Passed parameters checking function
    buildapi.stypy_localization = localization
    buildapi.stypy_type_of_self = None
    buildapi.stypy_type_store = module_type_store
    buildapi.stypy_function_name = 'buildapi'
    buildapi.stypy_param_names_list = ['rout']
    buildapi.stypy_varargs_param_name = None
    buildapi.stypy_kwargs_param_name = None
    buildapi.stypy_call_defaults = defaults
    buildapi.stypy_call_varargs = varargs
    buildapi.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'buildapi', ['rout'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'buildapi', localization, ['rout'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'buildapi(...)' code ##################

    
    # Assigning a Call to a Tuple (line 1348):
    
    # Assigning a Call to a Name:
    
    # Call to assubr(...): (line 1348)
    # Processing the call arguments (line 1348)
    # Getting the type of 'rout' (line 1348)
    rout_98519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1348, 34), 'rout', False)
    # Processing the call keyword arguments (line 1348)
    kwargs_98520 = {}
    # Getting the type of 'func2subr' (line 1348)
    func2subr_98517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1348, 17), 'func2subr', False)
    # Obtaining the member 'assubr' of a type (line 1348)
    assubr_98518 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1348, 17), func2subr_98517, 'assubr')
    # Calling assubr(args, kwargs) (line 1348)
    assubr_call_result_98521 = invoke(stypy.reporting.localization.Localization(__file__, 1348, 17), assubr_98518, *[rout_98519], **kwargs_98520)
    
    # Assigning a type to the variable 'call_assignment_95478' (line 1348)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1348, 4), 'call_assignment_95478', assubr_call_result_98521)
    
    # Assigning a Call to a Name (line 1348):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_98524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1348, 4), 'int')
    # Processing the call keyword arguments
    kwargs_98525 = {}
    # Getting the type of 'call_assignment_95478' (line 1348)
    call_assignment_95478_98522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1348, 4), 'call_assignment_95478', False)
    # Obtaining the member '__getitem__' of a type (line 1348)
    getitem___98523 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1348, 4), call_assignment_95478_98522, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_98526 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___98523, *[int_98524], **kwargs_98525)
    
    # Assigning a type to the variable 'call_assignment_95479' (line 1348)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1348, 4), 'call_assignment_95479', getitem___call_result_98526)
    
    # Assigning a Name to a Name (line 1348):
    # Getting the type of 'call_assignment_95479' (line 1348)
    call_assignment_95479_98527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1348, 4), 'call_assignment_95479')
    # Assigning a type to the variable 'rout' (line 1348)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1348, 4), 'rout', call_assignment_95479_98527)
    
    # Assigning a Call to a Name (line 1348):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_98530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1348, 4), 'int')
    # Processing the call keyword arguments
    kwargs_98531 = {}
    # Getting the type of 'call_assignment_95478' (line 1348)
    call_assignment_95478_98528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1348, 4), 'call_assignment_95478', False)
    # Obtaining the member '__getitem__' of a type (line 1348)
    getitem___98529 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1348, 4), call_assignment_95478_98528, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_98532 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___98529, *[int_98530], **kwargs_98531)
    
    # Assigning a type to the variable 'call_assignment_95480' (line 1348)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1348, 4), 'call_assignment_95480', getitem___call_result_98532)
    
    # Assigning a Name to a Name (line 1348):
    # Getting the type of 'call_assignment_95480' (line 1348)
    call_assignment_95480_98533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1348, 4), 'call_assignment_95480')
    # Assigning a type to the variable 'wrap' (line 1348)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1348, 10), 'wrap', call_assignment_95480_98533)
    
    # Assigning a Call to a Tuple (line 1349):
    
    # Assigning a Call to a Name:
    
    # Call to getargs2(...): (line 1349)
    # Processing the call arguments (line 1349)
    # Getting the type of 'rout' (line 1349)
    rout_98535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1349, 29), 'rout', False)
    # Processing the call keyword arguments (line 1349)
    kwargs_98536 = {}
    # Getting the type of 'getargs2' (line 1349)
    getargs2_98534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1349, 20), 'getargs2', False)
    # Calling getargs2(args, kwargs) (line 1349)
    getargs2_call_result_98537 = invoke(stypy.reporting.localization.Localization(__file__, 1349, 20), getargs2_98534, *[rout_98535], **kwargs_98536)
    
    # Assigning a type to the variable 'call_assignment_95481' (line 1349)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1349, 4), 'call_assignment_95481', getargs2_call_result_98537)
    
    # Assigning a Call to a Name (line 1349):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_98540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1349, 4), 'int')
    # Processing the call keyword arguments
    kwargs_98541 = {}
    # Getting the type of 'call_assignment_95481' (line 1349)
    call_assignment_95481_98538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1349, 4), 'call_assignment_95481', False)
    # Obtaining the member '__getitem__' of a type (line 1349)
    getitem___98539 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1349, 4), call_assignment_95481_98538, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_98542 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___98539, *[int_98540], **kwargs_98541)
    
    # Assigning a type to the variable 'call_assignment_95482' (line 1349)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1349, 4), 'call_assignment_95482', getitem___call_result_98542)
    
    # Assigning a Name to a Name (line 1349):
    # Getting the type of 'call_assignment_95482' (line 1349)
    call_assignment_95482_98543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1349, 4), 'call_assignment_95482')
    # Assigning a type to the variable 'args' (line 1349)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1349, 4), 'args', call_assignment_95482_98543)
    
    # Assigning a Call to a Name (line 1349):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_98546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1349, 4), 'int')
    # Processing the call keyword arguments
    kwargs_98547 = {}
    # Getting the type of 'call_assignment_95481' (line 1349)
    call_assignment_95481_98544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1349, 4), 'call_assignment_95481', False)
    # Obtaining the member '__getitem__' of a type (line 1349)
    getitem___98545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1349, 4), call_assignment_95481_98544, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_98548 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___98545, *[int_98546], **kwargs_98547)
    
    # Assigning a type to the variable 'call_assignment_95483' (line 1349)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1349, 4), 'call_assignment_95483', getitem___call_result_98548)
    
    # Assigning a Name to a Name (line 1349):
    # Getting the type of 'call_assignment_95483' (line 1349)
    call_assignment_95483_98549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1349, 4), 'call_assignment_95483')
    # Assigning a type to the variable 'depargs' (line 1349)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1349, 10), 'depargs', call_assignment_95483_98549)
    
    # Assigning a Name to a Attribute (line 1350):
    
    # Assigning a Name to a Attribute (line 1350):
    # Getting the type of 'depargs' (line 1350)
    depargs_98550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 24), 'depargs')
    # Getting the type of 'capi_maps' (line 1350)
    capi_maps_98551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 4), 'capi_maps')
    # Setting the type of the member 'depargs' of a type (line 1350)
    module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1350, 4), capi_maps_98551, 'depargs', depargs_98550)
    
    # Assigning a Subscript to a Name (line 1351):
    
    # Assigning a Subscript to a Name (line 1351):
    
    # Obtaining the type of the subscript
    str_98552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1351, 15), 'str', 'vars')
    # Getting the type of 'rout' (line 1351)
    rout_98553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1351, 10), 'rout')
    # Obtaining the member '__getitem__' of a type (line 1351)
    getitem___98554 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1351, 10), rout_98553, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1351)
    subscript_call_result_98555 = invoke(stypy.reporting.localization.Localization(__file__, 1351, 10), getitem___98554, str_98552)
    
    # Assigning a type to the variable 'var' (line 1351)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1351, 4), 'var', subscript_call_result_98555)
    
    
    # Call to ismoduleroutine(...): (line 1353)
    # Processing the call arguments (line 1353)
    # Getting the type of 'rout' (line 1353)
    rout_98557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1353, 23), 'rout', False)
    # Processing the call keyword arguments (line 1353)
    kwargs_98558 = {}
    # Getting the type of 'ismoduleroutine' (line 1353)
    ismoduleroutine_98556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1353, 7), 'ismoduleroutine', False)
    # Calling ismoduleroutine(args, kwargs) (line 1353)
    ismoduleroutine_call_result_98559 = invoke(stypy.reporting.localization.Localization(__file__, 1353, 7), ismoduleroutine_98556, *[rout_98557], **kwargs_98558)
    
    # Testing the type of an if condition (line 1353)
    if_condition_98560 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1353, 4), ismoduleroutine_call_result_98559)
    # Assigning a type to the variable 'if_condition_98560' (line 1353)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1353, 4), 'if_condition_98560', if_condition_98560)
    # SSA begins for if statement (line 1353)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1354)
    # Processing the call arguments (line 1354)
    str_98562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1354, 16), 'str', '\t\t\tConstructing wrapper function "%s.%s"...\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1355)
    tuple_98563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1355, 17), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1355)
    # Adding element type (line 1355)
    
    # Obtaining the type of the subscript
    str_98564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1355, 22), 'str', 'modulename')
    # Getting the type of 'rout' (line 1355)
    rout_98565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1355, 17), 'rout', False)
    # Obtaining the member '__getitem__' of a type (line 1355)
    getitem___98566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1355, 17), rout_98565, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1355)
    subscript_call_result_98567 = invoke(stypy.reporting.localization.Localization(__file__, 1355, 17), getitem___98566, str_98564)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1355, 17), tuple_98563, subscript_call_result_98567)
    # Adding element type (line 1355)
    
    # Obtaining the type of the subscript
    str_98568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1355, 42), 'str', 'name')
    # Getting the type of 'rout' (line 1355)
    rout_98569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1355, 37), 'rout', False)
    # Obtaining the member '__getitem__' of a type (line 1355)
    getitem___98570 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1355, 37), rout_98569, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1355)
    subscript_call_result_98571 = invoke(stypy.reporting.localization.Localization(__file__, 1355, 37), getitem___98570, str_98568)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1355, 17), tuple_98563, subscript_call_result_98571)
    
    # Applying the binary operator '%' (line 1354)
    result_mod_98572 = python_operator(stypy.reporting.localization.Localization(__file__, 1354, 16), '%', str_98562, tuple_98563)
    
    # Processing the call keyword arguments (line 1354)
    kwargs_98573 = {}
    # Getting the type of 'outmess' (line 1354)
    outmess_98561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1354, 8), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1354)
    outmess_call_result_98574 = invoke(stypy.reporting.localization.Localization(__file__, 1354, 8), outmess_98561, *[result_mod_98572], **kwargs_98573)
    
    # SSA branch for the else part of an if statement (line 1353)
    module_type_store.open_ssa_branch('else')
    
    # Call to outmess(...): (line 1357)
    # Processing the call arguments (line 1357)
    str_98576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1357, 16), 'str', '\t\tConstructing wrapper function "%s"...\n')
    
    # Obtaining the type of the subscript
    str_98577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1357, 70), 'str', 'name')
    # Getting the type of 'rout' (line 1357)
    rout_98578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1357, 65), 'rout', False)
    # Obtaining the member '__getitem__' of a type (line 1357)
    getitem___98579 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1357, 65), rout_98578, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1357)
    subscript_call_result_98580 = invoke(stypy.reporting.localization.Localization(__file__, 1357, 65), getitem___98579, str_98577)
    
    # Applying the binary operator '%' (line 1357)
    result_mod_98581 = python_operator(stypy.reporting.localization.Localization(__file__, 1357, 16), '%', str_98576, subscript_call_result_98580)
    
    # Processing the call keyword arguments (line 1357)
    kwargs_98582 = {}
    # Getting the type of 'outmess' (line 1357)
    outmess_98575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1357, 8), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1357)
    outmess_call_result_98583 = invoke(stypy.reporting.localization.Localization(__file__, 1357, 8), outmess_98575, *[result_mod_98581], **kwargs_98582)
    
    # SSA join for if statement (line 1353)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1359):
    
    # Assigning a Call to a Name (line 1359):
    
    # Call to routsign2map(...): (line 1359)
    # Processing the call arguments (line 1359)
    # Getting the type of 'rout' (line 1359)
    rout_98586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1359, 33), 'rout', False)
    # Processing the call keyword arguments (line 1359)
    kwargs_98587 = {}
    # Getting the type of 'capi_maps' (line 1359)
    capi_maps_98584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1359, 10), 'capi_maps', False)
    # Obtaining the member 'routsign2map' of a type (line 1359)
    routsign2map_98585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1359, 10), capi_maps_98584, 'routsign2map')
    # Calling routsign2map(args, kwargs) (line 1359)
    routsign2map_call_result_98588 = invoke(stypy.reporting.localization.Localization(__file__, 1359, 10), routsign2map_98585, *[rout_98586], **kwargs_98587)
    
    # Assigning a type to the variable 'vrd' (line 1359)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1359, 4), 'vrd', routsign2map_call_result_98588)
    
    # Assigning a Call to a Name (line 1360):
    
    # Assigning a Call to a Name (line 1360):
    
    # Call to dictappend(...): (line 1360)
    # Processing the call arguments (line 1360)
    
    # Obtaining an instance of the builtin type 'dict' (line 1360)
    dict_98590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1360, 20), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1360)
    
    # Getting the type of 'vrd' (line 1360)
    vrd_98591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1360, 24), 'vrd', False)
    # Processing the call keyword arguments (line 1360)
    kwargs_98592 = {}
    # Getting the type of 'dictappend' (line 1360)
    dictappend_98589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1360, 9), 'dictappend', False)
    # Calling dictappend(args, kwargs) (line 1360)
    dictappend_call_result_98593 = invoke(stypy.reporting.localization.Localization(__file__, 1360, 9), dictappend_98589, *[dict_98590, vrd_98591], **kwargs_98592)
    
    # Assigning a type to the variable 'rd' (line 1360)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1360, 4), 'rd', dictappend_call_result_98593)
    
    # Getting the type of 'rout_rules' (line 1361)
    rout_rules_98594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1361, 13), 'rout_rules')
    # Testing the type of a for loop iterable (line 1361)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1361, 4), rout_rules_98594)
    # Getting the type of the for loop variable (line 1361)
    for_loop_var_98595 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1361, 4), rout_rules_98594)
    # Assigning a type to the variable 'r' (line 1361)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1361, 4), 'r', for_loop_var_98595)
    # SSA begins for a for statement (line 1361)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    # Evaluating a boolean operation
    
    str_98596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1362, 12), 'str', '_check')
    # Getting the type of 'r' (line 1362)
    r_98597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1362, 24), 'r')
    # Applying the binary operator 'in' (line 1362)
    result_contains_98598 = python_operator(stypy.reporting.localization.Localization(__file__, 1362, 12), 'in', str_98596, r_98597)
    
    
    # Call to (...): (line 1362)
    # Processing the call arguments (line 1362)
    # Getting the type of 'rout' (line 1362)
    rout_98603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1362, 42), 'rout', False)
    # Processing the call keyword arguments (line 1362)
    kwargs_98604 = {}
    
    # Obtaining the type of the subscript
    str_98599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1362, 32), 'str', '_check')
    # Getting the type of 'r' (line 1362)
    r_98600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1362, 30), 'r', False)
    # Obtaining the member '__getitem__' of a type (line 1362)
    getitem___98601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1362, 30), r_98600, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1362)
    subscript_call_result_98602 = invoke(stypy.reporting.localization.Localization(__file__, 1362, 30), getitem___98601, str_98599)
    
    # Calling (args, kwargs) (line 1362)
    _call_result_98605 = invoke(stypy.reporting.localization.Localization(__file__, 1362, 30), subscript_call_result_98602, *[rout_98603], **kwargs_98604)
    
    # Applying the binary operator 'and' (line 1362)
    result_and_keyword_98606 = python_operator(stypy.reporting.localization.Localization(__file__, 1362, 12), 'and', result_contains_98598, _call_result_98605)
    
    
    str_98607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1362, 53), 'str', '_check')
    # Getting the type of 'r' (line 1362)
    r_98608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1362, 69), 'r')
    # Applying the binary operator 'notin' (line 1362)
    result_contains_98609 = python_operator(stypy.reporting.localization.Localization(__file__, 1362, 53), 'notin', str_98607, r_98608)
    
    # Applying the binary operator 'or' (line 1362)
    result_or_keyword_98610 = python_operator(stypy.reporting.localization.Localization(__file__, 1362, 11), 'or', result_and_keyword_98606, result_contains_98609)
    
    # Testing the type of an if condition (line 1362)
    if_condition_98611 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1362, 8), result_or_keyword_98610)
    # Assigning a type to the variable 'if_condition_98611' (line 1362)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1362, 8), 'if_condition_98611', if_condition_98611)
    # SSA begins for if statement (line 1362)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1363):
    
    # Assigning a Call to a Name (line 1363):
    
    # Call to applyrules(...): (line 1363)
    # Processing the call arguments (line 1363)
    # Getting the type of 'r' (line 1363)
    r_98613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1363, 28), 'r', False)
    # Getting the type of 'vrd' (line 1363)
    vrd_98614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1363, 31), 'vrd', False)
    # Getting the type of 'rout' (line 1363)
    rout_98615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1363, 36), 'rout', False)
    # Processing the call keyword arguments (line 1363)
    kwargs_98616 = {}
    # Getting the type of 'applyrules' (line 1363)
    applyrules_98612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1363, 17), 'applyrules', False)
    # Calling applyrules(args, kwargs) (line 1363)
    applyrules_call_result_98617 = invoke(stypy.reporting.localization.Localization(__file__, 1363, 17), applyrules_98612, *[r_98613, vrd_98614, rout_98615], **kwargs_98616)
    
    # Assigning a type to the variable 'ar' (line 1363)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1363, 12), 'ar', applyrules_call_result_98617)
    
    # Assigning a Call to a Name (line 1364):
    
    # Assigning a Call to a Name (line 1364):
    
    # Call to dictappend(...): (line 1364)
    # Processing the call arguments (line 1364)
    # Getting the type of 'rd' (line 1364)
    rd_98619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1364, 28), 'rd', False)
    # Getting the type of 'ar' (line 1364)
    ar_98620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1364, 32), 'ar', False)
    # Processing the call keyword arguments (line 1364)
    kwargs_98621 = {}
    # Getting the type of 'dictappend' (line 1364)
    dictappend_98618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1364, 17), 'dictappend', False)
    # Calling dictappend(args, kwargs) (line 1364)
    dictappend_call_result_98622 = invoke(stypy.reporting.localization.Localization(__file__, 1364, 17), dictappend_98618, *[rd_98619, ar_98620], **kwargs_98621)
    
    # Assigning a type to the variable 'rd' (line 1364)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1364, 12), 'rd', dictappend_call_result_98622)
    # SSA join for if statement (line 1362)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Tuple to a Tuple (line 1367):
    
    # Assigning a Num to a Name (line 1367):
    int_98623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1367, 16), 'int')
    # Assigning a type to the variable 'tuple_assignment_95484' (line 1367)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1367, 4), 'tuple_assignment_95484', int_98623)
    
    # Assigning a Num to a Name (line 1367):
    int_98624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1367, 19), 'int')
    # Assigning a type to the variable 'tuple_assignment_95485' (line 1367)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1367, 4), 'tuple_assignment_95485', int_98624)
    
    # Assigning a Name to a Name (line 1367):
    # Getting the type of 'tuple_assignment_95484' (line 1367)
    tuple_assignment_95484_98625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1367, 4), 'tuple_assignment_95484')
    # Assigning a type to the variable 'nth' (line 1367)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1367, 4), 'nth', tuple_assignment_95484_98625)
    
    # Assigning a Name to a Name (line 1367):
    # Getting the type of 'tuple_assignment_95485' (line 1367)
    tuple_assignment_95485_98626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1367, 4), 'tuple_assignment_95485')
    # Assigning a type to the variable 'nthk' (line 1367)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1367, 9), 'nthk', tuple_assignment_95485_98626)
    
    # Assigning a Dict to a Name (line 1368):
    
    # Assigning a Dict to a Name (line 1368):
    
    # Obtaining an instance of the builtin type 'dict' (line 1368)
    dict_98627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1368, 14), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1368)
    
    # Assigning a type to the variable 'savevrd' (line 1368)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1368, 4), 'savevrd', dict_98627)
    
    # Getting the type of 'args' (line 1369)
    args_98628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1369, 13), 'args')
    # Testing the type of a for loop iterable (line 1369)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1369, 4), args_98628)
    # Getting the type of the for loop variable (line 1369)
    for_loop_var_98629 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1369, 4), args_98628)
    # Assigning a type to the variable 'a' (line 1369)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1369, 4), 'a', for_loop_var_98629)
    # SSA begins for a for statement (line 1369)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 1370):
    
    # Assigning a Call to a Name (line 1370):
    
    # Call to sign2map(...): (line 1370)
    # Processing the call arguments (line 1370)
    # Getting the type of 'a' (line 1370)
    a_98632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 33), 'a', False)
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 1370)
    a_98633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 40), 'a', False)
    # Getting the type of 'var' (line 1370)
    var_98634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 36), 'var', False)
    # Obtaining the member '__getitem__' of a type (line 1370)
    getitem___98635 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 36), var_98634, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1370)
    subscript_call_result_98636 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 36), getitem___98635, a_98633)
    
    # Processing the call keyword arguments (line 1370)
    kwargs_98637 = {}
    # Getting the type of 'capi_maps' (line 1370)
    capi_maps_98630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 14), 'capi_maps', False)
    # Obtaining the member 'sign2map' of a type (line 1370)
    sign2map_98631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 14), capi_maps_98630, 'sign2map')
    # Calling sign2map(args, kwargs) (line 1370)
    sign2map_call_result_98638 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 14), sign2map_98631, *[a_98632, subscript_call_result_98636], **kwargs_98637)
    
    # Assigning a type to the variable 'vrd' (line 1370)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'vrd', sign2map_call_result_98638)
    
    
    # Call to isintent_aux(...): (line 1371)
    # Processing the call arguments (line 1371)
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 1371)
    a_98640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 28), 'a', False)
    # Getting the type of 'var' (line 1371)
    var_98641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 24), 'var', False)
    # Obtaining the member '__getitem__' of a type (line 1371)
    getitem___98642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1371, 24), var_98641, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1371)
    subscript_call_result_98643 = invoke(stypy.reporting.localization.Localization(__file__, 1371, 24), getitem___98642, a_98640)
    
    # Processing the call keyword arguments (line 1371)
    kwargs_98644 = {}
    # Getting the type of 'isintent_aux' (line 1371)
    isintent_aux_98639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 11), 'isintent_aux', False)
    # Calling isintent_aux(args, kwargs) (line 1371)
    isintent_aux_call_result_98645 = invoke(stypy.reporting.localization.Localization(__file__, 1371, 11), isintent_aux_98639, *[subscript_call_result_98643], **kwargs_98644)
    
    # Testing the type of an if condition (line 1371)
    if_condition_98646 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1371, 8), isintent_aux_call_result_98645)
    # Assigning a type to the variable 'if_condition_98646' (line 1371)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1371, 8), 'if_condition_98646', if_condition_98646)
    # SSA begins for if statement (line 1371)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 1372):
    
    # Assigning a Name to a Name (line 1372):
    # Getting the type of 'aux_rules' (line 1372)
    aux_rules_98647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 21), 'aux_rules')
    # Assigning a type to the variable '_rules' (line 1372)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1372, 12), '_rules', aux_rules_98647)
    # SSA branch for the else part of an if statement (line 1371)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Name to a Name (line 1374):
    
    # Assigning a Name to a Name (line 1374):
    # Getting the type of 'arg_rules' (line 1374)
    arg_rules_98648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1374, 21), 'arg_rules')
    # Assigning a type to the variable '_rules' (line 1374)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1374, 12), '_rules', arg_rules_98648)
    
    
    
    # Call to isintent_hide(...): (line 1375)
    # Processing the call arguments (line 1375)
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 1375)
    a_98650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1375, 37), 'a', False)
    # Getting the type of 'var' (line 1375)
    var_98651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1375, 33), 'var', False)
    # Obtaining the member '__getitem__' of a type (line 1375)
    getitem___98652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1375, 33), var_98651, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1375)
    subscript_call_result_98653 = invoke(stypy.reporting.localization.Localization(__file__, 1375, 33), getitem___98652, a_98650)
    
    # Processing the call keyword arguments (line 1375)
    kwargs_98654 = {}
    # Getting the type of 'isintent_hide' (line 1375)
    isintent_hide_98649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1375, 19), 'isintent_hide', False)
    # Calling isintent_hide(args, kwargs) (line 1375)
    isintent_hide_call_result_98655 = invoke(stypy.reporting.localization.Localization(__file__, 1375, 19), isintent_hide_98649, *[subscript_call_result_98653], **kwargs_98654)
    
    # Applying the 'not' unary operator (line 1375)
    result_not__98656 = python_operator(stypy.reporting.localization.Localization(__file__, 1375, 15), 'not', isintent_hide_call_result_98655)
    
    # Testing the type of an if condition (line 1375)
    if_condition_98657 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1375, 12), result_not__98656)
    # Assigning a type to the variable 'if_condition_98657' (line 1375)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1375, 12), 'if_condition_98657', if_condition_98657)
    # SSA begins for if statement (line 1375)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Call to isoptional(...): (line 1376)
    # Processing the call arguments (line 1376)
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 1376)
    a_98659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1376, 38), 'a', False)
    # Getting the type of 'var' (line 1376)
    var_98660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1376, 34), 'var', False)
    # Obtaining the member '__getitem__' of a type (line 1376)
    getitem___98661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1376, 34), var_98660, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1376)
    subscript_call_result_98662 = invoke(stypy.reporting.localization.Localization(__file__, 1376, 34), getitem___98661, a_98659)
    
    # Processing the call keyword arguments (line 1376)
    kwargs_98663 = {}
    # Getting the type of 'isoptional' (line 1376)
    isoptional_98658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1376, 23), 'isoptional', False)
    # Calling isoptional(args, kwargs) (line 1376)
    isoptional_call_result_98664 = invoke(stypy.reporting.localization.Localization(__file__, 1376, 23), isoptional_98658, *[subscript_call_result_98662], **kwargs_98663)
    
    # Applying the 'not' unary operator (line 1376)
    result_not__98665 = python_operator(stypy.reporting.localization.Localization(__file__, 1376, 19), 'not', isoptional_call_result_98664)
    
    # Testing the type of an if condition (line 1376)
    if_condition_98666 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1376, 16), result_not__98665)
    # Assigning a type to the variable 'if_condition_98666' (line 1376)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1376, 16), 'if_condition_98666', if_condition_98666)
    # SSA begins for if statement (line 1376)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1377):
    
    # Assigning a BinOp to a Name (line 1377):
    # Getting the type of 'nth' (line 1377)
    nth_98667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1377, 26), 'nth')
    int_98668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1377, 32), 'int')
    # Applying the binary operator '+' (line 1377)
    result_add_98669 = python_operator(stypy.reporting.localization.Localization(__file__, 1377, 26), '+', nth_98667, int_98668)
    
    # Assigning a type to the variable 'nth' (line 1377)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1377, 20), 'nth', result_add_98669)
    
    # Assigning a BinOp to a Subscript (line 1378):
    
    # Assigning a BinOp to a Subscript (line 1378):
    
    # Call to repr(...): (line 1378)
    # Processing the call arguments (line 1378)
    # Getting the type of 'nth' (line 1378)
    nth_98671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 38), 'nth', False)
    # Processing the call keyword arguments (line 1378)
    kwargs_98672 = {}
    # Getting the type of 'repr' (line 1378)
    repr_98670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 33), 'repr', False)
    # Calling repr(args, kwargs) (line 1378)
    repr_call_result_98673 = invoke(stypy.reporting.localization.Localization(__file__, 1378, 33), repr_98670, *[nth_98671], **kwargs_98672)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'nth' (line 1378)
    nth_98674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 50), 'nth')
    int_98675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1378, 56), 'int')
    # Applying the binary operator '%' (line 1378)
    result_mod_98676 = python_operator(stypy.reporting.localization.Localization(__file__, 1378, 50), '%', nth_98674, int_98675)
    
    # Getting the type of 'stnd' (line 1378)
    stnd_98677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 45), 'stnd')
    # Obtaining the member '__getitem__' of a type (line 1378)
    getitem___98678 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1378, 45), stnd_98677, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1378)
    subscript_call_result_98679 = invoke(stypy.reporting.localization.Localization(__file__, 1378, 45), getitem___98678, result_mod_98676)
    
    # Applying the binary operator '+' (line 1378)
    result_add_98680 = python_operator(stypy.reporting.localization.Localization(__file__, 1378, 33), '+', repr_call_result_98673, subscript_call_result_98679)
    
    str_98681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1378, 62), 'str', ' argument')
    # Applying the binary operator '+' (line 1378)
    result_add_98682 = python_operator(stypy.reporting.localization.Localization(__file__, 1378, 60), '+', result_add_98680, str_98681)
    
    # Getting the type of 'vrd' (line 1378)
    vrd_98683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 20), 'vrd')
    str_98684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1378, 24), 'str', 'nth')
    # Storing an element on a container (line 1378)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1378, 20), vrd_98683, (str_98684, result_add_98682))
    # SSA branch for the else part of an if statement (line 1376)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 1380):
    
    # Assigning a BinOp to a Name (line 1380):
    # Getting the type of 'nthk' (line 1380)
    nthk_98685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1380, 27), 'nthk')
    int_98686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1380, 34), 'int')
    # Applying the binary operator '+' (line 1380)
    result_add_98687 = python_operator(stypy.reporting.localization.Localization(__file__, 1380, 27), '+', nthk_98685, int_98686)
    
    # Assigning a type to the variable 'nthk' (line 1380)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1380, 20), 'nthk', result_add_98687)
    
    # Assigning a BinOp to a Subscript (line 1381):
    
    # Assigning a BinOp to a Subscript (line 1381):
    
    # Call to repr(...): (line 1381)
    # Processing the call arguments (line 1381)
    # Getting the type of 'nthk' (line 1381)
    nthk_98689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1381, 38), 'nthk', False)
    # Processing the call keyword arguments (line 1381)
    kwargs_98690 = {}
    # Getting the type of 'repr' (line 1381)
    repr_98688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1381, 33), 'repr', False)
    # Calling repr(args, kwargs) (line 1381)
    repr_call_result_98691 = invoke(stypy.reporting.localization.Localization(__file__, 1381, 33), repr_98688, *[nthk_98689], **kwargs_98690)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'nthk' (line 1381)
    nthk_98692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1381, 51), 'nthk')
    int_98693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1381, 58), 'int')
    # Applying the binary operator '%' (line 1381)
    result_mod_98694 = python_operator(stypy.reporting.localization.Localization(__file__, 1381, 51), '%', nthk_98692, int_98693)
    
    # Getting the type of 'stnd' (line 1381)
    stnd_98695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1381, 46), 'stnd')
    # Obtaining the member '__getitem__' of a type (line 1381)
    getitem___98696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1381, 46), stnd_98695, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1381)
    subscript_call_result_98697 = invoke(stypy.reporting.localization.Localization(__file__, 1381, 46), getitem___98696, result_mod_98694)
    
    # Applying the binary operator '+' (line 1381)
    result_add_98698 = python_operator(stypy.reporting.localization.Localization(__file__, 1381, 33), '+', repr_call_result_98691, subscript_call_result_98697)
    
    str_98699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1381, 64), 'str', ' keyword')
    # Applying the binary operator '+' (line 1381)
    result_add_98700 = python_operator(stypy.reporting.localization.Localization(__file__, 1381, 62), '+', result_add_98698, str_98699)
    
    # Getting the type of 'vrd' (line 1381)
    vrd_98701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1381, 20), 'vrd')
    str_98702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1381, 24), 'str', 'nth')
    # Storing an element on a container (line 1381)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1381, 20), vrd_98701, (str_98702, result_add_98700))
    # SSA join for if statement (line 1376)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1375)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Str to a Subscript (line 1383):
    
    # Assigning a Str to a Subscript (line 1383):
    str_98703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1383, 29), 'str', 'hidden')
    # Getting the type of 'vrd' (line 1383)
    vrd_98704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1383, 16), 'vrd')
    str_98705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1383, 20), 'str', 'nth')
    # Storing an element on a container (line 1383)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1383, 16), vrd_98704, (str_98705, str_98703))
    # SSA join for if statement (line 1375)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1371)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 1384):
    
    # Assigning a Name to a Subscript (line 1384):
    # Getting the type of 'vrd' (line 1384)
    vrd_98706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1384, 21), 'vrd')
    # Getting the type of 'savevrd' (line 1384)
    savevrd_98707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1384, 8), 'savevrd')
    # Getting the type of 'a' (line 1384)
    a_98708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1384, 16), 'a')
    # Storing an element on a container (line 1384)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1384, 8), savevrd_98707, (a_98708, vrd_98706))
    
    # Getting the type of '_rules' (line 1385)
    _rules_98709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1385, 17), '_rules')
    # Testing the type of a for loop iterable (line 1385)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1385, 8), _rules_98709)
    # Getting the type of the for loop variable (line 1385)
    for_loop_var_98710 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1385, 8), _rules_98709)
    # Assigning a type to the variable 'r' (line 1385)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1385, 8), 'r', for_loop_var_98710)
    # SSA begins for a for statement (line 1385)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    str_98711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1386, 15), 'str', '_depend')
    # Getting the type of 'r' (line 1386)
    r_98712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1386, 28), 'r')
    # Applying the binary operator 'in' (line 1386)
    result_contains_98713 = python_operator(stypy.reporting.localization.Localization(__file__, 1386, 15), 'in', str_98711, r_98712)
    
    # Testing the type of an if condition (line 1386)
    if_condition_98714 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1386, 12), result_contains_98713)
    # Assigning a type to the variable 'if_condition_98714' (line 1386)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1386, 12), 'if_condition_98714', if_condition_98714)
    # SSA begins for if statement (line 1386)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 1386)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Evaluating a boolean operation
    
    str_98715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1388, 16), 'str', '_check')
    # Getting the type of 'r' (line 1388)
    r_98716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1388, 28), 'r')
    # Applying the binary operator 'in' (line 1388)
    result_contains_98717 = python_operator(stypy.reporting.localization.Localization(__file__, 1388, 16), 'in', str_98715, r_98716)
    
    
    # Call to (...): (line 1388)
    # Processing the call arguments (line 1388)
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 1388)
    a_98722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1388, 50), 'a', False)
    # Getting the type of 'var' (line 1388)
    var_98723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1388, 46), 'var', False)
    # Obtaining the member '__getitem__' of a type (line 1388)
    getitem___98724 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1388, 46), var_98723, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1388)
    subscript_call_result_98725 = invoke(stypy.reporting.localization.Localization(__file__, 1388, 46), getitem___98724, a_98722)
    
    # Processing the call keyword arguments (line 1388)
    kwargs_98726 = {}
    
    # Obtaining the type of the subscript
    str_98718 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1388, 36), 'str', '_check')
    # Getting the type of 'r' (line 1388)
    r_98719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1388, 34), 'r', False)
    # Obtaining the member '__getitem__' of a type (line 1388)
    getitem___98720 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1388, 34), r_98719, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1388)
    subscript_call_result_98721 = invoke(stypy.reporting.localization.Localization(__file__, 1388, 34), getitem___98720, str_98718)
    
    # Calling (args, kwargs) (line 1388)
    _call_result_98727 = invoke(stypy.reporting.localization.Localization(__file__, 1388, 34), subscript_call_result_98721, *[subscript_call_result_98725], **kwargs_98726)
    
    # Applying the binary operator 'and' (line 1388)
    result_and_keyword_98728 = python_operator(stypy.reporting.localization.Localization(__file__, 1388, 16), 'and', result_contains_98717, _call_result_98727)
    
    
    str_98729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1388, 59), 'str', '_check')
    # Getting the type of 'r' (line 1388)
    r_98730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1388, 75), 'r')
    # Applying the binary operator 'notin' (line 1388)
    result_contains_98731 = python_operator(stypy.reporting.localization.Localization(__file__, 1388, 59), 'notin', str_98729, r_98730)
    
    # Applying the binary operator 'or' (line 1388)
    result_or_keyword_98732 = python_operator(stypy.reporting.localization.Localization(__file__, 1388, 15), 'or', result_and_keyword_98728, result_contains_98731)
    
    # Testing the type of an if condition (line 1388)
    if_condition_98733 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1388, 12), result_or_keyword_98732)
    # Assigning a type to the variable 'if_condition_98733' (line 1388)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1388, 12), 'if_condition_98733', if_condition_98733)
    # SSA begins for if statement (line 1388)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1389):
    
    # Assigning a Call to a Name (line 1389):
    
    # Call to applyrules(...): (line 1389)
    # Processing the call arguments (line 1389)
    # Getting the type of 'r' (line 1389)
    r_98735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1389, 32), 'r', False)
    # Getting the type of 'vrd' (line 1389)
    vrd_98736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1389, 35), 'vrd', False)
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 1389)
    a_98737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1389, 44), 'a', False)
    # Getting the type of 'var' (line 1389)
    var_98738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1389, 40), 'var', False)
    # Obtaining the member '__getitem__' of a type (line 1389)
    getitem___98739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1389, 40), var_98738, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1389)
    subscript_call_result_98740 = invoke(stypy.reporting.localization.Localization(__file__, 1389, 40), getitem___98739, a_98737)
    
    # Processing the call keyword arguments (line 1389)
    kwargs_98741 = {}
    # Getting the type of 'applyrules' (line 1389)
    applyrules_98734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1389, 21), 'applyrules', False)
    # Calling applyrules(args, kwargs) (line 1389)
    applyrules_call_result_98742 = invoke(stypy.reporting.localization.Localization(__file__, 1389, 21), applyrules_98734, *[r_98735, vrd_98736, subscript_call_result_98740], **kwargs_98741)
    
    # Assigning a type to the variable 'ar' (line 1389)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1389, 16), 'ar', applyrules_call_result_98742)
    
    # Assigning a Call to a Name (line 1390):
    
    # Assigning a Call to a Name (line 1390):
    
    # Call to dictappend(...): (line 1390)
    # Processing the call arguments (line 1390)
    # Getting the type of 'rd' (line 1390)
    rd_98744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 32), 'rd', False)
    # Getting the type of 'ar' (line 1390)
    ar_98745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 36), 'ar', False)
    # Processing the call keyword arguments (line 1390)
    kwargs_98746 = {}
    # Getting the type of 'dictappend' (line 1390)
    dictappend_98743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 21), 'dictappend', False)
    # Calling dictappend(args, kwargs) (line 1390)
    dictappend_call_result_98747 = invoke(stypy.reporting.localization.Localization(__file__, 1390, 21), dictappend_98743, *[rd_98744, ar_98745], **kwargs_98746)
    
    # Assigning a type to the variable 'rd' (line 1390)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1390, 16), 'rd', dictappend_call_result_98747)
    
    
    str_98748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1391, 19), 'str', '_break')
    # Getting the type of 'r' (line 1391)
    r_98749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1391, 31), 'r')
    # Applying the binary operator 'in' (line 1391)
    result_contains_98750 = python_operator(stypy.reporting.localization.Localization(__file__, 1391, 19), 'in', str_98748, r_98749)
    
    # Testing the type of an if condition (line 1391)
    if_condition_98751 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1391, 16), result_contains_98750)
    # Assigning a type to the variable 'if_condition_98751' (line 1391)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1391, 16), 'if_condition_98751', if_condition_98751)
    # SSA begins for if statement (line 1391)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 1391)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1388)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'depargs' (line 1393)
    depargs_98752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1393, 13), 'depargs')
    # Testing the type of a for loop iterable (line 1393)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1393, 4), depargs_98752)
    # Getting the type of the for loop variable (line 1393)
    for_loop_var_98753 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1393, 4), depargs_98752)
    # Assigning a type to the variable 'a' (line 1393)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1393, 4), 'a', for_loop_var_98753)
    # SSA begins for a for statement (line 1393)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to isintent_aux(...): (line 1394)
    # Processing the call arguments (line 1394)
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 1394)
    a_98755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1394, 28), 'a', False)
    # Getting the type of 'var' (line 1394)
    var_98756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1394, 24), 'var', False)
    # Obtaining the member '__getitem__' of a type (line 1394)
    getitem___98757 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1394, 24), var_98756, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1394)
    subscript_call_result_98758 = invoke(stypy.reporting.localization.Localization(__file__, 1394, 24), getitem___98757, a_98755)
    
    # Processing the call keyword arguments (line 1394)
    kwargs_98759 = {}
    # Getting the type of 'isintent_aux' (line 1394)
    isintent_aux_98754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1394, 11), 'isintent_aux', False)
    # Calling isintent_aux(args, kwargs) (line 1394)
    isintent_aux_call_result_98760 = invoke(stypy.reporting.localization.Localization(__file__, 1394, 11), isintent_aux_98754, *[subscript_call_result_98758], **kwargs_98759)
    
    # Testing the type of an if condition (line 1394)
    if_condition_98761 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1394, 8), isintent_aux_call_result_98760)
    # Assigning a type to the variable 'if_condition_98761' (line 1394)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1394, 8), 'if_condition_98761', if_condition_98761)
    # SSA begins for if statement (line 1394)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 1395):
    
    # Assigning a Name to a Name (line 1395):
    # Getting the type of 'aux_rules' (line 1395)
    aux_rules_98762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1395, 21), 'aux_rules')
    # Assigning a type to the variable '_rules' (line 1395)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1395, 12), '_rules', aux_rules_98762)
    # SSA branch for the else part of an if statement (line 1394)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Name to a Name (line 1397):
    
    # Assigning a Name to a Name (line 1397):
    # Getting the type of 'arg_rules' (line 1397)
    arg_rules_98763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1397, 21), 'arg_rules')
    # Assigning a type to the variable '_rules' (line 1397)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1397, 12), '_rules', arg_rules_98763)
    # SSA join for if statement (line 1394)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Name (line 1398):
    
    # Assigning a Subscript to a Name (line 1398):
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 1398)
    a_98764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1398, 22), 'a')
    # Getting the type of 'savevrd' (line 1398)
    savevrd_98765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1398, 14), 'savevrd')
    # Obtaining the member '__getitem__' of a type (line 1398)
    getitem___98766 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1398, 14), savevrd_98765, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1398)
    subscript_call_result_98767 = invoke(stypy.reporting.localization.Localization(__file__, 1398, 14), getitem___98766, a_98764)
    
    # Assigning a type to the variable 'vrd' (line 1398)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1398, 8), 'vrd', subscript_call_result_98767)
    
    # Getting the type of '_rules' (line 1399)
    _rules_98768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1399, 17), '_rules')
    # Testing the type of a for loop iterable (line 1399)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1399, 8), _rules_98768)
    # Getting the type of the for loop variable (line 1399)
    for_loop_var_98769 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1399, 8), _rules_98768)
    # Assigning a type to the variable 'r' (line 1399)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1399, 8), 'r', for_loop_var_98769)
    # SSA begins for a for statement (line 1399)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    str_98770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1400, 15), 'str', '_depend')
    # Getting the type of 'r' (line 1400)
    r_98771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1400, 32), 'r')
    # Applying the binary operator 'notin' (line 1400)
    result_contains_98772 = python_operator(stypy.reporting.localization.Localization(__file__, 1400, 15), 'notin', str_98770, r_98771)
    
    # Testing the type of an if condition (line 1400)
    if_condition_98773 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1400, 12), result_contains_98772)
    # Assigning a type to the variable 'if_condition_98773' (line 1400)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1400, 12), 'if_condition_98773', if_condition_98773)
    # SSA begins for if statement (line 1400)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 1400)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Evaluating a boolean operation
    
    str_98774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1402, 16), 'str', '_check')
    # Getting the type of 'r' (line 1402)
    r_98775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 28), 'r')
    # Applying the binary operator 'in' (line 1402)
    result_contains_98776 = python_operator(stypy.reporting.localization.Localization(__file__, 1402, 16), 'in', str_98774, r_98775)
    
    
    # Call to (...): (line 1402)
    # Processing the call arguments (line 1402)
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 1402)
    a_98781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 50), 'a', False)
    # Getting the type of 'var' (line 1402)
    var_98782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 46), 'var', False)
    # Obtaining the member '__getitem__' of a type (line 1402)
    getitem___98783 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1402, 46), var_98782, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1402)
    subscript_call_result_98784 = invoke(stypy.reporting.localization.Localization(__file__, 1402, 46), getitem___98783, a_98781)
    
    # Processing the call keyword arguments (line 1402)
    kwargs_98785 = {}
    
    # Obtaining the type of the subscript
    str_98777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1402, 36), 'str', '_check')
    # Getting the type of 'r' (line 1402)
    r_98778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 34), 'r', False)
    # Obtaining the member '__getitem__' of a type (line 1402)
    getitem___98779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1402, 34), r_98778, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1402)
    subscript_call_result_98780 = invoke(stypy.reporting.localization.Localization(__file__, 1402, 34), getitem___98779, str_98777)
    
    # Calling (args, kwargs) (line 1402)
    _call_result_98786 = invoke(stypy.reporting.localization.Localization(__file__, 1402, 34), subscript_call_result_98780, *[subscript_call_result_98784], **kwargs_98785)
    
    # Applying the binary operator 'and' (line 1402)
    result_and_keyword_98787 = python_operator(stypy.reporting.localization.Localization(__file__, 1402, 16), 'and', result_contains_98776, _call_result_98786)
    
    
    str_98788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1402, 59), 'str', '_check')
    # Getting the type of 'r' (line 1402)
    r_98789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 75), 'r')
    # Applying the binary operator 'notin' (line 1402)
    result_contains_98790 = python_operator(stypy.reporting.localization.Localization(__file__, 1402, 59), 'notin', str_98788, r_98789)
    
    # Applying the binary operator 'or' (line 1402)
    result_or_keyword_98791 = python_operator(stypy.reporting.localization.Localization(__file__, 1402, 15), 'or', result_and_keyword_98787, result_contains_98790)
    
    # Testing the type of an if condition (line 1402)
    if_condition_98792 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1402, 12), result_or_keyword_98791)
    # Assigning a type to the variable 'if_condition_98792' (line 1402)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1402, 12), 'if_condition_98792', if_condition_98792)
    # SSA begins for if statement (line 1402)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1403):
    
    # Assigning a Call to a Name (line 1403):
    
    # Call to applyrules(...): (line 1403)
    # Processing the call arguments (line 1403)
    # Getting the type of 'r' (line 1403)
    r_98794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1403, 32), 'r', False)
    # Getting the type of 'vrd' (line 1403)
    vrd_98795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1403, 35), 'vrd', False)
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 1403)
    a_98796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1403, 44), 'a', False)
    # Getting the type of 'var' (line 1403)
    var_98797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1403, 40), 'var', False)
    # Obtaining the member '__getitem__' of a type (line 1403)
    getitem___98798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1403, 40), var_98797, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1403)
    subscript_call_result_98799 = invoke(stypy.reporting.localization.Localization(__file__, 1403, 40), getitem___98798, a_98796)
    
    # Processing the call keyword arguments (line 1403)
    kwargs_98800 = {}
    # Getting the type of 'applyrules' (line 1403)
    applyrules_98793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1403, 21), 'applyrules', False)
    # Calling applyrules(args, kwargs) (line 1403)
    applyrules_call_result_98801 = invoke(stypy.reporting.localization.Localization(__file__, 1403, 21), applyrules_98793, *[r_98794, vrd_98795, subscript_call_result_98799], **kwargs_98800)
    
    # Assigning a type to the variable 'ar' (line 1403)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1403, 16), 'ar', applyrules_call_result_98801)
    
    # Assigning a Call to a Name (line 1404):
    
    # Assigning a Call to a Name (line 1404):
    
    # Call to dictappend(...): (line 1404)
    # Processing the call arguments (line 1404)
    # Getting the type of 'rd' (line 1404)
    rd_98803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1404, 32), 'rd', False)
    # Getting the type of 'ar' (line 1404)
    ar_98804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1404, 36), 'ar', False)
    # Processing the call keyword arguments (line 1404)
    kwargs_98805 = {}
    # Getting the type of 'dictappend' (line 1404)
    dictappend_98802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1404, 21), 'dictappend', False)
    # Calling dictappend(args, kwargs) (line 1404)
    dictappend_call_result_98806 = invoke(stypy.reporting.localization.Localization(__file__, 1404, 21), dictappend_98802, *[rd_98803, ar_98804], **kwargs_98805)
    
    # Assigning a type to the variable 'rd' (line 1404)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1404, 16), 'rd', dictappend_call_result_98806)
    
    
    str_98807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1405, 19), 'str', '_break')
    # Getting the type of 'r' (line 1405)
    r_98808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1405, 31), 'r')
    # Applying the binary operator 'in' (line 1405)
    result_contains_98809 = python_operator(stypy.reporting.localization.Localization(__file__, 1405, 19), 'in', str_98807, r_98808)
    
    # Testing the type of an if condition (line 1405)
    if_condition_98810 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1405, 16), result_contains_98809)
    # Assigning a type to the variable 'if_condition_98810' (line 1405)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1405, 16), 'if_condition_98810', if_condition_98810)
    # SSA begins for if statement (line 1405)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 1405)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1402)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_98811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1407, 11), 'str', 'check')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 1407)
    a_98812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1407, 26), 'a')
    # Getting the type of 'var' (line 1407)
    var_98813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1407, 22), 'var')
    # Obtaining the member '__getitem__' of a type (line 1407)
    getitem___98814 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1407, 22), var_98813, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1407)
    subscript_call_result_98815 = invoke(stypy.reporting.localization.Localization(__file__, 1407, 22), getitem___98814, a_98812)
    
    # Applying the binary operator 'in' (line 1407)
    result_contains_98816 = python_operator(stypy.reporting.localization.Localization(__file__, 1407, 11), 'in', str_98811, subscript_call_result_98815)
    
    # Testing the type of an if condition (line 1407)
    if_condition_98817 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1407, 8), result_contains_98816)
    # Assigning a type to the variable 'if_condition_98817' (line 1407)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1407, 8), 'if_condition_98817', if_condition_98817)
    # SSA begins for if statement (line 1407)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Obtaining the type of the subscript
    str_98818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1408, 28), 'str', 'check')
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 1408)
    a_98819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1408, 25), 'a')
    # Getting the type of 'var' (line 1408)
    var_98820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1408, 21), 'var')
    # Obtaining the member '__getitem__' of a type (line 1408)
    getitem___98821 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1408, 21), var_98820, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1408)
    subscript_call_result_98822 = invoke(stypy.reporting.localization.Localization(__file__, 1408, 21), getitem___98821, a_98819)
    
    # Obtaining the member '__getitem__' of a type (line 1408)
    getitem___98823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1408, 21), subscript_call_result_98822, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1408)
    subscript_call_result_98824 = invoke(stypy.reporting.localization.Localization(__file__, 1408, 21), getitem___98823, str_98818)
    
    # Testing the type of a for loop iterable (line 1408)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1408, 12), subscript_call_result_98824)
    # Getting the type of the for loop variable (line 1408)
    for_loop_var_98825 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1408, 12), subscript_call_result_98824)
    # Assigning a type to the variable 'c' (line 1408)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1408, 12), 'c', for_loop_var_98825)
    # SSA begins for a for statement (line 1408)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Name to a Subscript (line 1409):
    
    # Assigning a Name to a Subscript (line 1409):
    # Getting the type of 'c' (line 1409)
    c_98826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 31), 'c')
    # Getting the type of 'vrd' (line 1409)
    vrd_98827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 16), 'vrd')
    str_98828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1409, 20), 'str', 'check')
    # Storing an element on a container (line 1409)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1409, 16), vrd_98827, (str_98828, c_98826))
    
    # Assigning a Call to a Name (line 1410):
    
    # Assigning a Call to a Name (line 1410):
    
    # Call to applyrules(...): (line 1410)
    # Processing the call arguments (line 1410)
    # Getting the type of 'check_rules' (line 1410)
    check_rules_98830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1410, 32), 'check_rules', False)
    # Getting the type of 'vrd' (line 1410)
    vrd_98831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1410, 45), 'vrd', False)
    
    # Obtaining the type of the subscript
    # Getting the type of 'a' (line 1410)
    a_98832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1410, 54), 'a', False)
    # Getting the type of 'var' (line 1410)
    var_98833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1410, 50), 'var', False)
    # Obtaining the member '__getitem__' of a type (line 1410)
    getitem___98834 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1410, 50), var_98833, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1410)
    subscript_call_result_98835 = invoke(stypy.reporting.localization.Localization(__file__, 1410, 50), getitem___98834, a_98832)
    
    # Processing the call keyword arguments (line 1410)
    kwargs_98836 = {}
    # Getting the type of 'applyrules' (line 1410)
    applyrules_98829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1410, 21), 'applyrules', False)
    # Calling applyrules(args, kwargs) (line 1410)
    applyrules_call_result_98837 = invoke(stypy.reporting.localization.Localization(__file__, 1410, 21), applyrules_98829, *[check_rules_98830, vrd_98831, subscript_call_result_98835], **kwargs_98836)
    
    # Assigning a type to the variable 'ar' (line 1410)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1410, 16), 'ar', applyrules_call_result_98837)
    
    # Assigning a Call to a Name (line 1411):
    
    # Assigning a Call to a Name (line 1411):
    
    # Call to dictappend(...): (line 1411)
    # Processing the call arguments (line 1411)
    # Getting the type of 'rd' (line 1411)
    rd_98839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1411, 32), 'rd', False)
    # Getting the type of 'ar' (line 1411)
    ar_98840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1411, 36), 'ar', False)
    # Processing the call keyword arguments (line 1411)
    kwargs_98841 = {}
    # Getting the type of 'dictappend' (line 1411)
    dictappend_98838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1411, 21), 'dictappend', False)
    # Calling dictappend(args, kwargs) (line 1411)
    dictappend_call_result_98842 = invoke(stypy.reporting.localization.Localization(__file__, 1411, 21), dictappend_98838, *[rd_98839, ar_98840], **kwargs_98841)
    
    # Assigning a type to the variable 'rd' (line 1411)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1411, 16), 'rd', dictappend_call_result_98842)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1407)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Type idiom detected: calculating its left and rigth part (line 1412)
    # Getting the type of 'list' (line 1412)
    list_98843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1412, 42), 'list')
    
    # Obtaining the type of the subscript
    str_98844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1412, 21), 'str', 'cleanupfrompyobj')
    # Getting the type of 'rd' (line 1412)
    rd_98845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1412, 18), 'rd')
    # Obtaining the member '__getitem__' of a type (line 1412)
    getitem___98846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1412, 18), rd_98845, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1412)
    subscript_call_result_98847 = invoke(stypy.reporting.localization.Localization(__file__, 1412, 18), getitem___98846, str_98844)
    
    
    (may_be_98848, more_types_in_union_98849) = may_be_subtype(list_98843, subscript_call_result_98847)

    if may_be_98848:

        if more_types_in_union_98849:
            # Runtime conditional SSA (line 1412)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Call to reverse(...): (line 1413)
        # Processing the call keyword arguments (line 1413)
        kwargs_98855 = {}
        
        # Obtaining the type of the subscript
        str_98850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1413, 11), 'str', 'cleanupfrompyobj')
        # Getting the type of 'rd' (line 1413)
        rd_98851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1413, 8), 'rd', False)
        # Obtaining the member '__getitem__' of a type (line 1413)
        getitem___98852 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1413, 8), rd_98851, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1413)
        subscript_call_result_98853 = invoke(stypy.reporting.localization.Localization(__file__, 1413, 8), getitem___98852, str_98850)
        
        # Obtaining the member 'reverse' of a type (line 1413)
        reverse_98854 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1413, 8), subscript_call_result_98853, 'reverse')
        # Calling reverse(args, kwargs) (line 1413)
        reverse_call_result_98856 = invoke(stypy.reporting.localization.Localization(__file__, 1413, 8), reverse_98854, *[], **kwargs_98855)
        

        if more_types_in_union_98849:
            # SSA join for if statement (line 1412)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Type idiom detected: calculating its left and rigth part (line 1414)
    # Getting the type of 'list' (line 1414)
    list_98857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1414, 40), 'list')
    
    # Obtaining the type of the subscript
    str_98858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1414, 21), 'str', 'closepyobjfrom')
    # Getting the type of 'rd' (line 1414)
    rd_98859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1414, 18), 'rd')
    # Obtaining the member '__getitem__' of a type (line 1414)
    getitem___98860 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1414, 18), rd_98859, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1414)
    subscript_call_result_98861 = invoke(stypy.reporting.localization.Localization(__file__, 1414, 18), getitem___98860, str_98858)
    
    
    (may_be_98862, more_types_in_union_98863) = may_be_subtype(list_98857, subscript_call_result_98861)

    if may_be_98862:

        if more_types_in_union_98863:
            # Runtime conditional SSA (line 1414)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Call to reverse(...): (line 1415)
        # Processing the call keyword arguments (line 1415)
        kwargs_98869 = {}
        
        # Obtaining the type of the subscript
        str_98864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1415, 11), 'str', 'closepyobjfrom')
        # Getting the type of 'rd' (line 1415)
        rd_98865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1415, 8), 'rd', False)
        # Obtaining the member '__getitem__' of a type (line 1415)
        getitem___98866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1415, 8), rd_98865, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1415)
        subscript_call_result_98867 = invoke(stypy.reporting.localization.Localization(__file__, 1415, 8), getitem___98866, str_98864)
        
        # Obtaining the member 'reverse' of a type (line 1415)
        reverse_98868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1415, 8), subscript_call_result_98867, 'reverse')
        # Calling reverse(args, kwargs) (line 1415)
        reverse_call_result_98870 = invoke(stypy.reporting.localization.Localization(__file__, 1415, 8), reverse_98868, *[], **kwargs_98869)
        

        if more_types_in_union_98863:
            # SSA join for if statement (line 1414)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Subscript (line 1416):
    
    # Assigning a Call to a Subscript (line 1416):
    
    # Call to stripcomma(...): (line 1416)
    # Processing the call arguments (line 1416)
    
    # Call to replace(...): (line 1416)
    # Processing the call arguments (line 1416)
    str_98873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1416, 44), 'str', '#docsign##docsignopt##docsignxa#')
    
    # Obtaining an instance of the builtin type 'dict' (line 1417)
    dict_98874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1417, 44), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1417)
    # Adding element type (key, value) (line 1417)
    str_98875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1417, 45), 'str', 'docsign')
    
    # Obtaining the type of the subscript
    str_98876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1417, 59), 'str', 'docsign')
    # Getting the type of 'rd' (line 1417)
    rd_98877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1417, 56), 'rd', False)
    # Obtaining the member '__getitem__' of a type (line 1417)
    getitem___98878 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1417, 56), rd_98877, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1417)
    subscript_call_result_98879 = invoke(stypy.reporting.localization.Localization(__file__, 1417, 56), getitem___98878, str_98876)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1417, 44), dict_98874, (str_98875, subscript_call_result_98879))
    # Adding element type (key, value) (line 1417)
    str_98880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1418, 45), 'str', 'docsignopt')
    
    # Obtaining the type of the subscript
    str_98881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1418, 62), 'str', 'docsignopt')
    # Getting the type of 'rd' (line 1418)
    rd_98882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1418, 59), 'rd', False)
    # Obtaining the member '__getitem__' of a type (line 1418)
    getitem___98883 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1418, 59), rd_98882, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1418)
    subscript_call_result_98884 = invoke(stypy.reporting.localization.Localization(__file__, 1418, 59), getitem___98883, str_98881)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1417, 44), dict_98874, (str_98880, subscript_call_result_98884))
    # Adding element type (key, value) (line 1417)
    str_98885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1419, 45), 'str', 'docsignxa')
    
    # Obtaining the type of the subscript
    str_98886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1419, 61), 'str', 'docsignxa')
    # Getting the type of 'rd' (line 1419)
    rd_98887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1419, 58), 'rd', False)
    # Obtaining the member '__getitem__' of a type (line 1419)
    getitem___98888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1419, 58), rd_98887, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1419)
    subscript_call_result_98889 = invoke(stypy.reporting.localization.Localization(__file__, 1419, 58), getitem___98888, str_98886)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1417, 44), dict_98874, (str_98885, subscript_call_result_98889))
    
    # Processing the call keyword arguments (line 1416)
    kwargs_98890 = {}
    # Getting the type of 'replace' (line 1416)
    replace_98872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 36), 'replace', False)
    # Calling replace(args, kwargs) (line 1416)
    replace_call_result_98891 = invoke(stypy.reporting.localization.Localization(__file__, 1416, 36), replace_98872, *[str_98873, dict_98874], **kwargs_98890)
    
    # Processing the call keyword arguments (line 1416)
    kwargs_98892 = {}
    # Getting the type of 'stripcomma' (line 1416)
    stripcomma_98871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 25), 'stripcomma', False)
    # Calling stripcomma(args, kwargs) (line 1416)
    stripcomma_call_result_98893 = invoke(stypy.reporting.localization.Localization(__file__, 1416, 25), stripcomma_98871, *[replace_call_result_98891], **kwargs_98892)
    
    # Getting the type of 'rd' (line 1416)
    rd_98894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 4), 'rd')
    str_98895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1416, 7), 'str', 'docsignature')
    # Storing an element on a container (line 1416)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1416, 4), rd_98894, (str_98895, stripcomma_call_result_98893))
    
    # Assigning a Call to a Name (line 1420):
    
    # Assigning a Call to a Name (line 1420):
    
    # Call to stripcomma(...): (line 1420)
    # Processing the call arguments (line 1420)
    
    # Call to replace(...): (line 1420)
    # Processing the call arguments (line 1420)
    str_98898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1420, 33), 'str', '#docsignopt##docsignxa#')
    
    # Obtaining an instance of the builtin type 'dict' (line 1421)
    dict_98899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1421, 33), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1421)
    # Adding element type (key, value) (line 1421)
    str_98900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1421, 34), 'str', 'docsignxa')
    
    # Obtaining the type of the subscript
    str_98901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1421, 50), 'str', 'docsignxashort')
    # Getting the type of 'rd' (line 1421)
    rd_98902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1421, 47), 'rd', False)
    # Obtaining the member '__getitem__' of a type (line 1421)
    getitem___98903 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1421, 47), rd_98902, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1421)
    subscript_call_result_98904 = invoke(stypy.reporting.localization.Localization(__file__, 1421, 47), getitem___98903, str_98901)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1421, 33), dict_98899, (str_98900, subscript_call_result_98904))
    # Adding element type (key, value) (line 1421)
    str_98905 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1422, 34), 'str', 'docsignopt')
    
    # Obtaining the type of the subscript
    str_98906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1422, 51), 'str', 'docsignoptshort')
    # Getting the type of 'rd' (line 1422)
    rd_98907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1422, 48), 'rd', False)
    # Obtaining the member '__getitem__' of a type (line 1422)
    getitem___98908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1422, 48), rd_98907, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1422)
    subscript_call_result_98909 = invoke(stypy.reporting.localization.Localization(__file__, 1422, 48), getitem___98908, str_98906)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1421, 33), dict_98899, (str_98905, subscript_call_result_98909))
    
    # Processing the call keyword arguments (line 1420)
    kwargs_98910 = {}
    # Getting the type of 'replace' (line 1420)
    replace_98897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1420, 25), 'replace', False)
    # Calling replace(args, kwargs) (line 1420)
    replace_call_result_98911 = invoke(stypy.reporting.localization.Localization(__file__, 1420, 25), replace_98897, *[str_98898, dict_98899], **kwargs_98910)
    
    # Processing the call keyword arguments (line 1420)
    kwargs_98912 = {}
    # Getting the type of 'stripcomma' (line 1420)
    stripcomma_98896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1420, 14), 'stripcomma', False)
    # Calling stripcomma(args, kwargs) (line 1420)
    stripcomma_call_result_98913 = invoke(stypy.reporting.localization.Localization(__file__, 1420, 14), stripcomma_98896, *[replace_call_result_98911], **kwargs_98912)
    
    # Assigning a type to the variable 'optargs' (line 1420)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1420, 4), 'optargs', stripcomma_call_result_98913)
    
    
    # Getting the type of 'optargs' (line 1424)
    optargs_98914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 7), 'optargs')
    str_98915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1424, 18), 'str', '')
    # Applying the binary operator '==' (line 1424)
    result_eq_98916 = python_operator(stypy.reporting.localization.Localization(__file__, 1424, 7), '==', optargs_98914, str_98915)
    
    # Testing the type of an if condition (line 1424)
    if_condition_98917 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1424, 4), result_eq_98916)
    # Assigning a type to the variable 'if_condition_98917' (line 1424)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1424, 4), 'if_condition_98917', if_condition_98917)
    # SSA begins for if statement (line 1424)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Subscript (line 1425):
    
    # Assigning a Call to a Subscript (line 1425):
    
    # Call to stripcomma(...): (line 1425)
    # Processing the call arguments (line 1425)
    
    # Call to replace(...): (line 1426)
    # Processing the call arguments (line 1426)
    str_98920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1426, 20), 'str', '#docsign#')
    
    # Obtaining an instance of the builtin type 'dict' (line 1426)
    dict_98921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1426, 33), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1426)
    # Adding element type (key, value) (line 1426)
    str_98922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1426, 34), 'str', 'docsign')
    
    # Obtaining the type of the subscript
    str_98923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1426, 48), 'str', 'docsign')
    # Getting the type of 'rd' (line 1426)
    rd_98924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1426, 45), 'rd', False)
    # Obtaining the member '__getitem__' of a type (line 1426)
    getitem___98925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1426, 45), rd_98924, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1426)
    subscript_call_result_98926 = invoke(stypy.reporting.localization.Localization(__file__, 1426, 45), getitem___98925, str_98923)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1426, 33), dict_98921, (str_98922, subscript_call_result_98926))
    
    # Processing the call keyword arguments (line 1426)
    kwargs_98927 = {}
    # Getting the type of 'replace' (line 1426)
    replace_98919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1426, 12), 'replace', False)
    # Calling replace(args, kwargs) (line 1426)
    replace_call_result_98928 = invoke(stypy.reporting.localization.Localization(__file__, 1426, 12), replace_98919, *[str_98920, dict_98921], **kwargs_98927)
    
    # Processing the call keyword arguments (line 1425)
    kwargs_98929 = {}
    # Getting the type of 'stripcomma' (line 1425)
    stripcomma_98918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1425, 34), 'stripcomma', False)
    # Calling stripcomma(args, kwargs) (line 1425)
    stripcomma_call_result_98930 = invoke(stypy.reporting.localization.Localization(__file__, 1425, 34), stripcomma_98918, *[replace_call_result_98928], **kwargs_98929)
    
    # Getting the type of 'rd' (line 1425)
    rd_98931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1425, 8), 'rd')
    str_98932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1425, 11), 'str', 'docsignatureshort')
    # Storing an element on a container (line 1425)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1425, 8), rd_98931, (str_98932, stripcomma_call_result_98930))
    # SSA branch for the else part of an if statement (line 1424)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Subscript (line 1428):
    
    # Assigning a Call to a Subscript (line 1428):
    
    # Call to replace(...): (line 1428)
    # Processing the call arguments (line 1428)
    str_98934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1428, 42), 'str', '#docsign#[#docsignopt#]')
    
    # Obtaining an instance of the builtin type 'dict' (line 1429)
    dict_98935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1429, 42), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1429)
    # Adding element type (key, value) (line 1429)
    str_98936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1429, 43), 'str', 'docsign')
    
    # Obtaining the type of the subscript
    str_98937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1429, 57), 'str', 'docsign')
    # Getting the type of 'rd' (line 1429)
    rd_98938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1429, 54), 'rd', False)
    # Obtaining the member '__getitem__' of a type (line 1429)
    getitem___98939 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1429, 54), rd_98938, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1429)
    subscript_call_result_98940 = invoke(stypy.reporting.localization.Localization(__file__, 1429, 54), getitem___98939, str_98937)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1429, 42), dict_98935, (str_98936, subscript_call_result_98940))
    # Adding element type (key, value) (line 1429)
    str_98941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1430, 43), 'str', 'docsignopt')
    # Getting the type of 'optargs' (line 1430)
    optargs_98942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1430, 57), 'optargs', False)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1429, 42), dict_98935, (str_98941, optargs_98942))
    
    # Processing the call keyword arguments (line 1428)
    kwargs_98943 = {}
    # Getting the type of 'replace' (line 1428)
    replace_98933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1428, 34), 'replace', False)
    # Calling replace(args, kwargs) (line 1428)
    replace_call_result_98944 = invoke(stypy.reporting.localization.Localization(__file__, 1428, 34), replace_98933, *[str_98934, dict_98935], **kwargs_98943)
    
    # Getting the type of 'rd' (line 1428)
    rd_98945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1428, 8), 'rd')
    str_98946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1428, 11), 'str', 'docsignatureshort')
    # Storing an element on a container (line 1428)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1428, 8), rd_98945, (str_98946, replace_call_result_98944))
    # SSA join for if statement (line 1424)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Subscript (line 1432):
    
    # Assigning a Call to a Subscript (line 1432):
    
    # Call to replace(...): (line 1432)
    # Processing the call arguments (line 1432)
    str_98952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1432, 67), 'str', '_')
    str_98953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1432, 72), 'str', '\\_')
    # Processing the call keyword arguments (line 1432)
    kwargs_98954 = {}
    
    # Obtaining the type of the subscript
    str_98947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1432, 38), 'str', 'docsignatureshort')
    # Getting the type of 'rd' (line 1432)
    rd_98948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1432, 35), 'rd', False)
    # Obtaining the member '__getitem__' of a type (line 1432)
    getitem___98949 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1432, 35), rd_98948, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1432)
    subscript_call_result_98950 = invoke(stypy.reporting.localization.Localization(__file__, 1432, 35), getitem___98949, str_98947)
    
    # Obtaining the member 'replace' of a type (line 1432)
    replace_98951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1432, 35), subscript_call_result_98950, 'replace')
    # Calling replace(args, kwargs) (line 1432)
    replace_call_result_98955 = invoke(stypy.reporting.localization.Localization(__file__, 1432, 35), replace_98951, *[str_98952, str_98953], **kwargs_98954)
    
    # Getting the type of 'rd' (line 1432)
    rd_98956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1432, 4), 'rd')
    str_98957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1432, 7), 'str', 'latexdocsignatureshort')
    # Storing an element on a container (line 1432)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1432, 4), rd_98956, (str_98957, replace_call_result_98955))
    
    # Assigning a Call to a Subscript (line 1433):
    
    # Assigning a Call to a Subscript (line 1433):
    
    # Call to replace(...): (line 1433)
    # Processing the call arguments (line 1433)
    str_98963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1434, 42), 'str', ',')
    str_98964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1434, 47), 'str', ', ')
    # Processing the call keyword arguments (line 1433)
    kwargs_98965 = {}
    
    # Obtaining the type of the subscript
    str_98958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1434, 8), 'str', 'latexdocsignatureshort')
    # Getting the type of 'rd' (line 1433)
    rd_98959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1433, 35), 'rd', False)
    # Obtaining the member '__getitem__' of a type (line 1433)
    getitem___98960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1433, 35), rd_98959, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1433)
    subscript_call_result_98961 = invoke(stypy.reporting.localization.Localization(__file__, 1433, 35), getitem___98960, str_98958)
    
    # Obtaining the member 'replace' of a type (line 1433)
    replace_98962 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1433, 35), subscript_call_result_98961, 'replace')
    # Calling replace(args, kwargs) (line 1433)
    replace_call_result_98966 = invoke(stypy.reporting.localization.Localization(__file__, 1433, 35), replace_98962, *[str_98963, str_98964], **kwargs_98965)
    
    # Getting the type of 'rd' (line 1433)
    rd_98967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1433, 4), 'rd')
    str_98968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1433, 7), 'str', 'latexdocsignatureshort')
    # Storing an element on a container (line 1433)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1433, 4), rd_98967, (str_98968, replace_call_result_98966))
    
    # Assigning a Call to a Name (line 1435):
    
    # Assigning a Call to a Name (line 1435):
    
    # Call to stripcomma(...): (line 1435)
    # Processing the call arguments (line 1435)
    
    # Call to replace(...): (line 1435)
    # Processing the call arguments (line 1435)
    str_98971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1435, 29), 'str', '#callfortran##callfortranappend#')
    
    # Obtaining an instance of the builtin type 'dict' (line 1435)
    dict_98972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1435, 65), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1435)
    # Adding element type (key, value) (line 1435)
    str_98973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1436, 21), 'str', 'callfortran')
    
    # Obtaining the type of the subscript
    str_98974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1436, 39), 'str', 'callfortran')
    # Getting the type of 'rd' (line 1436)
    rd_98975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1436, 36), 'rd', False)
    # Obtaining the member '__getitem__' of a type (line 1436)
    getitem___98976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1436, 36), rd_98975, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1436)
    subscript_call_result_98977 = invoke(stypy.reporting.localization.Localization(__file__, 1436, 36), getitem___98976, str_98974)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1435, 65), dict_98972, (str_98973, subscript_call_result_98977))
    # Adding element type (key, value) (line 1435)
    str_98978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1436, 55), 'str', 'callfortranappend')
    
    # Obtaining the type of the subscript
    str_98979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1436, 79), 'str', 'callfortranappend')
    # Getting the type of 'rd' (line 1436)
    rd_98980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1436, 76), 'rd', False)
    # Obtaining the member '__getitem__' of a type (line 1436)
    getitem___98981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1436, 76), rd_98980, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1436)
    subscript_call_result_98982 = invoke(stypy.reporting.localization.Localization(__file__, 1436, 76), getitem___98981, str_98979)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1435, 65), dict_98972, (str_98978, subscript_call_result_98982))
    
    # Processing the call keyword arguments (line 1435)
    kwargs_98983 = {}
    # Getting the type of 'replace' (line 1435)
    replace_98970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1435, 21), 'replace', False)
    # Calling replace(args, kwargs) (line 1435)
    replace_call_result_98984 = invoke(stypy.reporting.localization.Localization(__file__, 1435, 21), replace_98970, *[str_98971, dict_98972], **kwargs_98983)
    
    # Processing the call keyword arguments (line 1435)
    kwargs_98985 = {}
    # Getting the type of 'stripcomma' (line 1435)
    stripcomma_98969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1435, 10), 'stripcomma', False)
    # Calling stripcomma(args, kwargs) (line 1435)
    stripcomma_call_result_98986 = invoke(stypy.reporting.localization.Localization(__file__, 1435, 10), stripcomma_98969, *[replace_call_result_98984], **kwargs_98985)
    
    # Assigning a type to the variable 'cfs' (line 1435)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1435, 4), 'cfs', stripcomma_call_result_98986)
    
    
    
    # Call to len(...): (line 1437)
    # Processing the call arguments (line 1437)
    
    # Obtaining the type of the subscript
    str_98988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1437, 14), 'str', 'callfortranappend')
    # Getting the type of 'rd' (line 1437)
    rd_98989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1437, 11), 'rd', False)
    # Obtaining the member '__getitem__' of a type (line 1437)
    getitem___98990 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1437, 11), rd_98989, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1437)
    subscript_call_result_98991 = invoke(stypy.reporting.localization.Localization(__file__, 1437, 11), getitem___98990, str_98988)
    
    # Processing the call keyword arguments (line 1437)
    kwargs_98992 = {}
    # Getting the type of 'len' (line 1437)
    len_98987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1437, 7), 'len', False)
    # Calling len(args, kwargs) (line 1437)
    len_call_result_98993 = invoke(stypy.reporting.localization.Localization(__file__, 1437, 7), len_98987, *[subscript_call_result_98991], **kwargs_98992)
    
    int_98994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1437, 38), 'int')
    # Applying the binary operator '>' (line 1437)
    result_gt_98995 = python_operator(stypy.reporting.localization.Localization(__file__, 1437, 7), '>', len_call_result_98993, int_98994)
    
    # Testing the type of an if condition (line 1437)
    if_condition_98996 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1437, 4), result_gt_98995)
    # Assigning a type to the variable 'if_condition_98996' (line 1437)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1437, 4), 'if_condition_98996', if_condition_98996)
    # SSA begins for if statement (line 1437)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Subscript (line 1438):
    
    # Assigning a Call to a Subscript (line 1438):
    
    # Call to stripcomma(...): (line 1438)
    # Processing the call arguments (line 1438)
    
    # Call to replace(...): (line 1438)
    # Processing the call arguments (line 1438)
    str_98999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1438, 53), 'str', '#callfortran# 0,#callfortranappend#')
    
    # Obtaining an instance of the builtin type 'dict' (line 1438)
    dict_99000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1438, 92), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1438)
    # Adding element type (key, value) (line 1438)
    str_99001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1439, 45), 'str', 'callfortran')
    
    # Obtaining the type of the subscript
    str_99002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1439, 63), 'str', 'callfortran')
    # Getting the type of 'rd' (line 1439)
    rd_99003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1439, 60), 'rd', False)
    # Obtaining the member '__getitem__' of a type (line 1439)
    getitem___99004 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1439, 60), rd_99003, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1439)
    subscript_call_result_99005 = invoke(stypy.reporting.localization.Localization(__file__, 1439, 60), getitem___99004, str_99002)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1438, 92), dict_99000, (str_99001, subscript_call_result_99005))
    # Adding element type (key, value) (line 1438)
    str_99006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1439, 79), 'str', 'callfortranappend')
    
    # Obtaining the type of the subscript
    str_99007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1439, 103), 'str', 'callfortranappend')
    # Getting the type of 'rd' (line 1439)
    rd_99008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1439, 100), 'rd', False)
    # Obtaining the member '__getitem__' of a type (line 1439)
    getitem___99009 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1439, 100), rd_99008, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1439)
    subscript_call_result_99010 = invoke(stypy.reporting.localization.Localization(__file__, 1439, 100), getitem___99009, str_99007)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1438, 92), dict_99000, (str_99006, subscript_call_result_99010))
    
    # Processing the call keyword arguments (line 1438)
    kwargs_99011 = {}
    # Getting the type of 'replace' (line 1438)
    replace_98998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1438, 45), 'replace', False)
    # Calling replace(args, kwargs) (line 1438)
    replace_call_result_99012 = invoke(stypy.reporting.localization.Localization(__file__, 1438, 45), replace_98998, *[str_98999, dict_99000], **kwargs_99011)
    
    # Processing the call keyword arguments (line 1438)
    kwargs_99013 = {}
    # Getting the type of 'stripcomma' (line 1438)
    stripcomma_98997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1438, 34), 'stripcomma', False)
    # Calling stripcomma(args, kwargs) (line 1438)
    stripcomma_call_result_99014 = invoke(stypy.reporting.localization.Localization(__file__, 1438, 34), stripcomma_98997, *[replace_call_result_99012], **kwargs_99013)
    
    # Getting the type of 'rd' (line 1438)
    rd_99015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1438, 8), 'rd')
    str_99016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1438, 11), 'str', 'callcompaqfortran')
    # Storing an element on a container (line 1438)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1438, 8), rd_99015, (str_99016, stripcomma_call_result_99014))
    # SSA branch for the else part of an if statement (line 1437)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Name to a Subscript (line 1441):
    
    # Assigning a Name to a Subscript (line 1441):
    # Getting the type of 'cfs' (line 1441)
    cfs_99017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1441, 34), 'cfs')
    # Getting the type of 'rd' (line 1441)
    rd_99018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1441, 8), 'rd')
    str_99019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1441, 11), 'str', 'callcompaqfortran')
    # Storing an element on a container (line 1441)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1441, 8), rd_99018, (str_99019, cfs_99017))
    # SSA join for if statement (line 1437)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 1442):
    
    # Assigning a Name to a Subscript (line 1442):
    # Getting the type of 'cfs' (line 1442)
    cfs_99020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1442, 24), 'cfs')
    # Getting the type of 'rd' (line 1442)
    rd_99021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1442, 4), 'rd')
    str_99022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1442, 7), 'str', 'callfortran')
    # Storing an element on a container (line 1442)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1442, 4), rd_99021, (str_99022, cfs_99020))
    
    # Type idiom detected: calculating its left and rigth part (line 1443)
    # Getting the type of 'list' (line 1443)
    list_99023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1443, 35), 'list')
    
    # Obtaining the type of the subscript
    str_99024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1443, 21), 'str', 'docreturn')
    # Getting the type of 'rd' (line 1443)
    rd_99025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1443, 18), 'rd')
    # Obtaining the member '__getitem__' of a type (line 1443)
    getitem___99026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1443, 18), rd_99025, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1443)
    subscript_call_result_99027 = invoke(stypy.reporting.localization.Localization(__file__, 1443, 18), getitem___99026, str_99024)
    
    
    (may_be_99028, more_types_in_union_99029) = may_be_subtype(list_99023, subscript_call_result_99027)

    if may_be_99028:

        if more_types_in_union_99029:
            # Runtime conditional SSA (line 1443)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a BinOp to a Subscript (line 1444):
        
        # Assigning a BinOp to a Subscript (line 1444):
        
        # Call to stripcomma(...): (line 1444)
        # Processing the call arguments (line 1444)
        
        # Call to replace(...): (line 1445)
        # Processing the call arguments (line 1445)
        str_99032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1445, 20), 'str', '#docreturn#')
        
        # Obtaining an instance of the builtin type 'dict' (line 1445)
        dict_99033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1445, 35), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1445)
        # Adding element type (key, value) (line 1445)
        str_99034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1445, 36), 'str', 'docreturn')
        
        # Obtaining the type of the subscript
        str_99035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1445, 52), 'str', 'docreturn')
        # Getting the type of 'rd' (line 1445)
        rd_99036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1445, 49), 'rd', False)
        # Obtaining the member '__getitem__' of a type (line 1445)
        getitem___99037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1445, 49), rd_99036, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1445)
        subscript_call_result_99038 = invoke(stypy.reporting.localization.Localization(__file__, 1445, 49), getitem___99037, str_99035)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1445, 35), dict_99033, (str_99034, subscript_call_result_99038))
        
        # Processing the call keyword arguments (line 1445)
        kwargs_99039 = {}
        # Getting the type of 'replace' (line 1445)
        replace_99031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1445, 12), 'replace', False)
        # Calling replace(args, kwargs) (line 1445)
        replace_call_result_99040 = invoke(stypy.reporting.localization.Localization(__file__, 1445, 12), replace_99031, *[str_99032, dict_99033], **kwargs_99039)
        
        # Processing the call keyword arguments (line 1444)
        kwargs_99041 = {}
        # Getting the type of 'stripcomma' (line 1444)
        stripcomma_99030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1444, 26), 'stripcomma', False)
        # Calling stripcomma(args, kwargs) (line 1444)
        stripcomma_call_result_99042 = invoke(stypy.reporting.localization.Localization(__file__, 1444, 26), stripcomma_99030, *[replace_call_result_99040], **kwargs_99041)
        
        str_99043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1445, 70), 'str', ' = ')
        # Applying the binary operator '+' (line 1444)
        result_add_99044 = python_operator(stypy.reporting.localization.Localization(__file__, 1444, 26), '+', stripcomma_call_result_99042, str_99043)
        
        # Getting the type of 'rd' (line 1444)
        rd_99045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1444, 8), 'rd')
        str_99046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1444, 11), 'str', 'docreturn')
        # Storing an element on a container (line 1444)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1444, 8), rd_99045, (str_99046, result_add_99044))

        if more_types_in_union_99029:
            # SSA join for if statement (line 1443)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a List to a Subscript (line 1446):
    
    # Assigning a List to a Subscript (line 1446):
    
    # Obtaining an instance of the builtin type 'list' (line 1446)
    list_99047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1446, 24), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1446)
    
    # Getting the type of 'rd' (line 1446)
    rd_99048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1446, 4), 'rd')
    str_99049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1446, 7), 'str', 'docstrsigns')
    # Storing an element on a container (line 1446)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1446, 4), rd_99048, (str_99049, list_99047))
    
    # Assigning a List to a Subscript (line 1447):
    
    # Assigning a List to a Subscript (line 1447):
    
    # Obtaining an instance of the builtin type 'list' (line 1447)
    list_99050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1447, 29), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1447)
    
    # Getting the type of 'rd' (line 1447)
    rd_99051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1447, 4), 'rd')
    str_99052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1447, 7), 'str', 'latexdocstrsigns')
    # Storing an element on a container (line 1447)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1447, 4), rd_99051, (str_99052, list_99050))
    
    
    # Obtaining an instance of the builtin type 'list' (line 1448)
    list_99053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1448, 13), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1448)
    # Adding element type (line 1448)
    str_99054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1448, 14), 'str', 'docstrreq')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1448, 13), list_99053, str_99054)
    # Adding element type (line 1448)
    str_99055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1448, 27), 'str', 'docstropt')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1448, 13), list_99053, str_99055)
    # Adding element type (line 1448)
    str_99056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1448, 40), 'str', 'docstrout')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1448, 13), list_99053, str_99056)
    # Adding element type (line 1448)
    str_99057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1448, 53), 'str', 'docstrcbs')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1448, 13), list_99053, str_99057)
    
    # Testing the type of a for loop iterable (line 1448)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1448, 4), list_99053)
    # Getting the type of the for loop variable (line 1448)
    for_loop_var_99058 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1448, 4), list_99053)
    # Assigning a type to the variable 'k' (line 1448)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1448, 4), 'k', for_loop_var_99058)
    # SSA begins for a for statement (line 1448)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'k' (line 1449)
    k_99059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1449, 11), 'k')
    # Getting the type of 'rd' (line 1449)
    rd_99060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1449, 16), 'rd')
    # Applying the binary operator 'in' (line 1449)
    result_contains_99061 = python_operator(stypy.reporting.localization.Localization(__file__, 1449, 11), 'in', k_99059, rd_99060)
    
    
    # Call to isinstance(...): (line 1449)
    # Processing the call arguments (line 1449)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1449)
    k_99063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1449, 37), 'k', False)
    # Getting the type of 'rd' (line 1449)
    rd_99064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1449, 34), 'rd', False)
    # Obtaining the member '__getitem__' of a type (line 1449)
    getitem___99065 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1449, 34), rd_99064, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1449)
    subscript_call_result_99066 = invoke(stypy.reporting.localization.Localization(__file__, 1449, 34), getitem___99065, k_99063)
    
    # Getting the type of 'list' (line 1449)
    list_99067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1449, 41), 'list', False)
    # Processing the call keyword arguments (line 1449)
    kwargs_99068 = {}
    # Getting the type of 'isinstance' (line 1449)
    isinstance_99062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1449, 23), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 1449)
    isinstance_call_result_99069 = invoke(stypy.reporting.localization.Localization(__file__, 1449, 23), isinstance_99062, *[subscript_call_result_99066, list_99067], **kwargs_99068)
    
    # Applying the binary operator 'and' (line 1449)
    result_and_keyword_99070 = python_operator(stypy.reporting.localization.Localization(__file__, 1449, 11), 'and', result_contains_99061, isinstance_call_result_99069)
    
    # Testing the type of an if condition (line 1449)
    if_condition_99071 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1449, 8), result_and_keyword_99070)
    # Assigning a type to the variable 'if_condition_99071' (line 1449)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1449, 8), 'if_condition_99071', if_condition_99071)
    # SSA begins for if statement (line 1449)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Subscript (line 1450):
    
    # Assigning a BinOp to a Subscript (line 1450):
    
    # Obtaining the type of the subscript
    str_99072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1450, 35), 'str', 'docstrsigns')
    # Getting the type of 'rd' (line 1450)
    rd_99073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1450, 32), 'rd')
    # Obtaining the member '__getitem__' of a type (line 1450)
    getitem___99074 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1450, 32), rd_99073, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1450)
    subscript_call_result_99075 = invoke(stypy.reporting.localization.Localization(__file__, 1450, 32), getitem___99074, str_99072)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1450)
    k_99076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1450, 55), 'k')
    # Getting the type of 'rd' (line 1450)
    rd_99077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1450, 52), 'rd')
    # Obtaining the member '__getitem__' of a type (line 1450)
    getitem___99078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1450, 52), rd_99077, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1450)
    subscript_call_result_99079 = invoke(stypy.reporting.localization.Localization(__file__, 1450, 52), getitem___99078, k_99076)
    
    # Applying the binary operator '+' (line 1450)
    result_add_99080 = python_operator(stypy.reporting.localization.Localization(__file__, 1450, 32), '+', subscript_call_result_99075, subscript_call_result_99079)
    
    # Getting the type of 'rd' (line 1450)
    rd_99081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1450, 12), 'rd')
    str_99082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1450, 15), 'str', 'docstrsigns')
    # Storing an element on a container (line 1450)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1450, 12), rd_99081, (str_99082, result_add_99080))
    # SSA join for if statement (line 1449)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 1451):
    
    # Assigning a BinOp to a Name (line 1451):
    str_99083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1451, 12), 'str', 'latex')
    # Getting the type of 'k' (line 1451)
    k_99084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1451, 22), 'k')
    # Applying the binary operator '+' (line 1451)
    result_add_99085 = python_operator(stypy.reporting.localization.Localization(__file__, 1451, 12), '+', str_99083, k_99084)
    
    # Assigning a type to the variable 'k' (line 1451)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1451, 8), 'k', result_add_99085)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'k' (line 1452)
    k_99086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1452, 11), 'k')
    # Getting the type of 'rd' (line 1452)
    rd_99087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1452, 16), 'rd')
    # Applying the binary operator 'in' (line 1452)
    result_contains_99088 = python_operator(stypy.reporting.localization.Localization(__file__, 1452, 11), 'in', k_99086, rd_99087)
    
    
    # Call to isinstance(...): (line 1452)
    # Processing the call arguments (line 1452)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1452)
    k_99090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1452, 37), 'k', False)
    # Getting the type of 'rd' (line 1452)
    rd_99091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1452, 34), 'rd', False)
    # Obtaining the member '__getitem__' of a type (line 1452)
    getitem___99092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1452, 34), rd_99091, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1452)
    subscript_call_result_99093 = invoke(stypy.reporting.localization.Localization(__file__, 1452, 34), getitem___99092, k_99090)
    
    # Getting the type of 'list' (line 1452)
    list_99094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1452, 41), 'list', False)
    # Processing the call keyword arguments (line 1452)
    kwargs_99095 = {}
    # Getting the type of 'isinstance' (line 1452)
    isinstance_99089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1452, 23), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 1452)
    isinstance_call_result_99096 = invoke(stypy.reporting.localization.Localization(__file__, 1452, 23), isinstance_99089, *[subscript_call_result_99093, list_99094], **kwargs_99095)
    
    # Applying the binary operator 'and' (line 1452)
    result_and_keyword_99097 = python_operator(stypy.reporting.localization.Localization(__file__, 1452, 11), 'and', result_contains_99088, isinstance_call_result_99096)
    
    # Testing the type of an if condition (line 1452)
    if_condition_99098 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1452, 8), result_and_keyword_99097)
    # Assigning a type to the variable 'if_condition_99098' (line 1452)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1452, 8), 'if_condition_99098', if_condition_99098)
    # SSA begins for if statement (line 1452)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Subscript (line 1453):
    
    # Assigning a BinOp to a Subscript (line 1453):
    
    # Obtaining the type of the subscript
    str_99099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1453, 40), 'str', 'latexdocstrsigns')
    # Getting the type of 'rd' (line 1453)
    rd_99100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1453, 37), 'rd')
    # Obtaining the member '__getitem__' of a type (line 1453)
    getitem___99101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1453, 37), rd_99100, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1453)
    subscript_call_result_99102 = invoke(stypy.reporting.localization.Localization(__file__, 1453, 37), getitem___99101, str_99099)
    
    
    # Obtaining the type of the subscript
    int_99103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1453, 68), 'int')
    int_99104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1453, 70), 'int')
    slice_99105 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1453, 62), int_99103, int_99104, None)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1453)
    k_99106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1453, 65), 'k')
    # Getting the type of 'rd' (line 1453)
    rd_99107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1453, 62), 'rd')
    # Obtaining the member '__getitem__' of a type (line 1453)
    getitem___99108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1453, 62), rd_99107, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1453)
    subscript_call_result_99109 = invoke(stypy.reporting.localization.Localization(__file__, 1453, 62), getitem___99108, k_99106)
    
    # Obtaining the member '__getitem__' of a type (line 1453)
    getitem___99110 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1453, 62), subscript_call_result_99109, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1453)
    subscript_call_result_99111 = invoke(stypy.reporting.localization.Localization(__file__, 1453, 62), getitem___99110, slice_99105)
    
    # Applying the binary operator '+' (line 1453)
    result_add_99112 = python_operator(stypy.reporting.localization.Localization(__file__, 1453, 37), '+', subscript_call_result_99102, subscript_call_result_99111)
    
    
    # Obtaining an instance of the builtin type 'list' (line 1454)
    list_99113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1454, 16), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1454)
    # Adding element type (line 1454)
    str_99114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1454, 17), 'str', '\\begin{description}')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1454, 16), list_99113, str_99114)
    
    # Applying the binary operator '+' (line 1453)
    result_add_99115 = python_operator(stypy.reporting.localization.Localization(__file__, 1453, 73), '+', result_add_99112, list_99113)
    
    
    # Obtaining the type of the subscript
    int_99116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1454, 49), 'int')
    slice_99117 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1454, 43), int_99116, None, None)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 1454)
    k_99118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1454, 46), 'k')
    # Getting the type of 'rd' (line 1454)
    rd_99119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1454, 43), 'rd')
    # Obtaining the member '__getitem__' of a type (line 1454)
    getitem___99120 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1454, 43), rd_99119, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1454)
    subscript_call_result_99121 = invoke(stypy.reporting.localization.Localization(__file__, 1454, 43), getitem___99120, k_99118)
    
    # Obtaining the member '__getitem__' of a type (line 1454)
    getitem___99122 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1454, 43), subscript_call_result_99121, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1454)
    subscript_call_result_99123 = invoke(stypy.reporting.localization.Localization(__file__, 1454, 43), getitem___99122, slice_99117)
    
    # Applying the binary operator '+' (line 1454)
    result_add_99124 = python_operator(stypy.reporting.localization.Localization(__file__, 1454, 41), '+', result_add_99115, subscript_call_result_99123)
    
    
    # Obtaining an instance of the builtin type 'list' (line 1455)
    list_99125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1455, 16), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1455)
    # Adding element type (line 1455)
    str_99126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1455, 17), 'str', '\\end{description}')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1455, 16), list_99125, str_99126)
    
    # Applying the binary operator '+' (line 1454)
    result_add_99127 = python_operator(stypy.reporting.localization.Localization(__file__, 1454, 53), '+', result_add_99124, list_99125)
    
    # Getting the type of 'rd' (line 1453)
    rd_99128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1453, 12), 'rd')
    str_99129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1453, 15), 'str', 'latexdocstrsigns')
    # Storing an element on a container (line 1453)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1453, 12), rd_99128, (str_99129, result_add_99127))
    # SSA join for if statement (line 1452)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Obtaining the type of the subscript
    str_99130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1458, 10), 'str', 'keyformat')
    # Getting the type of 'rd' (line 1458)
    rd_99131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1458, 7), 'rd')
    # Obtaining the member '__getitem__' of a type (line 1458)
    getitem___99132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1458, 7), rd_99131, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1458)
    subscript_call_result_99133 = invoke(stypy.reporting.localization.Localization(__file__, 1458, 7), getitem___99132, str_99130)
    
    
    # Obtaining the type of the subscript
    str_99134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1458, 29), 'str', 'xaformat')
    # Getting the type of 'rd' (line 1458)
    rd_99135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1458, 26), 'rd')
    # Obtaining the member '__getitem__' of a type (line 1458)
    getitem___99136 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1458, 26), rd_99135, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1458)
    subscript_call_result_99137 = invoke(stypy.reporting.localization.Localization(__file__, 1458, 26), getitem___99136, str_99134)
    
    # Applying the binary operator 'or' (line 1458)
    result_or_keyword_99138 = python_operator(stypy.reporting.localization.Localization(__file__, 1458, 7), 'or', subscript_call_result_99133, subscript_call_result_99137)
    
    # Testing the type of an if condition (line 1458)
    if_condition_99139 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1458, 4), result_or_keyword_99138)
    # Assigning a type to the variable 'if_condition_99139' (line 1458)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1458, 4), 'if_condition_99139', if_condition_99139)
    # SSA begins for if statement (line 1458)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1459):
    
    # Assigning a Subscript to a Name (line 1459):
    
    # Obtaining the type of the subscript
    str_99140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1459, 23), 'str', 'argformat')
    # Getting the type of 'rd' (line 1459)
    rd_99141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1459, 20), 'rd')
    # Obtaining the member '__getitem__' of a type (line 1459)
    getitem___99142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1459, 20), rd_99141, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1459)
    subscript_call_result_99143 = invoke(stypy.reporting.localization.Localization(__file__, 1459, 20), getitem___99142, str_99140)
    
    # Assigning a type to the variable 'argformat' (line 1459)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1459, 8), 'argformat', subscript_call_result_99143)
    
    # Type idiom detected: calculating its left and rigth part (line 1460)
    # Getting the type of 'list' (line 1460)
    list_99144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 33), 'list')
    # Getting the type of 'argformat' (line 1460)
    argformat_99145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 22), 'argformat')
    
    (may_be_99146, more_types_in_union_99147) = may_be_subtype(list_99144, argformat_99145)

    if may_be_99146:

        if more_types_in_union_99147:
            # Runtime conditional SSA (line 1460)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        # Assigning a type to the variable 'argformat' (line 1460)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1460, 8), 'argformat', remove_not_subtype_from_union(argformat_99145, list))
        
        # Call to append(...): (line 1461)
        # Processing the call arguments (line 1461)
        str_99150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1461, 29), 'str', '|')
        # Processing the call keyword arguments (line 1461)
        kwargs_99151 = {}
        # Getting the type of 'argformat' (line 1461)
        argformat_99148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1461, 12), 'argformat', False)
        # Obtaining the member 'append' of a type (line 1461)
        append_99149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1461, 12), argformat_99148, 'append')
        # Calling append(args, kwargs) (line 1461)
        append_call_result_99152 = invoke(stypy.reporting.localization.Localization(__file__, 1461, 12), append_99149, *[str_99150], **kwargs_99151)
        

        if more_types_in_union_99147:
            # Runtime conditional SSA for else branch (line 1460)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_99146) or more_types_in_union_99147):
        # Assigning a type to the variable 'argformat' (line 1460)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1460, 8), 'argformat', remove_subtype_from_union(argformat_99145, list))
        # Evaluating assert statement condition
        
        # Call to isinstance(...): (line 1463)
        # Processing the call arguments (line 1463)
        # Getting the type of 'argformat' (line 1463)
        argformat_99154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1463, 30), 'argformat', False)
        # Getting the type of 'str' (line 1463)
        str_99155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1463, 41), 'str', False)
        # Processing the call keyword arguments (line 1463)
        kwargs_99156 = {}
        # Getting the type of 'isinstance' (line 1463)
        isinstance_99153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1463, 19), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1463)
        isinstance_call_result_99157 = invoke(stypy.reporting.localization.Localization(__file__, 1463, 19), isinstance_99153, *[argformat_99154, str_99155], **kwargs_99156)
        
        
        # Getting the type of 'rd' (line 1465)
        rd_99158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1465, 12), 'rd')
        
        # Obtaining the type of the subscript
        str_99159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1465, 15), 'str', 'argformat')
        # Getting the type of 'rd' (line 1465)
        rd_99160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1465, 12), 'rd')
        # Obtaining the member '__getitem__' of a type (line 1465)
        getitem___99161 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1465, 12), rd_99160, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1465)
        subscript_call_result_99162 = invoke(stypy.reporting.localization.Localization(__file__, 1465, 12), getitem___99161, str_99159)
        
        str_99163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1465, 31), 'str', '|')
        # Applying the binary operator '+=' (line 1465)
        result_iadd_99164 = python_operator(stypy.reporting.localization.Localization(__file__, 1465, 12), '+=', subscript_call_result_99162, str_99163)
        # Getting the type of 'rd' (line 1465)
        rd_99165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1465, 12), 'rd')
        str_99166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1465, 15), 'str', 'argformat')
        # Storing an element on a container (line 1465)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1465, 12), rd_99165, (str_99166, result_iadd_99164))
        

        if (may_be_99146 and more_types_in_union_99147):
            # SSA join for if statement (line 1460)
            module_type_store = module_type_store.join_ssa_context()


    
    # SSA join for if statement (line 1458)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1467):
    
    # Assigning a Call to a Name (line 1467):
    
    # Call to applyrules(...): (line 1467)
    # Processing the call arguments (line 1467)
    # Getting the type of 'routine_rules' (line 1467)
    routine_rules_99168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1467, 20), 'routine_rules', False)
    # Getting the type of 'rd' (line 1467)
    rd_99169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1467, 35), 'rd', False)
    # Processing the call keyword arguments (line 1467)
    kwargs_99170 = {}
    # Getting the type of 'applyrules' (line 1467)
    applyrules_99167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1467, 9), 'applyrules', False)
    # Calling applyrules(args, kwargs) (line 1467)
    applyrules_call_result_99171 = invoke(stypy.reporting.localization.Localization(__file__, 1467, 9), applyrules_99167, *[routine_rules_99168, rd_99169], **kwargs_99170)
    
    # Assigning a type to the variable 'ar' (line 1467)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1467, 4), 'ar', applyrules_call_result_99171)
    
    
    # Call to ismoduleroutine(...): (line 1468)
    # Processing the call arguments (line 1468)
    # Getting the type of 'rout' (line 1468)
    rout_99173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1468, 23), 'rout', False)
    # Processing the call keyword arguments (line 1468)
    kwargs_99174 = {}
    # Getting the type of 'ismoduleroutine' (line 1468)
    ismoduleroutine_99172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1468, 7), 'ismoduleroutine', False)
    # Calling ismoduleroutine(args, kwargs) (line 1468)
    ismoduleroutine_call_result_99175 = invoke(stypy.reporting.localization.Localization(__file__, 1468, 7), ismoduleroutine_99172, *[rout_99173], **kwargs_99174)
    
    # Testing the type of an if condition (line 1468)
    if_condition_99176 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1468, 4), ismoduleroutine_call_result_99175)
    # Assigning a type to the variable 'if_condition_99176' (line 1468)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1468, 4), 'if_condition_99176', if_condition_99176)
    # SSA begins for if statement (line 1468)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to outmess(...): (line 1469)
    # Processing the call arguments (line 1469)
    str_99178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1469, 16), 'str', '\t\t\t  %s\n')
    
    # Obtaining the type of the subscript
    str_99179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1469, 37), 'str', 'docshort')
    # Getting the type of 'ar' (line 1469)
    ar_99180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 34), 'ar', False)
    # Obtaining the member '__getitem__' of a type (line 1469)
    getitem___99181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1469, 34), ar_99180, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1469)
    subscript_call_result_99182 = invoke(stypy.reporting.localization.Localization(__file__, 1469, 34), getitem___99181, str_99179)
    
    # Applying the binary operator '%' (line 1469)
    result_mod_99183 = python_operator(stypy.reporting.localization.Localization(__file__, 1469, 16), '%', str_99178, subscript_call_result_99182)
    
    # Processing the call keyword arguments (line 1469)
    kwargs_99184 = {}
    # Getting the type of 'outmess' (line 1469)
    outmess_99177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 8), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1469)
    outmess_call_result_99185 = invoke(stypy.reporting.localization.Localization(__file__, 1469, 8), outmess_99177, *[result_mod_99183], **kwargs_99184)
    
    # SSA branch for the else part of an if statement (line 1468)
    module_type_store.open_ssa_branch('else')
    
    # Call to outmess(...): (line 1471)
    # Processing the call arguments (line 1471)
    str_99187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1471, 16), 'str', '\t\t  %s\n')
    
    # Obtaining the type of the subscript
    str_99188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1471, 35), 'str', 'docshort')
    # Getting the type of 'ar' (line 1471)
    ar_99189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 32), 'ar', False)
    # Obtaining the member '__getitem__' of a type (line 1471)
    getitem___99190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1471, 32), ar_99189, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1471)
    subscript_call_result_99191 = invoke(stypy.reporting.localization.Localization(__file__, 1471, 32), getitem___99190, str_99188)
    
    # Applying the binary operator '%' (line 1471)
    result_mod_99192 = python_operator(stypy.reporting.localization.Localization(__file__, 1471, 16), '%', str_99187, subscript_call_result_99191)
    
    # Processing the call keyword arguments (line 1471)
    kwargs_99193 = {}
    # Getting the type of 'outmess' (line 1471)
    outmess_99186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 8), 'outmess', False)
    # Calling outmess(args, kwargs) (line 1471)
    outmess_call_result_99194 = invoke(stypy.reporting.localization.Localization(__file__, 1471, 8), outmess_99186, *[result_mod_99192], **kwargs_99193)
    
    # SSA join for if statement (line 1468)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 1472)
    tuple_99195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1472, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1472)
    # Adding element type (line 1472)
    # Getting the type of 'ar' (line 1472)
    ar_99196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 11), 'ar')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1472, 11), tuple_99195, ar_99196)
    # Adding element type (line 1472)
    # Getting the type of 'wrap' (line 1472)
    wrap_99197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 15), 'wrap')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1472, 11), tuple_99195, wrap_99197)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1472)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1472, 4), 'stypy_return_type', tuple_99195)
    
    # ################# End of 'buildapi(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'buildapi' in the type store
    # Getting the type of 'stypy_return_type' (line 1347)
    stypy_return_type_99198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1347, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_99198)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'buildapi'
    return stypy_return_type_99198

# Assigning a type to the variable 'buildapi' (line 1347)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1347, 0), 'buildapi', buildapi)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
