
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: # This file is generated by C:\projects\windows-wheel-builder\numpy\setup.py
2: # It contains system_info results at the time of building this package.
3: __all__ = ["get_info","show"]
4: 
5: atlas_3_10_blas_threads_info={'libraries': ['numpy-atlas'], 'library_dirs': ['C:\\projects\\windows-wheel-builder\\atlas-builds\\atlas-3.10.1-sse2-32\\lib'], 'language': 'c', 'define_macros': [('HAVE_CBLAS', None), ('NO_ATLAS_INFO', -1)]}
6: lapack_opt_info={'libraries': ['numpy-atlas', 'numpy-atlas'], 'library_dirs': ['C:\\projects\\windows-wheel-builder\\atlas-builds\\atlas-3.10.1-sse2-32\\lib'], 'language': 'f77', 'define_macros': [('NO_ATLAS_INFO', -1)]}
7: blas_opt_info={'libraries': ['numpy-atlas'], 'library_dirs': ['C:\\projects\\windows-wheel-builder\\atlas-builds\\atlas-3.10.1-sse2-32\\lib'], 'language': 'c', 'define_macros': [('HAVE_CBLAS', None), ('NO_ATLAS_INFO', -1)]}
8: openblas_info={}
9: openblas_lapack_info={}
10: atlas_3_10_threads_info={'libraries': ['numpy-atlas', 'numpy-atlas'], 'library_dirs': ['C:\\projects\\windows-wheel-builder\\atlas-builds\\atlas-3.10.1-sse2-32\\lib'], 'language': 'f77', 'define_macros': [('NO_ATLAS_INFO', -1)]}
11: lapack_mkl_info={}
12: blas_mkl_info={}
13: mkl_info={}
14: 
15: def get_info(name):
16:     g = globals()
17:     return g.get(name, g.get(name + "_info", {}))
18: 
19: def show():
20:     for name,info_dict in globals().items():
21:         if name[0] == "_" or type(info_dict) is not type({}): continue
22:         print(name + ":")
23:         if not info_dict:
24:             print("  NOT AVAILABLE")
25:         for k,v in info_dict.items():
26:             v = str(v)
27:             if k == "sources" and len(v) > 200:
28:                 v = v[:60] + " ...\n... " + v[-60:]
29:             print("    %s = %s" % (k,v))
30:     

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################


# Assigning a List to a Name (line 3):
__all__ = ['get_info', 'show']
module_type_store.set_exportable_members(['get_info', 'show'])

# Obtaining an instance of the builtin type 'list' (line 3)
list_25462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3, 10), 'list')
# Adding type elements to the builtin type 'list' instance (line 3)
# Adding element type (line 3)
str_25463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3, 11), 'str', 'get_info')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3, 10), list_25462, str_25463)
# Adding element type (line 3)
str_25464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3, 22), 'str', 'show')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3, 10), list_25462, str_25464)

# Assigning a type to the variable '__all__' (line 3)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3, 0), '__all__', list_25462)

# Assigning a Dict to a Name (line 5):

# Obtaining an instance of the builtin type 'dict' (line 5)
dict_25465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 5, 29), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 5)
# Adding element type (key, value) (line 5)
str_25466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 5, 30), 'str', 'libraries')

# Obtaining an instance of the builtin type 'list' (line 5)
list_25467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 5, 43), 'list')
# Adding type elements to the builtin type 'list' instance (line 5)
# Adding element type (line 5)
str_25468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 5, 44), 'str', 'numpy-atlas')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 5, 43), list_25467, str_25468)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 5, 29), dict_25465, (str_25466, list_25467))
# Adding element type (key, value) (line 5)
str_25469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 5, 60), 'str', 'library_dirs')

# Obtaining an instance of the builtin type 'list' (line 5)
list_25470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 5, 76), 'list')
# Adding type elements to the builtin type 'list' instance (line 5)
# Adding element type (line 5)
str_25471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 5, 77), 'str', 'C:\\projects\\windows-wheel-builder\\atlas-builds\\atlas-3.10.1-sse2-32\\lib')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 5, 76), list_25470, str_25471)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 5, 29), dict_25465, (str_25469, list_25470))
# Adding element type (key, value) (line 5)
str_25472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 5, 158), 'str', 'language')
str_25473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 5, 170), 'str', 'c')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 5, 29), dict_25465, (str_25472, str_25473))
# Adding element type (key, value) (line 5)
str_25474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 5, 175), 'str', 'define_macros')

# Obtaining an instance of the builtin type 'list' (line 5)
list_25475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 5, 192), 'list')
# Adding type elements to the builtin type 'list' instance (line 5)
# Adding element type (line 5)

# Obtaining an instance of the builtin type 'tuple' (line 5)
tuple_25476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 5, 194), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 5)
# Adding element type (line 5)
str_25477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 5, 194), 'str', 'HAVE_CBLAS')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 5, 194), tuple_25476, str_25477)
# Adding element type (line 5)
# Getting the type of 'None' (line 5)
None_25478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 5, 208), 'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 5, 194), tuple_25476, None_25478)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 5, 192), list_25475, tuple_25476)
# Adding element type (line 5)

# Obtaining an instance of the builtin type 'tuple' (line 5)
tuple_25479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 5, 216), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 5)
# Adding element type (line 5)
str_25480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 5, 216), 'str', 'NO_ATLAS_INFO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 5, 216), tuple_25479, str_25480)
# Adding element type (line 5)
int_25481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 5, 233), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 5, 216), tuple_25479, int_25481)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 5, 192), list_25475, tuple_25479)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 5, 29), dict_25465, (str_25474, list_25475))

# Assigning a type to the variable 'atlas_3_10_blas_threads_info' (line 5)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 5, 0), 'atlas_3_10_blas_threads_info', dict_25465)

# Assigning a Dict to a Name (line 6):

# Obtaining an instance of the builtin type 'dict' (line 6)
dict_25482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 6, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 6)
# Adding element type (key, value) (line 6)
str_25483 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 6, 17), 'str', 'libraries')

# Obtaining an instance of the builtin type 'list' (line 6)
list_25484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 6, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 6)
# Adding element type (line 6)
str_25485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 6, 31), 'str', 'numpy-atlas')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 6, 30), list_25484, str_25485)
# Adding element type (line 6)
str_25486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 6, 46), 'str', 'numpy-atlas')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 6, 30), list_25484, str_25486)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 6, 16), dict_25482, (str_25483, list_25484))
# Adding element type (key, value) (line 6)
str_25487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 6, 62), 'str', 'library_dirs')

# Obtaining an instance of the builtin type 'list' (line 6)
list_25488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 6, 78), 'list')
# Adding type elements to the builtin type 'list' instance (line 6)
# Adding element type (line 6)
str_25489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 6, 79), 'str', 'C:\\projects\\windows-wheel-builder\\atlas-builds\\atlas-3.10.1-sse2-32\\lib')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 6, 78), list_25488, str_25489)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 6, 16), dict_25482, (str_25487, list_25488))
# Adding element type (key, value) (line 6)
str_25490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 6, 160), 'str', 'language')
str_25491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 6, 172), 'str', 'f77')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 6, 16), dict_25482, (str_25490, str_25491))
# Adding element type (key, value) (line 6)
str_25492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 6, 179), 'str', 'define_macros')

# Obtaining an instance of the builtin type 'list' (line 6)
list_25493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 6, 196), 'list')
# Adding type elements to the builtin type 'list' instance (line 6)
# Adding element type (line 6)

# Obtaining an instance of the builtin type 'tuple' (line 6)
tuple_25494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 6, 198), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 6)
# Adding element type (line 6)
str_25495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 6, 198), 'str', 'NO_ATLAS_INFO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 6, 198), tuple_25494, str_25495)
# Adding element type (line 6)
int_25496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 6, 215), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 6, 198), tuple_25494, int_25496)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 6, 196), list_25493, tuple_25494)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 6, 16), dict_25482, (str_25492, list_25493))

# Assigning a type to the variable 'lapack_opt_info' (line 6)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 6, 0), 'lapack_opt_info', dict_25482)

# Assigning a Dict to a Name (line 7):

# Obtaining an instance of the builtin type 'dict' (line 7)
dict_25497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, 14), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 7)
# Adding element type (key, value) (line 7)
str_25498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, 15), 'str', 'libraries')

# Obtaining an instance of the builtin type 'list' (line 7)
list_25499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 7)
# Adding element type (line 7)
str_25500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, 29), 'str', 'numpy-atlas')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 7, 28), list_25499, str_25500)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 7, 14), dict_25497, (str_25498, list_25499))
# Adding element type (key, value) (line 7)
str_25501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, 45), 'str', 'library_dirs')

# Obtaining an instance of the builtin type 'list' (line 7)
list_25502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, 61), 'list')
# Adding type elements to the builtin type 'list' instance (line 7)
# Adding element type (line 7)
str_25503 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, 62), 'str', 'C:\\projects\\windows-wheel-builder\\atlas-builds\\atlas-3.10.1-sse2-32\\lib')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 7, 61), list_25502, str_25503)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 7, 14), dict_25497, (str_25501, list_25502))
# Adding element type (key, value) (line 7)
str_25504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, 143), 'str', 'language')
str_25505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, 155), 'str', 'c')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 7, 14), dict_25497, (str_25504, str_25505))
# Adding element type (key, value) (line 7)
str_25506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, 160), 'str', 'define_macros')

# Obtaining an instance of the builtin type 'list' (line 7)
list_25507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, 177), 'list')
# Adding type elements to the builtin type 'list' instance (line 7)
# Adding element type (line 7)

# Obtaining an instance of the builtin type 'tuple' (line 7)
tuple_25508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, 179), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 7)
# Adding element type (line 7)
str_25509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, 179), 'str', 'HAVE_CBLAS')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 7, 179), tuple_25508, str_25509)
# Adding element type (line 7)
# Getting the type of 'None' (line 7)
None_25510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 7, 193), 'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 7, 179), tuple_25508, None_25510)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 7, 177), list_25507, tuple_25508)
# Adding element type (line 7)

# Obtaining an instance of the builtin type 'tuple' (line 7)
tuple_25511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, 201), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 7)
# Adding element type (line 7)
str_25512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, 201), 'str', 'NO_ATLAS_INFO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 7, 201), tuple_25511, str_25512)
# Adding element type (line 7)
int_25513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, 218), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 7, 201), tuple_25511, int_25513)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 7, 177), list_25507, tuple_25511)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 7, 14), dict_25497, (str_25506, list_25507))

# Assigning a type to the variable 'blas_opt_info' (line 7)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 7, 0), 'blas_opt_info', dict_25497)

# Assigning a Dict to a Name (line 8):

# Obtaining an instance of the builtin type 'dict' (line 8)
dict_25514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 8, 14), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 8)

# Assigning a type to the variable 'openblas_info' (line 8)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 8, 0), 'openblas_info', dict_25514)

# Assigning a Dict to a Name (line 9):

# Obtaining an instance of the builtin type 'dict' (line 9)
dict_25515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 9, 21), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 9)

# Assigning a type to the variable 'openblas_lapack_info' (line 9)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 9, 0), 'openblas_lapack_info', dict_25515)

# Assigning a Dict to a Name (line 10):

# Obtaining an instance of the builtin type 'dict' (line 10)
dict_25516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 24), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 10)
# Adding element type (key, value) (line 10)
str_25517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 25), 'str', 'libraries')

# Obtaining an instance of the builtin type 'list' (line 10)
list_25518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 38), 'list')
# Adding type elements to the builtin type 'list' instance (line 10)
# Adding element type (line 10)
str_25519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 39), 'str', 'numpy-atlas')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 38), list_25518, str_25519)
# Adding element type (line 10)
str_25520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 54), 'str', 'numpy-atlas')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 38), list_25518, str_25520)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 24), dict_25516, (str_25517, list_25518))
# Adding element type (key, value) (line 10)
str_25521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 70), 'str', 'library_dirs')

# Obtaining an instance of the builtin type 'list' (line 10)
list_25522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 86), 'list')
# Adding type elements to the builtin type 'list' instance (line 10)
# Adding element type (line 10)
str_25523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 87), 'str', 'C:\\projects\\windows-wheel-builder\\atlas-builds\\atlas-3.10.1-sse2-32\\lib')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 86), list_25522, str_25523)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 24), dict_25516, (str_25521, list_25522))
# Adding element type (key, value) (line 10)
str_25524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 168), 'str', 'language')
str_25525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 180), 'str', 'f77')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 24), dict_25516, (str_25524, str_25525))
# Adding element type (key, value) (line 10)
str_25526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 187), 'str', 'define_macros')

# Obtaining an instance of the builtin type 'list' (line 10)
list_25527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 204), 'list')
# Adding type elements to the builtin type 'list' instance (line 10)
# Adding element type (line 10)

# Obtaining an instance of the builtin type 'tuple' (line 10)
tuple_25528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 206), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 10)
# Adding element type (line 10)
str_25529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 206), 'str', 'NO_ATLAS_INFO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 206), tuple_25528, str_25529)
# Adding element type (line 10)
int_25530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 223), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 206), tuple_25528, int_25530)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 204), list_25527, tuple_25528)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 10, 24), dict_25516, (str_25526, list_25527))

# Assigning a type to the variable 'atlas_3_10_threads_info' (line 10)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 10, 0), 'atlas_3_10_threads_info', dict_25516)

# Assigning a Dict to a Name (line 11):

# Obtaining an instance of the builtin type 'dict' (line 11)
dict_25531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 11, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 11)

# Assigning a type to the variable 'lapack_mkl_info' (line 11)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 11, 0), 'lapack_mkl_info', dict_25531)

# Assigning a Dict to a Name (line 12):

# Obtaining an instance of the builtin type 'dict' (line 12)
dict_25532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 12, 14), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 12)

# Assigning a type to the variable 'blas_mkl_info' (line 12)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 12, 0), 'blas_mkl_info', dict_25532)

# Assigning a Dict to a Name (line 13):

# Obtaining an instance of the builtin type 'dict' (line 13)
dict_25533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, 9), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 13)

# Assigning a type to the variable 'mkl_info' (line 13)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 13, 0), 'mkl_info', dict_25533)

@norecursion
def get_info(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'get_info'
    module_type_store = module_type_store.open_function_context('get_info', 15, 0, False)
    
    # Passed parameters checking function
    get_info.stypy_localization = localization
    get_info.stypy_type_of_self = None
    get_info.stypy_type_store = module_type_store
    get_info.stypy_function_name = 'get_info'
    get_info.stypy_param_names_list = ['name']
    get_info.stypy_varargs_param_name = None
    get_info.stypy_kwargs_param_name = None
    get_info.stypy_call_defaults = defaults
    get_info.stypy_call_varargs = varargs
    get_info.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'get_info', ['name'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'get_info', localization, ['name'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'get_info(...)' code ##################

    
    # Assigning a Call to a Name (line 16):
    
    # Call to globals(...): (line 16)
    # Processing the call keyword arguments (line 16)
    kwargs_25535 = {}
    # Getting the type of 'globals' (line 16)
    globals_25534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 16, 8), 'globals', False)
    # Calling globals(args, kwargs) (line 16)
    globals_call_result_25536 = invoke(stypy.reporting.localization.Localization(__file__, 16, 8), globals_25534, *[], **kwargs_25535)
    
    # Assigning a type to the variable 'g' (line 16)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 16, 4), 'g', globals_call_result_25536)
    
    # Call to get(...): (line 17)
    # Processing the call arguments (line 17)
    # Getting the type of 'name' (line 17)
    name_25539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 17, 17), 'name', False)
    
    # Call to get(...): (line 17)
    # Processing the call arguments (line 17)
    # Getting the type of 'name' (line 17)
    name_25542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 17, 29), 'name', False)
    str_25543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 17, 36), 'str', '_info')
    # Applying the binary operator '+' (line 17)
    result_add_25544 = python_operator(stypy.reporting.localization.Localization(__file__, 17, 29), '+', name_25542, str_25543)
    
    
    # Obtaining an instance of the builtin type 'dict' (line 17)
    dict_25545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 17, 45), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 17)
    
    # Processing the call keyword arguments (line 17)
    kwargs_25546 = {}
    # Getting the type of 'g' (line 17)
    g_25540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 17, 23), 'g', False)
    # Obtaining the member 'get' of a type (line 17)
    get_25541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 17, 23), g_25540, 'get')
    # Calling get(args, kwargs) (line 17)
    get_call_result_25547 = invoke(stypy.reporting.localization.Localization(__file__, 17, 23), get_25541, *[result_add_25544, dict_25545], **kwargs_25546)
    
    # Processing the call keyword arguments (line 17)
    kwargs_25548 = {}
    # Getting the type of 'g' (line 17)
    g_25537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 17, 11), 'g', False)
    # Obtaining the member 'get' of a type (line 17)
    get_25538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 17, 11), g_25537, 'get')
    # Calling get(args, kwargs) (line 17)
    get_call_result_25549 = invoke(stypy.reporting.localization.Localization(__file__, 17, 11), get_25538, *[name_25539, get_call_result_25547], **kwargs_25548)
    
    # Assigning a type to the variable 'stypy_return_type' (line 17)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 17, 4), 'stypy_return_type', get_call_result_25549)
    
    # ################# End of 'get_info(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'get_info' in the type store
    # Getting the type of 'stypy_return_type' (line 15)
    stypy_return_type_25550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 15, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_25550)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'get_info'
    return stypy_return_type_25550

# Assigning a type to the variable 'get_info' (line 15)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 15, 0), 'get_info', get_info)

@norecursion
def show(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'show'
    module_type_store = module_type_store.open_function_context('show', 19, 0, False)
    
    # Passed parameters checking function
    show.stypy_localization = localization
    show.stypy_type_of_self = None
    show.stypy_type_store = module_type_store
    show.stypy_function_name = 'show'
    show.stypy_param_names_list = []
    show.stypy_varargs_param_name = None
    show.stypy_kwargs_param_name = None
    show.stypy_call_defaults = defaults
    show.stypy_call_varargs = varargs
    show.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'show', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'show', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'show(...)' code ##################

    
    
    # Call to items(...): (line 20)
    # Processing the call keyword arguments (line 20)
    kwargs_25555 = {}
    
    # Call to globals(...): (line 20)
    # Processing the call keyword arguments (line 20)
    kwargs_25552 = {}
    # Getting the type of 'globals' (line 20)
    globals_25551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 20, 26), 'globals', False)
    # Calling globals(args, kwargs) (line 20)
    globals_call_result_25553 = invoke(stypy.reporting.localization.Localization(__file__, 20, 26), globals_25551, *[], **kwargs_25552)
    
    # Obtaining the member 'items' of a type (line 20)
    items_25554 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 20, 26), globals_call_result_25553, 'items')
    # Calling items(args, kwargs) (line 20)
    items_call_result_25556 = invoke(stypy.reporting.localization.Localization(__file__, 20, 26), items_25554, *[], **kwargs_25555)
    
    # Testing the type of a for loop iterable (line 20)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 20, 4), items_call_result_25556)
    # Getting the type of the for loop variable (line 20)
    for_loop_var_25557 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 20, 4), items_call_result_25556)
    # Assigning a type to the variable 'name' (line 20)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 20, 4), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 20, 4), for_loop_var_25557))
    # Assigning a type to the variable 'info_dict' (line 20)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 20, 4), 'info_dict', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 20, 4), for_loop_var_25557))
    # SSA begins for a for statement (line 20)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Evaluating a boolean operation
    
    
    # Obtaining the type of the subscript
    int_25558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 21, 16), 'int')
    # Getting the type of 'name' (line 21)
    name_25559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 11), 'name')
    # Obtaining the member '__getitem__' of a type (line 21)
    getitem___25560 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 21, 11), name_25559, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 21)
    subscript_call_result_25561 = invoke(stypy.reporting.localization.Localization(__file__, 21, 11), getitem___25560, int_25558)
    
    str_25562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 21, 22), 'str', '_')
    # Applying the binary operator '==' (line 21)
    result_eq_25563 = python_operator(stypy.reporting.localization.Localization(__file__, 21, 11), '==', subscript_call_result_25561, str_25562)
    
    
    
    # Call to type(...): (line 21)
    # Processing the call arguments (line 21)
    # Getting the type of 'info_dict' (line 21)
    info_dict_25565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 34), 'info_dict', False)
    # Processing the call keyword arguments (line 21)
    kwargs_25566 = {}
    # Getting the type of 'type' (line 21)
    type_25564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 29), 'type', False)
    # Calling type(args, kwargs) (line 21)
    type_call_result_25567 = invoke(stypy.reporting.localization.Localization(__file__, 21, 29), type_25564, *[info_dict_25565], **kwargs_25566)
    
    
    # Call to type(...): (line 21)
    # Processing the call arguments (line 21)
    
    # Obtaining an instance of the builtin type 'dict' (line 21)
    dict_25569 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 21, 57), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 21)
    
    # Processing the call keyword arguments (line 21)
    kwargs_25570 = {}
    # Getting the type of 'type' (line 21)
    type_25568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 52), 'type', False)
    # Calling type(args, kwargs) (line 21)
    type_call_result_25571 = invoke(stypy.reporting.localization.Localization(__file__, 21, 52), type_25568, *[dict_25569], **kwargs_25570)
    
    # Applying the binary operator 'isnot' (line 21)
    result_is_not_25572 = python_operator(stypy.reporting.localization.Localization(__file__, 21, 29), 'isnot', type_call_result_25567, type_call_result_25571)
    
    # Applying the binary operator 'or' (line 21)
    result_or_keyword_25573 = python_operator(stypy.reporting.localization.Localization(__file__, 21, 11), 'or', result_eq_25563, result_is_not_25572)
    
    # Testing the type of an if condition (line 21)
    if_condition_25574 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 21, 8), result_or_keyword_25573)
    # Assigning a type to the variable 'if_condition_25574' (line 21)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 21, 8), 'if_condition_25574', if_condition_25574)
    # SSA begins for if statement (line 21)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 21)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'name' (line 22)
    name_25575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 22, 14), 'name')
    str_25576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 22, 21), 'str', ':')
    # Applying the binary operator '+' (line 22)
    result_add_25577 = python_operator(stypy.reporting.localization.Localization(__file__, 22, 14), '+', name_25575, str_25576)
    
    
    
    # Getting the type of 'info_dict' (line 23)
    info_dict_25578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 23, 15), 'info_dict')
    # Applying the 'not' unary operator (line 23)
    result_not__25579 = python_operator(stypy.reporting.localization.Localization(__file__, 23, 11), 'not', info_dict_25578)
    
    # Testing the type of an if condition (line 23)
    if_condition_25580 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 23, 8), result_not__25579)
    # Assigning a type to the variable 'if_condition_25580' (line 23)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 23, 8), 'if_condition_25580', if_condition_25580)
    # SSA begins for if statement (line 23)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    str_25581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 24, 18), 'str', '  NOT AVAILABLE')
    # SSA join for if statement (line 23)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to items(...): (line 25)
    # Processing the call keyword arguments (line 25)
    kwargs_25584 = {}
    # Getting the type of 'info_dict' (line 25)
    info_dict_25582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 25, 19), 'info_dict', False)
    # Obtaining the member 'items' of a type (line 25)
    items_25583 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 25, 19), info_dict_25582, 'items')
    # Calling items(args, kwargs) (line 25)
    items_call_result_25585 = invoke(stypy.reporting.localization.Localization(__file__, 25, 19), items_25583, *[], **kwargs_25584)
    
    # Testing the type of a for loop iterable (line 25)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 25, 8), items_call_result_25585)
    # Getting the type of the for loop variable (line 25)
    for_loop_var_25586 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 25, 8), items_call_result_25585)
    # Assigning a type to the variable 'k' (line 25)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 25, 8), 'k', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 25, 8), for_loop_var_25586))
    # Assigning a type to the variable 'v' (line 25)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 25, 8), 'v', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 25, 8), for_loop_var_25586))
    # SSA begins for a for statement (line 25)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 26):
    
    # Call to str(...): (line 26)
    # Processing the call arguments (line 26)
    # Getting the type of 'v' (line 26)
    v_25588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 26, 20), 'v', False)
    # Processing the call keyword arguments (line 26)
    kwargs_25589 = {}
    # Getting the type of 'str' (line 26)
    str_25587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 26, 16), 'str', False)
    # Calling str(args, kwargs) (line 26)
    str_call_result_25590 = invoke(stypy.reporting.localization.Localization(__file__, 26, 16), str_25587, *[v_25588], **kwargs_25589)
    
    # Assigning a type to the variable 'v' (line 26)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 26, 12), 'v', str_call_result_25590)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'k' (line 27)
    k_25591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 27, 15), 'k')
    str_25592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 27, 20), 'str', 'sources')
    # Applying the binary operator '==' (line 27)
    result_eq_25593 = python_operator(stypy.reporting.localization.Localization(__file__, 27, 15), '==', k_25591, str_25592)
    
    
    
    # Call to len(...): (line 27)
    # Processing the call arguments (line 27)
    # Getting the type of 'v' (line 27)
    v_25595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 27, 38), 'v', False)
    # Processing the call keyword arguments (line 27)
    kwargs_25596 = {}
    # Getting the type of 'len' (line 27)
    len_25594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 27, 34), 'len', False)
    # Calling len(args, kwargs) (line 27)
    len_call_result_25597 = invoke(stypy.reporting.localization.Localization(__file__, 27, 34), len_25594, *[v_25595], **kwargs_25596)
    
    int_25598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 27, 43), 'int')
    # Applying the binary operator '>' (line 27)
    result_gt_25599 = python_operator(stypy.reporting.localization.Localization(__file__, 27, 34), '>', len_call_result_25597, int_25598)
    
    # Applying the binary operator 'and' (line 27)
    result_and_keyword_25600 = python_operator(stypy.reporting.localization.Localization(__file__, 27, 15), 'and', result_eq_25593, result_gt_25599)
    
    # Testing the type of an if condition (line 27)
    if_condition_25601 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 27, 12), result_and_keyword_25600)
    # Assigning a type to the variable 'if_condition_25601' (line 27)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 27, 12), 'if_condition_25601', if_condition_25601)
    # SSA begins for if statement (line 27)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 28):
    
    # Obtaining the type of the subscript
    int_25602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 23), 'int')
    slice_25603 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 28, 20), None, int_25602, None)
    # Getting the type of 'v' (line 28)
    v_25604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 28, 20), 'v')
    # Obtaining the member '__getitem__' of a type (line 28)
    getitem___25605 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 28, 20), v_25604, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 28)
    subscript_call_result_25606 = invoke(stypy.reporting.localization.Localization(__file__, 28, 20), getitem___25605, slice_25603)
    
    str_25607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 29), 'str', ' ...\n... ')
    # Applying the binary operator '+' (line 28)
    result_add_25608 = python_operator(stypy.reporting.localization.Localization(__file__, 28, 20), '+', subscript_call_result_25606, str_25607)
    
    
    # Obtaining the type of the subscript
    int_25609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 46), 'int')
    slice_25610 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 28, 44), int_25609, None, None)
    # Getting the type of 'v' (line 28)
    v_25611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 28, 44), 'v')
    # Obtaining the member '__getitem__' of a type (line 28)
    getitem___25612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 28, 44), v_25611, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 28)
    subscript_call_result_25613 = invoke(stypy.reporting.localization.Localization(__file__, 28, 44), getitem___25612, slice_25610)
    
    # Applying the binary operator '+' (line 28)
    result_add_25614 = python_operator(stypy.reporting.localization.Localization(__file__, 28, 42), '+', result_add_25608, subscript_call_result_25613)
    
    # Assigning a type to the variable 'v' (line 28)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 28, 16), 'v', result_add_25614)
    # SSA join for if statement (line 27)
    module_type_store = module_type_store.join_ssa_context()
    
    str_25615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 29, 18), 'str', '    %s = %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 29)
    tuple_25616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 29, 35), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 29)
    # Adding element type (line 29)
    # Getting the type of 'k' (line 29)
    k_25617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 29, 35), 'k')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 29, 35), tuple_25616, k_25617)
    # Adding element type (line 29)
    # Getting the type of 'v' (line 29)
    v_25618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 29, 37), 'v')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 29, 35), tuple_25616, v_25618)
    
    # Applying the binary operator '%' (line 29)
    result_mod_25619 = python_operator(stypy.reporting.localization.Localization(__file__, 29, 18), '%', str_25615, tuple_25616)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'show(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'show' in the type store
    # Getting the type of 'stypy_return_type' (line 19)
    stypy_return_type_25620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 19, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_25620)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'show'
    return stypy_return_type_25620

# Assigning a type to the variable 'show' (line 19)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 19, 0), 'show', show)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
