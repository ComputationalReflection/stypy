
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: '''
2: This module contains functions to handle markers.  Used by both the
3: marker functionality of `~matplotlib.axes.Axes.plot` and
4: `~matplotlib.axes.Axes.scatter`.
5: 
6: All possible markers are defined here:
7: 
8: ============================== ===============================================
9: marker                         description
10: ============================== ===============================================
11: `"."`                          point
12: `","`                          pixel
13: `"o"`                          circle
14: `"v"`                          triangle_down
15: `"^"`                          triangle_up
16: `"<"`                          triangle_left
17: `">"`                          triangle_right
18: `"1"`                          tri_down
19: `"2"`                          tri_up
20: `"3"`                          tri_left
21: `"4"`                          tri_right
22: `"8"`                          octagon
23: `"s"`                          square
24: `"p"`                          pentagon
25: `"P"`                          plus (filled)
26: `"*"`                          star
27: `"h"`                          hexagon1
28: `"H"`                          hexagon2
29: `"+"`                          plus
30: `"x"`                          x
31: `"X"`                          x (filled)
32: `"D"`                          diamond
33: `"d"`                          thin_diamond
34: `"|"`                          vline
35: `"_"`                          hline
36: TICKLEFT                       tickleft
37: TICKRIGHT                      tickright
38: TICKUP                         tickup
39: TICKDOWN                       tickdown
40: CARETLEFT                      caretleft (centered at tip)
41: CARETRIGHT                     caretright (centered at tip)
42: CARETUP                        caretup (centered at tip)
43: CARETDOWN                      caretdown (centered at tip)
44: CARETLEFTBASE                  caretleft (centered at base)
45: CARETRIGHTBASE                 caretright (centered at base)
46: CARETUPBASE                    caretup (centered at base)
47: `"None"`, `" "` or `""`        nothing
48: ``'$...$'``                    render the string using mathtext.
49: `verts`                        a list of (x, y) pairs used for Path vertices.
50:                                The center of the marker is located at (0,0) and
51:                                the size is normalized.
52: path                           a `~matplotlib.path.Path` instance.
53: (`numsides`, `style`, `angle`) The marker can also be a tuple (`numsides`,
54:                                `style`, `angle`), which will create a custom,
55:                                regular symbol.
56: 
57:                                `numsides`:
58:                                    the number of sides
59: 
60:                                `style`:
61:                                    the style of the regular symbol:
62: 
63:                                    0
64:                                      a regular polygon
65:                                    1
66:                                      a star-like symbol
67:                                    2
68:                                      an asterisk
69:                                    3
70:                                      a circle (`numsides` and `angle` is
71:                                      ignored)
72: 
73:                                `angle`:
74:                                    the angle of rotation of the symbol
75: ============================== ===============================================
76: 
77: For backward compatibility, the form (`verts`, 0) is also accepted,
78: but it is equivalent to just `verts` for giving a raw set of vertices
79: that define the shape.
80: 
81: `None` is the default which means 'nothing', however this table is
82: referred to from other docs for the valid inputs from marker inputs and in
83: those cases `None` still means 'default'.
84: '''
85: 
86: from __future__ import (absolute_import, division, print_function,
87:                         unicode_literals)
88: 
89: import six
90: from six.moves import xrange
91: 
92: from collections import Sized
93: 
94: import numpy as np
95: 
96: from . import rcParams
97: from .cbook import is_math_text, is_numlike
98: from .path import Path
99: from .transforms import IdentityTransform, Affine2D
100: 
101: # special-purpose marker identifiers:
102: (TICKLEFT, TICKRIGHT, TICKUP, TICKDOWN,
103:  CARETLEFT, CARETRIGHT, CARETUP, CARETDOWN,
104:  CARETLEFTBASE, CARETRIGHTBASE, CARETUPBASE, CARETDOWNBASE) = xrange(12)
105: 
106: _empty_path = Path(np.empty((0, 2)))
107: 
108: 
109: class MarkerStyle(object):
110: 
111:     markers = {
112:         '.': 'point',
113:         ',': 'pixel',
114:         'o': 'circle',
115:         'v': 'triangle_down',
116:         '^': 'triangle_up',
117:         '<': 'triangle_left',
118:         '>': 'triangle_right',
119:         '1': 'tri_down',
120:         '2': 'tri_up',
121:         '3': 'tri_left',
122:         '4': 'tri_right',
123:         '8': 'octagon',
124:         's': 'square',
125:         'p': 'pentagon',
126:         '*': 'star',
127:         'h': 'hexagon1',
128:         'H': 'hexagon2',
129:         '+': 'plus',
130:         'x': 'x',
131:         'D': 'diamond',
132:         'd': 'thin_diamond',
133:         '|': 'vline',
134:         '_': 'hline',
135:         'P': 'plus_filled',
136:         'X': 'x_filled',
137:         TICKLEFT: 'tickleft',
138:         TICKRIGHT: 'tickright',
139:         TICKUP: 'tickup',
140:         TICKDOWN: 'tickdown',
141:         CARETLEFT: 'caretleft',
142:         CARETRIGHT: 'caretright',
143:         CARETUP: 'caretup',
144:         CARETDOWN: 'caretdown',
145:         CARETLEFTBASE: 'caretleftbase',
146:         CARETRIGHTBASE: 'caretrightbase',
147:         CARETUPBASE: 'caretupbase',
148:         CARETDOWNBASE: 'caretdownbase',
149:         "None": 'nothing',
150:         None: 'nothing',
151:         ' ': 'nothing',
152:         '': 'nothing'
153:     }
154: 
155:     # Just used for informational purposes.  is_filled()
156:     # is calculated in the _set_* functions.
157:     filled_markers = (
158:         'o', 'v', '^', '<', '>', '8', 's', 'p', '*', 'h', 'H', 'D', 'd',
159:         'P', 'X')
160: 
161:     fillstyles = ('full', 'left', 'right', 'bottom', 'top', 'none')
162:     _half_fillstyles = ('left', 'right', 'bottom', 'top')
163: 
164:     # TODO: Is this ever used as a non-constant?
165:     _point_size_reduction = 0.5
166: 
167:     def __init__(self, marker=None, fillstyle=None):
168:         '''
169:         MarkerStyle
170: 
171:         Attributes
172:         ----------
173:         markers : list of known markes
174: 
175:         fillstyles : list of known fillstyles
176: 
177:         filled_markers : list of known filled markers.
178: 
179:         Parameters
180:         ----------
181:         marker : string or array_like, optional, default: None
182:             See the descriptions of possible markers in the module docstring.
183: 
184:         fillstyle : string, optional, default: 'full'
185:             'full', 'left", 'right', 'bottom', 'top', 'none'
186:         '''
187:         self._marker_function = None
188:         self.set_fillstyle(fillstyle)
189:         self.set_marker(marker)
190: 
191:     def __getstate__(self):
192:         d = self.__dict__.copy()
193:         d.pop('_marker_function')
194:         return d
195: 
196:     def __setstate__(self, statedict):
197:         self.__dict__ = statedict
198:         self.set_marker(self._marker)
199: 
200:     def _recache(self):
201:         if self._marker_function is None:
202:             return
203:         self._path = _empty_path
204:         self._transform = IdentityTransform()
205:         self._alt_path = None
206:         self._alt_transform = None
207:         self._snap_threshold = None
208:         self._joinstyle = 'round'
209:         self._capstyle = 'butt'
210:         self._filled = True
211:         self._marker_function()
212: 
213:     if six.PY3:
214:         def __bool__(self):
215:             return bool(len(self._path.vertices))
216:     else:
217:         def __nonzero__(self):
218:             return bool(len(self._path.vertices))
219: 
220:     def is_filled(self):
221:         return self._filled
222: 
223:     def get_fillstyle(self):
224:         return self._fillstyle
225: 
226:     def set_fillstyle(self, fillstyle):
227:         '''
228:         Sets fillstyle
229: 
230:         Parameters
231:         ----------
232:         fillstyle : string amongst known fillstyles
233:         '''
234:         if fillstyle is None:
235:             fillstyle = rcParams['markers.fillstyle']
236:         if fillstyle not in self.fillstyles:
237:             raise ValueError("Unrecognized fillstyle %s"
238:                              % ' '.join(self.fillstyles))
239:         self._fillstyle = fillstyle
240:         self._recache()
241: 
242:     def get_joinstyle(self):
243:         return self._joinstyle
244: 
245:     def get_capstyle(self):
246:         return self._capstyle
247: 
248:     def get_marker(self):
249:         return self._marker
250: 
251:     def set_marker(self, marker):
252:         if (isinstance(marker, np.ndarray) and marker.ndim == 2 and
253:                 marker.shape[1] == 2):
254:             self._marker_function = self._set_vertices
255:         elif (isinstance(marker, Sized) and len(marker) in (2, 3) and
256:                 marker[1] in (0, 1, 2, 3)):
257:             self._marker_function = self._set_tuple_marker
258:         elif (not isinstance(marker, (np.ndarray, list)) and
259:               marker in self.markers):
260:             self._marker_function = getattr(
261:                 self, '_set_' + self.markers[marker])
262:         elif isinstance(marker, six.string_types) and is_math_text(marker):
263:             self._marker_function = self._set_mathtext_path
264:         elif isinstance(marker, Path):
265:             self._marker_function = self._set_path_marker
266:         else:
267:             try:
268:                 Path(marker)
269:                 self._marker_function = self._set_vertices
270:             except ValueError:
271:                 raise ValueError('Unrecognized marker style'
272:                                  ' {0}'.format(marker))
273: 
274:         self._marker = marker
275:         self._recache()
276: 
277:     def get_path(self):
278:         return self._path
279: 
280:     def get_transform(self):
281:         return self._transform.frozen()
282: 
283:     def get_alt_path(self):
284:         return self._alt_path
285: 
286:     def get_alt_transform(self):
287:         return self._alt_transform.frozen()
288: 
289:     def get_snap_threshold(self):
290:         return self._snap_threshold
291: 
292:     def _set_nothing(self):
293:         self._filled = False
294: 
295:     def _set_custom_marker(self, path):
296:         verts = path.vertices
297:         rescale = max(np.max(np.abs(verts[:, 0])),
298:                       np.max(np.abs(verts[:, 1])))
299:         self._transform = Affine2D().scale(0.5 / rescale)
300:         self._path = path
301: 
302:     def _set_path_marker(self):
303:         self._set_custom_marker(self._marker)
304: 
305:     def _set_vertices(self):
306:         verts = self._marker
307:         marker = Path(verts)
308:         self._set_custom_marker(marker)
309: 
310:     def _set_tuple_marker(self):
311:         marker = self._marker
312:         if is_numlike(marker[0]):
313:             if len(marker) == 2:
314:                 numsides, rotation = marker[0], 0.0
315:             elif len(marker) == 3:
316:                 numsides, rotation = marker[0], marker[2]
317:             symstyle = marker[1]
318:             if symstyle == 0:
319:                 self._path = Path.unit_regular_polygon(numsides)
320:                 self._joinstyle = 'miter'
321:             elif symstyle == 1:
322:                 self._path = Path.unit_regular_star(numsides)
323:                 self._joinstyle = 'bevel'
324:             elif symstyle == 2:
325:                 self._path = Path.unit_regular_asterisk(numsides)
326:                 self._filled = False
327:                 self._joinstyle = 'bevel'
328:             elif symstyle == 3:
329:                 self._path = Path.unit_circle()
330:             self._transform = Affine2D().scale(0.5).rotate_deg(rotation)
331:         else:
332:             verts = np.asarray(marker[0])
333:             path = Path(verts)
334:             self._set_custom_marker(path)
335: 
336:     def _set_mathtext_path(self):
337:         '''
338:         Draws mathtext markers '$...$' using TextPath object.
339: 
340:         Submitted by tcb
341:         '''
342:         from matplotlib.text import TextPath
343:         from matplotlib.font_manager import FontProperties
344: 
345:         # again, the properties could be initialised just once outside
346:         # this function
347:         # Font size is irrelevant here, it will be rescaled based on
348:         # the drawn size later
349:         props = FontProperties(size=1.0)
350:         text = TextPath(xy=(0, 0), s=self.get_marker(), fontproperties=props,
351:                         usetex=rcParams['text.usetex'])
352:         if len(text.vertices) == 0:
353:             return
354: 
355:         xmin, ymin = text.vertices.min(axis=0)
356:         xmax, ymax = text.vertices.max(axis=0)
357:         width = xmax - xmin
358:         height = ymax - ymin
359:         max_dim = max(width, height)
360:         self._transform = Affine2D() \
361:             .translate(-xmin + 0.5 * -width, -ymin + 0.5 * -height) \
362:             .scale(1.0 / max_dim)
363:         self._path = text
364:         self._snap = False
365: 
366:     def _half_fill(self):
367:         fs = self.get_fillstyle()
368:         result = fs in self._half_fillstyles
369:         return result
370: 
371:     def _set_circle(self, reduction=1.0):
372:         self._transform = Affine2D().scale(0.5 * reduction)
373:         self._snap_threshold = np.inf
374:         fs = self.get_fillstyle()
375:         if not self._half_fill():
376:             self._path = Path.unit_circle()
377:         else:
378:             # build a right-half circle
379:             if fs == 'bottom':
380:                 rotate = 270.
381:             elif fs == 'top':
382:                 rotate = 90.
383:             elif fs == 'left':
384:                 rotate = 180.
385:             else:
386:                 rotate = 0.
387: 
388:             self._path = self._alt_path = Path.unit_circle_righthalf()
389:             self._transform.rotate_deg(rotate)
390:             self._alt_transform = self._transform.frozen().rotate_deg(180.)
391: 
392:     def _set_pixel(self):
393:         self._path = Path.unit_rectangle()
394:         # Ideally, you'd want -0.5, -0.5 here, but then the snapping
395:         # algorithm in the Agg backend will round this to a 2x2
396:         # rectangle from (-1, -1) to (1, 1).  By offsetting it
397:         # slightly, we can force it to be (0, 0) to (1, 1), which both
398:         # makes it only be a single pixel and places it correctly
399:         # aligned to 1-width stroking (i.e. the ticks).  This hack is
400:         # the best of a number of bad alternatives, mainly because the
401:         # backends are not aware of what marker is actually being used
402:         # beyond just its path data.
403:         self._transform = Affine2D().translate(-0.49999, -0.49999)
404:         self._snap_threshold = None
405: 
406:     def _set_point(self):
407:         self._set_circle(reduction=self._point_size_reduction)
408: 
409:     _triangle_path = Path(
410:         [[0.0, 1.0], [-1.0, -1.0], [1.0, -1.0], [0.0, 1.0]],
411:         [Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY])
412:     # Going down halfway looks to small.  Golden ratio is too far.
413:     _triangle_path_u = Path(
414:         [[0.0, 1.0], [-3 / 5., -1 / 5.], [3 / 5., -1 / 5.], [0.0, 1.0]],
415:         [Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY])
416:     _triangle_path_d = Path(
417:         [[-3 / 5., -1 / 5.], [3 / 5., -1 / 5.], [1.0, -1.0], [-1.0, -1.0],
418:          [-3 / 5., -1 / 5.]],
419:         [Path.MOVETO, Path.LINETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY])
420:     _triangle_path_l = Path(
421:         [[0.0, 1.0], [0.0, -1.0], [-1.0, -1.0], [0.0, 1.0]],
422:         [Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY])
423:     _triangle_path_r = Path(
424:         [[0.0, 1.0], [0.0, -1.0], [1.0, -1.0], [0.0, 1.0]],
425:         [Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY])
426: 
427:     def _set_triangle(self, rot, skip):
428:         self._transform = Affine2D().scale(0.5, 0.5).rotate_deg(rot)
429:         self._snap_threshold = 5.0
430:         fs = self.get_fillstyle()
431: 
432:         if not self._half_fill():
433:             self._path = self._triangle_path
434:         else:
435:             mpaths = [self._triangle_path_u,
436:                       self._triangle_path_l,
437:                       self._triangle_path_d,
438:                       self._triangle_path_r]
439: 
440:             if fs == 'top':
441:                 self._path = mpaths[(0 + skip) % 4]
442:                 self._alt_path = mpaths[(2 + skip) % 4]
443:             elif fs == 'bottom':
444:                 self._path = mpaths[(2 + skip) % 4]
445:                 self._alt_path = mpaths[(0 + skip) % 4]
446:             elif fs == 'left':
447:                 self._path = mpaths[(1 + skip) % 4]
448:                 self._alt_path = mpaths[(3 + skip) % 4]
449:             else:
450:                 self._path = mpaths[(3 + skip) % 4]
451:                 self._alt_path = mpaths[(1 + skip) % 4]
452: 
453:             self._alt_transform = self._transform
454: 
455:         self._joinstyle = 'miter'
456: 
457:     def _set_triangle_up(self):
458:         return self._set_triangle(0.0, 0)
459: 
460:     def _set_triangle_down(self):
461:         return self._set_triangle(180.0, 2)
462: 
463:     def _set_triangle_left(self):
464:         return self._set_triangle(90.0, 3)
465: 
466:     def _set_triangle_right(self):
467:         return self._set_triangle(270.0, 1)
468: 
469:     def _set_square(self):
470:         self._transform = Affine2D().translate(-0.5, -0.5)
471:         self._snap_threshold = 2.0
472:         fs = self.get_fillstyle()
473:         if not self._half_fill():
474:             self._path = Path.unit_rectangle()
475:         else:
476:             # build a bottom filled square out of two rectangles, one
477:             # filled.  Use the rotation to support left, right, bottom
478:             # or top
479:             if fs == 'bottom':
480:                 rotate = 0.
481:             elif fs == 'top':
482:                 rotate = 180.
483:             elif fs == 'left':
484:                 rotate = 270.
485:             else:
486:                 rotate = 90.
487: 
488:             self._path = Path([[0.0, 0.0], [1.0, 0.0], [1.0, 0.5],
489:                                [0.0, 0.5], [0.0, 0.0]])
490:             self._alt_path = Path([[0.0, 0.5], [1.0, 0.5], [1.0, 1.0],
491:                                    [0.0, 1.0], [0.0, 0.5]])
492:             self._transform.rotate_deg(rotate)
493:             self._alt_transform = self._transform
494: 
495:         self._joinstyle = 'miter'
496: 
497:     def _set_diamond(self):
498:         self._transform = Affine2D().translate(-0.5, -0.5).rotate_deg(45)
499:         self._snap_threshold = 5.0
500:         fs = self.get_fillstyle()
501:         if not self._half_fill():
502:             self._path = Path.unit_rectangle()
503:         else:
504:             self._path = Path([[0.0, 0.0], [1.0, 0.0], [1.0, 1.0], [0.0, 0.0]])
505:             self._alt_path = Path([[0.0, 0.0], [0.0, 1.0],
506:                                    [1.0, 1.0], [0.0, 0.0]])
507: 
508:             if fs == 'bottom':
509:                 rotate = 270.
510:             elif fs == 'top':
511:                 rotate = 90.
512:             elif fs == 'left':
513:                 rotate = 180.
514:             else:
515:                 rotate = 0.
516: 
517:             self._transform.rotate_deg(rotate)
518:             self._alt_transform = self._transform
519: 
520:         self._joinstyle = 'miter'
521: 
522:     def _set_thin_diamond(self):
523:         self._set_diamond()
524:         self._transform.scale(0.6, 1.0)
525: 
526:     def _set_pentagon(self):
527:         self._transform = Affine2D().scale(0.5)
528:         self._snap_threshold = 5.0
529: 
530:         polypath = Path.unit_regular_polygon(5)
531:         fs = self.get_fillstyle()
532: 
533:         if not self._half_fill():
534:             self._path = polypath
535:         else:
536:             verts = polypath.vertices
537: 
538:             y = (1 + np.sqrt(5)) / 4.
539:             top = Path([verts[0], verts[1], verts[4], verts[0]])
540:             bottom = Path([verts[1], verts[2], verts[3], verts[4], verts[1]])
541:             left = Path([verts[0], verts[1], verts[2], [0, -y], verts[0]])
542:             right = Path([verts[0], verts[4], verts[3], [0, -y], verts[0]])
543: 
544:             if fs == 'top':
545:                 mpath, mpath_alt = top, bottom
546:             elif fs == 'bottom':
547:                 mpath, mpath_alt = bottom, top
548:             elif fs == 'left':
549:                 mpath, mpath_alt = left, right
550:             else:
551:                 mpath, mpath_alt = right, left
552:             self._path = mpath
553:             self._alt_path = mpath_alt
554:             self._alt_transform = self._transform
555: 
556:         self._joinstyle = 'miter'
557: 
558:     def _set_star(self):
559:         self._transform = Affine2D().scale(0.5)
560:         self._snap_threshold = 5.0
561: 
562:         fs = self.get_fillstyle()
563:         polypath = Path.unit_regular_star(5, innerCircle=0.381966)
564: 
565:         if not self._half_fill():
566:             self._path = polypath
567:         else:
568:             verts = polypath.vertices
569: 
570:             top = Path(np.vstack((verts[0:4, :], verts[7:10, :], verts[0])))
571:             bottom = Path(np.vstack((verts[3:8, :], verts[3])))
572:             left = Path(np.vstack((verts[0:6, :], verts[0])))
573:             right = Path(np.vstack((verts[0], verts[5:10, :], verts[0])))
574: 
575:             if fs == 'top':
576:                 mpath, mpath_alt = top, bottom
577:             elif fs == 'bottom':
578:                 mpath, mpath_alt = bottom, top
579:             elif fs == 'left':
580:                 mpath, mpath_alt = left, right
581:             else:
582:                 mpath, mpath_alt = right, left
583:             self._path = mpath
584:             self._alt_path = mpath_alt
585:             self._alt_transform = self._transform
586: 
587:         self._joinstyle = 'bevel'
588: 
589:     def _set_hexagon1(self):
590:         self._transform = Affine2D().scale(0.5)
591:         self._snap_threshold = None
592: 
593:         fs = self.get_fillstyle()
594:         polypath = Path.unit_regular_polygon(6)
595: 
596:         if not self._half_fill():
597:             self._path = polypath
598:         else:
599:             verts = polypath.vertices
600: 
601:             # not drawing inside lines
602:             x = np.abs(np.cos(5 * np.pi / 6.))
603:             top = Path(np.vstack(([-x, 0], verts[(1, 0, 5), :], [x, 0])))
604:             bottom = Path(np.vstack(([-x, 0], verts[2:5, :], [x, 0])))
605:             left = Path(verts[(0, 1, 2, 3), :])
606:             right = Path(verts[(0, 5, 4, 3), :])
607: 
608:             if fs == 'top':
609:                 mpath, mpath_alt = top, bottom
610:             elif fs == 'bottom':
611:                 mpath, mpath_alt = bottom, top
612:             elif fs == 'left':
613:                 mpath, mpath_alt = left, right
614:             else:
615:                 mpath, mpath_alt = right, left
616: 
617:             self._path = mpath
618:             self._alt_path = mpath_alt
619:             self._alt_transform = self._transform
620: 
621:         self._joinstyle = 'miter'
622: 
623:     def _set_hexagon2(self):
624:         self._transform = Affine2D().scale(0.5).rotate_deg(30)
625:         self._snap_threshold = None
626: 
627:         fs = self.get_fillstyle()
628:         polypath = Path.unit_regular_polygon(6)
629: 
630:         if not self._half_fill():
631:             self._path = polypath
632:         else:
633:             verts = polypath.vertices
634: 
635:             # not drawing inside lines
636:             x, y = np.sqrt(3) / 4, 3 / 4.
637:             top = Path(verts[(1, 0, 5, 4, 1), :])
638:             bottom = Path(verts[(1, 2, 3, 4), :])
639:             left = Path(np.vstack(([x, y], verts[(0, 1, 2), :],
640:                                    [-x, -y], [x, y])))
641:             right = Path(np.vstack(([x, y], verts[(5, 4, 3), :], [-x, -y])))
642: 
643:             if fs == 'top':
644:                 mpath, mpath_alt = top, bottom
645:             elif fs == 'bottom':
646:                 mpath, mpath_alt = bottom, top
647:             elif fs == 'left':
648:                 mpath, mpath_alt = left, right
649:             else:
650:                 mpath, mpath_alt = right, left
651: 
652:             self._path = mpath
653:             self._alt_path = mpath_alt
654:             self._alt_transform = self._transform
655: 
656:         self._joinstyle = 'miter'
657: 
658:     def _set_octagon(self):
659:         self._transform = Affine2D().scale(0.5)
660:         self._snap_threshold = 5.0
661: 
662:         fs = self.get_fillstyle()
663:         polypath = Path.unit_regular_polygon(8)
664: 
665:         if not self._half_fill():
666:             self._transform.rotate_deg(22.5)
667:             self._path = polypath
668:         else:
669:             x = np.sqrt(2.) / 4.
670:             half = Path([[0, -1], [0, 1], [-x, 1], [-1, x],
671:                          [-1, -x], [-x, -1], [0, -1]])
672: 
673:             if fs == 'bottom':
674:                 rotate = 90.
675:             elif fs == 'top':
676:                 rotate = 270.
677:             elif fs == 'right':
678:                 rotate = 180.
679:             else:
680:                 rotate = 0.
681: 
682:             self._transform.rotate_deg(rotate)
683:             self._path = self._alt_path = half
684:             self._alt_transform = self._transform.frozen().rotate_deg(180.0)
685: 
686:         self._joinstyle = 'miter'
687: 
688:     _line_marker_path = Path([[0.0, -1.0], [0.0, 1.0]])
689: 
690:     def _set_vline(self):
691:         self._transform = Affine2D().scale(0.5)
692:         self._snap_threshold = 1.0
693:         self._filled = False
694:         self._path = self._line_marker_path
695: 
696:     def _set_hline(self):
697:         self._set_vline()
698:         self._transform = self._transform.rotate_deg(90)
699: 
700:     _tickhoriz_path = Path([[0.0, 0.0], [1.0, 0.0]])
701: 
702:     def _set_tickleft(self):
703:         self._transform = Affine2D().scale(-1.0, 1.0)
704:         self._snap_threshold = 1.0
705:         self._filled = False
706:         self._path = self._tickhoriz_path
707: 
708:     def _set_tickright(self):
709:         self._transform = Affine2D().scale(1.0, 1.0)
710:         self._snap_threshold = 1.0
711:         self._filled = False
712:         self._path = self._tickhoriz_path
713: 
714:     _tickvert_path = Path([[-0.0, 0.0], [-0.0, 1.0]])
715: 
716:     def _set_tickup(self):
717:         self._transform = Affine2D().scale(1.0, 1.0)
718:         self._snap_threshold = 1.0
719:         self._filled = False
720:         self._path = self._tickvert_path
721: 
722:     def _set_tickdown(self):
723:         self._transform = Affine2D().scale(1.0, -1.0)
724:         self._snap_threshold = 1.0
725:         self._filled = False
726:         self._path = self._tickvert_path
727: 
728:     _tri_path = Path([[0.0, 0.0], [0.0, -1.0],
729:                       [0.0, 0.0], [0.8, 0.5],
730:                       [0.0, 0.0], [-0.8, 0.5]],
731:                      [Path.MOVETO, Path.LINETO,
732:                       Path.MOVETO, Path.LINETO,
733:                       Path.MOVETO, Path.LINETO])
734: 
735:     def _set_tri_down(self):
736:         self._transform = Affine2D().scale(0.5)
737:         self._snap_threshold = 5.0
738:         self._filled = False
739:         self._path = self._tri_path
740: 
741:     def _set_tri_up(self):
742:         self._set_tri_down()
743:         self._transform = self._transform.rotate_deg(180)
744: 
745:     def _set_tri_left(self):
746:         self._set_tri_down()
747:         self._transform = self._transform.rotate_deg(270)
748: 
749:     def _set_tri_right(self):
750:         self._set_tri_down()
751:         self._transform = self._transform.rotate_deg(90)
752: 
753:     _caret_path = Path([[-1.0, 1.5], [0.0, 0.0], [1.0, 1.5]])
754: 
755:     def _set_caretdown(self):
756:         self._transform = Affine2D().scale(0.5)
757:         self._snap_threshold = 3.0
758:         self._filled = False
759:         self._path = self._caret_path
760:         self._joinstyle = 'miter'
761: 
762:     def _set_caretup(self):
763:         self._set_caretdown()
764:         self._transform = self._transform.rotate_deg(180)
765: 
766:     def _set_caretleft(self):
767:         self._set_caretdown()
768:         self._transform = self._transform.rotate_deg(270)
769: 
770:     def _set_caretright(self):
771:         self._set_caretdown()
772:         self._transform = self._transform.rotate_deg(90)
773: 
774:     _caret_path_base = Path([[-1.0, 0.0], [0.0, -1.5], [1.0, 0]])
775: 
776:     def _set_caretdownbase(self):
777:         self._set_caretdown()
778:         self._path = self._caret_path_base
779: 
780:     def _set_caretupbase(self):
781:         self._set_caretdownbase()
782:         self._transform = self._transform.rotate_deg(180)
783: 
784:     def _set_caretleftbase(self):
785:         self._set_caretdownbase()
786:         self._transform = self._transform.rotate_deg(270)
787: 
788:     def _set_caretrightbase(self):
789:         self._set_caretdownbase()
790:         self._transform = self._transform.rotate_deg(90)
791: 
792:     _plus_path = Path([[-1.0, 0.0], [1.0, 0.0],
793:                        [0.0, -1.0], [0.0, 1.0]],
794:                       [Path.MOVETO, Path.LINETO,
795:                        Path.MOVETO, Path.LINETO])
796: 
797:     def _set_plus(self):
798:         self._transform = Affine2D().scale(0.5)
799:         self._snap_threshold = 1.0
800:         self._filled = False
801:         self._path = self._plus_path
802: 
803:     _x_path = Path([[-1.0, -1.0], [1.0, 1.0],
804:                     [-1.0, 1.0], [1.0, -1.0]],
805:                    [Path.MOVETO, Path.LINETO,
806:                     Path.MOVETO, Path.LINETO])
807: 
808:     def _set_x(self):
809:         self._transform = Affine2D().scale(0.5)
810:         self._snap_threshold = 3.0
811:         self._filled = False
812:         self._path = self._x_path
813: 
814:     _plus_filled_path = Path([(1/3, 0), (2/3, 0), (2/3, 1/3),
815:                               (1, 1/3), (1, 2/3), (2/3, 2/3),
816:                               (2/3, 1), (1/3, 1), (1/3, 2/3),
817:                               (0, 2/3), (0, 1/3), (1/3, 1/3),
818:                               (1/3, 0)],
819:                              [Path.MOVETO, Path.LINETO, Path.LINETO,
820:                               Path.LINETO, Path.LINETO, Path.LINETO,
821:                               Path.LINETO, Path.LINETO, Path.LINETO,
822:                               Path.LINETO, Path.LINETO, Path.LINETO,
823:                               Path.CLOSEPOLY])
824: 
825:     _plus_filled_path_t = Path([(1, 1/2), (1, 2/3), (2/3, 2/3),
826:                                 (2/3, 1), (1/3, 1), (1/3, 2/3),
827:                                 (0, 2/3), (0, 1/2), (1, 1/2)],
828:                                [Path.MOVETO, Path.LINETO, Path.LINETO,
829:                                 Path.LINETO, Path.LINETO, Path.LINETO,
830:                                 Path.LINETO, Path.LINETO,
831:                                 Path.CLOSEPOLY])
832: 
833:     def _set_plus_filled(self):
834:         self._transform = Affine2D().translate(-0.5, -0.5)
835:         self._snap_threshold = 5.0
836:         self._joinstyle = 'miter'
837:         fs = self.get_fillstyle()
838:         if not self._half_fill():
839:             self._path = self._plus_filled_path
840:         else:
841:             # Rotate top half path to support all partitions
842:             if fs == 'top':
843:                 rotate, rotate_alt = 0, 180
844:             elif fs == 'bottom':
845:                 rotate, rotate_alt = 180, 0
846:             elif fs == 'left':
847:                 rotate, rotate_alt = 90, 270
848:             else:
849:                 rotate, rotate_alt = 270, 90
850: 
851:             self._path = self._plus_filled_path_t
852:             self._alt_path = self._plus_filled_path_t
853:             self._alt_transform = Affine2D().translate(-0.5, -0.5)
854:             self._transform.rotate_deg(rotate)
855:             self._alt_transform.rotate_deg(rotate_alt)
856: 
857:     _x_filled_path = Path([(0.25, 0), (0.5, 0.25), (0.75, 0), (1, 0.25),
858:                            (0.75, 0.5), (1, 0.75), (0.75, 1), (0.5, 0.75),
859:                            (0.25, 1), (0, 0.75), (0.25, 0.5), (0, 0.25),
860:                            (0.25, 0)],
861:                           [Path.MOVETO, Path.LINETO, Path.LINETO,
862:                            Path.LINETO, Path.LINETO, Path.LINETO,
863:                            Path.LINETO, Path.LINETO, Path.LINETO,
864:                            Path.LINETO, Path.LINETO, Path.LINETO,
865:                            Path.CLOSEPOLY])
866: 
867:     _x_filled_path_t = Path([(0.75, 0.5), (1, 0.75), (0.75, 1),
868:                              (0.5, 0.75), (0.25, 1), (0, 0.75),
869:                              (0.25, 0.5), (0.75, 0.5)],
870:                             [Path.MOVETO, Path.LINETO, Path.LINETO,
871:                              Path.LINETO, Path.LINETO, Path.LINETO,
872:                              Path.LINETO, Path.CLOSEPOLY])
873: 
874:     def _set_x_filled(self):
875:         self._transform = Affine2D().translate(-0.5, -0.5)
876:         self._snap_threshold = 5.0
877:         self._joinstyle = 'miter'
878:         fs = self.get_fillstyle()
879:         if not self._half_fill():
880:             self._path = self._x_filled_path
881:         else:
882:             # Rotate top half path to support all partitions
883:             if fs == 'top':
884:                 rotate, rotate_alt = 0, 180
885:             elif fs == 'bottom':
886:                 rotate, rotate_alt = 180, 0
887:             elif fs == 'left':
888:                 rotate, rotate_alt = 90, 270
889:             else:
890:                 rotate, rotate_alt = 270, 90
891: 
892:             self._path = self._x_filled_path_t
893:             self._alt_path = self._x_filled_path_t
894:             self._alt_transform = Affine2D().translate(-0.5, -0.5)
895:             self._transform.rotate_deg(rotate)
896:             self._alt_transform.rotate_deg(rotate_alt)
897: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

unicode_74220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, (-1)), 'unicode', u'\nThis module contains functions to handle markers.  Used by both the\nmarker functionality of `~matplotlib.axes.Axes.plot` and\n`~matplotlib.axes.Axes.scatter`.\n\nAll possible markers are defined here:\n\n============================== ===============================================\nmarker                         description\n============================== ===============================================\n`"."`                          point\n`","`                          pixel\n`"o"`                          circle\n`"v"`                          triangle_down\n`"^"`                          triangle_up\n`"<"`                          triangle_left\n`">"`                          triangle_right\n`"1"`                          tri_down\n`"2"`                          tri_up\n`"3"`                          tri_left\n`"4"`                          tri_right\n`"8"`                          octagon\n`"s"`                          square\n`"p"`                          pentagon\n`"P"`                          plus (filled)\n`"*"`                          star\n`"h"`                          hexagon1\n`"H"`                          hexagon2\n`"+"`                          plus\n`"x"`                          x\n`"X"`                          x (filled)\n`"D"`                          diamond\n`"d"`                          thin_diamond\n`"|"`                          vline\n`"_"`                          hline\nTICKLEFT                       tickleft\nTICKRIGHT                      tickright\nTICKUP                         tickup\nTICKDOWN                       tickdown\nCARETLEFT                      caretleft (centered at tip)\nCARETRIGHT                     caretright (centered at tip)\nCARETUP                        caretup (centered at tip)\nCARETDOWN                      caretdown (centered at tip)\nCARETLEFTBASE                  caretleft (centered at base)\nCARETRIGHTBASE                 caretright (centered at base)\nCARETUPBASE                    caretup (centered at base)\n`"None"`, `" "` or `""`        nothing\n``\'$...$\'``                    render the string using mathtext.\n`verts`                        a list of (x, y) pairs used for Path vertices.\n                               The center of the marker is located at (0,0) and\n                               the size is normalized.\npath                           a `~matplotlib.path.Path` instance.\n(`numsides`, `style`, `angle`) The marker can also be a tuple (`numsides`,\n                               `style`, `angle`), which will create a custom,\n                               regular symbol.\n\n                               `numsides`:\n                                   the number of sides\n\n                               `style`:\n                                   the style of the regular symbol:\n\n                                   0\n                                     a regular polygon\n                                   1\n                                     a star-like symbol\n                                   2\n                                     an asterisk\n                                   3\n                                     a circle (`numsides` and `angle` is\n                                     ignored)\n\n                               `angle`:\n                                   the angle of rotation of the symbol\n============================== ===============================================\n\nFor backward compatibility, the form (`verts`, 0) is also accepted,\nbut it is equivalent to just `verts` for giving a raw set of vertices\nthat define the shape.\n\n`None` is the default which means \'nothing\', however this table is\nreferred to from other docs for the valid inputs from marker inputs and in\nthose cases `None` still means \'default\'.\n')
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 89, 0))

# 'import six' statement (line 89)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_74221 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 89, 0), 'six')

if (type(import_74221) is not StypyTypeError):

    if (import_74221 != 'pyd_module'):
        __import__(import_74221)
        sys_modules_74222 = sys.modules[import_74221]
        import_module(stypy.reporting.localization.Localization(__file__, 89, 0), 'six', sys_modules_74222.module_type_store, module_type_store)
    else:
        import six

        import_module(stypy.reporting.localization.Localization(__file__, 89, 0), 'six', six, module_type_store)

else:
    # Assigning a type to the variable 'six' (line 89)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 89, 0), 'six', import_74221)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 90, 0))

# 'from six.moves import xrange' statement (line 90)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_74223 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 90, 0), 'six.moves')

if (type(import_74223) is not StypyTypeError):

    if (import_74223 != 'pyd_module'):
        __import__(import_74223)
        sys_modules_74224 = sys.modules[import_74223]
        import_from_module(stypy.reporting.localization.Localization(__file__, 90, 0), 'six.moves', sys_modules_74224.module_type_store, module_type_store, ['xrange'])
        nest_module(stypy.reporting.localization.Localization(__file__, 90, 0), __file__, sys_modules_74224, sys_modules_74224.module_type_store, module_type_store)
    else:
        from six.moves import xrange

        import_from_module(stypy.reporting.localization.Localization(__file__, 90, 0), 'six.moves', None, module_type_store, ['xrange'], [xrange])

else:
    # Assigning a type to the variable 'six.moves' (line 90)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 90, 0), 'six.moves', import_74223)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 92, 0))

# 'from collections import Sized' statement (line 92)
try:
    from collections import Sized

except:
    Sized = UndefinedType
import_from_module(stypy.reporting.localization.Localization(__file__, 92, 0), 'collections', None, module_type_store, ['Sized'], [Sized])

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 94, 0))

# 'import numpy' statement (line 94)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_74225 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 94, 0), 'numpy')

if (type(import_74225) is not StypyTypeError):

    if (import_74225 != 'pyd_module'):
        __import__(import_74225)
        sys_modules_74226 = sys.modules[import_74225]
        import_module(stypy.reporting.localization.Localization(__file__, 94, 0), 'np', sys_modules_74226.module_type_store, module_type_store)
    else:
        import numpy as np

        import_module(stypy.reporting.localization.Localization(__file__, 94, 0), 'np', numpy, module_type_store)

else:
    # Assigning a type to the variable 'numpy' (line 94)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 94, 0), 'numpy', import_74225)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 96, 0))

# 'from matplotlib import rcParams' statement (line 96)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_74227 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 96, 0), 'matplotlib')

if (type(import_74227) is not StypyTypeError):

    if (import_74227 != 'pyd_module'):
        __import__(import_74227)
        sys_modules_74228 = sys.modules[import_74227]
        import_from_module(stypy.reporting.localization.Localization(__file__, 96, 0), 'matplotlib', sys_modules_74228.module_type_store, module_type_store, ['rcParams'])
        nest_module(stypy.reporting.localization.Localization(__file__, 96, 0), __file__, sys_modules_74228, sys_modules_74228.module_type_store, module_type_store)
    else:
        from matplotlib import rcParams

        import_from_module(stypy.reporting.localization.Localization(__file__, 96, 0), 'matplotlib', None, module_type_store, ['rcParams'], [rcParams])

else:
    # Assigning a type to the variable 'matplotlib' (line 96)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 96, 0), 'matplotlib', import_74227)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 97, 0))

# 'from matplotlib.cbook import is_math_text, is_numlike' statement (line 97)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_74229 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 97, 0), 'matplotlib.cbook')

if (type(import_74229) is not StypyTypeError):

    if (import_74229 != 'pyd_module'):
        __import__(import_74229)
        sys_modules_74230 = sys.modules[import_74229]
        import_from_module(stypy.reporting.localization.Localization(__file__, 97, 0), 'matplotlib.cbook', sys_modules_74230.module_type_store, module_type_store, ['is_math_text', 'is_numlike'])
        nest_module(stypy.reporting.localization.Localization(__file__, 97, 0), __file__, sys_modules_74230, sys_modules_74230.module_type_store, module_type_store)
    else:
        from matplotlib.cbook import is_math_text, is_numlike

        import_from_module(stypy.reporting.localization.Localization(__file__, 97, 0), 'matplotlib.cbook', None, module_type_store, ['is_math_text', 'is_numlike'], [is_math_text, is_numlike])

else:
    # Assigning a type to the variable 'matplotlib.cbook' (line 97)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 97, 0), 'matplotlib.cbook', import_74229)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 98, 0))

# 'from matplotlib.path import Path' statement (line 98)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_74231 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 98, 0), 'matplotlib.path')

if (type(import_74231) is not StypyTypeError):

    if (import_74231 != 'pyd_module'):
        __import__(import_74231)
        sys_modules_74232 = sys.modules[import_74231]
        import_from_module(stypy.reporting.localization.Localization(__file__, 98, 0), 'matplotlib.path', sys_modules_74232.module_type_store, module_type_store, ['Path'])
        nest_module(stypy.reporting.localization.Localization(__file__, 98, 0), __file__, sys_modules_74232, sys_modules_74232.module_type_store, module_type_store)
    else:
        from matplotlib.path import Path

        import_from_module(stypy.reporting.localization.Localization(__file__, 98, 0), 'matplotlib.path', None, module_type_store, ['Path'], [Path])

else:
    # Assigning a type to the variable 'matplotlib.path' (line 98)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 98, 0), 'matplotlib.path', import_74231)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 99, 0))

# 'from matplotlib.transforms import IdentityTransform, Affine2D' statement (line 99)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_74233 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 99, 0), 'matplotlib.transforms')

if (type(import_74233) is not StypyTypeError):

    if (import_74233 != 'pyd_module'):
        __import__(import_74233)
        sys_modules_74234 = sys.modules[import_74233]
        import_from_module(stypy.reporting.localization.Localization(__file__, 99, 0), 'matplotlib.transforms', sys_modules_74234.module_type_store, module_type_store, ['IdentityTransform', 'Affine2D'])
        nest_module(stypy.reporting.localization.Localization(__file__, 99, 0), __file__, sys_modules_74234, sys_modules_74234.module_type_store, module_type_store)
    else:
        from matplotlib.transforms import IdentityTransform, Affine2D

        import_from_module(stypy.reporting.localization.Localization(__file__, 99, 0), 'matplotlib.transforms', None, module_type_store, ['IdentityTransform', 'Affine2D'], [IdentityTransform, Affine2D])

else:
    # Assigning a type to the variable 'matplotlib.transforms' (line 99)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 0), 'matplotlib.transforms', import_74233)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')


# Assigning a Call to a Tuple (line 102):

# Assigning a Call to a Name:

# Call to xrange(...): (line 104)
# Processing the call arguments (line 104)
int_74236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 104, 69), 'int')
# Processing the call keyword arguments (line 104)
kwargs_74237 = {}
# Getting the type of 'xrange' (line 104)
xrange_74235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 62), 'xrange', False)
# Calling xrange(args, kwargs) (line 104)
xrange_call_result_74238 = invoke(stypy.reporting.localization.Localization(__file__, 104, 62), xrange_74235, *[int_74236], **kwargs_74237)

# Assigning a type to the variable 'call_assignment_74147' (line 102)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74147', xrange_call_result_74238)

# Assigning a Call to a Name (line 102):

# Call to __getitem__(...):
# Processing the call arguments
int_74241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 0), 'int')
# Processing the call keyword arguments
kwargs_74242 = {}
# Getting the type of 'call_assignment_74147' (line 102)
call_assignment_74147_74239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74147', False)
# Obtaining the member '__getitem__' of a type (line 102)
getitem___74240 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 0), call_assignment_74147_74239, '__getitem__')
# Calling __getitem__(args, kwargs)
getitem___call_result_74243 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___74240, *[int_74241], **kwargs_74242)

# Assigning a type to the variable 'call_assignment_74148' (line 102)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74148', getitem___call_result_74243)

# Assigning a Name to a Name (line 102):
# Getting the type of 'call_assignment_74148' (line 102)
call_assignment_74148_74244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74148')
# Assigning a type to the variable 'TICKLEFT' (line 102)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 1), 'TICKLEFT', call_assignment_74148_74244)

# Assigning a Call to a Name (line 102):

# Call to __getitem__(...):
# Processing the call arguments
int_74247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 0), 'int')
# Processing the call keyword arguments
kwargs_74248 = {}
# Getting the type of 'call_assignment_74147' (line 102)
call_assignment_74147_74245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74147', False)
# Obtaining the member '__getitem__' of a type (line 102)
getitem___74246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 0), call_assignment_74147_74245, '__getitem__')
# Calling __getitem__(args, kwargs)
getitem___call_result_74249 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___74246, *[int_74247], **kwargs_74248)

# Assigning a type to the variable 'call_assignment_74149' (line 102)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74149', getitem___call_result_74249)

# Assigning a Name to a Name (line 102):
# Getting the type of 'call_assignment_74149' (line 102)
call_assignment_74149_74250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74149')
# Assigning a type to the variable 'TICKRIGHT' (line 102)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 11), 'TICKRIGHT', call_assignment_74149_74250)

# Assigning a Call to a Name (line 102):

# Call to __getitem__(...):
# Processing the call arguments
int_74253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 0), 'int')
# Processing the call keyword arguments
kwargs_74254 = {}
# Getting the type of 'call_assignment_74147' (line 102)
call_assignment_74147_74251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74147', False)
# Obtaining the member '__getitem__' of a type (line 102)
getitem___74252 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 0), call_assignment_74147_74251, '__getitem__')
# Calling __getitem__(args, kwargs)
getitem___call_result_74255 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___74252, *[int_74253], **kwargs_74254)

# Assigning a type to the variable 'call_assignment_74150' (line 102)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74150', getitem___call_result_74255)

# Assigning a Name to a Name (line 102):
# Getting the type of 'call_assignment_74150' (line 102)
call_assignment_74150_74256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74150')
# Assigning a type to the variable 'TICKUP' (line 102)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 22), 'TICKUP', call_assignment_74150_74256)

# Assigning a Call to a Name (line 102):

# Call to __getitem__(...):
# Processing the call arguments
int_74259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 0), 'int')
# Processing the call keyword arguments
kwargs_74260 = {}
# Getting the type of 'call_assignment_74147' (line 102)
call_assignment_74147_74257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74147', False)
# Obtaining the member '__getitem__' of a type (line 102)
getitem___74258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 0), call_assignment_74147_74257, '__getitem__')
# Calling __getitem__(args, kwargs)
getitem___call_result_74261 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___74258, *[int_74259], **kwargs_74260)

# Assigning a type to the variable 'call_assignment_74151' (line 102)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74151', getitem___call_result_74261)

# Assigning a Name to a Name (line 102):
# Getting the type of 'call_assignment_74151' (line 102)
call_assignment_74151_74262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74151')
# Assigning a type to the variable 'TICKDOWN' (line 102)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 30), 'TICKDOWN', call_assignment_74151_74262)

# Assigning a Call to a Name (line 102):

# Call to __getitem__(...):
# Processing the call arguments
int_74265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 0), 'int')
# Processing the call keyword arguments
kwargs_74266 = {}
# Getting the type of 'call_assignment_74147' (line 102)
call_assignment_74147_74263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74147', False)
# Obtaining the member '__getitem__' of a type (line 102)
getitem___74264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 0), call_assignment_74147_74263, '__getitem__')
# Calling __getitem__(args, kwargs)
getitem___call_result_74267 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___74264, *[int_74265], **kwargs_74266)

# Assigning a type to the variable 'call_assignment_74152' (line 102)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74152', getitem___call_result_74267)

# Assigning a Name to a Name (line 102):
# Getting the type of 'call_assignment_74152' (line 102)
call_assignment_74152_74268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74152')
# Assigning a type to the variable 'CARETLEFT' (line 103)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 103, 1), 'CARETLEFT', call_assignment_74152_74268)

# Assigning a Call to a Name (line 102):

# Call to __getitem__(...):
# Processing the call arguments
int_74271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 0), 'int')
# Processing the call keyword arguments
kwargs_74272 = {}
# Getting the type of 'call_assignment_74147' (line 102)
call_assignment_74147_74269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74147', False)
# Obtaining the member '__getitem__' of a type (line 102)
getitem___74270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 0), call_assignment_74147_74269, '__getitem__')
# Calling __getitem__(args, kwargs)
getitem___call_result_74273 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___74270, *[int_74271], **kwargs_74272)

# Assigning a type to the variable 'call_assignment_74153' (line 102)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74153', getitem___call_result_74273)

# Assigning a Name to a Name (line 102):
# Getting the type of 'call_assignment_74153' (line 102)
call_assignment_74153_74274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74153')
# Assigning a type to the variable 'CARETRIGHT' (line 103)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 103, 12), 'CARETRIGHT', call_assignment_74153_74274)

# Assigning a Call to a Name (line 102):

# Call to __getitem__(...):
# Processing the call arguments
int_74277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 0), 'int')
# Processing the call keyword arguments
kwargs_74278 = {}
# Getting the type of 'call_assignment_74147' (line 102)
call_assignment_74147_74275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74147', False)
# Obtaining the member '__getitem__' of a type (line 102)
getitem___74276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 0), call_assignment_74147_74275, '__getitem__')
# Calling __getitem__(args, kwargs)
getitem___call_result_74279 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___74276, *[int_74277], **kwargs_74278)

# Assigning a type to the variable 'call_assignment_74154' (line 102)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74154', getitem___call_result_74279)

# Assigning a Name to a Name (line 102):
# Getting the type of 'call_assignment_74154' (line 102)
call_assignment_74154_74280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74154')
# Assigning a type to the variable 'CARETUP' (line 103)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 103, 24), 'CARETUP', call_assignment_74154_74280)

# Assigning a Call to a Name (line 102):

# Call to __getitem__(...):
# Processing the call arguments
int_74283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 0), 'int')
# Processing the call keyword arguments
kwargs_74284 = {}
# Getting the type of 'call_assignment_74147' (line 102)
call_assignment_74147_74281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74147', False)
# Obtaining the member '__getitem__' of a type (line 102)
getitem___74282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 0), call_assignment_74147_74281, '__getitem__')
# Calling __getitem__(args, kwargs)
getitem___call_result_74285 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___74282, *[int_74283], **kwargs_74284)

# Assigning a type to the variable 'call_assignment_74155' (line 102)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74155', getitem___call_result_74285)

# Assigning a Name to a Name (line 102):
# Getting the type of 'call_assignment_74155' (line 102)
call_assignment_74155_74286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74155')
# Assigning a type to the variable 'CARETDOWN' (line 103)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 103, 33), 'CARETDOWN', call_assignment_74155_74286)

# Assigning a Call to a Name (line 102):

# Call to __getitem__(...):
# Processing the call arguments
int_74289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 0), 'int')
# Processing the call keyword arguments
kwargs_74290 = {}
# Getting the type of 'call_assignment_74147' (line 102)
call_assignment_74147_74287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74147', False)
# Obtaining the member '__getitem__' of a type (line 102)
getitem___74288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 0), call_assignment_74147_74287, '__getitem__')
# Calling __getitem__(args, kwargs)
getitem___call_result_74291 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___74288, *[int_74289], **kwargs_74290)

# Assigning a type to the variable 'call_assignment_74156' (line 102)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74156', getitem___call_result_74291)

# Assigning a Name to a Name (line 102):
# Getting the type of 'call_assignment_74156' (line 102)
call_assignment_74156_74292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74156')
# Assigning a type to the variable 'CARETLEFTBASE' (line 104)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 104, 1), 'CARETLEFTBASE', call_assignment_74156_74292)

# Assigning a Call to a Name (line 102):

# Call to __getitem__(...):
# Processing the call arguments
int_74295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 0), 'int')
# Processing the call keyword arguments
kwargs_74296 = {}
# Getting the type of 'call_assignment_74147' (line 102)
call_assignment_74147_74293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74147', False)
# Obtaining the member '__getitem__' of a type (line 102)
getitem___74294 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 0), call_assignment_74147_74293, '__getitem__')
# Calling __getitem__(args, kwargs)
getitem___call_result_74297 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___74294, *[int_74295], **kwargs_74296)

# Assigning a type to the variable 'call_assignment_74157' (line 102)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74157', getitem___call_result_74297)

# Assigning a Name to a Name (line 102):
# Getting the type of 'call_assignment_74157' (line 102)
call_assignment_74157_74298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74157')
# Assigning a type to the variable 'CARETRIGHTBASE' (line 104)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 104, 16), 'CARETRIGHTBASE', call_assignment_74157_74298)

# Assigning a Call to a Name (line 102):

# Call to __getitem__(...):
# Processing the call arguments
int_74301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 0), 'int')
# Processing the call keyword arguments
kwargs_74302 = {}
# Getting the type of 'call_assignment_74147' (line 102)
call_assignment_74147_74299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74147', False)
# Obtaining the member '__getitem__' of a type (line 102)
getitem___74300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 0), call_assignment_74147_74299, '__getitem__')
# Calling __getitem__(args, kwargs)
getitem___call_result_74303 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___74300, *[int_74301], **kwargs_74302)

# Assigning a type to the variable 'call_assignment_74158' (line 102)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74158', getitem___call_result_74303)

# Assigning a Name to a Name (line 102):
# Getting the type of 'call_assignment_74158' (line 102)
call_assignment_74158_74304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74158')
# Assigning a type to the variable 'CARETUPBASE' (line 104)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 104, 32), 'CARETUPBASE', call_assignment_74158_74304)

# Assigning a Call to a Name (line 102):

# Call to __getitem__(...):
# Processing the call arguments
int_74307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 0), 'int')
# Processing the call keyword arguments
kwargs_74308 = {}
# Getting the type of 'call_assignment_74147' (line 102)
call_assignment_74147_74305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74147', False)
# Obtaining the member '__getitem__' of a type (line 102)
getitem___74306 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 0), call_assignment_74147_74305, '__getitem__')
# Calling __getitem__(args, kwargs)
getitem___call_result_74309 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___74306, *[int_74307], **kwargs_74308)

# Assigning a type to the variable 'call_assignment_74159' (line 102)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74159', getitem___call_result_74309)

# Assigning a Name to a Name (line 102):
# Getting the type of 'call_assignment_74159' (line 102)
call_assignment_74159_74310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'call_assignment_74159')
# Assigning a type to the variable 'CARETDOWNBASE' (line 104)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 104, 45), 'CARETDOWNBASE', call_assignment_74159_74310)

# Assigning a Call to a Name (line 106):

# Assigning a Call to a Name (line 106):

# Call to Path(...): (line 106)
# Processing the call arguments (line 106)

# Call to empty(...): (line 106)
# Processing the call arguments (line 106)

# Obtaining an instance of the builtin type 'tuple' (line 106)
tuple_74314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 106, 29), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 106)
# Adding element type (line 106)
int_74315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 106, 29), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 29), tuple_74314, int_74315)
# Adding element type (line 106)
int_74316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 106, 32), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 29), tuple_74314, int_74316)

# Processing the call keyword arguments (line 106)
kwargs_74317 = {}
# Getting the type of 'np' (line 106)
np_74312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 19), 'np', False)
# Obtaining the member 'empty' of a type (line 106)
empty_74313 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 106, 19), np_74312, 'empty')
# Calling empty(args, kwargs) (line 106)
empty_call_result_74318 = invoke(stypy.reporting.localization.Localization(__file__, 106, 19), empty_74313, *[tuple_74314], **kwargs_74317)

# Processing the call keyword arguments (line 106)
kwargs_74319 = {}
# Getting the type of 'Path' (line 106)
Path_74311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 14), 'Path', False)
# Calling Path(args, kwargs) (line 106)
Path_call_result_74320 = invoke(stypy.reporting.localization.Localization(__file__, 106, 14), Path_74311, *[empty_call_result_74318], **kwargs_74319)

# Assigning a type to the variable '_empty_path' (line 106)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 106, 0), '_empty_path', Path_call_result_74320)
# Declaration of the 'MarkerStyle' class

class MarkerStyle(object, ):
    
    # Assigning a Dict to a Name (line 111):
    
    # Assigning a Tuple to a Name (line 157):
    
    # Assigning a Tuple to a Name (line 161):
    
    # Assigning a Tuple to a Name (line 162):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 167)
        None_74321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 30), 'None')
        # Getting the type of 'None' (line 167)
        None_74322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 46), 'None')
        defaults = [None_74321, None_74322]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 167, 4, False)
        # Assigning a type to the variable 'self' (line 168)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 168, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle.__init__', ['marker', 'fillstyle'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['marker', 'fillstyle'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        unicode_74323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 186, (-1)), 'unicode', u'\n        MarkerStyle\n\n        Attributes\n        ----------\n        markers : list of known markes\n\n        fillstyles : list of known fillstyles\n\n        filled_markers : list of known filled markers.\n\n        Parameters\n        ----------\n        marker : string or array_like, optional, default: None\n            See the descriptions of possible markers in the module docstring.\n\n        fillstyle : string, optional, default: \'full\'\n            \'full\', \'left", \'right\', \'bottom\', \'top\', \'none\'\n        ')
        
        # Assigning a Name to a Attribute (line 187):
        
        # Assigning a Name to a Attribute (line 187):
        # Getting the type of 'None' (line 187)
        None_74324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 32), 'None')
        # Getting the type of 'self' (line 187)
        self_74325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 8), 'self')
        # Setting the type of the member '_marker_function' of a type (line 187)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 187, 8), self_74325, '_marker_function', None_74324)
        
        # Call to set_fillstyle(...): (line 188)
        # Processing the call arguments (line 188)
        # Getting the type of 'fillstyle' (line 188)
        fillstyle_74328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 27), 'fillstyle', False)
        # Processing the call keyword arguments (line 188)
        kwargs_74329 = {}
        # Getting the type of 'self' (line 188)
        self_74326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 8), 'self', False)
        # Obtaining the member 'set_fillstyle' of a type (line 188)
        set_fillstyle_74327 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 188, 8), self_74326, 'set_fillstyle')
        # Calling set_fillstyle(args, kwargs) (line 188)
        set_fillstyle_call_result_74330 = invoke(stypy.reporting.localization.Localization(__file__, 188, 8), set_fillstyle_74327, *[fillstyle_74328], **kwargs_74329)
        
        
        # Call to set_marker(...): (line 189)
        # Processing the call arguments (line 189)
        # Getting the type of 'marker' (line 189)
        marker_74333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 24), 'marker', False)
        # Processing the call keyword arguments (line 189)
        kwargs_74334 = {}
        # Getting the type of 'self' (line 189)
        self_74331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 8), 'self', False)
        # Obtaining the member 'set_marker' of a type (line 189)
        set_marker_74332 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 8), self_74331, 'set_marker')
        # Calling set_marker(args, kwargs) (line 189)
        set_marker_call_result_74335 = invoke(stypy.reporting.localization.Localization(__file__, 189, 8), set_marker_74332, *[marker_74333], **kwargs_74334)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def __getstate__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__getstate__'
        module_type_store = module_type_store.open_function_context('__getstate__', 191, 4, False)
        # Assigning a type to the variable 'self' (line 192)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 192, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle.__getstate__.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle.__getstate__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle.__getstate__.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle.__getstate__.__dict__.__setitem__('stypy_function_name', 'MarkerStyle.__getstate__')
        MarkerStyle.__getstate__.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle.__getstate__.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle.__getstate__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle.__getstate__.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle.__getstate__.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle.__getstate__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle.__getstate__.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle.__getstate__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__getstate__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__getstate__(...)' code ##################

        
        # Assigning a Call to a Name (line 192):
        
        # Assigning a Call to a Name (line 192):
        
        # Call to copy(...): (line 192)
        # Processing the call keyword arguments (line 192)
        kwargs_74339 = {}
        # Getting the type of 'self' (line 192)
        self_74336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 12), 'self', False)
        # Obtaining the member '__dict__' of a type (line 192)
        dict___74337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 192, 12), self_74336, '__dict__')
        # Obtaining the member 'copy' of a type (line 192)
        copy_74338 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 192, 12), dict___74337, 'copy')
        # Calling copy(args, kwargs) (line 192)
        copy_call_result_74340 = invoke(stypy.reporting.localization.Localization(__file__, 192, 12), copy_74338, *[], **kwargs_74339)
        
        # Assigning a type to the variable 'd' (line 192)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 192, 8), 'd', copy_call_result_74340)
        
        # Call to pop(...): (line 193)
        # Processing the call arguments (line 193)
        unicode_74343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 193, 14), 'unicode', u'_marker_function')
        # Processing the call keyword arguments (line 193)
        kwargs_74344 = {}
        # Getting the type of 'd' (line 193)
        d_74341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 8), 'd', False)
        # Obtaining the member 'pop' of a type (line 193)
        pop_74342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 193, 8), d_74341, 'pop')
        # Calling pop(args, kwargs) (line 193)
        pop_call_result_74345 = invoke(stypy.reporting.localization.Localization(__file__, 193, 8), pop_74342, *[unicode_74343], **kwargs_74344)
        
        # Getting the type of 'd' (line 194)
        d_74346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 194, 15), 'd')
        # Assigning a type to the variable 'stypy_return_type' (line 194)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 194, 8), 'stypy_return_type', d_74346)
        
        # ################# End of '__getstate__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__getstate__' in the type store
        # Getting the type of 'stypy_return_type' (line 191)
        stypy_return_type_74347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74347)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__getstate__'
        return stypy_return_type_74347


    @norecursion
    def __setstate__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__setstate__'
        module_type_store = module_type_store.open_function_context('__setstate__', 196, 4, False)
        # Assigning a type to the variable 'self' (line 197)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 197, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle.__setstate__.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle.__setstate__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle.__setstate__.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle.__setstate__.__dict__.__setitem__('stypy_function_name', 'MarkerStyle.__setstate__')
        MarkerStyle.__setstate__.__dict__.__setitem__('stypy_param_names_list', ['statedict'])
        MarkerStyle.__setstate__.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle.__setstate__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle.__setstate__.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle.__setstate__.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle.__setstate__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle.__setstate__.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle.__setstate__', ['statedict'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__setstate__', localization, ['statedict'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__setstate__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 197):
        
        # Assigning a Name to a Attribute (line 197):
        # Getting the type of 'statedict' (line 197)
        statedict_74348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 24), 'statedict')
        # Getting the type of 'self' (line 197)
        self_74349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 8), 'self')
        # Setting the type of the member '__dict__' of a type (line 197)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 8), self_74349, '__dict__', statedict_74348)
        
        # Call to set_marker(...): (line 198)
        # Processing the call arguments (line 198)
        # Getting the type of 'self' (line 198)
        self_74352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 24), 'self', False)
        # Obtaining the member '_marker' of a type (line 198)
        _marker_74353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 24), self_74352, '_marker')
        # Processing the call keyword arguments (line 198)
        kwargs_74354 = {}
        # Getting the type of 'self' (line 198)
        self_74350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 8), 'self', False)
        # Obtaining the member 'set_marker' of a type (line 198)
        set_marker_74351 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 8), self_74350, 'set_marker')
        # Calling set_marker(args, kwargs) (line 198)
        set_marker_call_result_74355 = invoke(stypy.reporting.localization.Localization(__file__, 198, 8), set_marker_74351, *[_marker_74353], **kwargs_74354)
        
        
        # ################# End of '__setstate__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__setstate__' in the type store
        # Getting the type of 'stypy_return_type' (line 196)
        stypy_return_type_74356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74356)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__setstate__'
        return stypy_return_type_74356


    @norecursion
    def _recache(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_recache'
        module_type_store = module_type_store.open_function_context('_recache', 200, 4, False)
        # Assigning a type to the variable 'self' (line 201)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 201, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._recache.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._recache.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._recache.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._recache.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._recache')
        MarkerStyle._recache.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._recache.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._recache.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._recache.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._recache.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._recache.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._recache.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._recache', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_recache', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_recache(...)' code ##################

        
        # Type idiom detected: calculating its left and rigth part (line 201)
        # Getting the type of 'self' (line 201)
        self_74357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 11), 'self')
        # Obtaining the member '_marker_function' of a type (line 201)
        _marker_function_74358 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 201, 11), self_74357, '_marker_function')
        # Getting the type of 'None' (line 201)
        None_74359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 36), 'None')
        
        (may_be_74360, more_types_in_union_74361) = may_be_none(_marker_function_74358, None_74359)

        if may_be_74360:

            if more_types_in_union_74361:
                # Runtime conditional SSA (line 201)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'stypy_return_type' (line 202)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 202, 12), 'stypy_return_type', types.NoneType)

            if more_types_in_union_74361:
                # SSA join for if statement (line 201)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Name to a Attribute (line 203):
        
        # Assigning a Name to a Attribute (line 203):
        # Getting the type of '_empty_path' (line 203)
        _empty_path_74362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 21), '_empty_path')
        # Getting the type of 'self' (line 203)
        self_74363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 8), 'self')
        # Setting the type of the member '_path' of a type (line 203)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 203, 8), self_74363, '_path', _empty_path_74362)
        
        # Assigning a Call to a Attribute (line 204):
        
        # Assigning a Call to a Attribute (line 204):
        
        # Call to IdentityTransform(...): (line 204)
        # Processing the call keyword arguments (line 204)
        kwargs_74365 = {}
        # Getting the type of 'IdentityTransform' (line 204)
        IdentityTransform_74364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 26), 'IdentityTransform', False)
        # Calling IdentityTransform(args, kwargs) (line 204)
        IdentityTransform_call_result_74366 = invoke(stypy.reporting.localization.Localization(__file__, 204, 26), IdentityTransform_74364, *[], **kwargs_74365)
        
        # Getting the type of 'self' (line 204)
        self_74367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 204)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 204, 8), self_74367, '_transform', IdentityTransform_call_result_74366)
        
        # Assigning a Name to a Attribute (line 205):
        
        # Assigning a Name to a Attribute (line 205):
        # Getting the type of 'None' (line 205)
        None_74368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 25), 'None')
        # Getting the type of 'self' (line 205)
        self_74369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 8), 'self')
        # Setting the type of the member '_alt_path' of a type (line 205)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 205, 8), self_74369, '_alt_path', None_74368)
        
        # Assigning a Name to a Attribute (line 206):
        
        # Assigning a Name to a Attribute (line 206):
        # Getting the type of 'None' (line 206)
        None_74370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 30), 'None')
        # Getting the type of 'self' (line 206)
        self_74371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'self')
        # Setting the type of the member '_alt_transform' of a type (line 206)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 8), self_74371, '_alt_transform', None_74370)
        
        # Assigning a Name to a Attribute (line 207):
        
        # Assigning a Name to a Attribute (line 207):
        # Getting the type of 'None' (line 207)
        None_74372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 31), 'None')
        # Getting the type of 'self' (line 207)
        self_74373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 207)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 8), self_74373, '_snap_threshold', None_74372)
        
        # Assigning a Str to a Attribute (line 208):
        
        # Assigning a Str to a Attribute (line 208):
        unicode_74374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 26), 'unicode', u'round')
        # Getting the type of 'self' (line 208)
        self_74375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 8), 'self')
        # Setting the type of the member '_joinstyle' of a type (line 208)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 208, 8), self_74375, '_joinstyle', unicode_74374)
        
        # Assigning a Str to a Attribute (line 209):
        
        # Assigning a Str to a Attribute (line 209):
        unicode_74376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 209, 25), 'unicode', u'butt')
        # Getting the type of 'self' (line 209)
        self_74377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 8), 'self')
        # Setting the type of the member '_capstyle' of a type (line 209)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 209, 8), self_74377, '_capstyle', unicode_74376)
        
        # Assigning a Name to a Attribute (line 210):
        
        # Assigning a Name to a Attribute (line 210):
        # Getting the type of 'True' (line 210)
        True_74378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 23), 'True')
        # Getting the type of 'self' (line 210)
        self_74379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 8), 'self')
        # Setting the type of the member '_filled' of a type (line 210)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 210, 8), self_74379, '_filled', True_74378)
        
        # Call to _marker_function(...): (line 211)
        # Processing the call keyword arguments (line 211)
        kwargs_74382 = {}
        # Getting the type of 'self' (line 211)
        self_74380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 8), 'self', False)
        # Obtaining the member '_marker_function' of a type (line 211)
        _marker_function_74381 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 211, 8), self_74380, '_marker_function')
        # Calling _marker_function(args, kwargs) (line 211)
        _marker_function_call_result_74383 = invoke(stypy.reporting.localization.Localization(__file__, 211, 8), _marker_function_74381, *[], **kwargs_74382)
        
        
        # ################# End of '_recache(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_recache' in the type store
        # Getting the type of 'stypy_return_type' (line 200)
        stypy_return_type_74384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74384)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_recache'
        return stypy_return_type_74384


    @norecursion
    def is_filled(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'is_filled'
        module_type_store = module_type_store.open_function_context('is_filled', 220, 4, False)
        # Assigning a type to the variable 'self' (line 221)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 221, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle.is_filled.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle.is_filled.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle.is_filled.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle.is_filled.__dict__.__setitem__('stypy_function_name', 'MarkerStyle.is_filled')
        MarkerStyle.is_filled.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle.is_filled.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle.is_filled.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle.is_filled.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle.is_filled.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle.is_filled.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle.is_filled.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle.is_filled', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'is_filled', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'is_filled(...)' code ##################

        # Getting the type of 'self' (line 221)
        self_74385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 15), 'self')
        # Obtaining the member '_filled' of a type (line 221)
        _filled_74386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 221, 15), self_74385, '_filled')
        # Assigning a type to the variable 'stypy_return_type' (line 221)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 221, 8), 'stypy_return_type', _filled_74386)
        
        # ################# End of 'is_filled(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'is_filled' in the type store
        # Getting the type of 'stypy_return_type' (line 220)
        stypy_return_type_74387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74387)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'is_filled'
        return stypy_return_type_74387


    @norecursion
    def get_fillstyle(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_fillstyle'
        module_type_store = module_type_store.open_function_context('get_fillstyle', 223, 4, False)
        # Assigning a type to the variable 'self' (line 224)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 224, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle.get_fillstyle.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle.get_fillstyle.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle.get_fillstyle.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle.get_fillstyle.__dict__.__setitem__('stypy_function_name', 'MarkerStyle.get_fillstyle')
        MarkerStyle.get_fillstyle.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle.get_fillstyle.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle.get_fillstyle.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle.get_fillstyle.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle.get_fillstyle.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle.get_fillstyle.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle.get_fillstyle.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle.get_fillstyle', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_fillstyle', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_fillstyle(...)' code ##################

        # Getting the type of 'self' (line 224)
        self_74388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 15), 'self')
        # Obtaining the member '_fillstyle' of a type (line 224)
        _fillstyle_74389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 224, 15), self_74388, '_fillstyle')
        # Assigning a type to the variable 'stypy_return_type' (line 224)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 224, 8), 'stypy_return_type', _fillstyle_74389)
        
        # ################# End of 'get_fillstyle(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_fillstyle' in the type store
        # Getting the type of 'stypy_return_type' (line 223)
        stypy_return_type_74390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74390)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_fillstyle'
        return stypy_return_type_74390


    @norecursion
    def set_fillstyle(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'set_fillstyle'
        module_type_store = module_type_store.open_function_context('set_fillstyle', 226, 4, False)
        # Assigning a type to the variable 'self' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle.set_fillstyle.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle.set_fillstyle.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle.set_fillstyle.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle.set_fillstyle.__dict__.__setitem__('stypy_function_name', 'MarkerStyle.set_fillstyle')
        MarkerStyle.set_fillstyle.__dict__.__setitem__('stypy_param_names_list', ['fillstyle'])
        MarkerStyle.set_fillstyle.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle.set_fillstyle.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle.set_fillstyle.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle.set_fillstyle.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle.set_fillstyle.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle.set_fillstyle.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle.set_fillstyle', ['fillstyle'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'set_fillstyle', localization, ['fillstyle'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'set_fillstyle(...)' code ##################

        unicode_74391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 233, (-1)), 'unicode', u'\n        Sets fillstyle\n\n        Parameters\n        ----------\n        fillstyle : string amongst known fillstyles\n        ')
        
        # Type idiom detected: calculating its left and rigth part (line 234)
        # Getting the type of 'fillstyle' (line 234)
        fillstyle_74392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 11), 'fillstyle')
        # Getting the type of 'None' (line 234)
        None_74393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 24), 'None')
        
        (may_be_74394, more_types_in_union_74395) = may_be_none(fillstyle_74392, None_74393)

        if may_be_74394:

            if more_types_in_union_74395:
                # Runtime conditional SSA (line 234)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Subscript to a Name (line 235):
            
            # Assigning a Subscript to a Name (line 235):
            
            # Obtaining the type of the subscript
            unicode_74396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 33), 'unicode', u'markers.fillstyle')
            # Getting the type of 'rcParams' (line 235)
            rcParams_74397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 24), 'rcParams')
            # Obtaining the member '__getitem__' of a type (line 235)
            getitem___74398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 235, 24), rcParams_74397, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 235)
            subscript_call_result_74399 = invoke(stypy.reporting.localization.Localization(__file__, 235, 24), getitem___74398, unicode_74396)
            
            # Assigning a type to the variable 'fillstyle' (line 235)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 235, 12), 'fillstyle', subscript_call_result_74399)

            if more_types_in_union_74395:
                # SSA join for if statement (line 234)
                module_type_store = module_type_store.join_ssa_context()


        
        
        
        # Getting the type of 'fillstyle' (line 236)
        fillstyle_74400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 11), 'fillstyle')
        # Getting the type of 'self' (line 236)
        self_74401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 28), 'self')
        # Obtaining the member 'fillstyles' of a type (line 236)
        fillstyles_74402 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 28), self_74401, 'fillstyles')
        # Applying the binary operator 'notin' (line 236)
        result_contains_74403 = python_operator(stypy.reporting.localization.Localization(__file__, 236, 11), 'notin', fillstyle_74400, fillstyles_74402)
        
        # Testing the type of an if condition (line 236)
        if_condition_74404 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 236, 8), result_contains_74403)
        # Assigning a type to the variable 'if_condition_74404' (line 236)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 236, 8), 'if_condition_74404', if_condition_74404)
        # SSA begins for if statement (line 236)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 237)
        # Processing the call arguments (line 237)
        unicode_74406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 237, 29), 'unicode', u'Unrecognized fillstyle %s')
        
        # Call to join(...): (line 238)
        # Processing the call arguments (line 238)
        # Getting the type of 'self' (line 238)
        self_74409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 40), 'self', False)
        # Obtaining the member 'fillstyles' of a type (line 238)
        fillstyles_74410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 238, 40), self_74409, 'fillstyles')
        # Processing the call keyword arguments (line 238)
        kwargs_74411 = {}
        unicode_74407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 238, 31), 'unicode', u' ')
        # Obtaining the member 'join' of a type (line 238)
        join_74408 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 238, 31), unicode_74407, 'join')
        # Calling join(args, kwargs) (line 238)
        join_call_result_74412 = invoke(stypy.reporting.localization.Localization(__file__, 238, 31), join_74408, *[fillstyles_74410], **kwargs_74411)
        
        # Applying the binary operator '%' (line 237)
        result_mod_74413 = python_operator(stypy.reporting.localization.Localization(__file__, 237, 29), '%', unicode_74406, join_call_result_74412)
        
        # Processing the call keyword arguments (line 237)
        kwargs_74414 = {}
        # Getting the type of 'ValueError' (line 237)
        ValueError_74405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 237)
        ValueError_call_result_74415 = invoke(stypy.reporting.localization.Localization(__file__, 237, 18), ValueError_74405, *[result_mod_74413], **kwargs_74414)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 237, 12), ValueError_call_result_74415, 'raise parameter', BaseException)
        # SSA join for if statement (line 236)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 239):
        
        # Assigning a Name to a Attribute (line 239):
        # Getting the type of 'fillstyle' (line 239)
        fillstyle_74416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 26), 'fillstyle')
        # Getting the type of 'self' (line 239)
        self_74417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 8), 'self')
        # Setting the type of the member '_fillstyle' of a type (line 239)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 239, 8), self_74417, '_fillstyle', fillstyle_74416)
        
        # Call to _recache(...): (line 240)
        # Processing the call keyword arguments (line 240)
        kwargs_74420 = {}
        # Getting the type of 'self' (line 240)
        self_74418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 8), 'self', False)
        # Obtaining the member '_recache' of a type (line 240)
        _recache_74419 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 240, 8), self_74418, '_recache')
        # Calling _recache(args, kwargs) (line 240)
        _recache_call_result_74421 = invoke(stypy.reporting.localization.Localization(__file__, 240, 8), _recache_74419, *[], **kwargs_74420)
        
        
        # ################# End of 'set_fillstyle(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'set_fillstyle' in the type store
        # Getting the type of 'stypy_return_type' (line 226)
        stypy_return_type_74422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74422)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'set_fillstyle'
        return stypy_return_type_74422


    @norecursion
    def get_joinstyle(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_joinstyle'
        module_type_store = module_type_store.open_function_context('get_joinstyle', 242, 4, False)
        # Assigning a type to the variable 'self' (line 243)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 243, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle.get_joinstyle.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle.get_joinstyle.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle.get_joinstyle.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle.get_joinstyle.__dict__.__setitem__('stypy_function_name', 'MarkerStyle.get_joinstyle')
        MarkerStyle.get_joinstyle.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle.get_joinstyle.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle.get_joinstyle.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle.get_joinstyle.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle.get_joinstyle.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle.get_joinstyle.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle.get_joinstyle.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle.get_joinstyle', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_joinstyle', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_joinstyle(...)' code ##################

        # Getting the type of 'self' (line 243)
        self_74423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 15), 'self')
        # Obtaining the member '_joinstyle' of a type (line 243)
        _joinstyle_74424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 243, 15), self_74423, '_joinstyle')
        # Assigning a type to the variable 'stypy_return_type' (line 243)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 243, 8), 'stypy_return_type', _joinstyle_74424)
        
        # ################# End of 'get_joinstyle(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_joinstyle' in the type store
        # Getting the type of 'stypy_return_type' (line 242)
        stypy_return_type_74425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74425)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_joinstyle'
        return stypy_return_type_74425


    @norecursion
    def get_capstyle(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_capstyle'
        module_type_store = module_type_store.open_function_context('get_capstyle', 245, 4, False)
        # Assigning a type to the variable 'self' (line 246)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 246, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle.get_capstyle.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle.get_capstyle.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle.get_capstyle.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle.get_capstyle.__dict__.__setitem__('stypy_function_name', 'MarkerStyle.get_capstyle')
        MarkerStyle.get_capstyle.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle.get_capstyle.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle.get_capstyle.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle.get_capstyle.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle.get_capstyle.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle.get_capstyle.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle.get_capstyle.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle.get_capstyle', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_capstyle', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_capstyle(...)' code ##################

        # Getting the type of 'self' (line 246)
        self_74426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 15), 'self')
        # Obtaining the member '_capstyle' of a type (line 246)
        _capstyle_74427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 246, 15), self_74426, '_capstyle')
        # Assigning a type to the variable 'stypy_return_type' (line 246)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 246, 8), 'stypy_return_type', _capstyle_74427)
        
        # ################# End of 'get_capstyle(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_capstyle' in the type store
        # Getting the type of 'stypy_return_type' (line 245)
        stypy_return_type_74428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74428)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_capstyle'
        return stypy_return_type_74428


    @norecursion
    def get_marker(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_marker'
        module_type_store = module_type_store.open_function_context('get_marker', 248, 4, False)
        # Assigning a type to the variable 'self' (line 249)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 249, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle.get_marker.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle.get_marker.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle.get_marker.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle.get_marker.__dict__.__setitem__('stypy_function_name', 'MarkerStyle.get_marker')
        MarkerStyle.get_marker.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle.get_marker.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle.get_marker.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle.get_marker.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle.get_marker.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle.get_marker.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle.get_marker.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle.get_marker', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_marker', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_marker(...)' code ##################

        # Getting the type of 'self' (line 249)
        self_74429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 15), 'self')
        # Obtaining the member '_marker' of a type (line 249)
        _marker_74430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 249, 15), self_74429, '_marker')
        # Assigning a type to the variable 'stypy_return_type' (line 249)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 249, 8), 'stypy_return_type', _marker_74430)
        
        # ################# End of 'get_marker(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_marker' in the type store
        # Getting the type of 'stypy_return_type' (line 248)
        stypy_return_type_74431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74431)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_marker'
        return stypy_return_type_74431


    @norecursion
    def set_marker(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'set_marker'
        module_type_store = module_type_store.open_function_context('set_marker', 251, 4, False)
        # Assigning a type to the variable 'self' (line 252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle.set_marker.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle.set_marker.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle.set_marker.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle.set_marker.__dict__.__setitem__('stypy_function_name', 'MarkerStyle.set_marker')
        MarkerStyle.set_marker.__dict__.__setitem__('stypy_param_names_list', ['marker'])
        MarkerStyle.set_marker.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle.set_marker.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle.set_marker.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle.set_marker.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle.set_marker.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle.set_marker.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle.set_marker', ['marker'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'set_marker', localization, ['marker'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'set_marker(...)' code ##################

        
        
        # Evaluating a boolean operation
        
        # Call to isinstance(...): (line 252)
        # Processing the call arguments (line 252)
        # Getting the type of 'marker' (line 252)
        marker_74433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 23), 'marker', False)
        # Getting the type of 'np' (line 252)
        np_74434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 31), 'np', False)
        # Obtaining the member 'ndarray' of a type (line 252)
        ndarray_74435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 252, 31), np_74434, 'ndarray')
        # Processing the call keyword arguments (line 252)
        kwargs_74436 = {}
        # Getting the type of 'isinstance' (line 252)
        isinstance_74432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 12), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 252)
        isinstance_call_result_74437 = invoke(stypy.reporting.localization.Localization(__file__, 252, 12), isinstance_74432, *[marker_74433, ndarray_74435], **kwargs_74436)
        
        
        # Getting the type of 'marker' (line 252)
        marker_74438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 47), 'marker')
        # Obtaining the member 'ndim' of a type (line 252)
        ndim_74439 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 252, 47), marker_74438, 'ndim')
        int_74440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 62), 'int')
        # Applying the binary operator '==' (line 252)
        result_eq_74441 = python_operator(stypy.reporting.localization.Localization(__file__, 252, 47), '==', ndim_74439, int_74440)
        
        # Applying the binary operator 'and' (line 252)
        result_and_keyword_74442 = python_operator(stypy.reporting.localization.Localization(__file__, 252, 12), 'and', isinstance_call_result_74437, result_eq_74441)
        
        
        # Obtaining the type of the subscript
        int_74443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 253, 29), 'int')
        # Getting the type of 'marker' (line 253)
        marker_74444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 16), 'marker')
        # Obtaining the member 'shape' of a type (line 253)
        shape_74445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 253, 16), marker_74444, 'shape')
        # Obtaining the member '__getitem__' of a type (line 253)
        getitem___74446 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 253, 16), shape_74445, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 253)
        subscript_call_result_74447 = invoke(stypy.reporting.localization.Localization(__file__, 253, 16), getitem___74446, int_74443)
        
        int_74448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 253, 35), 'int')
        # Applying the binary operator '==' (line 253)
        result_eq_74449 = python_operator(stypy.reporting.localization.Localization(__file__, 253, 16), '==', subscript_call_result_74447, int_74448)
        
        # Applying the binary operator 'and' (line 252)
        result_and_keyword_74450 = python_operator(stypy.reporting.localization.Localization(__file__, 252, 12), 'and', result_and_keyword_74442, result_eq_74449)
        
        # Testing the type of an if condition (line 252)
        if_condition_74451 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 252, 8), result_and_keyword_74450)
        # Assigning a type to the variable 'if_condition_74451' (line 252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 8), 'if_condition_74451', if_condition_74451)
        # SSA begins for if statement (line 252)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Attribute (line 254):
        
        # Assigning a Attribute to a Attribute (line 254):
        # Getting the type of 'self' (line 254)
        self_74452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 36), 'self')
        # Obtaining the member '_set_vertices' of a type (line 254)
        _set_vertices_74453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 254, 36), self_74452, '_set_vertices')
        # Getting the type of 'self' (line 254)
        self_74454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 12), 'self')
        # Setting the type of the member '_marker_function' of a type (line 254)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 254, 12), self_74454, '_marker_function', _set_vertices_74453)
        # SSA branch for the else part of an if statement (line 252)
        module_type_store.open_ssa_branch('else')
        
        
        # Evaluating a boolean operation
        
        # Call to isinstance(...): (line 255)
        # Processing the call arguments (line 255)
        # Getting the type of 'marker' (line 255)
        marker_74456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 25), 'marker', False)
        # Getting the type of 'Sized' (line 255)
        Sized_74457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 33), 'Sized', False)
        # Processing the call keyword arguments (line 255)
        kwargs_74458 = {}
        # Getting the type of 'isinstance' (line 255)
        isinstance_74455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 14), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 255)
        isinstance_call_result_74459 = invoke(stypy.reporting.localization.Localization(__file__, 255, 14), isinstance_74455, *[marker_74456, Sized_74457], **kwargs_74458)
        
        
        
        # Call to len(...): (line 255)
        # Processing the call arguments (line 255)
        # Getting the type of 'marker' (line 255)
        marker_74461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 48), 'marker', False)
        # Processing the call keyword arguments (line 255)
        kwargs_74462 = {}
        # Getting the type of 'len' (line 255)
        len_74460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 44), 'len', False)
        # Calling len(args, kwargs) (line 255)
        len_call_result_74463 = invoke(stypy.reporting.localization.Localization(__file__, 255, 44), len_74460, *[marker_74461], **kwargs_74462)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 255)
        tuple_74464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 60), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 255)
        # Adding element type (line 255)
        int_74465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 60), tuple_74464, int_74465)
        # Adding element type (line 255)
        int_74466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 60), tuple_74464, int_74466)
        
        # Applying the binary operator 'in' (line 255)
        result_contains_74467 = python_operator(stypy.reporting.localization.Localization(__file__, 255, 44), 'in', len_call_result_74463, tuple_74464)
        
        # Applying the binary operator 'and' (line 255)
        result_and_keyword_74468 = python_operator(stypy.reporting.localization.Localization(__file__, 255, 14), 'and', isinstance_call_result_74459, result_contains_74467)
        
        
        # Obtaining the type of the subscript
        int_74469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 23), 'int')
        # Getting the type of 'marker' (line 256)
        marker_74470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 16), 'marker')
        # Obtaining the member '__getitem__' of a type (line 256)
        getitem___74471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 16), marker_74470, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 256)
        subscript_call_result_74472 = invoke(stypy.reporting.localization.Localization(__file__, 256, 16), getitem___74471, int_74469)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 256)
        tuple_74473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 30), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 256)
        # Adding element type (line 256)
        int_74474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 256, 30), tuple_74473, int_74474)
        # Adding element type (line 256)
        int_74475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 256, 30), tuple_74473, int_74475)
        # Adding element type (line 256)
        int_74476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 256, 30), tuple_74473, int_74476)
        # Adding element type (line 256)
        int_74477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 256, 30), tuple_74473, int_74477)
        
        # Applying the binary operator 'in' (line 256)
        result_contains_74478 = python_operator(stypy.reporting.localization.Localization(__file__, 256, 16), 'in', subscript_call_result_74472, tuple_74473)
        
        # Applying the binary operator 'and' (line 255)
        result_and_keyword_74479 = python_operator(stypy.reporting.localization.Localization(__file__, 255, 14), 'and', result_and_keyword_74468, result_contains_74478)
        
        # Testing the type of an if condition (line 255)
        if_condition_74480 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 255, 13), result_and_keyword_74479)
        # Assigning a type to the variable 'if_condition_74480' (line 255)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 255, 13), 'if_condition_74480', if_condition_74480)
        # SSA begins for if statement (line 255)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Attribute (line 257):
        
        # Assigning a Attribute to a Attribute (line 257):
        # Getting the type of 'self' (line 257)
        self_74481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 36), 'self')
        # Obtaining the member '_set_tuple_marker' of a type (line 257)
        _set_tuple_marker_74482 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 257, 36), self_74481, '_set_tuple_marker')
        # Getting the type of 'self' (line 257)
        self_74483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 12), 'self')
        # Setting the type of the member '_marker_function' of a type (line 257)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 257, 12), self_74483, '_marker_function', _set_tuple_marker_74482)
        # SSA branch for the else part of an if statement (line 255)
        module_type_store.open_ssa_branch('else')
        
        
        # Evaluating a boolean operation
        
        
        # Call to isinstance(...): (line 258)
        # Processing the call arguments (line 258)
        # Getting the type of 'marker' (line 258)
        marker_74485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 29), 'marker', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 258)
        tuple_74486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 258)
        # Adding element type (line 258)
        # Getting the type of 'np' (line 258)
        np_74487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 38), 'np', False)
        # Obtaining the member 'ndarray' of a type (line 258)
        ndarray_74488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 38), np_74487, 'ndarray')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 258, 38), tuple_74486, ndarray_74488)
        # Adding element type (line 258)
        # Getting the type of 'list' (line 258)
        list_74489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 50), 'list', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 258, 38), tuple_74486, list_74489)
        
        # Processing the call keyword arguments (line 258)
        kwargs_74490 = {}
        # Getting the type of 'isinstance' (line 258)
        isinstance_74484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 18), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 258)
        isinstance_call_result_74491 = invoke(stypy.reporting.localization.Localization(__file__, 258, 18), isinstance_74484, *[marker_74485, tuple_74486], **kwargs_74490)
        
        # Applying the 'not' unary operator (line 258)
        result_not__74492 = python_operator(stypy.reporting.localization.Localization(__file__, 258, 14), 'not', isinstance_call_result_74491)
        
        
        # Getting the type of 'marker' (line 259)
        marker_74493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 14), 'marker')
        # Getting the type of 'self' (line 259)
        self_74494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 24), 'self')
        # Obtaining the member 'markers' of a type (line 259)
        markers_74495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 24), self_74494, 'markers')
        # Applying the binary operator 'in' (line 259)
        result_contains_74496 = python_operator(stypy.reporting.localization.Localization(__file__, 259, 14), 'in', marker_74493, markers_74495)
        
        # Applying the binary operator 'and' (line 258)
        result_and_keyword_74497 = python_operator(stypy.reporting.localization.Localization(__file__, 258, 14), 'and', result_not__74492, result_contains_74496)
        
        # Testing the type of an if condition (line 258)
        if_condition_74498 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 258, 13), result_and_keyword_74497)
        # Assigning a type to the variable 'if_condition_74498' (line 258)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 258, 13), 'if_condition_74498', if_condition_74498)
        # SSA begins for if statement (line 258)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 260):
        
        # Assigning a Call to a Attribute (line 260):
        
        # Call to getattr(...): (line 260)
        # Processing the call arguments (line 260)
        # Getting the type of 'self' (line 261)
        self_74500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 16), 'self', False)
        unicode_74501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 22), 'unicode', u'_set_')
        
        # Obtaining the type of the subscript
        # Getting the type of 'marker' (line 261)
        marker_74502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 45), 'marker', False)
        # Getting the type of 'self' (line 261)
        self_74503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 32), 'self', False)
        # Obtaining the member 'markers' of a type (line 261)
        markers_74504 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 261, 32), self_74503, 'markers')
        # Obtaining the member '__getitem__' of a type (line 261)
        getitem___74505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 261, 32), markers_74504, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 261)
        subscript_call_result_74506 = invoke(stypy.reporting.localization.Localization(__file__, 261, 32), getitem___74505, marker_74502)
        
        # Applying the binary operator '+' (line 261)
        result_add_74507 = python_operator(stypy.reporting.localization.Localization(__file__, 261, 22), '+', unicode_74501, subscript_call_result_74506)
        
        # Processing the call keyword arguments (line 260)
        kwargs_74508 = {}
        # Getting the type of 'getattr' (line 260)
        getattr_74499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 36), 'getattr', False)
        # Calling getattr(args, kwargs) (line 260)
        getattr_call_result_74509 = invoke(stypy.reporting.localization.Localization(__file__, 260, 36), getattr_74499, *[self_74500, result_add_74507], **kwargs_74508)
        
        # Getting the type of 'self' (line 260)
        self_74510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 12), 'self')
        # Setting the type of the member '_marker_function' of a type (line 260)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 260, 12), self_74510, '_marker_function', getattr_call_result_74509)
        # SSA branch for the else part of an if statement (line 258)
        module_type_store.open_ssa_branch('else')
        
        
        # Evaluating a boolean operation
        
        # Call to isinstance(...): (line 262)
        # Processing the call arguments (line 262)
        # Getting the type of 'marker' (line 262)
        marker_74512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 24), 'marker', False)
        # Getting the type of 'six' (line 262)
        six_74513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 32), 'six', False)
        # Obtaining the member 'string_types' of a type (line 262)
        string_types_74514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 262, 32), six_74513, 'string_types')
        # Processing the call keyword arguments (line 262)
        kwargs_74515 = {}
        # Getting the type of 'isinstance' (line 262)
        isinstance_74511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 13), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 262)
        isinstance_call_result_74516 = invoke(stypy.reporting.localization.Localization(__file__, 262, 13), isinstance_74511, *[marker_74512, string_types_74514], **kwargs_74515)
        
        
        # Call to is_math_text(...): (line 262)
        # Processing the call arguments (line 262)
        # Getting the type of 'marker' (line 262)
        marker_74518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 67), 'marker', False)
        # Processing the call keyword arguments (line 262)
        kwargs_74519 = {}
        # Getting the type of 'is_math_text' (line 262)
        is_math_text_74517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 54), 'is_math_text', False)
        # Calling is_math_text(args, kwargs) (line 262)
        is_math_text_call_result_74520 = invoke(stypy.reporting.localization.Localization(__file__, 262, 54), is_math_text_74517, *[marker_74518], **kwargs_74519)
        
        # Applying the binary operator 'and' (line 262)
        result_and_keyword_74521 = python_operator(stypy.reporting.localization.Localization(__file__, 262, 13), 'and', isinstance_call_result_74516, is_math_text_call_result_74520)
        
        # Testing the type of an if condition (line 262)
        if_condition_74522 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 262, 13), result_and_keyword_74521)
        # Assigning a type to the variable 'if_condition_74522' (line 262)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 262, 13), 'if_condition_74522', if_condition_74522)
        # SSA begins for if statement (line 262)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Attribute (line 263):
        
        # Assigning a Attribute to a Attribute (line 263):
        # Getting the type of 'self' (line 263)
        self_74523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 36), 'self')
        # Obtaining the member '_set_mathtext_path' of a type (line 263)
        _set_mathtext_path_74524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 36), self_74523, '_set_mathtext_path')
        # Getting the type of 'self' (line 263)
        self_74525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 12), 'self')
        # Setting the type of the member '_marker_function' of a type (line 263)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 12), self_74525, '_marker_function', _set_mathtext_path_74524)
        # SSA branch for the else part of an if statement (line 262)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to isinstance(...): (line 264)
        # Processing the call arguments (line 264)
        # Getting the type of 'marker' (line 264)
        marker_74527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 24), 'marker', False)
        # Getting the type of 'Path' (line 264)
        Path_74528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 32), 'Path', False)
        # Processing the call keyword arguments (line 264)
        kwargs_74529 = {}
        # Getting the type of 'isinstance' (line 264)
        isinstance_74526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 13), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 264)
        isinstance_call_result_74530 = invoke(stypy.reporting.localization.Localization(__file__, 264, 13), isinstance_74526, *[marker_74527, Path_74528], **kwargs_74529)
        
        # Testing the type of an if condition (line 264)
        if_condition_74531 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 264, 13), isinstance_call_result_74530)
        # Assigning a type to the variable 'if_condition_74531' (line 264)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 264, 13), 'if_condition_74531', if_condition_74531)
        # SSA begins for if statement (line 264)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Attribute (line 265):
        
        # Assigning a Attribute to a Attribute (line 265):
        # Getting the type of 'self' (line 265)
        self_74532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 36), 'self')
        # Obtaining the member '_set_path_marker' of a type (line 265)
        _set_path_marker_74533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 36), self_74532, '_set_path_marker')
        # Getting the type of 'self' (line 265)
        self_74534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 12), 'self')
        # Setting the type of the member '_marker_function' of a type (line 265)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 12), self_74534, '_marker_function', _set_path_marker_74533)
        # SSA branch for the else part of an if statement (line 264)
        module_type_store.open_ssa_branch('else')
        
        
        # SSA begins for try-except statement (line 267)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to Path(...): (line 268)
        # Processing the call arguments (line 268)
        # Getting the type of 'marker' (line 268)
        marker_74536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 21), 'marker', False)
        # Processing the call keyword arguments (line 268)
        kwargs_74537 = {}
        # Getting the type of 'Path' (line 268)
        Path_74535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 16), 'Path', False)
        # Calling Path(args, kwargs) (line 268)
        Path_call_result_74538 = invoke(stypy.reporting.localization.Localization(__file__, 268, 16), Path_74535, *[marker_74536], **kwargs_74537)
        
        
        # Assigning a Attribute to a Attribute (line 269):
        
        # Assigning a Attribute to a Attribute (line 269):
        # Getting the type of 'self' (line 269)
        self_74539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 40), 'self')
        # Obtaining the member '_set_vertices' of a type (line 269)
        _set_vertices_74540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 40), self_74539, '_set_vertices')
        # Getting the type of 'self' (line 269)
        self_74541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 16), 'self')
        # Setting the type of the member '_marker_function' of a type (line 269)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 16), self_74541, '_marker_function', _set_vertices_74540)
        # SSA branch for the except part of a try statement (line 267)
        # SSA branch for the except 'ValueError' branch of a try statement (line 267)
        module_type_store.open_ssa_branch('except')
        
        # Call to ValueError(...): (line 271)
        # Processing the call arguments (line 271)
        
        # Call to format(...): (line 271)
        # Processing the call arguments (line 271)
        # Getting the type of 'marker' (line 272)
        marker_74545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 47), 'marker', False)
        # Processing the call keyword arguments (line 271)
        kwargs_74546 = {}
        unicode_74543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 33), 'unicode', u'Unrecognized marker style {0}')
        # Obtaining the member 'format' of a type (line 271)
        format_74544 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 33), unicode_74543, 'format')
        # Calling format(args, kwargs) (line 271)
        format_call_result_74547 = invoke(stypy.reporting.localization.Localization(__file__, 271, 33), format_74544, *[marker_74545], **kwargs_74546)
        
        # Processing the call keyword arguments (line 271)
        kwargs_74548 = {}
        # Getting the type of 'ValueError' (line 271)
        ValueError_74542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 22), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 271)
        ValueError_call_result_74549 = invoke(stypy.reporting.localization.Localization(__file__, 271, 22), ValueError_74542, *[format_call_result_74547], **kwargs_74548)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 271, 16), ValueError_call_result_74549, 'raise parameter', BaseException)
        # SSA join for try-except statement (line 267)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 264)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 262)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 258)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 255)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 252)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 274):
        
        # Assigning a Name to a Attribute (line 274):
        # Getting the type of 'marker' (line 274)
        marker_74550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 23), 'marker')
        # Getting the type of 'self' (line 274)
        self_74551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 8), 'self')
        # Setting the type of the member '_marker' of a type (line 274)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 274, 8), self_74551, '_marker', marker_74550)
        
        # Call to _recache(...): (line 275)
        # Processing the call keyword arguments (line 275)
        kwargs_74554 = {}
        # Getting the type of 'self' (line 275)
        self_74552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 8), 'self', False)
        # Obtaining the member '_recache' of a type (line 275)
        _recache_74553 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 8), self_74552, '_recache')
        # Calling _recache(args, kwargs) (line 275)
        _recache_call_result_74555 = invoke(stypy.reporting.localization.Localization(__file__, 275, 8), _recache_74553, *[], **kwargs_74554)
        
        
        # ################# End of 'set_marker(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'set_marker' in the type store
        # Getting the type of 'stypy_return_type' (line 251)
        stypy_return_type_74556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74556)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'set_marker'
        return stypy_return_type_74556


    @norecursion
    def get_path(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_path'
        module_type_store = module_type_store.open_function_context('get_path', 277, 4, False)
        # Assigning a type to the variable 'self' (line 278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle.get_path.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle.get_path.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle.get_path.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle.get_path.__dict__.__setitem__('stypy_function_name', 'MarkerStyle.get_path')
        MarkerStyle.get_path.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle.get_path.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle.get_path.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle.get_path.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle.get_path.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle.get_path.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle.get_path.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle.get_path', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_path', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_path(...)' code ##################

        # Getting the type of 'self' (line 278)
        self_74557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 15), 'self')
        # Obtaining the member '_path' of a type (line 278)
        _path_74558 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 278, 15), self_74557, '_path')
        # Assigning a type to the variable 'stypy_return_type' (line 278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 8), 'stypy_return_type', _path_74558)
        
        # ################# End of 'get_path(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_path' in the type store
        # Getting the type of 'stypy_return_type' (line 277)
        stypy_return_type_74559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74559)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_path'
        return stypy_return_type_74559


    @norecursion
    def get_transform(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_transform'
        module_type_store = module_type_store.open_function_context('get_transform', 280, 4, False)
        # Assigning a type to the variable 'self' (line 281)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 281, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle.get_transform.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle.get_transform.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle.get_transform.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle.get_transform.__dict__.__setitem__('stypy_function_name', 'MarkerStyle.get_transform')
        MarkerStyle.get_transform.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle.get_transform.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle.get_transform.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle.get_transform.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle.get_transform.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle.get_transform.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle.get_transform.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle.get_transform', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_transform', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_transform(...)' code ##################

        
        # Call to frozen(...): (line 281)
        # Processing the call keyword arguments (line 281)
        kwargs_74563 = {}
        # Getting the type of 'self' (line 281)
        self_74560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 15), 'self', False)
        # Obtaining the member '_transform' of a type (line 281)
        _transform_74561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 15), self_74560, '_transform')
        # Obtaining the member 'frozen' of a type (line 281)
        frozen_74562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 15), _transform_74561, 'frozen')
        # Calling frozen(args, kwargs) (line 281)
        frozen_call_result_74564 = invoke(stypy.reporting.localization.Localization(__file__, 281, 15), frozen_74562, *[], **kwargs_74563)
        
        # Assigning a type to the variable 'stypy_return_type' (line 281)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 281, 8), 'stypy_return_type', frozen_call_result_74564)
        
        # ################# End of 'get_transform(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_transform' in the type store
        # Getting the type of 'stypy_return_type' (line 280)
        stypy_return_type_74565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74565)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_transform'
        return stypy_return_type_74565


    @norecursion
    def get_alt_path(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_alt_path'
        module_type_store = module_type_store.open_function_context('get_alt_path', 283, 4, False)
        # Assigning a type to the variable 'self' (line 284)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle.get_alt_path.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle.get_alt_path.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle.get_alt_path.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle.get_alt_path.__dict__.__setitem__('stypy_function_name', 'MarkerStyle.get_alt_path')
        MarkerStyle.get_alt_path.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle.get_alt_path.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle.get_alt_path.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle.get_alt_path.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle.get_alt_path.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle.get_alt_path.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle.get_alt_path.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle.get_alt_path', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_alt_path', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_alt_path(...)' code ##################

        # Getting the type of 'self' (line 284)
        self_74566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 15), 'self')
        # Obtaining the member '_alt_path' of a type (line 284)
        _alt_path_74567 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 15), self_74566, '_alt_path')
        # Assigning a type to the variable 'stypy_return_type' (line 284)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 8), 'stypy_return_type', _alt_path_74567)
        
        # ################# End of 'get_alt_path(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_alt_path' in the type store
        # Getting the type of 'stypy_return_type' (line 283)
        stypy_return_type_74568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 283, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74568)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_alt_path'
        return stypy_return_type_74568


    @norecursion
    def get_alt_transform(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_alt_transform'
        module_type_store = module_type_store.open_function_context('get_alt_transform', 286, 4, False)
        # Assigning a type to the variable 'self' (line 287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 287, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle.get_alt_transform.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle.get_alt_transform.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle.get_alt_transform.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle.get_alt_transform.__dict__.__setitem__('stypy_function_name', 'MarkerStyle.get_alt_transform')
        MarkerStyle.get_alt_transform.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle.get_alt_transform.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle.get_alt_transform.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle.get_alt_transform.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle.get_alt_transform.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle.get_alt_transform.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle.get_alt_transform.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle.get_alt_transform', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_alt_transform', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_alt_transform(...)' code ##################

        
        # Call to frozen(...): (line 287)
        # Processing the call keyword arguments (line 287)
        kwargs_74572 = {}
        # Getting the type of 'self' (line 287)
        self_74569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 15), 'self', False)
        # Obtaining the member '_alt_transform' of a type (line 287)
        _alt_transform_74570 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 15), self_74569, '_alt_transform')
        # Obtaining the member 'frozen' of a type (line 287)
        frozen_74571 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 15), _alt_transform_74570, 'frozen')
        # Calling frozen(args, kwargs) (line 287)
        frozen_call_result_74573 = invoke(stypy.reporting.localization.Localization(__file__, 287, 15), frozen_74571, *[], **kwargs_74572)
        
        # Assigning a type to the variable 'stypy_return_type' (line 287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 287, 8), 'stypy_return_type', frozen_call_result_74573)
        
        # ################# End of 'get_alt_transform(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_alt_transform' in the type store
        # Getting the type of 'stypy_return_type' (line 286)
        stypy_return_type_74574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74574)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_alt_transform'
        return stypy_return_type_74574


    @norecursion
    def get_snap_threshold(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_snap_threshold'
        module_type_store = module_type_store.open_function_context('get_snap_threshold', 289, 4, False)
        # Assigning a type to the variable 'self' (line 290)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 290, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle.get_snap_threshold.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle.get_snap_threshold.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle.get_snap_threshold.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle.get_snap_threshold.__dict__.__setitem__('stypy_function_name', 'MarkerStyle.get_snap_threshold')
        MarkerStyle.get_snap_threshold.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle.get_snap_threshold.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle.get_snap_threshold.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle.get_snap_threshold.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle.get_snap_threshold.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle.get_snap_threshold.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle.get_snap_threshold.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle.get_snap_threshold', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_snap_threshold', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_snap_threshold(...)' code ##################

        # Getting the type of 'self' (line 290)
        self_74575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 15), 'self')
        # Obtaining the member '_snap_threshold' of a type (line 290)
        _snap_threshold_74576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 290, 15), self_74575, '_snap_threshold')
        # Assigning a type to the variable 'stypy_return_type' (line 290)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 290, 8), 'stypy_return_type', _snap_threshold_74576)
        
        # ################# End of 'get_snap_threshold(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_snap_threshold' in the type store
        # Getting the type of 'stypy_return_type' (line 289)
        stypy_return_type_74577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74577)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_snap_threshold'
        return stypy_return_type_74577


    @norecursion
    def _set_nothing(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_nothing'
        module_type_store = module_type_store.open_function_context('_set_nothing', 292, 4, False)
        # Assigning a type to the variable 'self' (line 293)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 293, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_nothing.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_nothing.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_nothing.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_nothing.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_nothing')
        MarkerStyle._set_nothing.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_nothing.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_nothing.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_nothing.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_nothing.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_nothing.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_nothing.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_nothing', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_nothing', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_nothing(...)' code ##################

        
        # Assigning a Name to a Attribute (line 293):
        
        # Assigning a Name to a Attribute (line 293):
        # Getting the type of 'False' (line 293)
        False_74578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 23), 'False')
        # Getting the type of 'self' (line 293)
        self_74579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 8), 'self')
        # Setting the type of the member '_filled' of a type (line 293)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 293, 8), self_74579, '_filled', False_74578)
        
        # ################# End of '_set_nothing(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_nothing' in the type store
        # Getting the type of 'stypy_return_type' (line 292)
        stypy_return_type_74580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74580)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_nothing'
        return stypy_return_type_74580


    @norecursion
    def _set_custom_marker(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_custom_marker'
        module_type_store = module_type_store.open_function_context('_set_custom_marker', 295, 4, False)
        # Assigning a type to the variable 'self' (line 296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_custom_marker.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_custom_marker.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_custom_marker.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_custom_marker.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_custom_marker')
        MarkerStyle._set_custom_marker.__dict__.__setitem__('stypy_param_names_list', ['path'])
        MarkerStyle._set_custom_marker.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_custom_marker.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_custom_marker.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_custom_marker.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_custom_marker.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_custom_marker.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_custom_marker', ['path'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_custom_marker', localization, ['path'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_custom_marker(...)' code ##################

        
        # Assigning a Attribute to a Name (line 296):
        
        # Assigning a Attribute to a Name (line 296):
        # Getting the type of 'path' (line 296)
        path_74581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 16), 'path')
        # Obtaining the member 'vertices' of a type (line 296)
        vertices_74582 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 296, 16), path_74581, 'vertices')
        # Assigning a type to the variable 'verts' (line 296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 8), 'verts', vertices_74582)
        
        # Assigning a Call to a Name (line 297):
        
        # Assigning a Call to a Name (line 297):
        
        # Call to max(...): (line 297)
        # Processing the call arguments (line 297)
        
        # Call to max(...): (line 297)
        # Processing the call arguments (line 297)
        
        # Call to abs(...): (line 297)
        # Processing the call arguments (line 297)
        
        # Obtaining the type of the subscript
        slice_74588 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 297, 36), None, None, None)
        int_74589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 297, 45), 'int')
        # Getting the type of 'verts' (line 297)
        verts_74590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 36), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 297)
        getitem___74591 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 297, 36), verts_74590, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 297)
        subscript_call_result_74592 = invoke(stypy.reporting.localization.Localization(__file__, 297, 36), getitem___74591, (slice_74588, int_74589))
        
        # Processing the call keyword arguments (line 297)
        kwargs_74593 = {}
        # Getting the type of 'np' (line 297)
        np_74586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 29), 'np', False)
        # Obtaining the member 'abs' of a type (line 297)
        abs_74587 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 297, 29), np_74586, 'abs')
        # Calling abs(args, kwargs) (line 297)
        abs_call_result_74594 = invoke(stypy.reporting.localization.Localization(__file__, 297, 29), abs_74587, *[subscript_call_result_74592], **kwargs_74593)
        
        # Processing the call keyword arguments (line 297)
        kwargs_74595 = {}
        # Getting the type of 'np' (line 297)
        np_74584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 22), 'np', False)
        # Obtaining the member 'max' of a type (line 297)
        max_74585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 297, 22), np_74584, 'max')
        # Calling max(args, kwargs) (line 297)
        max_call_result_74596 = invoke(stypy.reporting.localization.Localization(__file__, 297, 22), max_74585, *[abs_call_result_74594], **kwargs_74595)
        
        
        # Call to max(...): (line 298)
        # Processing the call arguments (line 298)
        
        # Call to abs(...): (line 298)
        # Processing the call arguments (line 298)
        
        # Obtaining the type of the subscript
        slice_74601 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 298, 36), None, None, None)
        int_74602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 298, 45), 'int')
        # Getting the type of 'verts' (line 298)
        verts_74603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 36), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 298)
        getitem___74604 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 298, 36), verts_74603, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 298)
        subscript_call_result_74605 = invoke(stypy.reporting.localization.Localization(__file__, 298, 36), getitem___74604, (slice_74601, int_74602))
        
        # Processing the call keyword arguments (line 298)
        kwargs_74606 = {}
        # Getting the type of 'np' (line 298)
        np_74599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 29), 'np', False)
        # Obtaining the member 'abs' of a type (line 298)
        abs_74600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 298, 29), np_74599, 'abs')
        # Calling abs(args, kwargs) (line 298)
        abs_call_result_74607 = invoke(stypy.reporting.localization.Localization(__file__, 298, 29), abs_74600, *[subscript_call_result_74605], **kwargs_74606)
        
        # Processing the call keyword arguments (line 298)
        kwargs_74608 = {}
        # Getting the type of 'np' (line 298)
        np_74597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 22), 'np', False)
        # Obtaining the member 'max' of a type (line 298)
        max_74598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 298, 22), np_74597, 'max')
        # Calling max(args, kwargs) (line 298)
        max_call_result_74609 = invoke(stypy.reporting.localization.Localization(__file__, 298, 22), max_74598, *[abs_call_result_74607], **kwargs_74608)
        
        # Processing the call keyword arguments (line 297)
        kwargs_74610 = {}
        # Getting the type of 'max' (line 297)
        max_74583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 18), 'max', False)
        # Calling max(args, kwargs) (line 297)
        max_call_result_74611 = invoke(stypy.reporting.localization.Localization(__file__, 297, 18), max_74583, *[max_call_result_74596, max_call_result_74609], **kwargs_74610)
        
        # Assigning a type to the variable 'rescale' (line 297)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 297, 8), 'rescale', max_call_result_74611)
        
        # Assigning a Call to a Attribute (line 299):
        
        # Assigning a Call to a Attribute (line 299):
        
        # Call to scale(...): (line 299)
        # Processing the call arguments (line 299)
        float_74616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 43), 'float')
        # Getting the type of 'rescale' (line 299)
        rescale_74617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 49), 'rescale', False)
        # Applying the binary operator 'div' (line 299)
        result_div_74618 = python_operator(stypy.reporting.localization.Localization(__file__, 299, 43), 'div', float_74616, rescale_74617)
        
        # Processing the call keyword arguments (line 299)
        kwargs_74619 = {}
        
        # Call to Affine2D(...): (line 299)
        # Processing the call keyword arguments (line 299)
        kwargs_74613 = {}
        # Getting the type of 'Affine2D' (line 299)
        Affine2D_74612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 299)
        Affine2D_call_result_74614 = invoke(stypy.reporting.localization.Localization(__file__, 299, 26), Affine2D_74612, *[], **kwargs_74613)
        
        # Obtaining the member 'scale' of a type (line 299)
        scale_74615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 299, 26), Affine2D_call_result_74614, 'scale')
        # Calling scale(args, kwargs) (line 299)
        scale_call_result_74620 = invoke(stypy.reporting.localization.Localization(__file__, 299, 26), scale_74615, *[result_div_74618], **kwargs_74619)
        
        # Getting the type of 'self' (line 299)
        self_74621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 299)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 299, 8), self_74621, '_transform', scale_call_result_74620)
        
        # Assigning a Name to a Attribute (line 300):
        
        # Assigning a Name to a Attribute (line 300):
        # Getting the type of 'path' (line 300)
        path_74622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 21), 'path')
        # Getting the type of 'self' (line 300)
        self_74623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 8), 'self')
        # Setting the type of the member '_path' of a type (line 300)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 300, 8), self_74623, '_path', path_74622)
        
        # ################# End of '_set_custom_marker(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_custom_marker' in the type store
        # Getting the type of 'stypy_return_type' (line 295)
        stypy_return_type_74624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74624)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_custom_marker'
        return stypy_return_type_74624


    @norecursion
    def _set_path_marker(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_path_marker'
        module_type_store = module_type_store.open_function_context('_set_path_marker', 302, 4, False)
        # Assigning a type to the variable 'self' (line 303)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 303, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_path_marker.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_path_marker.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_path_marker.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_path_marker.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_path_marker')
        MarkerStyle._set_path_marker.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_path_marker.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_path_marker.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_path_marker.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_path_marker.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_path_marker.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_path_marker.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_path_marker', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_path_marker', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_path_marker(...)' code ##################

        
        # Call to _set_custom_marker(...): (line 303)
        # Processing the call arguments (line 303)
        # Getting the type of 'self' (line 303)
        self_74627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 32), 'self', False)
        # Obtaining the member '_marker' of a type (line 303)
        _marker_74628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 32), self_74627, '_marker')
        # Processing the call keyword arguments (line 303)
        kwargs_74629 = {}
        # Getting the type of 'self' (line 303)
        self_74625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 8), 'self', False)
        # Obtaining the member '_set_custom_marker' of a type (line 303)
        _set_custom_marker_74626 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 8), self_74625, '_set_custom_marker')
        # Calling _set_custom_marker(args, kwargs) (line 303)
        _set_custom_marker_call_result_74630 = invoke(stypy.reporting.localization.Localization(__file__, 303, 8), _set_custom_marker_74626, *[_marker_74628], **kwargs_74629)
        
        
        # ################# End of '_set_path_marker(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_path_marker' in the type store
        # Getting the type of 'stypy_return_type' (line 302)
        stypy_return_type_74631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74631)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_path_marker'
        return stypy_return_type_74631


    @norecursion
    def _set_vertices(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_vertices'
        module_type_store = module_type_store.open_function_context('_set_vertices', 305, 4, False)
        # Assigning a type to the variable 'self' (line 306)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_vertices.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_vertices.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_vertices.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_vertices.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_vertices')
        MarkerStyle._set_vertices.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_vertices.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_vertices.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_vertices.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_vertices.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_vertices.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_vertices.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_vertices', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_vertices', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_vertices(...)' code ##################

        
        # Assigning a Attribute to a Name (line 306):
        
        # Assigning a Attribute to a Name (line 306):
        # Getting the type of 'self' (line 306)
        self_74632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 16), 'self')
        # Obtaining the member '_marker' of a type (line 306)
        _marker_74633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 16), self_74632, '_marker')
        # Assigning a type to the variable 'verts' (line 306)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 8), 'verts', _marker_74633)
        
        # Assigning a Call to a Name (line 307):
        
        # Assigning a Call to a Name (line 307):
        
        # Call to Path(...): (line 307)
        # Processing the call arguments (line 307)
        # Getting the type of 'verts' (line 307)
        verts_74635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 22), 'verts', False)
        # Processing the call keyword arguments (line 307)
        kwargs_74636 = {}
        # Getting the type of 'Path' (line 307)
        Path_74634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 17), 'Path', False)
        # Calling Path(args, kwargs) (line 307)
        Path_call_result_74637 = invoke(stypy.reporting.localization.Localization(__file__, 307, 17), Path_74634, *[verts_74635], **kwargs_74636)
        
        # Assigning a type to the variable 'marker' (line 307)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 307, 8), 'marker', Path_call_result_74637)
        
        # Call to _set_custom_marker(...): (line 308)
        # Processing the call arguments (line 308)
        # Getting the type of 'marker' (line 308)
        marker_74640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 32), 'marker', False)
        # Processing the call keyword arguments (line 308)
        kwargs_74641 = {}
        # Getting the type of 'self' (line 308)
        self_74638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'self', False)
        # Obtaining the member '_set_custom_marker' of a type (line 308)
        _set_custom_marker_74639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 308, 8), self_74638, '_set_custom_marker')
        # Calling _set_custom_marker(args, kwargs) (line 308)
        _set_custom_marker_call_result_74642 = invoke(stypy.reporting.localization.Localization(__file__, 308, 8), _set_custom_marker_74639, *[marker_74640], **kwargs_74641)
        
        
        # ################# End of '_set_vertices(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_vertices' in the type store
        # Getting the type of 'stypy_return_type' (line 305)
        stypy_return_type_74643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74643)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_vertices'
        return stypy_return_type_74643


    @norecursion
    def _set_tuple_marker(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_tuple_marker'
        module_type_store = module_type_store.open_function_context('_set_tuple_marker', 310, 4, False)
        # Assigning a type to the variable 'self' (line 311)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 311, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_tuple_marker.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_tuple_marker.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_tuple_marker.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_tuple_marker.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_tuple_marker')
        MarkerStyle._set_tuple_marker.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_tuple_marker.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_tuple_marker.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_tuple_marker.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_tuple_marker.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_tuple_marker.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_tuple_marker.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_tuple_marker', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_tuple_marker', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_tuple_marker(...)' code ##################

        
        # Assigning a Attribute to a Name (line 311):
        
        # Assigning a Attribute to a Name (line 311):
        # Getting the type of 'self' (line 311)
        self_74644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 17), 'self')
        # Obtaining the member '_marker' of a type (line 311)
        _marker_74645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 311, 17), self_74644, '_marker')
        # Assigning a type to the variable 'marker' (line 311)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 311, 8), 'marker', _marker_74645)
        
        
        # Call to is_numlike(...): (line 312)
        # Processing the call arguments (line 312)
        
        # Obtaining the type of the subscript
        int_74647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 312, 29), 'int')
        # Getting the type of 'marker' (line 312)
        marker_74648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 22), 'marker', False)
        # Obtaining the member '__getitem__' of a type (line 312)
        getitem___74649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 22), marker_74648, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 312)
        subscript_call_result_74650 = invoke(stypy.reporting.localization.Localization(__file__, 312, 22), getitem___74649, int_74647)
        
        # Processing the call keyword arguments (line 312)
        kwargs_74651 = {}
        # Getting the type of 'is_numlike' (line 312)
        is_numlike_74646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 11), 'is_numlike', False)
        # Calling is_numlike(args, kwargs) (line 312)
        is_numlike_call_result_74652 = invoke(stypy.reporting.localization.Localization(__file__, 312, 11), is_numlike_74646, *[subscript_call_result_74650], **kwargs_74651)
        
        # Testing the type of an if condition (line 312)
        if_condition_74653 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 312, 8), is_numlike_call_result_74652)
        # Assigning a type to the variable 'if_condition_74653' (line 312)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 312, 8), 'if_condition_74653', if_condition_74653)
        # SSA begins for if statement (line 312)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        
        # Call to len(...): (line 313)
        # Processing the call arguments (line 313)
        # Getting the type of 'marker' (line 313)
        marker_74655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 19), 'marker', False)
        # Processing the call keyword arguments (line 313)
        kwargs_74656 = {}
        # Getting the type of 'len' (line 313)
        len_74654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 15), 'len', False)
        # Calling len(args, kwargs) (line 313)
        len_call_result_74657 = invoke(stypy.reporting.localization.Localization(__file__, 313, 15), len_74654, *[marker_74655], **kwargs_74656)
        
        int_74658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 30), 'int')
        # Applying the binary operator '==' (line 313)
        result_eq_74659 = python_operator(stypy.reporting.localization.Localization(__file__, 313, 15), '==', len_call_result_74657, int_74658)
        
        # Testing the type of an if condition (line 313)
        if_condition_74660 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 313, 12), result_eq_74659)
        # Assigning a type to the variable 'if_condition_74660' (line 313)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 313, 12), 'if_condition_74660', if_condition_74660)
        # SSA begins for if statement (line 313)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 314):
        
        # Assigning a Subscript to a Name (line 314):
        
        # Obtaining the type of the subscript
        int_74661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 314, 44), 'int')
        # Getting the type of 'marker' (line 314)
        marker_74662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 37), 'marker')
        # Obtaining the member '__getitem__' of a type (line 314)
        getitem___74663 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 37), marker_74662, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 314)
        subscript_call_result_74664 = invoke(stypy.reporting.localization.Localization(__file__, 314, 37), getitem___74663, int_74661)
        
        # Assigning a type to the variable 'tuple_assignment_74160' (line 314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 314, 16), 'tuple_assignment_74160', subscript_call_result_74664)
        
        # Assigning a Num to a Name (line 314):
        float_74665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 314, 48), 'float')
        # Assigning a type to the variable 'tuple_assignment_74161' (line 314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 314, 16), 'tuple_assignment_74161', float_74665)
        
        # Assigning a Name to a Name (line 314):
        # Getting the type of 'tuple_assignment_74160' (line 314)
        tuple_assignment_74160_74666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 16), 'tuple_assignment_74160')
        # Assigning a type to the variable 'numsides' (line 314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 314, 16), 'numsides', tuple_assignment_74160_74666)
        
        # Assigning a Name to a Name (line 314):
        # Getting the type of 'tuple_assignment_74161' (line 314)
        tuple_assignment_74161_74667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 16), 'tuple_assignment_74161')
        # Assigning a type to the variable 'rotation' (line 314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 314, 26), 'rotation', tuple_assignment_74161_74667)
        # SSA branch for the else part of an if statement (line 313)
        module_type_store.open_ssa_branch('else')
        
        
        
        # Call to len(...): (line 315)
        # Processing the call arguments (line 315)
        # Getting the type of 'marker' (line 315)
        marker_74669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 21), 'marker', False)
        # Processing the call keyword arguments (line 315)
        kwargs_74670 = {}
        # Getting the type of 'len' (line 315)
        len_74668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 17), 'len', False)
        # Calling len(args, kwargs) (line 315)
        len_call_result_74671 = invoke(stypy.reporting.localization.Localization(__file__, 315, 17), len_74668, *[marker_74669], **kwargs_74670)
        
        int_74672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 32), 'int')
        # Applying the binary operator '==' (line 315)
        result_eq_74673 = python_operator(stypy.reporting.localization.Localization(__file__, 315, 17), '==', len_call_result_74671, int_74672)
        
        # Testing the type of an if condition (line 315)
        if_condition_74674 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 315, 17), result_eq_74673)
        # Assigning a type to the variable 'if_condition_74674' (line 315)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 315, 17), 'if_condition_74674', if_condition_74674)
        # SSA begins for if statement (line 315)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 316):
        
        # Assigning a Subscript to a Name (line 316):
        
        # Obtaining the type of the subscript
        int_74675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 316, 44), 'int')
        # Getting the type of 'marker' (line 316)
        marker_74676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 37), 'marker')
        # Obtaining the member '__getitem__' of a type (line 316)
        getitem___74677 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 316, 37), marker_74676, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 316)
        subscript_call_result_74678 = invoke(stypy.reporting.localization.Localization(__file__, 316, 37), getitem___74677, int_74675)
        
        # Assigning a type to the variable 'tuple_assignment_74162' (line 316)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 316, 16), 'tuple_assignment_74162', subscript_call_result_74678)
        
        # Assigning a Subscript to a Name (line 316):
        
        # Obtaining the type of the subscript
        int_74679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 316, 55), 'int')
        # Getting the type of 'marker' (line 316)
        marker_74680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 48), 'marker')
        # Obtaining the member '__getitem__' of a type (line 316)
        getitem___74681 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 316, 48), marker_74680, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 316)
        subscript_call_result_74682 = invoke(stypy.reporting.localization.Localization(__file__, 316, 48), getitem___74681, int_74679)
        
        # Assigning a type to the variable 'tuple_assignment_74163' (line 316)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 316, 16), 'tuple_assignment_74163', subscript_call_result_74682)
        
        # Assigning a Name to a Name (line 316):
        # Getting the type of 'tuple_assignment_74162' (line 316)
        tuple_assignment_74162_74683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 16), 'tuple_assignment_74162')
        # Assigning a type to the variable 'numsides' (line 316)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 316, 16), 'numsides', tuple_assignment_74162_74683)
        
        # Assigning a Name to a Name (line 316):
        # Getting the type of 'tuple_assignment_74163' (line 316)
        tuple_assignment_74163_74684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 16), 'tuple_assignment_74163')
        # Assigning a type to the variable 'rotation' (line 316)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 316, 26), 'rotation', tuple_assignment_74163_74684)
        # SSA join for if statement (line 315)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 313)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Subscript to a Name (line 317):
        
        # Assigning a Subscript to a Name (line 317):
        
        # Obtaining the type of the subscript
        int_74685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 30), 'int')
        # Getting the type of 'marker' (line 317)
        marker_74686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 23), 'marker')
        # Obtaining the member '__getitem__' of a type (line 317)
        getitem___74687 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 317, 23), marker_74686, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 317)
        subscript_call_result_74688 = invoke(stypy.reporting.localization.Localization(__file__, 317, 23), getitem___74687, int_74685)
        
        # Assigning a type to the variable 'symstyle' (line 317)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 317, 12), 'symstyle', subscript_call_result_74688)
        
        
        # Getting the type of 'symstyle' (line 318)
        symstyle_74689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 15), 'symstyle')
        int_74690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 27), 'int')
        # Applying the binary operator '==' (line 318)
        result_eq_74691 = python_operator(stypy.reporting.localization.Localization(__file__, 318, 15), '==', symstyle_74689, int_74690)
        
        # Testing the type of an if condition (line 318)
        if_condition_74692 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 318, 12), result_eq_74691)
        # Assigning a type to the variable 'if_condition_74692' (line 318)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 318, 12), 'if_condition_74692', if_condition_74692)
        # SSA begins for if statement (line 318)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 319):
        
        # Assigning a Call to a Attribute (line 319):
        
        # Call to unit_regular_polygon(...): (line 319)
        # Processing the call arguments (line 319)
        # Getting the type of 'numsides' (line 319)
        numsides_74695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 55), 'numsides', False)
        # Processing the call keyword arguments (line 319)
        kwargs_74696 = {}
        # Getting the type of 'Path' (line 319)
        Path_74693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 29), 'Path', False)
        # Obtaining the member 'unit_regular_polygon' of a type (line 319)
        unit_regular_polygon_74694 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 319, 29), Path_74693, 'unit_regular_polygon')
        # Calling unit_regular_polygon(args, kwargs) (line 319)
        unit_regular_polygon_call_result_74697 = invoke(stypy.reporting.localization.Localization(__file__, 319, 29), unit_regular_polygon_74694, *[numsides_74695], **kwargs_74696)
        
        # Getting the type of 'self' (line 319)
        self_74698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 16), 'self')
        # Setting the type of the member '_path' of a type (line 319)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 319, 16), self_74698, '_path', unit_regular_polygon_call_result_74697)
        
        # Assigning a Str to a Attribute (line 320):
        
        # Assigning a Str to a Attribute (line 320):
        unicode_74699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 34), 'unicode', u'miter')
        # Getting the type of 'self' (line 320)
        self_74700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 16), 'self')
        # Setting the type of the member '_joinstyle' of a type (line 320)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 320, 16), self_74700, '_joinstyle', unicode_74699)
        # SSA branch for the else part of an if statement (line 318)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'symstyle' (line 321)
        symstyle_74701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 17), 'symstyle')
        int_74702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 29), 'int')
        # Applying the binary operator '==' (line 321)
        result_eq_74703 = python_operator(stypy.reporting.localization.Localization(__file__, 321, 17), '==', symstyle_74701, int_74702)
        
        # Testing the type of an if condition (line 321)
        if_condition_74704 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 321, 17), result_eq_74703)
        # Assigning a type to the variable 'if_condition_74704' (line 321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 17), 'if_condition_74704', if_condition_74704)
        # SSA begins for if statement (line 321)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 322):
        
        # Assigning a Call to a Attribute (line 322):
        
        # Call to unit_regular_star(...): (line 322)
        # Processing the call arguments (line 322)
        # Getting the type of 'numsides' (line 322)
        numsides_74707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 52), 'numsides', False)
        # Processing the call keyword arguments (line 322)
        kwargs_74708 = {}
        # Getting the type of 'Path' (line 322)
        Path_74705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 29), 'Path', False)
        # Obtaining the member 'unit_regular_star' of a type (line 322)
        unit_regular_star_74706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 29), Path_74705, 'unit_regular_star')
        # Calling unit_regular_star(args, kwargs) (line 322)
        unit_regular_star_call_result_74709 = invoke(stypy.reporting.localization.Localization(__file__, 322, 29), unit_regular_star_74706, *[numsides_74707], **kwargs_74708)
        
        # Getting the type of 'self' (line 322)
        self_74710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 16), 'self')
        # Setting the type of the member '_path' of a type (line 322)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 16), self_74710, '_path', unit_regular_star_call_result_74709)
        
        # Assigning a Str to a Attribute (line 323):
        
        # Assigning a Str to a Attribute (line 323):
        unicode_74711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 323, 34), 'unicode', u'bevel')
        # Getting the type of 'self' (line 323)
        self_74712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 16), 'self')
        # Setting the type of the member '_joinstyle' of a type (line 323)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 323, 16), self_74712, '_joinstyle', unicode_74711)
        # SSA branch for the else part of an if statement (line 321)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'symstyle' (line 324)
        symstyle_74713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 17), 'symstyle')
        int_74714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 324, 29), 'int')
        # Applying the binary operator '==' (line 324)
        result_eq_74715 = python_operator(stypy.reporting.localization.Localization(__file__, 324, 17), '==', symstyle_74713, int_74714)
        
        # Testing the type of an if condition (line 324)
        if_condition_74716 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 324, 17), result_eq_74715)
        # Assigning a type to the variable 'if_condition_74716' (line 324)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 17), 'if_condition_74716', if_condition_74716)
        # SSA begins for if statement (line 324)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 325):
        
        # Assigning a Call to a Attribute (line 325):
        
        # Call to unit_regular_asterisk(...): (line 325)
        # Processing the call arguments (line 325)
        # Getting the type of 'numsides' (line 325)
        numsides_74719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 56), 'numsides', False)
        # Processing the call keyword arguments (line 325)
        kwargs_74720 = {}
        # Getting the type of 'Path' (line 325)
        Path_74717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 29), 'Path', False)
        # Obtaining the member 'unit_regular_asterisk' of a type (line 325)
        unit_regular_asterisk_74718 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 325, 29), Path_74717, 'unit_regular_asterisk')
        # Calling unit_regular_asterisk(args, kwargs) (line 325)
        unit_regular_asterisk_call_result_74721 = invoke(stypy.reporting.localization.Localization(__file__, 325, 29), unit_regular_asterisk_74718, *[numsides_74719], **kwargs_74720)
        
        # Getting the type of 'self' (line 325)
        self_74722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 16), 'self')
        # Setting the type of the member '_path' of a type (line 325)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 325, 16), self_74722, '_path', unit_regular_asterisk_call_result_74721)
        
        # Assigning a Name to a Attribute (line 326):
        
        # Assigning a Name to a Attribute (line 326):
        # Getting the type of 'False' (line 326)
        False_74723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 31), 'False')
        # Getting the type of 'self' (line 326)
        self_74724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 16), 'self')
        # Setting the type of the member '_filled' of a type (line 326)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 326, 16), self_74724, '_filled', False_74723)
        
        # Assigning a Str to a Attribute (line 327):
        
        # Assigning a Str to a Attribute (line 327):
        unicode_74725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 327, 34), 'unicode', u'bevel')
        # Getting the type of 'self' (line 327)
        self_74726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 16), 'self')
        # Setting the type of the member '_joinstyle' of a type (line 327)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 16), self_74726, '_joinstyle', unicode_74725)
        # SSA branch for the else part of an if statement (line 324)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'symstyle' (line 328)
        symstyle_74727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 17), 'symstyle')
        int_74728 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 29), 'int')
        # Applying the binary operator '==' (line 328)
        result_eq_74729 = python_operator(stypy.reporting.localization.Localization(__file__, 328, 17), '==', symstyle_74727, int_74728)
        
        # Testing the type of an if condition (line 328)
        if_condition_74730 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 328, 17), result_eq_74729)
        # Assigning a type to the variable 'if_condition_74730' (line 328)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 17), 'if_condition_74730', if_condition_74730)
        # SSA begins for if statement (line 328)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 329):
        
        # Assigning a Call to a Attribute (line 329):
        
        # Call to unit_circle(...): (line 329)
        # Processing the call keyword arguments (line 329)
        kwargs_74733 = {}
        # Getting the type of 'Path' (line 329)
        Path_74731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 29), 'Path', False)
        # Obtaining the member 'unit_circle' of a type (line 329)
        unit_circle_74732 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 29), Path_74731, 'unit_circle')
        # Calling unit_circle(args, kwargs) (line 329)
        unit_circle_call_result_74734 = invoke(stypy.reporting.localization.Localization(__file__, 329, 29), unit_circle_74732, *[], **kwargs_74733)
        
        # Getting the type of 'self' (line 329)
        self_74735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 16), 'self')
        # Setting the type of the member '_path' of a type (line 329)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 16), self_74735, '_path', unit_circle_call_result_74734)
        # SSA join for if statement (line 328)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 324)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 321)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 318)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Attribute (line 330):
        
        # Assigning a Call to a Attribute (line 330):
        
        # Call to rotate_deg(...): (line 330)
        # Processing the call arguments (line 330)
        # Getting the type of 'rotation' (line 330)
        rotation_74744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 63), 'rotation', False)
        # Processing the call keyword arguments (line 330)
        kwargs_74745 = {}
        
        # Call to scale(...): (line 330)
        # Processing the call arguments (line 330)
        float_74740 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 330, 47), 'float')
        # Processing the call keyword arguments (line 330)
        kwargs_74741 = {}
        
        # Call to Affine2D(...): (line 330)
        # Processing the call keyword arguments (line 330)
        kwargs_74737 = {}
        # Getting the type of 'Affine2D' (line 330)
        Affine2D_74736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 30), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 330)
        Affine2D_call_result_74738 = invoke(stypy.reporting.localization.Localization(__file__, 330, 30), Affine2D_74736, *[], **kwargs_74737)
        
        # Obtaining the member 'scale' of a type (line 330)
        scale_74739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 30), Affine2D_call_result_74738, 'scale')
        # Calling scale(args, kwargs) (line 330)
        scale_call_result_74742 = invoke(stypy.reporting.localization.Localization(__file__, 330, 30), scale_74739, *[float_74740], **kwargs_74741)
        
        # Obtaining the member 'rotate_deg' of a type (line 330)
        rotate_deg_74743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 30), scale_call_result_74742, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 330)
        rotate_deg_call_result_74746 = invoke(stypy.reporting.localization.Localization(__file__, 330, 30), rotate_deg_74743, *[rotation_74744], **kwargs_74745)
        
        # Getting the type of 'self' (line 330)
        self_74747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 12), 'self')
        # Setting the type of the member '_transform' of a type (line 330)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 12), self_74747, '_transform', rotate_deg_call_result_74746)
        # SSA branch for the else part of an if statement (line 312)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 332):
        
        # Assigning a Call to a Name (line 332):
        
        # Call to asarray(...): (line 332)
        # Processing the call arguments (line 332)
        
        # Obtaining the type of the subscript
        int_74750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 332, 38), 'int')
        # Getting the type of 'marker' (line 332)
        marker_74751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 31), 'marker', False)
        # Obtaining the member '__getitem__' of a type (line 332)
        getitem___74752 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 332, 31), marker_74751, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 332)
        subscript_call_result_74753 = invoke(stypy.reporting.localization.Localization(__file__, 332, 31), getitem___74752, int_74750)
        
        # Processing the call keyword arguments (line 332)
        kwargs_74754 = {}
        # Getting the type of 'np' (line 332)
        np_74748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 20), 'np', False)
        # Obtaining the member 'asarray' of a type (line 332)
        asarray_74749 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 332, 20), np_74748, 'asarray')
        # Calling asarray(args, kwargs) (line 332)
        asarray_call_result_74755 = invoke(stypy.reporting.localization.Localization(__file__, 332, 20), asarray_74749, *[subscript_call_result_74753], **kwargs_74754)
        
        # Assigning a type to the variable 'verts' (line 332)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 332, 12), 'verts', asarray_call_result_74755)
        
        # Assigning a Call to a Name (line 333):
        
        # Assigning a Call to a Name (line 333):
        
        # Call to Path(...): (line 333)
        # Processing the call arguments (line 333)
        # Getting the type of 'verts' (line 333)
        verts_74757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 24), 'verts', False)
        # Processing the call keyword arguments (line 333)
        kwargs_74758 = {}
        # Getting the type of 'Path' (line 333)
        Path_74756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 19), 'Path', False)
        # Calling Path(args, kwargs) (line 333)
        Path_call_result_74759 = invoke(stypy.reporting.localization.Localization(__file__, 333, 19), Path_74756, *[verts_74757], **kwargs_74758)
        
        # Assigning a type to the variable 'path' (line 333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'path', Path_call_result_74759)
        
        # Call to _set_custom_marker(...): (line 334)
        # Processing the call arguments (line 334)
        # Getting the type of 'path' (line 334)
        path_74762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 36), 'path', False)
        # Processing the call keyword arguments (line 334)
        kwargs_74763 = {}
        # Getting the type of 'self' (line 334)
        self_74760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 12), 'self', False)
        # Obtaining the member '_set_custom_marker' of a type (line 334)
        _set_custom_marker_74761 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 334, 12), self_74760, '_set_custom_marker')
        # Calling _set_custom_marker(args, kwargs) (line 334)
        _set_custom_marker_call_result_74764 = invoke(stypy.reporting.localization.Localization(__file__, 334, 12), _set_custom_marker_74761, *[path_74762], **kwargs_74763)
        
        # SSA join for if statement (line 312)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_set_tuple_marker(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_tuple_marker' in the type store
        # Getting the type of 'stypy_return_type' (line 310)
        stypy_return_type_74765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74765)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_tuple_marker'
        return stypy_return_type_74765


    @norecursion
    def _set_mathtext_path(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_mathtext_path'
        module_type_store = module_type_store.open_function_context('_set_mathtext_path', 336, 4, False)
        # Assigning a type to the variable 'self' (line 337)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 337, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_mathtext_path.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_mathtext_path.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_mathtext_path.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_mathtext_path.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_mathtext_path')
        MarkerStyle._set_mathtext_path.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_mathtext_path.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_mathtext_path.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_mathtext_path.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_mathtext_path.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_mathtext_path.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_mathtext_path.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_mathtext_path', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_mathtext_path', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_mathtext_path(...)' code ##################

        unicode_74766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 341, (-1)), 'unicode', u"\n        Draws mathtext markers '$...$' using TextPath object.\n\n        Submitted by tcb\n        ")
        stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 342, 8))
        
        # 'from matplotlib.text import TextPath' statement (line 342)
        update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
        import_74767 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 342, 8), 'matplotlib.text')

        if (type(import_74767) is not StypyTypeError):

            if (import_74767 != 'pyd_module'):
                __import__(import_74767)
                sys_modules_74768 = sys.modules[import_74767]
                import_from_module(stypy.reporting.localization.Localization(__file__, 342, 8), 'matplotlib.text', sys_modules_74768.module_type_store, module_type_store, ['TextPath'])
                nest_module(stypy.reporting.localization.Localization(__file__, 342, 8), __file__, sys_modules_74768, sys_modules_74768.module_type_store, module_type_store)
            else:
                from matplotlib.text import TextPath

                import_from_module(stypy.reporting.localization.Localization(__file__, 342, 8), 'matplotlib.text', None, module_type_store, ['TextPath'], [TextPath])

        else:
            # Assigning a type to the variable 'matplotlib.text' (line 342)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 342, 8), 'matplotlib.text', import_74767)

        remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')
        
        stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 343, 8))
        
        # 'from matplotlib.font_manager import FontProperties' statement (line 343)
        update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
        import_74769 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 343, 8), 'matplotlib.font_manager')

        if (type(import_74769) is not StypyTypeError):

            if (import_74769 != 'pyd_module'):
                __import__(import_74769)
                sys_modules_74770 = sys.modules[import_74769]
                import_from_module(stypy.reporting.localization.Localization(__file__, 343, 8), 'matplotlib.font_manager', sys_modules_74770.module_type_store, module_type_store, ['FontProperties'])
                nest_module(stypy.reporting.localization.Localization(__file__, 343, 8), __file__, sys_modules_74770, sys_modules_74770.module_type_store, module_type_store)
            else:
                from matplotlib.font_manager import FontProperties

                import_from_module(stypy.reporting.localization.Localization(__file__, 343, 8), 'matplotlib.font_manager', None, module_type_store, ['FontProperties'], [FontProperties])

        else:
            # Assigning a type to the variable 'matplotlib.font_manager' (line 343)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 343, 8), 'matplotlib.font_manager', import_74769)

        remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')
        
        
        # Assigning a Call to a Name (line 349):
        
        # Assigning a Call to a Name (line 349):
        
        # Call to FontProperties(...): (line 349)
        # Processing the call keyword arguments (line 349)
        float_74772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 349, 36), 'float')
        keyword_74773 = float_74772
        kwargs_74774 = {'size': keyword_74773}
        # Getting the type of 'FontProperties' (line 349)
        FontProperties_74771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 16), 'FontProperties', False)
        # Calling FontProperties(args, kwargs) (line 349)
        FontProperties_call_result_74775 = invoke(stypy.reporting.localization.Localization(__file__, 349, 16), FontProperties_74771, *[], **kwargs_74774)
        
        # Assigning a type to the variable 'props' (line 349)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 349, 8), 'props', FontProperties_call_result_74775)
        
        # Assigning a Call to a Name (line 350):
        
        # Assigning a Call to a Name (line 350):
        
        # Call to TextPath(...): (line 350)
        # Processing the call keyword arguments (line 350)
        
        # Obtaining an instance of the builtin type 'tuple' (line 350)
        tuple_74777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 350, 28), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 350)
        # Adding element type (line 350)
        int_74778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 350, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 28), tuple_74777, int_74778)
        # Adding element type (line 350)
        int_74779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 350, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 28), tuple_74777, int_74779)
        
        keyword_74780 = tuple_74777
        
        # Call to get_marker(...): (line 350)
        # Processing the call keyword arguments (line 350)
        kwargs_74783 = {}
        # Getting the type of 'self' (line 350)
        self_74781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 37), 'self', False)
        # Obtaining the member 'get_marker' of a type (line 350)
        get_marker_74782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 37), self_74781, 'get_marker')
        # Calling get_marker(args, kwargs) (line 350)
        get_marker_call_result_74784 = invoke(stypy.reporting.localization.Localization(__file__, 350, 37), get_marker_74782, *[], **kwargs_74783)
        
        keyword_74785 = get_marker_call_result_74784
        # Getting the type of 'props' (line 350)
        props_74786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 71), 'props', False)
        keyword_74787 = props_74786
        
        # Obtaining the type of the subscript
        unicode_74788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 351, 40), 'unicode', u'text.usetex')
        # Getting the type of 'rcParams' (line 351)
        rcParams_74789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 31), 'rcParams', False)
        # Obtaining the member '__getitem__' of a type (line 351)
        getitem___74790 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 31), rcParams_74789, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 351)
        subscript_call_result_74791 = invoke(stypy.reporting.localization.Localization(__file__, 351, 31), getitem___74790, unicode_74788)
        
        keyword_74792 = subscript_call_result_74791
        kwargs_74793 = {'s': keyword_74785, 'xy': keyword_74780, 'fontproperties': keyword_74787, 'usetex': keyword_74792}
        # Getting the type of 'TextPath' (line 350)
        TextPath_74776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 15), 'TextPath', False)
        # Calling TextPath(args, kwargs) (line 350)
        TextPath_call_result_74794 = invoke(stypy.reporting.localization.Localization(__file__, 350, 15), TextPath_74776, *[], **kwargs_74793)
        
        # Assigning a type to the variable 'text' (line 350)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 350, 8), 'text', TextPath_call_result_74794)
        
        
        
        # Call to len(...): (line 352)
        # Processing the call arguments (line 352)
        # Getting the type of 'text' (line 352)
        text_74796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 15), 'text', False)
        # Obtaining the member 'vertices' of a type (line 352)
        vertices_74797 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 15), text_74796, 'vertices')
        # Processing the call keyword arguments (line 352)
        kwargs_74798 = {}
        # Getting the type of 'len' (line 352)
        len_74795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 11), 'len', False)
        # Calling len(args, kwargs) (line 352)
        len_call_result_74799 = invoke(stypy.reporting.localization.Localization(__file__, 352, 11), len_74795, *[vertices_74797], **kwargs_74798)
        
        int_74800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 33), 'int')
        # Applying the binary operator '==' (line 352)
        result_eq_74801 = python_operator(stypy.reporting.localization.Localization(__file__, 352, 11), '==', len_call_result_74799, int_74800)
        
        # Testing the type of an if condition (line 352)
        if_condition_74802 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 352, 8), result_eq_74801)
        # Assigning a type to the variable 'if_condition_74802' (line 352)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 352, 8), 'if_condition_74802', if_condition_74802)
        # SSA begins for if statement (line 352)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Assigning a type to the variable 'stypy_return_type' (line 353)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 353, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 352)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Tuple (line 355):
        
        # Assigning a Call to a Name:
        
        # Call to min(...): (line 355)
        # Processing the call keyword arguments (line 355)
        int_74806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 355, 44), 'int')
        keyword_74807 = int_74806
        kwargs_74808 = {'axis': keyword_74807}
        # Getting the type of 'text' (line 355)
        text_74803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 21), 'text', False)
        # Obtaining the member 'vertices' of a type (line 355)
        vertices_74804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 355, 21), text_74803, 'vertices')
        # Obtaining the member 'min' of a type (line 355)
        min_74805 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 355, 21), vertices_74804, 'min')
        # Calling min(args, kwargs) (line 355)
        min_call_result_74809 = invoke(stypy.reporting.localization.Localization(__file__, 355, 21), min_74805, *[], **kwargs_74808)
        
        # Assigning a type to the variable 'call_assignment_74164' (line 355)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 355, 8), 'call_assignment_74164', min_call_result_74809)
        
        # Assigning a Call to a Name (line 355):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_74812 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 355, 8), 'int')
        # Processing the call keyword arguments
        kwargs_74813 = {}
        # Getting the type of 'call_assignment_74164' (line 355)
        call_assignment_74164_74810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 8), 'call_assignment_74164', False)
        # Obtaining the member '__getitem__' of a type (line 355)
        getitem___74811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 355, 8), call_assignment_74164_74810, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_74814 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___74811, *[int_74812], **kwargs_74813)
        
        # Assigning a type to the variable 'call_assignment_74165' (line 355)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 355, 8), 'call_assignment_74165', getitem___call_result_74814)
        
        # Assigning a Name to a Name (line 355):
        # Getting the type of 'call_assignment_74165' (line 355)
        call_assignment_74165_74815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 8), 'call_assignment_74165')
        # Assigning a type to the variable 'xmin' (line 355)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 355, 8), 'xmin', call_assignment_74165_74815)
        
        # Assigning a Call to a Name (line 355):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_74818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 355, 8), 'int')
        # Processing the call keyword arguments
        kwargs_74819 = {}
        # Getting the type of 'call_assignment_74164' (line 355)
        call_assignment_74164_74816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 8), 'call_assignment_74164', False)
        # Obtaining the member '__getitem__' of a type (line 355)
        getitem___74817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 355, 8), call_assignment_74164_74816, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_74820 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___74817, *[int_74818], **kwargs_74819)
        
        # Assigning a type to the variable 'call_assignment_74166' (line 355)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 355, 8), 'call_assignment_74166', getitem___call_result_74820)
        
        # Assigning a Name to a Name (line 355):
        # Getting the type of 'call_assignment_74166' (line 355)
        call_assignment_74166_74821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 8), 'call_assignment_74166')
        # Assigning a type to the variable 'ymin' (line 355)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 355, 14), 'ymin', call_assignment_74166_74821)
        
        # Assigning a Call to a Tuple (line 356):
        
        # Assigning a Call to a Name:
        
        # Call to max(...): (line 356)
        # Processing the call keyword arguments (line 356)
        int_74825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 356, 44), 'int')
        keyword_74826 = int_74825
        kwargs_74827 = {'axis': keyword_74826}
        # Getting the type of 'text' (line 356)
        text_74822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 21), 'text', False)
        # Obtaining the member 'vertices' of a type (line 356)
        vertices_74823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 21), text_74822, 'vertices')
        # Obtaining the member 'max' of a type (line 356)
        max_74824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 21), vertices_74823, 'max')
        # Calling max(args, kwargs) (line 356)
        max_call_result_74828 = invoke(stypy.reporting.localization.Localization(__file__, 356, 21), max_74824, *[], **kwargs_74827)
        
        # Assigning a type to the variable 'call_assignment_74167' (line 356)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 356, 8), 'call_assignment_74167', max_call_result_74828)
        
        # Assigning a Call to a Name (line 356):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_74831 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 356, 8), 'int')
        # Processing the call keyword arguments
        kwargs_74832 = {}
        # Getting the type of 'call_assignment_74167' (line 356)
        call_assignment_74167_74829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 8), 'call_assignment_74167', False)
        # Obtaining the member '__getitem__' of a type (line 356)
        getitem___74830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 8), call_assignment_74167_74829, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_74833 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___74830, *[int_74831], **kwargs_74832)
        
        # Assigning a type to the variable 'call_assignment_74168' (line 356)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 356, 8), 'call_assignment_74168', getitem___call_result_74833)
        
        # Assigning a Name to a Name (line 356):
        # Getting the type of 'call_assignment_74168' (line 356)
        call_assignment_74168_74834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 8), 'call_assignment_74168')
        # Assigning a type to the variable 'xmax' (line 356)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 356, 8), 'xmax', call_assignment_74168_74834)
        
        # Assigning a Call to a Name (line 356):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_74837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 356, 8), 'int')
        # Processing the call keyword arguments
        kwargs_74838 = {}
        # Getting the type of 'call_assignment_74167' (line 356)
        call_assignment_74167_74835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 8), 'call_assignment_74167', False)
        # Obtaining the member '__getitem__' of a type (line 356)
        getitem___74836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 8), call_assignment_74167_74835, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_74839 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___74836, *[int_74837], **kwargs_74838)
        
        # Assigning a type to the variable 'call_assignment_74169' (line 356)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 356, 8), 'call_assignment_74169', getitem___call_result_74839)
        
        # Assigning a Name to a Name (line 356):
        # Getting the type of 'call_assignment_74169' (line 356)
        call_assignment_74169_74840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 8), 'call_assignment_74169')
        # Assigning a type to the variable 'ymax' (line 356)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 356, 14), 'ymax', call_assignment_74169_74840)
        
        # Assigning a BinOp to a Name (line 357):
        
        # Assigning a BinOp to a Name (line 357):
        # Getting the type of 'xmax' (line 357)
        xmax_74841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'xmax')
        # Getting the type of 'xmin' (line 357)
        xmin_74842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 23), 'xmin')
        # Applying the binary operator '-' (line 357)
        result_sub_74843 = python_operator(stypy.reporting.localization.Localization(__file__, 357, 16), '-', xmax_74841, xmin_74842)
        
        # Assigning a type to the variable 'width' (line 357)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 8), 'width', result_sub_74843)
        
        # Assigning a BinOp to a Name (line 358):
        
        # Assigning a BinOp to a Name (line 358):
        # Getting the type of 'ymax' (line 358)
        ymax_74844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 17), 'ymax')
        # Getting the type of 'ymin' (line 358)
        ymin_74845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 24), 'ymin')
        # Applying the binary operator '-' (line 358)
        result_sub_74846 = python_operator(stypy.reporting.localization.Localization(__file__, 358, 17), '-', ymax_74844, ymin_74845)
        
        # Assigning a type to the variable 'height' (line 358)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 358, 8), 'height', result_sub_74846)
        
        # Assigning a Call to a Name (line 359):
        
        # Assigning a Call to a Name (line 359):
        
        # Call to max(...): (line 359)
        # Processing the call arguments (line 359)
        # Getting the type of 'width' (line 359)
        width_74848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 22), 'width', False)
        # Getting the type of 'height' (line 359)
        height_74849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 29), 'height', False)
        # Processing the call keyword arguments (line 359)
        kwargs_74850 = {}
        # Getting the type of 'max' (line 359)
        max_74847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 18), 'max', False)
        # Calling max(args, kwargs) (line 359)
        max_call_result_74851 = invoke(stypy.reporting.localization.Localization(__file__, 359, 18), max_74847, *[width_74848, height_74849], **kwargs_74850)
        
        # Assigning a type to the variable 'max_dim' (line 359)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 359, 8), 'max_dim', max_call_result_74851)
        
        # Assigning a Call to a Attribute (line 360):
        
        # Assigning a Call to a Attribute (line 360):
        
        # Call to scale(...): (line 360)
        # Processing the call arguments (line 360)
        float_74873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 362, 19), 'float')
        # Getting the type of 'max_dim' (line 362)
        max_dim_74874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 25), 'max_dim', False)
        # Applying the binary operator 'div' (line 362)
        result_div_74875 = python_operator(stypy.reporting.localization.Localization(__file__, 362, 19), 'div', float_74873, max_dim_74874)
        
        # Processing the call keyword arguments (line 360)
        kwargs_74876 = {}
        
        # Call to translate(...): (line 360)
        # Processing the call arguments (line 360)
        
        # Getting the type of 'xmin' (line 361)
        xmin_74856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 24), 'xmin', False)
        # Applying the 'usub' unary operator (line 361)
        result___neg___74857 = python_operator(stypy.reporting.localization.Localization(__file__, 361, 23), 'usub', xmin_74856)
        
        float_74858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 31), 'float')
        
        # Getting the type of 'width' (line 361)
        width_74859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 38), 'width', False)
        # Applying the 'usub' unary operator (line 361)
        result___neg___74860 = python_operator(stypy.reporting.localization.Localization(__file__, 361, 37), 'usub', width_74859)
        
        # Applying the binary operator '*' (line 361)
        result_mul_74861 = python_operator(stypy.reporting.localization.Localization(__file__, 361, 31), '*', float_74858, result___neg___74860)
        
        # Applying the binary operator '+' (line 361)
        result_add_74862 = python_operator(stypy.reporting.localization.Localization(__file__, 361, 23), '+', result___neg___74857, result_mul_74861)
        
        
        # Getting the type of 'ymin' (line 361)
        ymin_74863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 46), 'ymin', False)
        # Applying the 'usub' unary operator (line 361)
        result___neg___74864 = python_operator(stypy.reporting.localization.Localization(__file__, 361, 45), 'usub', ymin_74863)
        
        float_74865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 53), 'float')
        
        # Getting the type of 'height' (line 361)
        height_74866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 60), 'height', False)
        # Applying the 'usub' unary operator (line 361)
        result___neg___74867 = python_operator(stypy.reporting.localization.Localization(__file__, 361, 59), 'usub', height_74866)
        
        # Applying the binary operator '*' (line 361)
        result_mul_74868 = python_operator(stypy.reporting.localization.Localization(__file__, 361, 53), '*', float_74865, result___neg___74867)
        
        # Applying the binary operator '+' (line 361)
        result_add_74869 = python_operator(stypy.reporting.localization.Localization(__file__, 361, 45), '+', result___neg___74864, result_mul_74868)
        
        # Processing the call keyword arguments (line 360)
        kwargs_74870 = {}
        
        # Call to Affine2D(...): (line 360)
        # Processing the call keyword arguments (line 360)
        kwargs_74853 = {}
        # Getting the type of 'Affine2D' (line 360)
        Affine2D_74852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 360)
        Affine2D_call_result_74854 = invoke(stypy.reporting.localization.Localization(__file__, 360, 26), Affine2D_74852, *[], **kwargs_74853)
        
        # Obtaining the member 'translate' of a type (line 360)
        translate_74855 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 360, 26), Affine2D_call_result_74854, 'translate')
        # Calling translate(args, kwargs) (line 360)
        translate_call_result_74871 = invoke(stypy.reporting.localization.Localization(__file__, 360, 26), translate_74855, *[result_add_74862, result_add_74869], **kwargs_74870)
        
        # Obtaining the member 'scale' of a type (line 360)
        scale_74872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 360, 26), translate_call_result_74871, 'scale')
        # Calling scale(args, kwargs) (line 360)
        scale_call_result_74877 = invoke(stypy.reporting.localization.Localization(__file__, 360, 26), scale_74872, *[result_div_74875], **kwargs_74876)
        
        # Getting the type of 'self' (line 360)
        self_74878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 360)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 360, 8), self_74878, '_transform', scale_call_result_74877)
        
        # Assigning a Name to a Attribute (line 363):
        
        # Assigning a Name to a Attribute (line 363):
        # Getting the type of 'text' (line 363)
        text_74879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 21), 'text')
        # Getting the type of 'self' (line 363)
        self_74880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 8), 'self')
        # Setting the type of the member '_path' of a type (line 363)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 363, 8), self_74880, '_path', text_74879)
        
        # Assigning a Name to a Attribute (line 364):
        
        # Assigning a Name to a Attribute (line 364):
        # Getting the type of 'False' (line 364)
        False_74881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 21), 'False')
        # Getting the type of 'self' (line 364)
        self_74882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 8), 'self')
        # Setting the type of the member '_snap' of a type (line 364)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 364, 8), self_74882, '_snap', False_74881)
        
        # ################# End of '_set_mathtext_path(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_mathtext_path' in the type store
        # Getting the type of 'stypy_return_type' (line 336)
        stypy_return_type_74883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74883)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_mathtext_path'
        return stypy_return_type_74883


    @norecursion
    def _half_fill(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_half_fill'
        module_type_store = module_type_store.open_function_context('_half_fill', 366, 4, False)
        # Assigning a type to the variable 'self' (line 367)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 367, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._half_fill.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._half_fill.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._half_fill.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._half_fill.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._half_fill')
        MarkerStyle._half_fill.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._half_fill.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._half_fill.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._half_fill.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._half_fill.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._half_fill.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._half_fill.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._half_fill', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_half_fill', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_half_fill(...)' code ##################

        
        # Assigning a Call to a Name (line 367):
        
        # Assigning a Call to a Name (line 367):
        
        # Call to get_fillstyle(...): (line 367)
        # Processing the call keyword arguments (line 367)
        kwargs_74886 = {}
        # Getting the type of 'self' (line 367)
        self_74884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 13), 'self', False)
        # Obtaining the member 'get_fillstyle' of a type (line 367)
        get_fillstyle_74885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 367, 13), self_74884, 'get_fillstyle')
        # Calling get_fillstyle(args, kwargs) (line 367)
        get_fillstyle_call_result_74887 = invoke(stypy.reporting.localization.Localization(__file__, 367, 13), get_fillstyle_74885, *[], **kwargs_74886)
        
        # Assigning a type to the variable 'fs' (line 367)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 367, 8), 'fs', get_fillstyle_call_result_74887)
        
        # Assigning a Compare to a Name (line 368):
        
        # Assigning a Compare to a Name (line 368):
        
        # Getting the type of 'fs' (line 368)
        fs_74888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 17), 'fs')
        # Getting the type of 'self' (line 368)
        self_74889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 23), 'self')
        # Obtaining the member '_half_fillstyles' of a type (line 368)
        _half_fillstyles_74890 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 368, 23), self_74889, '_half_fillstyles')
        # Applying the binary operator 'in' (line 368)
        result_contains_74891 = python_operator(stypy.reporting.localization.Localization(__file__, 368, 17), 'in', fs_74888, _half_fillstyles_74890)
        
        # Assigning a type to the variable 'result' (line 368)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 368, 8), 'result', result_contains_74891)
        # Getting the type of 'result' (line 369)
        result_74892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 15), 'result')
        # Assigning a type to the variable 'stypy_return_type' (line 369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 369, 8), 'stypy_return_type', result_74892)
        
        # ################# End of '_half_fill(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_half_fill' in the type store
        # Getting the type of 'stypy_return_type' (line 366)
        stypy_return_type_74893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74893)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_half_fill'
        return stypy_return_type_74893


    @norecursion
    def _set_circle(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        float_74894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 371, 36), 'float')
        defaults = [float_74894]
        # Create a new context for function '_set_circle'
        module_type_store = module_type_store.open_function_context('_set_circle', 371, 4, False)
        # Assigning a type to the variable 'self' (line 372)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 372, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_circle.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_circle.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_circle.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_circle.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_circle')
        MarkerStyle._set_circle.__dict__.__setitem__('stypy_param_names_list', ['reduction'])
        MarkerStyle._set_circle.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_circle.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_circle.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_circle.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_circle.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_circle.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_circle', ['reduction'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_circle', localization, ['reduction'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_circle(...)' code ##################

        
        # Assigning a Call to a Attribute (line 372):
        
        # Assigning a Call to a Attribute (line 372):
        
        # Call to scale(...): (line 372)
        # Processing the call arguments (line 372)
        float_74899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 372, 43), 'float')
        # Getting the type of 'reduction' (line 372)
        reduction_74900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 49), 'reduction', False)
        # Applying the binary operator '*' (line 372)
        result_mul_74901 = python_operator(stypy.reporting.localization.Localization(__file__, 372, 43), '*', float_74899, reduction_74900)
        
        # Processing the call keyword arguments (line 372)
        kwargs_74902 = {}
        
        # Call to Affine2D(...): (line 372)
        # Processing the call keyword arguments (line 372)
        kwargs_74896 = {}
        # Getting the type of 'Affine2D' (line 372)
        Affine2D_74895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 372)
        Affine2D_call_result_74897 = invoke(stypy.reporting.localization.Localization(__file__, 372, 26), Affine2D_74895, *[], **kwargs_74896)
        
        # Obtaining the member 'scale' of a type (line 372)
        scale_74898 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 372, 26), Affine2D_call_result_74897, 'scale')
        # Calling scale(args, kwargs) (line 372)
        scale_call_result_74903 = invoke(stypy.reporting.localization.Localization(__file__, 372, 26), scale_74898, *[result_mul_74901], **kwargs_74902)
        
        # Getting the type of 'self' (line 372)
        self_74904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 372)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 372, 8), self_74904, '_transform', scale_call_result_74903)
        
        # Assigning a Attribute to a Attribute (line 373):
        
        # Assigning a Attribute to a Attribute (line 373):
        # Getting the type of 'np' (line 373)
        np_74905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 31), 'np')
        # Obtaining the member 'inf' of a type (line 373)
        inf_74906 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 31), np_74905, 'inf')
        # Getting the type of 'self' (line 373)
        self_74907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 373)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 8), self_74907, '_snap_threshold', inf_74906)
        
        # Assigning a Call to a Name (line 374):
        
        # Assigning a Call to a Name (line 374):
        
        # Call to get_fillstyle(...): (line 374)
        # Processing the call keyword arguments (line 374)
        kwargs_74910 = {}
        # Getting the type of 'self' (line 374)
        self_74908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 13), 'self', False)
        # Obtaining the member 'get_fillstyle' of a type (line 374)
        get_fillstyle_74909 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 374, 13), self_74908, 'get_fillstyle')
        # Calling get_fillstyle(args, kwargs) (line 374)
        get_fillstyle_call_result_74911 = invoke(stypy.reporting.localization.Localization(__file__, 374, 13), get_fillstyle_74909, *[], **kwargs_74910)
        
        # Assigning a type to the variable 'fs' (line 374)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 374, 8), 'fs', get_fillstyle_call_result_74911)
        
        
        
        # Call to _half_fill(...): (line 375)
        # Processing the call keyword arguments (line 375)
        kwargs_74914 = {}
        # Getting the type of 'self' (line 375)
        self_74912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 15), 'self', False)
        # Obtaining the member '_half_fill' of a type (line 375)
        _half_fill_74913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 375, 15), self_74912, '_half_fill')
        # Calling _half_fill(args, kwargs) (line 375)
        _half_fill_call_result_74915 = invoke(stypy.reporting.localization.Localization(__file__, 375, 15), _half_fill_74913, *[], **kwargs_74914)
        
        # Applying the 'not' unary operator (line 375)
        result_not__74916 = python_operator(stypy.reporting.localization.Localization(__file__, 375, 11), 'not', _half_fill_call_result_74915)
        
        # Testing the type of an if condition (line 375)
        if_condition_74917 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 375, 8), result_not__74916)
        # Assigning a type to the variable 'if_condition_74917' (line 375)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 375, 8), 'if_condition_74917', if_condition_74917)
        # SSA begins for if statement (line 375)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 376):
        
        # Assigning a Call to a Attribute (line 376):
        
        # Call to unit_circle(...): (line 376)
        # Processing the call keyword arguments (line 376)
        kwargs_74920 = {}
        # Getting the type of 'Path' (line 376)
        Path_74918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 25), 'Path', False)
        # Obtaining the member 'unit_circle' of a type (line 376)
        unit_circle_74919 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 376, 25), Path_74918, 'unit_circle')
        # Calling unit_circle(args, kwargs) (line 376)
        unit_circle_call_result_74921 = invoke(stypy.reporting.localization.Localization(__file__, 376, 25), unit_circle_74919, *[], **kwargs_74920)
        
        # Getting the type of 'self' (line 376)
        self_74922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 12), 'self')
        # Setting the type of the member '_path' of a type (line 376)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 376, 12), self_74922, '_path', unit_circle_call_result_74921)
        # SSA branch for the else part of an if statement (line 375)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 379)
        fs_74923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 15), 'fs')
        unicode_74924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 21), 'unicode', u'bottom')
        # Applying the binary operator '==' (line 379)
        result_eq_74925 = python_operator(stypy.reporting.localization.Localization(__file__, 379, 15), '==', fs_74923, unicode_74924)
        
        # Testing the type of an if condition (line 379)
        if_condition_74926 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 379, 12), result_eq_74925)
        # Assigning a type to the variable 'if_condition_74926' (line 379)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'if_condition_74926', if_condition_74926)
        # SSA begins for if statement (line 379)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 380):
        
        # Assigning a Num to a Name (line 380):
        float_74927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 380, 25), 'float')
        # Assigning a type to the variable 'rotate' (line 380)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 380, 16), 'rotate', float_74927)
        # SSA branch for the else part of an if statement (line 379)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 381)
        fs_74928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 17), 'fs')
        unicode_74929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 23), 'unicode', u'top')
        # Applying the binary operator '==' (line 381)
        result_eq_74930 = python_operator(stypy.reporting.localization.Localization(__file__, 381, 17), '==', fs_74928, unicode_74929)
        
        # Testing the type of an if condition (line 381)
        if_condition_74931 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 381, 17), result_eq_74930)
        # Assigning a type to the variable 'if_condition_74931' (line 381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 381, 17), 'if_condition_74931', if_condition_74931)
        # SSA begins for if statement (line 381)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 382):
        
        # Assigning a Num to a Name (line 382):
        float_74932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 382, 25), 'float')
        # Assigning a type to the variable 'rotate' (line 382)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 382, 16), 'rotate', float_74932)
        # SSA branch for the else part of an if statement (line 381)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 383)
        fs_74933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 17), 'fs')
        unicode_74934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 383, 23), 'unicode', u'left')
        # Applying the binary operator '==' (line 383)
        result_eq_74935 = python_operator(stypy.reporting.localization.Localization(__file__, 383, 17), '==', fs_74933, unicode_74934)
        
        # Testing the type of an if condition (line 383)
        if_condition_74936 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 383, 17), result_eq_74935)
        # Assigning a type to the variable 'if_condition_74936' (line 383)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 383, 17), 'if_condition_74936', if_condition_74936)
        # SSA begins for if statement (line 383)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 384):
        
        # Assigning a Num to a Name (line 384):
        float_74937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 25), 'float')
        # Assigning a type to the variable 'rotate' (line 384)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 384, 16), 'rotate', float_74937)
        # SSA branch for the else part of an if statement (line 383)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Num to a Name (line 386):
        
        # Assigning a Num to a Name (line 386):
        float_74938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 25), 'float')
        # Assigning a type to the variable 'rotate' (line 386)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 386, 16), 'rotate', float_74938)
        # SSA join for if statement (line 383)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 381)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 379)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Multiple assignment of 2 elements.
        
        # Assigning a Call to a Attribute (line 388):
        
        # Call to unit_circle_righthalf(...): (line 388)
        # Processing the call keyword arguments (line 388)
        kwargs_74941 = {}
        # Getting the type of 'Path' (line 388)
        Path_74939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 388, 42), 'Path', False)
        # Obtaining the member 'unit_circle_righthalf' of a type (line 388)
        unit_circle_righthalf_74940 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 388, 42), Path_74939, 'unit_circle_righthalf')
        # Calling unit_circle_righthalf(args, kwargs) (line 388)
        unit_circle_righthalf_call_result_74942 = invoke(stypy.reporting.localization.Localization(__file__, 388, 42), unit_circle_righthalf_74940, *[], **kwargs_74941)
        
        # Getting the type of 'self' (line 388)
        self_74943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 388, 25), 'self')
        # Setting the type of the member '_alt_path' of a type (line 388)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 388, 25), self_74943, '_alt_path', unit_circle_righthalf_call_result_74942)
        
        # Assigning a Attribute to a Attribute (line 388):
        # Getting the type of 'self' (line 388)
        self_74944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 388, 25), 'self')
        # Obtaining the member '_alt_path' of a type (line 388)
        _alt_path_74945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 388, 25), self_74944, '_alt_path')
        # Getting the type of 'self' (line 388)
        self_74946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 388, 12), 'self')
        # Setting the type of the member '_path' of a type (line 388)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 388, 12), self_74946, '_path', _alt_path_74945)
        
        # Call to rotate_deg(...): (line 389)
        # Processing the call arguments (line 389)
        # Getting the type of 'rotate' (line 389)
        rotate_74950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 39), 'rotate', False)
        # Processing the call keyword arguments (line 389)
        kwargs_74951 = {}
        # Getting the type of 'self' (line 389)
        self_74947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 12), 'self', False)
        # Obtaining the member '_transform' of a type (line 389)
        _transform_74948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 12), self_74947, '_transform')
        # Obtaining the member 'rotate_deg' of a type (line 389)
        rotate_deg_74949 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 12), _transform_74948, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 389)
        rotate_deg_call_result_74952 = invoke(stypy.reporting.localization.Localization(__file__, 389, 12), rotate_deg_74949, *[rotate_74950], **kwargs_74951)
        
        
        # Assigning a Call to a Attribute (line 390):
        
        # Assigning a Call to a Attribute (line 390):
        
        # Call to rotate_deg(...): (line 390)
        # Processing the call arguments (line 390)
        float_74959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 70), 'float')
        # Processing the call keyword arguments (line 390)
        kwargs_74960 = {}
        
        # Call to frozen(...): (line 390)
        # Processing the call keyword arguments (line 390)
        kwargs_74956 = {}
        # Getting the type of 'self' (line 390)
        self_74953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 34), 'self', False)
        # Obtaining the member '_transform' of a type (line 390)
        _transform_74954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 390, 34), self_74953, '_transform')
        # Obtaining the member 'frozen' of a type (line 390)
        frozen_74955 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 390, 34), _transform_74954, 'frozen')
        # Calling frozen(args, kwargs) (line 390)
        frozen_call_result_74957 = invoke(stypy.reporting.localization.Localization(__file__, 390, 34), frozen_74955, *[], **kwargs_74956)
        
        # Obtaining the member 'rotate_deg' of a type (line 390)
        rotate_deg_74958 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 390, 34), frozen_call_result_74957, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 390)
        rotate_deg_call_result_74961 = invoke(stypy.reporting.localization.Localization(__file__, 390, 34), rotate_deg_74958, *[float_74959], **kwargs_74960)
        
        # Getting the type of 'self' (line 390)
        self_74962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 12), 'self')
        # Setting the type of the member '_alt_transform' of a type (line 390)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 390, 12), self_74962, '_alt_transform', rotate_deg_call_result_74961)
        # SSA join for if statement (line 375)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_set_circle(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_circle' in the type store
        # Getting the type of 'stypy_return_type' (line 371)
        stypy_return_type_74963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 371, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74963)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_circle'
        return stypy_return_type_74963


    @norecursion
    def _set_pixel(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_pixel'
        module_type_store = module_type_store.open_function_context('_set_pixel', 392, 4, False)
        # Assigning a type to the variable 'self' (line 393)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 393, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_pixel.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_pixel.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_pixel.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_pixel.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_pixel')
        MarkerStyle._set_pixel.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_pixel.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_pixel.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_pixel.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_pixel.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_pixel.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_pixel.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_pixel', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_pixel', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_pixel(...)' code ##################

        
        # Assigning a Call to a Attribute (line 393):
        
        # Assigning a Call to a Attribute (line 393):
        
        # Call to unit_rectangle(...): (line 393)
        # Processing the call keyword arguments (line 393)
        kwargs_74966 = {}
        # Getting the type of 'Path' (line 393)
        Path_74964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 21), 'Path', False)
        # Obtaining the member 'unit_rectangle' of a type (line 393)
        unit_rectangle_74965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 393, 21), Path_74964, 'unit_rectangle')
        # Calling unit_rectangle(args, kwargs) (line 393)
        unit_rectangle_call_result_74967 = invoke(stypy.reporting.localization.Localization(__file__, 393, 21), unit_rectangle_74965, *[], **kwargs_74966)
        
        # Getting the type of 'self' (line 393)
        self_74968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 8), 'self')
        # Setting the type of the member '_path' of a type (line 393)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 393, 8), self_74968, '_path', unit_rectangle_call_result_74967)
        
        # Assigning a Call to a Attribute (line 403):
        
        # Assigning a Call to a Attribute (line 403):
        
        # Call to translate(...): (line 403)
        # Processing the call arguments (line 403)
        float_74973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 403, 47), 'float')
        float_74974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 403, 57), 'float')
        # Processing the call keyword arguments (line 403)
        kwargs_74975 = {}
        
        # Call to Affine2D(...): (line 403)
        # Processing the call keyword arguments (line 403)
        kwargs_74970 = {}
        # Getting the type of 'Affine2D' (line 403)
        Affine2D_74969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 403)
        Affine2D_call_result_74971 = invoke(stypy.reporting.localization.Localization(__file__, 403, 26), Affine2D_74969, *[], **kwargs_74970)
        
        # Obtaining the member 'translate' of a type (line 403)
        translate_74972 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 403, 26), Affine2D_call_result_74971, 'translate')
        # Calling translate(args, kwargs) (line 403)
        translate_call_result_74976 = invoke(stypy.reporting.localization.Localization(__file__, 403, 26), translate_74972, *[float_74973, float_74974], **kwargs_74975)
        
        # Getting the type of 'self' (line 403)
        self_74977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 403)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 403, 8), self_74977, '_transform', translate_call_result_74976)
        
        # Assigning a Name to a Attribute (line 404):
        
        # Assigning a Name to a Attribute (line 404):
        # Getting the type of 'None' (line 404)
        None_74978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 31), 'None')
        # Getting the type of 'self' (line 404)
        self_74979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 404)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 404, 8), self_74979, '_snap_threshold', None_74978)
        
        # ################# End of '_set_pixel(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_pixel' in the type store
        # Getting the type of 'stypy_return_type' (line 392)
        stypy_return_type_74980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74980)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_pixel'
        return stypy_return_type_74980


    @norecursion
    def _set_point(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_point'
        module_type_store = module_type_store.open_function_context('_set_point', 406, 4, False)
        # Assigning a type to the variable 'self' (line 407)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 407, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_point.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_point.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_point.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_point.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_point')
        MarkerStyle._set_point.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_point.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_point.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_point.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_point.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_point.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_point.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_point', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_point', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_point(...)' code ##################

        
        # Call to _set_circle(...): (line 407)
        # Processing the call keyword arguments (line 407)
        # Getting the type of 'self' (line 407)
        self_74983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 35), 'self', False)
        # Obtaining the member '_point_size_reduction' of a type (line 407)
        _point_size_reduction_74984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 407, 35), self_74983, '_point_size_reduction')
        keyword_74985 = _point_size_reduction_74984
        kwargs_74986 = {'reduction': keyword_74985}
        # Getting the type of 'self' (line 407)
        self_74981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 8), 'self', False)
        # Obtaining the member '_set_circle' of a type (line 407)
        _set_circle_74982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 407, 8), self_74981, '_set_circle')
        # Calling _set_circle(args, kwargs) (line 407)
        _set_circle_call_result_74987 = invoke(stypy.reporting.localization.Localization(__file__, 407, 8), _set_circle_74982, *[], **kwargs_74986)
        
        
        # ################# End of '_set_point(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_point' in the type store
        # Getting the type of 'stypy_return_type' (line 406)
        stypy_return_type_74988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_74988)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_point'
        return stypy_return_type_74988

    
    # Assigning a Call to a Name (line 409):
    
    # Assigning a Call to a Name (line 413):
    
    # Assigning a Call to a Name (line 416):
    
    # Assigning a Call to a Name (line 420):
    
    # Assigning a Call to a Name (line 423):

    @norecursion
    def _set_triangle(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_triangle'
        module_type_store = module_type_store.open_function_context('_set_triangle', 427, 4, False)
        # Assigning a type to the variable 'self' (line 428)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_triangle.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_triangle.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_triangle.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_triangle.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_triangle')
        MarkerStyle._set_triangle.__dict__.__setitem__('stypy_param_names_list', ['rot', 'skip'])
        MarkerStyle._set_triangle.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_triangle.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_triangle.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_triangle.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_triangle.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_triangle.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_triangle', ['rot', 'skip'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_triangle', localization, ['rot', 'skip'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_triangle(...)' code ##################

        
        # Assigning a Call to a Attribute (line 428):
        
        # Assigning a Call to a Attribute (line 428):
        
        # Call to rotate_deg(...): (line 428)
        # Processing the call arguments (line 428)
        # Getting the type of 'rot' (line 428)
        rot_74998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 64), 'rot', False)
        # Processing the call keyword arguments (line 428)
        kwargs_74999 = {}
        
        # Call to scale(...): (line 428)
        # Processing the call arguments (line 428)
        float_74993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 43), 'float')
        float_74994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 48), 'float')
        # Processing the call keyword arguments (line 428)
        kwargs_74995 = {}
        
        # Call to Affine2D(...): (line 428)
        # Processing the call keyword arguments (line 428)
        kwargs_74990 = {}
        # Getting the type of 'Affine2D' (line 428)
        Affine2D_74989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 428)
        Affine2D_call_result_74991 = invoke(stypy.reporting.localization.Localization(__file__, 428, 26), Affine2D_74989, *[], **kwargs_74990)
        
        # Obtaining the member 'scale' of a type (line 428)
        scale_74992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 26), Affine2D_call_result_74991, 'scale')
        # Calling scale(args, kwargs) (line 428)
        scale_call_result_74996 = invoke(stypy.reporting.localization.Localization(__file__, 428, 26), scale_74992, *[float_74993, float_74994], **kwargs_74995)
        
        # Obtaining the member 'rotate_deg' of a type (line 428)
        rotate_deg_74997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 26), scale_call_result_74996, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 428)
        rotate_deg_call_result_75000 = invoke(stypy.reporting.localization.Localization(__file__, 428, 26), rotate_deg_74997, *[rot_74998], **kwargs_74999)
        
        # Getting the type of 'self' (line 428)
        self_75001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 428)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 8), self_75001, '_transform', rotate_deg_call_result_75000)
        
        # Assigning a Num to a Attribute (line 429):
        
        # Assigning a Num to a Attribute (line 429):
        float_75002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 429, 31), 'float')
        # Getting the type of 'self' (line 429)
        self_75003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 429)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 429, 8), self_75003, '_snap_threshold', float_75002)
        
        # Assigning a Call to a Name (line 430):
        
        # Assigning a Call to a Name (line 430):
        
        # Call to get_fillstyle(...): (line 430)
        # Processing the call keyword arguments (line 430)
        kwargs_75006 = {}
        # Getting the type of 'self' (line 430)
        self_75004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 13), 'self', False)
        # Obtaining the member 'get_fillstyle' of a type (line 430)
        get_fillstyle_75005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 430, 13), self_75004, 'get_fillstyle')
        # Calling get_fillstyle(args, kwargs) (line 430)
        get_fillstyle_call_result_75007 = invoke(stypy.reporting.localization.Localization(__file__, 430, 13), get_fillstyle_75005, *[], **kwargs_75006)
        
        # Assigning a type to the variable 'fs' (line 430)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 430, 8), 'fs', get_fillstyle_call_result_75007)
        
        
        
        # Call to _half_fill(...): (line 432)
        # Processing the call keyword arguments (line 432)
        kwargs_75010 = {}
        # Getting the type of 'self' (line 432)
        self_75008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 15), 'self', False)
        # Obtaining the member '_half_fill' of a type (line 432)
        _half_fill_75009 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 432, 15), self_75008, '_half_fill')
        # Calling _half_fill(args, kwargs) (line 432)
        _half_fill_call_result_75011 = invoke(stypy.reporting.localization.Localization(__file__, 432, 15), _half_fill_75009, *[], **kwargs_75010)
        
        # Applying the 'not' unary operator (line 432)
        result_not__75012 = python_operator(stypy.reporting.localization.Localization(__file__, 432, 11), 'not', _half_fill_call_result_75011)
        
        # Testing the type of an if condition (line 432)
        if_condition_75013 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 432, 8), result_not__75012)
        # Assigning a type to the variable 'if_condition_75013' (line 432)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 432, 8), 'if_condition_75013', if_condition_75013)
        # SSA begins for if statement (line 432)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Attribute (line 433):
        
        # Assigning a Attribute to a Attribute (line 433):
        # Getting the type of 'self' (line 433)
        self_75014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 25), 'self')
        # Obtaining the member '_triangle_path' of a type (line 433)
        _triangle_path_75015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 433, 25), self_75014, '_triangle_path')
        # Getting the type of 'self' (line 433)
        self_75016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 12), 'self')
        # Setting the type of the member '_path' of a type (line 433)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 433, 12), self_75016, '_path', _triangle_path_75015)
        # SSA branch for the else part of an if statement (line 432)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a List to a Name (line 435):
        
        # Assigning a List to a Name (line 435):
        
        # Obtaining an instance of the builtin type 'list' (line 435)
        list_75017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 435, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 435)
        # Adding element type (line 435)
        # Getting the type of 'self' (line 435)
        self_75018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 22), 'self')
        # Obtaining the member '_triangle_path_u' of a type (line 435)
        _triangle_path_u_75019 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 435, 22), self_75018, '_triangle_path_u')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 435, 21), list_75017, _triangle_path_u_75019)
        # Adding element type (line 435)
        # Getting the type of 'self' (line 436)
        self_75020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 22), 'self')
        # Obtaining the member '_triangle_path_l' of a type (line 436)
        _triangle_path_l_75021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 436, 22), self_75020, '_triangle_path_l')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 435, 21), list_75017, _triangle_path_l_75021)
        # Adding element type (line 435)
        # Getting the type of 'self' (line 437)
        self_75022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 22), 'self')
        # Obtaining the member '_triangle_path_d' of a type (line 437)
        _triangle_path_d_75023 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 22), self_75022, '_triangle_path_d')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 435, 21), list_75017, _triangle_path_d_75023)
        # Adding element type (line 435)
        # Getting the type of 'self' (line 438)
        self_75024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 22), 'self')
        # Obtaining the member '_triangle_path_r' of a type (line 438)
        _triangle_path_r_75025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 22), self_75024, '_triangle_path_r')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 435, 21), list_75017, _triangle_path_r_75025)
        
        # Assigning a type to the variable 'mpaths' (line 435)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 435, 12), 'mpaths', list_75017)
        
        
        # Getting the type of 'fs' (line 440)
        fs_75026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 15), 'fs')
        unicode_75027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 440, 21), 'unicode', u'top')
        # Applying the binary operator '==' (line 440)
        result_eq_75028 = python_operator(stypy.reporting.localization.Localization(__file__, 440, 15), '==', fs_75026, unicode_75027)
        
        # Testing the type of an if condition (line 440)
        if_condition_75029 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 440, 12), result_eq_75028)
        # Assigning a type to the variable 'if_condition_75029' (line 440)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 440, 12), 'if_condition_75029', if_condition_75029)
        # SSA begins for if statement (line 440)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Attribute (line 441):
        
        # Assigning a Subscript to a Attribute (line 441):
        
        # Obtaining the type of the subscript
        int_75030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 441, 37), 'int')
        # Getting the type of 'skip' (line 441)
        skip_75031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 41), 'skip')
        # Applying the binary operator '+' (line 441)
        result_add_75032 = python_operator(stypy.reporting.localization.Localization(__file__, 441, 37), '+', int_75030, skip_75031)
        
        int_75033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 441, 49), 'int')
        # Applying the binary operator '%' (line 441)
        result_mod_75034 = python_operator(stypy.reporting.localization.Localization(__file__, 441, 36), '%', result_add_75032, int_75033)
        
        # Getting the type of 'mpaths' (line 441)
        mpaths_75035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 29), 'mpaths')
        # Obtaining the member '__getitem__' of a type (line 441)
        getitem___75036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 441, 29), mpaths_75035, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 441)
        subscript_call_result_75037 = invoke(stypy.reporting.localization.Localization(__file__, 441, 29), getitem___75036, result_mod_75034)
        
        # Getting the type of 'self' (line 441)
        self_75038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 16), 'self')
        # Setting the type of the member '_path' of a type (line 441)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 441, 16), self_75038, '_path', subscript_call_result_75037)
        
        # Assigning a Subscript to a Attribute (line 442):
        
        # Assigning a Subscript to a Attribute (line 442):
        
        # Obtaining the type of the subscript
        int_75039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 41), 'int')
        # Getting the type of 'skip' (line 442)
        skip_75040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 45), 'skip')
        # Applying the binary operator '+' (line 442)
        result_add_75041 = python_operator(stypy.reporting.localization.Localization(__file__, 442, 41), '+', int_75039, skip_75040)
        
        int_75042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 53), 'int')
        # Applying the binary operator '%' (line 442)
        result_mod_75043 = python_operator(stypy.reporting.localization.Localization(__file__, 442, 40), '%', result_add_75041, int_75042)
        
        # Getting the type of 'mpaths' (line 442)
        mpaths_75044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 33), 'mpaths')
        # Obtaining the member '__getitem__' of a type (line 442)
        getitem___75045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 33), mpaths_75044, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 442)
        subscript_call_result_75046 = invoke(stypy.reporting.localization.Localization(__file__, 442, 33), getitem___75045, result_mod_75043)
        
        # Getting the type of 'self' (line 442)
        self_75047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 16), 'self')
        # Setting the type of the member '_alt_path' of a type (line 442)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 16), self_75047, '_alt_path', subscript_call_result_75046)
        # SSA branch for the else part of an if statement (line 440)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 443)
        fs_75048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 17), 'fs')
        unicode_75049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 443, 23), 'unicode', u'bottom')
        # Applying the binary operator '==' (line 443)
        result_eq_75050 = python_operator(stypy.reporting.localization.Localization(__file__, 443, 17), '==', fs_75048, unicode_75049)
        
        # Testing the type of an if condition (line 443)
        if_condition_75051 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 443, 17), result_eq_75050)
        # Assigning a type to the variable 'if_condition_75051' (line 443)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 443, 17), 'if_condition_75051', if_condition_75051)
        # SSA begins for if statement (line 443)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Attribute (line 444):
        
        # Assigning a Subscript to a Attribute (line 444):
        
        # Obtaining the type of the subscript
        int_75052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 444, 37), 'int')
        # Getting the type of 'skip' (line 444)
        skip_75053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 41), 'skip')
        # Applying the binary operator '+' (line 444)
        result_add_75054 = python_operator(stypy.reporting.localization.Localization(__file__, 444, 37), '+', int_75052, skip_75053)
        
        int_75055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 444, 49), 'int')
        # Applying the binary operator '%' (line 444)
        result_mod_75056 = python_operator(stypy.reporting.localization.Localization(__file__, 444, 36), '%', result_add_75054, int_75055)
        
        # Getting the type of 'mpaths' (line 444)
        mpaths_75057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 29), 'mpaths')
        # Obtaining the member '__getitem__' of a type (line 444)
        getitem___75058 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 29), mpaths_75057, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 444)
        subscript_call_result_75059 = invoke(stypy.reporting.localization.Localization(__file__, 444, 29), getitem___75058, result_mod_75056)
        
        # Getting the type of 'self' (line 444)
        self_75060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 16), 'self')
        # Setting the type of the member '_path' of a type (line 444)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 16), self_75060, '_path', subscript_call_result_75059)
        
        # Assigning a Subscript to a Attribute (line 445):
        
        # Assigning a Subscript to a Attribute (line 445):
        
        # Obtaining the type of the subscript
        int_75061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 445, 41), 'int')
        # Getting the type of 'skip' (line 445)
        skip_75062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 45), 'skip')
        # Applying the binary operator '+' (line 445)
        result_add_75063 = python_operator(stypy.reporting.localization.Localization(__file__, 445, 41), '+', int_75061, skip_75062)
        
        int_75064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 445, 53), 'int')
        # Applying the binary operator '%' (line 445)
        result_mod_75065 = python_operator(stypy.reporting.localization.Localization(__file__, 445, 40), '%', result_add_75063, int_75064)
        
        # Getting the type of 'mpaths' (line 445)
        mpaths_75066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 33), 'mpaths')
        # Obtaining the member '__getitem__' of a type (line 445)
        getitem___75067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 33), mpaths_75066, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 445)
        subscript_call_result_75068 = invoke(stypy.reporting.localization.Localization(__file__, 445, 33), getitem___75067, result_mod_75065)
        
        # Getting the type of 'self' (line 445)
        self_75069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 16), 'self')
        # Setting the type of the member '_alt_path' of a type (line 445)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 16), self_75069, '_alt_path', subscript_call_result_75068)
        # SSA branch for the else part of an if statement (line 443)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 446)
        fs_75070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 17), 'fs')
        unicode_75071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 446, 23), 'unicode', u'left')
        # Applying the binary operator '==' (line 446)
        result_eq_75072 = python_operator(stypy.reporting.localization.Localization(__file__, 446, 17), '==', fs_75070, unicode_75071)
        
        # Testing the type of an if condition (line 446)
        if_condition_75073 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 446, 17), result_eq_75072)
        # Assigning a type to the variable 'if_condition_75073' (line 446)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 446, 17), 'if_condition_75073', if_condition_75073)
        # SSA begins for if statement (line 446)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Attribute (line 447):
        
        # Assigning a Subscript to a Attribute (line 447):
        
        # Obtaining the type of the subscript
        int_75074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 447, 37), 'int')
        # Getting the type of 'skip' (line 447)
        skip_75075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 41), 'skip')
        # Applying the binary operator '+' (line 447)
        result_add_75076 = python_operator(stypy.reporting.localization.Localization(__file__, 447, 37), '+', int_75074, skip_75075)
        
        int_75077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 447, 49), 'int')
        # Applying the binary operator '%' (line 447)
        result_mod_75078 = python_operator(stypy.reporting.localization.Localization(__file__, 447, 36), '%', result_add_75076, int_75077)
        
        # Getting the type of 'mpaths' (line 447)
        mpaths_75079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 29), 'mpaths')
        # Obtaining the member '__getitem__' of a type (line 447)
        getitem___75080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 29), mpaths_75079, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 447)
        subscript_call_result_75081 = invoke(stypy.reporting.localization.Localization(__file__, 447, 29), getitem___75080, result_mod_75078)
        
        # Getting the type of 'self' (line 447)
        self_75082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 16), 'self')
        # Setting the type of the member '_path' of a type (line 447)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 16), self_75082, '_path', subscript_call_result_75081)
        
        # Assigning a Subscript to a Attribute (line 448):
        
        # Assigning a Subscript to a Attribute (line 448):
        
        # Obtaining the type of the subscript
        int_75083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 41), 'int')
        # Getting the type of 'skip' (line 448)
        skip_75084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 45), 'skip')
        # Applying the binary operator '+' (line 448)
        result_add_75085 = python_operator(stypy.reporting.localization.Localization(__file__, 448, 41), '+', int_75083, skip_75084)
        
        int_75086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 53), 'int')
        # Applying the binary operator '%' (line 448)
        result_mod_75087 = python_operator(stypy.reporting.localization.Localization(__file__, 448, 40), '%', result_add_75085, int_75086)
        
        # Getting the type of 'mpaths' (line 448)
        mpaths_75088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 33), 'mpaths')
        # Obtaining the member '__getitem__' of a type (line 448)
        getitem___75089 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 33), mpaths_75088, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 448)
        subscript_call_result_75090 = invoke(stypy.reporting.localization.Localization(__file__, 448, 33), getitem___75089, result_mod_75087)
        
        # Getting the type of 'self' (line 448)
        self_75091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'self')
        # Setting the type of the member '_alt_path' of a type (line 448)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 16), self_75091, '_alt_path', subscript_call_result_75090)
        # SSA branch for the else part of an if statement (line 446)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Subscript to a Attribute (line 450):
        
        # Assigning a Subscript to a Attribute (line 450):
        
        # Obtaining the type of the subscript
        int_75092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 450, 37), 'int')
        # Getting the type of 'skip' (line 450)
        skip_75093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 41), 'skip')
        # Applying the binary operator '+' (line 450)
        result_add_75094 = python_operator(stypy.reporting.localization.Localization(__file__, 450, 37), '+', int_75092, skip_75093)
        
        int_75095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 450, 49), 'int')
        # Applying the binary operator '%' (line 450)
        result_mod_75096 = python_operator(stypy.reporting.localization.Localization(__file__, 450, 36), '%', result_add_75094, int_75095)
        
        # Getting the type of 'mpaths' (line 450)
        mpaths_75097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 29), 'mpaths')
        # Obtaining the member '__getitem__' of a type (line 450)
        getitem___75098 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 450, 29), mpaths_75097, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 450)
        subscript_call_result_75099 = invoke(stypy.reporting.localization.Localization(__file__, 450, 29), getitem___75098, result_mod_75096)
        
        # Getting the type of 'self' (line 450)
        self_75100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 16), 'self')
        # Setting the type of the member '_path' of a type (line 450)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 450, 16), self_75100, '_path', subscript_call_result_75099)
        
        # Assigning a Subscript to a Attribute (line 451):
        
        # Assigning a Subscript to a Attribute (line 451):
        
        # Obtaining the type of the subscript
        int_75101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 451, 41), 'int')
        # Getting the type of 'skip' (line 451)
        skip_75102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 45), 'skip')
        # Applying the binary operator '+' (line 451)
        result_add_75103 = python_operator(stypy.reporting.localization.Localization(__file__, 451, 41), '+', int_75101, skip_75102)
        
        int_75104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 451, 53), 'int')
        # Applying the binary operator '%' (line 451)
        result_mod_75105 = python_operator(stypy.reporting.localization.Localization(__file__, 451, 40), '%', result_add_75103, int_75104)
        
        # Getting the type of 'mpaths' (line 451)
        mpaths_75106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 33), 'mpaths')
        # Obtaining the member '__getitem__' of a type (line 451)
        getitem___75107 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 451, 33), mpaths_75106, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 451)
        subscript_call_result_75108 = invoke(stypy.reporting.localization.Localization(__file__, 451, 33), getitem___75107, result_mod_75105)
        
        # Getting the type of 'self' (line 451)
        self_75109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 16), 'self')
        # Setting the type of the member '_alt_path' of a type (line 451)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 451, 16), self_75109, '_alt_path', subscript_call_result_75108)
        # SSA join for if statement (line 446)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 443)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 440)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Attribute to a Attribute (line 453):
        
        # Assigning a Attribute to a Attribute (line 453):
        # Getting the type of 'self' (line 453)
        self_75110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 34), 'self')
        # Obtaining the member '_transform' of a type (line 453)
        _transform_75111 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 34), self_75110, '_transform')
        # Getting the type of 'self' (line 453)
        self_75112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 12), 'self')
        # Setting the type of the member '_alt_transform' of a type (line 453)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 12), self_75112, '_alt_transform', _transform_75111)
        # SSA join for if statement (line 432)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Str to a Attribute (line 455):
        
        # Assigning a Str to a Attribute (line 455):
        unicode_75113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 455, 26), 'unicode', u'miter')
        # Getting the type of 'self' (line 455)
        self_75114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 8), 'self')
        # Setting the type of the member '_joinstyle' of a type (line 455)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 455, 8), self_75114, '_joinstyle', unicode_75113)
        
        # ################# End of '_set_triangle(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_triangle' in the type store
        # Getting the type of 'stypy_return_type' (line 427)
        stypy_return_type_75115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_75115)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_triangle'
        return stypy_return_type_75115


    @norecursion
    def _set_triangle_up(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_triangle_up'
        module_type_store = module_type_store.open_function_context('_set_triangle_up', 457, 4, False)
        # Assigning a type to the variable 'self' (line 458)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_triangle_up.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_triangle_up.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_triangle_up.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_triangle_up.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_triangle_up')
        MarkerStyle._set_triangle_up.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_triangle_up.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_triangle_up.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_triangle_up.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_triangle_up.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_triangle_up.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_triangle_up.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_triangle_up', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_triangle_up', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_triangle_up(...)' code ##################

        
        # Call to _set_triangle(...): (line 458)
        # Processing the call arguments (line 458)
        float_75118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 34), 'float')
        int_75119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 39), 'int')
        # Processing the call keyword arguments (line 458)
        kwargs_75120 = {}
        # Getting the type of 'self' (line 458)
        self_75116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 15), 'self', False)
        # Obtaining the member '_set_triangle' of a type (line 458)
        _set_triangle_75117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 458, 15), self_75116, '_set_triangle')
        # Calling _set_triangle(args, kwargs) (line 458)
        _set_triangle_call_result_75121 = invoke(stypy.reporting.localization.Localization(__file__, 458, 15), _set_triangle_75117, *[float_75118, int_75119], **kwargs_75120)
        
        # Assigning a type to the variable 'stypy_return_type' (line 458)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 8), 'stypy_return_type', _set_triangle_call_result_75121)
        
        # ################# End of '_set_triangle_up(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_triangle_up' in the type store
        # Getting the type of 'stypy_return_type' (line 457)
        stypy_return_type_75122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_75122)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_triangle_up'
        return stypy_return_type_75122


    @norecursion
    def _set_triangle_down(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_triangle_down'
        module_type_store = module_type_store.open_function_context('_set_triangle_down', 460, 4, False)
        # Assigning a type to the variable 'self' (line 461)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 461, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_triangle_down.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_triangle_down.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_triangle_down.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_triangle_down.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_triangle_down')
        MarkerStyle._set_triangle_down.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_triangle_down.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_triangle_down.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_triangle_down.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_triangle_down.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_triangle_down.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_triangle_down.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_triangle_down', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_triangle_down', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_triangle_down(...)' code ##################

        
        # Call to _set_triangle(...): (line 461)
        # Processing the call arguments (line 461)
        float_75125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 461, 34), 'float')
        int_75126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 461, 41), 'int')
        # Processing the call keyword arguments (line 461)
        kwargs_75127 = {}
        # Getting the type of 'self' (line 461)
        self_75123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 15), 'self', False)
        # Obtaining the member '_set_triangle' of a type (line 461)
        _set_triangle_75124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 461, 15), self_75123, '_set_triangle')
        # Calling _set_triangle(args, kwargs) (line 461)
        _set_triangle_call_result_75128 = invoke(stypy.reporting.localization.Localization(__file__, 461, 15), _set_triangle_75124, *[float_75125, int_75126], **kwargs_75127)
        
        # Assigning a type to the variable 'stypy_return_type' (line 461)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 461, 8), 'stypy_return_type', _set_triangle_call_result_75128)
        
        # ################# End of '_set_triangle_down(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_triangle_down' in the type store
        # Getting the type of 'stypy_return_type' (line 460)
        stypy_return_type_75129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_75129)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_triangle_down'
        return stypy_return_type_75129


    @norecursion
    def _set_triangle_left(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_triangle_left'
        module_type_store = module_type_store.open_function_context('_set_triangle_left', 463, 4, False)
        # Assigning a type to the variable 'self' (line 464)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 464, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_triangle_left.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_triangle_left.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_triangle_left.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_triangle_left.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_triangle_left')
        MarkerStyle._set_triangle_left.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_triangle_left.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_triangle_left.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_triangle_left.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_triangle_left.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_triangle_left.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_triangle_left.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_triangle_left', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_triangle_left', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_triangle_left(...)' code ##################

        
        # Call to _set_triangle(...): (line 464)
        # Processing the call arguments (line 464)
        float_75132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 34), 'float')
        int_75133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 40), 'int')
        # Processing the call keyword arguments (line 464)
        kwargs_75134 = {}
        # Getting the type of 'self' (line 464)
        self_75130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 464, 15), 'self', False)
        # Obtaining the member '_set_triangle' of a type (line 464)
        _set_triangle_75131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 464, 15), self_75130, '_set_triangle')
        # Calling _set_triangle(args, kwargs) (line 464)
        _set_triangle_call_result_75135 = invoke(stypy.reporting.localization.Localization(__file__, 464, 15), _set_triangle_75131, *[float_75132, int_75133], **kwargs_75134)
        
        # Assigning a type to the variable 'stypy_return_type' (line 464)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 464, 8), 'stypy_return_type', _set_triangle_call_result_75135)
        
        # ################# End of '_set_triangle_left(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_triangle_left' in the type store
        # Getting the type of 'stypy_return_type' (line 463)
        stypy_return_type_75136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_75136)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_triangle_left'
        return stypy_return_type_75136


    @norecursion
    def _set_triangle_right(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_triangle_right'
        module_type_store = module_type_store.open_function_context('_set_triangle_right', 466, 4, False)
        # Assigning a type to the variable 'self' (line 467)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 467, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_triangle_right.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_triangle_right.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_triangle_right.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_triangle_right.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_triangle_right')
        MarkerStyle._set_triangle_right.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_triangle_right.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_triangle_right.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_triangle_right.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_triangle_right.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_triangle_right.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_triangle_right.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_triangle_right', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_triangle_right', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_triangle_right(...)' code ##################

        
        # Call to _set_triangle(...): (line 467)
        # Processing the call arguments (line 467)
        float_75139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 34), 'float')
        int_75140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 41), 'int')
        # Processing the call keyword arguments (line 467)
        kwargs_75141 = {}
        # Getting the type of 'self' (line 467)
        self_75137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 15), 'self', False)
        # Obtaining the member '_set_triangle' of a type (line 467)
        _set_triangle_75138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 15), self_75137, '_set_triangle')
        # Calling _set_triangle(args, kwargs) (line 467)
        _set_triangle_call_result_75142 = invoke(stypy.reporting.localization.Localization(__file__, 467, 15), _set_triangle_75138, *[float_75139, int_75140], **kwargs_75141)
        
        # Assigning a type to the variable 'stypy_return_type' (line 467)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 467, 8), 'stypy_return_type', _set_triangle_call_result_75142)
        
        # ################# End of '_set_triangle_right(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_triangle_right' in the type store
        # Getting the type of 'stypy_return_type' (line 466)
        stypy_return_type_75143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_75143)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_triangle_right'
        return stypy_return_type_75143


    @norecursion
    def _set_square(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_square'
        module_type_store = module_type_store.open_function_context('_set_square', 469, 4, False)
        # Assigning a type to the variable 'self' (line 470)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 470, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_square.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_square.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_square.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_square.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_square')
        MarkerStyle._set_square.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_square.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_square.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_square.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_square.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_square.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_square.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_square', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_square', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_square(...)' code ##################

        
        # Assigning a Call to a Attribute (line 470):
        
        # Assigning a Call to a Attribute (line 470):
        
        # Call to translate(...): (line 470)
        # Processing the call arguments (line 470)
        float_75148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 47), 'float')
        float_75149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 53), 'float')
        # Processing the call keyword arguments (line 470)
        kwargs_75150 = {}
        
        # Call to Affine2D(...): (line 470)
        # Processing the call keyword arguments (line 470)
        kwargs_75145 = {}
        # Getting the type of 'Affine2D' (line 470)
        Affine2D_75144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 470)
        Affine2D_call_result_75146 = invoke(stypy.reporting.localization.Localization(__file__, 470, 26), Affine2D_75144, *[], **kwargs_75145)
        
        # Obtaining the member 'translate' of a type (line 470)
        translate_75147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 470, 26), Affine2D_call_result_75146, 'translate')
        # Calling translate(args, kwargs) (line 470)
        translate_call_result_75151 = invoke(stypy.reporting.localization.Localization(__file__, 470, 26), translate_75147, *[float_75148, float_75149], **kwargs_75150)
        
        # Getting the type of 'self' (line 470)
        self_75152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 470)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 470, 8), self_75152, '_transform', translate_call_result_75151)
        
        # Assigning a Num to a Attribute (line 471):
        
        # Assigning a Num to a Attribute (line 471):
        float_75153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 31), 'float')
        # Getting the type of 'self' (line 471)
        self_75154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 471)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 471, 8), self_75154, '_snap_threshold', float_75153)
        
        # Assigning a Call to a Name (line 472):
        
        # Assigning a Call to a Name (line 472):
        
        # Call to get_fillstyle(...): (line 472)
        # Processing the call keyword arguments (line 472)
        kwargs_75157 = {}
        # Getting the type of 'self' (line 472)
        self_75155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 13), 'self', False)
        # Obtaining the member 'get_fillstyle' of a type (line 472)
        get_fillstyle_75156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 13), self_75155, 'get_fillstyle')
        # Calling get_fillstyle(args, kwargs) (line 472)
        get_fillstyle_call_result_75158 = invoke(stypy.reporting.localization.Localization(__file__, 472, 13), get_fillstyle_75156, *[], **kwargs_75157)
        
        # Assigning a type to the variable 'fs' (line 472)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 8), 'fs', get_fillstyle_call_result_75158)
        
        
        
        # Call to _half_fill(...): (line 473)
        # Processing the call keyword arguments (line 473)
        kwargs_75161 = {}
        # Getting the type of 'self' (line 473)
        self_75159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 15), 'self', False)
        # Obtaining the member '_half_fill' of a type (line 473)
        _half_fill_75160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 473, 15), self_75159, '_half_fill')
        # Calling _half_fill(args, kwargs) (line 473)
        _half_fill_call_result_75162 = invoke(stypy.reporting.localization.Localization(__file__, 473, 15), _half_fill_75160, *[], **kwargs_75161)
        
        # Applying the 'not' unary operator (line 473)
        result_not__75163 = python_operator(stypy.reporting.localization.Localization(__file__, 473, 11), 'not', _half_fill_call_result_75162)
        
        # Testing the type of an if condition (line 473)
        if_condition_75164 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 473, 8), result_not__75163)
        # Assigning a type to the variable 'if_condition_75164' (line 473)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 473, 8), 'if_condition_75164', if_condition_75164)
        # SSA begins for if statement (line 473)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 474):
        
        # Assigning a Call to a Attribute (line 474):
        
        # Call to unit_rectangle(...): (line 474)
        # Processing the call keyword arguments (line 474)
        kwargs_75167 = {}
        # Getting the type of 'Path' (line 474)
        Path_75165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 25), 'Path', False)
        # Obtaining the member 'unit_rectangle' of a type (line 474)
        unit_rectangle_75166 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 474, 25), Path_75165, 'unit_rectangle')
        # Calling unit_rectangle(args, kwargs) (line 474)
        unit_rectangle_call_result_75168 = invoke(stypy.reporting.localization.Localization(__file__, 474, 25), unit_rectangle_75166, *[], **kwargs_75167)
        
        # Getting the type of 'self' (line 474)
        self_75169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 12), 'self')
        # Setting the type of the member '_path' of a type (line 474)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 474, 12), self_75169, '_path', unit_rectangle_call_result_75168)
        # SSA branch for the else part of an if statement (line 473)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 479)
        fs_75170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 15), 'fs')
        unicode_75171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 21), 'unicode', u'bottom')
        # Applying the binary operator '==' (line 479)
        result_eq_75172 = python_operator(stypy.reporting.localization.Localization(__file__, 479, 15), '==', fs_75170, unicode_75171)
        
        # Testing the type of an if condition (line 479)
        if_condition_75173 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 479, 12), result_eq_75172)
        # Assigning a type to the variable 'if_condition_75173' (line 479)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 479, 12), 'if_condition_75173', if_condition_75173)
        # SSA begins for if statement (line 479)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 480):
        
        # Assigning a Num to a Name (line 480):
        float_75174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 25), 'float')
        # Assigning a type to the variable 'rotate' (line 480)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 480, 16), 'rotate', float_75174)
        # SSA branch for the else part of an if statement (line 479)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 481)
        fs_75175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 17), 'fs')
        unicode_75176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 23), 'unicode', u'top')
        # Applying the binary operator '==' (line 481)
        result_eq_75177 = python_operator(stypy.reporting.localization.Localization(__file__, 481, 17), '==', fs_75175, unicode_75176)
        
        # Testing the type of an if condition (line 481)
        if_condition_75178 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 481, 17), result_eq_75177)
        # Assigning a type to the variable 'if_condition_75178' (line 481)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 481, 17), 'if_condition_75178', if_condition_75178)
        # SSA begins for if statement (line 481)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 482):
        
        # Assigning a Num to a Name (line 482):
        float_75179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 25), 'float')
        # Assigning a type to the variable 'rotate' (line 482)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 482, 16), 'rotate', float_75179)
        # SSA branch for the else part of an if statement (line 481)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 483)
        fs_75180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 17), 'fs')
        unicode_75181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 483, 23), 'unicode', u'left')
        # Applying the binary operator '==' (line 483)
        result_eq_75182 = python_operator(stypy.reporting.localization.Localization(__file__, 483, 17), '==', fs_75180, unicode_75181)
        
        # Testing the type of an if condition (line 483)
        if_condition_75183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 483, 17), result_eq_75182)
        # Assigning a type to the variable 'if_condition_75183' (line 483)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 483, 17), 'if_condition_75183', if_condition_75183)
        # SSA begins for if statement (line 483)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 484):
        
        # Assigning a Num to a Name (line 484):
        float_75184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 484, 25), 'float')
        # Assigning a type to the variable 'rotate' (line 484)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 484, 16), 'rotate', float_75184)
        # SSA branch for the else part of an if statement (line 483)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Num to a Name (line 486):
        
        # Assigning a Num to a Name (line 486):
        float_75185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 486, 25), 'float')
        # Assigning a type to the variable 'rotate' (line 486)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 486, 16), 'rotate', float_75185)
        # SSA join for if statement (line 483)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 481)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 479)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Attribute (line 488):
        
        # Assigning a Call to a Attribute (line 488):
        
        # Call to Path(...): (line 488)
        # Processing the call arguments (line 488)
        
        # Obtaining an instance of the builtin type 'list' (line 488)
        list_75187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 488)
        # Adding element type (line 488)
        
        # Obtaining an instance of the builtin type 'list' (line 488)
        list_75188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 488)
        # Adding element type (line 488)
        float_75189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 31), list_75188, float_75189)
        # Adding element type (line 488)
        float_75190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 31), list_75188, float_75190)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 30), list_75187, list_75188)
        # Adding element type (line 488)
        
        # Obtaining an instance of the builtin type 'list' (line 488)
        list_75191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 488)
        # Adding element type (line 488)
        float_75192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 44), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 43), list_75191, float_75192)
        # Adding element type (line 488)
        float_75193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 49), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 43), list_75191, float_75193)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 30), list_75187, list_75191)
        # Adding element type (line 488)
        
        # Obtaining an instance of the builtin type 'list' (line 488)
        list_75194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 55), 'list')
        # Adding type elements to the builtin type 'list' instance (line 488)
        # Adding element type (line 488)
        float_75195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 56), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 55), list_75194, float_75195)
        # Adding element type (line 488)
        float_75196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 61), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 55), list_75194, float_75196)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 30), list_75187, list_75194)
        # Adding element type (line 488)
        
        # Obtaining an instance of the builtin type 'list' (line 489)
        list_75197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 489)
        # Adding element type (line 489)
        float_75198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 31), list_75197, float_75198)
        # Adding element type (line 489)
        float_75199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 31), list_75197, float_75199)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 30), list_75187, list_75197)
        # Adding element type (line 488)
        
        # Obtaining an instance of the builtin type 'list' (line 489)
        list_75200 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 489)
        # Adding element type (line 489)
        float_75201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 44), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 43), list_75200, float_75201)
        # Adding element type (line 489)
        float_75202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 49), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 43), list_75200, float_75202)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 30), list_75187, list_75200)
        
        # Processing the call keyword arguments (line 488)
        kwargs_75203 = {}
        # Getting the type of 'Path' (line 488)
        Path_75186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 25), 'Path', False)
        # Calling Path(args, kwargs) (line 488)
        Path_call_result_75204 = invoke(stypy.reporting.localization.Localization(__file__, 488, 25), Path_75186, *[list_75187], **kwargs_75203)
        
        # Getting the type of 'self' (line 488)
        self_75205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 12), 'self')
        # Setting the type of the member '_path' of a type (line 488)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 488, 12), self_75205, '_path', Path_call_result_75204)
        
        # Assigning a Call to a Attribute (line 490):
        
        # Assigning a Call to a Attribute (line 490):
        
        # Call to Path(...): (line 490)
        # Processing the call arguments (line 490)
        
        # Obtaining an instance of the builtin type 'list' (line 490)
        list_75207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 490)
        # Adding element type (line 490)
        
        # Obtaining an instance of the builtin type 'list' (line 490)
        list_75208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 490)
        # Adding element type (line 490)
        float_75209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 36), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 490, 35), list_75208, float_75209)
        # Adding element type (line 490)
        float_75210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 41), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 490, 35), list_75208, float_75210)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 490, 34), list_75207, list_75208)
        # Adding element type (line 490)
        
        # Obtaining an instance of the builtin type 'list' (line 490)
        list_75211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 47), 'list')
        # Adding type elements to the builtin type 'list' instance (line 490)
        # Adding element type (line 490)
        float_75212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 48), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 490, 47), list_75211, float_75212)
        # Adding element type (line 490)
        float_75213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 53), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 490, 47), list_75211, float_75213)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 490, 34), list_75207, list_75211)
        # Adding element type (line 490)
        
        # Obtaining an instance of the builtin type 'list' (line 490)
        list_75214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 59), 'list')
        # Adding type elements to the builtin type 'list' instance (line 490)
        # Adding element type (line 490)
        float_75215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 60), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 490, 59), list_75214, float_75215)
        # Adding element type (line 490)
        float_75216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 65), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 490, 59), list_75214, float_75216)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 490, 34), list_75207, list_75214)
        # Adding element type (line 490)
        
        # Obtaining an instance of the builtin type 'list' (line 491)
        list_75217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 491, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 491)
        # Adding element type (line 491)
        float_75218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 491, 36), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 491, 35), list_75217, float_75218)
        # Adding element type (line 491)
        float_75219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 491, 41), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 491, 35), list_75217, float_75219)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 490, 34), list_75207, list_75217)
        # Adding element type (line 490)
        
        # Obtaining an instance of the builtin type 'list' (line 491)
        list_75220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 491, 47), 'list')
        # Adding type elements to the builtin type 'list' instance (line 491)
        # Adding element type (line 491)
        float_75221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 491, 48), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 491, 47), list_75220, float_75221)
        # Adding element type (line 491)
        float_75222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 491, 53), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 491, 47), list_75220, float_75222)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 490, 34), list_75207, list_75220)
        
        # Processing the call keyword arguments (line 490)
        kwargs_75223 = {}
        # Getting the type of 'Path' (line 490)
        Path_75206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 29), 'Path', False)
        # Calling Path(args, kwargs) (line 490)
        Path_call_result_75224 = invoke(stypy.reporting.localization.Localization(__file__, 490, 29), Path_75206, *[list_75207], **kwargs_75223)
        
        # Getting the type of 'self' (line 490)
        self_75225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 12), 'self')
        # Setting the type of the member '_alt_path' of a type (line 490)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 12), self_75225, '_alt_path', Path_call_result_75224)
        
        # Call to rotate_deg(...): (line 492)
        # Processing the call arguments (line 492)
        # Getting the type of 'rotate' (line 492)
        rotate_75229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 39), 'rotate', False)
        # Processing the call keyword arguments (line 492)
        kwargs_75230 = {}
        # Getting the type of 'self' (line 492)
        self_75226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 12), 'self', False)
        # Obtaining the member '_transform' of a type (line 492)
        _transform_75227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 492, 12), self_75226, '_transform')
        # Obtaining the member 'rotate_deg' of a type (line 492)
        rotate_deg_75228 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 492, 12), _transform_75227, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 492)
        rotate_deg_call_result_75231 = invoke(stypy.reporting.localization.Localization(__file__, 492, 12), rotate_deg_75228, *[rotate_75229], **kwargs_75230)
        
        
        # Assigning a Attribute to a Attribute (line 493):
        
        # Assigning a Attribute to a Attribute (line 493):
        # Getting the type of 'self' (line 493)
        self_75232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 34), 'self')
        # Obtaining the member '_transform' of a type (line 493)
        _transform_75233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 493, 34), self_75232, '_transform')
        # Getting the type of 'self' (line 493)
        self_75234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 12), 'self')
        # Setting the type of the member '_alt_transform' of a type (line 493)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 493, 12), self_75234, '_alt_transform', _transform_75233)
        # SSA join for if statement (line 473)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Str to a Attribute (line 495):
        
        # Assigning a Str to a Attribute (line 495):
        unicode_75235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 26), 'unicode', u'miter')
        # Getting the type of 'self' (line 495)
        self_75236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 8), 'self')
        # Setting the type of the member '_joinstyle' of a type (line 495)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 495, 8), self_75236, '_joinstyle', unicode_75235)
        
        # ################# End of '_set_square(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_square' in the type store
        # Getting the type of 'stypy_return_type' (line 469)
        stypy_return_type_75237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_75237)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_square'
        return stypy_return_type_75237


    @norecursion
    def _set_diamond(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_diamond'
        module_type_store = module_type_store.open_function_context('_set_diamond', 497, 4, False)
        # Assigning a type to the variable 'self' (line 498)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 498, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_diamond.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_diamond.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_diamond.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_diamond.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_diamond')
        MarkerStyle._set_diamond.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_diamond.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_diamond.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_diamond.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_diamond.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_diamond.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_diamond.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_diamond', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_diamond', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_diamond(...)' code ##################

        
        # Assigning a Call to a Attribute (line 498):
        
        # Assigning a Call to a Attribute (line 498):
        
        # Call to rotate_deg(...): (line 498)
        # Processing the call arguments (line 498)
        int_75247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 498, 70), 'int')
        # Processing the call keyword arguments (line 498)
        kwargs_75248 = {}
        
        # Call to translate(...): (line 498)
        # Processing the call arguments (line 498)
        float_75242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 498, 47), 'float')
        float_75243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 498, 53), 'float')
        # Processing the call keyword arguments (line 498)
        kwargs_75244 = {}
        
        # Call to Affine2D(...): (line 498)
        # Processing the call keyword arguments (line 498)
        kwargs_75239 = {}
        # Getting the type of 'Affine2D' (line 498)
        Affine2D_75238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 498)
        Affine2D_call_result_75240 = invoke(stypy.reporting.localization.Localization(__file__, 498, 26), Affine2D_75238, *[], **kwargs_75239)
        
        # Obtaining the member 'translate' of a type (line 498)
        translate_75241 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 498, 26), Affine2D_call_result_75240, 'translate')
        # Calling translate(args, kwargs) (line 498)
        translate_call_result_75245 = invoke(stypy.reporting.localization.Localization(__file__, 498, 26), translate_75241, *[float_75242, float_75243], **kwargs_75244)
        
        # Obtaining the member 'rotate_deg' of a type (line 498)
        rotate_deg_75246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 498, 26), translate_call_result_75245, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 498)
        rotate_deg_call_result_75249 = invoke(stypy.reporting.localization.Localization(__file__, 498, 26), rotate_deg_75246, *[int_75247], **kwargs_75248)
        
        # Getting the type of 'self' (line 498)
        self_75250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 498)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 498, 8), self_75250, '_transform', rotate_deg_call_result_75249)
        
        # Assigning a Num to a Attribute (line 499):
        
        # Assigning a Num to a Attribute (line 499):
        float_75251 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 499, 31), 'float')
        # Getting the type of 'self' (line 499)
        self_75252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 499)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 8), self_75252, '_snap_threshold', float_75251)
        
        # Assigning a Call to a Name (line 500):
        
        # Assigning a Call to a Name (line 500):
        
        # Call to get_fillstyle(...): (line 500)
        # Processing the call keyword arguments (line 500)
        kwargs_75255 = {}
        # Getting the type of 'self' (line 500)
        self_75253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 13), 'self', False)
        # Obtaining the member 'get_fillstyle' of a type (line 500)
        get_fillstyle_75254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 500, 13), self_75253, 'get_fillstyle')
        # Calling get_fillstyle(args, kwargs) (line 500)
        get_fillstyle_call_result_75256 = invoke(stypy.reporting.localization.Localization(__file__, 500, 13), get_fillstyle_75254, *[], **kwargs_75255)
        
        # Assigning a type to the variable 'fs' (line 500)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 500, 8), 'fs', get_fillstyle_call_result_75256)
        
        
        
        # Call to _half_fill(...): (line 501)
        # Processing the call keyword arguments (line 501)
        kwargs_75259 = {}
        # Getting the type of 'self' (line 501)
        self_75257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 15), 'self', False)
        # Obtaining the member '_half_fill' of a type (line 501)
        _half_fill_75258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 501, 15), self_75257, '_half_fill')
        # Calling _half_fill(args, kwargs) (line 501)
        _half_fill_call_result_75260 = invoke(stypy.reporting.localization.Localization(__file__, 501, 15), _half_fill_75258, *[], **kwargs_75259)
        
        # Applying the 'not' unary operator (line 501)
        result_not__75261 = python_operator(stypy.reporting.localization.Localization(__file__, 501, 11), 'not', _half_fill_call_result_75260)
        
        # Testing the type of an if condition (line 501)
        if_condition_75262 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 501, 8), result_not__75261)
        # Assigning a type to the variable 'if_condition_75262' (line 501)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 501, 8), 'if_condition_75262', if_condition_75262)
        # SSA begins for if statement (line 501)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 502):
        
        # Assigning a Call to a Attribute (line 502):
        
        # Call to unit_rectangle(...): (line 502)
        # Processing the call keyword arguments (line 502)
        kwargs_75265 = {}
        # Getting the type of 'Path' (line 502)
        Path_75263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 25), 'Path', False)
        # Obtaining the member 'unit_rectangle' of a type (line 502)
        unit_rectangle_75264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 25), Path_75263, 'unit_rectangle')
        # Calling unit_rectangle(args, kwargs) (line 502)
        unit_rectangle_call_result_75266 = invoke(stypy.reporting.localization.Localization(__file__, 502, 25), unit_rectangle_75264, *[], **kwargs_75265)
        
        # Getting the type of 'self' (line 502)
        self_75267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 12), 'self')
        # Setting the type of the member '_path' of a type (line 502)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 12), self_75267, '_path', unit_rectangle_call_result_75266)
        # SSA branch for the else part of an if statement (line 501)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Attribute (line 504):
        
        # Assigning a Call to a Attribute (line 504):
        
        # Call to Path(...): (line 504)
        # Processing the call arguments (line 504)
        
        # Obtaining an instance of the builtin type 'list' (line 504)
        list_75269 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 504, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 504)
        # Adding element type (line 504)
        
        # Obtaining an instance of the builtin type 'list' (line 504)
        list_75270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 504, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 504)
        # Adding element type (line 504)
        float_75271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 504, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 31), list_75270, float_75271)
        # Adding element type (line 504)
        float_75272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 504, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 31), list_75270, float_75272)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 30), list_75269, list_75270)
        # Adding element type (line 504)
        
        # Obtaining an instance of the builtin type 'list' (line 504)
        list_75273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 504, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 504)
        # Adding element type (line 504)
        float_75274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 504, 44), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 43), list_75273, float_75274)
        # Adding element type (line 504)
        float_75275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 504, 49), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 43), list_75273, float_75275)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 30), list_75269, list_75273)
        # Adding element type (line 504)
        
        # Obtaining an instance of the builtin type 'list' (line 504)
        list_75276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 504, 55), 'list')
        # Adding type elements to the builtin type 'list' instance (line 504)
        # Adding element type (line 504)
        float_75277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 504, 56), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 55), list_75276, float_75277)
        # Adding element type (line 504)
        float_75278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 504, 61), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 55), list_75276, float_75278)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 30), list_75269, list_75276)
        # Adding element type (line 504)
        
        # Obtaining an instance of the builtin type 'list' (line 504)
        list_75279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 504, 67), 'list')
        # Adding type elements to the builtin type 'list' instance (line 504)
        # Adding element type (line 504)
        float_75280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 504, 68), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 67), list_75279, float_75280)
        # Adding element type (line 504)
        float_75281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 504, 73), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 67), list_75279, float_75281)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 30), list_75269, list_75279)
        
        # Processing the call keyword arguments (line 504)
        kwargs_75282 = {}
        # Getting the type of 'Path' (line 504)
        Path_75268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 25), 'Path', False)
        # Calling Path(args, kwargs) (line 504)
        Path_call_result_75283 = invoke(stypy.reporting.localization.Localization(__file__, 504, 25), Path_75268, *[list_75269], **kwargs_75282)
        
        # Getting the type of 'self' (line 504)
        self_75284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 12), 'self')
        # Setting the type of the member '_path' of a type (line 504)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 504, 12), self_75284, '_path', Path_call_result_75283)
        
        # Assigning a Call to a Attribute (line 505):
        
        # Assigning a Call to a Attribute (line 505):
        
        # Call to Path(...): (line 505)
        # Processing the call arguments (line 505)
        
        # Obtaining an instance of the builtin type 'list' (line 505)
        list_75286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 505)
        # Adding element type (line 505)
        
        # Obtaining an instance of the builtin type 'list' (line 505)
        list_75287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 505)
        # Adding element type (line 505)
        float_75288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 36), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 505, 35), list_75287, float_75288)
        # Adding element type (line 505)
        float_75289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 41), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 505, 35), list_75287, float_75289)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 505, 34), list_75286, list_75287)
        # Adding element type (line 505)
        
        # Obtaining an instance of the builtin type 'list' (line 505)
        list_75290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 47), 'list')
        # Adding type elements to the builtin type 'list' instance (line 505)
        # Adding element type (line 505)
        float_75291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 48), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 505, 47), list_75290, float_75291)
        # Adding element type (line 505)
        float_75292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 53), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 505, 47), list_75290, float_75292)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 505, 34), list_75286, list_75290)
        # Adding element type (line 505)
        
        # Obtaining an instance of the builtin type 'list' (line 506)
        list_75293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 506)
        # Adding element type (line 506)
        float_75294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 36), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 506, 35), list_75293, float_75294)
        # Adding element type (line 506)
        float_75295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 41), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 506, 35), list_75293, float_75295)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 505, 34), list_75286, list_75293)
        # Adding element type (line 505)
        
        # Obtaining an instance of the builtin type 'list' (line 506)
        list_75296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 47), 'list')
        # Adding type elements to the builtin type 'list' instance (line 506)
        # Adding element type (line 506)
        float_75297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 48), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 506, 47), list_75296, float_75297)
        # Adding element type (line 506)
        float_75298 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 53), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 506, 47), list_75296, float_75298)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 505, 34), list_75286, list_75296)
        
        # Processing the call keyword arguments (line 505)
        kwargs_75299 = {}
        # Getting the type of 'Path' (line 505)
        Path_75285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 29), 'Path', False)
        # Calling Path(args, kwargs) (line 505)
        Path_call_result_75300 = invoke(stypy.reporting.localization.Localization(__file__, 505, 29), Path_75285, *[list_75286], **kwargs_75299)
        
        # Getting the type of 'self' (line 505)
        self_75301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 12), 'self')
        # Setting the type of the member '_alt_path' of a type (line 505)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 505, 12), self_75301, '_alt_path', Path_call_result_75300)
        
        
        # Getting the type of 'fs' (line 508)
        fs_75302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 15), 'fs')
        unicode_75303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 508, 21), 'unicode', u'bottom')
        # Applying the binary operator '==' (line 508)
        result_eq_75304 = python_operator(stypy.reporting.localization.Localization(__file__, 508, 15), '==', fs_75302, unicode_75303)
        
        # Testing the type of an if condition (line 508)
        if_condition_75305 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 508, 12), result_eq_75304)
        # Assigning a type to the variable 'if_condition_75305' (line 508)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 508, 12), 'if_condition_75305', if_condition_75305)
        # SSA begins for if statement (line 508)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 509):
        
        # Assigning a Num to a Name (line 509):
        float_75306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 25), 'float')
        # Assigning a type to the variable 'rotate' (line 509)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 509, 16), 'rotate', float_75306)
        # SSA branch for the else part of an if statement (line 508)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 510)
        fs_75307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 17), 'fs')
        unicode_75308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 510, 23), 'unicode', u'top')
        # Applying the binary operator '==' (line 510)
        result_eq_75309 = python_operator(stypy.reporting.localization.Localization(__file__, 510, 17), '==', fs_75307, unicode_75308)
        
        # Testing the type of an if condition (line 510)
        if_condition_75310 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 510, 17), result_eq_75309)
        # Assigning a type to the variable 'if_condition_75310' (line 510)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 510, 17), 'if_condition_75310', if_condition_75310)
        # SSA begins for if statement (line 510)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 511):
        
        # Assigning a Num to a Name (line 511):
        float_75311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 511, 25), 'float')
        # Assigning a type to the variable 'rotate' (line 511)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 511, 16), 'rotate', float_75311)
        # SSA branch for the else part of an if statement (line 510)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 512)
        fs_75312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 512, 17), 'fs')
        unicode_75313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 512, 23), 'unicode', u'left')
        # Applying the binary operator '==' (line 512)
        result_eq_75314 = python_operator(stypy.reporting.localization.Localization(__file__, 512, 17), '==', fs_75312, unicode_75313)
        
        # Testing the type of an if condition (line 512)
        if_condition_75315 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 512, 17), result_eq_75314)
        # Assigning a type to the variable 'if_condition_75315' (line 512)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 512, 17), 'if_condition_75315', if_condition_75315)
        # SSA begins for if statement (line 512)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 513):
        
        # Assigning a Num to a Name (line 513):
        float_75316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 25), 'float')
        # Assigning a type to the variable 'rotate' (line 513)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 513, 16), 'rotate', float_75316)
        # SSA branch for the else part of an if statement (line 512)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Num to a Name (line 515):
        
        # Assigning a Num to a Name (line 515):
        float_75317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 515, 25), 'float')
        # Assigning a type to the variable 'rotate' (line 515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 515, 16), 'rotate', float_75317)
        # SSA join for if statement (line 512)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 510)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 508)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to rotate_deg(...): (line 517)
        # Processing the call arguments (line 517)
        # Getting the type of 'rotate' (line 517)
        rotate_75321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 39), 'rotate', False)
        # Processing the call keyword arguments (line 517)
        kwargs_75322 = {}
        # Getting the type of 'self' (line 517)
        self_75318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 12), 'self', False)
        # Obtaining the member '_transform' of a type (line 517)
        _transform_75319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 517, 12), self_75318, '_transform')
        # Obtaining the member 'rotate_deg' of a type (line 517)
        rotate_deg_75320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 517, 12), _transform_75319, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 517)
        rotate_deg_call_result_75323 = invoke(stypy.reporting.localization.Localization(__file__, 517, 12), rotate_deg_75320, *[rotate_75321], **kwargs_75322)
        
        
        # Assigning a Attribute to a Attribute (line 518):
        
        # Assigning a Attribute to a Attribute (line 518):
        # Getting the type of 'self' (line 518)
        self_75324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 34), 'self')
        # Obtaining the member '_transform' of a type (line 518)
        _transform_75325 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 34), self_75324, '_transform')
        # Getting the type of 'self' (line 518)
        self_75326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 12), 'self')
        # Setting the type of the member '_alt_transform' of a type (line 518)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 12), self_75326, '_alt_transform', _transform_75325)
        # SSA join for if statement (line 501)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Str to a Attribute (line 520):
        
        # Assigning a Str to a Attribute (line 520):
        unicode_75327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 520, 26), 'unicode', u'miter')
        # Getting the type of 'self' (line 520)
        self_75328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 8), 'self')
        # Setting the type of the member '_joinstyle' of a type (line 520)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 520, 8), self_75328, '_joinstyle', unicode_75327)
        
        # ################# End of '_set_diamond(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_diamond' in the type store
        # Getting the type of 'stypy_return_type' (line 497)
        stypy_return_type_75329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_75329)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_diamond'
        return stypy_return_type_75329


    @norecursion
    def _set_thin_diamond(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_thin_diamond'
        module_type_store = module_type_store.open_function_context('_set_thin_diamond', 522, 4, False)
        # Assigning a type to the variable 'self' (line 523)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 523, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_thin_diamond.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_thin_diamond.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_thin_diamond.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_thin_diamond.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_thin_diamond')
        MarkerStyle._set_thin_diamond.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_thin_diamond.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_thin_diamond.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_thin_diamond.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_thin_diamond.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_thin_diamond.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_thin_diamond.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_thin_diamond', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_thin_diamond', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_thin_diamond(...)' code ##################

        
        # Call to _set_diamond(...): (line 523)
        # Processing the call keyword arguments (line 523)
        kwargs_75332 = {}
        # Getting the type of 'self' (line 523)
        self_75330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 8), 'self', False)
        # Obtaining the member '_set_diamond' of a type (line 523)
        _set_diamond_75331 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 523, 8), self_75330, '_set_diamond')
        # Calling _set_diamond(args, kwargs) (line 523)
        _set_diamond_call_result_75333 = invoke(stypy.reporting.localization.Localization(__file__, 523, 8), _set_diamond_75331, *[], **kwargs_75332)
        
        
        # Call to scale(...): (line 524)
        # Processing the call arguments (line 524)
        float_75337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 524, 30), 'float')
        float_75338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 524, 35), 'float')
        # Processing the call keyword arguments (line 524)
        kwargs_75339 = {}
        # Getting the type of 'self' (line 524)
        self_75334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 8), 'self', False)
        # Obtaining the member '_transform' of a type (line 524)
        _transform_75335 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 524, 8), self_75334, '_transform')
        # Obtaining the member 'scale' of a type (line 524)
        scale_75336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 524, 8), _transform_75335, 'scale')
        # Calling scale(args, kwargs) (line 524)
        scale_call_result_75340 = invoke(stypy.reporting.localization.Localization(__file__, 524, 8), scale_75336, *[float_75337, float_75338], **kwargs_75339)
        
        
        # ################# End of '_set_thin_diamond(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_thin_diamond' in the type store
        # Getting the type of 'stypy_return_type' (line 522)
        stypy_return_type_75341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_75341)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_thin_diamond'
        return stypy_return_type_75341


    @norecursion
    def _set_pentagon(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_pentagon'
        module_type_store = module_type_store.open_function_context('_set_pentagon', 526, 4, False)
        # Assigning a type to the variable 'self' (line 527)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 527, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_pentagon.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_pentagon.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_pentagon.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_pentagon.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_pentagon')
        MarkerStyle._set_pentagon.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_pentagon.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_pentagon.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_pentagon.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_pentagon.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_pentagon.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_pentagon.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_pentagon', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_pentagon', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_pentagon(...)' code ##################

        
        # Assigning a Call to a Attribute (line 527):
        
        # Assigning a Call to a Attribute (line 527):
        
        # Call to scale(...): (line 527)
        # Processing the call arguments (line 527)
        float_75346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 527, 43), 'float')
        # Processing the call keyword arguments (line 527)
        kwargs_75347 = {}
        
        # Call to Affine2D(...): (line 527)
        # Processing the call keyword arguments (line 527)
        kwargs_75343 = {}
        # Getting the type of 'Affine2D' (line 527)
        Affine2D_75342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 527)
        Affine2D_call_result_75344 = invoke(stypy.reporting.localization.Localization(__file__, 527, 26), Affine2D_75342, *[], **kwargs_75343)
        
        # Obtaining the member 'scale' of a type (line 527)
        scale_75345 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 527, 26), Affine2D_call_result_75344, 'scale')
        # Calling scale(args, kwargs) (line 527)
        scale_call_result_75348 = invoke(stypy.reporting.localization.Localization(__file__, 527, 26), scale_75345, *[float_75346], **kwargs_75347)
        
        # Getting the type of 'self' (line 527)
        self_75349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 527)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 527, 8), self_75349, '_transform', scale_call_result_75348)
        
        # Assigning a Num to a Attribute (line 528):
        
        # Assigning a Num to a Attribute (line 528):
        float_75350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 528, 31), 'float')
        # Getting the type of 'self' (line 528)
        self_75351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 528)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 8), self_75351, '_snap_threshold', float_75350)
        
        # Assigning a Call to a Name (line 530):
        
        # Assigning a Call to a Name (line 530):
        
        # Call to unit_regular_polygon(...): (line 530)
        # Processing the call arguments (line 530)
        int_75354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 530, 45), 'int')
        # Processing the call keyword arguments (line 530)
        kwargs_75355 = {}
        # Getting the type of 'Path' (line 530)
        Path_75352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 19), 'Path', False)
        # Obtaining the member 'unit_regular_polygon' of a type (line 530)
        unit_regular_polygon_75353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 19), Path_75352, 'unit_regular_polygon')
        # Calling unit_regular_polygon(args, kwargs) (line 530)
        unit_regular_polygon_call_result_75356 = invoke(stypy.reporting.localization.Localization(__file__, 530, 19), unit_regular_polygon_75353, *[int_75354], **kwargs_75355)
        
        # Assigning a type to the variable 'polypath' (line 530)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 530, 8), 'polypath', unit_regular_polygon_call_result_75356)
        
        # Assigning a Call to a Name (line 531):
        
        # Assigning a Call to a Name (line 531):
        
        # Call to get_fillstyle(...): (line 531)
        # Processing the call keyword arguments (line 531)
        kwargs_75359 = {}
        # Getting the type of 'self' (line 531)
        self_75357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 13), 'self', False)
        # Obtaining the member 'get_fillstyle' of a type (line 531)
        get_fillstyle_75358 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 13), self_75357, 'get_fillstyle')
        # Calling get_fillstyle(args, kwargs) (line 531)
        get_fillstyle_call_result_75360 = invoke(stypy.reporting.localization.Localization(__file__, 531, 13), get_fillstyle_75358, *[], **kwargs_75359)
        
        # Assigning a type to the variable 'fs' (line 531)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 531, 8), 'fs', get_fillstyle_call_result_75360)
        
        
        
        # Call to _half_fill(...): (line 533)
        # Processing the call keyword arguments (line 533)
        kwargs_75363 = {}
        # Getting the type of 'self' (line 533)
        self_75361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 15), 'self', False)
        # Obtaining the member '_half_fill' of a type (line 533)
        _half_fill_75362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 533, 15), self_75361, '_half_fill')
        # Calling _half_fill(args, kwargs) (line 533)
        _half_fill_call_result_75364 = invoke(stypy.reporting.localization.Localization(__file__, 533, 15), _half_fill_75362, *[], **kwargs_75363)
        
        # Applying the 'not' unary operator (line 533)
        result_not__75365 = python_operator(stypy.reporting.localization.Localization(__file__, 533, 11), 'not', _half_fill_call_result_75364)
        
        # Testing the type of an if condition (line 533)
        if_condition_75366 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 533, 8), result_not__75365)
        # Assigning a type to the variable 'if_condition_75366' (line 533)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 533, 8), 'if_condition_75366', if_condition_75366)
        # SSA begins for if statement (line 533)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Attribute (line 534):
        
        # Assigning a Name to a Attribute (line 534):
        # Getting the type of 'polypath' (line 534)
        polypath_75367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 25), 'polypath')
        # Getting the type of 'self' (line 534)
        self_75368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 12), 'self')
        # Setting the type of the member '_path' of a type (line 534)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 12), self_75368, '_path', polypath_75367)
        # SSA branch for the else part of an if statement (line 533)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Attribute to a Name (line 536):
        
        # Assigning a Attribute to a Name (line 536):
        # Getting the type of 'polypath' (line 536)
        polypath_75369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 20), 'polypath')
        # Obtaining the member 'vertices' of a type (line 536)
        vertices_75370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 20), polypath_75369, 'vertices')
        # Assigning a type to the variable 'verts' (line 536)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 536, 12), 'verts', vertices_75370)
        
        # Assigning a BinOp to a Name (line 538):
        
        # Assigning a BinOp to a Name (line 538):
        int_75371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 538, 17), 'int')
        
        # Call to sqrt(...): (line 538)
        # Processing the call arguments (line 538)
        int_75374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 538, 29), 'int')
        # Processing the call keyword arguments (line 538)
        kwargs_75375 = {}
        # Getting the type of 'np' (line 538)
        np_75372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 21), 'np', False)
        # Obtaining the member 'sqrt' of a type (line 538)
        sqrt_75373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 538, 21), np_75372, 'sqrt')
        # Calling sqrt(args, kwargs) (line 538)
        sqrt_call_result_75376 = invoke(stypy.reporting.localization.Localization(__file__, 538, 21), sqrt_75373, *[int_75374], **kwargs_75375)
        
        # Applying the binary operator '+' (line 538)
        result_add_75377 = python_operator(stypy.reporting.localization.Localization(__file__, 538, 17), '+', int_75371, sqrt_call_result_75376)
        
        float_75378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 538, 35), 'float')
        # Applying the binary operator 'div' (line 538)
        result_div_75379 = python_operator(stypy.reporting.localization.Localization(__file__, 538, 16), 'div', result_add_75377, float_75378)
        
        # Assigning a type to the variable 'y' (line 538)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 538, 12), 'y', result_div_75379)
        
        # Assigning a Call to a Name (line 539):
        
        # Assigning a Call to a Name (line 539):
        
        # Call to Path(...): (line 539)
        # Processing the call arguments (line 539)
        
        # Obtaining an instance of the builtin type 'list' (line 539)
        list_75381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 539)
        # Adding element type (line 539)
        
        # Obtaining the type of the subscript
        int_75382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 30), 'int')
        # Getting the type of 'verts' (line 539)
        verts_75383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 24), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 539)
        getitem___75384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 24), verts_75383, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 539)
        subscript_call_result_75385 = invoke(stypy.reporting.localization.Localization(__file__, 539, 24), getitem___75384, int_75382)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 539, 23), list_75381, subscript_call_result_75385)
        # Adding element type (line 539)
        
        # Obtaining the type of the subscript
        int_75386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 40), 'int')
        # Getting the type of 'verts' (line 539)
        verts_75387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 34), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 539)
        getitem___75388 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 34), verts_75387, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 539)
        subscript_call_result_75389 = invoke(stypy.reporting.localization.Localization(__file__, 539, 34), getitem___75388, int_75386)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 539, 23), list_75381, subscript_call_result_75389)
        # Adding element type (line 539)
        
        # Obtaining the type of the subscript
        int_75390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 50), 'int')
        # Getting the type of 'verts' (line 539)
        verts_75391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 44), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 539)
        getitem___75392 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 44), verts_75391, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 539)
        subscript_call_result_75393 = invoke(stypy.reporting.localization.Localization(__file__, 539, 44), getitem___75392, int_75390)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 539, 23), list_75381, subscript_call_result_75393)
        # Adding element type (line 539)
        
        # Obtaining the type of the subscript
        int_75394 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 60), 'int')
        # Getting the type of 'verts' (line 539)
        verts_75395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 54), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 539)
        getitem___75396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 54), verts_75395, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 539)
        subscript_call_result_75397 = invoke(stypy.reporting.localization.Localization(__file__, 539, 54), getitem___75396, int_75394)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 539, 23), list_75381, subscript_call_result_75397)
        
        # Processing the call keyword arguments (line 539)
        kwargs_75398 = {}
        # Getting the type of 'Path' (line 539)
        Path_75380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 18), 'Path', False)
        # Calling Path(args, kwargs) (line 539)
        Path_call_result_75399 = invoke(stypy.reporting.localization.Localization(__file__, 539, 18), Path_75380, *[list_75381], **kwargs_75398)
        
        # Assigning a type to the variable 'top' (line 539)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 539, 12), 'top', Path_call_result_75399)
        
        # Assigning a Call to a Name (line 540):
        
        # Assigning a Call to a Name (line 540):
        
        # Call to Path(...): (line 540)
        # Processing the call arguments (line 540)
        
        # Obtaining an instance of the builtin type 'list' (line 540)
        list_75401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 540)
        # Adding element type (line 540)
        
        # Obtaining the type of the subscript
        int_75402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 33), 'int')
        # Getting the type of 'verts' (line 540)
        verts_75403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 27), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 540)
        getitem___75404 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 27), verts_75403, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 540)
        subscript_call_result_75405 = invoke(stypy.reporting.localization.Localization(__file__, 540, 27), getitem___75404, int_75402)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 540, 26), list_75401, subscript_call_result_75405)
        # Adding element type (line 540)
        
        # Obtaining the type of the subscript
        int_75406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 43), 'int')
        # Getting the type of 'verts' (line 540)
        verts_75407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 37), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 540)
        getitem___75408 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 37), verts_75407, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 540)
        subscript_call_result_75409 = invoke(stypy.reporting.localization.Localization(__file__, 540, 37), getitem___75408, int_75406)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 540, 26), list_75401, subscript_call_result_75409)
        # Adding element type (line 540)
        
        # Obtaining the type of the subscript
        int_75410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 53), 'int')
        # Getting the type of 'verts' (line 540)
        verts_75411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 47), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 540)
        getitem___75412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 47), verts_75411, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 540)
        subscript_call_result_75413 = invoke(stypy.reporting.localization.Localization(__file__, 540, 47), getitem___75412, int_75410)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 540, 26), list_75401, subscript_call_result_75413)
        # Adding element type (line 540)
        
        # Obtaining the type of the subscript
        int_75414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 63), 'int')
        # Getting the type of 'verts' (line 540)
        verts_75415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 57), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 540)
        getitem___75416 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 57), verts_75415, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 540)
        subscript_call_result_75417 = invoke(stypy.reporting.localization.Localization(__file__, 540, 57), getitem___75416, int_75414)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 540, 26), list_75401, subscript_call_result_75417)
        # Adding element type (line 540)
        
        # Obtaining the type of the subscript
        int_75418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 73), 'int')
        # Getting the type of 'verts' (line 540)
        verts_75419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 67), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 540)
        getitem___75420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 67), verts_75419, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 540)
        subscript_call_result_75421 = invoke(stypy.reporting.localization.Localization(__file__, 540, 67), getitem___75420, int_75418)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 540, 26), list_75401, subscript_call_result_75421)
        
        # Processing the call keyword arguments (line 540)
        kwargs_75422 = {}
        # Getting the type of 'Path' (line 540)
        Path_75400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 21), 'Path', False)
        # Calling Path(args, kwargs) (line 540)
        Path_call_result_75423 = invoke(stypy.reporting.localization.Localization(__file__, 540, 21), Path_75400, *[list_75401], **kwargs_75422)
        
        # Assigning a type to the variable 'bottom' (line 540)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 540, 12), 'bottom', Path_call_result_75423)
        
        # Assigning a Call to a Name (line 541):
        
        # Assigning a Call to a Name (line 541):
        
        # Call to Path(...): (line 541)
        # Processing the call arguments (line 541)
        
        # Obtaining an instance of the builtin type 'list' (line 541)
        list_75425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 541)
        # Adding element type (line 541)
        
        # Obtaining the type of the subscript
        int_75426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 31), 'int')
        # Getting the type of 'verts' (line 541)
        verts_75427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 25), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 541)
        getitem___75428 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 25), verts_75427, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 541)
        subscript_call_result_75429 = invoke(stypy.reporting.localization.Localization(__file__, 541, 25), getitem___75428, int_75426)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 24), list_75425, subscript_call_result_75429)
        # Adding element type (line 541)
        
        # Obtaining the type of the subscript
        int_75430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 41), 'int')
        # Getting the type of 'verts' (line 541)
        verts_75431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 35), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 541)
        getitem___75432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 35), verts_75431, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 541)
        subscript_call_result_75433 = invoke(stypy.reporting.localization.Localization(__file__, 541, 35), getitem___75432, int_75430)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 24), list_75425, subscript_call_result_75433)
        # Adding element type (line 541)
        
        # Obtaining the type of the subscript
        int_75434 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 51), 'int')
        # Getting the type of 'verts' (line 541)
        verts_75435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 45), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 541)
        getitem___75436 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 45), verts_75435, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 541)
        subscript_call_result_75437 = invoke(stypy.reporting.localization.Localization(__file__, 541, 45), getitem___75436, int_75434)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 24), list_75425, subscript_call_result_75437)
        # Adding element type (line 541)
        
        # Obtaining an instance of the builtin type 'list' (line 541)
        list_75438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 55), 'list')
        # Adding type elements to the builtin type 'list' instance (line 541)
        # Adding element type (line 541)
        int_75439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 55), list_75438, int_75439)
        # Adding element type (line 541)
        
        # Getting the type of 'y' (line 541)
        y_75440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 60), 'y', False)
        # Applying the 'usub' unary operator (line 541)
        result___neg___75441 = python_operator(stypy.reporting.localization.Localization(__file__, 541, 59), 'usub', y_75440)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 55), list_75438, result___neg___75441)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 24), list_75425, list_75438)
        # Adding element type (line 541)
        
        # Obtaining the type of the subscript
        int_75442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 70), 'int')
        # Getting the type of 'verts' (line 541)
        verts_75443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 64), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 541)
        getitem___75444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 64), verts_75443, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 541)
        subscript_call_result_75445 = invoke(stypy.reporting.localization.Localization(__file__, 541, 64), getitem___75444, int_75442)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 24), list_75425, subscript_call_result_75445)
        
        # Processing the call keyword arguments (line 541)
        kwargs_75446 = {}
        # Getting the type of 'Path' (line 541)
        Path_75424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 19), 'Path', False)
        # Calling Path(args, kwargs) (line 541)
        Path_call_result_75447 = invoke(stypy.reporting.localization.Localization(__file__, 541, 19), Path_75424, *[list_75425], **kwargs_75446)
        
        # Assigning a type to the variable 'left' (line 541)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 541, 12), 'left', Path_call_result_75447)
        
        # Assigning a Call to a Name (line 542):
        
        # Assigning a Call to a Name (line 542):
        
        # Call to Path(...): (line 542)
        # Processing the call arguments (line 542)
        
        # Obtaining an instance of the builtin type 'list' (line 542)
        list_75449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 542)
        # Adding element type (line 542)
        
        # Obtaining the type of the subscript
        int_75450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 32), 'int')
        # Getting the type of 'verts' (line 542)
        verts_75451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 26), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 542)
        getitem___75452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 542, 26), verts_75451, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 542)
        subscript_call_result_75453 = invoke(stypy.reporting.localization.Localization(__file__, 542, 26), getitem___75452, int_75450)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 542, 25), list_75449, subscript_call_result_75453)
        # Adding element type (line 542)
        
        # Obtaining the type of the subscript
        int_75454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 42), 'int')
        # Getting the type of 'verts' (line 542)
        verts_75455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 36), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 542)
        getitem___75456 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 542, 36), verts_75455, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 542)
        subscript_call_result_75457 = invoke(stypy.reporting.localization.Localization(__file__, 542, 36), getitem___75456, int_75454)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 542, 25), list_75449, subscript_call_result_75457)
        # Adding element type (line 542)
        
        # Obtaining the type of the subscript
        int_75458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 52), 'int')
        # Getting the type of 'verts' (line 542)
        verts_75459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 46), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 542)
        getitem___75460 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 542, 46), verts_75459, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 542)
        subscript_call_result_75461 = invoke(stypy.reporting.localization.Localization(__file__, 542, 46), getitem___75460, int_75458)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 542, 25), list_75449, subscript_call_result_75461)
        # Adding element type (line 542)
        
        # Obtaining an instance of the builtin type 'list' (line 542)
        list_75462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 56), 'list')
        # Adding type elements to the builtin type 'list' instance (line 542)
        # Adding element type (line 542)
        int_75463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 57), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 542, 56), list_75462, int_75463)
        # Adding element type (line 542)
        
        # Getting the type of 'y' (line 542)
        y_75464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 61), 'y', False)
        # Applying the 'usub' unary operator (line 542)
        result___neg___75465 = python_operator(stypy.reporting.localization.Localization(__file__, 542, 60), 'usub', y_75464)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 542, 56), list_75462, result___neg___75465)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 542, 25), list_75449, list_75462)
        # Adding element type (line 542)
        
        # Obtaining the type of the subscript
        int_75466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 71), 'int')
        # Getting the type of 'verts' (line 542)
        verts_75467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 65), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 542)
        getitem___75468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 542, 65), verts_75467, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 542)
        subscript_call_result_75469 = invoke(stypy.reporting.localization.Localization(__file__, 542, 65), getitem___75468, int_75466)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 542, 25), list_75449, subscript_call_result_75469)
        
        # Processing the call keyword arguments (line 542)
        kwargs_75470 = {}
        # Getting the type of 'Path' (line 542)
        Path_75448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 20), 'Path', False)
        # Calling Path(args, kwargs) (line 542)
        Path_call_result_75471 = invoke(stypy.reporting.localization.Localization(__file__, 542, 20), Path_75448, *[list_75449], **kwargs_75470)
        
        # Assigning a type to the variable 'right' (line 542)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 542, 12), 'right', Path_call_result_75471)
        
        
        # Getting the type of 'fs' (line 544)
        fs_75472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 15), 'fs')
        unicode_75473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 21), 'unicode', u'top')
        # Applying the binary operator '==' (line 544)
        result_eq_75474 = python_operator(stypy.reporting.localization.Localization(__file__, 544, 15), '==', fs_75472, unicode_75473)
        
        # Testing the type of an if condition (line 544)
        if_condition_75475 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 544, 12), result_eq_75474)
        # Assigning a type to the variable 'if_condition_75475' (line 544)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 12), 'if_condition_75475', if_condition_75475)
        # SSA begins for if statement (line 544)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 545):
        
        # Assigning a Name to a Name (line 545):
        # Getting the type of 'top' (line 545)
        top_75476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 35), 'top')
        # Assigning a type to the variable 'tuple_assignment_74170' (line 545)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 16), 'tuple_assignment_74170', top_75476)
        
        # Assigning a Name to a Name (line 545):
        # Getting the type of 'bottom' (line 545)
        bottom_75477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 40), 'bottom')
        # Assigning a type to the variable 'tuple_assignment_74171' (line 545)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 16), 'tuple_assignment_74171', bottom_75477)
        
        # Assigning a Name to a Name (line 545):
        # Getting the type of 'tuple_assignment_74170' (line 545)
        tuple_assignment_74170_75478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 16), 'tuple_assignment_74170')
        # Assigning a type to the variable 'mpath' (line 545)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 16), 'mpath', tuple_assignment_74170_75478)
        
        # Assigning a Name to a Name (line 545):
        # Getting the type of 'tuple_assignment_74171' (line 545)
        tuple_assignment_74171_75479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 16), 'tuple_assignment_74171')
        # Assigning a type to the variable 'mpath_alt' (line 545)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 23), 'mpath_alt', tuple_assignment_74171_75479)
        # SSA branch for the else part of an if statement (line 544)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 546)
        fs_75480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 17), 'fs')
        unicode_75481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 546, 23), 'unicode', u'bottom')
        # Applying the binary operator '==' (line 546)
        result_eq_75482 = python_operator(stypy.reporting.localization.Localization(__file__, 546, 17), '==', fs_75480, unicode_75481)
        
        # Testing the type of an if condition (line 546)
        if_condition_75483 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 546, 17), result_eq_75482)
        # Assigning a type to the variable 'if_condition_75483' (line 546)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 546, 17), 'if_condition_75483', if_condition_75483)
        # SSA begins for if statement (line 546)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 547):
        
        # Assigning a Name to a Name (line 547):
        # Getting the type of 'bottom' (line 547)
        bottom_75484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 35), 'bottom')
        # Assigning a type to the variable 'tuple_assignment_74172' (line 547)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 547, 16), 'tuple_assignment_74172', bottom_75484)
        
        # Assigning a Name to a Name (line 547):
        # Getting the type of 'top' (line 547)
        top_75485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 43), 'top')
        # Assigning a type to the variable 'tuple_assignment_74173' (line 547)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 547, 16), 'tuple_assignment_74173', top_75485)
        
        # Assigning a Name to a Name (line 547):
        # Getting the type of 'tuple_assignment_74172' (line 547)
        tuple_assignment_74172_75486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 16), 'tuple_assignment_74172')
        # Assigning a type to the variable 'mpath' (line 547)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 547, 16), 'mpath', tuple_assignment_74172_75486)
        
        # Assigning a Name to a Name (line 547):
        # Getting the type of 'tuple_assignment_74173' (line 547)
        tuple_assignment_74173_75487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 16), 'tuple_assignment_74173')
        # Assigning a type to the variable 'mpath_alt' (line 547)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 547, 23), 'mpath_alt', tuple_assignment_74173_75487)
        # SSA branch for the else part of an if statement (line 546)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 548)
        fs_75488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 17), 'fs')
        unicode_75489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 23), 'unicode', u'left')
        # Applying the binary operator '==' (line 548)
        result_eq_75490 = python_operator(stypy.reporting.localization.Localization(__file__, 548, 17), '==', fs_75488, unicode_75489)
        
        # Testing the type of an if condition (line 548)
        if_condition_75491 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 548, 17), result_eq_75490)
        # Assigning a type to the variable 'if_condition_75491' (line 548)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 548, 17), 'if_condition_75491', if_condition_75491)
        # SSA begins for if statement (line 548)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 549):
        
        # Assigning a Name to a Name (line 549):
        # Getting the type of 'left' (line 549)
        left_75492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 35), 'left')
        # Assigning a type to the variable 'tuple_assignment_74174' (line 549)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 549, 16), 'tuple_assignment_74174', left_75492)
        
        # Assigning a Name to a Name (line 549):
        # Getting the type of 'right' (line 549)
        right_75493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 41), 'right')
        # Assigning a type to the variable 'tuple_assignment_74175' (line 549)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 549, 16), 'tuple_assignment_74175', right_75493)
        
        # Assigning a Name to a Name (line 549):
        # Getting the type of 'tuple_assignment_74174' (line 549)
        tuple_assignment_74174_75494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 16), 'tuple_assignment_74174')
        # Assigning a type to the variable 'mpath' (line 549)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 549, 16), 'mpath', tuple_assignment_74174_75494)
        
        # Assigning a Name to a Name (line 549):
        # Getting the type of 'tuple_assignment_74175' (line 549)
        tuple_assignment_74175_75495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 16), 'tuple_assignment_74175')
        # Assigning a type to the variable 'mpath_alt' (line 549)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 549, 23), 'mpath_alt', tuple_assignment_74175_75495)
        # SSA branch for the else part of an if statement (line 548)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Tuple to a Tuple (line 551):
        
        # Assigning a Name to a Name (line 551):
        # Getting the type of 'right' (line 551)
        right_75496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 35), 'right')
        # Assigning a type to the variable 'tuple_assignment_74176' (line 551)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 551, 16), 'tuple_assignment_74176', right_75496)
        
        # Assigning a Name to a Name (line 551):
        # Getting the type of 'left' (line 551)
        left_75497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 42), 'left')
        # Assigning a type to the variable 'tuple_assignment_74177' (line 551)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 551, 16), 'tuple_assignment_74177', left_75497)
        
        # Assigning a Name to a Name (line 551):
        # Getting the type of 'tuple_assignment_74176' (line 551)
        tuple_assignment_74176_75498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 16), 'tuple_assignment_74176')
        # Assigning a type to the variable 'mpath' (line 551)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 551, 16), 'mpath', tuple_assignment_74176_75498)
        
        # Assigning a Name to a Name (line 551):
        # Getting the type of 'tuple_assignment_74177' (line 551)
        tuple_assignment_74177_75499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 16), 'tuple_assignment_74177')
        # Assigning a type to the variable 'mpath_alt' (line 551)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 551, 23), 'mpath_alt', tuple_assignment_74177_75499)
        # SSA join for if statement (line 548)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 546)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 544)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 552):
        
        # Assigning a Name to a Attribute (line 552):
        # Getting the type of 'mpath' (line 552)
        mpath_75500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 25), 'mpath')
        # Getting the type of 'self' (line 552)
        self_75501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 12), 'self')
        # Setting the type of the member '_path' of a type (line 552)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 12), self_75501, '_path', mpath_75500)
        
        # Assigning a Name to a Attribute (line 553):
        
        # Assigning a Name to a Attribute (line 553):
        # Getting the type of 'mpath_alt' (line 553)
        mpath_alt_75502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 29), 'mpath_alt')
        # Getting the type of 'self' (line 553)
        self_75503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 12), 'self')
        # Setting the type of the member '_alt_path' of a type (line 553)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 12), self_75503, '_alt_path', mpath_alt_75502)
        
        # Assigning a Attribute to a Attribute (line 554):
        
        # Assigning a Attribute to a Attribute (line 554):
        # Getting the type of 'self' (line 554)
        self_75504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 34), 'self')
        # Obtaining the member '_transform' of a type (line 554)
        _transform_75505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 554, 34), self_75504, '_transform')
        # Getting the type of 'self' (line 554)
        self_75506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 12), 'self')
        # Setting the type of the member '_alt_transform' of a type (line 554)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 554, 12), self_75506, '_alt_transform', _transform_75505)
        # SSA join for if statement (line 533)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Str to a Attribute (line 556):
        
        # Assigning a Str to a Attribute (line 556):
        unicode_75507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 556, 26), 'unicode', u'miter')
        # Getting the type of 'self' (line 556)
        self_75508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 8), 'self')
        # Setting the type of the member '_joinstyle' of a type (line 556)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 8), self_75508, '_joinstyle', unicode_75507)
        
        # ################# End of '_set_pentagon(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_pentagon' in the type store
        # Getting the type of 'stypy_return_type' (line 526)
        stypy_return_type_75509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_75509)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_pentagon'
        return stypy_return_type_75509


    @norecursion
    def _set_star(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_star'
        module_type_store = module_type_store.open_function_context('_set_star', 558, 4, False)
        # Assigning a type to the variable 'self' (line 559)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 559, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_star.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_star.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_star.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_star.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_star')
        MarkerStyle._set_star.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_star.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_star.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_star.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_star.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_star.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_star.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_star', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_star', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_star(...)' code ##################

        
        # Assigning a Call to a Attribute (line 559):
        
        # Assigning a Call to a Attribute (line 559):
        
        # Call to scale(...): (line 559)
        # Processing the call arguments (line 559)
        float_75514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 43), 'float')
        # Processing the call keyword arguments (line 559)
        kwargs_75515 = {}
        
        # Call to Affine2D(...): (line 559)
        # Processing the call keyword arguments (line 559)
        kwargs_75511 = {}
        # Getting the type of 'Affine2D' (line 559)
        Affine2D_75510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 559)
        Affine2D_call_result_75512 = invoke(stypy.reporting.localization.Localization(__file__, 559, 26), Affine2D_75510, *[], **kwargs_75511)
        
        # Obtaining the member 'scale' of a type (line 559)
        scale_75513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 26), Affine2D_call_result_75512, 'scale')
        # Calling scale(args, kwargs) (line 559)
        scale_call_result_75516 = invoke(stypy.reporting.localization.Localization(__file__, 559, 26), scale_75513, *[float_75514], **kwargs_75515)
        
        # Getting the type of 'self' (line 559)
        self_75517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 559)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 8), self_75517, '_transform', scale_call_result_75516)
        
        # Assigning a Num to a Attribute (line 560):
        
        # Assigning a Num to a Attribute (line 560):
        float_75518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 31), 'float')
        # Getting the type of 'self' (line 560)
        self_75519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 560)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 8), self_75519, '_snap_threshold', float_75518)
        
        # Assigning a Call to a Name (line 562):
        
        # Assigning a Call to a Name (line 562):
        
        # Call to get_fillstyle(...): (line 562)
        # Processing the call keyword arguments (line 562)
        kwargs_75522 = {}
        # Getting the type of 'self' (line 562)
        self_75520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 13), 'self', False)
        # Obtaining the member 'get_fillstyle' of a type (line 562)
        get_fillstyle_75521 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 13), self_75520, 'get_fillstyle')
        # Calling get_fillstyle(args, kwargs) (line 562)
        get_fillstyle_call_result_75523 = invoke(stypy.reporting.localization.Localization(__file__, 562, 13), get_fillstyle_75521, *[], **kwargs_75522)
        
        # Assigning a type to the variable 'fs' (line 562)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 562, 8), 'fs', get_fillstyle_call_result_75523)
        
        # Assigning a Call to a Name (line 563):
        
        # Assigning a Call to a Name (line 563):
        
        # Call to unit_regular_star(...): (line 563)
        # Processing the call arguments (line 563)
        int_75526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 42), 'int')
        # Processing the call keyword arguments (line 563)
        float_75527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 57), 'float')
        keyword_75528 = float_75527
        kwargs_75529 = {'innerCircle': keyword_75528}
        # Getting the type of 'Path' (line 563)
        Path_75524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 19), 'Path', False)
        # Obtaining the member 'unit_regular_star' of a type (line 563)
        unit_regular_star_75525 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 563, 19), Path_75524, 'unit_regular_star')
        # Calling unit_regular_star(args, kwargs) (line 563)
        unit_regular_star_call_result_75530 = invoke(stypy.reporting.localization.Localization(__file__, 563, 19), unit_regular_star_75525, *[int_75526], **kwargs_75529)
        
        # Assigning a type to the variable 'polypath' (line 563)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 563, 8), 'polypath', unit_regular_star_call_result_75530)
        
        
        
        # Call to _half_fill(...): (line 565)
        # Processing the call keyword arguments (line 565)
        kwargs_75533 = {}
        # Getting the type of 'self' (line 565)
        self_75531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 15), 'self', False)
        # Obtaining the member '_half_fill' of a type (line 565)
        _half_fill_75532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 565, 15), self_75531, '_half_fill')
        # Calling _half_fill(args, kwargs) (line 565)
        _half_fill_call_result_75534 = invoke(stypy.reporting.localization.Localization(__file__, 565, 15), _half_fill_75532, *[], **kwargs_75533)
        
        # Applying the 'not' unary operator (line 565)
        result_not__75535 = python_operator(stypy.reporting.localization.Localization(__file__, 565, 11), 'not', _half_fill_call_result_75534)
        
        # Testing the type of an if condition (line 565)
        if_condition_75536 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 565, 8), result_not__75535)
        # Assigning a type to the variable 'if_condition_75536' (line 565)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 565, 8), 'if_condition_75536', if_condition_75536)
        # SSA begins for if statement (line 565)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Attribute (line 566):
        
        # Assigning a Name to a Attribute (line 566):
        # Getting the type of 'polypath' (line 566)
        polypath_75537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 25), 'polypath')
        # Getting the type of 'self' (line 566)
        self_75538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 12), 'self')
        # Setting the type of the member '_path' of a type (line 566)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 12), self_75538, '_path', polypath_75537)
        # SSA branch for the else part of an if statement (line 565)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Attribute to a Name (line 568):
        
        # Assigning a Attribute to a Name (line 568):
        # Getting the type of 'polypath' (line 568)
        polypath_75539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 20), 'polypath')
        # Obtaining the member 'vertices' of a type (line 568)
        vertices_75540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 568, 20), polypath_75539, 'vertices')
        # Assigning a type to the variable 'verts' (line 568)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 568, 12), 'verts', vertices_75540)
        
        # Assigning a Call to a Name (line 570):
        
        # Assigning a Call to a Name (line 570):
        
        # Call to Path(...): (line 570)
        # Processing the call arguments (line 570)
        
        # Call to vstack(...): (line 570)
        # Processing the call arguments (line 570)
        
        # Obtaining an instance of the builtin type 'tuple' (line 570)
        tuple_75544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 34), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 570)
        # Adding element type (line 570)
        
        # Obtaining the type of the subscript
        int_75545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 40), 'int')
        int_75546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 42), 'int')
        slice_75547 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 570, 34), int_75545, int_75546, None)
        slice_75548 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 570, 34), None, None, None)
        # Getting the type of 'verts' (line 570)
        verts_75549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 34), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 570)
        getitem___75550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 34), verts_75549, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 570)
        subscript_call_result_75551 = invoke(stypy.reporting.localization.Localization(__file__, 570, 34), getitem___75550, (slice_75547, slice_75548))
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 34), tuple_75544, subscript_call_result_75551)
        # Adding element type (line 570)
        
        # Obtaining the type of the subscript
        int_75552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 55), 'int')
        int_75553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 57), 'int')
        slice_75554 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 570, 49), int_75552, int_75553, None)
        slice_75555 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 570, 49), None, None, None)
        # Getting the type of 'verts' (line 570)
        verts_75556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 49), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 570)
        getitem___75557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 49), verts_75556, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 570)
        subscript_call_result_75558 = invoke(stypy.reporting.localization.Localization(__file__, 570, 49), getitem___75557, (slice_75554, slice_75555))
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 34), tuple_75544, subscript_call_result_75558)
        # Adding element type (line 570)
        
        # Obtaining the type of the subscript
        int_75559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 71), 'int')
        # Getting the type of 'verts' (line 570)
        verts_75560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 65), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 570)
        getitem___75561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 65), verts_75560, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 570)
        subscript_call_result_75562 = invoke(stypy.reporting.localization.Localization(__file__, 570, 65), getitem___75561, int_75559)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 34), tuple_75544, subscript_call_result_75562)
        
        # Processing the call keyword arguments (line 570)
        kwargs_75563 = {}
        # Getting the type of 'np' (line 570)
        np_75542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 23), 'np', False)
        # Obtaining the member 'vstack' of a type (line 570)
        vstack_75543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 23), np_75542, 'vstack')
        # Calling vstack(args, kwargs) (line 570)
        vstack_call_result_75564 = invoke(stypy.reporting.localization.Localization(__file__, 570, 23), vstack_75543, *[tuple_75544], **kwargs_75563)
        
        # Processing the call keyword arguments (line 570)
        kwargs_75565 = {}
        # Getting the type of 'Path' (line 570)
        Path_75541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 18), 'Path', False)
        # Calling Path(args, kwargs) (line 570)
        Path_call_result_75566 = invoke(stypy.reporting.localization.Localization(__file__, 570, 18), Path_75541, *[vstack_call_result_75564], **kwargs_75565)
        
        # Assigning a type to the variable 'top' (line 570)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 570, 12), 'top', Path_call_result_75566)
        
        # Assigning a Call to a Name (line 571):
        
        # Assigning a Call to a Name (line 571):
        
        # Call to Path(...): (line 571)
        # Processing the call arguments (line 571)
        
        # Call to vstack(...): (line 571)
        # Processing the call arguments (line 571)
        
        # Obtaining an instance of the builtin type 'tuple' (line 571)
        tuple_75570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 37), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 571)
        # Adding element type (line 571)
        
        # Obtaining the type of the subscript
        int_75571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 43), 'int')
        int_75572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 45), 'int')
        slice_75573 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 571, 37), int_75571, int_75572, None)
        slice_75574 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 571, 37), None, None, None)
        # Getting the type of 'verts' (line 571)
        verts_75575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 37), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 571)
        getitem___75576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 571, 37), verts_75575, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 571)
        subscript_call_result_75577 = invoke(stypy.reporting.localization.Localization(__file__, 571, 37), getitem___75576, (slice_75573, slice_75574))
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 37), tuple_75570, subscript_call_result_75577)
        # Adding element type (line 571)
        
        # Obtaining the type of the subscript
        int_75578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 58), 'int')
        # Getting the type of 'verts' (line 571)
        verts_75579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 52), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 571)
        getitem___75580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 571, 52), verts_75579, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 571)
        subscript_call_result_75581 = invoke(stypy.reporting.localization.Localization(__file__, 571, 52), getitem___75580, int_75578)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 37), tuple_75570, subscript_call_result_75581)
        
        # Processing the call keyword arguments (line 571)
        kwargs_75582 = {}
        # Getting the type of 'np' (line 571)
        np_75568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 26), 'np', False)
        # Obtaining the member 'vstack' of a type (line 571)
        vstack_75569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 571, 26), np_75568, 'vstack')
        # Calling vstack(args, kwargs) (line 571)
        vstack_call_result_75583 = invoke(stypy.reporting.localization.Localization(__file__, 571, 26), vstack_75569, *[tuple_75570], **kwargs_75582)
        
        # Processing the call keyword arguments (line 571)
        kwargs_75584 = {}
        # Getting the type of 'Path' (line 571)
        Path_75567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 21), 'Path', False)
        # Calling Path(args, kwargs) (line 571)
        Path_call_result_75585 = invoke(stypy.reporting.localization.Localization(__file__, 571, 21), Path_75567, *[vstack_call_result_75583], **kwargs_75584)
        
        # Assigning a type to the variable 'bottom' (line 571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 12), 'bottom', Path_call_result_75585)
        
        # Assigning a Call to a Name (line 572):
        
        # Assigning a Call to a Name (line 572):
        
        # Call to Path(...): (line 572)
        # Processing the call arguments (line 572)
        
        # Call to vstack(...): (line 572)
        # Processing the call arguments (line 572)
        
        # Obtaining an instance of the builtin type 'tuple' (line 572)
        tuple_75589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 35), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 572)
        # Adding element type (line 572)
        
        # Obtaining the type of the subscript
        int_75590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 41), 'int')
        int_75591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 43), 'int')
        slice_75592 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 572, 35), int_75590, int_75591, None)
        slice_75593 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 572, 35), None, None, None)
        # Getting the type of 'verts' (line 572)
        verts_75594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 35), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 572)
        getitem___75595 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 35), verts_75594, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 572)
        subscript_call_result_75596 = invoke(stypy.reporting.localization.Localization(__file__, 572, 35), getitem___75595, (slice_75592, slice_75593))
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 35), tuple_75589, subscript_call_result_75596)
        # Adding element type (line 572)
        
        # Obtaining the type of the subscript
        int_75597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 56), 'int')
        # Getting the type of 'verts' (line 572)
        verts_75598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 50), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 572)
        getitem___75599 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 50), verts_75598, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 572)
        subscript_call_result_75600 = invoke(stypy.reporting.localization.Localization(__file__, 572, 50), getitem___75599, int_75597)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 35), tuple_75589, subscript_call_result_75600)
        
        # Processing the call keyword arguments (line 572)
        kwargs_75601 = {}
        # Getting the type of 'np' (line 572)
        np_75587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 24), 'np', False)
        # Obtaining the member 'vstack' of a type (line 572)
        vstack_75588 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 24), np_75587, 'vstack')
        # Calling vstack(args, kwargs) (line 572)
        vstack_call_result_75602 = invoke(stypy.reporting.localization.Localization(__file__, 572, 24), vstack_75588, *[tuple_75589], **kwargs_75601)
        
        # Processing the call keyword arguments (line 572)
        kwargs_75603 = {}
        # Getting the type of 'Path' (line 572)
        Path_75586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 19), 'Path', False)
        # Calling Path(args, kwargs) (line 572)
        Path_call_result_75604 = invoke(stypy.reporting.localization.Localization(__file__, 572, 19), Path_75586, *[vstack_call_result_75602], **kwargs_75603)
        
        # Assigning a type to the variable 'left' (line 572)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 572, 12), 'left', Path_call_result_75604)
        
        # Assigning a Call to a Name (line 573):
        
        # Assigning a Call to a Name (line 573):
        
        # Call to Path(...): (line 573)
        # Processing the call arguments (line 573)
        
        # Call to vstack(...): (line 573)
        # Processing the call arguments (line 573)
        
        # Obtaining an instance of the builtin type 'tuple' (line 573)
        tuple_75608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 573)
        # Adding element type (line 573)
        
        # Obtaining the type of the subscript
        int_75609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 42), 'int')
        # Getting the type of 'verts' (line 573)
        verts_75610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 36), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 573)
        getitem___75611 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 573, 36), verts_75610, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 573)
        subscript_call_result_75612 = invoke(stypy.reporting.localization.Localization(__file__, 573, 36), getitem___75611, int_75609)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 36), tuple_75608, subscript_call_result_75612)
        # Adding element type (line 573)
        
        # Obtaining the type of the subscript
        int_75613 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 52), 'int')
        int_75614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 54), 'int')
        slice_75615 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 573, 46), int_75613, int_75614, None)
        slice_75616 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 573, 46), None, None, None)
        # Getting the type of 'verts' (line 573)
        verts_75617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 46), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 573)
        getitem___75618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 573, 46), verts_75617, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 573)
        subscript_call_result_75619 = invoke(stypy.reporting.localization.Localization(__file__, 573, 46), getitem___75618, (slice_75615, slice_75616))
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 36), tuple_75608, subscript_call_result_75619)
        # Adding element type (line 573)
        
        # Obtaining the type of the subscript
        int_75620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 68), 'int')
        # Getting the type of 'verts' (line 573)
        verts_75621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 62), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 573)
        getitem___75622 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 573, 62), verts_75621, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 573)
        subscript_call_result_75623 = invoke(stypy.reporting.localization.Localization(__file__, 573, 62), getitem___75622, int_75620)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 36), tuple_75608, subscript_call_result_75623)
        
        # Processing the call keyword arguments (line 573)
        kwargs_75624 = {}
        # Getting the type of 'np' (line 573)
        np_75606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 25), 'np', False)
        # Obtaining the member 'vstack' of a type (line 573)
        vstack_75607 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 573, 25), np_75606, 'vstack')
        # Calling vstack(args, kwargs) (line 573)
        vstack_call_result_75625 = invoke(stypy.reporting.localization.Localization(__file__, 573, 25), vstack_75607, *[tuple_75608], **kwargs_75624)
        
        # Processing the call keyword arguments (line 573)
        kwargs_75626 = {}
        # Getting the type of 'Path' (line 573)
        Path_75605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 20), 'Path', False)
        # Calling Path(args, kwargs) (line 573)
        Path_call_result_75627 = invoke(stypy.reporting.localization.Localization(__file__, 573, 20), Path_75605, *[vstack_call_result_75625], **kwargs_75626)
        
        # Assigning a type to the variable 'right' (line 573)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 573, 12), 'right', Path_call_result_75627)
        
        
        # Getting the type of 'fs' (line 575)
        fs_75628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 15), 'fs')
        unicode_75629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 21), 'unicode', u'top')
        # Applying the binary operator '==' (line 575)
        result_eq_75630 = python_operator(stypy.reporting.localization.Localization(__file__, 575, 15), '==', fs_75628, unicode_75629)
        
        # Testing the type of an if condition (line 575)
        if_condition_75631 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 575, 12), result_eq_75630)
        # Assigning a type to the variable 'if_condition_75631' (line 575)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 12), 'if_condition_75631', if_condition_75631)
        # SSA begins for if statement (line 575)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 576):
        
        # Assigning a Name to a Name (line 576):
        # Getting the type of 'top' (line 576)
        top_75632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 35), 'top')
        # Assigning a type to the variable 'tuple_assignment_74178' (line 576)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 576, 16), 'tuple_assignment_74178', top_75632)
        
        # Assigning a Name to a Name (line 576):
        # Getting the type of 'bottom' (line 576)
        bottom_75633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 40), 'bottom')
        # Assigning a type to the variable 'tuple_assignment_74179' (line 576)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 576, 16), 'tuple_assignment_74179', bottom_75633)
        
        # Assigning a Name to a Name (line 576):
        # Getting the type of 'tuple_assignment_74178' (line 576)
        tuple_assignment_74178_75634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 16), 'tuple_assignment_74178')
        # Assigning a type to the variable 'mpath' (line 576)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 576, 16), 'mpath', tuple_assignment_74178_75634)
        
        # Assigning a Name to a Name (line 576):
        # Getting the type of 'tuple_assignment_74179' (line 576)
        tuple_assignment_74179_75635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 16), 'tuple_assignment_74179')
        # Assigning a type to the variable 'mpath_alt' (line 576)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 576, 23), 'mpath_alt', tuple_assignment_74179_75635)
        # SSA branch for the else part of an if statement (line 575)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 577)
        fs_75636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 17), 'fs')
        unicode_75637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 577, 23), 'unicode', u'bottom')
        # Applying the binary operator '==' (line 577)
        result_eq_75638 = python_operator(stypy.reporting.localization.Localization(__file__, 577, 17), '==', fs_75636, unicode_75637)
        
        # Testing the type of an if condition (line 577)
        if_condition_75639 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 577, 17), result_eq_75638)
        # Assigning a type to the variable 'if_condition_75639' (line 577)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 577, 17), 'if_condition_75639', if_condition_75639)
        # SSA begins for if statement (line 577)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 578):
        
        # Assigning a Name to a Name (line 578):
        # Getting the type of 'bottom' (line 578)
        bottom_75640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 35), 'bottom')
        # Assigning a type to the variable 'tuple_assignment_74180' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 16), 'tuple_assignment_74180', bottom_75640)
        
        # Assigning a Name to a Name (line 578):
        # Getting the type of 'top' (line 578)
        top_75641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 43), 'top')
        # Assigning a type to the variable 'tuple_assignment_74181' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 16), 'tuple_assignment_74181', top_75641)
        
        # Assigning a Name to a Name (line 578):
        # Getting the type of 'tuple_assignment_74180' (line 578)
        tuple_assignment_74180_75642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 16), 'tuple_assignment_74180')
        # Assigning a type to the variable 'mpath' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 16), 'mpath', tuple_assignment_74180_75642)
        
        # Assigning a Name to a Name (line 578):
        # Getting the type of 'tuple_assignment_74181' (line 578)
        tuple_assignment_74181_75643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 16), 'tuple_assignment_74181')
        # Assigning a type to the variable 'mpath_alt' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 23), 'mpath_alt', tuple_assignment_74181_75643)
        # SSA branch for the else part of an if statement (line 577)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 579)
        fs_75644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 17), 'fs')
        unicode_75645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 579, 23), 'unicode', u'left')
        # Applying the binary operator '==' (line 579)
        result_eq_75646 = python_operator(stypy.reporting.localization.Localization(__file__, 579, 17), '==', fs_75644, unicode_75645)
        
        # Testing the type of an if condition (line 579)
        if_condition_75647 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 579, 17), result_eq_75646)
        # Assigning a type to the variable 'if_condition_75647' (line 579)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 579, 17), 'if_condition_75647', if_condition_75647)
        # SSA begins for if statement (line 579)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 580):
        
        # Assigning a Name to a Name (line 580):
        # Getting the type of 'left' (line 580)
        left_75648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 35), 'left')
        # Assigning a type to the variable 'tuple_assignment_74182' (line 580)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 580, 16), 'tuple_assignment_74182', left_75648)
        
        # Assigning a Name to a Name (line 580):
        # Getting the type of 'right' (line 580)
        right_75649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 41), 'right')
        # Assigning a type to the variable 'tuple_assignment_74183' (line 580)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 580, 16), 'tuple_assignment_74183', right_75649)
        
        # Assigning a Name to a Name (line 580):
        # Getting the type of 'tuple_assignment_74182' (line 580)
        tuple_assignment_74182_75650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 16), 'tuple_assignment_74182')
        # Assigning a type to the variable 'mpath' (line 580)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 580, 16), 'mpath', tuple_assignment_74182_75650)
        
        # Assigning a Name to a Name (line 580):
        # Getting the type of 'tuple_assignment_74183' (line 580)
        tuple_assignment_74183_75651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 16), 'tuple_assignment_74183')
        # Assigning a type to the variable 'mpath_alt' (line 580)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 580, 23), 'mpath_alt', tuple_assignment_74183_75651)
        # SSA branch for the else part of an if statement (line 579)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Tuple to a Tuple (line 582):
        
        # Assigning a Name to a Name (line 582):
        # Getting the type of 'right' (line 582)
        right_75652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 35), 'right')
        # Assigning a type to the variable 'tuple_assignment_74184' (line 582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 582, 16), 'tuple_assignment_74184', right_75652)
        
        # Assigning a Name to a Name (line 582):
        # Getting the type of 'left' (line 582)
        left_75653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 42), 'left')
        # Assigning a type to the variable 'tuple_assignment_74185' (line 582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 582, 16), 'tuple_assignment_74185', left_75653)
        
        # Assigning a Name to a Name (line 582):
        # Getting the type of 'tuple_assignment_74184' (line 582)
        tuple_assignment_74184_75654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 16), 'tuple_assignment_74184')
        # Assigning a type to the variable 'mpath' (line 582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 582, 16), 'mpath', tuple_assignment_74184_75654)
        
        # Assigning a Name to a Name (line 582):
        # Getting the type of 'tuple_assignment_74185' (line 582)
        tuple_assignment_74185_75655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 16), 'tuple_assignment_74185')
        # Assigning a type to the variable 'mpath_alt' (line 582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 582, 23), 'mpath_alt', tuple_assignment_74185_75655)
        # SSA join for if statement (line 579)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 577)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 575)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 583):
        
        # Assigning a Name to a Attribute (line 583):
        # Getting the type of 'mpath' (line 583)
        mpath_75656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 25), 'mpath')
        # Getting the type of 'self' (line 583)
        self_75657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 12), 'self')
        # Setting the type of the member '_path' of a type (line 583)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 583, 12), self_75657, '_path', mpath_75656)
        
        # Assigning a Name to a Attribute (line 584):
        
        # Assigning a Name to a Attribute (line 584):
        # Getting the type of 'mpath_alt' (line 584)
        mpath_alt_75658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 29), 'mpath_alt')
        # Getting the type of 'self' (line 584)
        self_75659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 12), 'self')
        # Setting the type of the member '_alt_path' of a type (line 584)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 12), self_75659, '_alt_path', mpath_alt_75658)
        
        # Assigning a Attribute to a Attribute (line 585):
        
        # Assigning a Attribute to a Attribute (line 585):
        # Getting the type of 'self' (line 585)
        self_75660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 34), 'self')
        # Obtaining the member '_transform' of a type (line 585)
        _transform_75661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 34), self_75660, '_transform')
        # Getting the type of 'self' (line 585)
        self_75662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 12), 'self')
        # Setting the type of the member '_alt_transform' of a type (line 585)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 12), self_75662, '_alt_transform', _transform_75661)
        # SSA join for if statement (line 565)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Str to a Attribute (line 587):
        
        # Assigning a Str to a Attribute (line 587):
        unicode_75663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 587, 26), 'unicode', u'bevel')
        # Getting the type of 'self' (line 587)
        self_75664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 8), 'self')
        # Setting the type of the member '_joinstyle' of a type (line 587)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 587, 8), self_75664, '_joinstyle', unicode_75663)
        
        # ################# End of '_set_star(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_star' in the type store
        # Getting the type of 'stypy_return_type' (line 558)
        stypy_return_type_75665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_75665)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_star'
        return stypy_return_type_75665


    @norecursion
    def _set_hexagon1(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_hexagon1'
        module_type_store = module_type_store.open_function_context('_set_hexagon1', 589, 4, False)
        # Assigning a type to the variable 'self' (line 590)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 590, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_hexagon1.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_hexagon1.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_hexagon1.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_hexagon1.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_hexagon1')
        MarkerStyle._set_hexagon1.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_hexagon1.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_hexagon1.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_hexagon1.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_hexagon1.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_hexagon1.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_hexagon1.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_hexagon1', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_hexagon1', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_hexagon1(...)' code ##################

        
        # Assigning a Call to a Attribute (line 590):
        
        # Assigning a Call to a Attribute (line 590):
        
        # Call to scale(...): (line 590)
        # Processing the call arguments (line 590)
        float_75670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 43), 'float')
        # Processing the call keyword arguments (line 590)
        kwargs_75671 = {}
        
        # Call to Affine2D(...): (line 590)
        # Processing the call keyword arguments (line 590)
        kwargs_75667 = {}
        # Getting the type of 'Affine2D' (line 590)
        Affine2D_75666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 590)
        Affine2D_call_result_75668 = invoke(stypy.reporting.localization.Localization(__file__, 590, 26), Affine2D_75666, *[], **kwargs_75667)
        
        # Obtaining the member 'scale' of a type (line 590)
        scale_75669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 590, 26), Affine2D_call_result_75668, 'scale')
        # Calling scale(args, kwargs) (line 590)
        scale_call_result_75672 = invoke(stypy.reporting.localization.Localization(__file__, 590, 26), scale_75669, *[float_75670], **kwargs_75671)
        
        # Getting the type of 'self' (line 590)
        self_75673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 590)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 590, 8), self_75673, '_transform', scale_call_result_75672)
        
        # Assigning a Name to a Attribute (line 591):
        
        # Assigning a Name to a Attribute (line 591):
        # Getting the type of 'None' (line 591)
        None_75674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 31), 'None')
        # Getting the type of 'self' (line 591)
        self_75675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 591)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 591, 8), self_75675, '_snap_threshold', None_75674)
        
        # Assigning a Call to a Name (line 593):
        
        # Assigning a Call to a Name (line 593):
        
        # Call to get_fillstyle(...): (line 593)
        # Processing the call keyword arguments (line 593)
        kwargs_75678 = {}
        # Getting the type of 'self' (line 593)
        self_75676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 13), 'self', False)
        # Obtaining the member 'get_fillstyle' of a type (line 593)
        get_fillstyle_75677 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 593, 13), self_75676, 'get_fillstyle')
        # Calling get_fillstyle(args, kwargs) (line 593)
        get_fillstyle_call_result_75679 = invoke(stypy.reporting.localization.Localization(__file__, 593, 13), get_fillstyle_75677, *[], **kwargs_75678)
        
        # Assigning a type to the variable 'fs' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'fs', get_fillstyle_call_result_75679)
        
        # Assigning a Call to a Name (line 594):
        
        # Assigning a Call to a Name (line 594):
        
        # Call to unit_regular_polygon(...): (line 594)
        # Processing the call arguments (line 594)
        int_75682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 45), 'int')
        # Processing the call keyword arguments (line 594)
        kwargs_75683 = {}
        # Getting the type of 'Path' (line 594)
        Path_75680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 19), 'Path', False)
        # Obtaining the member 'unit_regular_polygon' of a type (line 594)
        unit_regular_polygon_75681 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 594, 19), Path_75680, 'unit_regular_polygon')
        # Calling unit_regular_polygon(args, kwargs) (line 594)
        unit_regular_polygon_call_result_75684 = invoke(stypy.reporting.localization.Localization(__file__, 594, 19), unit_regular_polygon_75681, *[int_75682], **kwargs_75683)
        
        # Assigning a type to the variable 'polypath' (line 594)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 594, 8), 'polypath', unit_regular_polygon_call_result_75684)
        
        
        
        # Call to _half_fill(...): (line 596)
        # Processing the call keyword arguments (line 596)
        kwargs_75687 = {}
        # Getting the type of 'self' (line 596)
        self_75685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 15), 'self', False)
        # Obtaining the member '_half_fill' of a type (line 596)
        _half_fill_75686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 15), self_75685, '_half_fill')
        # Calling _half_fill(args, kwargs) (line 596)
        _half_fill_call_result_75688 = invoke(stypy.reporting.localization.Localization(__file__, 596, 15), _half_fill_75686, *[], **kwargs_75687)
        
        # Applying the 'not' unary operator (line 596)
        result_not__75689 = python_operator(stypy.reporting.localization.Localization(__file__, 596, 11), 'not', _half_fill_call_result_75688)
        
        # Testing the type of an if condition (line 596)
        if_condition_75690 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 596, 8), result_not__75689)
        # Assigning a type to the variable 'if_condition_75690' (line 596)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 8), 'if_condition_75690', if_condition_75690)
        # SSA begins for if statement (line 596)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Attribute (line 597):
        
        # Assigning a Name to a Attribute (line 597):
        # Getting the type of 'polypath' (line 597)
        polypath_75691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 25), 'polypath')
        # Getting the type of 'self' (line 597)
        self_75692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 12), 'self')
        # Setting the type of the member '_path' of a type (line 597)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 597, 12), self_75692, '_path', polypath_75691)
        # SSA branch for the else part of an if statement (line 596)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Attribute to a Name (line 599):
        
        # Assigning a Attribute to a Name (line 599):
        # Getting the type of 'polypath' (line 599)
        polypath_75693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 20), 'polypath')
        # Obtaining the member 'vertices' of a type (line 599)
        vertices_75694 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 599, 20), polypath_75693, 'vertices')
        # Assigning a type to the variable 'verts' (line 599)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 599, 12), 'verts', vertices_75694)
        
        # Assigning a Call to a Name (line 602):
        
        # Assigning a Call to a Name (line 602):
        
        # Call to abs(...): (line 602)
        # Processing the call arguments (line 602)
        
        # Call to cos(...): (line 602)
        # Processing the call arguments (line 602)
        int_75699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 30), 'int')
        # Getting the type of 'np' (line 602)
        np_75700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 34), 'np', False)
        # Obtaining the member 'pi' of a type (line 602)
        pi_75701 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 602, 34), np_75700, 'pi')
        # Applying the binary operator '*' (line 602)
        result_mul_75702 = python_operator(stypy.reporting.localization.Localization(__file__, 602, 30), '*', int_75699, pi_75701)
        
        float_75703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 42), 'float')
        # Applying the binary operator 'div' (line 602)
        result_div_75704 = python_operator(stypy.reporting.localization.Localization(__file__, 602, 40), 'div', result_mul_75702, float_75703)
        
        # Processing the call keyword arguments (line 602)
        kwargs_75705 = {}
        # Getting the type of 'np' (line 602)
        np_75697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 23), 'np', False)
        # Obtaining the member 'cos' of a type (line 602)
        cos_75698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 602, 23), np_75697, 'cos')
        # Calling cos(args, kwargs) (line 602)
        cos_call_result_75706 = invoke(stypy.reporting.localization.Localization(__file__, 602, 23), cos_75698, *[result_div_75704], **kwargs_75705)
        
        # Processing the call keyword arguments (line 602)
        kwargs_75707 = {}
        # Getting the type of 'np' (line 602)
        np_75695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 16), 'np', False)
        # Obtaining the member 'abs' of a type (line 602)
        abs_75696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 602, 16), np_75695, 'abs')
        # Calling abs(args, kwargs) (line 602)
        abs_call_result_75708 = invoke(stypy.reporting.localization.Localization(__file__, 602, 16), abs_75696, *[cos_call_result_75706], **kwargs_75707)
        
        # Assigning a type to the variable 'x' (line 602)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 602, 12), 'x', abs_call_result_75708)
        
        # Assigning a Call to a Name (line 603):
        
        # Assigning a Call to a Name (line 603):
        
        # Call to Path(...): (line 603)
        # Processing the call arguments (line 603)
        
        # Call to vstack(...): (line 603)
        # Processing the call arguments (line 603)
        
        # Obtaining an instance of the builtin type 'tuple' (line 603)
        tuple_75712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 34), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 603)
        # Adding element type (line 603)
        
        # Obtaining an instance of the builtin type 'list' (line 603)
        list_75713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 603)
        # Adding element type (line 603)
        
        # Getting the type of 'x' (line 603)
        x_75714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 36), 'x', False)
        # Applying the 'usub' unary operator (line 603)
        result___neg___75715 = python_operator(stypy.reporting.localization.Localization(__file__, 603, 35), 'usub', x_75714)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 34), list_75713, result___neg___75715)
        # Adding element type (line 603)
        int_75716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 34), list_75713, int_75716)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 34), tuple_75712, list_75713)
        # Adding element type (line 603)
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 603)
        tuple_75717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 50), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 603)
        # Adding element type (line 603)
        int_75718 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 50), tuple_75717, int_75718)
        # Adding element type (line 603)
        int_75719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 50), tuple_75717, int_75719)
        # Adding element type (line 603)
        int_75720 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 50), tuple_75717, int_75720)
        
        slice_75721 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 603, 43), None, None, None)
        # Getting the type of 'verts' (line 603)
        verts_75722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 43), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 603)
        getitem___75723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 603, 43), verts_75722, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 603)
        subscript_call_result_75724 = invoke(stypy.reporting.localization.Localization(__file__, 603, 43), getitem___75723, (tuple_75717, slice_75721))
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 34), tuple_75712, subscript_call_result_75724)
        # Adding element type (line 603)
        
        # Obtaining an instance of the builtin type 'list' (line 603)
        list_75725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 64), 'list')
        # Adding type elements to the builtin type 'list' instance (line 603)
        # Adding element type (line 603)
        # Getting the type of 'x' (line 603)
        x_75726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 65), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 64), list_75725, x_75726)
        # Adding element type (line 603)
        int_75727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 68), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 64), list_75725, int_75727)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 34), tuple_75712, list_75725)
        
        # Processing the call keyword arguments (line 603)
        kwargs_75728 = {}
        # Getting the type of 'np' (line 603)
        np_75710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 23), 'np', False)
        # Obtaining the member 'vstack' of a type (line 603)
        vstack_75711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 603, 23), np_75710, 'vstack')
        # Calling vstack(args, kwargs) (line 603)
        vstack_call_result_75729 = invoke(stypy.reporting.localization.Localization(__file__, 603, 23), vstack_75711, *[tuple_75712], **kwargs_75728)
        
        # Processing the call keyword arguments (line 603)
        kwargs_75730 = {}
        # Getting the type of 'Path' (line 603)
        Path_75709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 18), 'Path', False)
        # Calling Path(args, kwargs) (line 603)
        Path_call_result_75731 = invoke(stypy.reporting.localization.Localization(__file__, 603, 18), Path_75709, *[vstack_call_result_75729], **kwargs_75730)
        
        # Assigning a type to the variable 'top' (line 603)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 603, 12), 'top', Path_call_result_75731)
        
        # Assigning a Call to a Name (line 604):
        
        # Assigning a Call to a Name (line 604):
        
        # Call to Path(...): (line 604)
        # Processing the call arguments (line 604)
        
        # Call to vstack(...): (line 604)
        # Processing the call arguments (line 604)
        
        # Obtaining an instance of the builtin type 'tuple' (line 604)
        tuple_75735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 37), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 604)
        # Adding element type (line 604)
        
        # Obtaining an instance of the builtin type 'list' (line 604)
        list_75736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 37), 'list')
        # Adding type elements to the builtin type 'list' instance (line 604)
        # Adding element type (line 604)
        
        # Getting the type of 'x' (line 604)
        x_75737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 39), 'x', False)
        # Applying the 'usub' unary operator (line 604)
        result___neg___75738 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 38), 'usub', x_75737)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 604, 37), list_75736, result___neg___75738)
        # Adding element type (line 604)
        int_75739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 604, 37), list_75736, int_75739)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 604, 37), tuple_75735, list_75736)
        # Adding element type (line 604)
        
        # Obtaining the type of the subscript
        int_75740 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 52), 'int')
        int_75741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 54), 'int')
        slice_75742 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 604, 46), int_75740, int_75741, None)
        slice_75743 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 604, 46), None, None, None)
        # Getting the type of 'verts' (line 604)
        verts_75744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 46), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 604)
        getitem___75745 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 46), verts_75744, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 604)
        subscript_call_result_75746 = invoke(stypy.reporting.localization.Localization(__file__, 604, 46), getitem___75745, (slice_75742, slice_75743))
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 604, 37), tuple_75735, subscript_call_result_75746)
        # Adding element type (line 604)
        
        # Obtaining an instance of the builtin type 'list' (line 604)
        list_75747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 61), 'list')
        # Adding type elements to the builtin type 'list' instance (line 604)
        # Adding element type (line 604)
        # Getting the type of 'x' (line 604)
        x_75748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 62), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 604, 61), list_75747, x_75748)
        # Adding element type (line 604)
        int_75749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 65), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 604, 61), list_75747, int_75749)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 604, 37), tuple_75735, list_75747)
        
        # Processing the call keyword arguments (line 604)
        kwargs_75750 = {}
        # Getting the type of 'np' (line 604)
        np_75733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 26), 'np', False)
        # Obtaining the member 'vstack' of a type (line 604)
        vstack_75734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 26), np_75733, 'vstack')
        # Calling vstack(args, kwargs) (line 604)
        vstack_call_result_75751 = invoke(stypy.reporting.localization.Localization(__file__, 604, 26), vstack_75734, *[tuple_75735], **kwargs_75750)
        
        # Processing the call keyword arguments (line 604)
        kwargs_75752 = {}
        # Getting the type of 'Path' (line 604)
        Path_75732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 21), 'Path', False)
        # Calling Path(args, kwargs) (line 604)
        Path_call_result_75753 = invoke(stypy.reporting.localization.Localization(__file__, 604, 21), Path_75732, *[vstack_call_result_75751], **kwargs_75752)
        
        # Assigning a type to the variable 'bottom' (line 604)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 12), 'bottom', Path_call_result_75753)
        
        # Assigning a Call to a Name (line 605):
        
        # Assigning a Call to a Name (line 605):
        
        # Call to Path(...): (line 605)
        # Processing the call arguments (line 605)
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 605)
        tuple_75755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 605)
        # Adding element type (line 605)
        int_75756 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 605, 31), tuple_75755, int_75756)
        # Adding element type (line 605)
        int_75757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 605, 31), tuple_75755, int_75757)
        # Adding element type (line 605)
        int_75758 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 605, 31), tuple_75755, int_75758)
        # Adding element type (line 605)
        int_75759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 605, 31), tuple_75755, int_75759)
        
        slice_75760 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 605, 24), None, None, None)
        # Getting the type of 'verts' (line 605)
        verts_75761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 24), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 605)
        getitem___75762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 605, 24), verts_75761, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 605)
        subscript_call_result_75763 = invoke(stypy.reporting.localization.Localization(__file__, 605, 24), getitem___75762, (tuple_75755, slice_75760))
        
        # Processing the call keyword arguments (line 605)
        kwargs_75764 = {}
        # Getting the type of 'Path' (line 605)
        Path_75754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 19), 'Path', False)
        # Calling Path(args, kwargs) (line 605)
        Path_call_result_75765 = invoke(stypy.reporting.localization.Localization(__file__, 605, 19), Path_75754, *[subscript_call_result_75763], **kwargs_75764)
        
        # Assigning a type to the variable 'left' (line 605)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 605, 12), 'left', Path_call_result_75765)
        
        # Assigning a Call to a Name (line 606):
        
        # Assigning a Call to a Name (line 606):
        
        # Call to Path(...): (line 606)
        # Processing the call arguments (line 606)
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 606)
        tuple_75767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 606)
        # Adding element type (line 606)
        int_75768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 32), tuple_75767, int_75768)
        # Adding element type (line 606)
        int_75769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 32), tuple_75767, int_75769)
        # Adding element type (line 606)
        int_75770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 32), tuple_75767, int_75770)
        # Adding element type (line 606)
        int_75771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 32), tuple_75767, int_75771)
        
        slice_75772 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 606, 25), None, None, None)
        # Getting the type of 'verts' (line 606)
        verts_75773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 25), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 606)
        getitem___75774 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 606, 25), verts_75773, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 606)
        subscript_call_result_75775 = invoke(stypy.reporting.localization.Localization(__file__, 606, 25), getitem___75774, (tuple_75767, slice_75772))
        
        # Processing the call keyword arguments (line 606)
        kwargs_75776 = {}
        # Getting the type of 'Path' (line 606)
        Path_75766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 20), 'Path', False)
        # Calling Path(args, kwargs) (line 606)
        Path_call_result_75777 = invoke(stypy.reporting.localization.Localization(__file__, 606, 20), Path_75766, *[subscript_call_result_75775], **kwargs_75776)
        
        # Assigning a type to the variable 'right' (line 606)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 606, 12), 'right', Path_call_result_75777)
        
        
        # Getting the type of 'fs' (line 608)
        fs_75778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 15), 'fs')
        unicode_75779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 21), 'unicode', u'top')
        # Applying the binary operator '==' (line 608)
        result_eq_75780 = python_operator(stypy.reporting.localization.Localization(__file__, 608, 15), '==', fs_75778, unicode_75779)
        
        # Testing the type of an if condition (line 608)
        if_condition_75781 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 608, 12), result_eq_75780)
        # Assigning a type to the variable 'if_condition_75781' (line 608)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 608, 12), 'if_condition_75781', if_condition_75781)
        # SSA begins for if statement (line 608)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 609):
        
        # Assigning a Name to a Name (line 609):
        # Getting the type of 'top' (line 609)
        top_75782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 35), 'top')
        # Assigning a type to the variable 'tuple_assignment_74186' (line 609)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 609, 16), 'tuple_assignment_74186', top_75782)
        
        # Assigning a Name to a Name (line 609):
        # Getting the type of 'bottom' (line 609)
        bottom_75783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 40), 'bottom')
        # Assigning a type to the variable 'tuple_assignment_74187' (line 609)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 609, 16), 'tuple_assignment_74187', bottom_75783)
        
        # Assigning a Name to a Name (line 609):
        # Getting the type of 'tuple_assignment_74186' (line 609)
        tuple_assignment_74186_75784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 16), 'tuple_assignment_74186')
        # Assigning a type to the variable 'mpath' (line 609)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 609, 16), 'mpath', tuple_assignment_74186_75784)
        
        # Assigning a Name to a Name (line 609):
        # Getting the type of 'tuple_assignment_74187' (line 609)
        tuple_assignment_74187_75785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 16), 'tuple_assignment_74187')
        # Assigning a type to the variable 'mpath_alt' (line 609)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 609, 23), 'mpath_alt', tuple_assignment_74187_75785)
        # SSA branch for the else part of an if statement (line 608)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 610)
        fs_75786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 17), 'fs')
        unicode_75787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 23), 'unicode', u'bottom')
        # Applying the binary operator '==' (line 610)
        result_eq_75788 = python_operator(stypy.reporting.localization.Localization(__file__, 610, 17), '==', fs_75786, unicode_75787)
        
        # Testing the type of an if condition (line 610)
        if_condition_75789 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 610, 17), result_eq_75788)
        # Assigning a type to the variable 'if_condition_75789' (line 610)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 610, 17), 'if_condition_75789', if_condition_75789)
        # SSA begins for if statement (line 610)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 611):
        
        # Assigning a Name to a Name (line 611):
        # Getting the type of 'bottom' (line 611)
        bottom_75790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 35), 'bottom')
        # Assigning a type to the variable 'tuple_assignment_74188' (line 611)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 611, 16), 'tuple_assignment_74188', bottom_75790)
        
        # Assigning a Name to a Name (line 611):
        # Getting the type of 'top' (line 611)
        top_75791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 43), 'top')
        # Assigning a type to the variable 'tuple_assignment_74189' (line 611)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 611, 16), 'tuple_assignment_74189', top_75791)
        
        # Assigning a Name to a Name (line 611):
        # Getting the type of 'tuple_assignment_74188' (line 611)
        tuple_assignment_74188_75792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 16), 'tuple_assignment_74188')
        # Assigning a type to the variable 'mpath' (line 611)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 611, 16), 'mpath', tuple_assignment_74188_75792)
        
        # Assigning a Name to a Name (line 611):
        # Getting the type of 'tuple_assignment_74189' (line 611)
        tuple_assignment_74189_75793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 16), 'tuple_assignment_74189')
        # Assigning a type to the variable 'mpath_alt' (line 611)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 611, 23), 'mpath_alt', tuple_assignment_74189_75793)
        # SSA branch for the else part of an if statement (line 610)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 612)
        fs_75794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 17), 'fs')
        unicode_75795 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 23), 'unicode', u'left')
        # Applying the binary operator '==' (line 612)
        result_eq_75796 = python_operator(stypy.reporting.localization.Localization(__file__, 612, 17), '==', fs_75794, unicode_75795)
        
        # Testing the type of an if condition (line 612)
        if_condition_75797 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 612, 17), result_eq_75796)
        # Assigning a type to the variable 'if_condition_75797' (line 612)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 612, 17), 'if_condition_75797', if_condition_75797)
        # SSA begins for if statement (line 612)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 613):
        
        # Assigning a Name to a Name (line 613):
        # Getting the type of 'left' (line 613)
        left_75798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 35), 'left')
        # Assigning a type to the variable 'tuple_assignment_74190' (line 613)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 613, 16), 'tuple_assignment_74190', left_75798)
        
        # Assigning a Name to a Name (line 613):
        # Getting the type of 'right' (line 613)
        right_75799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 41), 'right')
        # Assigning a type to the variable 'tuple_assignment_74191' (line 613)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 613, 16), 'tuple_assignment_74191', right_75799)
        
        # Assigning a Name to a Name (line 613):
        # Getting the type of 'tuple_assignment_74190' (line 613)
        tuple_assignment_74190_75800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 16), 'tuple_assignment_74190')
        # Assigning a type to the variable 'mpath' (line 613)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 613, 16), 'mpath', tuple_assignment_74190_75800)
        
        # Assigning a Name to a Name (line 613):
        # Getting the type of 'tuple_assignment_74191' (line 613)
        tuple_assignment_74191_75801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 16), 'tuple_assignment_74191')
        # Assigning a type to the variable 'mpath_alt' (line 613)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 613, 23), 'mpath_alt', tuple_assignment_74191_75801)
        # SSA branch for the else part of an if statement (line 612)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Tuple to a Tuple (line 615):
        
        # Assigning a Name to a Name (line 615):
        # Getting the type of 'right' (line 615)
        right_75802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 35), 'right')
        # Assigning a type to the variable 'tuple_assignment_74192' (line 615)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 615, 16), 'tuple_assignment_74192', right_75802)
        
        # Assigning a Name to a Name (line 615):
        # Getting the type of 'left' (line 615)
        left_75803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 42), 'left')
        # Assigning a type to the variable 'tuple_assignment_74193' (line 615)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 615, 16), 'tuple_assignment_74193', left_75803)
        
        # Assigning a Name to a Name (line 615):
        # Getting the type of 'tuple_assignment_74192' (line 615)
        tuple_assignment_74192_75804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 16), 'tuple_assignment_74192')
        # Assigning a type to the variable 'mpath' (line 615)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 615, 16), 'mpath', tuple_assignment_74192_75804)
        
        # Assigning a Name to a Name (line 615):
        # Getting the type of 'tuple_assignment_74193' (line 615)
        tuple_assignment_74193_75805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 16), 'tuple_assignment_74193')
        # Assigning a type to the variable 'mpath_alt' (line 615)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 615, 23), 'mpath_alt', tuple_assignment_74193_75805)
        # SSA join for if statement (line 612)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 610)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 608)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 617):
        
        # Assigning a Name to a Attribute (line 617):
        # Getting the type of 'mpath' (line 617)
        mpath_75806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 25), 'mpath')
        # Getting the type of 'self' (line 617)
        self_75807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 12), 'self')
        # Setting the type of the member '_path' of a type (line 617)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 617, 12), self_75807, '_path', mpath_75806)
        
        # Assigning a Name to a Attribute (line 618):
        
        # Assigning a Name to a Attribute (line 618):
        # Getting the type of 'mpath_alt' (line 618)
        mpath_alt_75808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 29), 'mpath_alt')
        # Getting the type of 'self' (line 618)
        self_75809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 12), 'self')
        # Setting the type of the member '_alt_path' of a type (line 618)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 618, 12), self_75809, '_alt_path', mpath_alt_75808)
        
        # Assigning a Attribute to a Attribute (line 619):
        
        # Assigning a Attribute to a Attribute (line 619):
        # Getting the type of 'self' (line 619)
        self_75810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 34), 'self')
        # Obtaining the member '_transform' of a type (line 619)
        _transform_75811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 34), self_75810, '_transform')
        # Getting the type of 'self' (line 619)
        self_75812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 12), 'self')
        # Setting the type of the member '_alt_transform' of a type (line 619)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 12), self_75812, '_alt_transform', _transform_75811)
        # SSA join for if statement (line 596)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Str to a Attribute (line 621):
        
        # Assigning a Str to a Attribute (line 621):
        unicode_75813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 621, 26), 'unicode', u'miter')
        # Getting the type of 'self' (line 621)
        self_75814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'self')
        # Setting the type of the member '_joinstyle' of a type (line 621)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 8), self_75814, '_joinstyle', unicode_75813)
        
        # ################# End of '_set_hexagon1(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_hexagon1' in the type store
        # Getting the type of 'stypy_return_type' (line 589)
        stypy_return_type_75815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_75815)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_hexagon1'
        return stypy_return_type_75815


    @norecursion
    def _set_hexagon2(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_hexagon2'
        module_type_store = module_type_store.open_function_context('_set_hexagon2', 623, 4, False)
        # Assigning a type to the variable 'self' (line 624)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 624, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_hexagon2.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_hexagon2.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_hexagon2.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_hexagon2.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_hexagon2')
        MarkerStyle._set_hexagon2.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_hexagon2.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_hexagon2.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_hexagon2.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_hexagon2.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_hexagon2.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_hexagon2.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_hexagon2', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_hexagon2', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_hexagon2(...)' code ##################

        
        # Assigning a Call to a Attribute (line 624):
        
        # Assigning a Call to a Attribute (line 624):
        
        # Call to rotate_deg(...): (line 624)
        # Processing the call arguments (line 624)
        int_75824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 59), 'int')
        # Processing the call keyword arguments (line 624)
        kwargs_75825 = {}
        
        # Call to scale(...): (line 624)
        # Processing the call arguments (line 624)
        float_75820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 43), 'float')
        # Processing the call keyword arguments (line 624)
        kwargs_75821 = {}
        
        # Call to Affine2D(...): (line 624)
        # Processing the call keyword arguments (line 624)
        kwargs_75817 = {}
        # Getting the type of 'Affine2D' (line 624)
        Affine2D_75816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 624)
        Affine2D_call_result_75818 = invoke(stypy.reporting.localization.Localization(__file__, 624, 26), Affine2D_75816, *[], **kwargs_75817)
        
        # Obtaining the member 'scale' of a type (line 624)
        scale_75819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 624, 26), Affine2D_call_result_75818, 'scale')
        # Calling scale(args, kwargs) (line 624)
        scale_call_result_75822 = invoke(stypy.reporting.localization.Localization(__file__, 624, 26), scale_75819, *[float_75820], **kwargs_75821)
        
        # Obtaining the member 'rotate_deg' of a type (line 624)
        rotate_deg_75823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 624, 26), scale_call_result_75822, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 624)
        rotate_deg_call_result_75826 = invoke(stypy.reporting.localization.Localization(__file__, 624, 26), rotate_deg_75823, *[int_75824], **kwargs_75825)
        
        # Getting the type of 'self' (line 624)
        self_75827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 624)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 624, 8), self_75827, '_transform', rotate_deg_call_result_75826)
        
        # Assigning a Name to a Attribute (line 625):
        
        # Assigning a Name to a Attribute (line 625):
        # Getting the type of 'None' (line 625)
        None_75828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 31), 'None')
        # Getting the type of 'self' (line 625)
        self_75829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 625)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 625, 8), self_75829, '_snap_threshold', None_75828)
        
        # Assigning a Call to a Name (line 627):
        
        # Assigning a Call to a Name (line 627):
        
        # Call to get_fillstyle(...): (line 627)
        # Processing the call keyword arguments (line 627)
        kwargs_75832 = {}
        # Getting the type of 'self' (line 627)
        self_75830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 13), 'self', False)
        # Obtaining the member 'get_fillstyle' of a type (line 627)
        get_fillstyle_75831 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 627, 13), self_75830, 'get_fillstyle')
        # Calling get_fillstyle(args, kwargs) (line 627)
        get_fillstyle_call_result_75833 = invoke(stypy.reporting.localization.Localization(__file__, 627, 13), get_fillstyle_75831, *[], **kwargs_75832)
        
        # Assigning a type to the variable 'fs' (line 627)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 627, 8), 'fs', get_fillstyle_call_result_75833)
        
        # Assigning a Call to a Name (line 628):
        
        # Assigning a Call to a Name (line 628):
        
        # Call to unit_regular_polygon(...): (line 628)
        # Processing the call arguments (line 628)
        int_75836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 45), 'int')
        # Processing the call keyword arguments (line 628)
        kwargs_75837 = {}
        # Getting the type of 'Path' (line 628)
        Path_75834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 19), 'Path', False)
        # Obtaining the member 'unit_regular_polygon' of a type (line 628)
        unit_regular_polygon_75835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 19), Path_75834, 'unit_regular_polygon')
        # Calling unit_regular_polygon(args, kwargs) (line 628)
        unit_regular_polygon_call_result_75838 = invoke(stypy.reporting.localization.Localization(__file__, 628, 19), unit_regular_polygon_75835, *[int_75836], **kwargs_75837)
        
        # Assigning a type to the variable 'polypath' (line 628)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 628, 8), 'polypath', unit_regular_polygon_call_result_75838)
        
        
        
        # Call to _half_fill(...): (line 630)
        # Processing the call keyword arguments (line 630)
        kwargs_75841 = {}
        # Getting the type of 'self' (line 630)
        self_75839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 15), 'self', False)
        # Obtaining the member '_half_fill' of a type (line 630)
        _half_fill_75840 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 630, 15), self_75839, '_half_fill')
        # Calling _half_fill(args, kwargs) (line 630)
        _half_fill_call_result_75842 = invoke(stypy.reporting.localization.Localization(__file__, 630, 15), _half_fill_75840, *[], **kwargs_75841)
        
        # Applying the 'not' unary operator (line 630)
        result_not__75843 = python_operator(stypy.reporting.localization.Localization(__file__, 630, 11), 'not', _half_fill_call_result_75842)
        
        # Testing the type of an if condition (line 630)
        if_condition_75844 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 630, 8), result_not__75843)
        # Assigning a type to the variable 'if_condition_75844' (line 630)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 630, 8), 'if_condition_75844', if_condition_75844)
        # SSA begins for if statement (line 630)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Attribute (line 631):
        
        # Assigning a Name to a Attribute (line 631):
        # Getting the type of 'polypath' (line 631)
        polypath_75845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 25), 'polypath')
        # Getting the type of 'self' (line 631)
        self_75846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 12), 'self')
        # Setting the type of the member '_path' of a type (line 631)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 631, 12), self_75846, '_path', polypath_75845)
        # SSA branch for the else part of an if statement (line 630)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Attribute to a Name (line 633):
        
        # Assigning a Attribute to a Name (line 633):
        # Getting the type of 'polypath' (line 633)
        polypath_75847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 20), 'polypath')
        # Obtaining the member 'vertices' of a type (line 633)
        vertices_75848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 633, 20), polypath_75847, 'vertices')
        # Assigning a type to the variable 'verts' (line 633)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 633, 12), 'verts', vertices_75848)
        
        # Assigning a Tuple to a Tuple (line 636):
        
        # Assigning a BinOp to a Name (line 636):
        
        # Call to sqrt(...): (line 636)
        # Processing the call arguments (line 636)
        int_75851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 27), 'int')
        # Processing the call keyword arguments (line 636)
        kwargs_75852 = {}
        # Getting the type of 'np' (line 636)
        np_75849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 19), 'np', False)
        # Obtaining the member 'sqrt' of a type (line 636)
        sqrt_75850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 636, 19), np_75849, 'sqrt')
        # Calling sqrt(args, kwargs) (line 636)
        sqrt_call_result_75853 = invoke(stypy.reporting.localization.Localization(__file__, 636, 19), sqrt_75850, *[int_75851], **kwargs_75852)
        
        int_75854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 32), 'int')
        # Applying the binary operator 'div' (line 636)
        result_div_75855 = python_operator(stypy.reporting.localization.Localization(__file__, 636, 19), 'div', sqrt_call_result_75853, int_75854)
        
        # Assigning a type to the variable 'tuple_assignment_74194' (line 636)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 636, 12), 'tuple_assignment_74194', result_div_75855)
        
        # Assigning a BinOp to a Name (line 636):
        int_75856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 35), 'int')
        float_75857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 39), 'float')
        # Applying the binary operator 'div' (line 636)
        result_div_75858 = python_operator(stypy.reporting.localization.Localization(__file__, 636, 35), 'div', int_75856, float_75857)
        
        # Assigning a type to the variable 'tuple_assignment_74195' (line 636)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 636, 12), 'tuple_assignment_74195', result_div_75858)
        
        # Assigning a Name to a Name (line 636):
        # Getting the type of 'tuple_assignment_74194' (line 636)
        tuple_assignment_74194_75859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 12), 'tuple_assignment_74194')
        # Assigning a type to the variable 'x' (line 636)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 636, 12), 'x', tuple_assignment_74194_75859)
        
        # Assigning a Name to a Name (line 636):
        # Getting the type of 'tuple_assignment_74195' (line 636)
        tuple_assignment_74195_75860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 12), 'tuple_assignment_74195')
        # Assigning a type to the variable 'y' (line 636)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 636, 15), 'y', tuple_assignment_74195_75860)
        
        # Assigning a Call to a Name (line 637):
        
        # Assigning a Call to a Name (line 637):
        
        # Call to Path(...): (line 637)
        # Processing the call arguments (line 637)
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 637)
        tuple_75862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 30), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 637)
        # Adding element type (line 637)
        int_75863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 637, 30), tuple_75862, int_75863)
        # Adding element type (line 637)
        int_75864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 637, 30), tuple_75862, int_75864)
        # Adding element type (line 637)
        int_75865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 637, 30), tuple_75862, int_75865)
        # Adding element type (line 637)
        int_75866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 637, 30), tuple_75862, int_75866)
        # Adding element type (line 637)
        int_75867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 637, 30), tuple_75862, int_75867)
        
        slice_75868 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 637, 23), None, None, None)
        # Getting the type of 'verts' (line 637)
        verts_75869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 23), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 637)
        getitem___75870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 637, 23), verts_75869, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 637)
        subscript_call_result_75871 = invoke(stypy.reporting.localization.Localization(__file__, 637, 23), getitem___75870, (tuple_75862, slice_75868))
        
        # Processing the call keyword arguments (line 637)
        kwargs_75872 = {}
        # Getting the type of 'Path' (line 637)
        Path_75861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 18), 'Path', False)
        # Calling Path(args, kwargs) (line 637)
        Path_call_result_75873 = invoke(stypy.reporting.localization.Localization(__file__, 637, 18), Path_75861, *[subscript_call_result_75871], **kwargs_75872)
        
        # Assigning a type to the variable 'top' (line 637)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 637, 12), 'top', Path_call_result_75873)
        
        # Assigning a Call to a Name (line 638):
        
        # Assigning a Call to a Name (line 638):
        
        # Call to Path(...): (line 638)
        # Processing the call arguments (line 638)
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 638)
        tuple_75875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 33), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 638)
        # Adding element type (line 638)
        int_75876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 638, 33), tuple_75875, int_75876)
        # Adding element type (line 638)
        int_75877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 638, 33), tuple_75875, int_75877)
        # Adding element type (line 638)
        int_75878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 638, 33), tuple_75875, int_75878)
        # Adding element type (line 638)
        int_75879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 638, 33), tuple_75875, int_75879)
        
        slice_75880 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 638, 26), None, None, None)
        # Getting the type of 'verts' (line 638)
        verts_75881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 26), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 638)
        getitem___75882 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 638, 26), verts_75881, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 638)
        subscript_call_result_75883 = invoke(stypy.reporting.localization.Localization(__file__, 638, 26), getitem___75882, (tuple_75875, slice_75880))
        
        # Processing the call keyword arguments (line 638)
        kwargs_75884 = {}
        # Getting the type of 'Path' (line 638)
        Path_75874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 21), 'Path', False)
        # Calling Path(args, kwargs) (line 638)
        Path_call_result_75885 = invoke(stypy.reporting.localization.Localization(__file__, 638, 21), Path_75874, *[subscript_call_result_75883], **kwargs_75884)
        
        # Assigning a type to the variable 'bottom' (line 638)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 638, 12), 'bottom', Path_call_result_75885)
        
        # Assigning a Call to a Name (line 639):
        
        # Assigning a Call to a Name (line 639):
        
        # Call to Path(...): (line 639)
        # Processing the call arguments (line 639)
        
        # Call to vstack(...): (line 639)
        # Processing the call arguments (line 639)
        
        # Obtaining an instance of the builtin type 'tuple' (line 639)
        tuple_75889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 35), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 639)
        # Adding element type (line 639)
        
        # Obtaining an instance of the builtin type 'list' (line 639)
        list_75890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 639)
        # Adding element type (line 639)
        # Getting the type of 'x' (line 639)
        x_75891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 36), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 639, 35), list_75890, x_75891)
        # Adding element type (line 639)
        # Getting the type of 'y' (line 639)
        y_75892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 39), 'y', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 639, 35), list_75890, y_75892)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 639, 35), tuple_75889, list_75890)
        # Adding element type (line 639)
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 639)
        tuple_75893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 50), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 639)
        # Adding element type (line 639)
        int_75894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 639, 50), tuple_75893, int_75894)
        # Adding element type (line 639)
        int_75895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 639, 50), tuple_75893, int_75895)
        # Adding element type (line 639)
        int_75896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 639, 50), tuple_75893, int_75896)
        
        slice_75897 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 639, 43), None, None, None)
        # Getting the type of 'verts' (line 639)
        verts_75898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 43), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 639)
        getitem___75899 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 639, 43), verts_75898, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 639)
        subscript_call_result_75900 = invoke(stypy.reporting.localization.Localization(__file__, 639, 43), getitem___75899, (tuple_75893, slice_75897))
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 639, 35), tuple_75889, subscript_call_result_75900)
        # Adding element type (line 639)
        
        # Obtaining an instance of the builtin type 'list' (line 640)
        list_75901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 640, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 640)
        # Adding element type (line 640)
        
        # Getting the type of 'x' (line 640)
        x_75902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 37), 'x', False)
        # Applying the 'usub' unary operator (line 640)
        result___neg___75903 = python_operator(stypy.reporting.localization.Localization(__file__, 640, 36), 'usub', x_75902)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 640, 35), list_75901, result___neg___75903)
        # Adding element type (line 640)
        
        # Getting the type of 'y' (line 640)
        y_75904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 41), 'y', False)
        # Applying the 'usub' unary operator (line 640)
        result___neg___75905 = python_operator(stypy.reporting.localization.Localization(__file__, 640, 40), 'usub', y_75904)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 640, 35), list_75901, result___neg___75905)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 639, 35), tuple_75889, list_75901)
        # Adding element type (line 639)
        
        # Obtaining an instance of the builtin type 'list' (line 640)
        list_75906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 640, 45), 'list')
        # Adding type elements to the builtin type 'list' instance (line 640)
        # Adding element type (line 640)
        # Getting the type of 'x' (line 640)
        x_75907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 46), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 640, 45), list_75906, x_75907)
        # Adding element type (line 640)
        # Getting the type of 'y' (line 640)
        y_75908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 49), 'y', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 640, 45), list_75906, y_75908)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 639, 35), tuple_75889, list_75906)
        
        # Processing the call keyword arguments (line 639)
        kwargs_75909 = {}
        # Getting the type of 'np' (line 639)
        np_75887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 24), 'np', False)
        # Obtaining the member 'vstack' of a type (line 639)
        vstack_75888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 639, 24), np_75887, 'vstack')
        # Calling vstack(args, kwargs) (line 639)
        vstack_call_result_75910 = invoke(stypy.reporting.localization.Localization(__file__, 639, 24), vstack_75888, *[tuple_75889], **kwargs_75909)
        
        # Processing the call keyword arguments (line 639)
        kwargs_75911 = {}
        # Getting the type of 'Path' (line 639)
        Path_75886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 19), 'Path', False)
        # Calling Path(args, kwargs) (line 639)
        Path_call_result_75912 = invoke(stypy.reporting.localization.Localization(__file__, 639, 19), Path_75886, *[vstack_call_result_75910], **kwargs_75911)
        
        # Assigning a type to the variable 'left' (line 639)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 639, 12), 'left', Path_call_result_75912)
        
        # Assigning a Call to a Name (line 641):
        
        # Assigning a Call to a Name (line 641):
        
        # Call to Path(...): (line 641)
        # Processing the call arguments (line 641)
        
        # Call to vstack(...): (line 641)
        # Processing the call arguments (line 641)
        
        # Obtaining an instance of the builtin type 'tuple' (line 641)
        tuple_75916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 641)
        # Adding element type (line 641)
        
        # Obtaining an instance of the builtin type 'list' (line 641)
        list_75917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, 36), 'list')
        # Adding type elements to the builtin type 'list' instance (line 641)
        # Adding element type (line 641)
        # Getting the type of 'x' (line 641)
        x_75918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 37), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 36), list_75917, x_75918)
        # Adding element type (line 641)
        # Getting the type of 'y' (line 641)
        y_75919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 40), 'y', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 36), list_75917, y_75919)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 36), tuple_75916, list_75917)
        # Adding element type (line 641)
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 641)
        tuple_75920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, 51), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 641)
        # Adding element type (line 641)
        int_75921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 51), tuple_75920, int_75921)
        # Adding element type (line 641)
        int_75922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, 54), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 51), tuple_75920, int_75922)
        # Adding element type (line 641)
        int_75923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, 57), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 51), tuple_75920, int_75923)
        
        slice_75924 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 641, 44), None, None, None)
        # Getting the type of 'verts' (line 641)
        verts_75925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 44), 'verts', False)
        # Obtaining the member '__getitem__' of a type (line 641)
        getitem___75926 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 641, 44), verts_75925, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 641)
        subscript_call_result_75927 = invoke(stypy.reporting.localization.Localization(__file__, 641, 44), getitem___75926, (tuple_75920, slice_75924))
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 36), tuple_75916, subscript_call_result_75927)
        # Adding element type (line 641)
        
        # Obtaining an instance of the builtin type 'list' (line 641)
        list_75928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, 65), 'list')
        # Adding type elements to the builtin type 'list' instance (line 641)
        # Adding element type (line 641)
        
        # Getting the type of 'x' (line 641)
        x_75929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 67), 'x', False)
        # Applying the 'usub' unary operator (line 641)
        result___neg___75930 = python_operator(stypy.reporting.localization.Localization(__file__, 641, 66), 'usub', x_75929)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 65), list_75928, result___neg___75930)
        # Adding element type (line 641)
        
        # Getting the type of 'y' (line 641)
        y_75931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 71), 'y', False)
        # Applying the 'usub' unary operator (line 641)
        result___neg___75932 = python_operator(stypy.reporting.localization.Localization(__file__, 641, 70), 'usub', y_75931)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 65), list_75928, result___neg___75932)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 36), tuple_75916, list_75928)
        
        # Processing the call keyword arguments (line 641)
        kwargs_75933 = {}
        # Getting the type of 'np' (line 641)
        np_75914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 25), 'np', False)
        # Obtaining the member 'vstack' of a type (line 641)
        vstack_75915 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 641, 25), np_75914, 'vstack')
        # Calling vstack(args, kwargs) (line 641)
        vstack_call_result_75934 = invoke(stypy.reporting.localization.Localization(__file__, 641, 25), vstack_75915, *[tuple_75916], **kwargs_75933)
        
        # Processing the call keyword arguments (line 641)
        kwargs_75935 = {}
        # Getting the type of 'Path' (line 641)
        Path_75913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 20), 'Path', False)
        # Calling Path(args, kwargs) (line 641)
        Path_call_result_75936 = invoke(stypy.reporting.localization.Localization(__file__, 641, 20), Path_75913, *[vstack_call_result_75934], **kwargs_75935)
        
        # Assigning a type to the variable 'right' (line 641)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 641, 12), 'right', Path_call_result_75936)
        
        
        # Getting the type of 'fs' (line 643)
        fs_75937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 15), 'fs')
        unicode_75938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 21), 'unicode', u'top')
        # Applying the binary operator '==' (line 643)
        result_eq_75939 = python_operator(stypy.reporting.localization.Localization(__file__, 643, 15), '==', fs_75937, unicode_75938)
        
        # Testing the type of an if condition (line 643)
        if_condition_75940 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 643, 12), result_eq_75939)
        # Assigning a type to the variable 'if_condition_75940' (line 643)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 643, 12), 'if_condition_75940', if_condition_75940)
        # SSA begins for if statement (line 643)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 644):
        
        # Assigning a Name to a Name (line 644):
        # Getting the type of 'top' (line 644)
        top_75941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 35), 'top')
        # Assigning a type to the variable 'tuple_assignment_74196' (line 644)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 16), 'tuple_assignment_74196', top_75941)
        
        # Assigning a Name to a Name (line 644):
        # Getting the type of 'bottom' (line 644)
        bottom_75942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 40), 'bottom')
        # Assigning a type to the variable 'tuple_assignment_74197' (line 644)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 16), 'tuple_assignment_74197', bottom_75942)
        
        # Assigning a Name to a Name (line 644):
        # Getting the type of 'tuple_assignment_74196' (line 644)
        tuple_assignment_74196_75943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 16), 'tuple_assignment_74196')
        # Assigning a type to the variable 'mpath' (line 644)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 16), 'mpath', tuple_assignment_74196_75943)
        
        # Assigning a Name to a Name (line 644):
        # Getting the type of 'tuple_assignment_74197' (line 644)
        tuple_assignment_74197_75944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 16), 'tuple_assignment_74197')
        # Assigning a type to the variable 'mpath_alt' (line 644)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 23), 'mpath_alt', tuple_assignment_74197_75944)
        # SSA branch for the else part of an if statement (line 643)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 645)
        fs_75945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 17), 'fs')
        unicode_75946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 23), 'unicode', u'bottom')
        # Applying the binary operator '==' (line 645)
        result_eq_75947 = python_operator(stypy.reporting.localization.Localization(__file__, 645, 17), '==', fs_75945, unicode_75946)
        
        # Testing the type of an if condition (line 645)
        if_condition_75948 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 645, 17), result_eq_75947)
        # Assigning a type to the variable 'if_condition_75948' (line 645)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 645, 17), 'if_condition_75948', if_condition_75948)
        # SSA begins for if statement (line 645)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 646):
        
        # Assigning a Name to a Name (line 646):
        # Getting the type of 'bottom' (line 646)
        bottom_75949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 35), 'bottom')
        # Assigning a type to the variable 'tuple_assignment_74198' (line 646)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 646, 16), 'tuple_assignment_74198', bottom_75949)
        
        # Assigning a Name to a Name (line 646):
        # Getting the type of 'top' (line 646)
        top_75950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 43), 'top')
        # Assigning a type to the variable 'tuple_assignment_74199' (line 646)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 646, 16), 'tuple_assignment_74199', top_75950)
        
        # Assigning a Name to a Name (line 646):
        # Getting the type of 'tuple_assignment_74198' (line 646)
        tuple_assignment_74198_75951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 16), 'tuple_assignment_74198')
        # Assigning a type to the variable 'mpath' (line 646)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 646, 16), 'mpath', tuple_assignment_74198_75951)
        
        # Assigning a Name to a Name (line 646):
        # Getting the type of 'tuple_assignment_74199' (line 646)
        tuple_assignment_74199_75952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 16), 'tuple_assignment_74199')
        # Assigning a type to the variable 'mpath_alt' (line 646)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 646, 23), 'mpath_alt', tuple_assignment_74199_75952)
        # SSA branch for the else part of an if statement (line 645)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 647)
        fs_75953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 17), 'fs')
        unicode_75954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 647, 23), 'unicode', u'left')
        # Applying the binary operator '==' (line 647)
        result_eq_75955 = python_operator(stypy.reporting.localization.Localization(__file__, 647, 17), '==', fs_75953, unicode_75954)
        
        # Testing the type of an if condition (line 647)
        if_condition_75956 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 647, 17), result_eq_75955)
        # Assigning a type to the variable 'if_condition_75956' (line 647)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 647, 17), 'if_condition_75956', if_condition_75956)
        # SSA begins for if statement (line 647)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 648):
        
        # Assigning a Name to a Name (line 648):
        # Getting the type of 'left' (line 648)
        left_75957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 35), 'left')
        # Assigning a type to the variable 'tuple_assignment_74200' (line 648)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 648, 16), 'tuple_assignment_74200', left_75957)
        
        # Assigning a Name to a Name (line 648):
        # Getting the type of 'right' (line 648)
        right_75958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 41), 'right')
        # Assigning a type to the variable 'tuple_assignment_74201' (line 648)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 648, 16), 'tuple_assignment_74201', right_75958)
        
        # Assigning a Name to a Name (line 648):
        # Getting the type of 'tuple_assignment_74200' (line 648)
        tuple_assignment_74200_75959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 16), 'tuple_assignment_74200')
        # Assigning a type to the variable 'mpath' (line 648)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 648, 16), 'mpath', tuple_assignment_74200_75959)
        
        # Assigning a Name to a Name (line 648):
        # Getting the type of 'tuple_assignment_74201' (line 648)
        tuple_assignment_74201_75960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 16), 'tuple_assignment_74201')
        # Assigning a type to the variable 'mpath_alt' (line 648)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 648, 23), 'mpath_alt', tuple_assignment_74201_75960)
        # SSA branch for the else part of an if statement (line 647)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Tuple to a Tuple (line 650):
        
        # Assigning a Name to a Name (line 650):
        # Getting the type of 'right' (line 650)
        right_75961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 35), 'right')
        # Assigning a type to the variable 'tuple_assignment_74202' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 16), 'tuple_assignment_74202', right_75961)
        
        # Assigning a Name to a Name (line 650):
        # Getting the type of 'left' (line 650)
        left_75962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 42), 'left')
        # Assigning a type to the variable 'tuple_assignment_74203' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 16), 'tuple_assignment_74203', left_75962)
        
        # Assigning a Name to a Name (line 650):
        # Getting the type of 'tuple_assignment_74202' (line 650)
        tuple_assignment_74202_75963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 16), 'tuple_assignment_74202')
        # Assigning a type to the variable 'mpath' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 16), 'mpath', tuple_assignment_74202_75963)
        
        # Assigning a Name to a Name (line 650):
        # Getting the type of 'tuple_assignment_74203' (line 650)
        tuple_assignment_74203_75964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 16), 'tuple_assignment_74203')
        # Assigning a type to the variable 'mpath_alt' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 23), 'mpath_alt', tuple_assignment_74203_75964)
        # SSA join for if statement (line 647)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 645)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 643)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 652):
        
        # Assigning a Name to a Attribute (line 652):
        # Getting the type of 'mpath' (line 652)
        mpath_75965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 25), 'mpath')
        # Getting the type of 'self' (line 652)
        self_75966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 12), 'self')
        # Setting the type of the member '_path' of a type (line 652)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 652, 12), self_75966, '_path', mpath_75965)
        
        # Assigning a Name to a Attribute (line 653):
        
        # Assigning a Name to a Attribute (line 653):
        # Getting the type of 'mpath_alt' (line 653)
        mpath_alt_75967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 29), 'mpath_alt')
        # Getting the type of 'self' (line 653)
        self_75968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 12), 'self')
        # Setting the type of the member '_alt_path' of a type (line 653)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 653, 12), self_75968, '_alt_path', mpath_alt_75967)
        
        # Assigning a Attribute to a Attribute (line 654):
        
        # Assigning a Attribute to a Attribute (line 654):
        # Getting the type of 'self' (line 654)
        self_75969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 34), 'self')
        # Obtaining the member '_transform' of a type (line 654)
        _transform_75970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 654, 34), self_75969, '_transform')
        # Getting the type of 'self' (line 654)
        self_75971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 12), 'self')
        # Setting the type of the member '_alt_transform' of a type (line 654)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 654, 12), self_75971, '_alt_transform', _transform_75970)
        # SSA join for if statement (line 630)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Str to a Attribute (line 656):
        
        # Assigning a Str to a Attribute (line 656):
        unicode_75972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 26), 'unicode', u'miter')
        # Getting the type of 'self' (line 656)
        self_75973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 8), 'self')
        # Setting the type of the member '_joinstyle' of a type (line 656)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 656, 8), self_75973, '_joinstyle', unicode_75972)
        
        # ################# End of '_set_hexagon2(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_hexagon2' in the type store
        # Getting the type of 'stypy_return_type' (line 623)
        stypy_return_type_75974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_75974)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_hexagon2'
        return stypy_return_type_75974


    @norecursion
    def _set_octagon(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_octagon'
        module_type_store = module_type_store.open_function_context('_set_octagon', 658, 4, False)
        # Assigning a type to the variable 'self' (line 659)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 659, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_octagon.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_octagon.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_octagon.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_octagon.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_octagon')
        MarkerStyle._set_octagon.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_octagon.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_octagon.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_octagon.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_octagon.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_octagon.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_octagon.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_octagon', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_octagon', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_octagon(...)' code ##################

        
        # Assigning a Call to a Attribute (line 659):
        
        # Assigning a Call to a Attribute (line 659):
        
        # Call to scale(...): (line 659)
        # Processing the call arguments (line 659)
        float_75979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 43), 'float')
        # Processing the call keyword arguments (line 659)
        kwargs_75980 = {}
        
        # Call to Affine2D(...): (line 659)
        # Processing the call keyword arguments (line 659)
        kwargs_75976 = {}
        # Getting the type of 'Affine2D' (line 659)
        Affine2D_75975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 659, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 659)
        Affine2D_call_result_75977 = invoke(stypy.reporting.localization.Localization(__file__, 659, 26), Affine2D_75975, *[], **kwargs_75976)
        
        # Obtaining the member 'scale' of a type (line 659)
        scale_75978 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 659, 26), Affine2D_call_result_75977, 'scale')
        # Calling scale(args, kwargs) (line 659)
        scale_call_result_75981 = invoke(stypy.reporting.localization.Localization(__file__, 659, 26), scale_75978, *[float_75979], **kwargs_75980)
        
        # Getting the type of 'self' (line 659)
        self_75982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 659, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 659)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 659, 8), self_75982, '_transform', scale_call_result_75981)
        
        # Assigning a Num to a Attribute (line 660):
        
        # Assigning a Num to a Attribute (line 660):
        float_75983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 31), 'float')
        # Getting the type of 'self' (line 660)
        self_75984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 660)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 660, 8), self_75984, '_snap_threshold', float_75983)
        
        # Assigning a Call to a Name (line 662):
        
        # Assigning a Call to a Name (line 662):
        
        # Call to get_fillstyle(...): (line 662)
        # Processing the call keyword arguments (line 662)
        kwargs_75987 = {}
        # Getting the type of 'self' (line 662)
        self_75985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 13), 'self', False)
        # Obtaining the member 'get_fillstyle' of a type (line 662)
        get_fillstyle_75986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 662, 13), self_75985, 'get_fillstyle')
        # Calling get_fillstyle(args, kwargs) (line 662)
        get_fillstyle_call_result_75988 = invoke(stypy.reporting.localization.Localization(__file__, 662, 13), get_fillstyle_75986, *[], **kwargs_75987)
        
        # Assigning a type to the variable 'fs' (line 662)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 662, 8), 'fs', get_fillstyle_call_result_75988)
        
        # Assigning a Call to a Name (line 663):
        
        # Assigning a Call to a Name (line 663):
        
        # Call to unit_regular_polygon(...): (line 663)
        # Processing the call arguments (line 663)
        int_75991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 663, 45), 'int')
        # Processing the call keyword arguments (line 663)
        kwargs_75992 = {}
        # Getting the type of 'Path' (line 663)
        Path_75989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 19), 'Path', False)
        # Obtaining the member 'unit_regular_polygon' of a type (line 663)
        unit_regular_polygon_75990 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 663, 19), Path_75989, 'unit_regular_polygon')
        # Calling unit_regular_polygon(args, kwargs) (line 663)
        unit_regular_polygon_call_result_75993 = invoke(stypy.reporting.localization.Localization(__file__, 663, 19), unit_regular_polygon_75990, *[int_75991], **kwargs_75992)
        
        # Assigning a type to the variable 'polypath' (line 663)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 663, 8), 'polypath', unit_regular_polygon_call_result_75993)
        
        
        
        # Call to _half_fill(...): (line 665)
        # Processing the call keyword arguments (line 665)
        kwargs_75996 = {}
        # Getting the type of 'self' (line 665)
        self_75994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 15), 'self', False)
        # Obtaining the member '_half_fill' of a type (line 665)
        _half_fill_75995 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 665, 15), self_75994, '_half_fill')
        # Calling _half_fill(args, kwargs) (line 665)
        _half_fill_call_result_75997 = invoke(stypy.reporting.localization.Localization(__file__, 665, 15), _half_fill_75995, *[], **kwargs_75996)
        
        # Applying the 'not' unary operator (line 665)
        result_not__75998 = python_operator(stypy.reporting.localization.Localization(__file__, 665, 11), 'not', _half_fill_call_result_75997)
        
        # Testing the type of an if condition (line 665)
        if_condition_75999 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 665, 8), result_not__75998)
        # Assigning a type to the variable 'if_condition_75999' (line 665)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 665, 8), 'if_condition_75999', if_condition_75999)
        # SSA begins for if statement (line 665)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to rotate_deg(...): (line 666)
        # Processing the call arguments (line 666)
        float_76003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 666, 39), 'float')
        # Processing the call keyword arguments (line 666)
        kwargs_76004 = {}
        # Getting the type of 'self' (line 666)
        self_76000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 12), 'self', False)
        # Obtaining the member '_transform' of a type (line 666)
        _transform_76001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 666, 12), self_76000, '_transform')
        # Obtaining the member 'rotate_deg' of a type (line 666)
        rotate_deg_76002 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 666, 12), _transform_76001, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 666)
        rotate_deg_call_result_76005 = invoke(stypy.reporting.localization.Localization(__file__, 666, 12), rotate_deg_76002, *[float_76003], **kwargs_76004)
        
        
        # Assigning a Name to a Attribute (line 667):
        
        # Assigning a Name to a Attribute (line 667):
        # Getting the type of 'polypath' (line 667)
        polypath_76006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 25), 'polypath')
        # Getting the type of 'self' (line 667)
        self_76007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 12), 'self')
        # Setting the type of the member '_path' of a type (line 667)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 667, 12), self_76007, '_path', polypath_76006)
        # SSA branch for the else part of an if statement (line 665)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a BinOp to a Name (line 669):
        
        # Assigning a BinOp to a Name (line 669):
        
        # Call to sqrt(...): (line 669)
        # Processing the call arguments (line 669)
        float_76010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 669, 24), 'float')
        # Processing the call keyword arguments (line 669)
        kwargs_76011 = {}
        # Getting the type of 'np' (line 669)
        np_76008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 16), 'np', False)
        # Obtaining the member 'sqrt' of a type (line 669)
        sqrt_76009 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 669, 16), np_76008, 'sqrt')
        # Calling sqrt(args, kwargs) (line 669)
        sqrt_call_result_76012 = invoke(stypy.reporting.localization.Localization(__file__, 669, 16), sqrt_76009, *[float_76010], **kwargs_76011)
        
        float_76013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 669, 30), 'float')
        # Applying the binary operator 'div' (line 669)
        result_div_76014 = python_operator(stypy.reporting.localization.Localization(__file__, 669, 16), 'div', sqrt_call_result_76012, float_76013)
        
        # Assigning a type to the variable 'x' (line 669)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 669, 12), 'x', result_div_76014)
        
        # Assigning a Call to a Name (line 670):
        
        # Assigning a Call to a Name (line 670):
        
        # Call to Path(...): (line 670)
        # Processing the call arguments (line 670)
        
        # Obtaining an instance of the builtin type 'list' (line 670)
        list_76016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 670)
        # Adding element type (line 670)
        
        # Obtaining an instance of the builtin type 'list' (line 670)
        list_76017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 670)
        # Adding element type (line 670)
        int_76018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 25), list_76017, int_76018)
        # Adding element type (line 670)
        int_76019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 25), list_76017, int_76019)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 24), list_76016, list_76017)
        # Adding element type (line 670)
        
        # Obtaining an instance of the builtin type 'list' (line 670)
        list_76020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 670)
        # Adding element type (line 670)
        int_76021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 34), list_76020, int_76021)
        # Adding element type (line 670)
        int_76022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 34), list_76020, int_76022)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 24), list_76016, list_76020)
        # Adding element type (line 670)
        
        # Obtaining an instance of the builtin type 'list' (line 670)
        list_76023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 42), 'list')
        # Adding type elements to the builtin type 'list' instance (line 670)
        # Adding element type (line 670)
        
        # Getting the type of 'x' (line 670)
        x_76024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 44), 'x', False)
        # Applying the 'usub' unary operator (line 670)
        result___neg___76025 = python_operator(stypy.reporting.localization.Localization(__file__, 670, 43), 'usub', x_76024)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 42), list_76023, result___neg___76025)
        # Adding element type (line 670)
        int_76026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 42), list_76023, int_76026)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 24), list_76016, list_76023)
        # Adding element type (line 670)
        
        # Obtaining an instance of the builtin type 'list' (line 670)
        list_76027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 51), 'list')
        # Adding type elements to the builtin type 'list' instance (line 670)
        # Adding element type (line 670)
        int_76028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 51), list_76027, int_76028)
        # Adding element type (line 670)
        # Getting the type of 'x' (line 670)
        x_76029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 56), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 51), list_76027, x_76029)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 24), list_76016, list_76027)
        # Adding element type (line 670)
        
        # Obtaining an instance of the builtin type 'list' (line 671)
        list_76030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 671)
        # Adding element type (line 671)
        int_76031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 25), list_76030, int_76031)
        # Adding element type (line 671)
        
        # Getting the type of 'x' (line 671)
        x_76032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 31), 'x', False)
        # Applying the 'usub' unary operator (line 671)
        result___neg___76033 = python_operator(stypy.reporting.localization.Localization(__file__, 671, 30), 'usub', x_76032)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 25), list_76030, result___neg___76033)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 24), list_76016, list_76030)
        # Adding element type (line 670)
        
        # Obtaining an instance of the builtin type 'list' (line 671)
        list_76034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 671)
        # Adding element type (line 671)
        
        # Getting the type of 'x' (line 671)
        x_76035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 37), 'x', False)
        # Applying the 'usub' unary operator (line 671)
        result___neg___76036 = python_operator(stypy.reporting.localization.Localization(__file__, 671, 36), 'usub', x_76035)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 35), list_76034, result___neg___76036)
        # Adding element type (line 671)
        int_76037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 35), list_76034, int_76037)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 24), list_76016, list_76034)
        # Adding element type (line 670)
        
        # Obtaining an instance of the builtin type 'list' (line 671)
        list_76038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 45), 'list')
        # Adding type elements to the builtin type 'list' instance (line 671)
        # Adding element type (line 671)
        int_76039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 46), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 45), list_76038, int_76039)
        # Adding element type (line 671)
        int_76040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 45), list_76038, int_76040)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 24), list_76016, list_76038)
        
        # Processing the call keyword arguments (line 670)
        kwargs_76041 = {}
        # Getting the type of 'Path' (line 670)
        Path_76015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 19), 'Path', False)
        # Calling Path(args, kwargs) (line 670)
        Path_call_result_76042 = invoke(stypy.reporting.localization.Localization(__file__, 670, 19), Path_76015, *[list_76016], **kwargs_76041)
        
        # Assigning a type to the variable 'half' (line 670)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 670, 12), 'half', Path_call_result_76042)
        
        
        # Getting the type of 'fs' (line 673)
        fs_76043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 15), 'fs')
        unicode_76044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 21), 'unicode', u'bottom')
        # Applying the binary operator '==' (line 673)
        result_eq_76045 = python_operator(stypy.reporting.localization.Localization(__file__, 673, 15), '==', fs_76043, unicode_76044)
        
        # Testing the type of an if condition (line 673)
        if_condition_76046 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 673, 12), result_eq_76045)
        # Assigning a type to the variable 'if_condition_76046' (line 673)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 673, 12), 'if_condition_76046', if_condition_76046)
        # SSA begins for if statement (line 673)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 674):
        
        # Assigning a Num to a Name (line 674):
        float_76047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 674, 25), 'float')
        # Assigning a type to the variable 'rotate' (line 674)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 16), 'rotate', float_76047)
        # SSA branch for the else part of an if statement (line 673)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 675)
        fs_76048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 17), 'fs')
        unicode_76049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 675, 23), 'unicode', u'top')
        # Applying the binary operator '==' (line 675)
        result_eq_76050 = python_operator(stypy.reporting.localization.Localization(__file__, 675, 17), '==', fs_76048, unicode_76049)
        
        # Testing the type of an if condition (line 675)
        if_condition_76051 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 675, 17), result_eq_76050)
        # Assigning a type to the variable 'if_condition_76051' (line 675)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 675, 17), 'if_condition_76051', if_condition_76051)
        # SSA begins for if statement (line 675)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 676):
        
        # Assigning a Num to a Name (line 676):
        float_76052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 676, 25), 'float')
        # Assigning a type to the variable 'rotate' (line 676)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 676, 16), 'rotate', float_76052)
        # SSA branch for the else part of an if statement (line 675)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 677)
        fs_76053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 17), 'fs')
        unicode_76054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 677, 23), 'unicode', u'right')
        # Applying the binary operator '==' (line 677)
        result_eq_76055 = python_operator(stypy.reporting.localization.Localization(__file__, 677, 17), '==', fs_76053, unicode_76054)
        
        # Testing the type of an if condition (line 677)
        if_condition_76056 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 677, 17), result_eq_76055)
        # Assigning a type to the variable 'if_condition_76056' (line 677)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 677, 17), 'if_condition_76056', if_condition_76056)
        # SSA begins for if statement (line 677)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 678):
        
        # Assigning a Num to a Name (line 678):
        float_76057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 678, 25), 'float')
        # Assigning a type to the variable 'rotate' (line 678)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 16), 'rotate', float_76057)
        # SSA branch for the else part of an if statement (line 677)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Num to a Name (line 680):
        
        # Assigning a Num to a Name (line 680):
        float_76058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 680, 25), 'float')
        # Assigning a type to the variable 'rotate' (line 680)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 16), 'rotate', float_76058)
        # SSA join for if statement (line 677)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 675)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 673)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to rotate_deg(...): (line 682)
        # Processing the call arguments (line 682)
        # Getting the type of 'rotate' (line 682)
        rotate_76062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 39), 'rotate', False)
        # Processing the call keyword arguments (line 682)
        kwargs_76063 = {}
        # Getting the type of 'self' (line 682)
        self_76059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 12), 'self', False)
        # Obtaining the member '_transform' of a type (line 682)
        _transform_76060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 682, 12), self_76059, '_transform')
        # Obtaining the member 'rotate_deg' of a type (line 682)
        rotate_deg_76061 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 682, 12), _transform_76060, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 682)
        rotate_deg_call_result_76064 = invoke(stypy.reporting.localization.Localization(__file__, 682, 12), rotate_deg_76061, *[rotate_76062], **kwargs_76063)
        
        
        # Multiple assignment of 2 elements.
        
        # Assigning a Name to a Attribute (line 683):
        # Getting the type of 'half' (line 683)
        half_76065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 42), 'half')
        # Getting the type of 'self' (line 683)
        self_76066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 25), 'self')
        # Setting the type of the member '_alt_path' of a type (line 683)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 683, 25), self_76066, '_alt_path', half_76065)
        
        # Assigning a Attribute to a Attribute (line 683):
        # Getting the type of 'self' (line 683)
        self_76067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 25), 'self')
        # Obtaining the member '_alt_path' of a type (line 683)
        _alt_path_76068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 683, 25), self_76067, '_alt_path')
        # Getting the type of 'self' (line 683)
        self_76069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 12), 'self')
        # Setting the type of the member '_path' of a type (line 683)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 683, 12), self_76069, '_path', _alt_path_76068)
        
        # Assigning a Call to a Attribute (line 684):
        
        # Assigning a Call to a Attribute (line 684):
        
        # Call to rotate_deg(...): (line 684)
        # Processing the call arguments (line 684)
        float_76076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 684, 70), 'float')
        # Processing the call keyword arguments (line 684)
        kwargs_76077 = {}
        
        # Call to frozen(...): (line 684)
        # Processing the call keyword arguments (line 684)
        kwargs_76073 = {}
        # Getting the type of 'self' (line 684)
        self_76070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 34), 'self', False)
        # Obtaining the member '_transform' of a type (line 684)
        _transform_76071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 34), self_76070, '_transform')
        # Obtaining the member 'frozen' of a type (line 684)
        frozen_76072 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 34), _transform_76071, 'frozen')
        # Calling frozen(args, kwargs) (line 684)
        frozen_call_result_76074 = invoke(stypy.reporting.localization.Localization(__file__, 684, 34), frozen_76072, *[], **kwargs_76073)
        
        # Obtaining the member 'rotate_deg' of a type (line 684)
        rotate_deg_76075 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 34), frozen_call_result_76074, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 684)
        rotate_deg_call_result_76078 = invoke(stypy.reporting.localization.Localization(__file__, 684, 34), rotate_deg_76075, *[float_76076], **kwargs_76077)
        
        # Getting the type of 'self' (line 684)
        self_76079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 12), 'self')
        # Setting the type of the member '_alt_transform' of a type (line 684)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 12), self_76079, '_alt_transform', rotate_deg_call_result_76078)
        # SSA join for if statement (line 665)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Str to a Attribute (line 686):
        
        # Assigning a Str to a Attribute (line 686):
        unicode_76080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 686, 26), 'unicode', u'miter')
        # Getting the type of 'self' (line 686)
        self_76081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 8), 'self')
        # Setting the type of the member '_joinstyle' of a type (line 686)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 686, 8), self_76081, '_joinstyle', unicode_76080)
        
        # ################# End of '_set_octagon(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_octagon' in the type store
        # Getting the type of 'stypy_return_type' (line 658)
        stypy_return_type_76082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76082)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_octagon'
        return stypy_return_type_76082

    
    # Assigning a Call to a Name (line 688):

    @norecursion
    def _set_vline(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_vline'
        module_type_store = module_type_store.open_function_context('_set_vline', 690, 4, False)
        # Assigning a type to the variable 'self' (line 691)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 691, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_vline.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_vline.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_vline.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_vline.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_vline')
        MarkerStyle._set_vline.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_vline.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_vline.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_vline.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_vline.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_vline.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_vline.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_vline', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_vline', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_vline(...)' code ##################

        
        # Assigning a Call to a Attribute (line 691):
        
        # Assigning a Call to a Attribute (line 691):
        
        # Call to scale(...): (line 691)
        # Processing the call arguments (line 691)
        float_76087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 43), 'float')
        # Processing the call keyword arguments (line 691)
        kwargs_76088 = {}
        
        # Call to Affine2D(...): (line 691)
        # Processing the call keyword arguments (line 691)
        kwargs_76084 = {}
        # Getting the type of 'Affine2D' (line 691)
        Affine2D_76083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 691)
        Affine2D_call_result_76085 = invoke(stypy.reporting.localization.Localization(__file__, 691, 26), Affine2D_76083, *[], **kwargs_76084)
        
        # Obtaining the member 'scale' of a type (line 691)
        scale_76086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 691, 26), Affine2D_call_result_76085, 'scale')
        # Calling scale(args, kwargs) (line 691)
        scale_call_result_76089 = invoke(stypy.reporting.localization.Localization(__file__, 691, 26), scale_76086, *[float_76087], **kwargs_76088)
        
        # Getting the type of 'self' (line 691)
        self_76090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 691)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 691, 8), self_76090, '_transform', scale_call_result_76089)
        
        # Assigning a Num to a Attribute (line 692):
        
        # Assigning a Num to a Attribute (line 692):
        float_76091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 692, 31), 'float')
        # Getting the type of 'self' (line 692)
        self_76092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 692)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 692, 8), self_76092, '_snap_threshold', float_76091)
        
        # Assigning a Name to a Attribute (line 693):
        
        # Assigning a Name to a Attribute (line 693):
        # Getting the type of 'False' (line 693)
        False_76093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 23), 'False')
        # Getting the type of 'self' (line 693)
        self_76094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 8), 'self')
        # Setting the type of the member '_filled' of a type (line 693)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 693, 8), self_76094, '_filled', False_76093)
        
        # Assigning a Attribute to a Attribute (line 694):
        
        # Assigning a Attribute to a Attribute (line 694):
        # Getting the type of 'self' (line 694)
        self_76095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 21), 'self')
        # Obtaining the member '_line_marker_path' of a type (line 694)
        _line_marker_path_76096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 694, 21), self_76095, '_line_marker_path')
        # Getting the type of 'self' (line 694)
        self_76097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 8), 'self')
        # Setting the type of the member '_path' of a type (line 694)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 694, 8), self_76097, '_path', _line_marker_path_76096)
        
        # ################# End of '_set_vline(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_vline' in the type store
        # Getting the type of 'stypy_return_type' (line 690)
        stypy_return_type_76098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76098)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_vline'
        return stypy_return_type_76098


    @norecursion
    def _set_hline(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_hline'
        module_type_store = module_type_store.open_function_context('_set_hline', 696, 4, False)
        # Assigning a type to the variable 'self' (line 697)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 697, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_hline.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_hline.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_hline.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_hline.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_hline')
        MarkerStyle._set_hline.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_hline.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_hline.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_hline.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_hline.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_hline.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_hline.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_hline', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_hline', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_hline(...)' code ##################

        
        # Call to _set_vline(...): (line 697)
        # Processing the call keyword arguments (line 697)
        kwargs_76101 = {}
        # Getting the type of 'self' (line 697)
        self_76099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 8), 'self', False)
        # Obtaining the member '_set_vline' of a type (line 697)
        _set_vline_76100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 697, 8), self_76099, '_set_vline')
        # Calling _set_vline(args, kwargs) (line 697)
        _set_vline_call_result_76102 = invoke(stypy.reporting.localization.Localization(__file__, 697, 8), _set_vline_76100, *[], **kwargs_76101)
        
        
        # Assigning a Call to a Attribute (line 698):
        
        # Assigning a Call to a Attribute (line 698):
        
        # Call to rotate_deg(...): (line 698)
        # Processing the call arguments (line 698)
        int_76106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 698, 53), 'int')
        # Processing the call keyword arguments (line 698)
        kwargs_76107 = {}
        # Getting the type of 'self' (line 698)
        self_76103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 26), 'self', False)
        # Obtaining the member '_transform' of a type (line 698)
        _transform_76104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 698, 26), self_76103, '_transform')
        # Obtaining the member 'rotate_deg' of a type (line 698)
        rotate_deg_76105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 698, 26), _transform_76104, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 698)
        rotate_deg_call_result_76108 = invoke(stypy.reporting.localization.Localization(__file__, 698, 26), rotate_deg_76105, *[int_76106], **kwargs_76107)
        
        # Getting the type of 'self' (line 698)
        self_76109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 698)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 698, 8), self_76109, '_transform', rotate_deg_call_result_76108)
        
        # ################# End of '_set_hline(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_hline' in the type store
        # Getting the type of 'stypy_return_type' (line 696)
        stypy_return_type_76110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76110)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_hline'
        return stypy_return_type_76110

    
    # Assigning a Call to a Name (line 700):

    @norecursion
    def _set_tickleft(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_tickleft'
        module_type_store = module_type_store.open_function_context('_set_tickleft', 702, 4, False)
        # Assigning a type to the variable 'self' (line 703)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 703, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_tickleft.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_tickleft.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_tickleft.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_tickleft.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_tickleft')
        MarkerStyle._set_tickleft.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_tickleft.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_tickleft.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_tickleft.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_tickleft.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_tickleft.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_tickleft.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_tickleft', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_tickleft', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_tickleft(...)' code ##################

        
        # Assigning a Call to a Attribute (line 703):
        
        # Assigning a Call to a Attribute (line 703):
        
        # Call to scale(...): (line 703)
        # Processing the call arguments (line 703)
        float_76115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 703, 43), 'float')
        float_76116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 703, 49), 'float')
        # Processing the call keyword arguments (line 703)
        kwargs_76117 = {}
        
        # Call to Affine2D(...): (line 703)
        # Processing the call keyword arguments (line 703)
        kwargs_76112 = {}
        # Getting the type of 'Affine2D' (line 703)
        Affine2D_76111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 703)
        Affine2D_call_result_76113 = invoke(stypy.reporting.localization.Localization(__file__, 703, 26), Affine2D_76111, *[], **kwargs_76112)
        
        # Obtaining the member 'scale' of a type (line 703)
        scale_76114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 703, 26), Affine2D_call_result_76113, 'scale')
        # Calling scale(args, kwargs) (line 703)
        scale_call_result_76118 = invoke(stypy.reporting.localization.Localization(__file__, 703, 26), scale_76114, *[float_76115, float_76116], **kwargs_76117)
        
        # Getting the type of 'self' (line 703)
        self_76119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 703)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 703, 8), self_76119, '_transform', scale_call_result_76118)
        
        # Assigning a Num to a Attribute (line 704):
        
        # Assigning a Num to a Attribute (line 704):
        float_76120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 31), 'float')
        # Getting the type of 'self' (line 704)
        self_76121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 704)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 704, 8), self_76121, '_snap_threshold', float_76120)
        
        # Assigning a Name to a Attribute (line 705):
        
        # Assigning a Name to a Attribute (line 705):
        # Getting the type of 'False' (line 705)
        False_76122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 23), 'False')
        # Getting the type of 'self' (line 705)
        self_76123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 8), 'self')
        # Setting the type of the member '_filled' of a type (line 705)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 705, 8), self_76123, '_filled', False_76122)
        
        # Assigning a Attribute to a Attribute (line 706):
        
        # Assigning a Attribute to a Attribute (line 706):
        # Getting the type of 'self' (line 706)
        self_76124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 21), 'self')
        # Obtaining the member '_tickhoriz_path' of a type (line 706)
        _tickhoriz_path_76125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 706, 21), self_76124, '_tickhoriz_path')
        # Getting the type of 'self' (line 706)
        self_76126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 8), 'self')
        # Setting the type of the member '_path' of a type (line 706)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 706, 8), self_76126, '_path', _tickhoriz_path_76125)
        
        # ################# End of '_set_tickleft(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_tickleft' in the type store
        # Getting the type of 'stypy_return_type' (line 702)
        stypy_return_type_76127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76127)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_tickleft'
        return stypy_return_type_76127


    @norecursion
    def _set_tickright(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_tickright'
        module_type_store = module_type_store.open_function_context('_set_tickright', 708, 4, False)
        # Assigning a type to the variable 'self' (line 709)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 709, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_tickright.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_tickright.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_tickright.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_tickright.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_tickright')
        MarkerStyle._set_tickright.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_tickright.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_tickright.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_tickright.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_tickright.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_tickright.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_tickright.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_tickright', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_tickright', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_tickright(...)' code ##################

        
        # Assigning a Call to a Attribute (line 709):
        
        # Assigning a Call to a Attribute (line 709):
        
        # Call to scale(...): (line 709)
        # Processing the call arguments (line 709)
        float_76132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 43), 'float')
        float_76133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 48), 'float')
        # Processing the call keyword arguments (line 709)
        kwargs_76134 = {}
        
        # Call to Affine2D(...): (line 709)
        # Processing the call keyword arguments (line 709)
        kwargs_76129 = {}
        # Getting the type of 'Affine2D' (line 709)
        Affine2D_76128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 709)
        Affine2D_call_result_76130 = invoke(stypy.reporting.localization.Localization(__file__, 709, 26), Affine2D_76128, *[], **kwargs_76129)
        
        # Obtaining the member 'scale' of a type (line 709)
        scale_76131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 709, 26), Affine2D_call_result_76130, 'scale')
        # Calling scale(args, kwargs) (line 709)
        scale_call_result_76135 = invoke(stypy.reporting.localization.Localization(__file__, 709, 26), scale_76131, *[float_76132, float_76133], **kwargs_76134)
        
        # Getting the type of 'self' (line 709)
        self_76136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 709)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 709, 8), self_76136, '_transform', scale_call_result_76135)
        
        # Assigning a Num to a Attribute (line 710):
        
        # Assigning a Num to a Attribute (line 710):
        float_76137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 31), 'float')
        # Getting the type of 'self' (line 710)
        self_76138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 710)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 710, 8), self_76138, '_snap_threshold', float_76137)
        
        # Assigning a Name to a Attribute (line 711):
        
        # Assigning a Name to a Attribute (line 711):
        # Getting the type of 'False' (line 711)
        False_76139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 23), 'False')
        # Getting the type of 'self' (line 711)
        self_76140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 8), 'self')
        # Setting the type of the member '_filled' of a type (line 711)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 711, 8), self_76140, '_filled', False_76139)
        
        # Assigning a Attribute to a Attribute (line 712):
        
        # Assigning a Attribute to a Attribute (line 712):
        # Getting the type of 'self' (line 712)
        self_76141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 21), 'self')
        # Obtaining the member '_tickhoriz_path' of a type (line 712)
        _tickhoriz_path_76142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 712, 21), self_76141, '_tickhoriz_path')
        # Getting the type of 'self' (line 712)
        self_76143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 8), 'self')
        # Setting the type of the member '_path' of a type (line 712)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 712, 8), self_76143, '_path', _tickhoriz_path_76142)
        
        # ################# End of '_set_tickright(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_tickright' in the type store
        # Getting the type of 'stypy_return_type' (line 708)
        stypy_return_type_76144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76144)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_tickright'
        return stypy_return_type_76144

    
    # Assigning a Call to a Name (line 714):

    @norecursion
    def _set_tickup(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_tickup'
        module_type_store = module_type_store.open_function_context('_set_tickup', 716, 4, False)
        # Assigning a type to the variable 'self' (line 717)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 717, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_tickup.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_tickup.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_tickup.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_tickup.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_tickup')
        MarkerStyle._set_tickup.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_tickup.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_tickup.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_tickup.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_tickup.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_tickup.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_tickup.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_tickup', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_tickup', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_tickup(...)' code ##################

        
        # Assigning a Call to a Attribute (line 717):
        
        # Assigning a Call to a Attribute (line 717):
        
        # Call to scale(...): (line 717)
        # Processing the call arguments (line 717)
        float_76149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 43), 'float')
        float_76150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 48), 'float')
        # Processing the call keyword arguments (line 717)
        kwargs_76151 = {}
        
        # Call to Affine2D(...): (line 717)
        # Processing the call keyword arguments (line 717)
        kwargs_76146 = {}
        # Getting the type of 'Affine2D' (line 717)
        Affine2D_76145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 717)
        Affine2D_call_result_76147 = invoke(stypy.reporting.localization.Localization(__file__, 717, 26), Affine2D_76145, *[], **kwargs_76146)
        
        # Obtaining the member 'scale' of a type (line 717)
        scale_76148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 26), Affine2D_call_result_76147, 'scale')
        # Calling scale(args, kwargs) (line 717)
        scale_call_result_76152 = invoke(stypy.reporting.localization.Localization(__file__, 717, 26), scale_76148, *[float_76149, float_76150], **kwargs_76151)
        
        # Getting the type of 'self' (line 717)
        self_76153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 717)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 8), self_76153, '_transform', scale_call_result_76152)
        
        # Assigning a Num to a Attribute (line 718):
        
        # Assigning a Num to a Attribute (line 718):
        float_76154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 31), 'float')
        # Getting the type of 'self' (line 718)
        self_76155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 718, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 718)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 718, 8), self_76155, '_snap_threshold', float_76154)
        
        # Assigning a Name to a Attribute (line 719):
        
        # Assigning a Name to a Attribute (line 719):
        # Getting the type of 'False' (line 719)
        False_76156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 23), 'False')
        # Getting the type of 'self' (line 719)
        self_76157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 8), 'self')
        # Setting the type of the member '_filled' of a type (line 719)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 719, 8), self_76157, '_filled', False_76156)
        
        # Assigning a Attribute to a Attribute (line 720):
        
        # Assigning a Attribute to a Attribute (line 720):
        # Getting the type of 'self' (line 720)
        self_76158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 21), 'self')
        # Obtaining the member '_tickvert_path' of a type (line 720)
        _tickvert_path_76159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 720, 21), self_76158, '_tickvert_path')
        # Getting the type of 'self' (line 720)
        self_76160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 8), 'self')
        # Setting the type of the member '_path' of a type (line 720)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 720, 8), self_76160, '_path', _tickvert_path_76159)
        
        # ################# End of '_set_tickup(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_tickup' in the type store
        # Getting the type of 'stypy_return_type' (line 716)
        stypy_return_type_76161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76161)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_tickup'
        return stypy_return_type_76161


    @norecursion
    def _set_tickdown(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_tickdown'
        module_type_store = module_type_store.open_function_context('_set_tickdown', 722, 4, False)
        # Assigning a type to the variable 'self' (line 723)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 723, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_tickdown.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_tickdown.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_tickdown.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_tickdown.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_tickdown')
        MarkerStyle._set_tickdown.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_tickdown.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_tickdown.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_tickdown.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_tickdown.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_tickdown.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_tickdown.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_tickdown', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_tickdown', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_tickdown(...)' code ##################

        
        # Assigning a Call to a Attribute (line 723):
        
        # Assigning a Call to a Attribute (line 723):
        
        # Call to scale(...): (line 723)
        # Processing the call arguments (line 723)
        float_76166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 723, 43), 'float')
        float_76167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 723, 48), 'float')
        # Processing the call keyword arguments (line 723)
        kwargs_76168 = {}
        
        # Call to Affine2D(...): (line 723)
        # Processing the call keyword arguments (line 723)
        kwargs_76163 = {}
        # Getting the type of 'Affine2D' (line 723)
        Affine2D_76162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 723)
        Affine2D_call_result_76164 = invoke(stypy.reporting.localization.Localization(__file__, 723, 26), Affine2D_76162, *[], **kwargs_76163)
        
        # Obtaining the member 'scale' of a type (line 723)
        scale_76165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 26), Affine2D_call_result_76164, 'scale')
        # Calling scale(args, kwargs) (line 723)
        scale_call_result_76169 = invoke(stypy.reporting.localization.Localization(__file__, 723, 26), scale_76165, *[float_76166, float_76167], **kwargs_76168)
        
        # Getting the type of 'self' (line 723)
        self_76170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 723)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 8), self_76170, '_transform', scale_call_result_76169)
        
        # Assigning a Num to a Attribute (line 724):
        
        # Assigning a Num to a Attribute (line 724):
        float_76171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 31), 'float')
        # Getting the type of 'self' (line 724)
        self_76172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 724)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 8), self_76172, '_snap_threshold', float_76171)
        
        # Assigning a Name to a Attribute (line 725):
        
        # Assigning a Name to a Attribute (line 725):
        # Getting the type of 'False' (line 725)
        False_76173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 23), 'False')
        # Getting the type of 'self' (line 725)
        self_76174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 8), 'self')
        # Setting the type of the member '_filled' of a type (line 725)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 725, 8), self_76174, '_filled', False_76173)
        
        # Assigning a Attribute to a Attribute (line 726):
        
        # Assigning a Attribute to a Attribute (line 726):
        # Getting the type of 'self' (line 726)
        self_76175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 21), 'self')
        # Obtaining the member '_tickvert_path' of a type (line 726)
        _tickvert_path_76176 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 726, 21), self_76175, '_tickvert_path')
        # Getting the type of 'self' (line 726)
        self_76177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 8), 'self')
        # Setting the type of the member '_path' of a type (line 726)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 726, 8), self_76177, '_path', _tickvert_path_76176)
        
        # ################# End of '_set_tickdown(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_tickdown' in the type store
        # Getting the type of 'stypy_return_type' (line 722)
        stypy_return_type_76178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76178)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_tickdown'
        return stypy_return_type_76178

    
    # Assigning a Call to a Name (line 728):

    @norecursion
    def _set_tri_down(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_tri_down'
        module_type_store = module_type_store.open_function_context('_set_tri_down', 735, 4, False)
        # Assigning a type to the variable 'self' (line 736)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 736, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_tri_down.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_tri_down.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_tri_down.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_tri_down.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_tri_down')
        MarkerStyle._set_tri_down.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_tri_down.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_tri_down.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_tri_down.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_tri_down.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_tri_down.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_tri_down.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_tri_down', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_tri_down', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_tri_down(...)' code ##################

        
        # Assigning a Call to a Attribute (line 736):
        
        # Assigning a Call to a Attribute (line 736):
        
        # Call to scale(...): (line 736)
        # Processing the call arguments (line 736)
        float_76183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 43), 'float')
        # Processing the call keyword arguments (line 736)
        kwargs_76184 = {}
        
        # Call to Affine2D(...): (line 736)
        # Processing the call keyword arguments (line 736)
        kwargs_76180 = {}
        # Getting the type of 'Affine2D' (line 736)
        Affine2D_76179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 736)
        Affine2D_call_result_76181 = invoke(stypy.reporting.localization.Localization(__file__, 736, 26), Affine2D_76179, *[], **kwargs_76180)
        
        # Obtaining the member 'scale' of a type (line 736)
        scale_76182 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 736, 26), Affine2D_call_result_76181, 'scale')
        # Calling scale(args, kwargs) (line 736)
        scale_call_result_76185 = invoke(stypy.reporting.localization.Localization(__file__, 736, 26), scale_76182, *[float_76183], **kwargs_76184)
        
        # Getting the type of 'self' (line 736)
        self_76186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 736)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 736, 8), self_76186, '_transform', scale_call_result_76185)
        
        # Assigning a Num to a Attribute (line 737):
        
        # Assigning a Num to a Attribute (line 737):
        float_76187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 737, 31), 'float')
        # Getting the type of 'self' (line 737)
        self_76188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 737)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 737, 8), self_76188, '_snap_threshold', float_76187)
        
        # Assigning a Name to a Attribute (line 738):
        
        # Assigning a Name to a Attribute (line 738):
        # Getting the type of 'False' (line 738)
        False_76189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 23), 'False')
        # Getting the type of 'self' (line 738)
        self_76190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 8), 'self')
        # Setting the type of the member '_filled' of a type (line 738)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 738, 8), self_76190, '_filled', False_76189)
        
        # Assigning a Attribute to a Attribute (line 739):
        
        # Assigning a Attribute to a Attribute (line 739):
        # Getting the type of 'self' (line 739)
        self_76191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 739, 21), 'self')
        # Obtaining the member '_tri_path' of a type (line 739)
        _tri_path_76192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 739, 21), self_76191, '_tri_path')
        # Getting the type of 'self' (line 739)
        self_76193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 739, 8), 'self')
        # Setting the type of the member '_path' of a type (line 739)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 739, 8), self_76193, '_path', _tri_path_76192)
        
        # ################# End of '_set_tri_down(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_tri_down' in the type store
        # Getting the type of 'stypy_return_type' (line 735)
        stypy_return_type_76194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76194)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_tri_down'
        return stypy_return_type_76194


    @norecursion
    def _set_tri_up(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_tri_up'
        module_type_store = module_type_store.open_function_context('_set_tri_up', 741, 4, False)
        # Assigning a type to the variable 'self' (line 742)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 742, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_tri_up.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_tri_up.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_tri_up.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_tri_up.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_tri_up')
        MarkerStyle._set_tri_up.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_tri_up.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_tri_up.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_tri_up.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_tri_up.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_tri_up.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_tri_up.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_tri_up', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_tri_up', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_tri_up(...)' code ##################

        
        # Call to _set_tri_down(...): (line 742)
        # Processing the call keyword arguments (line 742)
        kwargs_76197 = {}
        # Getting the type of 'self' (line 742)
        self_76195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 8), 'self', False)
        # Obtaining the member '_set_tri_down' of a type (line 742)
        _set_tri_down_76196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 742, 8), self_76195, '_set_tri_down')
        # Calling _set_tri_down(args, kwargs) (line 742)
        _set_tri_down_call_result_76198 = invoke(stypy.reporting.localization.Localization(__file__, 742, 8), _set_tri_down_76196, *[], **kwargs_76197)
        
        
        # Assigning a Call to a Attribute (line 743):
        
        # Assigning a Call to a Attribute (line 743):
        
        # Call to rotate_deg(...): (line 743)
        # Processing the call arguments (line 743)
        int_76202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 743, 53), 'int')
        # Processing the call keyword arguments (line 743)
        kwargs_76203 = {}
        # Getting the type of 'self' (line 743)
        self_76199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 26), 'self', False)
        # Obtaining the member '_transform' of a type (line 743)
        _transform_76200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 743, 26), self_76199, '_transform')
        # Obtaining the member 'rotate_deg' of a type (line 743)
        rotate_deg_76201 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 743, 26), _transform_76200, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 743)
        rotate_deg_call_result_76204 = invoke(stypy.reporting.localization.Localization(__file__, 743, 26), rotate_deg_76201, *[int_76202], **kwargs_76203)
        
        # Getting the type of 'self' (line 743)
        self_76205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 743)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 743, 8), self_76205, '_transform', rotate_deg_call_result_76204)
        
        # ################# End of '_set_tri_up(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_tri_up' in the type store
        # Getting the type of 'stypy_return_type' (line 741)
        stypy_return_type_76206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76206)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_tri_up'
        return stypy_return_type_76206


    @norecursion
    def _set_tri_left(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_tri_left'
        module_type_store = module_type_store.open_function_context('_set_tri_left', 745, 4, False)
        # Assigning a type to the variable 'self' (line 746)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 746, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_tri_left.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_tri_left.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_tri_left.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_tri_left.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_tri_left')
        MarkerStyle._set_tri_left.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_tri_left.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_tri_left.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_tri_left.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_tri_left.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_tri_left.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_tri_left.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_tri_left', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_tri_left', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_tri_left(...)' code ##################

        
        # Call to _set_tri_down(...): (line 746)
        # Processing the call keyword arguments (line 746)
        kwargs_76209 = {}
        # Getting the type of 'self' (line 746)
        self_76207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 8), 'self', False)
        # Obtaining the member '_set_tri_down' of a type (line 746)
        _set_tri_down_76208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 746, 8), self_76207, '_set_tri_down')
        # Calling _set_tri_down(args, kwargs) (line 746)
        _set_tri_down_call_result_76210 = invoke(stypy.reporting.localization.Localization(__file__, 746, 8), _set_tri_down_76208, *[], **kwargs_76209)
        
        
        # Assigning a Call to a Attribute (line 747):
        
        # Assigning a Call to a Attribute (line 747):
        
        # Call to rotate_deg(...): (line 747)
        # Processing the call arguments (line 747)
        int_76214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 53), 'int')
        # Processing the call keyword arguments (line 747)
        kwargs_76215 = {}
        # Getting the type of 'self' (line 747)
        self_76211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 26), 'self', False)
        # Obtaining the member '_transform' of a type (line 747)
        _transform_76212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 747, 26), self_76211, '_transform')
        # Obtaining the member 'rotate_deg' of a type (line 747)
        rotate_deg_76213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 747, 26), _transform_76212, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 747)
        rotate_deg_call_result_76216 = invoke(stypy.reporting.localization.Localization(__file__, 747, 26), rotate_deg_76213, *[int_76214], **kwargs_76215)
        
        # Getting the type of 'self' (line 747)
        self_76217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 747)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 747, 8), self_76217, '_transform', rotate_deg_call_result_76216)
        
        # ################# End of '_set_tri_left(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_tri_left' in the type store
        # Getting the type of 'stypy_return_type' (line 745)
        stypy_return_type_76218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76218)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_tri_left'
        return stypy_return_type_76218


    @norecursion
    def _set_tri_right(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_tri_right'
        module_type_store = module_type_store.open_function_context('_set_tri_right', 749, 4, False)
        # Assigning a type to the variable 'self' (line 750)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 750, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_tri_right.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_tri_right.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_tri_right.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_tri_right.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_tri_right')
        MarkerStyle._set_tri_right.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_tri_right.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_tri_right.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_tri_right.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_tri_right.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_tri_right.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_tri_right.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_tri_right', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_tri_right', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_tri_right(...)' code ##################

        
        # Call to _set_tri_down(...): (line 750)
        # Processing the call keyword arguments (line 750)
        kwargs_76221 = {}
        # Getting the type of 'self' (line 750)
        self_76219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 8), 'self', False)
        # Obtaining the member '_set_tri_down' of a type (line 750)
        _set_tri_down_76220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 750, 8), self_76219, '_set_tri_down')
        # Calling _set_tri_down(args, kwargs) (line 750)
        _set_tri_down_call_result_76222 = invoke(stypy.reporting.localization.Localization(__file__, 750, 8), _set_tri_down_76220, *[], **kwargs_76221)
        
        
        # Assigning a Call to a Attribute (line 751):
        
        # Assigning a Call to a Attribute (line 751):
        
        # Call to rotate_deg(...): (line 751)
        # Processing the call arguments (line 751)
        int_76226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 751, 53), 'int')
        # Processing the call keyword arguments (line 751)
        kwargs_76227 = {}
        # Getting the type of 'self' (line 751)
        self_76223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 26), 'self', False)
        # Obtaining the member '_transform' of a type (line 751)
        _transform_76224 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 751, 26), self_76223, '_transform')
        # Obtaining the member 'rotate_deg' of a type (line 751)
        rotate_deg_76225 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 751, 26), _transform_76224, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 751)
        rotate_deg_call_result_76228 = invoke(stypy.reporting.localization.Localization(__file__, 751, 26), rotate_deg_76225, *[int_76226], **kwargs_76227)
        
        # Getting the type of 'self' (line 751)
        self_76229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 751)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 751, 8), self_76229, '_transform', rotate_deg_call_result_76228)
        
        # ################# End of '_set_tri_right(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_tri_right' in the type store
        # Getting the type of 'stypy_return_type' (line 749)
        stypy_return_type_76230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76230)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_tri_right'
        return stypy_return_type_76230

    
    # Assigning a Call to a Name (line 753):

    @norecursion
    def _set_caretdown(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_caretdown'
        module_type_store = module_type_store.open_function_context('_set_caretdown', 755, 4, False)
        # Assigning a type to the variable 'self' (line 756)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 756, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_caretdown.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_caretdown.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_caretdown.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_caretdown.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_caretdown')
        MarkerStyle._set_caretdown.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_caretdown.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_caretdown.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_caretdown.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_caretdown.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_caretdown.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_caretdown.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_caretdown', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_caretdown', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_caretdown(...)' code ##################

        
        # Assigning a Call to a Attribute (line 756):
        
        # Assigning a Call to a Attribute (line 756):
        
        # Call to scale(...): (line 756)
        # Processing the call arguments (line 756)
        float_76235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 756, 43), 'float')
        # Processing the call keyword arguments (line 756)
        kwargs_76236 = {}
        
        # Call to Affine2D(...): (line 756)
        # Processing the call keyword arguments (line 756)
        kwargs_76232 = {}
        # Getting the type of 'Affine2D' (line 756)
        Affine2D_76231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 756)
        Affine2D_call_result_76233 = invoke(stypy.reporting.localization.Localization(__file__, 756, 26), Affine2D_76231, *[], **kwargs_76232)
        
        # Obtaining the member 'scale' of a type (line 756)
        scale_76234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 756, 26), Affine2D_call_result_76233, 'scale')
        # Calling scale(args, kwargs) (line 756)
        scale_call_result_76237 = invoke(stypy.reporting.localization.Localization(__file__, 756, 26), scale_76234, *[float_76235], **kwargs_76236)
        
        # Getting the type of 'self' (line 756)
        self_76238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 756)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 756, 8), self_76238, '_transform', scale_call_result_76237)
        
        # Assigning a Num to a Attribute (line 757):
        
        # Assigning a Num to a Attribute (line 757):
        float_76239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 757, 31), 'float')
        # Getting the type of 'self' (line 757)
        self_76240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 757)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 757, 8), self_76240, '_snap_threshold', float_76239)
        
        # Assigning a Name to a Attribute (line 758):
        
        # Assigning a Name to a Attribute (line 758):
        # Getting the type of 'False' (line 758)
        False_76241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 23), 'False')
        # Getting the type of 'self' (line 758)
        self_76242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 8), 'self')
        # Setting the type of the member '_filled' of a type (line 758)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 758, 8), self_76242, '_filled', False_76241)
        
        # Assigning a Attribute to a Attribute (line 759):
        
        # Assigning a Attribute to a Attribute (line 759):
        # Getting the type of 'self' (line 759)
        self_76243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 21), 'self')
        # Obtaining the member '_caret_path' of a type (line 759)
        _caret_path_76244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 759, 21), self_76243, '_caret_path')
        # Getting the type of 'self' (line 759)
        self_76245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 8), 'self')
        # Setting the type of the member '_path' of a type (line 759)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 759, 8), self_76245, '_path', _caret_path_76244)
        
        # Assigning a Str to a Attribute (line 760):
        
        # Assigning a Str to a Attribute (line 760):
        unicode_76246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 760, 26), 'unicode', u'miter')
        # Getting the type of 'self' (line 760)
        self_76247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 8), 'self')
        # Setting the type of the member '_joinstyle' of a type (line 760)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 760, 8), self_76247, '_joinstyle', unicode_76246)
        
        # ################# End of '_set_caretdown(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_caretdown' in the type store
        # Getting the type of 'stypy_return_type' (line 755)
        stypy_return_type_76248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76248)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_caretdown'
        return stypy_return_type_76248


    @norecursion
    def _set_caretup(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_caretup'
        module_type_store = module_type_store.open_function_context('_set_caretup', 762, 4, False)
        # Assigning a type to the variable 'self' (line 763)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 763, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_caretup.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_caretup.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_caretup.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_caretup.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_caretup')
        MarkerStyle._set_caretup.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_caretup.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_caretup.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_caretup.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_caretup.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_caretup.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_caretup.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_caretup', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_caretup', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_caretup(...)' code ##################

        
        # Call to _set_caretdown(...): (line 763)
        # Processing the call keyword arguments (line 763)
        kwargs_76251 = {}
        # Getting the type of 'self' (line 763)
        self_76249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 8), 'self', False)
        # Obtaining the member '_set_caretdown' of a type (line 763)
        _set_caretdown_76250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 763, 8), self_76249, '_set_caretdown')
        # Calling _set_caretdown(args, kwargs) (line 763)
        _set_caretdown_call_result_76252 = invoke(stypy.reporting.localization.Localization(__file__, 763, 8), _set_caretdown_76250, *[], **kwargs_76251)
        
        
        # Assigning a Call to a Attribute (line 764):
        
        # Assigning a Call to a Attribute (line 764):
        
        # Call to rotate_deg(...): (line 764)
        # Processing the call arguments (line 764)
        int_76256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 764, 53), 'int')
        # Processing the call keyword arguments (line 764)
        kwargs_76257 = {}
        # Getting the type of 'self' (line 764)
        self_76253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 26), 'self', False)
        # Obtaining the member '_transform' of a type (line 764)
        _transform_76254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 764, 26), self_76253, '_transform')
        # Obtaining the member 'rotate_deg' of a type (line 764)
        rotate_deg_76255 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 764, 26), _transform_76254, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 764)
        rotate_deg_call_result_76258 = invoke(stypy.reporting.localization.Localization(__file__, 764, 26), rotate_deg_76255, *[int_76256], **kwargs_76257)
        
        # Getting the type of 'self' (line 764)
        self_76259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 764)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 764, 8), self_76259, '_transform', rotate_deg_call_result_76258)
        
        # ################# End of '_set_caretup(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_caretup' in the type store
        # Getting the type of 'stypy_return_type' (line 762)
        stypy_return_type_76260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 762, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76260)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_caretup'
        return stypy_return_type_76260


    @norecursion
    def _set_caretleft(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_caretleft'
        module_type_store = module_type_store.open_function_context('_set_caretleft', 766, 4, False)
        # Assigning a type to the variable 'self' (line 767)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 767, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_caretleft.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_caretleft.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_caretleft.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_caretleft.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_caretleft')
        MarkerStyle._set_caretleft.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_caretleft.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_caretleft.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_caretleft.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_caretleft.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_caretleft.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_caretleft.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_caretleft', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_caretleft', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_caretleft(...)' code ##################

        
        # Call to _set_caretdown(...): (line 767)
        # Processing the call keyword arguments (line 767)
        kwargs_76263 = {}
        # Getting the type of 'self' (line 767)
        self_76261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 8), 'self', False)
        # Obtaining the member '_set_caretdown' of a type (line 767)
        _set_caretdown_76262 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 767, 8), self_76261, '_set_caretdown')
        # Calling _set_caretdown(args, kwargs) (line 767)
        _set_caretdown_call_result_76264 = invoke(stypy.reporting.localization.Localization(__file__, 767, 8), _set_caretdown_76262, *[], **kwargs_76263)
        
        
        # Assigning a Call to a Attribute (line 768):
        
        # Assigning a Call to a Attribute (line 768):
        
        # Call to rotate_deg(...): (line 768)
        # Processing the call arguments (line 768)
        int_76268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 768, 53), 'int')
        # Processing the call keyword arguments (line 768)
        kwargs_76269 = {}
        # Getting the type of 'self' (line 768)
        self_76265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 26), 'self', False)
        # Obtaining the member '_transform' of a type (line 768)
        _transform_76266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 768, 26), self_76265, '_transform')
        # Obtaining the member 'rotate_deg' of a type (line 768)
        rotate_deg_76267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 768, 26), _transform_76266, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 768)
        rotate_deg_call_result_76270 = invoke(stypy.reporting.localization.Localization(__file__, 768, 26), rotate_deg_76267, *[int_76268], **kwargs_76269)
        
        # Getting the type of 'self' (line 768)
        self_76271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 768)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 768, 8), self_76271, '_transform', rotate_deg_call_result_76270)
        
        # ################# End of '_set_caretleft(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_caretleft' in the type store
        # Getting the type of 'stypy_return_type' (line 766)
        stypy_return_type_76272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76272)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_caretleft'
        return stypy_return_type_76272


    @norecursion
    def _set_caretright(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_caretright'
        module_type_store = module_type_store.open_function_context('_set_caretright', 770, 4, False)
        # Assigning a type to the variable 'self' (line 771)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 771, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_caretright.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_caretright.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_caretright.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_caretright.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_caretright')
        MarkerStyle._set_caretright.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_caretright.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_caretright.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_caretright.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_caretright.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_caretright.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_caretright.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_caretright', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_caretright', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_caretright(...)' code ##################

        
        # Call to _set_caretdown(...): (line 771)
        # Processing the call keyword arguments (line 771)
        kwargs_76275 = {}
        # Getting the type of 'self' (line 771)
        self_76273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 8), 'self', False)
        # Obtaining the member '_set_caretdown' of a type (line 771)
        _set_caretdown_76274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 771, 8), self_76273, '_set_caretdown')
        # Calling _set_caretdown(args, kwargs) (line 771)
        _set_caretdown_call_result_76276 = invoke(stypy.reporting.localization.Localization(__file__, 771, 8), _set_caretdown_76274, *[], **kwargs_76275)
        
        
        # Assigning a Call to a Attribute (line 772):
        
        # Assigning a Call to a Attribute (line 772):
        
        # Call to rotate_deg(...): (line 772)
        # Processing the call arguments (line 772)
        int_76280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 772, 53), 'int')
        # Processing the call keyword arguments (line 772)
        kwargs_76281 = {}
        # Getting the type of 'self' (line 772)
        self_76277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 26), 'self', False)
        # Obtaining the member '_transform' of a type (line 772)
        _transform_76278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 772, 26), self_76277, '_transform')
        # Obtaining the member 'rotate_deg' of a type (line 772)
        rotate_deg_76279 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 772, 26), _transform_76278, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 772)
        rotate_deg_call_result_76282 = invoke(stypy.reporting.localization.Localization(__file__, 772, 26), rotate_deg_76279, *[int_76280], **kwargs_76281)
        
        # Getting the type of 'self' (line 772)
        self_76283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 772)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 772, 8), self_76283, '_transform', rotate_deg_call_result_76282)
        
        # ################# End of '_set_caretright(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_caretright' in the type store
        # Getting the type of 'stypy_return_type' (line 770)
        stypy_return_type_76284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76284)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_caretright'
        return stypy_return_type_76284

    
    # Assigning a Call to a Name (line 774):

    @norecursion
    def _set_caretdownbase(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_caretdownbase'
        module_type_store = module_type_store.open_function_context('_set_caretdownbase', 776, 4, False)
        # Assigning a type to the variable 'self' (line 777)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 777, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_caretdownbase.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_caretdownbase.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_caretdownbase.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_caretdownbase.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_caretdownbase')
        MarkerStyle._set_caretdownbase.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_caretdownbase.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_caretdownbase.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_caretdownbase.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_caretdownbase.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_caretdownbase.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_caretdownbase.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_caretdownbase', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_caretdownbase', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_caretdownbase(...)' code ##################

        
        # Call to _set_caretdown(...): (line 777)
        # Processing the call keyword arguments (line 777)
        kwargs_76287 = {}
        # Getting the type of 'self' (line 777)
        self_76285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 8), 'self', False)
        # Obtaining the member '_set_caretdown' of a type (line 777)
        _set_caretdown_76286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 8), self_76285, '_set_caretdown')
        # Calling _set_caretdown(args, kwargs) (line 777)
        _set_caretdown_call_result_76288 = invoke(stypy.reporting.localization.Localization(__file__, 777, 8), _set_caretdown_76286, *[], **kwargs_76287)
        
        
        # Assigning a Attribute to a Attribute (line 778):
        
        # Assigning a Attribute to a Attribute (line 778):
        # Getting the type of 'self' (line 778)
        self_76289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 21), 'self')
        # Obtaining the member '_caret_path_base' of a type (line 778)
        _caret_path_base_76290 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 21), self_76289, '_caret_path_base')
        # Getting the type of 'self' (line 778)
        self_76291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 8), 'self')
        # Setting the type of the member '_path' of a type (line 778)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 8), self_76291, '_path', _caret_path_base_76290)
        
        # ################# End of '_set_caretdownbase(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_caretdownbase' in the type store
        # Getting the type of 'stypy_return_type' (line 776)
        stypy_return_type_76292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76292)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_caretdownbase'
        return stypy_return_type_76292


    @norecursion
    def _set_caretupbase(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_caretupbase'
        module_type_store = module_type_store.open_function_context('_set_caretupbase', 780, 4, False)
        # Assigning a type to the variable 'self' (line 781)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 781, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_caretupbase.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_caretupbase.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_caretupbase.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_caretupbase.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_caretupbase')
        MarkerStyle._set_caretupbase.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_caretupbase.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_caretupbase.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_caretupbase.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_caretupbase.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_caretupbase.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_caretupbase.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_caretupbase', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_caretupbase', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_caretupbase(...)' code ##################

        
        # Call to _set_caretdownbase(...): (line 781)
        # Processing the call keyword arguments (line 781)
        kwargs_76295 = {}
        # Getting the type of 'self' (line 781)
        self_76293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 8), 'self', False)
        # Obtaining the member '_set_caretdownbase' of a type (line 781)
        _set_caretdownbase_76294 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 781, 8), self_76293, '_set_caretdownbase')
        # Calling _set_caretdownbase(args, kwargs) (line 781)
        _set_caretdownbase_call_result_76296 = invoke(stypy.reporting.localization.Localization(__file__, 781, 8), _set_caretdownbase_76294, *[], **kwargs_76295)
        
        
        # Assigning a Call to a Attribute (line 782):
        
        # Assigning a Call to a Attribute (line 782):
        
        # Call to rotate_deg(...): (line 782)
        # Processing the call arguments (line 782)
        int_76300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 782, 53), 'int')
        # Processing the call keyword arguments (line 782)
        kwargs_76301 = {}
        # Getting the type of 'self' (line 782)
        self_76297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 26), 'self', False)
        # Obtaining the member '_transform' of a type (line 782)
        _transform_76298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 782, 26), self_76297, '_transform')
        # Obtaining the member 'rotate_deg' of a type (line 782)
        rotate_deg_76299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 782, 26), _transform_76298, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 782)
        rotate_deg_call_result_76302 = invoke(stypy.reporting.localization.Localization(__file__, 782, 26), rotate_deg_76299, *[int_76300], **kwargs_76301)
        
        # Getting the type of 'self' (line 782)
        self_76303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 782)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 782, 8), self_76303, '_transform', rotate_deg_call_result_76302)
        
        # ################# End of '_set_caretupbase(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_caretupbase' in the type store
        # Getting the type of 'stypy_return_type' (line 780)
        stypy_return_type_76304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76304)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_caretupbase'
        return stypy_return_type_76304


    @norecursion
    def _set_caretleftbase(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_caretleftbase'
        module_type_store = module_type_store.open_function_context('_set_caretleftbase', 784, 4, False)
        # Assigning a type to the variable 'self' (line 785)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 785, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_caretleftbase.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_caretleftbase.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_caretleftbase.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_caretleftbase.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_caretleftbase')
        MarkerStyle._set_caretleftbase.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_caretleftbase.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_caretleftbase.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_caretleftbase.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_caretleftbase.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_caretleftbase.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_caretleftbase.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_caretleftbase', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_caretleftbase', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_caretleftbase(...)' code ##################

        
        # Call to _set_caretdownbase(...): (line 785)
        # Processing the call keyword arguments (line 785)
        kwargs_76307 = {}
        # Getting the type of 'self' (line 785)
        self_76305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 8), 'self', False)
        # Obtaining the member '_set_caretdownbase' of a type (line 785)
        _set_caretdownbase_76306 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 785, 8), self_76305, '_set_caretdownbase')
        # Calling _set_caretdownbase(args, kwargs) (line 785)
        _set_caretdownbase_call_result_76308 = invoke(stypy.reporting.localization.Localization(__file__, 785, 8), _set_caretdownbase_76306, *[], **kwargs_76307)
        
        
        # Assigning a Call to a Attribute (line 786):
        
        # Assigning a Call to a Attribute (line 786):
        
        # Call to rotate_deg(...): (line 786)
        # Processing the call arguments (line 786)
        int_76312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 53), 'int')
        # Processing the call keyword arguments (line 786)
        kwargs_76313 = {}
        # Getting the type of 'self' (line 786)
        self_76309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 26), 'self', False)
        # Obtaining the member '_transform' of a type (line 786)
        _transform_76310 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 26), self_76309, '_transform')
        # Obtaining the member 'rotate_deg' of a type (line 786)
        rotate_deg_76311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 26), _transform_76310, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 786)
        rotate_deg_call_result_76314 = invoke(stypy.reporting.localization.Localization(__file__, 786, 26), rotate_deg_76311, *[int_76312], **kwargs_76313)
        
        # Getting the type of 'self' (line 786)
        self_76315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 786)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 8), self_76315, '_transform', rotate_deg_call_result_76314)
        
        # ################# End of '_set_caretleftbase(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_caretleftbase' in the type store
        # Getting the type of 'stypy_return_type' (line 784)
        stypy_return_type_76316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76316)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_caretleftbase'
        return stypy_return_type_76316


    @norecursion
    def _set_caretrightbase(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_caretrightbase'
        module_type_store = module_type_store.open_function_context('_set_caretrightbase', 788, 4, False)
        # Assigning a type to the variable 'self' (line 789)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 789, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_caretrightbase.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_caretrightbase.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_caretrightbase.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_caretrightbase.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_caretrightbase')
        MarkerStyle._set_caretrightbase.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_caretrightbase.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_caretrightbase.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_caretrightbase.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_caretrightbase.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_caretrightbase.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_caretrightbase.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_caretrightbase', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_caretrightbase', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_caretrightbase(...)' code ##################

        
        # Call to _set_caretdownbase(...): (line 789)
        # Processing the call keyword arguments (line 789)
        kwargs_76319 = {}
        # Getting the type of 'self' (line 789)
        self_76317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 8), 'self', False)
        # Obtaining the member '_set_caretdownbase' of a type (line 789)
        _set_caretdownbase_76318 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 789, 8), self_76317, '_set_caretdownbase')
        # Calling _set_caretdownbase(args, kwargs) (line 789)
        _set_caretdownbase_call_result_76320 = invoke(stypy.reporting.localization.Localization(__file__, 789, 8), _set_caretdownbase_76318, *[], **kwargs_76319)
        
        
        # Assigning a Call to a Attribute (line 790):
        
        # Assigning a Call to a Attribute (line 790):
        
        # Call to rotate_deg(...): (line 790)
        # Processing the call arguments (line 790)
        int_76324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 790, 53), 'int')
        # Processing the call keyword arguments (line 790)
        kwargs_76325 = {}
        # Getting the type of 'self' (line 790)
        self_76321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 26), 'self', False)
        # Obtaining the member '_transform' of a type (line 790)
        _transform_76322 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 790, 26), self_76321, '_transform')
        # Obtaining the member 'rotate_deg' of a type (line 790)
        rotate_deg_76323 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 790, 26), _transform_76322, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 790)
        rotate_deg_call_result_76326 = invoke(stypy.reporting.localization.Localization(__file__, 790, 26), rotate_deg_76323, *[int_76324], **kwargs_76325)
        
        # Getting the type of 'self' (line 790)
        self_76327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 790)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 790, 8), self_76327, '_transform', rotate_deg_call_result_76326)
        
        # ################# End of '_set_caretrightbase(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_caretrightbase' in the type store
        # Getting the type of 'stypy_return_type' (line 788)
        stypy_return_type_76328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76328)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_caretrightbase'
        return stypy_return_type_76328

    
    # Assigning a Call to a Name (line 792):

    @norecursion
    def _set_plus(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_plus'
        module_type_store = module_type_store.open_function_context('_set_plus', 797, 4, False)
        # Assigning a type to the variable 'self' (line 798)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 798, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_plus.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_plus.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_plus.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_plus.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_plus')
        MarkerStyle._set_plus.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_plus.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_plus.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_plus.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_plus.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_plus.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_plus.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_plus', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_plus', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_plus(...)' code ##################

        
        # Assigning a Call to a Attribute (line 798):
        
        # Assigning a Call to a Attribute (line 798):
        
        # Call to scale(...): (line 798)
        # Processing the call arguments (line 798)
        float_76333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 798, 43), 'float')
        # Processing the call keyword arguments (line 798)
        kwargs_76334 = {}
        
        # Call to Affine2D(...): (line 798)
        # Processing the call keyword arguments (line 798)
        kwargs_76330 = {}
        # Getting the type of 'Affine2D' (line 798)
        Affine2D_76329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 798)
        Affine2D_call_result_76331 = invoke(stypy.reporting.localization.Localization(__file__, 798, 26), Affine2D_76329, *[], **kwargs_76330)
        
        # Obtaining the member 'scale' of a type (line 798)
        scale_76332 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 798, 26), Affine2D_call_result_76331, 'scale')
        # Calling scale(args, kwargs) (line 798)
        scale_call_result_76335 = invoke(stypy.reporting.localization.Localization(__file__, 798, 26), scale_76332, *[float_76333], **kwargs_76334)
        
        # Getting the type of 'self' (line 798)
        self_76336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 798)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 798, 8), self_76336, '_transform', scale_call_result_76335)
        
        # Assigning a Num to a Attribute (line 799):
        
        # Assigning a Num to a Attribute (line 799):
        float_76337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 799, 31), 'float')
        # Getting the type of 'self' (line 799)
        self_76338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 799)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 799, 8), self_76338, '_snap_threshold', float_76337)
        
        # Assigning a Name to a Attribute (line 800):
        
        # Assigning a Name to a Attribute (line 800):
        # Getting the type of 'False' (line 800)
        False_76339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 23), 'False')
        # Getting the type of 'self' (line 800)
        self_76340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 8), 'self')
        # Setting the type of the member '_filled' of a type (line 800)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 800, 8), self_76340, '_filled', False_76339)
        
        # Assigning a Attribute to a Attribute (line 801):
        
        # Assigning a Attribute to a Attribute (line 801):
        # Getting the type of 'self' (line 801)
        self_76341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 21), 'self')
        # Obtaining the member '_plus_path' of a type (line 801)
        _plus_path_76342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 801, 21), self_76341, '_plus_path')
        # Getting the type of 'self' (line 801)
        self_76343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 8), 'self')
        # Setting the type of the member '_path' of a type (line 801)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 801, 8), self_76343, '_path', _plus_path_76342)
        
        # ################# End of '_set_plus(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_plus' in the type store
        # Getting the type of 'stypy_return_type' (line 797)
        stypy_return_type_76344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76344)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_plus'
        return stypy_return_type_76344

    
    # Assigning a Call to a Name (line 803):

    @norecursion
    def _set_x(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_x'
        module_type_store = module_type_store.open_function_context('_set_x', 808, 4, False)
        # Assigning a type to the variable 'self' (line 809)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 809, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_x.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_x.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_x.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_x.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_x')
        MarkerStyle._set_x.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_x.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_x.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_x.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_x.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_x.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_x.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_x', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_x', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_x(...)' code ##################

        
        # Assigning a Call to a Attribute (line 809):
        
        # Assigning a Call to a Attribute (line 809):
        
        # Call to scale(...): (line 809)
        # Processing the call arguments (line 809)
        float_76349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 809, 43), 'float')
        # Processing the call keyword arguments (line 809)
        kwargs_76350 = {}
        
        # Call to Affine2D(...): (line 809)
        # Processing the call keyword arguments (line 809)
        kwargs_76346 = {}
        # Getting the type of 'Affine2D' (line 809)
        Affine2D_76345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 809)
        Affine2D_call_result_76347 = invoke(stypy.reporting.localization.Localization(__file__, 809, 26), Affine2D_76345, *[], **kwargs_76346)
        
        # Obtaining the member 'scale' of a type (line 809)
        scale_76348 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 809, 26), Affine2D_call_result_76347, 'scale')
        # Calling scale(args, kwargs) (line 809)
        scale_call_result_76351 = invoke(stypy.reporting.localization.Localization(__file__, 809, 26), scale_76348, *[float_76349], **kwargs_76350)
        
        # Getting the type of 'self' (line 809)
        self_76352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 809)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 809, 8), self_76352, '_transform', scale_call_result_76351)
        
        # Assigning a Num to a Attribute (line 810):
        
        # Assigning a Num to a Attribute (line 810):
        float_76353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 810, 31), 'float')
        # Getting the type of 'self' (line 810)
        self_76354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 810)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 810, 8), self_76354, '_snap_threshold', float_76353)
        
        # Assigning a Name to a Attribute (line 811):
        
        # Assigning a Name to a Attribute (line 811):
        # Getting the type of 'False' (line 811)
        False_76355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 23), 'False')
        # Getting the type of 'self' (line 811)
        self_76356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 8), 'self')
        # Setting the type of the member '_filled' of a type (line 811)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 811, 8), self_76356, '_filled', False_76355)
        
        # Assigning a Attribute to a Attribute (line 812):
        
        # Assigning a Attribute to a Attribute (line 812):
        # Getting the type of 'self' (line 812)
        self_76357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 21), 'self')
        # Obtaining the member '_x_path' of a type (line 812)
        _x_path_76358 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 812, 21), self_76357, '_x_path')
        # Getting the type of 'self' (line 812)
        self_76359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 8), 'self')
        # Setting the type of the member '_path' of a type (line 812)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 812, 8), self_76359, '_path', _x_path_76358)
        
        # ################# End of '_set_x(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_x' in the type store
        # Getting the type of 'stypy_return_type' (line 808)
        stypy_return_type_76360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76360)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_x'
        return stypy_return_type_76360

    
    # Assigning a Call to a Name (line 814):
    
    # Assigning a Call to a Name (line 825):

    @norecursion
    def _set_plus_filled(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_plus_filled'
        module_type_store = module_type_store.open_function_context('_set_plus_filled', 833, 4, False)
        # Assigning a type to the variable 'self' (line 834)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 834, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_plus_filled.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_plus_filled.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_plus_filled.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_plus_filled.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_plus_filled')
        MarkerStyle._set_plus_filled.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_plus_filled.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_plus_filled.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_plus_filled.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_plus_filled.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_plus_filled.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_plus_filled.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_plus_filled', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_plus_filled', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_plus_filled(...)' code ##################

        
        # Assigning a Call to a Attribute (line 834):
        
        # Assigning a Call to a Attribute (line 834):
        
        # Call to translate(...): (line 834)
        # Processing the call arguments (line 834)
        float_76365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 47), 'float')
        float_76366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 53), 'float')
        # Processing the call keyword arguments (line 834)
        kwargs_76367 = {}
        
        # Call to Affine2D(...): (line 834)
        # Processing the call keyword arguments (line 834)
        kwargs_76362 = {}
        # Getting the type of 'Affine2D' (line 834)
        Affine2D_76361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 834)
        Affine2D_call_result_76363 = invoke(stypy.reporting.localization.Localization(__file__, 834, 26), Affine2D_76361, *[], **kwargs_76362)
        
        # Obtaining the member 'translate' of a type (line 834)
        translate_76364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 26), Affine2D_call_result_76363, 'translate')
        # Calling translate(args, kwargs) (line 834)
        translate_call_result_76368 = invoke(stypy.reporting.localization.Localization(__file__, 834, 26), translate_76364, *[float_76365, float_76366], **kwargs_76367)
        
        # Getting the type of 'self' (line 834)
        self_76369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 834)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 8), self_76369, '_transform', translate_call_result_76368)
        
        # Assigning a Num to a Attribute (line 835):
        
        # Assigning a Num to a Attribute (line 835):
        float_76370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 835, 31), 'float')
        # Getting the type of 'self' (line 835)
        self_76371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 835)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 835, 8), self_76371, '_snap_threshold', float_76370)
        
        # Assigning a Str to a Attribute (line 836):
        
        # Assigning a Str to a Attribute (line 836):
        unicode_76372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 26), 'unicode', u'miter')
        # Getting the type of 'self' (line 836)
        self_76373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 8), 'self')
        # Setting the type of the member '_joinstyle' of a type (line 836)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 8), self_76373, '_joinstyle', unicode_76372)
        
        # Assigning a Call to a Name (line 837):
        
        # Assigning a Call to a Name (line 837):
        
        # Call to get_fillstyle(...): (line 837)
        # Processing the call keyword arguments (line 837)
        kwargs_76376 = {}
        # Getting the type of 'self' (line 837)
        self_76374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 13), 'self', False)
        # Obtaining the member 'get_fillstyle' of a type (line 837)
        get_fillstyle_76375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 837, 13), self_76374, 'get_fillstyle')
        # Calling get_fillstyle(args, kwargs) (line 837)
        get_fillstyle_call_result_76377 = invoke(stypy.reporting.localization.Localization(__file__, 837, 13), get_fillstyle_76375, *[], **kwargs_76376)
        
        # Assigning a type to the variable 'fs' (line 837)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 837, 8), 'fs', get_fillstyle_call_result_76377)
        
        
        
        # Call to _half_fill(...): (line 838)
        # Processing the call keyword arguments (line 838)
        kwargs_76380 = {}
        # Getting the type of 'self' (line 838)
        self_76378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 15), 'self', False)
        # Obtaining the member '_half_fill' of a type (line 838)
        _half_fill_76379 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 838, 15), self_76378, '_half_fill')
        # Calling _half_fill(args, kwargs) (line 838)
        _half_fill_call_result_76381 = invoke(stypy.reporting.localization.Localization(__file__, 838, 15), _half_fill_76379, *[], **kwargs_76380)
        
        # Applying the 'not' unary operator (line 838)
        result_not__76382 = python_operator(stypy.reporting.localization.Localization(__file__, 838, 11), 'not', _half_fill_call_result_76381)
        
        # Testing the type of an if condition (line 838)
        if_condition_76383 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 838, 8), result_not__76382)
        # Assigning a type to the variable 'if_condition_76383' (line 838)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 838, 8), 'if_condition_76383', if_condition_76383)
        # SSA begins for if statement (line 838)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Attribute (line 839):
        
        # Assigning a Attribute to a Attribute (line 839):
        # Getting the type of 'self' (line 839)
        self_76384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 25), 'self')
        # Obtaining the member '_plus_filled_path' of a type (line 839)
        _plus_filled_path_76385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 839, 25), self_76384, '_plus_filled_path')
        # Getting the type of 'self' (line 839)
        self_76386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 12), 'self')
        # Setting the type of the member '_path' of a type (line 839)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 839, 12), self_76386, '_path', _plus_filled_path_76385)
        # SSA branch for the else part of an if statement (line 838)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 842)
        fs_76387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 15), 'fs')
        unicode_76388 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 21), 'unicode', u'top')
        # Applying the binary operator '==' (line 842)
        result_eq_76389 = python_operator(stypy.reporting.localization.Localization(__file__, 842, 15), '==', fs_76387, unicode_76388)
        
        # Testing the type of an if condition (line 842)
        if_condition_76390 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 842, 12), result_eq_76389)
        # Assigning a type to the variable 'if_condition_76390' (line 842)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 842, 12), 'if_condition_76390', if_condition_76390)
        # SSA begins for if statement (line 842)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 843):
        
        # Assigning a Num to a Name (line 843):
        int_76391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 37), 'int')
        # Assigning a type to the variable 'tuple_assignment_74204' (line 843)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 843, 16), 'tuple_assignment_74204', int_76391)
        
        # Assigning a Num to a Name (line 843):
        int_76392 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 40), 'int')
        # Assigning a type to the variable 'tuple_assignment_74205' (line 843)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 843, 16), 'tuple_assignment_74205', int_76392)
        
        # Assigning a Name to a Name (line 843):
        # Getting the type of 'tuple_assignment_74204' (line 843)
        tuple_assignment_74204_76393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 16), 'tuple_assignment_74204')
        # Assigning a type to the variable 'rotate' (line 843)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 843, 16), 'rotate', tuple_assignment_74204_76393)
        
        # Assigning a Name to a Name (line 843):
        # Getting the type of 'tuple_assignment_74205' (line 843)
        tuple_assignment_74205_76394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 16), 'tuple_assignment_74205')
        # Assigning a type to the variable 'rotate_alt' (line 843)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 843, 24), 'rotate_alt', tuple_assignment_74205_76394)
        # SSA branch for the else part of an if statement (line 842)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 844)
        fs_76395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 17), 'fs')
        unicode_76396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 23), 'unicode', u'bottom')
        # Applying the binary operator '==' (line 844)
        result_eq_76397 = python_operator(stypy.reporting.localization.Localization(__file__, 844, 17), '==', fs_76395, unicode_76396)
        
        # Testing the type of an if condition (line 844)
        if_condition_76398 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 844, 17), result_eq_76397)
        # Assigning a type to the variable 'if_condition_76398' (line 844)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 844, 17), 'if_condition_76398', if_condition_76398)
        # SSA begins for if statement (line 844)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 845):
        
        # Assigning a Num to a Name (line 845):
        int_76399 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 845, 37), 'int')
        # Assigning a type to the variable 'tuple_assignment_74206' (line 845)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 845, 16), 'tuple_assignment_74206', int_76399)
        
        # Assigning a Num to a Name (line 845):
        int_76400 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 845, 42), 'int')
        # Assigning a type to the variable 'tuple_assignment_74207' (line 845)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 845, 16), 'tuple_assignment_74207', int_76400)
        
        # Assigning a Name to a Name (line 845):
        # Getting the type of 'tuple_assignment_74206' (line 845)
        tuple_assignment_74206_76401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 16), 'tuple_assignment_74206')
        # Assigning a type to the variable 'rotate' (line 845)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 845, 16), 'rotate', tuple_assignment_74206_76401)
        
        # Assigning a Name to a Name (line 845):
        # Getting the type of 'tuple_assignment_74207' (line 845)
        tuple_assignment_74207_76402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 16), 'tuple_assignment_74207')
        # Assigning a type to the variable 'rotate_alt' (line 845)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 845, 24), 'rotate_alt', tuple_assignment_74207_76402)
        # SSA branch for the else part of an if statement (line 844)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 846)
        fs_76403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 17), 'fs')
        unicode_76404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 846, 23), 'unicode', u'left')
        # Applying the binary operator '==' (line 846)
        result_eq_76405 = python_operator(stypy.reporting.localization.Localization(__file__, 846, 17), '==', fs_76403, unicode_76404)
        
        # Testing the type of an if condition (line 846)
        if_condition_76406 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 846, 17), result_eq_76405)
        # Assigning a type to the variable 'if_condition_76406' (line 846)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 846, 17), 'if_condition_76406', if_condition_76406)
        # SSA begins for if statement (line 846)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 847):
        
        # Assigning a Num to a Name (line 847):
        int_76407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 847, 37), 'int')
        # Assigning a type to the variable 'tuple_assignment_74208' (line 847)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 847, 16), 'tuple_assignment_74208', int_76407)
        
        # Assigning a Num to a Name (line 847):
        int_76408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 847, 41), 'int')
        # Assigning a type to the variable 'tuple_assignment_74209' (line 847)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 847, 16), 'tuple_assignment_74209', int_76408)
        
        # Assigning a Name to a Name (line 847):
        # Getting the type of 'tuple_assignment_74208' (line 847)
        tuple_assignment_74208_76409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 16), 'tuple_assignment_74208')
        # Assigning a type to the variable 'rotate' (line 847)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 847, 16), 'rotate', tuple_assignment_74208_76409)
        
        # Assigning a Name to a Name (line 847):
        # Getting the type of 'tuple_assignment_74209' (line 847)
        tuple_assignment_74209_76410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 16), 'tuple_assignment_74209')
        # Assigning a type to the variable 'rotate_alt' (line 847)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 847, 24), 'rotate_alt', tuple_assignment_74209_76410)
        # SSA branch for the else part of an if statement (line 846)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Tuple to a Tuple (line 849):
        
        # Assigning a Num to a Name (line 849):
        int_76411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 37), 'int')
        # Assigning a type to the variable 'tuple_assignment_74210' (line 849)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 16), 'tuple_assignment_74210', int_76411)
        
        # Assigning a Num to a Name (line 849):
        int_76412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 42), 'int')
        # Assigning a type to the variable 'tuple_assignment_74211' (line 849)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 16), 'tuple_assignment_74211', int_76412)
        
        # Assigning a Name to a Name (line 849):
        # Getting the type of 'tuple_assignment_74210' (line 849)
        tuple_assignment_74210_76413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 16), 'tuple_assignment_74210')
        # Assigning a type to the variable 'rotate' (line 849)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 16), 'rotate', tuple_assignment_74210_76413)
        
        # Assigning a Name to a Name (line 849):
        # Getting the type of 'tuple_assignment_74211' (line 849)
        tuple_assignment_74211_76414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 16), 'tuple_assignment_74211')
        # Assigning a type to the variable 'rotate_alt' (line 849)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 24), 'rotate_alt', tuple_assignment_74211_76414)
        # SSA join for if statement (line 846)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 844)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 842)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Attribute to a Attribute (line 851):
        
        # Assigning a Attribute to a Attribute (line 851):
        # Getting the type of 'self' (line 851)
        self_76415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 25), 'self')
        # Obtaining the member '_plus_filled_path_t' of a type (line 851)
        _plus_filled_path_t_76416 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 851, 25), self_76415, '_plus_filled_path_t')
        # Getting the type of 'self' (line 851)
        self_76417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 12), 'self')
        # Setting the type of the member '_path' of a type (line 851)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 851, 12), self_76417, '_path', _plus_filled_path_t_76416)
        
        # Assigning a Attribute to a Attribute (line 852):
        
        # Assigning a Attribute to a Attribute (line 852):
        # Getting the type of 'self' (line 852)
        self_76418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 29), 'self')
        # Obtaining the member '_plus_filled_path_t' of a type (line 852)
        _plus_filled_path_t_76419 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 852, 29), self_76418, '_plus_filled_path_t')
        # Getting the type of 'self' (line 852)
        self_76420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 12), 'self')
        # Setting the type of the member '_alt_path' of a type (line 852)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 852, 12), self_76420, '_alt_path', _plus_filled_path_t_76419)
        
        # Assigning a Call to a Attribute (line 853):
        
        # Assigning a Call to a Attribute (line 853):
        
        # Call to translate(...): (line 853)
        # Processing the call arguments (line 853)
        float_76425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 853, 55), 'float')
        float_76426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 853, 61), 'float')
        # Processing the call keyword arguments (line 853)
        kwargs_76427 = {}
        
        # Call to Affine2D(...): (line 853)
        # Processing the call keyword arguments (line 853)
        kwargs_76422 = {}
        # Getting the type of 'Affine2D' (line 853)
        Affine2D_76421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 34), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 853)
        Affine2D_call_result_76423 = invoke(stypy.reporting.localization.Localization(__file__, 853, 34), Affine2D_76421, *[], **kwargs_76422)
        
        # Obtaining the member 'translate' of a type (line 853)
        translate_76424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 853, 34), Affine2D_call_result_76423, 'translate')
        # Calling translate(args, kwargs) (line 853)
        translate_call_result_76428 = invoke(stypy.reporting.localization.Localization(__file__, 853, 34), translate_76424, *[float_76425, float_76426], **kwargs_76427)
        
        # Getting the type of 'self' (line 853)
        self_76429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 12), 'self')
        # Setting the type of the member '_alt_transform' of a type (line 853)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 853, 12), self_76429, '_alt_transform', translate_call_result_76428)
        
        # Call to rotate_deg(...): (line 854)
        # Processing the call arguments (line 854)
        # Getting the type of 'rotate' (line 854)
        rotate_76433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 39), 'rotate', False)
        # Processing the call keyword arguments (line 854)
        kwargs_76434 = {}
        # Getting the type of 'self' (line 854)
        self_76430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 12), 'self', False)
        # Obtaining the member '_transform' of a type (line 854)
        _transform_76431 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 854, 12), self_76430, '_transform')
        # Obtaining the member 'rotate_deg' of a type (line 854)
        rotate_deg_76432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 854, 12), _transform_76431, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 854)
        rotate_deg_call_result_76435 = invoke(stypy.reporting.localization.Localization(__file__, 854, 12), rotate_deg_76432, *[rotate_76433], **kwargs_76434)
        
        
        # Call to rotate_deg(...): (line 855)
        # Processing the call arguments (line 855)
        # Getting the type of 'rotate_alt' (line 855)
        rotate_alt_76439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 43), 'rotate_alt', False)
        # Processing the call keyword arguments (line 855)
        kwargs_76440 = {}
        # Getting the type of 'self' (line 855)
        self_76436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 12), 'self', False)
        # Obtaining the member '_alt_transform' of a type (line 855)
        _alt_transform_76437 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 855, 12), self_76436, '_alt_transform')
        # Obtaining the member 'rotate_deg' of a type (line 855)
        rotate_deg_76438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 855, 12), _alt_transform_76437, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 855)
        rotate_deg_call_result_76441 = invoke(stypy.reporting.localization.Localization(__file__, 855, 12), rotate_deg_76438, *[rotate_alt_76439], **kwargs_76440)
        
        # SSA join for if statement (line 838)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_set_plus_filled(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_plus_filled' in the type store
        # Getting the type of 'stypy_return_type' (line 833)
        stypy_return_type_76442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76442)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_plus_filled'
        return stypy_return_type_76442

    
    # Assigning a Call to a Name (line 857):
    
    # Assigning a Call to a Name (line 867):

    @norecursion
    def _set_x_filled(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_x_filled'
        module_type_store = module_type_store.open_function_context('_set_x_filled', 874, 4, False)
        # Assigning a type to the variable 'self' (line 875)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 875, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MarkerStyle._set_x_filled.__dict__.__setitem__('stypy_localization', localization)
        MarkerStyle._set_x_filled.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MarkerStyle._set_x_filled.__dict__.__setitem__('stypy_type_store', module_type_store)
        MarkerStyle._set_x_filled.__dict__.__setitem__('stypy_function_name', 'MarkerStyle._set_x_filled')
        MarkerStyle._set_x_filled.__dict__.__setitem__('stypy_param_names_list', [])
        MarkerStyle._set_x_filled.__dict__.__setitem__('stypy_varargs_param_name', None)
        MarkerStyle._set_x_filled.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MarkerStyle._set_x_filled.__dict__.__setitem__('stypy_call_defaults', defaults)
        MarkerStyle._set_x_filled.__dict__.__setitem__('stypy_call_varargs', varargs)
        MarkerStyle._set_x_filled.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MarkerStyle._set_x_filled.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MarkerStyle._set_x_filled', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_x_filled', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_x_filled(...)' code ##################

        
        # Assigning a Call to a Attribute (line 875):
        
        # Assigning a Call to a Attribute (line 875):
        
        # Call to translate(...): (line 875)
        # Processing the call arguments (line 875)
        float_76447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 875, 47), 'float')
        float_76448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 875, 53), 'float')
        # Processing the call keyword arguments (line 875)
        kwargs_76449 = {}
        
        # Call to Affine2D(...): (line 875)
        # Processing the call keyword arguments (line 875)
        kwargs_76444 = {}
        # Getting the type of 'Affine2D' (line 875)
        Affine2D_76443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 26), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 875)
        Affine2D_call_result_76445 = invoke(stypy.reporting.localization.Localization(__file__, 875, 26), Affine2D_76443, *[], **kwargs_76444)
        
        # Obtaining the member 'translate' of a type (line 875)
        translate_76446 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 26), Affine2D_call_result_76445, 'translate')
        # Calling translate(args, kwargs) (line 875)
        translate_call_result_76450 = invoke(stypy.reporting.localization.Localization(__file__, 875, 26), translate_76446, *[float_76447, float_76448], **kwargs_76449)
        
        # Getting the type of 'self' (line 875)
        self_76451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 8), 'self')
        # Setting the type of the member '_transform' of a type (line 875)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 8), self_76451, '_transform', translate_call_result_76450)
        
        # Assigning a Num to a Attribute (line 876):
        
        # Assigning a Num to a Attribute (line 876):
        float_76452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 876, 31), 'float')
        # Getting the type of 'self' (line 876)
        self_76453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 8), 'self')
        # Setting the type of the member '_snap_threshold' of a type (line 876)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 876, 8), self_76453, '_snap_threshold', float_76452)
        
        # Assigning a Str to a Attribute (line 877):
        
        # Assigning a Str to a Attribute (line 877):
        unicode_76454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 877, 26), 'unicode', u'miter')
        # Getting the type of 'self' (line 877)
        self_76455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 8), 'self')
        # Setting the type of the member '_joinstyle' of a type (line 877)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 877, 8), self_76455, '_joinstyle', unicode_76454)
        
        # Assigning a Call to a Name (line 878):
        
        # Assigning a Call to a Name (line 878):
        
        # Call to get_fillstyle(...): (line 878)
        # Processing the call keyword arguments (line 878)
        kwargs_76458 = {}
        # Getting the type of 'self' (line 878)
        self_76456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 13), 'self', False)
        # Obtaining the member 'get_fillstyle' of a type (line 878)
        get_fillstyle_76457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 878, 13), self_76456, 'get_fillstyle')
        # Calling get_fillstyle(args, kwargs) (line 878)
        get_fillstyle_call_result_76459 = invoke(stypy.reporting.localization.Localization(__file__, 878, 13), get_fillstyle_76457, *[], **kwargs_76458)
        
        # Assigning a type to the variable 'fs' (line 878)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 878, 8), 'fs', get_fillstyle_call_result_76459)
        
        
        
        # Call to _half_fill(...): (line 879)
        # Processing the call keyword arguments (line 879)
        kwargs_76462 = {}
        # Getting the type of 'self' (line 879)
        self_76460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 15), 'self', False)
        # Obtaining the member '_half_fill' of a type (line 879)
        _half_fill_76461 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 879, 15), self_76460, '_half_fill')
        # Calling _half_fill(args, kwargs) (line 879)
        _half_fill_call_result_76463 = invoke(stypy.reporting.localization.Localization(__file__, 879, 15), _half_fill_76461, *[], **kwargs_76462)
        
        # Applying the 'not' unary operator (line 879)
        result_not__76464 = python_operator(stypy.reporting.localization.Localization(__file__, 879, 11), 'not', _half_fill_call_result_76463)
        
        # Testing the type of an if condition (line 879)
        if_condition_76465 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 879, 8), result_not__76464)
        # Assigning a type to the variable 'if_condition_76465' (line 879)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 879, 8), 'if_condition_76465', if_condition_76465)
        # SSA begins for if statement (line 879)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Attribute (line 880):
        
        # Assigning a Attribute to a Attribute (line 880):
        # Getting the type of 'self' (line 880)
        self_76466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 25), 'self')
        # Obtaining the member '_x_filled_path' of a type (line 880)
        _x_filled_path_76467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 880, 25), self_76466, '_x_filled_path')
        # Getting the type of 'self' (line 880)
        self_76468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 12), 'self')
        # Setting the type of the member '_path' of a type (line 880)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 880, 12), self_76468, '_path', _x_filled_path_76467)
        # SSA branch for the else part of an if statement (line 879)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 883)
        fs_76469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 15), 'fs')
        unicode_76470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 883, 21), 'unicode', u'top')
        # Applying the binary operator '==' (line 883)
        result_eq_76471 = python_operator(stypy.reporting.localization.Localization(__file__, 883, 15), '==', fs_76469, unicode_76470)
        
        # Testing the type of an if condition (line 883)
        if_condition_76472 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 883, 12), result_eq_76471)
        # Assigning a type to the variable 'if_condition_76472' (line 883)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 883, 12), 'if_condition_76472', if_condition_76472)
        # SSA begins for if statement (line 883)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 884):
        
        # Assigning a Num to a Name (line 884):
        int_76473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 884, 37), 'int')
        # Assigning a type to the variable 'tuple_assignment_74212' (line 884)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 884, 16), 'tuple_assignment_74212', int_76473)
        
        # Assigning a Num to a Name (line 884):
        int_76474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 884, 40), 'int')
        # Assigning a type to the variable 'tuple_assignment_74213' (line 884)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 884, 16), 'tuple_assignment_74213', int_76474)
        
        # Assigning a Name to a Name (line 884):
        # Getting the type of 'tuple_assignment_74212' (line 884)
        tuple_assignment_74212_76475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 16), 'tuple_assignment_74212')
        # Assigning a type to the variable 'rotate' (line 884)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 884, 16), 'rotate', tuple_assignment_74212_76475)
        
        # Assigning a Name to a Name (line 884):
        # Getting the type of 'tuple_assignment_74213' (line 884)
        tuple_assignment_74213_76476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 16), 'tuple_assignment_74213')
        # Assigning a type to the variable 'rotate_alt' (line 884)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 884, 24), 'rotate_alt', tuple_assignment_74213_76476)
        # SSA branch for the else part of an if statement (line 883)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 885)
        fs_76477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 885, 17), 'fs')
        unicode_76478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 885, 23), 'unicode', u'bottom')
        # Applying the binary operator '==' (line 885)
        result_eq_76479 = python_operator(stypy.reporting.localization.Localization(__file__, 885, 17), '==', fs_76477, unicode_76478)
        
        # Testing the type of an if condition (line 885)
        if_condition_76480 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 885, 17), result_eq_76479)
        # Assigning a type to the variable 'if_condition_76480' (line 885)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 885, 17), 'if_condition_76480', if_condition_76480)
        # SSA begins for if statement (line 885)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 886):
        
        # Assigning a Num to a Name (line 886):
        int_76481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 37), 'int')
        # Assigning a type to the variable 'tuple_assignment_74214' (line 886)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 886, 16), 'tuple_assignment_74214', int_76481)
        
        # Assigning a Num to a Name (line 886):
        int_76482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 42), 'int')
        # Assigning a type to the variable 'tuple_assignment_74215' (line 886)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 886, 16), 'tuple_assignment_74215', int_76482)
        
        # Assigning a Name to a Name (line 886):
        # Getting the type of 'tuple_assignment_74214' (line 886)
        tuple_assignment_74214_76483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 16), 'tuple_assignment_74214')
        # Assigning a type to the variable 'rotate' (line 886)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 886, 16), 'rotate', tuple_assignment_74214_76483)
        
        # Assigning a Name to a Name (line 886):
        # Getting the type of 'tuple_assignment_74215' (line 886)
        tuple_assignment_74215_76484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 16), 'tuple_assignment_74215')
        # Assigning a type to the variable 'rotate_alt' (line 886)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 886, 24), 'rotate_alt', tuple_assignment_74215_76484)
        # SSA branch for the else part of an if statement (line 885)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'fs' (line 887)
        fs_76485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 17), 'fs')
        unicode_76486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 887, 23), 'unicode', u'left')
        # Applying the binary operator '==' (line 887)
        result_eq_76487 = python_operator(stypy.reporting.localization.Localization(__file__, 887, 17), '==', fs_76485, unicode_76486)
        
        # Testing the type of an if condition (line 887)
        if_condition_76488 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 887, 17), result_eq_76487)
        # Assigning a type to the variable 'if_condition_76488' (line 887)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 887, 17), 'if_condition_76488', if_condition_76488)
        # SSA begins for if statement (line 887)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 888):
        
        # Assigning a Num to a Name (line 888):
        int_76489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 888, 37), 'int')
        # Assigning a type to the variable 'tuple_assignment_74216' (line 888)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 888, 16), 'tuple_assignment_74216', int_76489)
        
        # Assigning a Num to a Name (line 888):
        int_76490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 888, 41), 'int')
        # Assigning a type to the variable 'tuple_assignment_74217' (line 888)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 888, 16), 'tuple_assignment_74217', int_76490)
        
        # Assigning a Name to a Name (line 888):
        # Getting the type of 'tuple_assignment_74216' (line 888)
        tuple_assignment_74216_76491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 16), 'tuple_assignment_74216')
        # Assigning a type to the variable 'rotate' (line 888)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 888, 16), 'rotate', tuple_assignment_74216_76491)
        
        # Assigning a Name to a Name (line 888):
        # Getting the type of 'tuple_assignment_74217' (line 888)
        tuple_assignment_74217_76492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 16), 'tuple_assignment_74217')
        # Assigning a type to the variable 'rotate_alt' (line 888)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 888, 24), 'rotate_alt', tuple_assignment_74217_76492)
        # SSA branch for the else part of an if statement (line 887)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Tuple to a Tuple (line 890):
        
        # Assigning a Num to a Name (line 890):
        int_76493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 37), 'int')
        # Assigning a type to the variable 'tuple_assignment_74218' (line 890)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 890, 16), 'tuple_assignment_74218', int_76493)
        
        # Assigning a Num to a Name (line 890):
        int_76494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 42), 'int')
        # Assigning a type to the variable 'tuple_assignment_74219' (line 890)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 890, 16), 'tuple_assignment_74219', int_76494)
        
        # Assigning a Name to a Name (line 890):
        # Getting the type of 'tuple_assignment_74218' (line 890)
        tuple_assignment_74218_76495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 16), 'tuple_assignment_74218')
        # Assigning a type to the variable 'rotate' (line 890)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 890, 16), 'rotate', tuple_assignment_74218_76495)
        
        # Assigning a Name to a Name (line 890):
        # Getting the type of 'tuple_assignment_74219' (line 890)
        tuple_assignment_74219_76496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 16), 'tuple_assignment_74219')
        # Assigning a type to the variable 'rotate_alt' (line 890)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 890, 24), 'rotate_alt', tuple_assignment_74219_76496)
        # SSA join for if statement (line 887)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 885)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 883)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Attribute to a Attribute (line 892):
        
        # Assigning a Attribute to a Attribute (line 892):
        # Getting the type of 'self' (line 892)
        self_76497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 25), 'self')
        # Obtaining the member '_x_filled_path_t' of a type (line 892)
        _x_filled_path_t_76498 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 892, 25), self_76497, '_x_filled_path_t')
        # Getting the type of 'self' (line 892)
        self_76499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 12), 'self')
        # Setting the type of the member '_path' of a type (line 892)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 892, 12), self_76499, '_path', _x_filled_path_t_76498)
        
        # Assigning a Attribute to a Attribute (line 893):
        
        # Assigning a Attribute to a Attribute (line 893):
        # Getting the type of 'self' (line 893)
        self_76500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 29), 'self')
        # Obtaining the member '_x_filled_path_t' of a type (line 893)
        _x_filled_path_t_76501 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 893, 29), self_76500, '_x_filled_path_t')
        # Getting the type of 'self' (line 893)
        self_76502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 12), 'self')
        # Setting the type of the member '_alt_path' of a type (line 893)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 893, 12), self_76502, '_alt_path', _x_filled_path_t_76501)
        
        # Assigning a Call to a Attribute (line 894):
        
        # Assigning a Call to a Attribute (line 894):
        
        # Call to translate(...): (line 894)
        # Processing the call arguments (line 894)
        float_76507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, 55), 'float')
        float_76508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, 61), 'float')
        # Processing the call keyword arguments (line 894)
        kwargs_76509 = {}
        
        # Call to Affine2D(...): (line 894)
        # Processing the call keyword arguments (line 894)
        kwargs_76504 = {}
        # Getting the type of 'Affine2D' (line 894)
        Affine2D_76503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 34), 'Affine2D', False)
        # Calling Affine2D(args, kwargs) (line 894)
        Affine2D_call_result_76505 = invoke(stypy.reporting.localization.Localization(__file__, 894, 34), Affine2D_76503, *[], **kwargs_76504)
        
        # Obtaining the member 'translate' of a type (line 894)
        translate_76506 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 894, 34), Affine2D_call_result_76505, 'translate')
        # Calling translate(args, kwargs) (line 894)
        translate_call_result_76510 = invoke(stypy.reporting.localization.Localization(__file__, 894, 34), translate_76506, *[float_76507, float_76508], **kwargs_76509)
        
        # Getting the type of 'self' (line 894)
        self_76511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 12), 'self')
        # Setting the type of the member '_alt_transform' of a type (line 894)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 894, 12), self_76511, '_alt_transform', translate_call_result_76510)
        
        # Call to rotate_deg(...): (line 895)
        # Processing the call arguments (line 895)
        # Getting the type of 'rotate' (line 895)
        rotate_76515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 39), 'rotate', False)
        # Processing the call keyword arguments (line 895)
        kwargs_76516 = {}
        # Getting the type of 'self' (line 895)
        self_76512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 12), 'self', False)
        # Obtaining the member '_transform' of a type (line 895)
        _transform_76513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 895, 12), self_76512, '_transform')
        # Obtaining the member 'rotate_deg' of a type (line 895)
        rotate_deg_76514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 895, 12), _transform_76513, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 895)
        rotate_deg_call_result_76517 = invoke(stypy.reporting.localization.Localization(__file__, 895, 12), rotate_deg_76514, *[rotate_76515], **kwargs_76516)
        
        
        # Call to rotate_deg(...): (line 896)
        # Processing the call arguments (line 896)
        # Getting the type of 'rotate_alt' (line 896)
        rotate_alt_76521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 43), 'rotate_alt', False)
        # Processing the call keyword arguments (line 896)
        kwargs_76522 = {}
        # Getting the type of 'self' (line 896)
        self_76518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 12), 'self', False)
        # Obtaining the member '_alt_transform' of a type (line 896)
        _alt_transform_76519 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 896, 12), self_76518, '_alt_transform')
        # Obtaining the member 'rotate_deg' of a type (line 896)
        rotate_deg_76520 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 896, 12), _alt_transform_76519, 'rotate_deg')
        # Calling rotate_deg(args, kwargs) (line 896)
        rotate_deg_call_result_76523 = invoke(stypy.reporting.localization.Localization(__file__, 896, 12), rotate_deg_76520, *[rotate_alt_76521], **kwargs_76522)
        
        # SSA join for if statement (line 879)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_set_x_filled(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_x_filled' in the type store
        # Getting the type of 'stypy_return_type' (line 874)
        stypy_return_type_76524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_76524)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_x_filled'
        return stypy_return_type_76524


# Assigning a type to the variable 'MarkerStyle' (line 109)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 109, 0), 'MarkerStyle', MarkerStyle)

# Assigning a Dict to a Name (line 111):

# Obtaining an instance of the builtin type 'dict' (line 111)
dict_76525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 14), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 111)
# Adding element type (key, value) (line 111)
unicode_76526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 112, 8), 'unicode', u'.')
unicode_76527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 112, 13), 'unicode', u'point')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76526, unicode_76527))
# Adding element type (key, value) (line 111)
unicode_76528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 8), 'unicode', u',')
unicode_76529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 13), 'unicode', u'pixel')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76528, unicode_76529))
# Adding element type (key, value) (line 111)
unicode_76530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 114, 8), 'unicode', u'o')
unicode_76531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 114, 13), 'unicode', u'circle')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76530, unicode_76531))
# Adding element type (key, value) (line 111)
unicode_76532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 8), 'unicode', u'v')
unicode_76533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 13), 'unicode', u'triangle_down')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76532, unicode_76533))
# Adding element type (key, value) (line 111)
unicode_76534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 116, 8), 'unicode', u'^')
unicode_76535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 116, 13), 'unicode', u'triangle_up')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76534, unicode_76535))
# Adding element type (key, value) (line 111)
unicode_76536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 117, 8), 'unicode', u'<')
unicode_76537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 117, 13), 'unicode', u'triangle_left')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76536, unicode_76537))
# Adding element type (key, value) (line 111)
unicode_76538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 8), 'unicode', u'>')
unicode_76539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 13), 'unicode', u'triangle_right')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76538, unicode_76539))
# Adding element type (key, value) (line 111)
unicode_76540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 8), 'unicode', u'1')
unicode_76541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 13), 'unicode', u'tri_down')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76540, unicode_76541))
# Adding element type (key, value) (line 111)
unicode_76542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 120, 8), 'unicode', u'2')
unicode_76543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 120, 13), 'unicode', u'tri_up')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76542, unicode_76543))
# Adding element type (key, value) (line 111)
unicode_76544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 8), 'unicode', u'3')
unicode_76545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 13), 'unicode', u'tri_left')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76544, unicode_76545))
# Adding element type (key, value) (line 111)
unicode_76546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 122, 8), 'unicode', u'4')
unicode_76547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 122, 13), 'unicode', u'tri_right')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76546, unicode_76547))
# Adding element type (key, value) (line 111)
unicode_76548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 123, 8), 'unicode', u'8')
unicode_76549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 123, 13), 'unicode', u'octagon')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76548, unicode_76549))
# Adding element type (key, value) (line 111)
unicode_76550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 124, 8), 'unicode', u's')
unicode_76551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 124, 13), 'unicode', u'square')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76550, unicode_76551))
# Adding element type (key, value) (line 111)
unicode_76552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 8), 'unicode', u'p')
unicode_76553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 13), 'unicode', u'pentagon')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76552, unicode_76553))
# Adding element type (key, value) (line 111)
unicode_76554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 126, 8), 'unicode', u'*')
unicode_76555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 126, 13), 'unicode', u'star')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76554, unicode_76555))
# Adding element type (key, value) (line 111)
unicode_76556 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 8), 'unicode', u'h')
unicode_76557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 13), 'unicode', u'hexagon1')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76556, unicode_76557))
# Adding element type (key, value) (line 111)
unicode_76558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 8), 'unicode', u'H')
unicode_76559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 13), 'unicode', u'hexagon2')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76558, unicode_76559))
# Adding element type (key, value) (line 111)
unicode_76560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 8), 'unicode', u'+')
unicode_76561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 13), 'unicode', u'plus')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76560, unicode_76561))
# Adding element type (key, value) (line 111)
unicode_76562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 8), 'unicode', u'x')
unicode_76563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 13), 'unicode', u'x')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76562, unicode_76563))
# Adding element type (key, value) (line 111)
unicode_76564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, 8), 'unicode', u'D')
unicode_76565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, 13), 'unicode', u'diamond')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76564, unicode_76565))
# Adding element type (key, value) (line 111)
unicode_76566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 8), 'unicode', u'd')
unicode_76567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 13), 'unicode', u'thin_diamond')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76566, unicode_76567))
# Adding element type (key, value) (line 111)
unicode_76568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 8), 'unicode', u'|')
unicode_76569 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 13), 'unicode', u'vline')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76568, unicode_76569))
# Adding element type (key, value) (line 111)
unicode_76570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 8), 'unicode', u'_')
unicode_76571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 13), 'unicode', u'hline')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76570, unicode_76571))
# Adding element type (key, value) (line 111)
unicode_76572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 8), 'unicode', u'P')
unicode_76573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 13), 'unicode', u'plus_filled')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76572, unicode_76573))
# Adding element type (key, value) (line 111)
unicode_76574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 8), 'unicode', u'X')
unicode_76575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 13), 'unicode', u'x_filled')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76574, unicode_76575))
# Adding element type (key, value) (line 111)
# Getting the type of 'TICKLEFT' (line 137)
TICKLEFT_76576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 8), 'TICKLEFT')
unicode_76577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 18), 'unicode', u'tickleft')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (TICKLEFT_76576, unicode_76577))
# Adding element type (key, value) (line 111)
# Getting the type of 'TICKRIGHT' (line 138)
TICKRIGHT_76578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 8), 'TICKRIGHT')
unicode_76579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 19), 'unicode', u'tickright')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (TICKRIGHT_76578, unicode_76579))
# Adding element type (key, value) (line 111)
# Getting the type of 'TICKUP' (line 139)
TICKUP_76580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 8), 'TICKUP')
unicode_76581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 16), 'unicode', u'tickup')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (TICKUP_76580, unicode_76581))
# Adding element type (key, value) (line 111)
# Getting the type of 'TICKDOWN' (line 140)
TICKDOWN_76582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 8), 'TICKDOWN')
unicode_76583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 18), 'unicode', u'tickdown')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (TICKDOWN_76582, unicode_76583))
# Adding element type (key, value) (line 111)
# Getting the type of 'CARETLEFT' (line 141)
CARETLEFT_76584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 8), 'CARETLEFT')
unicode_76585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 19), 'unicode', u'caretleft')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (CARETLEFT_76584, unicode_76585))
# Adding element type (key, value) (line 111)
# Getting the type of 'CARETRIGHT' (line 142)
CARETRIGHT_76586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 8), 'CARETRIGHT')
unicode_76587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 20), 'unicode', u'caretright')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (CARETRIGHT_76586, unicode_76587))
# Adding element type (key, value) (line 111)
# Getting the type of 'CARETUP' (line 143)
CARETUP_76588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 8), 'CARETUP')
unicode_76589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 17), 'unicode', u'caretup')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (CARETUP_76588, unicode_76589))
# Adding element type (key, value) (line 111)
# Getting the type of 'CARETDOWN' (line 144)
CARETDOWN_76590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 8), 'CARETDOWN')
unicode_76591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 19), 'unicode', u'caretdown')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (CARETDOWN_76590, unicode_76591))
# Adding element type (key, value) (line 111)
# Getting the type of 'CARETLEFTBASE' (line 145)
CARETLEFTBASE_76592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 8), 'CARETLEFTBASE')
unicode_76593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 145, 23), 'unicode', u'caretleftbase')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (CARETLEFTBASE_76592, unicode_76593))
# Adding element type (key, value) (line 111)
# Getting the type of 'CARETRIGHTBASE' (line 146)
CARETRIGHTBASE_76594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 8), 'CARETRIGHTBASE')
unicode_76595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 146, 24), 'unicode', u'caretrightbase')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (CARETRIGHTBASE_76594, unicode_76595))
# Adding element type (key, value) (line 111)
# Getting the type of 'CARETUPBASE' (line 147)
CARETUPBASE_76596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 8), 'CARETUPBASE')
unicode_76597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 21), 'unicode', u'caretupbase')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (CARETUPBASE_76596, unicode_76597))
# Adding element type (key, value) (line 111)
# Getting the type of 'CARETDOWNBASE' (line 148)
CARETDOWNBASE_76598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 8), 'CARETDOWNBASE')
unicode_76599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 23), 'unicode', u'caretdownbase')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (CARETDOWNBASE_76598, unicode_76599))
# Adding element type (key, value) (line 111)
unicode_76600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 8), 'unicode', u'None')
unicode_76601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 16), 'unicode', u'nothing')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76600, unicode_76601))
# Adding element type (key, value) (line 111)
# Getting the type of 'None' (line 150)
None_76602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 8), 'None')
unicode_76603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 150, 14), 'unicode', u'nothing')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (None_76602, unicode_76603))
# Adding element type (key, value) (line 111)
unicode_76604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 8), 'unicode', u' ')
unicode_76605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 13), 'unicode', u'nothing')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76604, unicode_76605))
# Adding element type (key, value) (line 111)
unicode_76606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 152, 8), 'unicode', u'')
unicode_76607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 152, 12), 'unicode', u'nothing')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 14), dict_76525, (unicode_76606, unicode_76607))

# Getting the type of 'MarkerStyle'
MarkerStyle_76608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member 'markers' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_76608, 'markers', dict_76525)

# Assigning a Tuple to a Name (line 157):

# Obtaining an instance of the builtin type 'tuple' (line 158)
tuple_76609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 8), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 158)
# Adding element type (line 158)
unicode_76610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 8), 'unicode', u'o')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 8), tuple_76609, unicode_76610)
# Adding element type (line 158)
unicode_76611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 13), 'unicode', u'v')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 8), tuple_76609, unicode_76611)
# Adding element type (line 158)
unicode_76612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 18), 'unicode', u'^')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 8), tuple_76609, unicode_76612)
# Adding element type (line 158)
unicode_76613 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 23), 'unicode', u'<')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 8), tuple_76609, unicode_76613)
# Adding element type (line 158)
unicode_76614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 28), 'unicode', u'>')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 8), tuple_76609, unicode_76614)
# Adding element type (line 158)
unicode_76615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 33), 'unicode', u'8')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 8), tuple_76609, unicode_76615)
# Adding element type (line 158)
unicode_76616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 38), 'unicode', u's')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 8), tuple_76609, unicode_76616)
# Adding element type (line 158)
unicode_76617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 43), 'unicode', u'p')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 8), tuple_76609, unicode_76617)
# Adding element type (line 158)
unicode_76618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 48), 'unicode', u'*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 8), tuple_76609, unicode_76618)
# Adding element type (line 158)
unicode_76619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 53), 'unicode', u'h')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 8), tuple_76609, unicode_76619)
# Adding element type (line 158)
unicode_76620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 58), 'unicode', u'H')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 8), tuple_76609, unicode_76620)
# Adding element type (line 158)
unicode_76621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 63), 'unicode', u'D')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 8), tuple_76609, unicode_76621)
# Adding element type (line 158)
unicode_76622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 68), 'unicode', u'd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 8), tuple_76609, unicode_76622)
# Adding element type (line 158)
unicode_76623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 159, 8), 'unicode', u'P')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 8), tuple_76609, unicode_76623)
# Adding element type (line 158)
unicode_76624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 159, 13), 'unicode', u'X')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 8), tuple_76609, unicode_76624)

# Getting the type of 'MarkerStyle'
MarkerStyle_76625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member 'filled_markers' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_76625, 'filled_markers', tuple_76609)

# Assigning a Tuple to a Name (line 161):

# Obtaining an instance of the builtin type 'tuple' (line 161)
tuple_76626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 18), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 161)
# Adding element type (line 161)
unicode_76627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 18), 'unicode', u'full')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 161, 18), tuple_76626, unicode_76627)
# Adding element type (line 161)
unicode_76628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 26), 'unicode', u'left')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 161, 18), tuple_76626, unicode_76628)
# Adding element type (line 161)
unicode_76629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 34), 'unicode', u'right')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 161, 18), tuple_76626, unicode_76629)
# Adding element type (line 161)
unicode_76630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 43), 'unicode', u'bottom')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 161, 18), tuple_76626, unicode_76630)
# Adding element type (line 161)
unicode_76631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 53), 'unicode', u'top')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 161, 18), tuple_76626, unicode_76631)
# Adding element type (line 161)
unicode_76632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 60), 'unicode', u'none')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 161, 18), tuple_76626, unicode_76632)

# Getting the type of 'MarkerStyle'
MarkerStyle_76633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member 'fillstyles' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_76633, 'fillstyles', tuple_76626)

# Assigning a Tuple to a Name (line 162):

# Obtaining an instance of the builtin type 'tuple' (line 162)
tuple_76634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 24), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 162)
# Adding element type (line 162)
unicode_76635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 24), 'unicode', u'left')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 162, 24), tuple_76634, unicode_76635)
# Adding element type (line 162)
unicode_76636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 32), 'unicode', u'right')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 162, 24), tuple_76634, unicode_76636)
# Adding element type (line 162)
unicode_76637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 41), 'unicode', u'bottom')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 162, 24), tuple_76634, unicode_76637)
# Adding element type (line 162)
unicode_76638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 51), 'unicode', u'top')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 162, 24), tuple_76634, unicode_76638)

# Getting the type of 'MarkerStyle'
MarkerStyle_76639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_half_fillstyles' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_76639, '_half_fillstyles', tuple_76634)

# Assigning a Num to a Name (line 165):
float_76640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 28), 'float')
# Getting the type of 'MarkerStyle'
MarkerStyle_76641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_point_size_reduction' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_76641, '_point_size_reduction', float_76640)

# Assigning a Num to a Name (line 165):

# Getting the type of 'six' (line 213)
six_76642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 7), 'six')
# Obtaining the member 'PY3' of a type (line 213)
PY3_76643 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 213, 7), six_76642, 'PY3')
# Testing the type of an if condition (line 213)
if_condition_76644 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 213, 4), PY3_76643)
# Assigning a type to the variable 'if_condition_76644' (line 213)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 213, 4), 'if_condition_76644', if_condition_76644)
# SSA begins for if statement (line 213)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')

@norecursion
def __bool__(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '__bool__'
    module_type_store = module_type_store.open_function_context('__bool__', 214, 8, False)
    
    # Passed parameters checking function
    __bool__.stypy_localization = localization
    __bool__.stypy_type_of_self = None
    __bool__.stypy_type_store = module_type_store
    __bool__.stypy_function_name = '__bool__'
    __bool__.stypy_param_names_list = ['self']
    __bool__.stypy_varargs_param_name = None
    __bool__.stypy_kwargs_param_name = None
    __bool__.stypy_call_defaults = defaults
    __bool__.stypy_call_varargs = varargs
    __bool__.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '__bool__', ['self'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '__bool__', localization, ['self'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '__bool__(...)' code ##################

    
    # Call to bool(...): (line 215)
    # Processing the call arguments (line 215)
    
    # Call to len(...): (line 215)
    # Processing the call arguments (line 215)
    # Getting the type of 'self' (line 215)
    self_76647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 28), 'self', False)
    # Obtaining the member '_path' of a type (line 215)
    _path_76648 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 215, 28), self_76647, '_path')
    # Obtaining the member 'vertices' of a type (line 215)
    vertices_76649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 215, 28), _path_76648, 'vertices')
    # Processing the call keyword arguments (line 215)
    kwargs_76650 = {}
    # Getting the type of 'len' (line 215)
    len_76646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 24), 'len', False)
    # Calling len(args, kwargs) (line 215)
    len_call_result_76651 = invoke(stypy.reporting.localization.Localization(__file__, 215, 24), len_76646, *[vertices_76649], **kwargs_76650)
    
    # Processing the call keyword arguments (line 215)
    kwargs_76652 = {}
    # Getting the type of 'bool' (line 215)
    bool_76645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 19), 'bool', False)
    # Calling bool(args, kwargs) (line 215)
    bool_call_result_76653 = invoke(stypy.reporting.localization.Localization(__file__, 215, 19), bool_76645, *[len_call_result_76651], **kwargs_76652)
    
    # Assigning a type to the variable 'stypy_return_type' (line 215)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 215, 12), 'stypy_return_type', bool_call_result_76653)
    
    # ################# End of '__bool__(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '__bool__' in the type store
    # Getting the type of 'stypy_return_type' (line 214)
    stypy_return_type_76654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 8), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_76654)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '__bool__'
    return stypy_return_type_76654

# Assigning a type to the variable '__bool__' (line 214)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 214, 8), '__bool__', __bool__)
# SSA branch for the else part of an if statement (line 213)
module_type_store.open_ssa_branch('else')

@norecursion
def __nonzero__(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '__nonzero__'
    module_type_store = module_type_store.open_function_context('__nonzero__', 217, 8, False)
    
    # Passed parameters checking function
    __nonzero__.stypy_localization = localization
    __nonzero__.stypy_type_of_self = None
    __nonzero__.stypy_type_store = module_type_store
    __nonzero__.stypy_function_name = '__nonzero__'
    __nonzero__.stypy_param_names_list = ['self']
    __nonzero__.stypy_varargs_param_name = None
    __nonzero__.stypy_kwargs_param_name = None
    __nonzero__.stypy_call_defaults = defaults
    __nonzero__.stypy_call_varargs = varargs
    __nonzero__.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '__nonzero__', ['self'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '__nonzero__', localization, ['self'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '__nonzero__(...)' code ##################

    
    # Call to bool(...): (line 218)
    # Processing the call arguments (line 218)
    
    # Call to len(...): (line 218)
    # Processing the call arguments (line 218)
    # Getting the type of 'self' (line 218)
    self_76657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 28), 'self', False)
    # Obtaining the member '_path' of a type (line 218)
    _path_76658 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 218, 28), self_76657, '_path')
    # Obtaining the member 'vertices' of a type (line 218)
    vertices_76659 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 218, 28), _path_76658, 'vertices')
    # Processing the call keyword arguments (line 218)
    kwargs_76660 = {}
    # Getting the type of 'len' (line 218)
    len_76656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 24), 'len', False)
    # Calling len(args, kwargs) (line 218)
    len_call_result_76661 = invoke(stypy.reporting.localization.Localization(__file__, 218, 24), len_76656, *[vertices_76659], **kwargs_76660)
    
    # Processing the call keyword arguments (line 218)
    kwargs_76662 = {}
    # Getting the type of 'bool' (line 218)
    bool_76655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 19), 'bool', False)
    # Calling bool(args, kwargs) (line 218)
    bool_call_result_76663 = invoke(stypy.reporting.localization.Localization(__file__, 218, 19), bool_76655, *[len_call_result_76661], **kwargs_76662)
    
    # Assigning a type to the variable 'stypy_return_type' (line 218)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 218, 12), 'stypy_return_type', bool_call_result_76663)
    
    # ################# End of '__nonzero__(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '__nonzero__' in the type store
    # Getting the type of 'stypy_return_type' (line 217)
    stypy_return_type_76664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 8), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_76664)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '__nonzero__'
    return stypy_return_type_76664

# Assigning a type to the variable '__nonzero__' (line 217)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 217, 8), '__nonzero__', __nonzero__)
# SSA join for if statement (line 213)
module_type_store = module_type_store.join_ssa_context()


# Assigning a Call to a Name (line 409):

# Call to Path(...): (line 409)
# Processing the call arguments (line 409)

# Obtaining an instance of the builtin type 'list' (line 410)
list_76666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 8), 'list')
# Adding type elements to the builtin type 'list' instance (line 410)
# Adding element type (line 410)

# Obtaining an instance of the builtin type 'list' (line 410)
list_76667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 9), 'list')
# Adding type elements to the builtin type 'list' instance (line 410)
# Adding element type (line 410)
float_76668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 10), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 9), list_76667, float_76668)
# Adding element type (line 410)
float_76669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 15), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 9), list_76667, float_76669)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 8), list_76666, list_76667)
# Adding element type (line 410)

# Obtaining an instance of the builtin type 'list' (line 410)
list_76670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 410)
# Adding element type (line 410)
float_76671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 22), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 21), list_76670, float_76671)
# Adding element type (line 410)
float_76672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 28), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 21), list_76670, float_76672)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 8), list_76666, list_76670)
# Adding element type (line 410)

# Obtaining an instance of the builtin type 'list' (line 410)
list_76673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 35), 'list')
# Adding type elements to the builtin type 'list' instance (line 410)
# Adding element type (line 410)
float_76674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 36), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 35), list_76673, float_76674)
# Adding element type (line 410)
float_76675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 41), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 35), list_76673, float_76675)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 8), list_76666, list_76673)
# Adding element type (line 410)

# Obtaining an instance of the builtin type 'list' (line 410)
list_76676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 48), 'list')
# Adding type elements to the builtin type 'list' instance (line 410)
# Adding element type (line 410)
float_76677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 49), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 48), list_76676, float_76677)
# Adding element type (line 410)
float_76678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 54), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 48), list_76676, float_76678)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 8), list_76666, list_76676)


# Obtaining an instance of the builtin type 'list' (line 411)
list_76679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 8), 'list')
# Adding type elements to the builtin type 'list' instance (line 411)
# Adding element type (line 411)
# Getting the type of 'Path' (line 411)
Path_76680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 9), 'Path', False)
# Obtaining the member 'MOVETO' of a type (line 411)
MOVETO_76681 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 411, 9), Path_76680, 'MOVETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 411, 8), list_76679, MOVETO_76681)
# Adding element type (line 411)
# Getting the type of 'Path' (line 411)
Path_76682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 22), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 411)
LINETO_76683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 411, 22), Path_76682, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 411, 8), list_76679, LINETO_76683)
# Adding element type (line 411)
# Getting the type of 'Path' (line 411)
Path_76684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 35), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 411)
LINETO_76685 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 411, 35), Path_76684, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 411, 8), list_76679, LINETO_76685)
# Adding element type (line 411)
# Getting the type of 'Path' (line 411)
Path_76686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 48), 'Path', False)
# Obtaining the member 'CLOSEPOLY' of a type (line 411)
CLOSEPOLY_76687 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 411, 48), Path_76686, 'CLOSEPOLY')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 411, 8), list_76679, CLOSEPOLY_76687)

# Processing the call keyword arguments (line 409)
kwargs_76688 = {}
# Getting the type of 'Path' (line 409)
Path_76665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 21), 'Path', False)
# Calling Path(args, kwargs) (line 409)
Path_call_result_76689 = invoke(stypy.reporting.localization.Localization(__file__, 409, 21), Path_76665, *[list_76666, list_76679], **kwargs_76688)

# Getting the type of 'MarkerStyle'
MarkerStyle_76690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_triangle_path' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_76690, '_triangle_path', Path_call_result_76689)

# Assigning a Call to a Name (line 413):

# Call to Path(...): (line 413)
# Processing the call arguments (line 413)

# Obtaining an instance of the builtin type 'list' (line 414)
list_76692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 8), 'list')
# Adding type elements to the builtin type 'list' instance (line 414)
# Adding element type (line 414)

# Obtaining an instance of the builtin type 'list' (line 414)
list_76693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 9), 'list')
# Adding type elements to the builtin type 'list' instance (line 414)
# Adding element type (line 414)
float_76694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 10), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 414, 9), list_76693, float_76694)
# Adding element type (line 414)
float_76695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 15), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 414, 9), list_76693, float_76695)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 414, 8), list_76692, list_76693)
# Adding element type (line 414)

# Obtaining an instance of the builtin type 'list' (line 414)
list_76696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 414)
# Adding element type (line 414)
int_76697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 22), 'int')
float_76698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 27), 'float')
# Applying the binary operator 'div' (line 414)
result_div_76699 = python_operator(stypy.reporting.localization.Localization(__file__, 414, 22), 'div', int_76697, float_76698)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 414, 21), list_76696, result_div_76699)
# Adding element type (line 414)
int_76700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 31), 'int')
float_76701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 36), 'float')
# Applying the binary operator 'div' (line 414)
result_div_76702 = python_operator(stypy.reporting.localization.Localization(__file__, 414, 31), 'div', int_76700, float_76701)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 414, 21), list_76696, result_div_76702)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 414, 8), list_76692, list_76696)
# Adding element type (line 414)

# Obtaining an instance of the builtin type 'list' (line 414)
list_76703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 41), 'list')
# Adding type elements to the builtin type 'list' instance (line 414)
# Adding element type (line 414)
int_76704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 42), 'int')
float_76705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 46), 'float')
# Applying the binary operator 'div' (line 414)
result_div_76706 = python_operator(stypy.reporting.localization.Localization(__file__, 414, 42), 'div', int_76704, float_76705)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 414, 41), list_76703, result_div_76706)
# Adding element type (line 414)
int_76707 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 50), 'int')
float_76708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 55), 'float')
# Applying the binary operator 'div' (line 414)
result_div_76709 = python_operator(stypy.reporting.localization.Localization(__file__, 414, 50), 'div', int_76707, float_76708)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 414, 41), list_76703, result_div_76709)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 414, 8), list_76692, list_76703)
# Adding element type (line 414)

# Obtaining an instance of the builtin type 'list' (line 414)
list_76710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 60), 'list')
# Adding type elements to the builtin type 'list' instance (line 414)
# Adding element type (line 414)
float_76711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 61), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 414, 60), list_76710, float_76711)
# Adding element type (line 414)
float_76712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 66), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 414, 60), list_76710, float_76712)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 414, 8), list_76692, list_76710)


# Obtaining an instance of the builtin type 'list' (line 415)
list_76713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 415, 8), 'list')
# Adding type elements to the builtin type 'list' instance (line 415)
# Adding element type (line 415)
# Getting the type of 'Path' (line 415)
Path_76714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 9), 'Path', False)
# Obtaining the member 'MOVETO' of a type (line 415)
MOVETO_76715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 415, 9), Path_76714, 'MOVETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 415, 8), list_76713, MOVETO_76715)
# Adding element type (line 415)
# Getting the type of 'Path' (line 415)
Path_76716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 22), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 415)
LINETO_76717 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 415, 22), Path_76716, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 415, 8), list_76713, LINETO_76717)
# Adding element type (line 415)
# Getting the type of 'Path' (line 415)
Path_76718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 35), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 415)
LINETO_76719 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 415, 35), Path_76718, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 415, 8), list_76713, LINETO_76719)
# Adding element type (line 415)
# Getting the type of 'Path' (line 415)
Path_76720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 48), 'Path', False)
# Obtaining the member 'CLOSEPOLY' of a type (line 415)
CLOSEPOLY_76721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 415, 48), Path_76720, 'CLOSEPOLY')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 415, 8), list_76713, CLOSEPOLY_76721)

# Processing the call keyword arguments (line 413)
kwargs_76722 = {}
# Getting the type of 'Path' (line 413)
Path_76691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 23), 'Path', False)
# Calling Path(args, kwargs) (line 413)
Path_call_result_76723 = invoke(stypy.reporting.localization.Localization(__file__, 413, 23), Path_76691, *[list_76692, list_76713], **kwargs_76722)

# Getting the type of 'MarkerStyle'
MarkerStyle_76724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_triangle_path_u' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_76724, '_triangle_path_u', Path_call_result_76723)

# Assigning a Call to a Name (line 416):

# Call to Path(...): (line 416)
# Processing the call arguments (line 416)

# Obtaining an instance of the builtin type 'list' (line 417)
list_76726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 8), 'list')
# Adding type elements to the builtin type 'list' instance (line 417)
# Adding element type (line 417)

# Obtaining an instance of the builtin type 'list' (line 417)
list_76727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 9), 'list')
# Adding type elements to the builtin type 'list' instance (line 417)
# Adding element type (line 417)
int_76728 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 10), 'int')
float_76729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 15), 'float')
# Applying the binary operator 'div' (line 417)
result_div_76730 = python_operator(stypy.reporting.localization.Localization(__file__, 417, 10), 'div', int_76728, float_76729)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 417, 9), list_76727, result_div_76730)
# Adding element type (line 417)
int_76731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 19), 'int')
float_76732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 24), 'float')
# Applying the binary operator 'div' (line 417)
result_div_76733 = python_operator(stypy.reporting.localization.Localization(__file__, 417, 19), 'div', int_76731, float_76732)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 417, 9), list_76727, result_div_76733)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 417, 8), list_76726, list_76727)
# Adding element type (line 417)

# Obtaining an instance of the builtin type 'list' (line 417)
list_76734 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 417)
# Adding element type (line 417)
int_76735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 30), 'int')
float_76736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 34), 'float')
# Applying the binary operator 'div' (line 417)
result_div_76737 = python_operator(stypy.reporting.localization.Localization(__file__, 417, 30), 'div', int_76735, float_76736)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 417, 29), list_76734, result_div_76737)
# Adding element type (line 417)
int_76738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 38), 'int')
float_76739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 43), 'float')
# Applying the binary operator 'div' (line 417)
result_div_76740 = python_operator(stypy.reporting.localization.Localization(__file__, 417, 38), 'div', int_76738, float_76739)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 417, 29), list_76734, result_div_76740)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 417, 8), list_76726, list_76734)
# Adding element type (line 417)

# Obtaining an instance of the builtin type 'list' (line 417)
list_76741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 48), 'list')
# Adding type elements to the builtin type 'list' instance (line 417)
# Adding element type (line 417)
float_76742 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 49), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 417, 48), list_76741, float_76742)
# Adding element type (line 417)
float_76743 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 54), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 417, 48), list_76741, float_76743)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 417, 8), list_76726, list_76741)
# Adding element type (line 417)

# Obtaining an instance of the builtin type 'list' (line 417)
list_76744 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 61), 'list')
# Adding type elements to the builtin type 'list' instance (line 417)
# Adding element type (line 417)
float_76745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 62), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 417, 61), list_76744, float_76745)
# Adding element type (line 417)
float_76746 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 68), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 417, 61), list_76744, float_76746)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 417, 8), list_76726, list_76744)
# Adding element type (line 417)

# Obtaining an instance of the builtin type 'list' (line 418)
list_76747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 9), 'list')
# Adding type elements to the builtin type 'list' instance (line 418)
# Adding element type (line 418)
int_76748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 10), 'int')
float_76749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 15), 'float')
# Applying the binary operator 'div' (line 418)
result_div_76750 = python_operator(stypy.reporting.localization.Localization(__file__, 418, 10), 'div', int_76748, float_76749)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 418, 9), list_76747, result_div_76750)
# Adding element type (line 418)
int_76751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 19), 'int')
float_76752 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 24), 'float')
# Applying the binary operator 'div' (line 418)
result_div_76753 = python_operator(stypy.reporting.localization.Localization(__file__, 418, 19), 'div', int_76751, float_76752)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 418, 9), list_76747, result_div_76753)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 417, 8), list_76726, list_76747)


# Obtaining an instance of the builtin type 'list' (line 419)
list_76754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 419, 8), 'list')
# Adding type elements to the builtin type 'list' instance (line 419)
# Adding element type (line 419)
# Getting the type of 'Path' (line 419)
Path_76755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 9), 'Path', False)
# Obtaining the member 'MOVETO' of a type (line 419)
MOVETO_76756 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 419, 9), Path_76755, 'MOVETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 419, 8), list_76754, MOVETO_76756)
# Adding element type (line 419)
# Getting the type of 'Path' (line 419)
Path_76757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 22), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 419)
LINETO_76758 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 419, 22), Path_76757, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 419, 8), list_76754, LINETO_76758)
# Adding element type (line 419)
# Getting the type of 'Path' (line 419)
Path_76759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 35), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 419)
LINETO_76760 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 419, 35), Path_76759, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 419, 8), list_76754, LINETO_76760)
# Adding element type (line 419)
# Getting the type of 'Path' (line 419)
Path_76761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 48), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 419)
LINETO_76762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 419, 48), Path_76761, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 419, 8), list_76754, LINETO_76762)
# Adding element type (line 419)
# Getting the type of 'Path' (line 419)
Path_76763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 61), 'Path', False)
# Obtaining the member 'CLOSEPOLY' of a type (line 419)
CLOSEPOLY_76764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 419, 61), Path_76763, 'CLOSEPOLY')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 419, 8), list_76754, CLOSEPOLY_76764)

# Processing the call keyword arguments (line 416)
kwargs_76765 = {}
# Getting the type of 'Path' (line 416)
Path_76725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 23), 'Path', False)
# Calling Path(args, kwargs) (line 416)
Path_call_result_76766 = invoke(stypy.reporting.localization.Localization(__file__, 416, 23), Path_76725, *[list_76726, list_76754], **kwargs_76765)

# Getting the type of 'MarkerStyle'
MarkerStyle_76767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_triangle_path_d' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_76767, '_triangle_path_d', Path_call_result_76766)

# Assigning a Call to a Name (line 420):

# Call to Path(...): (line 420)
# Processing the call arguments (line 420)

# Obtaining an instance of the builtin type 'list' (line 421)
list_76769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 8), 'list')
# Adding type elements to the builtin type 'list' instance (line 421)
# Adding element type (line 421)

# Obtaining an instance of the builtin type 'list' (line 421)
list_76770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 9), 'list')
# Adding type elements to the builtin type 'list' instance (line 421)
# Adding element type (line 421)
float_76771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 10), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 421, 9), list_76770, float_76771)
# Adding element type (line 421)
float_76772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 15), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 421, 9), list_76770, float_76772)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 421, 8), list_76769, list_76770)
# Adding element type (line 421)

# Obtaining an instance of the builtin type 'list' (line 421)
list_76773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 421)
# Adding element type (line 421)
float_76774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 22), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 421, 21), list_76773, float_76774)
# Adding element type (line 421)
float_76775 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 27), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 421, 21), list_76773, float_76775)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 421, 8), list_76769, list_76773)
# Adding element type (line 421)

# Obtaining an instance of the builtin type 'list' (line 421)
list_76776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 34), 'list')
# Adding type elements to the builtin type 'list' instance (line 421)
# Adding element type (line 421)
float_76777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 35), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 421, 34), list_76776, float_76777)
# Adding element type (line 421)
float_76778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 41), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 421, 34), list_76776, float_76778)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 421, 8), list_76769, list_76776)
# Adding element type (line 421)

# Obtaining an instance of the builtin type 'list' (line 421)
list_76779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 48), 'list')
# Adding type elements to the builtin type 'list' instance (line 421)
# Adding element type (line 421)
float_76780 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 49), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 421, 48), list_76779, float_76780)
# Adding element type (line 421)
float_76781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 54), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 421, 48), list_76779, float_76781)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 421, 8), list_76769, list_76779)


# Obtaining an instance of the builtin type 'list' (line 422)
list_76782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 422, 8), 'list')
# Adding type elements to the builtin type 'list' instance (line 422)
# Adding element type (line 422)
# Getting the type of 'Path' (line 422)
Path_76783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 9), 'Path', False)
# Obtaining the member 'MOVETO' of a type (line 422)
MOVETO_76784 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 422, 9), Path_76783, 'MOVETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 422, 8), list_76782, MOVETO_76784)
# Adding element type (line 422)
# Getting the type of 'Path' (line 422)
Path_76785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 22), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 422)
LINETO_76786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 422, 22), Path_76785, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 422, 8), list_76782, LINETO_76786)
# Adding element type (line 422)
# Getting the type of 'Path' (line 422)
Path_76787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 35), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 422)
LINETO_76788 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 422, 35), Path_76787, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 422, 8), list_76782, LINETO_76788)
# Adding element type (line 422)
# Getting the type of 'Path' (line 422)
Path_76789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 48), 'Path', False)
# Obtaining the member 'CLOSEPOLY' of a type (line 422)
CLOSEPOLY_76790 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 422, 48), Path_76789, 'CLOSEPOLY')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 422, 8), list_76782, CLOSEPOLY_76790)

# Processing the call keyword arguments (line 420)
kwargs_76791 = {}
# Getting the type of 'Path' (line 420)
Path_76768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 23), 'Path', False)
# Calling Path(args, kwargs) (line 420)
Path_call_result_76792 = invoke(stypy.reporting.localization.Localization(__file__, 420, 23), Path_76768, *[list_76769, list_76782], **kwargs_76791)

# Getting the type of 'MarkerStyle'
MarkerStyle_76793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_triangle_path_l' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_76793, '_triangle_path_l', Path_call_result_76792)

# Assigning a Call to a Name (line 423):

# Call to Path(...): (line 423)
# Processing the call arguments (line 423)

# Obtaining an instance of the builtin type 'list' (line 424)
list_76795 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 8), 'list')
# Adding type elements to the builtin type 'list' instance (line 424)
# Adding element type (line 424)

# Obtaining an instance of the builtin type 'list' (line 424)
list_76796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 9), 'list')
# Adding type elements to the builtin type 'list' instance (line 424)
# Adding element type (line 424)
float_76797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 10), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 424, 9), list_76796, float_76797)
# Adding element type (line 424)
float_76798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 15), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 424, 9), list_76796, float_76798)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 424, 8), list_76795, list_76796)
# Adding element type (line 424)

# Obtaining an instance of the builtin type 'list' (line 424)
list_76799 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 424)
# Adding element type (line 424)
float_76800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 22), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 424, 21), list_76799, float_76800)
# Adding element type (line 424)
float_76801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 27), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 424, 21), list_76799, float_76801)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 424, 8), list_76795, list_76799)
# Adding element type (line 424)

# Obtaining an instance of the builtin type 'list' (line 424)
list_76802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 34), 'list')
# Adding type elements to the builtin type 'list' instance (line 424)
# Adding element type (line 424)
float_76803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 35), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 424, 34), list_76802, float_76803)
# Adding element type (line 424)
float_76804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 40), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 424, 34), list_76802, float_76804)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 424, 8), list_76795, list_76802)
# Adding element type (line 424)

# Obtaining an instance of the builtin type 'list' (line 424)
list_76805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 47), 'list')
# Adding type elements to the builtin type 'list' instance (line 424)
# Adding element type (line 424)
float_76806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 48), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 424, 47), list_76805, float_76806)
# Adding element type (line 424)
float_76807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 53), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 424, 47), list_76805, float_76807)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 424, 8), list_76795, list_76805)


# Obtaining an instance of the builtin type 'list' (line 425)
list_76808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 425, 8), 'list')
# Adding type elements to the builtin type 'list' instance (line 425)
# Adding element type (line 425)
# Getting the type of 'Path' (line 425)
Path_76809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 9), 'Path', False)
# Obtaining the member 'MOVETO' of a type (line 425)
MOVETO_76810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 9), Path_76809, 'MOVETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 425, 8), list_76808, MOVETO_76810)
# Adding element type (line 425)
# Getting the type of 'Path' (line 425)
Path_76811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 22), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 425)
LINETO_76812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 22), Path_76811, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 425, 8), list_76808, LINETO_76812)
# Adding element type (line 425)
# Getting the type of 'Path' (line 425)
Path_76813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 35), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 425)
LINETO_76814 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 35), Path_76813, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 425, 8), list_76808, LINETO_76814)
# Adding element type (line 425)
# Getting the type of 'Path' (line 425)
Path_76815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 48), 'Path', False)
# Obtaining the member 'CLOSEPOLY' of a type (line 425)
CLOSEPOLY_76816 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 48), Path_76815, 'CLOSEPOLY')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 425, 8), list_76808, CLOSEPOLY_76816)

# Processing the call keyword arguments (line 423)
kwargs_76817 = {}
# Getting the type of 'Path' (line 423)
Path_76794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 23), 'Path', False)
# Calling Path(args, kwargs) (line 423)
Path_call_result_76818 = invoke(stypy.reporting.localization.Localization(__file__, 423, 23), Path_76794, *[list_76795, list_76808], **kwargs_76817)

# Getting the type of 'MarkerStyle'
MarkerStyle_76819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_triangle_path_r' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_76819, '_triangle_path_r', Path_call_result_76818)

# Assigning a Call to a Name (line 688):

# Call to Path(...): (line 688)
# Processing the call arguments (line 688)

# Obtaining an instance of the builtin type 'list' (line 688)
list_76821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 688)
# Adding element type (line 688)

# Obtaining an instance of the builtin type 'list' (line 688)
list_76822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 688)
# Adding element type (line 688)
float_76823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 31), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 30), list_76822, float_76823)
# Adding element type (line 688)
float_76824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 36), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 30), list_76822, float_76824)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 29), list_76821, list_76822)
# Adding element type (line 688)

# Obtaining an instance of the builtin type 'list' (line 688)
list_76825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 43), 'list')
# Adding type elements to the builtin type 'list' instance (line 688)
# Adding element type (line 688)
float_76826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 44), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 43), list_76825, float_76826)
# Adding element type (line 688)
float_76827 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 49), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 43), list_76825, float_76827)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 29), list_76821, list_76825)

# Processing the call keyword arguments (line 688)
kwargs_76828 = {}
# Getting the type of 'Path' (line 688)
Path_76820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 24), 'Path', False)
# Calling Path(args, kwargs) (line 688)
Path_call_result_76829 = invoke(stypy.reporting.localization.Localization(__file__, 688, 24), Path_76820, *[list_76821], **kwargs_76828)

# Getting the type of 'MarkerStyle'
MarkerStyle_76830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_line_marker_path' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_76830, '_line_marker_path', Path_call_result_76829)

# Assigning a Call to a Name (line 700):

# Call to Path(...): (line 700)
# Processing the call arguments (line 700)

# Obtaining an instance of the builtin type 'list' (line 700)
list_76832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 700, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 700)
# Adding element type (line 700)

# Obtaining an instance of the builtin type 'list' (line 700)
list_76833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 700, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 700)
# Adding element type (line 700)
float_76834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 700, 29), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 700, 28), list_76833, float_76834)
# Adding element type (line 700)
float_76835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 700, 34), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 700, 28), list_76833, float_76835)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 700, 27), list_76832, list_76833)
# Adding element type (line 700)

# Obtaining an instance of the builtin type 'list' (line 700)
list_76836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 700, 40), 'list')
# Adding type elements to the builtin type 'list' instance (line 700)
# Adding element type (line 700)
float_76837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 700, 41), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 700, 40), list_76836, float_76837)
# Adding element type (line 700)
float_76838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 700, 46), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 700, 40), list_76836, float_76838)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 700, 27), list_76832, list_76836)

# Processing the call keyword arguments (line 700)
kwargs_76839 = {}
# Getting the type of 'Path' (line 700)
Path_76831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 22), 'Path', False)
# Calling Path(args, kwargs) (line 700)
Path_call_result_76840 = invoke(stypy.reporting.localization.Localization(__file__, 700, 22), Path_76831, *[list_76832], **kwargs_76839)

# Getting the type of 'MarkerStyle'
MarkerStyle_76841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_tickhoriz_path' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_76841, '_tickhoriz_path', Path_call_result_76840)

# Assigning a Call to a Name (line 714):

# Call to Path(...): (line 714)
# Processing the call arguments (line 714)

# Obtaining an instance of the builtin type 'list' (line 714)
list_76843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 714)
# Adding element type (line 714)

# Obtaining an instance of the builtin type 'list' (line 714)
list_76844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 714)
# Adding element type (line 714)
float_76845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 28), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 27), list_76844, float_76845)
# Adding element type (line 714)
float_76846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 34), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 27), list_76844, float_76846)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 26), list_76843, list_76844)
# Adding element type (line 714)

# Obtaining an instance of the builtin type 'list' (line 714)
list_76847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 40), 'list')
# Adding type elements to the builtin type 'list' instance (line 714)
# Adding element type (line 714)
float_76848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 41), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 40), list_76847, float_76848)
# Adding element type (line 714)
float_76849 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 47), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 40), list_76847, float_76849)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 26), list_76843, list_76847)

# Processing the call keyword arguments (line 714)
kwargs_76850 = {}
# Getting the type of 'Path' (line 714)
Path_76842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 21), 'Path', False)
# Calling Path(args, kwargs) (line 714)
Path_call_result_76851 = invoke(stypy.reporting.localization.Localization(__file__, 714, 21), Path_76842, *[list_76843], **kwargs_76850)

# Getting the type of 'MarkerStyle'
MarkerStyle_76852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_tickvert_path' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_76852, '_tickvert_path', Path_call_result_76851)

# Assigning a Call to a Name (line 728):

# Call to Path(...): (line 728)
# Processing the call arguments (line 728)

# Obtaining an instance of the builtin type 'list' (line 728)
list_76854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 728)
# Adding element type (line 728)

# Obtaining an instance of the builtin type 'list' (line 728)
list_76855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 22), 'list')
# Adding type elements to the builtin type 'list' instance (line 728)
# Adding element type (line 728)
float_76856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 23), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 22), list_76855, float_76856)
# Adding element type (line 728)
float_76857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 28), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 22), list_76855, float_76857)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 21), list_76854, list_76855)
# Adding element type (line 728)

# Obtaining an instance of the builtin type 'list' (line 728)
list_76858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 34), 'list')
# Adding type elements to the builtin type 'list' instance (line 728)
# Adding element type (line 728)
float_76859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 35), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 34), list_76858, float_76859)
# Adding element type (line 728)
float_76860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 40), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 34), list_76858, float_76860)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 21), list_76854, list_76858)
# Adding element type (line 728)

# Obtaining an instance of the builtin type 'list' (line 729)
list_76861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 22), 'list')
# Adding type elements to the builtin type 'list' instance (line 729)
# Adding element type (line 729)
float_76862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 23), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 729, 22), list_76861, float_76862)
# Adding element type (line 729)
float_76863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 28), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 729, 22), list_76861, float_76863)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 21), list_76854, list_76861)
# Adding element type (line 728)

# Obtaining an instance of the builtin type 'list' (line 729)
list_76864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 34), 'list')
# Adding type elements to the builtin type 'list' instance (line 729)
# Adding element type (line 729)
float_76865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 35), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 729, 34), list_76864, float_76865)
# Adding element type (line 729)
float_76866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 40), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 729, 34), list_76864, float_76866)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 21), list_76854, list_76864)
# Adding element type (line 728)

# Obtaining an instance of the builtin type 'list' (line 730)
list_76867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 22), 'list')
# Adding type elements to the builtin type 'list' instance (line 730)
# Adding element type (line 730)
float_76868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 23), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 22), list_76867, float_76868)
# Adding element type (line 730)
float_76869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 28), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 22), list_76867, float_76869)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 21), list_76854, list_76867)
# Adding element type (line 728)

# Obtaining an instance of the builtin type 'list' (line 730)
list_76870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 34), 'list')
# Adding type elements to the builtin type 'list' instance (line 730)
# Adding element type (line 730)
float_76871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 35), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 34), list_76870, float_76871)
# Adding element type (line 730)
float_76872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 41), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 34), list_76870, float_76872)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 21), list_76854, list_76870)


# Obtaining an instance of the builtin type 'list' (line 731)
list_76873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 21), 'list')
# Adding type elements to the builtin type 'list' instance (line 731)
# Adding element type (line 731)
# Getting the type of 'Path' (line 731)
Path_76874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 22), 'Path', False)
# Obtaining the member 'MOVETO' of a type (line 731)
MOVETO_76875 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 22), Path_76874, 'MOVETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 21), list_76873, MOVETO_76875)
# Adding element type (line 731)
# Getting the type of 'Path' (line 731)
Path_76876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 35), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 731)
LINETO_76877 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 35), Path_76876, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 21), list_76873, LINETO_76877)
# Adding element type (line 731)
# Getting the type of 'Path' (line 732)
Path_76878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 22), 'Path', False)
# Obtaining the member 'MOVETO' of a type (line 732)
MOVETO_76879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 732, 22), Path_76878, 'MOVETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 21), list_76873, MOVETO_76879)
# Adding element type (line 731)
# Getting the type of 'Path' (line 732)
Path_76880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 35), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 732)
LINETO_76881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 732, 35), Path_76880, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 21), list_76873, LINETO_76881)
# Adding element type (line 731)
# Getting the type of 'Path' (line 733)
Path_76882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 22), 'Path', False)
# Obtaining the member 'MOVETO' of a type (line 733)
MOVETO_76883 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 733, 22), Path_76882, 'MOVETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 21), list_76873, MOVETO_76883)
# Adding element type (line 731)
# Getting the type of 'Path' (line 733)
Path_76884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 35), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 733)
LINETO_76885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 733, 35), Path_76884, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 21), list_76873, LINETO_76885)

# Processing the call keyword arguments (line 728)
kwargs_76886 = {}
# Getting the type of 'Path' (line 728)
Path_76853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 16), 'Path', False)
# Calling Path(args, kwargs) (line 728)
Path_call_result_76887 = invoke(stypy.reporting.localization.Localization(__file__, 728, 16), Path_76853, *[list_76854, list_76873], **kwargs_76886)

# Getting the type of 'MarkerStyle'
MarkerStyle_76888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_tri_path' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_76888, '_tri_path', Path_call_result_76887)

# Assigning a Call to a Name (line 753):

# Call to Path(...): (line 753)
# Processing the call arguments (line 753)

# Obtaining an instance of the builtin type 'list' (line 753)
list_76890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 753)
# Adding element type (line 753)

# Obtaining an instance of the builtin type 'list' (line 753)
list_76891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 753)
# Adding element type (line 753)
float_76892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 25), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 24), list_76891, float_76892)
# Adding element type (line 753)
float_76893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 31), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 24), list_76891, float_76893)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 23), list_76890, list_76891)
# Adding element type (line 753)

# Obtaining an instance of the builtin type 'list' (line 753)
list_76894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 37), 'list')
# Adding type elements to the builtin type 'list' instance (line 753)
# Adding element type (line 753)
float_76895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 38), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 37), list_76894, float_76895)
# Adding element type (line 753)
float_76896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 43), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 37), list_76894, float_76896)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 23), list_76890, list_76894)
# Adding element type (line 753)

# Obtaining an instance of the builtin type 'list' (line 753)
list_76897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 49), 'list')
# Adding type elements to the builtin type 'list' instance (line 753)
# Adding element type (line 753)
float_76898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 50), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 49), list_76897, float_76898)
# Adding element type (line 753)
float_76899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 55), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 49), list_76897, float_76899)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 23), list_76890, list_76897)

# Processing the call keyword arguments (line 753)
kwargs_76900 = {}
# Getting the type of 'Path' (line 753)
Path_76889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 18), 'Path', False)
# Calling Path(args, kwargs) (line 753)
Path_call_result_76901 = invoke(stypy.reporting.localization.Localization(__file__, 753, 18), Path_76889, *[list_76890], **kwargs_76900)

# Getting the type of 'MarkerStyle'
MarkerStyle_76902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_caret_path' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_76902, '_caret_path', Path_call_result_76901)

# Assigning a Call to a Name (line 774):

# Call to Path(...): (line 774)
# Processing the call arguments (line 774)

# Obtaining an instance of the builtin type 'list' (line 774)
list_76904 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 774)
# Adding element type (line 774)

# Obtaining an instance of the builtin type 'list' (line 774)
list_76905 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 774)
# Adding element type (line 774)
float_76906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 30), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 774, 29), list_76905, float_76906)
# Adding element type (line 774)
float_76907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 36), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 774, 29), list_76905, float_76907)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 774, 28), list_76904, list_76905)
# Adding element type (line 774)

# Obtaining an instance of the builtin type 'list' (line 774)
list_76908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 42), 'list')
# Adding type elements to the builtin type 'list' instance (line 774)
# Adding element type (line 774)
float_76909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 43), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 774, 42), list_76908, float_76909)
# Adding element type (line 774)
float_76910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 48), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 774, 42), list_76908, float_76910)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 774, 28), list_76904, list_76908)
# Adding element type (line 774)

# Obtaining an instance of the builtin type 'list' (line 774)
list_76911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 55), 'list')
# Adding type elements to the builtin type 'list' instance (line 774)
# Adding element type (line 774)
float_76912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 56), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 774, 55), list_76911, float_76912)
# Adding element type (line 774)
int_76913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 61), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 774, 55), list_76911, int_76913)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 774, 28), list_76904, list_76911)

# Processing the call keyword arguments (line 774)
kwargs_76914 = {}
# Getting the type of 'Path' (line 774)
Path_76903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 23), 'Path', False)
# Calling Path(args, kwargs) (line 774)
Path_call_result_76915 = invoke(stypy.reporting.localization.Localization(__file__, 774, 23), Path_76903, *[list_76904], **kwargs_76914)

# Getting the type of 'MarkerStyle'
MarkerStyle_76916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_caret_path_base' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_76916, '_caret_path_base', Path_call_result_76915)

# Assigning a Call to a Name (line 792):

# Call to Path(...): (line 792)
# Processing the call arguments (line 792)

# Obtaining an instance of the builtin type 'list' (line 792)
list_76918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 792, 22), 'list')
# Adding type elements to the builtin type 'list' instance (line 792)
# Adding element type (line 792)

# Obtaining an instance of the builtin type 'list' (line 792)
list_76919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 792, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 792)
# Adding element type (line 792)
float_76920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 792, 24), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 23), list_76919, float_76920)
# Adding element type (line 792)
float_76921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 792, 30), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 23), list_76919, float_76921)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 22), list_76918, list_76919)
# Adding element type (line 792)

# Obtaining an instance of the builtin type 'list' (line 792)
list_76922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 792, 36), 'list')
# Adding type elements to the builtin type 'list' instance (line 792)
# Adding element type (line 792)
float_76923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 792, 37), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 36), list_76922, float_76923)
# Adding element type (line 792)
float_76924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 792, 42), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 36), list_76922, float_76924)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 22), list_76918, list_76922)
# Adding element type (line 792)

# Obtaining an instance of the builtin type 'list' (line 793)
list_76925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 793)
# Adding element type (line 793)
float_76926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 24), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 23), list_76925, float_76926)
# Adding element type (line 793)
float_76927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 29), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 23), list_76925, float_76927)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 22), list_76918, list_76925)
# Adding element type (line 792)

# Obtaining an instance of the builtin type 'list' (line 793)
list_76928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 36), 'list')
# Adding type elements to the builtin type 'list' instance (line 793)
# Adding element type (line 793)
float_76929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 37), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 36), list_76928, float_76929)
# Adding element type (line 793)
float_76930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 42), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 36), list_76928, float_76930)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 22), list_76918, list_76928)


# Obtaining an instance of the builtin type 'list' (line 794)
list_76931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 22), 'list')
# Adding type elements to the builtin type 'list' instance (line 794)
# Adding element type (line 794)
# Getting the type of 'Path' (line 794)
Path_76932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 23), 'Path', False)
# Obtaining the member 'MOVETO' of a type (line 794)
MOVETO_76933 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 23), Path_76932, 'MOVETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 794, 22), list_76931, MOVETO_76933)
# Adding element type (line 794)
# Getting the type of 'Path' (line 794)
Path_76934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 36), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 794)
LINETO_76935 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 36), Path_76934, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 794, 22), list_76931, LINETO_76935)
# Adding element type (line 794)
# Getting the type of 'Path' (line 795)
Path_76936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 23), 'Path', False)
# Obtaining the member 'MOVETO' of a type (line 795)
MOVETO_76937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 795, 23), Path_76936, 'MOVETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 794, 22), list_76931, MOVETO_76937)
# Adding element type (line 794)
# Getting the type of 'Path' (line 795)
Path_76938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 36), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 795)
LINETO_76939 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 795, 36), Path_76938, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 794, 22), list_76931, LINETO_76939)

# Processing the call keyword arguments (line 792)
kwargs_76940 = {}
# Getting the type of 'Path' (line 792)
Path_76917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 792, 17), 'Path', False)
# Calling Path(args, kwargs) (line 792)
Path_call_result_76941 = invoke(stypy.reporting.localization.Localization(__file__, 792, 17), Path_76917, *[list_76918, list_76931], **kwargs_76940)

# Getting the type of 'MarkerStyle'
MarkerStyle_76942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_plus_path' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_76942, '_plus_path', Path_call_result_76941)

# Assigning a Call to a Name (line 803):

# Call to Path(...): (line 803)
# Processing the call arguments (line 803)

# Obtaining an instance of the builtin type 'list' (line 803)
list_76944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 803, 19), 'list')
# Adding type elements to the builtin type 'list' instance (line 803)
# Adding element type (line 803)

# Obtaining an instance of the builtin type 'list' (line 803)
list_76945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 803, 20), 'list')
# Adding type elements to the builtin type 'list' instance (line 803)
# Adding element type (line 803)
float_76946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 803, 21), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 803, 20), list_76945, float_76946)
# Adding element type (line 803)
float_76947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 803, 27), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 803, 20), list_76945, float_76947)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 803, 19), list_76944, list_76945)
# Adding element type (line 803)

# Obtaining an instance of the builtin type 'list' (line 803)
list_76948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 803, 34), 'list')
# Adding type elements to the builtin type 'list' instance (line 803)
# Adding element type (line 803)
float_76949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 803, 35), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 803, 34), list_76948, float_76949)
# Adding element type (line 803)
float_76950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 803, 40), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 803, 34), list_76948, float_76950)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 803, 19), list_76944, list_76948)
# Adding element type (line 803)

# Obtaining an instance of the builtin type 'list' (line 804)
list_76951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 804, 20), 'list')
# Adding type elements to the builtin type 'list' instance (line 804)
# Adding element type (line 804)
float_76952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 804, 21), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 804, 20), list_76951, float_76952)
# Adding element type (line 804)
float_76953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 804, 27), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 804, 20), list_76951, float_76953)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 803, 19), list_76944, list_76951)
# Adding element type (line 803)

# Obtaining an instance of the builtin type 'list' (line 804)
list_76954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 804, 33), 'list')
# Adding type elements to the builtin type 'list' instance (line 804)
# Adding element type (line 804)
float_76955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 804, 34), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 804, 33), list_76954, float_76955)
# Adding element type (line 804)
float_76956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 804, 39), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 804, 33), list_76954, float_76956)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 803, 19), list_76944, list_76954)


# Obtaining an instance of the builtin type 'list' (line 805)
list_76957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 805, 19), 'list')
# Adding type elements to the builtin type 'list' instance (line 805)
# Adding element type (line 805)
# Getting the type of 'Path' (line 805)
Path_76958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 20), 'Path', False)
# Obtaining the member 'MOVETO' of a type (line 805)
MOVETO_76959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 805, 20), Path_76958, 'MOVETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 805, 19), list_76957, MOVETO_76959)
# Adding element type (line 805)
# Getting the type of 'Path' (line 805)
Path_76960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 33), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 805)
LINETO_76961 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 805, 33), Path_76960, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 805, 19), list_76957, LINETO_76961)
# Adding element type (line 805)
# Getting the type of 'Path' (line 806)
Path_76962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 20), 'Path', False)
# Obtaining the member 'MOVETO' of a type (line 806)
MOVETO_76963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 806, 20), Path_76962, 'MOVETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 805, 19), list_76957, MOVETO_76963)
# Adding element type (line 805)
# Getting the type of 'Path' (line 806)
Path_76964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 33), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 806)
LINETO_76965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 806, 33), Path_76964, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 805, 19), list_76957, LINETO_76965)

# Processing the call keyword arguments (line 803)
kwargs_76966 = {}
# Getting the type of 'Path' (line 803)
Path_76943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 14), 'Path', False)
# Calling Path(args, kwargs) (line 803)
Path_call_result_76967 = invoke(stypy.reporting.localization.Localization(__file__, 803, 14), Path_76943, *[list_76944, list_76957], **kwargs_76966)

# Getting the type of 'MarkerStyle'
MarkerStyle_76968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_x_path' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_76968, '_x_path', Path_call_result_76967)

# Assigning a Call to a Name (line 814):

# Call to Path(...): (line 814)
# Processing the call arguments (line 814)

# Obtaining an instance of the builtin type 'list' (line 814)
list_76970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 814)
# Adding element type (line 814)

# Obtaining an instance of the builtin type 'tuple' (line 814)
tuple_76971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 31), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 814)
# Adding element type (line 814)
int_76972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 31), 'int')
int_76973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 33), 'int')
# Applying the binary operator 'div' (line 814)
result_div_76974 = python_operator(stypy.reporting.localization.Localization(__file__, 814, 31), 'div', int_76972, int_76973)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 31), tuple_76971, result_div_76974)
# Adding element type (line 814)
int_76975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 36), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 31), tuple_76971, int_76975)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 29), list_76970, tuple_76971)
# Adding element type (line 814)

# Obtaining an instance of the builtin type 'tuple' (line 814)
tuple_76976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 814)
# Adding element type (line 814)
int_76977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 41), 'int')
int_76978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 43), 'int')
# Applying the binary operator 'div' (line 814)
result_div_76979 = python_operator(stypy.reporting.localization.Localization(__file__, 814, 41), 'div', int_76977, int_76978)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 41), tuple_76976, result_div_76979)
# Adding element type (line 814)
int_76980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 46), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 41), tuple_76976, int_76980)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 29), list_76970, tuple_76976)
# Adding element type (line 814)

# Obtaining an instance of the builtin type 'tuple' (line 814)
tuple_76981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 51), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 814)
# Adding element type (line 814)
int_76982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 51), 'int')
int_76983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 53), 'int')
# Applying the binary operator 'div' (line 814)
result_div_76984 = python_operator(stypy.reporting.localization.Localization(__file__, 814, 51), 'div', int_76982, int_76983)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 51), tuple_76981, result_div_76984)
# Adding element type (line 814)
int_76985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 56), 'int')
int_76986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 58), 'int')
# Applying the binary operator 'div' (line 814)
result_div_76987 = python_operator(stypy.reporting.localization.Localization(__file__, 814, 56), 'div', int_76985, int_76986)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 51), tuple_76981, result_div_76987)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 29), list_76970, tuple_76981)
# Adding element type (line 814)

# Obtaining an instance of the builtin type 'tuple' (line 815)
tuple_76988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 31), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 815)
# Adding element type (line 815)
int_76989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 31), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 815, 31), tuple_76988, int_76989)
# Adding element type (line 815)
int_76990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 34), 'int')
int_76991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 36), 'int')
# Applying the binary operator 'div' (line 815)
result_div_76992 = python_operator(stypy.reporting.localization.Localization(__file__, 815, 34), 'div', int_76990, int_76991)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 815, 31), tuple_76988, result_div_76992)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 29), list_76970, tuple_76988)
# Adding element type (line 814)

# Obtaining an instance of the builtin type 'tuple' (line 815)
tuple_76993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 815)
# Adding element type (line 815)
int_76994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 41), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 815, 41), tuple_76993, int_76994)
# Adding element type (line 815)
int_76995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 44), 'int')
int_76996 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 46), 'int')
# Applying the binary operator 'div' (line 815)
result_div_76997 = python_operator(stypy.reporting.localization.Localization(__file__, 815, 44), 'div', int_76995, int_76996)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 815, 41), tuple_76993, result_div_76997)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 29), list_76970, tuple_76993)
# Adding element type (line 814)

# Obtaining an instance of the builtin type 'tuple' (line 815)
tuple_76998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 51), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 815)
# Adding element type (line 815)
int_76999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 51), 'int')
int_77000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 53), 'int')
# Applying the binary operator 'div' (line 815)
result_div_77001 = python_operator(stypy.reporting.localization.Localization(__file__, 815, 51), 'div', int_76999, int_77000)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 815, 51), tuple_76998, result_div_77001)
# Adding element type (line 815)
int_77002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 56), 'int')
int_77003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 58), 'int')
# Applying the binary operator 'div' (line 815)
result_div_77004 = python_operator(stypy.reporting.localization.Localization(__file__, 815, 56), 'div', int_77002, int_77003)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 815, 51), tuple_76998, result_div_77004)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 29), list_76970, tuple_76998)
# Adding element type (line 814)

# Obtaining an instance of the builtin type 'tuple' (line 816)
tuple_77005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 31), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 816)
# Adding element type (line 816)
int_77006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 31), 'int')
int_77007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 33), 'int')
# Applying the binary operator 'div' (line 816)
result_div_77008 = python_operator(stypy.reporting.localization.Localization(__file__, 816, 31), 'div', int_77006, int_77007)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 816, 31), tuple_77005, result_div_77008)
# Adding element type (line 816)
int_77009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 36), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 816, 31), tuple_77005, int_77009)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 29), list_76970, tuple_77005)
# Adding element type (line 814)

# Obtaining an instance of the builtin type 'tuple' (line 816)
tuple_77010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 816)
# Adding element type (line 816)
int_77011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 41), 'int')
int_77012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 43), 'int')
# Applying the binary operator 'div' (line 816)
result_div_77013 = python_operator(stypy.reporting.localization.Localization(__file__, 816, 41), 'div', int_77011, int_77012)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 816, 41), tuple_77010, result_div_77013)
# Adding element type (line 816)
int_77014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 46), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 816, 41), tuple_77010, int_77014)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 29), list_76970, tuple_77010)
# Adding element type (line 814)

# Obtaining an instance of the builtin type 'tuple' (line 816)
tuple_77015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 51), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 816)
# Adding element type (line 816)
int_77016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 51), 'int')
int_77017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 53), 'int')
# Applying the binary operator 'div' (line 816)
result_div_77018 = python_operator(stypy.reporting.localization.Localization(__file__, 816, 51), 'div', int_77016, int_77017)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 816, 51), tuple_77015, result_div_77018)
# Adding element type (line 816)
int_77019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 56), 'int')
int_77020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 58), 'int')
# Applying the binary operator 'div' (line 816)
result_div_77021 = python_operator(stypy.reporting.localization.Localization(__file__, 816, 56), 'div', int_77019, int_77020)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 816, 51), tuple_77015, result_div_77021)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 29), list_76970, tuple_77015)
# Adding element type (line 814)

# Obtaining an instance of the builtin type 'tuple' (line 817)
tuple_77022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 31), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 817)
# Adding element type (line 817)
int_77023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 31), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 817, 31), tuple_77022, int_77023)
# Adding element type (line 817)
int_77024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 34), 'int')
int_77025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 36), 'int')
# Applying the binary operator 'div' (line 817)
result_div_77026 = python_operator(stypy.reporting.localization.Localization(__file__, 817, 34), 'div', int_77024, int_77025)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 817, 31), tuple_77022, result_div_77026)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 29), list_76970, tuple_77022)
# Adding element type (line 814)

# Obtaining an instance of the builtin type 'tuple' (line 817)
tuple_77027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 817)
# Adding element type (line 817)
int_77028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 41), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 817, 41), tuple_77027, int_77028)
# Adding element type (line 817)
int_77029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 44), 'int')
int_77030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 46), 'int')
# Applying the binary operator 'div' (line 817)
result_div_77031 = python_operator(stypy.reporting.localization.Localization(__file__, 817, 44), 'div', int_77029, int_77030)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 817, 41), tuple_77027, result_div_77031)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 29), list_76970, tuple_77027)
# Adding element type (line 814)

# Obtaining an instance of the builtin type 'tuple' (line 817)
tuple_77032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 51), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 817)
# Adding element type (line 817)
int_77033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 51), 'int')
int_77034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 53), 'int')
# Applying the binary operator 'div' (line 817)
result_div_77035 = python_operator(stypy.reporting.localization.Localization(__file__, 817, 51), 'div', int_77033, int_77034)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 817, 51), tuple_77032, result_div_77035)
# Adding element type (line 817)
int_77036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 56), 'int')
int_77037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 58), 'int')
# Applying the binary operator 'div' (line 817)
result_div_77038 = python_operator(stypy.reporting.localization.Localization(__file__, 817, 56), 'div', int_77036, int_77037)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 817, 51), tuple_77032, result_div_77038)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 29), list_76970, tuple_77032)
# Adding element type (line 814)

# Obtaining an instance of the builtin type 'tuple' (line 818)
tuple_77039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 818, 31), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 818)
# Adding element type (line 818)
int_77040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 818, 31), 'int')
int_77041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 818, 33), 'int')
# Applying the binary operator 'div' (line 818)
result_div_77042 = python_operator(stypy.reporting.localization.Localization(__file__, 818, 31), 'div', int_77040, int_77041)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 818, 31), tuple_77039, result_div_77042)
# Adding element type (line 818)
int_77043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 818, 36), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 818, 31), tuple_77039, int_77043)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 814, 29), list_76970, tuple_77039)


# Obtaining an instance of the builtin type 'list' (line 819)
list_77044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 819, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 819)
# Adding element type (line 819)
# Getting the type of 'Path' (line 819)
Path_77045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 30), 'Path', False)
# Obtaining the member 'MOVETO' of a type (line 819)
MOVETO_77046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 819, 30), Path_77045, 'MOVETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 819, 29), list_77044, MOVETO_77046)
# Adding element type (line 819)
# Getting the type of 'Path' (line 819)
Path_77047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 43), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 819)
LINETO_77048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 819, 43), Path_77047, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 819, 29), list_77044, LINETO_77048)
# Adding element type (line 819)
# Getting the type of 'Path' (line 819)
Path_77049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 56), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 819)
LINETO_77050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 819, 56), Path_77049, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 819, 29), list_77044, LINETO_77050)
# Adding element type (line 819)
# Getting the type of 'Path' (line 820)
Path_77051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 30), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 820)
LINETO_77052 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 820, 30), Path_77051, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 819, 29), list_77044, LINETO_77052)
# Adding element type (line 819)
# Getting the type of 'Path' (line 820)
Path_77053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 43), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 820)
LINETO_77054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 820, 43), Path_77053, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 819, 29), list_77044, LINETO_77054)
# Adding element type (line 819)
# Getting the type of 'Path' (line 820)
Path_77055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 56), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 820)
LINETO_77056 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 820, 56), Path_77055, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 819, 29), list_77044, LINETO_77056)
# Adding element type (line 819)
# Getting the type of 'Path' (line 821)
Path_77057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 30), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 821)
LINETO_77058 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 30), Path_77057, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 819, 29), list_77044, LINETO_77058)
# Adding element type (line 819)
# Getting the type of 'Path' (line 821)
Path_77059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 43), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 821)
LINETO_77060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 43), Path_77059, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 819, 29), list_77044, LINETO_77060)
# Adding element type (line 819)
# Getting the type of 'Path' (line 821)
Path_77061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 56), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 821)
LINETO_77062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 56), Path_77061, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 819, 29), list_77044, LINETO_77062)
# Adding element type (line 819)
# Getting the type of 'Path' (line 822)
Path_77063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 30), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 822)
LINETO_77064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 822, 30), Path_77063, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 819, 29), list_77044, LINETO_77064)
# Adding element type (line 819)
# Getting the type of 'Path' (line 822)
Path_77065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 43), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 822)
LINETO_77066 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 822, 43), Path_77065, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 819, 29), list_77044, LINETO_77066)
# Adding element type (line 819)
# Getting the type of 'Path' (line 822)
Path_77067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 56), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 822)
LINETO_77068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 822, 56), Path_77067, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 819, 29), list_77044, LINETO_77068)
# Adding element type (line 819)
# Getting the type of 'Path' (line 823)
Path_77069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 30), 'Path', False)
# Obtaining the member 'CLOSEPOLY' of a type (line 823)
CLOSEPOLY_77070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 823, 30), Path_77069, 'CLOSEPOLY')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 819, 29), list_77044, CLOSEPOLY_77070)

# Processing the call keyword arguments (line 814)
kwargs_77071 = {}
# Getting the type of 'Path' (line 814)
Path_76969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 814, 24), 'Path', False)
# Calling Path(args, kwargs) (line 814)
Path_call_result_77072 = invoke(stypy.reporting.localization.Localization(__file__, 814, 24), Path_76969, *[list_76970, list_77044], **kwargs_77071)

# Getting the type of 'MarkerStyle'
MarkerStyle_77073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_plus_filled_path' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_77073, '_plus_filled_path', Path_call_result_77072)

# Assigning a Call to a Name (line 825):

# Call to Path(...): (line 825)
# Processing the call arguments (line 825)

# Obtaining an instance of the builtin type 'list' (line 825)
list_77075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 825)
# Adding element type (line 825)

# Obtaining an instance of the builtin type 'tuple' (line 825)
tuple_77076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 33), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 825)
# Adding element type (line 825)
int_77077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 33), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 825, 33), tuple_77076, int_77077)
# Adding element type (line 825)
int_77078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 36), 'int')
int_77079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 38), 'int')
# Applying the binary operator 'div' (line 825)
result_div_77080 = python_operator(stypy.reporting.localization.Localization(__file__, 825, 36), 'div', int_77078, int_77079)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 825, 33), tuple_77076, result_div_77080)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 825, 31), list_77075, tuple_77076)
# Adding element type (line 825)

# Obtaining an instance of the builtin type 'tuple' (line 825)
tuple_77081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 43), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 825)
# Adding element type (line 825)
int_77082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 43), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 825, 43), tuple_77081, int_77082)
# Adding element type (line 825)
int_77083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 46), 'int')
int_77084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 48), 'int')
# Applying the binary operator 'div' (line 825)
result_div_77085 = python_operator(stypy.reporting.localization.Localization(__file__, 825, 46), 'div', int_77083, int_77084)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 825, 43), tuple_77081, result_div_77085)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 825, 31), list_77075, tuple_77081)
# Adding element type (line 825)

# Obtaining an instance of the builtin type 'tuple' (line 825)
tuple_77086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 53), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 825)
# Adding element type (line 825)
int_77087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 53), 'int')
int_77088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 55), 'int')
# Applying the binary operator 'div' (line 825)
result_div_77089 = python_operator(stypy.reporting.localization.Localization(__file__, 825, 53), 'div', int_77087, int_77088)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 825, 53), tuple_77086, result_div_77089)
# Adding element type (line 825)
int_77090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 58), 'int')
int_77091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 60), 'int')
# Applying the binary operator 'div' (line 825)
result_div_77092 = python_operator(stypy.reporting.localization.Localization(__file__, 825, 58), 'div', int_77090, int_77091)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 825, 53), tuple_77086, result_div_77092)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 825, 31), list_77075, tuple_77086)
# Adding element type (line 825)

# Obtaining an instance of the builtin type 'tuple' (line 826)
tuple_77093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 33), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 826)
# Adding element type (line 826)
int_77094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 33), 'int')
int_77095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 35), 'int')
# Applying the binary operator 'div' (line 826)
result_div_77096 = python_operator(stypy.reporting.localization.Localization(__file__, 826, 33), 'div', int_77094, int_77095)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 826, 33), tuple_77093, result_div_77096)
# Adding element type (line 826)
int_77097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 38), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 826, 33), tuple_77093, int_77097)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 825, 31), list_77075, tuple_77093)
# Adding element type (line 825)

# Obtaining an instance of the builtin type 'tuple' (line 826)
tuple_77098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 43), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 826)
# Adding element type (line 826)
int_77099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 43), 'int')
int_77100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 45), 'int')
# Applying the binary operator 'div' (line 826)
result_div_77101 = python_operator(stypy.reporting.localization.Localization(__file__, 826, 43), 'div', int_77099, int_77100)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 826, 43), tuple_77098, result_div_77101)
# Adding element type (line 826)
int_77102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 48), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 826, 43), tuple_77098, int_77102)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 825, 31), list_77075, tuple_77098)
# Adding element type (line 825)

# Obtaining an instance of the builtin type 'tuple' (line 826)
tuple_77103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 53), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 826)
# Adding element type (line 826)
int_77104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 53), 'int')
int_77105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 55), 'int')
# Applying the binary operator 'div' (line 826)
result_div_77106 = python_operator(stypy.reporting.localization.Localization(__file__, 826, 53), 'div', int_77104, int_77105)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 826, 53), tuple_77103, result_div_77106)
# Adding element type (line 826)
int_77107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 58), 'int')
int_77108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 60), 'int')
# Applying the binary operator 'div' (line 826)
result_div_77109 = python_operator(stypy.reporting.localization.Localization(__file__, 826, 58), 'div', int_77107, int_77108)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 826, 53), tuple_77103, result_div_77109)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 825, 31), list_77075, tuple_77103)
# Adding element type (line 825)

# Obtaining an instance of the builtin type 'tuple' (line 827)
tuple_77110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 33), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 827)
# Adding element type (line 827)
int_77111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 33), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 33), tuple_77110, int_77111)
# Adding element type (line 827)
int_77112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 36), 'int')
int_77113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 38), 'int')
# Applying the binary operator 'div' (line 827)
result_div_77114 = python_operator(stypy.reporting.localization.Localization(__file__, 827, 36), 'div', int_77112, int_77113)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 33), tuple_77110, result_div_77114)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 825, 31), list_77075, tuple_77110)
# Adding element type (line 825)

# Obtaining an instance of the builtin type 'tuple' (line 827)
tuple_77115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 43), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 827)
# Adding element type (line 827)
int_77116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 43), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 43), tuple_77115, int_77116)
# Adding element type (line 827)
int_77117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 46), 'int')
int_77118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 48), 'int')
# Applying the binary operator 'div' (line 827)
result_div_77119 = python_operator(stypy.reporting.localization.Localization(__file__, 827, 46), 'div', int_77117, int_77118)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 43), tuple_77115, result_div_77119)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 825, 31), list_77075, tuple_77115)
# Adding element type (line 825)

# Obtaining an instance of the builtin type 'tuple' (line 827)
tuple_77120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 53), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 827)
# Adding element type (line 827)
int_77121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 53), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 53), tuple_77120, int_77121)
# Adding element type (line 827)
int_77122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 56), 'int')
int_77123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 58), 'int')
# Applying the binary operator 'div' (line 827)
result_div_77124 = python_operator(stypy.reporting.localization.Localization(__file__, 827, 56), 'div', int_77122, int_77123)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 53), tuple_77120, result_div_77124)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 825, 31), list_77075, tuple_77120)


# Obtaining an instance of the builtin type 'list' (line 828)
list_77125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 828)
# Adding element type (line 828)
# Getting the type of 'Path' (line 828)
Path_77126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 32), 'Path', False)
# Obtaining the member 'MOVETO' of a type (line 828)
MOVETO_77127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 828, 32), Path_77126, 'MOVETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 31), list_77125, MOVETO_77127)
# Adding element type (line 828)
# Getting the type of 'Path' (line 828)
Path_77128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 45), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 828)
LINETO_77129 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 828, 45), Path_77128, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 31), list_77125, LINETO_77129)
# Adding element type (line 828)
# Getting the type of 'Path' (line 828)
Path_77130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 58), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 828)
LINETO_77131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 828, 58), Path_77130, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 31), list_77125, LINETO_77131)
# Adding element type (line 828)
# Getting the type of 'Path' (line 829)
Path_77132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 32), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 829)
LINETO_77133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 829, 32), Path_77132, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 31), list_77125, LINETO_77133)
# Adding element type (line 828)
# Getting the type of 'Path' (line 829)
Path_77134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 45), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 829)
LINETO_77135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 829, 45), Path_77134, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 31), list_77125, LINETO_77135)
# Adding element type (line 828)
# Getting the type of 'Path' (line 829)
Path_77136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 58), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 829)
LINETO_77137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 829, 58), Path_77136, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 31), list_77125, LINETO_77137)
# Adding element type (line 828)
# Getting the type of 'Path' (line 830)
Path_77138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 32), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 830)
LINETO_77139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 830, 32), Path_77138, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 31), list_77125, LINETO_77139)
# Adding element type (line 828)
# Getting the type of 'Path' (line 830)
Path_77140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 45), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 830)
LINETO_77141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 830, 45), Path_77140, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 31), list_77125, LINETO_77141)
# Adding element type (line 828)
# Getting the type of 'Path' (line 831)
Path_77142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 32), 'Path', False)
# Obtaining the member 'CLOSEPOLY' of a type (line 831)
CLOSEPOLY_77143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 831, 32), Path_77142, 'CLOSEPOLY')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 31), list_77125, CLOSEPOLY_77143)

# Processing the call keyword arguments (line 825)
kwargs_77144 = {}
# Getting the type of 'Path' (line 825)
Path_77074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 26), 'Path', False)
# Calling Path(args, kwargs) (line 825)
Path_call_result_77145 = invoke(stypy.reporting.localization.Localization(__file__, 825, 26), Path_77074, *[list_77075, list_77125], **kwargs_77144)

# Getting the type of 'MarkerStyle'
MarkerStyle_77146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_plus_filled_path_t' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_77146, '_plus_filled_path_t', Path_call_result_77145)

# Assigning a Call to a Name (line 857):

# Call to Path(...): (line 857)
# Processing the call arguments (line 857)

# Obtaining an instance of the builtin type 'list' (line 857)
list_77148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 857)
# Adding element type (line 857)

# Obtaining an instance of the builtin type 'tuple' (line 857)
tuple_77149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 28), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 857)
# Adding element type (line 857)
float_77150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 28), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 28), tuple_77149, float_77150)
# Adding element type (line 857)
int_77151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 34), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 28), tuple_77149, int_77151)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 26), list_77148, tuple_77149)
# Adding element type (line 857)

# Obtaining an instance of the builtin type 'tuple' (line 857)
tuple_77152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 39), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 857)
# Adding element type (line 857)
float_77153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 39), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 39), tuple_77152, float_77153)
# Adding element type (line 857)
float_77154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 44), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 39), tuple_77152, float_77154)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 26), list_77148, tuple_77152)
# Adding element type (line 857)

# Obtaining an instance of the builtin type 'tuple' (line 857)
tuple_77155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 52), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 857)
# Adding element type (line 857)
float_77156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 52), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 52), tuple_77155, float_77156)
# Adding element type (line 857)
int_77157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 58), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 52), tuple_77155, int_77157)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 26), list_77148, tuple_77155)
# Adding element type (line 857)

# Obtaining an instance of the builtin type 'tuple' (line 857)
tuple_77158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 63), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 857)
# Adding element type (line 857)
int_77159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 63), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 63), tuple_77158, int_77159)
# Adding element type (line 857)
float_77160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 66), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 63), tuple_77158, float_77160)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 26), list_77148, tuple_77158)
# Adding element type (line 857)

# Obtaining an instance of the builtin type 'tuple' (line 858)
tuple_77161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 28), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 858)
# Adding element type (line 858)
float_77162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 28), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 858, 28), tuple_77161, float_77162)
# Adding element type (line 858)
float_77163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 34), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 858, 28), tuple_77161, float_77163)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 26), list_77148, tuple_77161)
# Adding element type (line 857)

# Obtaining an instance of the builtin type 'tuple' (line 858)
tuple_77164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 858)
# Adding element type (line 858)
int_77165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 41), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 858, 41), tuple_77164, int_77165)
# Adding element type (line 858)
float_77166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 44), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 858, 41), tuple_77164, float_77166)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 26), list_77148, tuple_77164)
# Adding element type (line 857)

# Obtaining an instance of the builtin type 'tuple' (line 858)
tuple_77167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 52), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 858)
# Adding element type (line 858)
float_77168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 52), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 858, 52), tuple_77167, float_77168)
# Adding element type (line 858)
int_77169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 58), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 858, 52), tuple_77167, int_77169)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 26), list_77148, tuple_77167)
# Adding element type (line 857)

# Obtaining an instance of the builtin type 'tuple' (line 858)
tuple_77170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 63), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 858)
# Adding element type (line 858)
float_77171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 63), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 858, 63), tuple_77170, float_77171)
# Adding element type (line 858)
float_77172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 68), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 858, 63), tuple_77170, float_77172)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 26), list_77148, tuple_77170)
# Adding element type (line 857)

# Obtaining an instance of the builtin type 'tuple' (line 859)
tuple_77173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 28), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 859)
# Adding element type (line 859)
float_77174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 28), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 859, 28), tuple_77173, float_77174)
# Adding element type (line 859)
int_77175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 34), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 859, 28), tuple_77173, int_77175)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 26), list_77148, tuple_77173)
# Adding element type (line 857)

# Obtaining an instance of the builtin type 'tuple' (line 859)
tuple_77176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 39), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 859)
# Adding element type (line 859)
int_77177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 39), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 859, 39), tuple_77176, int_77177)
# Adding element type (line 859)
float_77178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 42), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 859, 39), tuple_77176, float_77178)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 26), list_77148, tuple_77176)
# Adding element type (line 857)

# Obtaining an instance of the builtin type 'tuple' (line 859)
tuple_77179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 50), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 859)
# Adding element type (line 859)
float_77180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 50), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 859, 50), tuple_77179, float_77180)
# Adding element type (line 859)
float_77181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 56), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 859, 50), tuple_77179, float_77181)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 26), list_77148, tuple_77179)
# Adding element type (line 857)

# Obtaining an instance of the builtin type 'tuple' (line 859)
tuple_77182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 63), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 859)
# Adding element type (line 859)
int_77183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 63), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 859, 63), tuple_77182, int_77183)
# Adding element type (line 859)
float_77184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 66), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 859, 63), tuple_77182, float_77184)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 26), list_77148, tuple_77182)
# Adding element type (line 857)

# Obtaining an instance of the builtin type 'tuple' (line 860)
tuple_77185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 860, 28), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 860)
# Adding element type (line 860)
float_77186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 860, 28), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 860, 28), tuple_77185, float_77186)
# Adding element type (line 860)
int_77187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 860, 34), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 860, 28), tuple_77185, int_77187)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 857, 26), list_77148, tuple_77185)


# Obtaining an instance of the builtin type 'list' (line 861)
list_77188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 861, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 861)
# Adding element type (line 861)
# Getting the type of 'Path' (line 861)
Path_77189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 27), 'Path', False)
# Obtaining the member 'MOVETO' of a type (line 861)
MOVETO_77190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 861, 27), Path_77189, 'MOVETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 861, 26), list_77188, MOVETO_77190)
# Adding element type (line 861)
# Getting the type of 'Path' (line 861)
Path_77191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 40), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 861)
LINETO_77192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 861, 40), Path_77191, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 861, 26), list_77188, LINETO_77192)
# Adding element type (line 861)
# Getting the type of 'Path' (line 861)
Path_77193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 53), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 861)
LINETO_77194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 861, 53), Path_77193, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 861, 26), list_77188, LINETO_77194)
# Adding element type (line 861)
# Getting the type of 'Path' (line 862)
Path_77195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 27), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 862)
LINETO_77196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 862, 27), Path_77195, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 861, 26), list_77188, LINETO_77196)
# Adding element type (line 861)
# Getting the type of 'Path' (line 862)
Path_77197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 40), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 862)
LINETO_77198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 862, 40), Path_77197, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 861, 26), list_77188, LINETO_77198)
# Adding element type (line 861)
# Getting the type of 'Path' (line 862)
Path_77199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 53), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 862)
LINETO_77200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 862, 53), Path_77199, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 861, 26), list_77188, LINETO_77200)
# Adding element type (line 861)
# Getting the type of 'Path' (line 863)
Path_77201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 27), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 863)
LINETO_77202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 27), Path_77201, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 861, 26), list_77188, LINETO_77202)
# Adding element type (line 861)
# Getting the type of 'Path' (line 863)
Path_77203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 40), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 863)
LINETO_77204 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 40), Path_77203, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 861, 26), list_77188, LINETO_77204)
# Adding element type (line 861)
# Getting the type of 'Path' (line 863)
Path_77205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 53), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 863)
LINETO_77206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 53), Path_77205, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 861, 26), list_77188, LINETO_77206)
# Adding element type (line 861)
# Getting the type of 'Path' (line 864)
Path_77207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 27), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 864)
LINETO_77208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 864, 27), Path_77207, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 861, 26), list_77188, LINETO_77208)
# Adding element type (line 861)
# Getting the type of 'Path' (line 864)
Path_77209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 40), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 864)
LINETO_77210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 864, 40), Path_77209, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 861, 26), list_77188, LINETO_77210)
# Adding element type (line 861)
# Getting the type of 'Path' (line 864)
Path_77211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 53), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 864)
LINETO_77212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 864, 53), Path_77211, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 861, 26), list_77188, LINETO_77212)
# Adding element type (line 861)
# Getting the type of 'Path' (line 865)
Path_77213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 27), 'Path', False)
# Obtaining the member 'CLOSEPOLY' of a type (line 865)
CLOSEPOLY_77214 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 27), Path_77213, 'CLOSEPOLY')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 861, 26), list_77188, CLOSEPOLY_77214)

# Processing the call keyword arguments (line 857)
kwargs_77215 = {}
# Getting the type of 'Path' (line 857)
Path_77147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 21), 'Path', False)
# Calling Path(args, kwargs) (line 857)
Path_call_result_77216 = invoke(stypy.reporting.localization.Localization(__file__, 857, 21), Path_77147, *[list_77148, list_77188], **kwargs_77215)

# Getting the type of 'MarkerStyle'
MarkerStyle_77217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_x_filled_path' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_77217, '_x_filled_path', Path_call_result_77216)

# Assigning a Call to a Name (line 867):

# Call to Path(...): (line 867)
# Processing the call arguments (line 867)

# Obtaining an instance of the builtin type 'list' (line 867)
list_77219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 867, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 867)
# Adding element type (line 867)

# Obtaining an instance of the builtin type 'tuple' (line 867)
tuple_77220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 867, 30), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 867)
# Adding element type (line 867)
float_77221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 867, 30), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 867, 30), tuple_77220, float_77221)
# Adding element type (line 867)
float_77222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 867, 36), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 867, 30), tuple_77220, float_77222)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 867, 28), list_77219, tuple_77220)
# Adding element type (line 867)

# Obtaining an instance of the builtin type 'tuple' (line 867)
tuple_77223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 867, 43), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 867)
# Adding element type (line 867)
int_77224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 867, 43), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 867, 43), tuple_77223, int_77224)
# Adding element type (line 867)
float_77225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 867, 46), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 867, 43), tuple_77223, float_77225)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 867, 28), list_77219, tuple_77223)
# Adding element type (line 867)

# Obtaining an instance of the builtin type 'tuple' (line 867)
tuple_77226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 867, 54), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 867)
# Adding element type (line 867)
float_77227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 867, 54), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 867, 54), tuple_77226, float_77227)
# Adding element type (line 867)
int_77228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 867, 60), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 867, 54), tuple_77226, int_77228)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 867, 28), list_77219, tuple_77226)
# Adding element type (line 867)

# Obtaining an instance of the builtin type 'tuple' (line 868)
tuple_77229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 868, 30), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 868)
# Adding element type (line 868)
float_77230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 868, 30), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 868, 30), tuple_77229, float_77230)
# Adding element type (line 868)
float_77231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 868, 35), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 868, 30), tuple_77229, float_77231)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 867, 28), list_77219, tuple_77229)
# Adding element type (line 867)

# Obtaining an instance of the builtin type 'tuple' (line 868)
tuple_77232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 868, 43), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 868)
# Adding element type (line 868)
float_77233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 868, 43), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 868, 43), tuple_77232, float_77233)
# Adding element type (line 868)
int_77234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 868, 49), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 868, 43), tuple_77232, int_77234)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 867, 28), list_77219, tuple_77232)
# Adding element type (line 867)

# Obtaining an instance of the builtin type 'tuple' (line 868)
tuple_77235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 868, 54), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 868)
# Adding element type (line 868)
int_77236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 868, 54), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 868, 54), tuple_77235, int_77236)
# Adding element type (line 868)
float_77237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 868, 57), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 868, 54), tuple_77235, float_77237)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 867, 28), list_77219, tuple_77235)
# Adding element type (line 867)

# Obtaining an instance of the builtin type 'tuple' (line 869)
tuple_77238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 869, 30), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 869)
# Adding element type (line 869)
float_77239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 869, 30), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 869, 30), tuple_77238, float_77239)
# Adding element type (line 869)
float_77240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 869, 36), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 869, 30), tuple_77238, float_77240)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 867, 28), list_77219, tuple_77238)
# Adding element type (line 867)

# Obtaining an instance of the builtin type 'tuple' (line 869)
tuple_77241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 869, 43), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 869)
# Adding element type (line 869)
float_77242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 869, 43), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 869, 43), tuple_77241, float_77242)
# Adding element type (line 869)
float_77243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 869, 49), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 869, 43), tuple_77241, float_77243)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 867, 28), list_77219, tuple_77241)


# Obtaining an instance of the builtin type 'list' (line 870)
list_77244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 870, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 870)
# Adding element type (line 870)
# Getting the type of 'Path' (line 870)
Path_77245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 29), 'Path', False)
# Obtaining the member 'MOVETO' of a type (line 870)
MOVETO_77246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 870, 29), Path_77245, 'MOVETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 870, 28), list_77244, MOVETO_77246)
# Adding element type (line 870)
# Getting the type of 'Path' (line 870)
Path_77247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 42), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 870)
LINETO_77248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 870, 42), Path_77247, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 870, 28), list_77244, LINETO_77248)
# Adding element type (line 870)
# Getting the type of 'Path' (line 870)
Path_77249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 55), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 870)
LINETO_77250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 870, 55), Path_77249, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 870, 28), list_77244, LINETO_77250)
# Adding element type (line 870)
# Getting the type of 'Path' (line 871)
Path_77251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 29), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 871)
LINETO_77252 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 871, 29), Path_77251, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 870, 28), list_77244, LINETO_77252)
# Adding element type (line 870)
# Getting the type of 'Path' (line 871)
Path_77253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 42), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 871)
LINETO_77254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 871, 42), Path_77253, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 870, 28), list_77244, LINETO_77254)
# Adding element type (line 870)
# Getting the type of 'Path' (line 871)
Path_77255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 55), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 871)
LINETO_77256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 871, 55), Path_77255, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 870, 28), list_77244, LINETO_77256)
# Adding element type (line 870)
# Getting the type of 'Path' (line 872)
Path_77257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 29), 'Path', False)
# Obtaining the member 'LINETO' of a type (line 872)
LINETO_77258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 29), Path_77257, 'LINETO')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 870, 28), list_77244, LINETO_77258)
# Adding element type (line 870)
# Getting the type of 'Path' (line 872)
Path_77259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 42), 'Path', False)
# Obtaining the member 'CLOSEPOLY' of a type (line 872)
CLOSEPOLY_77260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 42), Path_77259, 'CLOSEPOLY')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 870, 28), list_77244, CLOSEPOLY_77260)

# Processing the call keyword arguments (line 867)
kwargs_77261 = {}
# Getting the type of 'Path' (line 867)
Path_77218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 23), 'Path', False)
# Calling Path(args, kwargs) (line 867)
Path_call_result_77262 = invoke(stypy.reporting.localization.Localization(__file__, 867, 23), Path_77218, *[list_77219, list_77244], **kwargs_77261)

# Getting the type of 'MarkerStyle'
MarkerStyle_77263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MarkerStyle')
# Setting the type of the member '_x_filled_path_t' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MarkerStyle_77263, '_x_filled_path_t', Path_call_result_77262)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
