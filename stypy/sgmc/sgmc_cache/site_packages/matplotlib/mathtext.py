
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: r'''
2: :mod:`~matplotlib.mathtext` is a module for parsing a subset of the
3: TeX math syntax and drawing them to a matplotlib backend.
4: 
5: For a tutorial of its usage see :ref:`sphx_glr_tutorials_text_mathtext.py`.  This
6: document is primarily concerned with implementation details.
7: 
8: The module uses pyparsing_ to parse the TeX expression.
9: 
10: .. _pyparsing: http://pyparsing.wikispaces.com/
11: 
12: The Bakoma distribution of the TeX Computer Modern fonts, and STIX
13: fonts are supported.  There is experimental support for using
14: arbitrary fonts, but results may vary without proper tweaking and
15: metrics for those fonts.
16: '''
17: from __future__ import (absolute_import, division, print_function,
18:                         unicode_literals)
19: 
20: import six
21: 
22: import os, sys
23: from six import unichr
24: from math import ceil
25: import unicodedata
26: from warnings import warn
27: 
28: from numpy import inf, isinf
29: import numpy as np
30: 
31: import pyparsing
32: from pyparsing import (Combine, Group, Optional, Forward,
33:      Literal, OneOrMore, ZeroOrMore, ParseException, Empty,
34:      ParseResults, Suppress, oneOf, StringEnd, ParseFatalException,
35:      FollowedBy, Regex, ParserElement, QuotedString, ParseBaseException)
36: 
37: ParserElement.enablePackrat()
38: 
39: from matplotlib.afm import AFM
40: from matplotlib.cbook import Bunch, get_realpath_and_stat, maxdict
41: from matplotlib.ft2font import (FT2Image, KERNING_DEFAULT, LOAD_FORCE_AUTOHINT,
42:                                 LOAD_NO_HINTING)
43: from matplotlib.font_manager import findfont, FontProperties, get_font
44: from matplotlib._mathtext_data import (latex_to_bakoma, latex_to_standard,
45:                                        tex2uni, latex_to_cmex,
46:                                        stix_virtual_fonts)
47: from matplotlib import get_data_path, rcParams
48: 
49: import matplotlib.colors as mcolors
50: import matplotlib._png as _png
51: 
52: ####################
53: 
54: 
55: 
56: ##############################################################################
57: # FONTS
58: 
59: def get_unicode_index(symbol, math=True):
60:     '''get_unicode_index(symbol, [bool]) -> integer
61: 
62: Return the integer index (from the Unicode table) of symbol.  *symbol*
63: can be a single unicode character, a TeX command (i.e. r'\\pi'), or a
64: Type1 symbol name (i.e. 'phi').
65: If math is False, the current symbol should be treated as a non-math symbol.
66: '''
67:     # for a non-math symbol, simply return its unicode index
68:     if not math:
69:         return ord(symbol)
70:     # From UTF #25: U+2212 minus sign is the preferred
71:     # representation of the unary and binary minus sign rather than
72:     # the ASCII-derived U+002D hyphen-minus, because minus sign is
73:     # unambiguous and because it is rendered with a more desirable
74:     # length, usually longer than a hyphen.
75:     if symbol == '-':
76:         return 0x2212
77:     try:# This will succeed if symbol is a single unicode char
78:         return ord(symbol)
79:     except TypeError:
80:         pass
81:     try:# Is symbol a TeX symbol (i.e. \alpha)
82:         return tex2uni[symbol.strip("\\")]
83:     except KeyError:
84:         message = ''''%(symbol)s' is not a valid Unicode character or
85: TeX/Type1 symbol'''%locals()
86:         raise ValueError(message)
87: 
88: def unichr_safe(index):
89:     '''Return the Unicode character corresponding to the index,
90: or the replacement character if this is a narrow build of Python
91: and the requested character is outside the BMP.'''
92:     try:
93:         return unichr(index)
94:     except ValueError:
95:         return unichr(0xFFFD)
96: 
97: class MathtextBackend(object):
98:     '''
99:     The base class for the mathtext backend-specific code.  The
100:     purpose of :class:`MathtextBackend` subclasses is to interface
101:     between mathtext and a specific matplotlib graphics backend.
102: 
103:     Subclasses need to override the following:
104: 
105:       - :meth:`render_glyph`
106:       - :meth:`render_rect_filled`
107:       - :meth:`get_results`
108: 
109:     And optionally, if you need to use a FreeType hinting style:
110: 
111:       - :meth:`get_hinting_type`
112:     '''
113:     def __init__(self):
114:         self.width = 0
115:         self.height = 0
116:         self.depth = 0
117: 
118:     def set_canvas_size(self, w, h, d):
119:         'Dimension the drawing canvas'
120:         self.width  = w
121:         self.height = h
122:         self.depth  = d
123: 
124:     def render_glyph(self, ox, oy, info):
125:         '''
126:         Draw a glyph described by *info* to the reference point (*ox*,
127:         *oy*).
128:         '''
129:         raise NotImplementedError()
130: 
131:     def render_rect_filled(self, x1, y1, x2, y2):
132:         '''
133:         Draw a filled black rectangle from (*x1*, *y1*) to (*x2*, *y2*).
134:         '''
135:         raise NotImplementedError()
136: 
137:     def get_results(self, box):
138:         '''
139:         Return a backend-specific tuple to return to the backend after
140:         all processing is done.
141:         '''
142:         raise NotImplementedError()
143: 
144:     def get_hinting_type(self):
145:         '''
146:         Get the FreeType hinting type to use with this particular
147:         backend.
148:         '''
149:         return LOAD_NO_HINTING
150: 
151: class MathtextBackendAgg(MathtextBackend):
152:     '''
153:     Render glyphs and rectangles to an FTImage buffer, which is later
154:     transferred to the Agg image by the Agg backend.
155:     '''
156:     def __init__(self):
157:         self.ox = 0
158:         self.oy = 0
159:         self.image = None
160:         self.mode = 'bbox'
161:         self.bbox = [0, 0, 0, 0]
162:         MathtextBackend.__init__(self)
163: 
164:     def _update_bbox(self, x1, y1, x2, y2):
165:         self.bbox = [min(self.bbox[0], x1),
166:                      min(self.bbox[1], y1),
167:                      max(self.bbox[2], x2),
168:                      max(self.bbox[3], y2)]
169: 
170:     def set_canvas_size(self, w, h, d):
171:         MathtextBackend.set_canvas_size(self, w, h, d)
172:         if self.mode != 'bbox':
173:             self.image = FT2Image(ceil(w), ceil(h + max(d, 0)))
174: 
175:     def render_glyph(self, ox, oy, info):
176:         if self.mode == 'bbox':
177:             self._update_bbox(ox + info.metrics.xmin,
178:                               oy - info.metrics.ymax,
179:                               ox + info.metrics.xmax,
180:                               oy - info.metrics.ymin)
181:         else:
182:             info.font.draw_glyph_to_bitmap(
183:                 self.image, ox, oy - info.metrics.iceberg, info.glyph,
184:                 antialiased=rcParams['text.antialiased'])
185: 
186:     def render_rect_filled(self, x1, y1, x2, y2):
187:         if self.mode == 'bbox':
188:             self._update_bbox(x1, y1, x2, y2)
189:         else:
190:             height = max(int(y2 - y1) - 1, 0)
191:             if height == 0:
192:                 center = (y2 + y1) / 2.0
193:                 y = int(center - (height + 1) / 2.0)
194:             else:
195:                 y = int(y1)
196:             self.image.draw_rect_filled(int(x1), y, ceil(x2), y + height)
197: 
198:     def get_results(self, box, used_characters):
199:         self.mode = 'bbox'
200:         orig_height = box.height
201:         orig_depth  = box.depth
202:         ship(0, 0, box)
203:         bbox = self.bbox
204:         bbox = [bbox[0] - 1, bbox[1] - 1, bbox[2] + 1, bbox[3] + 1]
205:         self.mode = 'render'
206:         self.set_canvas_size(
207:             bbox[2] - bbox[0],
208:             (bbox[3] - bbox[1]) - orig_depth,
209:             (bbox[3] - bbox[1]) - orig_height)
210:         ship(-bbox[0], -bbox[1], box)
211:         result = (self.ox,
212:                   self.oy,
213:                   self.width,
214:                   self.height + self.depth,
215:                   self.depth,
216:                   self.image,
217:                   used_characters)
218:         self.image = None
219:         return result
220: 
221:     def get_hinting_type(self):
222:         from matplotlib.backends import backend_agg
223:         return backend_agg.get_hinting_flag()
224: 
225: class MathtextBackendBitmap(MathtextBackendAgg):
226:     def get_results(self, box, used_characters):
227:         ox, oy, width, height, depth, image, characters = \
228:             MathtextBackendAgg.get_results(self, box, used_characters)
229:         return image, depth
230: 
231: class MathtextBackendPs(MathtextBackend):
232:     '''
233:     Store information to write a mathtext rendering to the PostScript
234:     backend.
235:     '''
236:     def __init__(self):
237:         self.pswriter = six.moves.cStringIO()
238:         self.lastfont = None
239: 
240:     def render_glyph(self, ox, oy, info):
241:         oy = self.height - oy + info.offset
242:         postscript_name = info.postscript_name
243:         fontsize        = info.fontsize
244:         symbol_name     = info.symbol_name
245: 
246:         if (postscript_name, fontsize) != self.lastfont:
247:             ps = '''/%(postscript_name)s findfont
248: %(fontsize)s scalefont
249: setfont
250: ''' % locals()
251:             self.lastfont = postscript_name, fontsize
252:             self.pswriter.write(ps)
253: 
254:         ps = '''%(ox)f %(oy)f moveto
255: /%(symbol_name)s glyphshow\n
256: ''' % locals()
257:         self.pswriter.write(ps)
258: 
259:     def render_rect_filled(self, x1, y1, x2, y2):
260:         ps = "%f %f %f %f rectfill\n" % (x1, self.height - y2, x2 - x1, y2 - y1)
261:         self.pswriter.write(ps)
262: 
263:     def get_results(self, box, used_characters):
264:         ship(0, 0, box)
265:         return (self.width,
266:                 self.height + self.depth,
267:                 self.depth,
268:                 self.pswriter,
269:                 used_characters)
270: 
271: class MathtextBackendPdf(MathtextBackend):
272:     '''
273:     Store information to write a mathtext rendering to the PDF
274:     backend.
275:     '''
276:     def __init__(self):
277:         self.glyphs = []
278:         self.rects = []
279: 
280:     def render_glyph(self, ox, oy, info):
281:         filename = info.font.fname
282:         oy = self.height - oy + info.offset
283:         self.glyphs.append(
284:             (ox, oy, filename, info.fontsize,
285:              info.num, info.symbol_name))
286: 
287:     def render_rect_filled(self, x1, y1, x2, y2):
288:         self.rects.append((x1, self.height - y2, x2 - x1, y2 - y1))
289: 
290:     def get_results(self, box, used_characters):
291:         ship(0, 0, box)
292:         return (self.width,
293:                 self.height + self.depth,
294:                 self.depth,
295:                 self.glyphs,
296:                 self.rects,
297:                 used_characters)
298: 
299: class MathtextBackendSvg(MathtextBackend):
300:     '''
301:     Store information to write a mathtext rendering to the SVG
302:     backend.
303:     '''
304:     def __init__(self):
305:         self.svg_glyphs = []
306:         self.svg_rects = []
307: 
308:     def render_glyph(self, ox, oy, info):
309:         oy = self.height - oy + info.offset
310: 
311:         self.svg_glyphs.append(
312:             (info.font, info.fontsize, info.num, ox, oy, info.metrics))
313: 
314:     def render_rect_filled(self, x1, y1, x2, y2):
315:         self.svg_rects.append(
316:             (x1, self.height - y1 + 1, x2 - x1, y2 - y1))
317: 
318:     def get_results(self, box, used_characters):
319:         ship(0, 0, box)
320:         svg_elements = Bunch(svg_glyphs = self.svg_glyphs,
321:                              svg_rects = self.svg_rects)
322:         return (self.width,
323:                 self.height + self.depth,
324:                 self.depth,
325:                 svg_elements,
326:                 used_characters)
327: 
328: class MathtextBackendPath(MathtextBackend):
329:     '''
330:     Store information to write a mathtext rendering to the text path
331:     machinery.
332:     '''
333: 
334:     def __init__(self):
335:         self.glyphs = []
336:         self.rects = []
337: 
338:     def render_glyph(self, ox, oy, info):
339:         oy = self.height - oy + info.offset
340:         thetext = info.num
341:         self.glyphs.append(
342:             (info.font, info.fontsize, thetext, ox, oy))
343: 
344:     def render_rect_filled(self, x1, y1, x2, y2):
345:         self.rects.append(
346:             (x1, self.height-y2 , x2 - x1, y2 - y1))
347: 
348:     def get_results(self, box, used_characters):
349:         ship(0, 0, box)
350:         return (self.width,
351:                 self.height + self.depth,
352:                 self.depth,
353:                 self.glyphs,
354:                 self.rects)
355: 
356: class MathtextBackendCairo(MathtextBackend):
357:     '''
358:     Store information to write a mathtext rendering to the Cairo
359:     backend.
360:     '''
361: 
362:     def __init__(self):
363:         self.glyphs = []
364:         self.rects = []
365: 
366:     def render_glyph(self, ox, oy, info):
367:         oy = oy - info.offset - self.height
368:         thetext = unichr_safe(info.num)
369:         self.glyphs.append(
370:             (info.font, info.fontsize, thetext, ox, oy))
371: 
372:     def render_rect_filled(self, x1, y1, x2, y2):
373:         self.rects.append(
374:             (x1, y1 - self.height, x2 - x1, y2 - y1))
375: 
376:     def get_results(self, box, used_characters):
377:         ship(0, 0, box)
378:         return (self.width,
379:                 self.height + self.depth,
380:                 self.depth,
381:                 self.glyphs,
382:                 self.rects)
383: 
384: class Fonts(object):
385:     '''
386:     An abstract base class for a system of fonts to use for mathtext.
387: 
388:     The class must be able to take symbol keys and font file names and
389:     return the character metrics.  It also delegates to a backend class
390:     to do the actual drawing.
391:     '''
392: 
393:     def __init__(self, default_font_prop, mathtext_backend):
394:         '''
395:         *default_font_prop*: A
396:         :class:`~matplotlib.font_manager.FontProperties` object to use
397:         for the default non-math font, or the base font for Unicode
398:         (generic) font rendering.
399: 
400:         *mathtext_backend*: A subclass of :class:`MathTextBackend`
401:         used to delegate the actual rendering.
402:         '''
403:         self.default_font_prop = default_font_prop
404:         self.mathtext_backend = mathtext_backend
405:         self.used_characters = {}
406: 
407:     def destroy(self):
408:         '''
409:         Fix any cyclical references before the object is about
410:         to be destroyed.
411:         '''
412:         self.used_characters = None
413: 
414:     def get_kern(self, font1, fontclass1, sym1, fontsize1,
415:                  font2, fontclass2, sym2, fontsize2, dpi):
416:         '''
417:         Get the kerning distance for font between *sym1* and *sym2*.
418: 
419:         *fontX*: one of the TeX font names::
420: 
421:           tt, it, rm, cal, sf, bf or default/regular (non-math)
422: 
423:         *fontclassX*: TODO
424: 
425:         *symX*: a symbol in raw TeX form. e.g., '1', 'x' or '\\sigma'
426: 
427:         *fontsizeX*: the fontsize in points
428: 
429:         *dpi*: the current dots-per-inch
430:         '''
431:         return 0.
432: 
433:     def get_metrics(self, font, font_class, sym, fontsize, dpi, math=True):
434:         '''
435:         *font*: one of the TeX font names::
436: 
437:           tt, it, rm, cal, sf, bf or default/regular (non-math)
438: 
439:         *font_class*: TODO
440: 
441:         *sym*:  a symbol in raw TeX form. e.g., '1', 'x' or '\\sigma'
442: 
443:         *fontsize*: font size in points
444: 
445:         *dpi*: current dots-per-inch
446: 
447:         *math*: whether sym is a math character
448: 
449:         Returns an object with the following attributes:
450: 
451:           - *advance*: The advance distance (in points) of the glyph.
452: 
453:           - *height*: The height of the glyph in points.
454: 
455:           - *width*: The width of the glyph in points.
456: 
457:           - *xmin*, *xmax*, *ymin*, *ymax* - the ink rectangle of the glyph
458: 
459:           - *iceberg* - the distance from the baseline to the top of
460:             the glyph.  This corresponds to TeX's definition of
461:             "height".
462:         '''
463:         info = self._get_info(font, font_class, sym, fontsize, dpi, math)
464:         return info.metrics
465: 
466:     def set_canvas_size(self, w, h, d):
467:         '''
468:         Set the size of the buffer used to render the math expression.
469:         Only really necessary for the bitmap backends.
470:         '''
471:         self.width, self.height, self.depth = ceil(w), ceil(h), ceil(d)
472:         self.mathtext_backend.set_canvas_size(self.width, self.height, self.depth)
473: 
474:     def render_glyph(self, ox, oy, facename, font_class, sym, fontsize, dpi):
475:         '''
476:         Draw a glyph at
477: 
478:           - *ox*, *oy*: position
479: 
480:           - *facename*: One of the TeX face names
481: 
482:           - *font_class*:
483: 
484:           - *sym*: TeX symbol name or single character
485: 
486:           - *fontsize*: fontsize in points
487: 
488:           - *dpi*: The dpi to draw at.
489:         '''
490:         info = self._get_info(facename, font_class, sym, fontsize, dpi)
491:         realpath, stat_key = get_realpath_and_stat(info.font.fname)
492:         used_characters = self.used_characters.setdefault(
493:             stat_key, (realpath, set()))
494:         used_characters[1].add(info.num)
495:         self.mathtext_backend.render_glyph(ox, oy, info)
496: 
497:     def render_rect_filled(self, x1, y1, x2, y2):
498:         '''
499:         Draw a filled rectangle from (*x1*, *y1*) to (*x2*, *y2*).
500:         '''
501:         self.mathtext_backend.render_rect_filled(x1, y1, x2, y2)
502: 
503:     def get_xheight(self, font, fontsize, dpi):
504:         '''
505:         Get the xheight for the given *font* and *fontsize*.
506:         '''
507:         raise NotImplementedError()
508: 
509:     def get_underline_thickness(self, font, fontsize, dpi):
510:         '''
511:         Get the line thickness that matches the given font.  Used as a
512:         base unit for drawing lines such as in a fraction or radical.
513:         '''
514:         raise NotImplementedError()
515: 
516:     def get_used_characters(self):
517:         '''
518:         Get the set of characters that were used in the math
519:         expression.  Used by backends that need to subset fonts so
520:         they know which glyphs to include.
521:         '''
522:         return self.used_characters
523: 
524:     def get_results(self, box):
525:         '''
526:         Get the data needed by the backend to render the math
527:         expression.  The return value is backend-specific.
528:         '''
529:         result = self.mathtext_backend.get_results(box, self.get_used_characters())
530:         self.destroy()
531:         return result
532: 
533:     def get_sized_alternatives_for_symbol(self, fontname, sym):
534:         '''
535:         Override if your font provides multiple sizes of the same
536:         symbol.  Should return a list of symbols matching *sym* in
537:         various sizes.  The expression renderer will select the most
538:         appropriate size for a given situation from this list.
539:         '''
540:         return [(fontname, sym)]
541: 
542: class TruetypeFonts(Fonts):
543:     '''
544:     A generic base class for all font setups that use Truetype fonts
545:     (through FT2Font).
546:     '''
547:     def __init__(self, default_font_prop, mathtext_backend):
548:         Fonts.__init__(self, default_font_prop, mathtext_backend)
549:         self.glyphd = {}
550:         self._fonts = {}
551: 
552:         filename = findfont(default_font_prop)
553:         default_font = get_font(filename)
554:         self._fonts['default'] = default_font
555:         self._fonts['regular'] = default_font
556: 
557:     def destroy(self):
558:         self.glyphd = None
559:         Fonts.destroy(self)
560: 
561:     def _get_font(self, font):
562:         if font in self.fontmap:
563:             basename = self.fontmap[font]
564:         else:
565:             basename = font
566:         cached_font = self._fonts.get(basename)
567:         if cached_font is None and os.path.exists(basename):
568:             cached_font = get_font(basename)
569:             self._fonts[basename] = cached_font
570:             self._fonts[cached_font.postscript_name] = cached_font
571:             self._fonts[cached_font.postscript_name.lower()] = cached_font
572:         return cached_font
573: 
574:     def _get_offset(self, font, glyph, fontsize, dpi):
575:         if font.postscript_name == 'Cmex10':
576:             return ((glyph.height/64.0/2.0) + (fontsize/3.0 * dpi/72.0))
577:         return 0.
578: 
579:     def _get_info(self, fontname, font_class, sym, fontsize, dpi, math=True):
580:         key = fontname, font_class, sym, fontsize, dpi
581:         bunch = self.glyphd.get(key)
582:         if bunch is not None:
583:             return bunch
584: 
585:         font, num, symbol_name, fontsize, slanted = \
586:             self._get_glyph(fontname, font_class, sym, fontsize, math)
587: 
588:         font.set_size(fontsize, dpi)
589:         glyph = font.load_char(
590:             num,
591:             flags=self.mathtext_backend.get_hinting_type())
592: 
593:         xmin, ymin, xmax, ymax = [val/64.0 for val in glyph.bbox]
594:         offset = self._get_offset(font, glyph, fontsize, dpi)
595:         metrics = Bunch(
596:             advance = glyph.linearHoriAdvance/65536.0,
597:             height  = glyph.height/64.0,
598:             width   = glyph.width/64.0,
599:             xmin    = xmin,
600:             xmax    = xmax,
601:             ymin    = ymin+offset,
602:             ymax    = ymax+offset,
603:             # iceberg is the equivalent of TeX's "height"
604:             iceberg = glyph.horiBearingY/64.0 + offset,
605:             slanted = slanted
606:             )
607: 
608:         result = self.glyphd[key] = Bunch(
609:             font            = font,
610:             fontsize        = fontsize,
611:             postscript_name = font.postscript_name,
612:             metrics         = metrics,
613:             symbol_name     = symbol_name,
614:             num             = num,
615:             glyph           = glyph,
616:             offset          = offset
617:             )
618:         return result
619: 
620:     def get_xheight(self, fontname, fontsize, dpi):
621:         font = self._get_font(fontname)
622:         font.set_size(fontsize, dpi)
623:         pclt = font.get_sfnt_table('pclt')
624:         if pclt is None:
625:             # Some fonts don't store the xHeight, so we do a poor man's xHeight
626:             metrics = self.get_metrics(fontname, rcParams['mathtext.default'], 'x', fontsize, dpi)
627:             return metrics.iceberg
628:         xHeight = (pclt['xHeight'] / 64.0) * (fontsize / 12.0) * (dpi / 100.0)
629:         return xHeight
630: 
631:     def get_underline_thickness(self, font, fontsize, dpi):
632:         # This function used to grab underline thickness from the font
633:         # metrics, but that information is just too un-reliable, so it
634:         # is now hardcoded.
635:         return ((0.75 / 12.0) * fontsize * dpi) / 72.0
636: 
637:     def get_kern(self, font1, fontclass1, sym1, fontsize1,
638:                  font2, fontclass2, sym2, fontsize2, dpi):
639:         if font1 == font2 and fontsize1 == fontsize2:
640:             info1 = self._get_info(font1, fontclass1, sym1, fontsize1, dpi)
641:             info2 = self._get_info(font2, fontclass2, sym2, fontsize2, dpi)
642:             font = info1.font
643:             return font.get_kerning(info1.num, info2.num, KERNING_DEFAULT) / 64.0
644:         return Fonts.get_kern(self, font1, fontclass1, sym1, fontsize1,
645:                               font2, fontclass2, sym2, fontsize2, dpi)
646: 
647: class BakomaFonts(TruetypeFonts):
648:     '''
649:     Use the Bakoma TrueType fonts for rendering.
650: 
651:     Symbols are strewn about a number of font files, each of which has
652:     its own proprietary 8-bit encoding.
653:     '''
654:     _fontmap = { 'cal' : 'cmsy10',
655:                  'rm'  : 'cmr10',
656:                  'tt'  : 'cmtt10',
657:                  'it'  : 'cmmi10',
658:                  'bf'  : 'cmb10',
659:                  'sf'  : 'cmss10',
660:                  'ex'  : 'cmex10'
661:                  }
662: 
663:     def __init__(self, *args, **kwargs):
664:         self._stix_fallback = StixFonts(*args, **kwargs)
665: 
666:         TruetypeFonts.__init__(self, *args, **kwargs)
667:         self.fontmap = {}
668:         for key, val in six.iteritems(self._fontmap):
669:             fullpath = findfont(val)
670:             self.fontmap[key] = fullpath
671:             self.fontmap[val] = fullpath
672: 
673: 
674:     _slanted_symbols = set(r"\int \oint".split())
675: 
676:     def _get_glyph(self, fontname, font_class, sym, fontsize, math=True):
677:         symbol_name = None
678:         font = None
679:         if fontname in self.fontmap and sym in latex_to_bakoma:
680:             basename, num = latex_to_bakoma[sym]
681:             slanted = (basename == "cmmi10") or sym in self._slanted_symbols
682:             font = self._get_font(basename)
683:         elif len(sym) == 1:
684:             slanted = (fontname == "it")
685:             font = self._get_font(fontname)
686:             if font is not None:
687:                 num = ord(sym)
688: 
689:         if font is not None:
690:             gid = font.get_char_index(num)
691:             if gid != 0:
692:                 symbol_name = font.get_glyph_name(gid)
693: 
694:         if symbol_name is None:
695:             return self._stix_fallback._get_glyph(
696:                 fontname, font_class, sym, fontsize, math)
697: 
698:         return font, num, symbol_name, fontsize, slanted
699: 
700:     # The Bakoma fonts contain many pre-sized alternatives for the
701:     # delimiters.  The AutoSizedChar class will use these alternatives
702:     # and select the best (closest sized) glyph.
703:     _size_alternatives = {
704:         '('          : [('rm', '('), ('ex', '\xa1'), ('ex', '\xb3'),
705:                         ('ex', '\xb5'), ('ex', '\xc3')],
706:         ')'          : [('rm', ')'), ('ex', '\xa2'), ('ex', '\xb4'),
707:                         ('ex', '\xb6'), ('ex', '\x21')],
708:         '{'          : [('cal', '{'), ('ex', '\xa9'), ('ex', '\x6e'),
709:                         ('ex', '\xbd'), ('ex', '\x28')],
710:         '}'          : [('cal', '}'), ('ex', '\xaa'), ('ex', '\x6f'),
711:                         ('ex', '\xbe'), ('ex', '\x29')],
712:         # The fourth size of '[' is mysteriously missing from the BaKoMa
713:         # font, so I've ommitted it for both '[' and ']'
714:         '['          : [('rm', '['), ('ex', '\xa3'), ('ex', '\x68'),
715:                         ('ex', '\x22')],
716:         ']'          : [('rm', ']'), ('ex', '\xa4'), ('ex', '\x69'),
717:                         ('ex', '\x23')],
718:         r'\lfloor'   : [('ex', '\xa5'), ('ex', '\x6a'),
719:                         ('ex', '\xb9'), ('ex', '\x24')],
720:         r'\rfloor'   : [('ex', '\xa6'), ('ex', '\x6b'),
721:                         ('ex', '\xba'), ('ex', '\x25')],
722:         r'\lceil'    : [('ex', '\xa7'), ('ex', '\x6c'),
723:                         ('ex', '\xbb'), ('ex', '\x26')],
724:         r'\rceil'    : [('ex', '\xa8'), ('ex', '\x6d'),
725:                         ('ex', '\xbc'), ('ex', '\x27')],
726:         r'\langle'   : [('ex', '\xad'), ('ex', '\x44'),
727:                         ('ex', '\xbf'), ('ex', '\x2a')],
728:         r'\rangle'   : [('ex', '\xae'), ('ex', '\x45'),
729:                         ('ex', '\xc0'), ('ex', '\x2b')],
730:         r'\__sqrt__' : [('ex', '\x70'), ('ex', '\x71'),
731:                         ('ex', '\x72'), ('ex', '\x73')],
732:         r'\backslash': [('ex', '\xb2'), ('ex', '\x2f'),
733:                         ('ex', '\xc2'), ('ex', '\x2d')],
734:         r'/'         : [('rm', '/'), ('ex', '\xb1'), ('ex', '\x2e'),
735:                         ('ex', '\xcb'), ('ex', '\x2c')],
736:         r'\widehat'  : [('rm', '\x5e'), ('ex', '\x62'), ('ex', '\x63'),
737:                         ('ex', '\x64')],
738:         r'\widetilde': [('rm', '\x7e'), ('ex', '\x65'), ('ex', '\x66'),
739:                         ('ex', '\x67')],
740:         r'<'         : [('cal', 'h'), ('ex', 'D')],
741:         r'>'         : [('cal', 'i'), ('ex', 'E')]
742:         }
743: 
744:     for alias, target in [(r'\leftparen', '('),
745:                           (r'\rightparent', ')'),
746:                           (r'\leftbrace', '{'),
747:                           (r'\rightbrace', '}'),
748:                           (r'\leftbracket', '['),
749:                           (r'\rightbracket', ']'),
750:                           (r'\{', '{'),
751:                           (r'\}', '}'),
752:                           (r'\[', '['),
753:                           (r'\]', ']')]:
754:         _size_alternatives[alias] = _size_alternatives[target]
755: 
756:     def get_sized_alternatives_for_symbol(self, fontname, sym):
757:         return self._size_alternatives.get(sym, [(fontname, sym)])
758: 
759: class UnicodeFonts(TruetypeFonts):
760:     '''
761:     An abstract base class for handling Unicode fonts.
762: 
763:     While some reasonably complete Unicode fonts (such as DejaVu) may
764:     work in some situations, the only Unicode font I'm aware of with a
765:     complete set of math symbols is STIX.
766: 
767:     This class will "fallback" on the Bakoma fonts when a required
768:     symbol can not be found in the font.
769:     '''
770:     use_cmex = True
771: 
772:     def __init__(self, *args, **kwargs):
773:         # This must come first so the backend's owner is set correctly
774:         if rcParams['mathtext.fallback_to_cm']:
775:             self.cm_fallback = BakomaFonts(*args, **kwargs)
776:         else:
777:             self.cm_fallback = None
778:         TruetypeFonts.__init__(self, *args, **kwargs)
779:         self.fontmap = {}
780:         for texfont in "cal rm tt it bf sf".split():
781:             prop = rcParams['mathtext.' + texfont]
782:             font = findfont(prop)
783:             self.fontmap[texfont] = font
784:         prop = FontProperties('cmex10')
785:         font = findfont(prop)
786:         self.fontmap['ex'] = font
787: 
788:     _slanted_symbols = set(r"\int \oint".split())
789: 
790:     def _map_virtual_font(self, fontname, font_class, uniindex):
791:         return fontname, uniindex
792: 
793:     def _get_glyph(self, fontname, font_class, sym, fontsize, math=True):
794:         found_symbol = False
795: 
796:         if self.use_cmex:
797:             uniindex = latex_to_cmex.get(sym)
798:             if uniindex is not None:
799:                 fontname = 'ex'
800:                 found_symbol = True
801: 
802:         if not found_symbol:
803:             try:
804:                 uniindex = get_unicode_index(sym, math)
805:                 found_symbol = True
806:             except ValueError:
807:                 uniindex = ord('?')
808:                 warn("No TeX to unicode mapping for '%s'" %
809:                      sym.encode('ascii', 'backslashreplace'),
810:                      MathTextWarning)
811: 
812:         fontname, uniindex = self._map_virtual_font(
813:             fontname, font_class, uniindex)
814: 
815:         new_fontname = fontname
816: 
817:         # Only characters in the "Letter" class should be italicized in 'it'
818:         # mode.  Greek capital letters should be Roman.
819:         if found_symbol:
820:             if fontname == 'it':
821:                 if uniindex < 0x10000:
822:                     unistring = unichr(uniindex)
823:                     if (not unicodedata.category(unistring)[0] == "L"
824:                         or unicodedata.name(unistring).startswith("GREEK CAPITAL")):
825:                         new_fontname = 'rm'
826: 
827:             slanted = (new_fontname == 'it') or sym in self._slanted_symbols
828:             found_symbol = False
829:             font = self._get_font(new_fontname)
830:             if font is not None:
831:                 glyphindex = font.get_char_index(uniindex)
832:                 if glyphindex != 0:
833:                     found_symbol = True
834: 
835:         if not found_symbol:
836:             if self.cm_fallback:
837:                 if isinstance(self.cm_fallback, BakomaFonts):
838:                     warn("Substituting with a symbol from Computer Modern.",
839:                          MathTextWarning)
840:                 if (fontname in ('it', 'regular') and
841:                         isinstance(self.cm_fallback, StixFonts)):
842:                     return self.cm_fallback._get_glyph(
843:                             'rm', font_class, sym, fontsize)
844:                 else:
845:                     return self.cm_fallback._get_glyph(
846:                         fontname, font_class, sym, fontsize)
847:             else:
848:                 if fontname in ('it', 'regular') and isinstance(self, StixFonts):
849:                     return self._get_glyph('rm', font_class, sym, fontsize)
850:                 warn("Font '%s' does not have a glyph for '%s' [U+%x]" %
851:                      (new_fontname,
852:                       sym.encode('ascii', 'backslashreplace').decode('ascii'),
853:                       uniindex),
854:                      MathTextWarning)
855:                 warn("Substituting with a dummy symbol.", MathTextWarning)
856:                 fontname = 'rm'
857:                 new_fontname = fontname
858:                 font = self._get_font(fontname)
859:                 uniindex = 0xA4 # currency character, for lack of anything better
860:                 glyphindex = font.get_char_index(uniindex)
861:                 slanted = False
862: 
863:         symbol_name = font.get_glyph_name(glyphindex)
864:         return font, uniindex, symbol_name, fontsize, slanted
865: 
866:     def get_sized_alternatives_for_symbol(self, fontname, sym):
867:         if self.cm_fallback:
868:             return self.cm_fallback.get_sized_alternatives_for_symbol(
869:                 fontname, sym)
870:         return [(fontname, sym)]
871: 
872: 
873: class DejaVuFonts(UnicodeFonts):
874:     use_cmex = False
875: 
876:     def __init__(self, *args, **kwargs):
877:         # This must come first so the backend's owner is set correctly
878:         if isinstance(self, DejaVuSerifFonts):
879:             self.cm_fallback = StixFonts(*args, **kwargs)
880:         else:
881:             self.cm_fallback = StixSansFonts(*args, **kwargs)
882:         self.bakoma = BakomaFonts(*args, **kwargs)
883:         TruetypeFonts.__init__(self, *args, **kwargs)
884:         self.fontmap = {}
885:         # Include Stix sized alternatives for glyphs
886:         self._fontmap.update({
887:                  1 : 'STIXSizeOneSym',
888:                  2 : 'STIXSizeTwoSym',
889:                  3 : 'STIXSizeThreeSym',
890:                  4 : 'STIXSizeFourSym',
891:                  5 : 'STIXSizeFiveSym'})
892:         for key, name in six.iteritems(self._fontmap):
893:             fullpath = findfont(name)
894:             self.fontmap[key] = fullpath
895:             self.fontmap[name] = fullpath
896: 
897:     def _get_glyph(self, fontname, font_class, sym, fontsize, math=True):
898:         ''' Override prime symbol to use Bakoma '''
899:         if sym == r'\prime':
900:             return self.bakoma._get_glyph(fontname,
901:                     font_class, sym, fontsize, math)
902:         else:
903:             # check whether the glyph is available in the display font
904:             uniindex = get_unicode_index(sym)
905:             font = self._get_font('ex')
906:             if font is not None:
907:                 glyphindex = font.get_char_index(uniindex)
908:                 if glyphindex != 0:
909:                     return super(DejaVuFonts, self)._get_glyph('ex',
910:                             font_class, sym, fontsize, math)
911:             # otherwise return regular glyph
912:             return super(DejaVuFonts, self)._get_glyph(fontname,
913:                     font_class, sym, fontsize, math)
914: 
915: 
916: class DejaVuSerifFonts(DejaVuFonts):
917:     '''
918:     A font handling class for the DejaVu Serif fonts
919: 
920:     If a glyph is not found it will fallback to Stix Serif
921:     '''
922:     _fontmap = { 'rm'  : 'DejaVu Serif',
923:                  'it'  : 'DejaVu Serif:italic',
924:                  'bf'  : 'DejaVu Serif:weight=bold',
925:                  'sf'  : 'DejaVu Sans',
926:                  'tt'  : 'DejaVu Sans Mono',
927:                  'ex'  : 'DejaVu Serif Display',
928:                  0     : 'DejaVu Serif',
929:                  }
930: 
931: class DejaVuSansFonts(DejaVuFonts):
932:     '''
933:     A font handling class for the DejaVu Sans fonts
934: 
935:     If a glyph is not found it will fallback to Stix Sans
936:     '''
937:     _fontmap = { 'rm'  : 'DejaVu Sans',
938:                  'it'  : 'DejaVu Sans:italic',
939:                  'bf'  : 'DejaVu Sans:weight=bold',
940:                  'sf'  : 'DejaVu Sans',
941:                  'tt'  : 'DejaVu Sans Mono',
942:                  'ex'  : 'DejaVu Sans Display',
943:                  0     : 'DejaVu Sans',
944:                  }
945: 
946: class StixFonts(UnicodeFonts):
947:     '''
948:     A font handling class for the STIX fonts.
949: 
950:     In addition to what UnicodeFonts provides, this class:
951: 
952:     - supports "virtual fonts" which are complete alpha numeric
953:       character sets with different font styles at special Unicode
954:       code points, such as "Blackboard".
955: 
956:     - handles sized alternative characters for the STIXSizeX fonts.
957:     '''
958:     _fontmap = { 'rm'  : 'STIXGeneral',
959:                  'it'  : 'STIXGeneral:italic',
960:                  'bf'  : 'STIXGeneral:weight=bold',
961:                  'nonunirm' : 'STIXNonUnicode',
962:                  'nonuniit' : 'STIXNonUnicode:italic',
963:                  'nonunibf' : 'STIXNonUnicode:weight=bold',
964: 
965:                  0 : 'STIXGeneral',
966:                  1 : 'STIXSizeOneSym',
967:                  2 : 'STIXSizeTwoSym',
968:                  3 : 'STIXSizeThreeSym',
969:                  4 : 'STIXSizeFourSym',
970:                  5 : 'STIXSizeFiveSym'
971:                  }
972:     use_cmex = False
973:     cm_fallback = False
974:     _sans = False
975: 
976:     def __init__(self, *args, **kwargs):
977:         TruetypeFonts.__init__(self, *args, **kwargs)
978:         self.fontmap = {}
979:         for key, name in six.iteritems(self._fontmap):
980:             fullpath = findfont(name)
981:             self.fontmap[key] = fullpath
982:             self.fontmap[name] = fullpath
983: 
984:     def _map_virtual_font(self, fontname, font_class, uniindex):
985:         # Handle these "fonts" that are actually embedded in
986:         # other fonts.
987:         mapping = stix_virtual_fonts.get(fontname)
988:         if (self._sans and mapping is None and
989:             fontname not in ('regular', 'default')):
990:             mapping = stix_virtual_fonts['sf']
991:             doing_sans_conversion = True
992:         else:
993:             doing_sans_conversion = False
994: 
995:         if mapping is not None:
996:             if isinstance(mapping, dict):
997:                 mapping = mapping.get(font_class, 'rm')
998: 
999:             # Binary search for the source glyph
1000:             lo = 0
1001:             hi = len(mapping)
1002:             while lo < hi:
1003:                 mid = (lo+hi)//2
1004:                 range = mapping[mid]
1005:                 if uniindex < range[0]:
1006:                     hi = mid
1007:                 elif uniindex <= range[1]:
1008:                     break
1009:                 else:
1010:                     lo = mid + 1
1011: 
1012:             if uniindex >= range[0] and uniindex <= range[1]:
1013:                 uniindex = uniindex - range[0] + range[3]
1014:                 fontname = range[2]
1015:             elif not doing_sans_conversion:
1016:                 # This will generate a dummy character
1017:                 uniindex = 0x1
1018:                 fontname = rcParams['mathtext.default']
1019: 
1020:         # Handle private use area glyphs
1021:         if (fontname in ('it', 'rm', 'bf') and
1022:             uniindex >= 0xe000 and uniindex <= 0xf8ff):
1023:             fontname = 'nonuni' + fontname
1024: 
1025:         return fontname, uniindex
1026: 
1027:     _size_alternatives = {}
1028:     def get_sized_alternatives_for_symbol(self, fontname, sym):
1029:         fixes = {'\\{': '{', '\\}': '}', '\\[': '[', '\\]': ']'}
1030:         sym = fixes.get(sym, sym)
1031: 
1032:         alternatives = self._size_alternatives.get(sym)
1033:         if alternatives:
1034:             return alternatives
1035: 
1036:         alternatives = []
1037:         try:
1038:             uniindex = get_unicode_index(sym)
1039:         except ValueError:
1040:             return [(fontname, sym)]
1041: 
1042:         fix_ups = {
1043:             ord('<'): 0x27e8,
1044:             ord('>'): 0x27e9 }
1045: 
1046:         uniindex = fix_ups.get(uniindex, uniindex)
1047: 
1048:         for i in range(6):
1049:             font = self._get_font(i)
1050:             glyphindex = font.get_char_index(uniindex)
1051:             if glyphindex != 0:
1052:                 alternatives.append((i, unichr_safe(uniindex)))
1053: 
1054:         # The largest size of the radical symbol in STIX has incorrect
1055:         # metrics that cause it to be disconnected from the stem.
1056:         if sym == r'\__sqrt__':
1057:             alternatives = alternatives[:-1]
1058: 
1059:         self._size_alternatives[sym] = alternatives
1060:         return alternatives
1061: 
1062: class StixSansFonts(StixFonts):
1063:     '''
1064:     A font handling class for the STIX fonts (that uses sans-serif
1065:     characters by default).
1066:     '''
1067:     _sans = True
1068: 
1069: class StandardPsFonts(Fonts):
1070:     '''
1071:     Use the standard postscript fonts for rendering to backend_ps
1072: 
1073:     Unlike the other font classes, BakomaFont and UnicodeFont, this
1074:     one requires the Ps backend.
1075:     '''
1076:     basepath = os.path.join( get_data_path(), 'fonts', 'afm' )
1077: 
1078:     fontmap = { 'cal' : 'pzcmi8a',  # Zapf Chancery
1079:                 'rm'  : 'pncr8a',   # New Century Schoolbook
1080:                 'tt'  : 'pcrr8a',   # Courier
1081:                 'it'  : 'pncri8a',  # New Century Schoolbook Italic
1082:                 'sf'  : 'phvr8a',   # Helvetica
1083:                 'bf'  : 'pncb8a',   # New Century Schoolbook Bold
1084:                 None  : 'psyr'      # Symbol
1085:                 }
1086: 
1087:     def __init__(self, default_font_prop):
1088:         Fonts.__init__(self, default_font_prop, MathtextBackendPs())
1089:         self.glyphd = {}
1090:         self.fonts = {}
1091: 
1092:         filename = findfont(default_font_prop, fontext='afm',
1093:                             directory=self.basepath)
1094:         if filename is None:
1095:             filename = findfont('Helvetica', fontext='afm',
1096:                                 directory=self.basepath)
1097:         with open(filename, 'rb') as fd:
1098:             default_font = AFM(fd)
1099:         default_font.fname = filename
1100: 
1101:         self.fonts['default'] = default_font
1102:         self.fonts['regular'] = default_font
1103:         self.pswriter = six.moves.cStringIO()
1104: 
1105:     def _get_font(self, font):
1106:         if font in self.fontmap:
1107:             basename = self.fontmap[font]
1108:         else:
1109:             basename = font
1110: 
1111:         cached_font = self.fonts.get(basename)
1112:         if cached_font is None:
1113:             fname = os.path.join(self.basepath, basename + ".afm")
1114:             with open(fname, 'rb') as fd:
1115:                 cached_font = AFM(fd)
1116:             cached_font.fname = fname
1117:             self.fonts[basename] = cached_font
1118:             self.fonts[cached_font.get_fontname()] = cached_font
1119:         return cached_font
1120: 
1121:     def _get_info (self, fontname, font_class, sym, fontsize, dpi, math=True):
1122:         'load the cmfont, metrics and glyph with caching'
1123:         key = fontname, sym, fontsize, dpi
1124:         tup = self.glyphd.get(key)
1125: 
1126:         if tup is not None:
1127:             return tup
1128: 
1129:         # Only characters in the "Letter" class should really be italicized.
1130:         # This class includes greek letters, so we're ok
1131:         if (fontname == 'it' and
1132:             (len(sym) > 1 or
1133:              not unicodedata.category(six.text_type(sym)).startswith("L"))):
1134:             fontname = 'rm'
1135: 
1136:         found_symbol = False
1137: 
1138:         if sym in latex_to_standard:
1139:             fontname, num = latex_to_standard[sym]
1140:             glyph = chr(num)
1141:             found_symbol = True
1142:         elif len(sym) == 1:
1143:             glyph = sym
1144:             num = ord(glyph)
1145:             found_symbol = True
1146:         else:
1147:             warn("No TeX to built-in Postscript mapping for '%s'" % sym,
1148:                  MathTextWarning)
1149: 
1150:         slanted = (fontname == 'it')
1151:         font = self._get_font(fontname)
1152: 
1153:         if found_symbol:
1154:             try:
1155:                 symbol_name = font.get_name_char(glyph)
1156:             except KeyError:
1157:                 warn("No glyph in standard Postscript font '%s' for '%s'" %
1158:                      (font.postscript_name, sym),
1159:                      MathTextWarning)
1160:                 found_symbol = False
1161: 
1162:         if not found_symbol:
1163:             glyph = sym = '?'
1164:             num = ord(glyph)
1165:             symbol_name = font.get_name_char(glyph)
1166: 
1167:         offset = 0
1168: 
1169:         scale = 0.001 * fontsize
1170: 
1171:         xmin, ymin, xmax, ymax = [val * scale
1172:                                   for val in font.get_bbox_char(glyph)]
1173:         metrics = Bunch(
1174:             advance  = font.get_width_char(glyph) * scale,
1175:             width    = font.get_width_char(glyph) * scale,
1176:             height   = font.get_height_char(glyph) * scale,
1177:             xmin = xmin,
1178:             xmax = xmax,
1179:             ymin = ymin+offset,
1180:             ymax = ymax+offset,
1181:             # iceberg is the equivalent of TeX's "height"
1182:             iceberg = ymax + offset,
1183:             slanted = slanted
1184:             )
1185: 
1186:         self.glyphd[key] = Bunch(
1187:             font            = font,
1188:             fontsize        = fontsize,
1189:             postscript_name = font.get_fontname(),
1190:             metrics         = metrics,
1191:             symbol_name     = symbol_name,
1192:             num             = num,
1193:             glyph           = glyph,
1194:             offset          = offset
1195:             )
1196: 
1197:         return self.glyphd[key]
1198: 
1199:     def get_kern(self, font1, fontclass1, sym1, fontsize1,
1200:                  font2, fontclass2, sym2, fontsize2, dpi):
1201:         if font1 == font2 and fontsize1 == fontsize2:
1202:             info1 = self._get_info(font1, fontclass1, sym1, fontsize1, dpi)
1203:             info2 = self._get_info(font2, fontclass2, sym2, fontsize2, dpi)
1204:             font = info1.font
1205:             return (font.get_kern_dist(info1.glyph, info2.glyph)
1206:                     * 0.001 * fontsize1)
1207:         return Fonts.get_kern(self, font1, fontclass1, sym1, fontsize1,
1208:                               font2, fontclass2, sym2, fontsize2, dpi)
1209: 
1210:     def get_xheight(self, font, fontsize, dpi):
1211:         font = self._get_font(font)
1212:         return font.get_xheight() * 0.001 * fontsize
1213: 
1214:     def get_underline_thickness(self, font, fontsize, dpi):
1215:         font = self._get_font(font)
1216:         return font.get_underline_thickness() * 0.001 * fontsize
1217: 
1218: 
1219: ##############################################################################
1220: # TeX-LIKE BOX MODEL
1221: 
1222: # The following is based directly on the document 'woven' from the
1223: # TeX82 source code.  This information is also available in printed
1224: # form:
1225: #
1226: #    Knuth, Donald E.. 1986.  Computers and Typesetting, Volume B:
1227: #    TeX: The Program.  Addison-Wesley Professional.
1228: #
1229: # The most relevant "chapters" are:
1230: #    Data structures for boxes and their friends
1231: #    Shipping pages out (Ship class)
1232: #    Packaging (hpack and vpack)
1233: #    Data structures for math mode
1234: #    Subroutines for math mode
1235: #    Typesetting math formulas
1236: #
1237: # Many of the docstrings below refer to a numbered "node" in that
1238: # book, e.g., node123
1239: #
1240: # Note that (as TeX) y increases downward, unlike many other parts of
1241: # matplotlib.
1242: 
1243: # How much text shrinks when going to the next-smallest level.  GROW_FACTOR
1244: # must be the inverse of SHRINK_FACTOR.
1245: SHRINK_FACTOR   = 0.7
1246: GROW_FACTOR     = 1.0 / SHRINK_FACTOR
1247: # The number of different sizes of chars to use, beyond which they will not
1248: # get any smaller
1249: NUM_SIZE_LEVELS = 6
1250: 
1251: 
1252: class FontConstantsBase(object):
1253:     '''
1254:     A set of constants that controls how certain things, such as sub-
1255:     and superscripts are laid out.  These are all metrics that can't
1256:     be reliably retrieved from the font metrics in the font itself.
1257:     '''
1258:     # Percentage of x-height of additional horiz. space after sub/superscripts
1259:     script_space = 0.05
1260: 
1261:     # Percentage of x-height that sub/superscripts drop below the baseline
1262:     subdrop = 0.4
1263: 
1264:     # Percentage of x-height that superscripts are raised from the baseline
1265:     sup1 = 0.7
1266: 
1267:     # Percentage of x-height that subscripts drop below the baseline
1268:     sub1 = 0.3
1269: 
1270:     # Percentage of x-height that subscripts drop below the baseline when a
1271:     # superscript is present
1272:     sub2 = 0.5
1273: 
1274:     # Percentage of x-height that sub/supercripts are offset relative to the
1275:     # nucleus edge for non-slanted nuclei
1276:     delta = 0.025
1277: 
1278:     # Additional percentage of last character height above 2/3 of the
1279:     # x-height that supercripts are offset relative to the subscript
1280:     # for slanted nuclei
1281:     delta_slanted = 0.2
1282: 
1283:     # Percentage of x-height that supercripts and subscripts are offset for
1284:     # integrals
1285:     delta_integral = 0.1
1286: 
1287: 
1288: class ComputerModernFontConstants(FontConstantsBase):
1289:     script_space = 0.075
1290:     subdrop = 0.2
1291:     sup1 = 0.45
1292:     sub1 = 0.2
1293:     sub2 = 0.3
1294:     delta = 0.075
1295:     delta_slanted = 0.3
1296:     delta_integral = 0.3
1297: 
1298: 
1299: class STIXFontConstants(FontConstantsBase):
1300:     script_space = 0.1
1301:     sup1 = 0.8
1302:     sub2 = 0.6
1303:     delta = 0.05
1304:     delta_slanted = 0.3
1305:     delta_integral = 0.3
1306: 
1307: 
1308: class STIXSansFontConstants(FontConstantsBase):
1309:     script_space = 0.05
1310:     sup1 = 0.8
1311:     delta_slanted = 0.6
1312:     delta_integral = 0.3
1313: 
1314: 
1315: class DejaVuSerifFontConstants(FontConstantsBase):
1316:     pass
1317: 
1318: 
1319: class DejaVuSansFontConstants(FontConstantsBase):
1320:     pass
1321: 
1322: 
1323: # Maps font family names to the FontConstantBase subclass to use
1324: _font_constant_mapping = {
1325:     'DejaVu Sans': DejaVuSansFontConstants,
1326:     'DejaVu Sans Mono': DejaVuSansFontConstants,
1327:     'DejaVu Serif': DejaVuSerifFontConstants,
1328:     'cmb10': ComputerModernFontConstants,
1329:     'cmex10': ComputerModernFontConstants,
1330:     'cmmi10': ComputerModernFontConstants,
1331:     'cmr10': ComputerModernFontConstants,
1332:     'cmss10': ComputerModernFontConstants,
1333:     'cmsy10': ComputerModernFontConstants,
1334:     'cmtt10': ComputerModernFontConstants,
1335:     'STIXGeneral': STIXFontConstants,
1336:     'STIXNonUnicode': STIXFontConstants,
1337:     'STIXSizeFiveSym': STIXFontConstants,
1338:     'STIXSizeFourSym': STIXFontConstants,
1339:     'STIXSizeThreeSym': STIXFontConstants,
1340:     'STIXSizeTwoSym': STIXFontConstants,
1341:     'STIXSizeOneSym': STIXFontConstants,
1342:     # Map the fonts we used to ship, just for good measure
1343:     'Bitstream Vera Sans': DejaVuSansFontConstants,
1344:     'Bitstream Vera': DejaVuSansFontConstants,
1345:     }
1346: 
1347: 
1348: def _get_font_constant_set(state):
1349:     constants = _font_constant_mapping.get(
1350:         state.font_output._get_font(state.font).family_name,
1351:         FontConstantsBase)
1352:     # STIX sans isn't really its own fonts, just different code points
1353:     # in the STIX fonts, so we have to detect this one separately.
1354:     if (constants is STIXFontConstants and
1355:             isinstance(state.font_output, StixSansFonts)):
1356:         return STIXSansFontConstants
1357:     return constants
1358: 
1359: 
1360: class MathTextWarning(Warning):
1361:     pass
1362: 
1363: class Node(object):
1364:     '''
1365:     A node in the TeX box model
1366:     '''
1367:     def __init__(self):
1368:         self.size = 0
1369: 
1370:     def __repr__(self):
1371:         return self.__internal_repr__()
1372: 
1373:     def __internal_repr__(self):
1374:         return self.__class__.__name__
1375: 
1376:     def get_kerning(self, next):
1377:         return 0.0
1378: 
1379:     def shrink(self):
1380:         '''
1381:         Shrinks one level smaller.  There are only three levels of
1382:         sizes, after which things will no longer get smaller.
1383:         '''
1384:         self.size += 1
1385: 
1386:     def grow(self):
1387:         '''
1388:         Grows one level larger.  There is no limit to how big
1389:         something can get.
1390:         '''
1391:         self.size -= 1
1392: 
1393:     def render(self, x, y):
1394:         pass
1395: 
1396: class Box(Node):
1397:     '''
1398:     Represents any node with a physical location.
1399:     '''
1400:     def __init__(self, width, height, depth):
1401:         Node.__init__(self)
1402:         self.width  = width
1403:         self.height = height
1404:         self.depth  = depth
1405: 
1406:     def shrink(self):
1407:         Node.shrink(self)
1408:         if self.size < NUM_SIZE_LEVELS:
1409:             self.width  *= SHRINK_FACTOR
1410:             self.height *= SHRINK_FACTOR
1411:             self.depth  *= SHRINK_FACTOR
1412: 
1413:     def grow(self):
1414:         Node.grow(self)
1415:         self.width  *= GROW_FACTOR
1416:         self.height *= GROW_FACTOR
1417:         self.depth  *= GROW_FACTOR
1418: 
1419:     def render(self, x1, y1, x2, y2):
1420:         pass
1421: 
1422: class Vbox(Box):
1423:     '''
1424:     A box with only height (zero width).
1425:     '''
1426:     def __init__(self, height, depth):
1427:         Box.__init__(self, 0., height, depth)
1428: 
1429: class Hbox(Box):
1430:     '''
1431:     A box with only width (zero height and depth).
1432:     '''
1433:     def __init__(self, width):
1434:         Box.__init__(self, width, 0., 0.)
1435: 
1436: class Char(Node):
1437:     '''
1438:     Represents a single character.  Unlike TeX, the font information
1439:     and metrics are stored with each :class:`Char` to make it easier
1440:     to lookup the font metrics when needed.  Note that TeX boxes have
1441:     a width, height, and depth, unlike Type1 and Truetype which use a
1442:     full bounding box and an advance in the x-direction.  The metrics
1443:     must be converted to the TeX way, and the advance (if different
1444:     from width) must be converted into a :class:`Kern` node when the
1445:     :class:`Char` is added to its parent :class:`Hlist`.
1446:     '''
1447:     def __init__(self, c, state, math=True):
1448:         Node.__init__(self)
1449:         self.c = c
1450:         self.font_output = state.font_output
1451:         self.font = state.font
1452:         self.font_class = state.font_class
1453:         self.fontsize = state.fontsize
1454:         self.dpi = state.dpi
1455:         self.math = math
1456:         # The real width, height and depth will be set during the
1457:         # pack phase, after we know the real fontsize
1458:         self._update_metrics()
1459: 
1460:     def __internal_repr__(self):
1461:         return '`%s`' % self.c
1462: 
1463:     def _update_metrics(self):
1464:         metrics = self._metrics = self.font_output.get_metrics(
1465:             self.font, self.font_class, self.c, self.fontsize, self.dpi, self.math)
1466:         if self.c == ' ':
1467:             self.width = metrics.advance
1468:         else:
1469:             self.width = metrics.width
1470:         self.height = metrics.iceberg
1471:         self.depth = -(metrics.iceberg - metrics.height)
1472: 
1473:     def is_slanted(self):
1474:         return self._metrics.slanted
1475: 
1476:     def get_kerning(self, next):
1477:         '''
1478:         Return the amount of kerning between this and the given
1479:         character.  Called when characters are strung together into
1480:         :class:`Hlist` to create :class:`Kern` nodes.
1481:         '''
1482:         advance = self._metrics.advance - self.width
1483:         kern = 0.
1484:         if isinstance(next, Char):
1485:             kern = self.font_output.get_kern(
1486:                 self.font, self.font_class, self.c, self.fontsize,
1487:                 next.font, next.font_class, next.c, next.fontsize,
1488:                 self.dpi)
1489:         return advance + kern
1490: 
1491:     def render(self, x, y):
1492:         '''
1493:         Render the character to the canvas
1494:         '''
1495:         self.font_output.render_glyph(
1496:             x, y,
1497:             self.font, self.font_class, self.c, self.fontsize, self.dpi)
1498: 
1499:     def shrink(self):
1500:         Node.shrink(self)
1501:         if self.size < NUM_SIZE_LEVELS:
1502:             self.fontsize *= SHRINK_FACTOR
1503:             self.width    *= SHRINK_FACTOR
1504:             self.height   *= SHRINK_FACTOR
1505:             self.depth    *= SHRINK_FACTOR
1506: 
1507:     def grow(self):
1508:         Node.grow(self)
1509:         self.fontsize *= GROW_FACTOR
1510:         self.width    *= GROW_FACTOR
1511:         self.height   *= GROW_FACTOR
1512:         self.depth    *= GROW_FACTOR
1513: 
1514: class Accent(Char):
1515:     '''
1516:     The font metrics need to be dealt with differently for accents,
1517:     since they are already offset correctly from the baseline in
1518:     TrueType fonts.
1519:     '''
1520:     def _update_metrics(self):
1521:         metrics = self._metrics = self.font_output.get_metrics(
1522:             self.font, self.font_class, self.c, self.fontsize, self.dpi)
1523:         self.width = metrics.xmax - metrics.xmin
1524:         self.height = metrics.ymax - metrics.ymin
1525:         self.depth = 0
1526: 
1527:     def shrink(self):
1528:         Char.shrink(self)
1529:         self._update_metrics()
1530: 
1531:     def grow(self):
1532:         Char.grow(self)
1533:         self._update_metrics()
1534: 
1535:     def render(self, x, y):
1536:         '''
1537:         Render the character to the canvas.
1538:         '''
1539:         self.font_output.render_glyph(
1540:             x - self._metrics.xmin, y + self._metrics.ymin,
1541:             self.font, self.font_class, self.c, self.fontsize, self.dpi)
1542: 
1543: class List(Box):
1544:     '''
1545:     A list of nodes (either horizontal or vertical).
1546:     '''
1547:     def __init__(self, elements):
1548:         Box.__init__(self, 0., 0., 0.)
1549:         self.shift_amount = 0.   # An arbitrary offset
1550:         self.children     = elements # The child nodes of this list
1551:         # The following parameters are set in the vpack and hpack functions
1552:         self.glue_set     = 0.   # The glue setting of this list
1553:         self.glue_sign    = 0    # 0: normal, -1: shrinking, 1: stretching
1554:         self.glue_order   = 0    # The order of infinity (0 - 3) for the glue
1555: 
1556:     def __repr__(self):
1557:         return '[%s <%.02f %.02f %.02f %.02f> %s]' % (
1558:             self.__internal_repr__(),
1559:             self.width, self.height,
1560:             self.depth, self.shift_amount,
1561:             ' '.join([repr(x) for x in self.children]))
1562: 
1563:     def _determine_order(self, totals):
1564:         '''
1565:         A helper function to determine the highest order of glue
1566:         used by the members of this list.  Used by vpack and hpack.
1567:         '''
1568:         o = 0
1569:         for i in range(len(totals) - 1, 0, -1):
1570:             if totals[i] != 0.0:
1571:                 o = i
1572:                 break
1573:         return o
1574: 
1575:     def _set_glue(self, x, sign, totals, error_type):
1576:         o = self._determine_order(totals)
1577:         self.glue_order = o
1578:         self.glue_sign = sign
1579:         if totals[o] != 0.:
1580:             self.glue_set = x / totals[o]
1581:         else:
1582:             self.glue_sign = 0
1583:             self.glue_ratio = 0.
1584:         if o == 0:
1585:             if len(self.children):
1586:                 warn("%s %s: %r" % (error_type, self.__class__.__name__, self),
1587:                      MathTextWarning)
1588: 
1589:     def shrink(self):
1590:         for child in self.children:
1591:             child.shrink()
1592:         Box.shrink(self)
1593:         if self.size < NUM_SIZE_LEVELS:
1594:             self.shift_amount *= SHRINK_FACTOR
1595:             self.glue_set     *= SHRINK_FACTOR
1596: 
1597:     def grow(self):
1598:         for child in self.children:
1599:             child.grow()
1600:         Box.grow(self)
1601:         self.shift_amount *= GROW_FACTOR
1602:         self.glue_set     *= GROW_FACTOR
1603: 
1604: class Hlist(List):
1605:     '''
1606:     A horizontal list of boxes.
1607:     '''
1608:     def __init__(self, elements, w=0., m='additional', do_kern=True):
1609:         List.__init__(self, elements)
1610:         if do_kern:
1611:             self.kern()
1612:         self.hpack()
1613: 
1614:     def kern(self):
1615:         '''
1616:         Insert :class:`Kern` nodes between :class:`Char` nodes to set
1617:         kerning.  The :class:`Char` nodes themselves determine the
1618:         amount of kerning they need (in :meth:`~Char.get_kerning`),
1619:         and this function just creates the linked list in the correct
1620:         way.
1621:         '''
1622:         new_children = []
1623:         num_children = len(self.children)
1624:         if num_children:
1625:             for i in range(num_children):
1626:                 elem = self.children[i]
1627:                 if i < num_children - 1:
1628:                     next = self.children[i + 1]
1629:                 else:
1630:                     next = None
1631: 
1632:                 new_children.append(elem)
1633:                 kerning_distance = elem.get_kerning(next)
1634:                 if kerning_distance != 0.:
1635:                     kern = Kern(kerning_distance)
1636:                     new_children.append(kern)
1637:             self.children = new_children
1638: 
1639:     # This is a failed experiment to fake cross-font kerning.
1640: #     def get_kerning(self, next):
1641: #         if len(self.children) >= 2 and isinstance(self.children[-2], Char):
1642: #             if isinstance(next, Char):
1643: #                 print "CASE A"
1644: #                 return self.children[-2].get_kerning(next)
1645: #             elif isinstance(next, Hlist) and len(next.children) and isinstance(next.children[0], Char):
1646: #                 print "CASE B"
1647: #                 result = self.children[-2].get_kerning(next.children[0])
1648: #                 print result
1649: #                 return result
1650: #         return 0.0
1651: 
1652:     def hpack(self, w=0., m='additional'):
1653:         '''
1654:         The main duty of :meth:`hpack` is to compute the dimensions of
1655:         the resulting boxes, and to adjust the glue if one of those
1656:         dimensions is pre-specified.  The computed sizes normally
1657:         enclose all of the material inside the new box; but some items
1658:         may stick out if negative glue is used, if the box is
1659:         overfull, or if a ``\\vbox`` includes other boxes that have
1660:         been shifted left.
1661: 
1662:           - *w*: specifies a width
1663: 
1664:           - *m*: is either 'exactly' or 'additional'.
1665: 
1666:         Thus, ``hpack(w, 'exactly')`` produces a box whose width is
1667:         exactly *w*, while ``hpack(w, 'additional')`` yields a box
1668:         whose width is the natural width plus *w*.  The default values
1669:         produce a box with the natural width.
1670:         '''
1671:         # I don't know why these get reset in TeX.  Shift_amount is pretty
1672:         # much useless if we do.
1673:         #self.shift_amount = 0.
1674:         h = 0.
1675:         d = 0.
1676:         x = 0.
1677:         total_stretch = [0.] * 4
1678:         total_shrink = [0.] * 4
1679:         for p in self.children:
1680:             if isinstance(p, Char):
1681:                 x += p.width
1682:                 h = max(h, p.height)
1683:                 d = max(d, p.depth)
1684:             elif isinstance(p, Box):
1685:                 x += p.width
1686:                 if not isinf(p.height) and not isinf(p.depth):
1687:                     s = getattr(p, 'shift_amount', 0.)
1688:                     h = max(h, p.height - s)
1689:                     d = max(d, p.depth + s)
1690:             elif isinstance(p, Glue):
1691:                 glue_spec = p.glue_spec
1692:                 x += glue_spec.width
1693:                 total_stretch[glue_spec.stretch_order] += glue_spec.stretch
1694:                 total_shrink[glue_spec.shrink_order] += glue_spec.shrink
1695:             elif isinstance(p, Kern):
1696:                 x += p.width
1697:         self.height = h
1698:         self.depth = d
1699: 
1700:         if m == 'additional':
1701:             w += x
1702:         self.width = w
1703:         x = w - x
1704: 
1705:         if x == 0.:
1706:             self.glue_sign = 0
1707:             self.glue_order = 0
1708:             self.glue_ratio = 0.
1709:             return
1710:         if x > 0.:
1711:             self._set_glue(x, 1, total_stretch, "Overfull")
1712:         else:
1713:             self._set_glue(x, -1, total_shrink, "Underfull")
1714: 
1715: class Vlist(List):
1716:     '''
1717:     A vertical list of boxes.
1718:     '''
1719:     def __init__(self, elements, h=0., m='additional'):
1720:         List.__init__(self, elements)
1721:         self.vpack()
1722: 
1723:     def vpack(self, h=0., m='additional', l=float(inf)):
1724:         '''
1725:         The main duty of :meth:`vpack` is to compute the dimensions of
1726:         the resulting boxes, and to adjust the glue if one of those
1727:         dimensions is pre-specified.
1728: 
1729:           - *h*: specifies a height
1730:           - *m*: is either 'exactly' or 'additional'.
1731:           - *l*: a maximum height
1732: 
1733:         Thus, ``vpack(h, 'exactly')`` produces a box whose height is
1734:         exactly *h*, while ``vpack(h, 'additional')`` yields a box
1735:         whose height is the natural height plus *h*.  The default
1736:         values produce a box with the natural width.
1737:         '''
1738:         # I don't know why these get reset in TeX.  Shift_amount is pretty
1739:         # much useless if we do.
1740:         # self.shift_amount = 0.
1741:         w = 0.
1742:         d = 0.
1743:         x = 0.
1744:         total_stretch = [0.] * 4
1745:         total_shrink = [0.] * 4
1746:         for p in self.children:
1747:             if isinstance(p, Box):
1748:                 x += d + p.height
1749:                 d = p.depth
1750:                 if not isinf(p.width):
1751:                     s = getattr(p, 'shift_amount', 0.)
1752:                     w = max(w, p.width + s)
1753:             elif isinstance(p, Glue):
1754:                 x += d
1755:                 d = 0.
1756:                 glue_spec = p.glue_spec
1757:                 x += glue_spec.width
1758:                 total_stretch[glue_spec.stretch_order] += glue_spec.stretch
1759:                 total_shrink[glue_spec.shrink_order] += glue_spec.shrink
1760:             elif isinstance(p, Kern):
1761:                 x += d + p.width
1762:                 d = 0.
1763:             elif isinstance(p, Char):
1764:                 raise RuntimeError("Internal mathtext error: Char node found in Vlist.")
1765: 
1766:         self.width = w
1767:         if d > l:
1768:             x += d - l
1769:             self.depth = l
1770:         else:
1771:             self.depth = d
1772: 
1773:         if m == 'additional':
1774:             h += x
1775:         self.height = h
1776:         x = h - x
1777: 
1778:         if x == 0:
1779:             self.glue_sign = 0
1780:             self.glue_order = 0
1781:             self.glue_ratio = 0.
1782:             return
1783: 
1784:         if x > 0.:
1785:             self._set_glue(x, 1, total_stretch, "Overfull")
1786:         else:
1787:             self._set_glue(x, -1, total_shrink, "Underfull")
1788: 
1789: class Rule(Box):
1790:     '''
1791:     A :class:`Rule` node stands for a solid black rectangle; it has
1792:     *width*, *depth*, and *height* fields just as in an
1793:     :class:`Hlist`. However, if any of these dimensions is inf, the
1794:     actual value will be determined by running the rule up to the
1795:     boundary of the innermost enclosing box. This is called a "running
1796:     dimension." The width is never running in an :class:`Hlist`; the
1797:     height and depth are never running in a :class:`Vlist`.
1798:     '''
1799:     def __init__(self, width, height, depth, state):
1800:         Box.__init__(self, width, height, depth)
1801:         self.font_output = state.font_output
1802: 
1803:     def render(self, x, y, w, h):
1804:         self.font_output.render_rect_filled(x, y, x + w, y + h)
1805: 
1806: class Hrule(Rule):
1807:     '''
1808:     Convenience class to create a horizontal rule.
1809:     '''
1810:     def __init__(self, state, thickness=None):
1811:         if thickness is None:
1812:             thickness = state.font_output.get_underline_thickness(
1813:                 state.font, state.fontsize, state.dpi)
1814:         height = depth = thickness * 0.5
1815:         Rule.__init__(self, inf, height, depth, state)
1816: 
1817: class Vrule(Rule):
1818:     '''
1819:     Convenience class to create a vertical rule.
1820:     '''
1821:     def __init__(self, state):
1822:         thickness = state.font_output.get_underline_thickness(
1823:             state.font, state.fontsize, state.dpi)
1824:         Rule.__init__(self, thickness, inf, inf, state)
1825: 
1826: class Glue(Node):
1827:     '''
1828:     Most of the information in this object is stored in the underlying
1829:     :class:`GlueSpec` class, which is shared between multiple glue objects.  (This
1830:     is a memory optimization which probably doesn't matter anymore, but it's
1831:     easier to stick to what TeX does.)
1832:     '''
1833:     def __init__(self, glue_type, copy=False):
1834:         Node.__init__(self)
1835:         self.glue_subtype   = 'normal'
1836:         if isinstance(glue_type, six.string_types):
1837:             glue_spec = GlueSpec.factory(glue_type)
1838:         elif isinstance(glue_type, GlueSpec):
1839:             glue_spec = glue_type
1840:         else:
1841:             raise ArgumentError("glue_type must be a glue spec name or instance.")
1842:         if copy:
1843:             glue_spec = glue_spec.copy()
1844:         self.glue_spec      = glue_spec
1845: 
1846:     def shrink(self):
1847:         Node.shrink(self)
1848:         if self.size < NUM_SIZE_LEVELS:
1849:             if self.glue_spec.width != 0.:
1850:                 self.glue_spec = self.glue_spec.copy()
1851:                 self.glue_spec.width *= SHRINK_FACTOR
1852: 
1853:     def grow(self):
1854:         Node.grow(self)
1855:         if self.glue_spec.width != 0.:
1856:             self.glue_spec = self.glue_spec.copy()
1857:             self.glue_spec.width *= GROW_FACTOR
1858: 
1859: class GlueSpec(object):
1860:     '''
1861:     See :class:`Glue`.
1862:     '''
1863:     def __init__(self, width=0., stretch=0., stretch_order=0, shrink=0., shrink_order=0):
1864:         self.width         = width
1865:         self.stretch       = stretch
1866:         self.stretch_order = stretch_order
1867:         self.shrink        = shrink
1868:         self.shrink_order  = shrink_order
1869: 
1870:     def copy(self):
1871:         return GlueSpec(
1872:             self.width,
1873:             self.stretch,
1874:             self.stretch_order,
1875:             self.shrink,
1876:             self.shrink_order)
1877: 
1878:     def factory(cls, glue_type):
1879:         return cls._types[glue_type]
1880:     factory = classmethod(factory)
1881: 
1882: GlueSpec._types = {
1883:     'fil':         GlueSpec(0., 1., 1, 0., 0),
1884:     'fill':        GlueSpec(0., 1., 2, 0., 0),
1885:     'filll':       GlueSpec(0., 1., 3, 0., 0),
1886:     'neg_fil':     GlueSpec(0., 0., 0, 1., 1),
1887:     'neg_fill':    GlueSpec(0., 0., 0, 1., 2),
1888:     'neg_filll':   GlueSpec(0., 0., 0, 1., 3),
1889:     'empty':       GlueSpec(0., 0., 0, 0., 0),
1890:     'ss':          GlueSpec(0., 1., 1, -1., 1)
1891: }
1892: 
1893: # Some convenient ways to get common kinds of glue
1894: 
1895: class Fil(Glue):
1896:     def __init__(self):
1897:         Glue.__init__(self, 'fil')
1898: 
1899: class Fill(Glue):
1900:     def __init__(self):
1901:         Glue.__init__(self, 'fill')
1902: 
1903: class Filll(Glue):
1904:     def __init__(self):
1905:         Glue.__init__(self, 'filll')
1906: 
1907: class NegFil(Glue):
1908:     def __init__(self):
1909:         Glue.__init__(self, 'neg_fil')
1910: 
1911: class NegFill(Glue):
1912:     def __init__(self):
1913:         Glue.__init__(self, 'neg_fill')
1914: 
1915: class NegFilll(Glue):
1916:     def __init__(self):
1917:         Glue.__init__(self, 'neg_filll')
1918: 
1919: class SsGlue(Glue):
1920:     def __init__(self):
1921:         Glue.__init__(self, 'ss')
1922: 
1923: class HCentered(Hlist):
1924:     '''
1925:     A convenience class to create an :class:`Hlist` whose contents are
1926:     centered within its enclosing box.
1927:     '''
1928:     def __init__(self, elements):
1929:         Hlist.__init__(self, [SsGlue()] + elements + [SsGlue()],
1930:                        do_kern=False)
1931: 
1932: class VCentered(Hlist):
1933:     '''
1934:     A convenience class to create a :class:`Vlist` whose contents are
1935:     centered within its enclosing box.
1936:     '''
1937:     def __init__(self, elements):
1938:         Vlist.__init__(self, [SsGlue()] + elements + [SsGlue()])
1939: 
1940: class Kern(Node):
1941:     '''
1942:     A :class:`Kern` node has a width field to specify a (normally
1943:     negative) amount of spacing. This spacing correction appears in
1944:     horizontal lists between letters like A and V when the font
1945:     designer said that it looks better to move them closer together or
1946:     further apart. A kern node can also appear in a vertical list,
1947:     when its *width* denotes additional spacing in the vertical
1948:     direction.
1949:     '''
1950:     height = 0
1951:     depth = 0
1952: 
1953:     def __init__(self, width):
1954:         Node.__init__(self)
1955:         self.width = width
1956: 
1957:     def __repr__(self):
1958:         return "k%.02f" % self.width
1959: 
1960:     def shrink(self):
1961:         Node.shrink(self)
1962:         if self.size < NUM_SIZE_LEVELS:
1963:             self.width *= SHRINK_FACTOR
1964: 
1965:     def grow(self):
1966:         Node.grow(self)
1967:         self.width *= GROW_FACTOR
1968: 
1969: class SubSuperCluster(Hlist):
1970:     '''
1971:     :class:`SubSuperCluster` is a sort of hack to get around that fact
1972:     that this code do a two-pass parse like TeX.  This lets us store
1973:     enough information in the hlist itself, namely the nucleus, sub-
1974:     and super-script, such that if another script follows that needs
1975:     to be attached, it can be reconfigured on the fly.
1976:     '''
1977:     def __init__(self):
1978:         self.nucleus = None
1979:         self.sub = None
1980:         self.super = None
1981:         Hlist.__init__(self, [])
1982: 
1983: class AutoHeightChar(Hlist):
1984:     '''
1985:     :class:`AutoHeightChar` will create a character as close to the
1986:     given height and depth as possible.  When using a font with
1987:     multiple height versions of some characters (such as the BaKoMa
1988:     fonts), the correct glyph will be selected, otherwise this will
1989:     always just return a scaled version of the glyph.
1990:     '''
1991:     def __init__(self, c, height, depth, state, always=False, factor=None):
1992:         alternatives = state.font_output.get_sized_alternatives_for_symbol(
1993:             state.font, c)
1994: 
1995:         xHeight = state.font_output.get_xheight(
1996:             state.font, state.fontsize, state.dpi)
1997: 
1998:         state = state.copy()
1999:         target_total = height + depth
2000:         for fontname, sym in alternatives:
2001:             state.font = fontname
2002:             char = Char(sym, state)
2003:             # Ensure that size 0 is chosen when the text is regular sized but
2004:             # with descender glyphs by subtracting 0.2 * xHeight
2005:             if char.height + char.depth >= target_total - 0.2 * xHeight:
2006:                 break
2007: 
2008:         shift = 0
2009:         if state.font != 0:
2010:             if factor is None:
2011:                 factor = (target_total) / (char.height + char.depth)
2012:             state.fontsize *= factor
2013:             char = Char(sym, state)
2014: 
2015:             shift = (depth - char.depth)
2016: 
2017:         Hlist.__init__(self, [char])
2018:         self.shift_amount = shift
2019: 
2020: class AutoWidthChar(Hlist):
2021:     '''
2022:     :class:`AutoWidthChar` will create a character as close to the
2023:     given width as possible.  When using a font with multiple width
2024:     versions of some characters (such as the BaKoMa fonts), the
2025:     correct glyph will be selected, otherwise this will always just
2026:     return a scaled version of the glyph.
2027:     '''
2028:     def __init__(self, c, width, state, always=False, char_class=Char):
2029:         alternatives = state.font_output.get_sized_alternatives_for_symbol(
2030:             state.font, c)
2031: 
2032:         state = state.copy()
2033:         for fontname, sym in alternatives:
2034:             state.font = fontname
2035:             char = char_class(sym, state)
2036:             if char.width >= width:
2037:                 break
2038: 
2039:         factor = width / char.width
2040:         state.fontsize *= factor
2041:         char = char_class(sym, state)
2042: 
2043:         Hlist.__init__(self, [char])
2044:         self.width = char.width
2045: 
2046: class Ship(object):
2047:     '''
2048:     Once the boxes have been set up, this sends them to output.  Since
2049:     boxes can be inside of boxes inside of boxes, the main work of
2050:     :class:`Ship` is done by two mutually recursive routines,
2051:     :meth:`hlist_out` and :meth:`vlist_out`, which traverse the
2052:     :class:`Hlist` nodes and :class:`Vlist` nodes inside of horizontal
2053:     and vertical boxes.  The global variables used in TeX to store
2054:     state as it processes have become member variables here.
2055:     '''
2056:     def __call__(self, ox, oy, box):
2057:         self.max_push    = 0 # Deepest nesting of push commands so far
2058:         self.cur_s       = 0
2059:         self.cur_v       = 0.
2060:         self.cur_h       = 0.
2061:         self.off_h       = ox
2062:         self.off_v       = oy + box.height
2063:         self.hlist_out(box)
2064: 
2065:     def clamp(value):
2066:         if value < -1000000000.:
2067:             return -1000000000.
2068:         if value > 1000000000.:
2069:             return 1000000000.
2070:         return value
2071:     clamp = staticmethod(clamp)
2072: 
2073:     def hlist_out(self, box):
2074:         cur_g         = 0
2075:         cur_glue      = 0.
2076:         glue_order    = box.glue_order
2077:         glue_sign     = box.glue_sign
2078:         base_line     = self.cur_v
2079:         left_edge     = self.cur_h
2080:         self.cur_s    += 1
2081:         self.max_push = max(self.cur_s, self.max_push)
2082:         clamp         = self.clamp
2083: 
2084:         for p in box.children:
2085:             if isinstance(p, Char):
2086:                 p.render(self.cur_h + self.off_h, self.cur_v + self.off_v)
2087:                 self.cur_h += p.width
2088:             elif isinstance(p, Kern):
2089:                 self.cur_h += p.width
2090:             elif isinstance(p, List):
2091:                 # node623
2092:                 if len(p.children) == 0:
2093:                     self.cur_h += p.width
2094:                 else:
2095:                     edge = self.cur_h
2096:                     self.cur_v = base_line + p.shift_amount
2097:                     if isinstance(p, Hlist):
2098:                         self.hlist_out(p)
2099:                     else:
2100:                         # p.vpack(box.height + box.depth, 'exactly')
2101:                         self.vlist_out(p)
2102:                     self.cur_h = edge + p.width
2103:                     self.cur_v = base_line
2104:             elif isinstance(p, Box):
2105:                 # node624
2106:                 rule_height = p.height
2107:                 rule_depth  = p.depth
2108:                 rule_width  = p.width
2109:                 if isinf(rule_height):
2110:                     rule_height = box.height
2111:                 if isinf(rule_depth):
2112:                     rule_depth = box.depth
2113:                 if rule_height > 0 and rule_width > 0:
2114:                     self.cur_v = baseline + rule_depth
2115:                     p.render(self.cur_h + self.off_h,
2116:                              self.cur_v + self.off_v,
2117:                              rule_width, rule_height)
2118:                     self.cur_v = baseline
2119:                 self.cur_h += rule_width
2120:             elif isinstance(p, Glue):
2121:                 # node625
2122:                 glue_spec = p.glue_spec
2123:                 rule_width = glue_spec.width - cur_g
2124:                 if glue_sign != 0: # normal
2125:                     if glue_sign == 1: # stretching
2126:                         if glue_spec.stretch_order == glue_order:
2127:                             cur_glue += glue_spec.stretch
2128:                             cur_g = np.round(clamp(float(box.glue_set) * cur_glue))
2129:                     elif glue_spec.shrink_order == glue_order:
2130:                         cur_glue += glue_spec.shrink
2131:                         cur_g = np.round(clamp(float(box.glue_set) * cur_glue))
2132:                 rule_width += cur_g
2133:                 self.cur_h += rule_width
2134:         self.cur_s -= 1
2135: 
2136:     def vlist_out(self, box):
2137:         cur_g         = 0
2138:         cur_glue      = 0.
2139:         glue_order    = box.glue_order
2140:         glue_sign     = box.glue_sign
2141:         self.cur_s    += 1
2142:         self.max_push = max(self.max_push, self.cur_s)
2143:         left_edge     = self.cur_h
2144:         self.cur_v    -= box.height
2145:         top_edge      = self.cur_v
2146:         clamp         = self.clamp
2147: 
2148:         for p in box.children:
2149:             if isinstance(p, Kern):
2150:                 self.cur_v += p.width
2151:             elif isinstance(p, List):
2152:                 if len(p.children) == 0:
2153:                     self.cur_v += p.height + p.depth
2154:                 else:
2155:                     self.cur_v += p.height
2156:                     self.cur_h = left_edge + p.shift_amount
2157:                     save_v = self.cur_v
2158:                     p.width = box.width
2159:                     if isinstance(p, Hlist):
2160:                         self.hlist_out(p)
2161:                     else:
2162:                         self.vlist_out(p)
2163:                     self.cur_v = save_v + p.depth
2164:                     self.cur_h = left_edge
2165:             elif isinstance(p, Box):
2166:                 rule_height = p.height
2167:                 rule_depth = p.depth
2168:                 rule_width = p.width
2169:                 if isinf(rule_width):
2170:                     rule_width = box.width
2171:                 rule_height += rule_depth
2172:                 if rule_height > 0 and rule_depth > 0:
2173:                     self.cur_v += rule_height
2174:                     p.render(self.cur_h + self.off_h,
2175:                              self.cur_v + self.off_v,
2176:                              rule_width, rule_height)
2177:             elif isinstance(p, Glue):
2178:                 glue_spec = p.glue_spec
2179:                 rule_height = glue_spec.width - cur_g
2180:                 if glue_sign != 0: # normal
2181:                     if glue_sign == 1: # stretching
2182:                         if glue_spec.stretch_order == glue_order:
2183:                             cur_glue += glue_spec.stretch
2184:                             cur_g = np.round(clamp(float(box.glue_set) * cur_glue))
2185:                     elif glue_spec.shrink_order == glue_order: # shrinking
2186:                         cur_glue += glue_spec.shrink
2187:                         cur_g = np.round(clamp(float(box.glue_set) * cur_glue))
2188:                 rule_height += cur_g
2189:                 self.cur_v += rule_height
2190:             elif isinstance(p, Char):
2191:                 raise RuntimeError("Internal mathtext error: Char node found in vlist")
2192:         self.cur_s -= 1
2193: 
2194: ship = Ship()
2195: 
2196: ##############################################################################
2197: # PARSER
2198: 
2199: def Error(msg):
2200:     '''
2201:     Helper class to raise parser errors.
2202:     '''
2203:     def raise_error(s, loc, toks):
2204:         raise ParseFatalException(s, loc, msg)
2205: 
2206:     empty = Empty()
2207:     empty.setParseAction(raise_error)
2208:     return empty
2209: 
2210: class Parser(object):
2211:     '''
2212:     This is the pyparsing-based parser for math expressions.  It
2213:     actually parses full strings *containing* math expressions, in
2214:     that raw text may also appear outside of pairs of ``$``.
2215: 
2216:     The grammar is based directly on that in TeX, though it cuts a few
2217:     corners.
2218:     '''
2219: 
2220:     _math_style_dict = dict(displaystyle=0, textstyle=1,
2221:                             scriptstyle=2, scriptscriptstyle=3)
2222: 
2223:     _binary_operators = set('''
2224:       + * -
2225:       \\pm             \\sqcap                   \\rhd
2226:       \\mp             \\sqcup                   \\unlhd
2227:       \\times          \\vee                     \\unrhd
2228:       \\div            \\wedge                   \\oplus
2229:       \\ast            \\setminus                \\ominus
2230:       \\star           \\wr                      \\otimes
2231:       \\circ           \\diamond                 \\oslash
2232:       \\bullet         \\bigtriangleup           \\odot
2233:       \\cdot           \\bigtriangledown         \\bigcirc
2234:       \\cap            \\triangleleft            \\dagger
2235:       \\cup            \\triangleright           \\ddagger
2236:       \\uplus          \\lhd                     \\amalg'''.split())
2237: 
2238:     _relation_symbols = set('''
2239:       = < > :
2240:       \\leq            \\geq             \\equiv           \\models
2241:       \\prec           \\succ            \\sim             \\perp
2242:       \\preceq         \\succeq          \\simeq           \\mid
2243:       \\ll             \\gg              \\asymp           \\parallel
2244:       \\subset         \\supset          \\approx          \\bowtie
2245:       \\subseteq       \\supseteq        \\cong            \\Join
2246:       \\sqsubset       \\sqsupset        \\neq             \\smile
2247:       \\sqsubseteq     \\sqsupseteq      \\doteq           \\frown
2248:       \\in             \\ni              \\propto          \\vdash
2249:       \\dashv          \\dots            \\dotplus         \\doteqdot'''.split())
2250: 
2251:     _arrow_symbols = set('''
2252:       \\leftarrow              \\longleftarrow           \\uparrow
2253:       \\Leftarrow              \\Longleftarrow           \\Uparrow
2254:       \\rightarrow             \\longrightarrow          \\downarrow
2255:       \\Rightarrow             \\Longrightarrow          \\Downarrow
2256:       \\leftrightarrow         \\longleftrightarrow      \\updownarrow
2257:       \\Leftrightarrow         \\Longleftrightarrow      \\Updownarrow
2258:       \\mapsto                 \\longmapsto              \\nearrow
2259:       \\hookleftarrow          \\hookrightarrow          \\searrow
2260:       \\leftharpoonup          \\rightharpoonup          \\swarrow
2261:       \\leftharpoondown        \\rightharpoondown        \\nwarrow
2262:       \\rightleftharpoons      \\leadsto'''.split())
2263: 
2264:     _spaced_symbols = _binary_operators | _relation_symbols | _arrow_symbols
2265: 
2266:     _punctuation_symbols = set(r', ; . ! \ldotp \cdotp'.split())
2267: 
2268:     _overunder_symbols = set(r'''
2269:        \sum \prod \coprod \bigcap \bigcup \bigsqcup \bigvee
2270:        \bigwedge \bigodot \bigotimes \bigoplus \biguplus
2271:        '''.split())
2272: 
2273:     _overunder_functions = set(
2274:         r"lim liminf limsup sup max min".split())
2275: 
2276:     _dropsub_symbols = set(r'''\int \oint'''.split())
2277: 
2278:     _fontnames = set("rm cal it tt sf bf default bb frak circled scr regular".split())
2279: 
2280:     _function_names = set('''
2281:       arccos csc ker min arcsin deg lg Pr arctan det lim sec arg dim
2282:       liminf sin cos exp limsup sinh cosh gcd ln sup cot hom log tan
2283:       coth inf max tanh'''.split())
2284: 
2285:     _ambi_delim = set('''
2286:       | \\| / \\backslash \\uparrow \\downarrow \\updownarrow \\Uparrow
2287:       \\Downarrow \\Updownarrow . \\vert \\Vert \\\\|'''.split())
2288: 
2289:     _left_delim = set(r"( [ \{ < \lfloor \langle \lceil".split())
2290: 
2291:     _right_delim = set(r") ] \} > \rfloor \rangle \rceil".split())
2292: 
2293:     def __init__(self):
2294:         p = Bunch()
2295:         # All forward declarations are here
2296:         p.accent           = Forward()
2297:         p.ambi_delim       = Forward()
2298:         p.apostrophe       = Forward()
2299:         p.auto_delim       = Forward()
2300:         p.binom            = Forward()
2301:         p.bslash           = Forward()
2302:         p.c_over_c         = Forward()
2303:         p.customspace      = Forward()
2304:         p.end_group        = Forward()
2305:         p.float_literal    = Forward()
2306:         p.font             = Forward()
2307:         p.frac             = Forward()
2308:         p.dfrac            = Forward()
2309:         p.function         = Forward()
2310:         p.genfrac          = Forward()
2311:         p.group            = Forward()
2312:         p.int_literal      = Forward()
2313:         p.latexfont        = Forward()
2314:         p.lbracket         = Forward()
2315:         p.left_delim       = Forward()
2316:         p.lbrace           = Forward()
2317:         p.main             = Forward()
2318:         p.math             = Forward()
2319:         p.math_string      = Forward()
2320:         p.non_math         = Forward()
2321:         p.operatorname     = Forward()
2322:         p.overline         = Forward()
2323:         p.placeable        = Forward()
2324:         p.rbrace           = Forward()
2325:         p.rbracket         = Forward()
2326:         p.required_group   = Forward()
2327:         p.right_delim      = Forward()
2328:         p.right_delim_safe = Forward()
2329:         p.simple           = Forward()
2330:         p.simple_group     = Forward()
2331:         p.single_symbol    = Forward()
2332:         p.snowflake        = Forward()
2333:         p.space            = Forward()
2334:         p.sqrt             = Forward()
2335:         p.stackrel         = Forward()
2336:         p.start_group      = Forward()
2337:         p.subsuper         = Forward()
2338:         p.subsuperop       = Forward()
2339:         p.symbol           = Forward()
2340:         p.symbol_name      = Forward()
2341:         p.token            = Forward()
2342:         p.unknown_symbol   = Forward()
2343: 
2344:         # Set names on everything -- very useful for debugging
2345:         for key, val in vars(p).items():
2346:             if not key.startswith('_'):
2347:                 val.setName(key)
2348: 
2349:         p.float_literal <<= Regex(r"[-+]?([0-9]+\.?[0-9]*|\.[0-9]+)")
2350:         p.int_literal   <<= Regex("[-+]?[0-9]+")
2351: 
2352:         p.lbrace        <<= Literal('{').suppress()
2353:         p.rbrace        <<= Literal('}').suppress()
2354:         p.lbracket      <<= Literal('[').suppress()
2355:         p.rbracket      <<= Literal(']').suppress()
2356:         p.bslash        <<= Literal('\\')
2357: 
2358:         p.space         <<= oneOf(list(self._space_widths))
2359:         p.customspace   <<= (Suppress(Literal(r'\hspace'))
2360:                           - ((p.lbrace + p.float_literal + p.rbrace)
2361:                             | Error(r"Expected \hspace{n}")))
2362: 
2363:         unicode_range =  "\U00000080-\U0001ffff"
2364:         p.single_symbol <<= Regex(r"([a-zA-Z0-9 +\-*/<>=:,.;!\?&'@()\[\]|%s])|(\\[%%${}\[\]_|])" %
2365:                                unicode_range)
2366:         p.snowflake     <<= Suppress(p.bslash) + oneOf(self._snowflake)
2367:         p.symbol_name   <<= (Combine(p.bslash + oneOf(list(tex2uni))) +
2368:                           FollowedBy(Regex("[^A-Za-z]").leaveWhitespace() | StringEnd()))
2369:         p.symbol        <<= (p.single_symbol | p.symbol_name).leaveWhitespace()
2370: 
2371:         p.apostrophe    <<= Regex("'+")
2372: 
2373:         p.c_over_c      <<= Suppress(p.bslash) + oneOf(list(self._char_over_chars))
2374: 
2375:         p.accent        <<= Group(
2376:                              Suppress(p.bslash)
2377:                            + oneOf(list(self._accent_map) + list(self._wide_accents))
2378:                            - p.placeable
2379:                          )
2380: 
2381:         p.function      <<= Suppress(p.bslash) + oneOf(list(self._function_names))
2382: 
2383:         p.start_group   <<= Optional(p.latexfont) + p.lbrace
2384:         p.end_group     <<= p.rbrace.copy()
2385:         p.simple_group  <<= Group(p.lbrace + ZeroOrMore(p.token) + p.rbrace)
2386:         p.required_group<<= Group(p.lbrace + OneOrMore(p.token) + p.rbrace)
2387:         p.group         <<= Group(p.start_group + ZeroOrMore(p.token) + p.end_group)
2388: 
2389:         p.font          <<= Suppress(p.bslash) + oneOf(list(self._fontnames))
2390:         p.latexfont     <<= Suppress(p.bslash) + oneOf(['math' + x for x in self._fontnames])
2391: 
2392:         p.frac          <<= Group(
2393:                              Suppress(Literal(r"\frac"))
2394:                            - ((p.required_group + p.required_group) | Error(r"Expected \frac{num}{den}"))
2395:                          )
2396: 
2397:         p.dfrac         <<= Group(
2398:                              Suppress(Literal(r"\dfrac"))
2399:                            - ((p.required_group + p.required_group) | Error(r"Expected \dfrac{num}{den}"))
2400:                          )
2401: 
2402:         p.stackrel      <<= Group(
2403:                              Suppress(Literal(r"\stackrel"))
2404:                            - ((p.required_group + p.required_group) | Error(r"Expected \stackrel{num}{den}"))
2405:                          )
2406: 
2407:         p.binom         <<= Group(
2408:                              Suppress(Literal(r"\binom"))
2409:                            - ((p.required_group + p.required_group) | Error(r"Expected \binom{num}{den}"))
2410:                          )
2411: 
2412:         p.ambi_delim    <<= oneOf(list(self._ambi_delim))
2413:         p.left_delim    <<= oneOf(list(self._left_delim))
2414:         p.right_delim   <<= oneOf(list(self._right_delim))
2415:         p.right_delim_safe <<= oneOf(list(self._right_delim - {'}'}) + [r'\}'])
2416: 
2417:         p.genfrac       <<= Group(
2418:                              Suppress(Literal(r"\genfrac"))
2419:                            - (((p.lbrace + Optional(p.ambi_delim | p.left_delim, default='') + p.rbrace)
2420:                            +   (p.lbrace + Optional(p.ambi_delim | p.right_delim_safe, default='') + p.rbrace)
2421:                            +   (p.lbrace + p.float_literal + p.rbrace)
2422:                            +   p.simple_group + p.required_group + p.required_group)
2423:                            | Error(r"Expected \genfrac{ldelim}{rdelim}{rulesize}{style}{num}{den}"))
2424:                          )
2425: 
2426:         p.sqrt          <<= Group(
2427:                              Suppress(Literal(r"\sqrt"))
2428:                            - ((Optional(p.lbracket + p.int_literal + p.rbracket, default=None)
2429:                               + p.required_group)
2430:                            | Error("Expected \\sqrt{value}"))
2431:                          )
2432: 
2433:         p.overline      <<= Group(
2434:                              Suppress(Literal(r"\overline"))
2435:                            - (p.required_group | Error("Expected \\overline{value}"))
2436:                          )
2437: 
2438:         p.unknown_symbol<<= Combine(p.bslash + Regex("[A-Za-z]*"))
2439: 
2440:         p.operatorname  <<= Group(
2441:                              Suppress(Literal(r"\operatorname"))
2442:                            - ((p.lbrace + ZeroOrMore(p.simple | p.unknown_symbol) + p.rbrace)
2443:                               | Error("Expected \\operatorname{value}"))
2444:                          )
2445: 
2446:         p.placeable     <<= ( p.snowflake # this needs to be before accent so named symbols
2447:                                           # that are prefixed with an accent name work
2448:                          | p.accent # Must be before symbol as all accents are symbols
2449:                          | p.symbol # Must be third to catch all named symbols and single chars not in a group
2450:                          | p.c_over_c
2451:                          | p.function
2452:                          | p.group
2453:                          | p.frac
2454:                          | p.dfrac
2455:                          | p.stackrel
2456:                          | p.binom
2457:                          | p.genfrac
2458:                          | p.sqrt
2459:                          | p.overline
2460:                          | p.operatorname
2461:                          )
2462: 
2463:         p.simple        <<= ( p.space
2464:                          | p.customspace
2465:                          | p.font
2466:                          | p.subsuper
2467:                          )
2468: 
2469:         p.subsuperop    <<= oneOf(["_", "^"])
2470: 
2471:         p.subsuper      <<= Group(
2472:                              (Optional(p.placeable) + OneOrMore(p.subsuperop - p.placeable) + Optional(p.apostrophe))
2473:                            | (p.placeable + Optional(p.apostrophe))
2474:                            | p.apostrophe
2475:                          )
2476: 
2477:         p.token         <<= ( p.simple
2478:                          | p.auto_delim
2479:                          | p.unknown_symbol # Must be last
2480:                          )
2481: 
2482:         p.auto_delim    <<= (Suppress(Literal(r"\left"))
2483:                           - ((p.left_delim | p.ambi_delim) | Error("Expected a delimiter"))
2484:                           + Group(ZeroOrMore(p.simple | p.auto_delim))
2485:                           + Suppress(Literal(r"\right"))
2486:                           - ((p.right_delim | p.ambi_delim) | Error("Expected a delimiter"))
2487:                          )
2488: 
2489:         p.math          <<= OneOrMore(p.token)
2490: 
2491:         p.math_string   <<= QuotedString('$', '\\', unquoteResults=False)
2492: 
2493:         p.non_math      <<= Regex(r"(?:(?:\\[$])|[^$])*").leaveWhitespace()
2494: 
2495:         p.main          <<= (p.non_math + ZeroOrMore(p.math_string + p.non_math)) + StringEnd()
2496: 
2497:         # Set actions
2498:         for key, val in vars(p).items():
2499:             if not key.startswith('_'):
2500:                 if hasattr(self, key):
2501:                     val.setParseAction(getattr(self, key))
2502: 
2503:         self._expression = p.main
2504:         self._math_expression = p.math
2505: 
2506:     def parse(self, s, fonts_object, fontsize, dpi):
2507:         '''
2508:         Parse expression *s* using the given *fonts_object* for
2509:         output, at the given *fontsize* and *dpi*.
2510: 
2511:         Returns the parse tree of :class:`Node` instances.
2512:         '''
2513:         self._state_stack = [self.State(fonts_object, 'default', 'rm', fontsize, dpi)]
2514:         self._em_width_cache = {}
2515:         try:
2516:             result = self._expression.parseString(s)
2517:         except ParseBaseException as err:
2518:             raise ValueError("\n".join([
2519:                         "",
2520:                         err.line,
2521:                         " " * (err.column - 1) + "^",
2522:                         six.text_type(err)]))
2523:         self._state_stack = None
2524:         self._em_width_cache = {}
2525:         self._expression.resetCache()
2526:         return result[0]
2527: 
2528:     # The state of the parser is maintained in a stack.  Upon
2529:     # entering and leaving a group { } or math/non-math, the stack
2530:     # is pushed and popped accordingly.  The current state always
2531:     # exists in the top element of the stack.
2532:     class State(object):
2533:         '''
2534:         Stores the state of the parser.
2535: 
2536:         States are pushed and popped from a stack as necessary, and
2537:         the "current" state is always at the top of the stack.
2538:         '''
2539:         def __init__(self, font_output, font, font_class, fontsize, dpi):
2540:             self.font_output = font_output
2541:             self._font = font
2542:             self.font_class = font_class
2543:             self.fontsize = fontsize
2544:             self.dpi = dpi
2545: 
2546:         def copy(self):
2547:             return Parser.State(
2548:                 self.font_output,
2549:                 self.font,
2550:                 self.font_class,
2551:                 self.fontsize,
2552:                 self.dpi)
2553: 
2554:         def _get_font(self):
2555:             return self._font
2556:         def _set_font(self, name):
2557:             if name in ('rm', 'it', 'bf'):
2558:                 self.font_class = name
2559:             self._font = name
2560:         font = property(_get_font, _set_font)
2561: 
2562:     def get_state(self):
2563:         '''
2564:         Get the current :class:`State` of the parser.
2565:         '''
2566:         return self._state_stack[-1]
2567: 
2568:     def pop_state(self):
2569:         '''
2570:         Pop a :class:`State` off of the stack.
2571:         '''
2572:         self._state_stack.pop()
2573: 
2574:     def push_state(self):
2575:         '''
2576:         Push a new :class:`State` onto the stack which is just a copy
2577:         of the current state.
2578:         '''
2579:         self._state_stack.append(self.get_state().copy())
2580: 
2581:     def main(self, s, loc, toks):
2582:         #~ print "finish", toks
2583:         return [Hlist(toks)]
2584: 
2585:     def math_string(self, s, loc, toks):
2586:         # print "math_string", toks[0][1:-1]
2587:         return self._math_expression.parseString(toks[0][1:-1])
2588: 
2589:     def math(self, s, loc, toks):
2590:         #~ print "math", toks
2591:         hlist = Hlist(toks)
2592:         self.pop_state()
2593:         return [hlist]
2594: 
2595:     def non_math(self, s, loc, toks):
2596:         #~ print "non_math", toks
2597:         s = toks[0].replace(r'\$', '$')
2598:         symbols = [Char(c, self.get_state(), math=False) for c in s]
2599:         hlist = Hlist(symbols)
2600:         # We're going into math now, so set font to 'it'
2601:         self.push_state()
2602:         self.get_state().font = rcParams['mathtext.default']
2603:         return [hlist]
2604: 
2605:     def _make_space(self, percentage):
2606:         # All spaces are relative to em width
2607:         state = self.get_state()
2608:         key = (state.font, state.fontsize, state.dpi)
2609:         width = self._em_width_cache.get(key)
2610:         if width is None:
2611:             metrics = state.font_output.get_metrics(
2612:                 state.font, rcParams['mathtext.default'], 'm', state.fontsize, state.dpi)
2613:             width = metrics.advance
2614:             self._em_width_cache[key] = width
2615:         return Kern(width * percentage)
2616: 
2617:     _space_widths = { r'\,'         : 0.16667,  # 3/18 em = 3 mu
2618:                       r'\thinspace' : 0.16667,  # 3/18 em = 3 mu
2619:                       r'\/'         : 0.16667,  # 3/18 em = 3 mu
2620:                       r'\>'         : 0.22222,  # 4/18 em = 4 mu
2621:                       r'\:'         : 0.22222,  # 4/18 em = 4 mu
2622:                       r'\;'         : 0.27778,  # 5/18 em = 5 mu
2623:                       r'\ '         : 0.33333,  # 6/18 em = 6 mu
2624:                       r'\enspace'   : 0.5,      # 9/18 em = 9 mu
2625:                       r'\quad'      : 1,        # 1 em = 18 mu
2626:                       r'\qquad'     : 2,        # 2 em = 36 mu
2627:                       r'\!'         : -0.16667, # -3/18 em = -3 mu
2628:                       }
2629:     def space(self, s, loc, toks):
2630:         assert(len(toks)==1)
2631:         num = self._space_widths[toks[0]]
2632:         box = self._make_space(num)
2633:         return [box]
2634: 
2635:     def customspace(self, s, loc, toks):
2636:         return [self._make_space(float(toks[0]))]
2637: 
2638:     def symbol(self, s, loc, toks):
2639:         # print "symbol", toks
2640:         c = toks[0]
2641:         try:
2642:             char = Char(c, self.get_state())
2643:         except ValueError:
2644:             raise ParseFatalException(s, loc, "Unknown symbol: %s" % c)
2645: 
2646:         if c in self._spaced_symbols:
2647:             # iterate until we find previous character, needed for cases
2648:             # such as ${ -2}$, $ -2$, or $   -2$.
2649:             for i in six.moves.xrange(1, loc + 1):
2650:                 prev_char = s[loc-i]
2651:                 if prev_char != ' ':
2652:                     break
2653:             # Binary operators at start of string should not be spaced
2654:             if (c in self._binary_operators and
2655:                     (len(s[:loc].split()) == 0 or prev_char == '{' or
2656:                         prev_char in self._left_delim)):
2657:                 return [char]
2658:             else:
2659:                 return [Hlist([self._make_space(0.2),
2660:                                char,
2661:                                self._make_space(0.2)] ,
2662:                                do_kern = True)]
2663:         elif c in self._punctuation_symbols:
2664: 
2665:             # Do not space commas between brackets
2666:             if c == ',':
2667:                 prev_char, next_char = '', ''
2668:                 for i in six.moves.xrange(1, loc + 1):
2669:                     prev_char = s[loc - i]
2670:                     if prev_char != ' ':
2671:                         break
2672:                 for i in six.moves.xrange(1, len(s) - loc):
2673:                     next_char = s[loc + i]
2674:                     if next_char != ' ':
2675:                         break
2676:                 if (prev_char == '{' and next_char == '}'):
2677:                     return [char]
2678: 
2679:             # Do not space dots as decimal separators
2680:             if (c == '.' and s[loc - 1].isdigit() and s[loc + 1].isdigit()):
2681:                 return [char]
2682:             else:
2683:                 return [Hlist([char,
2684:                                self._make_space(0.2)],
2685:                                do_kern = True)]
2686:         return [char]
2687: 
2688:     snowflake = symbol
2689: 
2690:     def unknown_symbol(self, s, loc, toks):
2691:         # print "symbol", toks
2692:         c = toks[0]
2693:         raise ParseFatalException(s, loc, "Unknown symbol: %s" % c)
2694: 
2695:     _char_over_chars = {
2696:         # The first 2 entries in the tuple are (font, char, sizescale) for
2697:         # the two symbols under and over.  The third element is the space
2698:         # (in multiples of underline height)
2699:         r'AA': (('it', 'A', 1.0), (None, '\\circ', 0.5), 0.0),
2700:     }
2701: 
2702:     def c_over_c(self, s, loc, toks):
2703:         sym = toks[0]
2704:         state = self.get_state()
2705:         thickness = state.font_output.get_underline_thickness(
2706:             state.font, state.fontsize, state.dpi)
2707: 
2708:         under_desc, over_desc, space = \
2709:             self._char_over_chars.get(sym, (None, None, 0.0))
2710:         if under_desc is None:
2711:             raise ParseFatalException("Error parsing symbol")
2712: 
2713:         over_state = state.copy()
2714:         if over_desc[0] is not None:
2715:             over_state.font = over_desc[0]
2716:         over_state.fontsize *= over_desc[2]
2717:         over = Accent(over_desc[1], over_state)
2718: 
2719:         under_state = state.copy()
2720:         if under_desc[0] is not None:
2721:             under_state.font = under_desc[0]
2722:         under_state.fontsize *= under_desc[2]
2723:         under = Char(under_desc[1], under_state)
2724: 
2725:         width = max(over.width, under.width)
2726: 
2727:         over_centered = HCentered([over])
2728:         over_centered.hpack(width, 'exactly')
2729: 
2730:         under_centered = HCentered([under])
2731:         under_centered.hpack(width, 'exactly')
2732: 
2733:         return Vlist([
2734:                 over_centered,
2735:                 Vbox(0., thickness * space),
2736:                 under_centered
2737:                 ])
2738: 
2739:     _accent_map = {
2740:         r'hat'   : r'\circumflexaccent',
2741:         r'breve' : r'\combiningbreve',
2742:         r'bar'   : r'\combiningoverline',
2743:         r'grave' : r'\combininggraveaccent',
2744:         r'acute' : r'\combiningacuteaccent',
2745:         r'tilde' : r'\combiningtilde',
2746:         r'dot'   : r'\combiningdotabove',
2747:         r'ddot'  : r'\combiningdiaeresis',
2748:         r'vec'   : r'\combiningrightarrowabove',
2749:         r'"'     : r'\combiningdiaeresis',
2750:         r"`"     : r'\combininggraveaccent',
2751:         r"'"     : r'\combiningacuteaccent',
2752:         r'~'     : r'\combiningtilde',
2753:         r'.'     : r'\combiningdotabove',
2754:         r'^'     : r'\circumflexaccent',
2755:         r'overrightarrow' : r'\rightarrow',
2756:         r'overleftarrow'  : r'\leftarrow',
2757:         r'mathring' : r'\circ'
2758:         }
2759: 
2760:     _wide_accents = set(r"widehat widetilde widebar".split())
2761: 
2762:     # make a lambda and call it to get the namespace right
2763:     _snowflake = (lambda am: [p for p in tex2uni if
2764:                               any(p.startswith(a) and a != p for a in am)]
2765:                   ) (set(_accent_map))
2766: 
2767:     def accent(self, s, loc, toks):
2768:         assert(len(toks)==1)
2769:         state = self.get_state()
2770:         thickness = state.font_output.get_underline_thickness(
2771:             state.font, state.fontsize, state.dpi)
2772:         if len(toks[0]) != 2:
2773:             raise ParseFatalException("Error parsing accent")
2774:         accent, sym = toks[0]
2775:         if accent in self._wide_accents:
2776:             accent_box = AutoWidthChar(
2777:                 '\\' + accent, sym.width, state, char_class=Accent)
2778:         else:
2779:             accent_box = Accent(self._accent_map[accent], state)
2780:         if accent == 'mathring':
2781:             accent_box.shrink()
2782:             accent_box.shrink()
2783:         centered = HCentered([Hbox(sym.width / 4.0), accent_box])
2784:         centered.hpack(sym.width, 'exactly')
2785:         return Vlist([
2786:                 centered,
2787:                 Vbox(0., thickness * 2.0),
2788:                 Hlist([sym])
2789:                 ])
2790: 
2791:     def function(self, s, loc, toks):
2792:         #~ print "function", toks
2793:         self.push_state()
2794:         state = self.get_state()
2795:         state.font = 'rm'
2796:         hlist = Hlist([Char(c, state) for c in toks[0]])
2797:         self.pop_state()
2798:         hlist.function_name = toks[0]
2799:         return hlist
2800: 
2801:     def operatorname(self, s, loc, toks):
2802:         self.push_state()
2803:         state = self.get_state()
2804:         state.font = 'rm'
2805:         # Change the font of Chars, but leave Kerns alone
2806:         for c in toks[0]:
2807:             if isinstance(c, Char):
2808:                 c.font = 'rm'
2809:                 c._update_metrics()
2810:         self.pop_state()
2811:         return Hlist(toks[0])
2812: 
2813:     def start_group(self, s, loc, toks):
2814:         self.push_state()
2815:         # Deal with LaTeX-style font tokens
2816:         if len(toks):
2817:             self.get_state().font = toks[0][4:]
2818:         return []
2819: 
2820:     def group(self, s, loc, toks):
2821:         grp = Hlist(toks[0])
2822:         return [grp]
2823:     required_group = simple_group = group
2824: 
2825:     def end_group(self, s, loc, toks):
2826:         self.pop_state()
2827:         return []
2828: 
2829:     def font(self, s, loc, toks):
2830:         assert(len(toks)==1)
2831:         name = toks[0]
2832:         self.get_state().font = name
2833:         return []
2834: 
2835:     def is_overunder(self, nucleus):
2836:         if isinstance(nucleus, Char):
2837:             return nucleus.c in self._overunder_symbols
2838:         elif isinstance(nucleus, Hlist) and hasattr(nucleus, 'function_name'):
2839:             return nucleus.function_name in self._overunder_functions
2840:         return False
2841: 
2842:     def is_dropsub(self, nucleus):
2843:         if isinstance(nucleus, Char):
2844:             return nucleus.c in self._dropsub_symbols
2845:         return False
2846: 
2847:     def is_slanted(self, nucleus):
2848:         if isinstance(nucleus, Char):
2849:             return nucleus.is_slanted()
2850:         return False
2851: 
2852:     def is_between_brackets(self, s, loc):
2853:         return False
2854: 
2855:     def subsuper(self, s, loc, toks):
2856:         assert(len(toks)==1)
2857: 
2858:         nucleus = None
2859:         sub = None
2860:         super = None
2861: 
2862:         # Pick all of the apostrophes out, including first apostrophes that have
2863:         # been parsed as characters
2864:         napostrophes = 0
2865:         new_toks = []
2866:         for tok in toks[0]:
2867:             if isinstance(tok, six.string_types) and tok not in ('^', '_'):
2868:                 napostrophes += len(tok)
2869:             elif isinstance(tok, Char) and tok.c == "'":
2870:                 napostrophes += 1
2871:             else:
2872:                 new_toks.append(tok)
2873:         toks = new_toks
2874: 
2875:         if len(toks) == 0:
2876:             assert napostrophes
2877:             nucleus = Hbox(0.0)
2878:         elif len(toks) == 1:
2879:             if not napostrophes:
2880:                 return toks[0] # .asList()
2881:             else:
2882:                 nucleus = toks[0]
2883:         elif len(toks) in (2, 3):
2884:             # single subscript or superscript
2885:             nucleus = toks[0] if len(toks) == 3 else Hbox(0.0)
2886:             op, next = toks[-2:]
2887:             if op == '_':
2888:                 sub = next
2889:             else:
2890:                 super = next
2891:         elif len(toks) in (4, 5):
2892:             # subscript and superscript
2893:             nucleus = toks[0] if len(toks) == 5 else Hbox(0.0)
2894:             op1, next1, op2, next2 = toks[-4:]
2895:             if op1 == op2:
2896:                 if op1 == '_':
2897:                     raise ParseFatalException("Double subscript")
2898:                 else:
2899:                     raise ParseFatalException("Double superscript")
2900:             if op1 == '_':
2901:                 sub = next1
2902:                 super = next2
2903:             else:
2904:                 super = next1
2905:                 sub = next2
2906:         else:
2907:             raise ParseFatalException(
2908:                 "Subscript/superscript sequence is too long. "
2909:                 "Use braces { } to remove ambiguity.")
2910: 
2911:         state = self.get_state()
2912:         rule_thickness = state.font_output.get_underline_thickness(
2913:             state.font, state.fontsize, state.dpi)
2914:         xHeight = state.font_output.get_xheight(
2915:             state.font, state.fontsize, state.dpi)
2916: 
2917:         if napostrophes:
2918:             if super is None:
2919:                 super = Hlist([])
2920:             for i in range(napostrophes):
2921:                 super.children.extend(self.symbol(s, loc, ['\\prime']))
2922:             # kern() and hpack() needed to get the metrics right after extending
2923:             super.kern()
2924:             super.hpack()
2925: 
2926:         # Handle over/under symbols, such as sum or integral
2927:         if self.is_overunder(nucleus):
2928:             vlist = []
2929:             shift = 0.
2930:             width = nucleus.width
2931:             if super is not None:
2932:                 super.shrink()
2933:                 width = max(width, super.width)
2934:             if sub is not None:
2935:                 sub.shrink()
2936:                 width = max(width, sub.width)
2937: 
2938:             if super is not None:
2939:                 hlist = HCentered([super])
2940:                 hlist.hpack(width, 'exactly')
2941:                 vlist.extend([hlist, Kern(rule_thickness * 3.0)])
2942:             hlist = HCentered([nucleus])
2943:             hlist.hpack(width, 'exactly')
2944:             vlist.append(hlist)
2945:             if sub is not None:
2946:                 hlist = HCentered([sub])
2947:                 hlist.hpack(width, 'exactly')
2948:                 vlist.extend([Kern(rule_thickness * 3.0), hlist])
2949:                 shift = hlist.height
2950:             vlist = Vlist(vlist)
2951:             vlist.shift_amount = shift + nucleus.depth
2952:             result = Hlist([vlist])
2953:             return [result]
2954: 
2955:         # We remove kerning on the last character for consistency (otherwise it
2956:         # will compute kerning based on non-shrinked characters and may put them
2957:         # too close together when superscripted)
2958:         # We change the width of the last character to match the advance to
2959:         # consider some fonts with weird metrics: e.g. stix's f has a width of
2960:         # 7.75 and a kerning of -4.0 for an advance of 3.72, and we want to put
2961:         # the superscript at the advance
2962:         last_char = nucleus
2963:         if isinstance(nucleus, Hlist):
2964:             new_children = nucleus.children
2965:             if len(new_children):
2966:                 # remove last kern
2967:                 if (isinstance(new_children[-1],Kern) and
2968:                         hasattr(new_children[-2], '_metrics')):
2969:                     new_children = new_children[:-1]
2970:                 last_char = new_children[-1]
2971:                 if hasattr(last_char, '_metrics'):
2972:                     last_char.width = last_char._metrics.advance
2973:             # create new Hlist without kerning
2974:             nucleus = Hlist(new_children, do_kern=False)
2975:         else:
2976:             if isinstance(nucleus, Char):
2977:                 last_char.width = last_char._metrics.advance
2978:             nucleus = Hlist([nucleus])
2979: 
2980:         # Handle regular sub/superscripts
2981:         constants = _get_font_constant_set(state)
2982:         lc_height   = last_char.height
2983:         lc_baseline = 0
2984:         if self.is_dropsub(last_char):
2985:             lc_baseline = last_char.depth
2986: 
2987:         # Compute kerning for sub and super
2988:         superkern = constants.delta * xHeight
2989:         subkern = constants.delta * xHeight
2990:         if self.is_slanted(last_char):
2991:             superkern += constants.delta * xHeight
2992:             superkern += (constants.delta_slanted *
2993:                           (lc_height - xHeight * 2. / 3.))
2994:             if self.is_dropsub(last_char):
2995:                 subkern = (3 * constants.delta -
2996:                            constants.delta_integral) * lc_height
2997:                 superkern = (3 * constants.delta +
2998:                              constants.delta_integral) * lc_height
2999:             else:
3000:                 subkern = 0
3001: 
3002:         if super is None:
3003:             # node757
3004:             x = Hlist([Kern(subkern), sub])
3005:             x.shrink()
3006:             if self.is_dropsub(last_char):
3007:                 shift_down = lc_baseline + constants.subdrop * xHeight
3008:             else:
3009:                 shift_down = constants.sub1 * xHeight
3010:             x.shift_amount = shift_down
3011:         else:
3012:             x = Hlist([Kern(superkern), super])
3013:             x.shrink()
3014:             if self.is_dropsub(last_char):
3015:                 shift_up = lc_height - constants.subdrop * xHeight
3016:             else:
3017:                 shift_up = constants.sup1 * xHeight
3018:             if sub is None:
3019:                 x.shift_amount = -shift_up
3020:             else: # Both sub and superscript
3021:                 y = Hlist([Kern(subkern),sub])
3022:                 y.shrink()
3023:                 if self.is_dropsub(last_char):
3024:                     shift_down = lc_baseline + constants.subdrop * xHeight
3025:                 else:
3026:                     shift_down = constants.sub2 * xHeight
3027:                 # If sub and superscript collide, move super up
3028:                 clr = (2.0 * rule_thickness -
3029:                        ((shift_up - x.depth) - (y.height - shift_down)))
3030:                 if clr > 0.:
3031:                     shift_up += clr
3032:                 x = Vlist([x,
3033:                            Kern((shift_up - x.depth) - (y.height - shift_down)),
3034:                            y])
3035:                 x.shift_amount = shift_down
3036: 
3037:         if not self.is_dropsub(last_char):
3038:             x.width += constants.script_space * xHeight
3039:         result = Hlist([nucleus, x])
3040: 
3041:         return [result]
3042: 
3043:     def _genfrac(self, ldelim, rdelim, rule, style, num, den):
3044:         state = self.get_state()
3045:         thickness = state.font_output.get_underline_thickness(
3046:             state.font, state.fontsize, state.dpi)
3047: 
3048:         rule = float(rule)
3049: 
3050:         # If style != displaystyle == 0, shrink the num and den
3051:         if style != self._math_style_dict['displaystyle']:
3052:             num.shrink()
3053:             den.shrink()
3054:         cnum = HCentered([num])
3055:         cden = HCentered([den])
3056:         width = max(num.width, den.width)
3057:         cnum.hpack(width, 'exactly')
3058:         cden.hpack(width, 'exactly')
3059:         vlist = Vlist([cnum,                      # numerator
3060:                        Vbox(0, thickness * 2.0),  # space
3061:                        Hrule(state, rule),        # rule
3062:                        Vbox(0, thickness * 2.0),  # space
3063:                        cden                       # denominator
3064:                        ])
3065: 
3066:         # Shift so the fraction line sits in the middle of the
3067:         # equals sign
3068:         metrics = state.font_output.get_metrics(
3069:             state.font, rcParams['mathtext.default'],
3070:             '=', state.fontsize, state.dpi)
3071:         shift = (cden.height -
3072:                  ((metrics.ymax + metrics.ymin) / 2 -
3073:                   thickness * 3.0))
3074:         vlist.shift_amount = shift
3075: 
3076:         result = [Hlist([vlist, Hbox(thickness * 2.)])]
3077:         if ldelim or rdelim:
3078:             if ldelim == '':
3079:                 ldelim = '.'
3080:             if rdelim == '':
3081:                 rdelim = '.'
3082:             return self._auto_sized_delimiter(ldelim, result, rdelim)
3083:         return result
3084: 
3085:     def genfrac(self, s, loc, toks):
3086:         assert(len(toks) == 1)
3087:         assert(len(toks[0]) == 6)
3088: 
3089:         return self._genfrac(*tuple(toks[0]))
3090: 
3091:     def frac(self, s, loc, toks):
3092:         assert(len(toks) == 1)
3093:         assert(len(toks[0]) == 2)
3094:         state = self.get_state()
3095: 
3096:         thickness = state.font_output.get_underline_thickness(
3097:             state.font, state.fontsize, state.dpi)
3098:         num, den = toks[0]
3099: 
3100:         return self._genfrac('', '', thickness,
3101:                              self._math_style_dict['textstyle'], num, den)
3102: 
3103:     def dfrac(self, s, loc, toks):
3104:         assert(len(toks) == 1)
3105:         assert(len(toks[0]) == 2)
3106:         state = self.get_state()
3107: 
3108:         thickness = state.font_output.get_underline_thickness(
3109:             state.font, state.fontsize, state.dpi)
3110:         num, den = toks[0]
3111: 
3112:         return self._genfrac('', '', thickness,
3113:                              self._math_style_dict['displaystyle'], num, den)
3114: 
3115:     def stackrel(self, s, loc, toks):
3116:         assert(len(toks) == 1)
3117:         assert(len(toks[0]) == 2)
3118:         num, den = toks[0]
3119: 
3120:         return self._genfrac('', '', 0.0,
3121:                              self._math_style_dict['textstyle'], num, den)
3122: 
3123:     def binom(self, s, loc, toks):
3124:         assert(len(toks) == 1)
3125:         assert(len(toks[0]) == 2)
3126:         num, den = toks[0]
3127: 
3128:         return self._genfrac('(', ')', 0.0,
3129:                              self._math_style_dict['textstyle'], num, den)
3130: 
3131:     def sqrt(self, s, loc, toks):
3132:         #~ print "sqrt", toks
3133:         root, body = toks[0]
3134:         state = self.get_state()
3135:         thickness = state.font_output.get_underline_thickness(
3136:             state.font, state.fontsize, state.dpi)
3137: 
3138:         # Determine the height of the body, and add a little extra to
3139:         # the height so it doesn't seem cramped
3140:         height = body.height - body.shift_amount + thickness * 5.0
3141:         depth = body.depth + body.shift_amount
3142:         check = AutoHeightChar(r'\__sqrt__', height, depth, state, always=True)
3143:         height = check.height - check.shift_amount
3144:         depth = check.depth + check.shift_amount
3145: 
3146:         # Put a little extra space to the left and right of the body
3147:         padded_body = Hlist([Hbox(thickness * 2.0),
3148:                              body,
3149:                              Hbox(thickness * 2.0)])
3150:         rightside = Vlist([Hrule(state),
3151:                            Fill(),
3152:                            padded_body])
3153:         # Stretch the glue between the hrule and the body
3154:         rightside.vpack(height + (state.fontsize * state.dpi) / (100.0 * 12.0),
3155:                         'exactly', depth)
3156: 
3157:         # Add the root and shift it upward so it is above the tick.
3158:         # The value of 0.6 is a hard-coded hack ;)
3159:         if root is None:
3160:             root = Box(check.width * 0.5, 0., 0.)
3161:         else:
3162:             root = Hlist([Char(x, state) for x in root])
3163:             root.shrink()
3164:             root.shrink()
3165: 
3166:         root_vlist = Vlist([Hlist([root])])
3167:         root_vlist.shift_amount = -height * 0.6
3168: 
3169:         hlist = Hlist([root_vlist,               # Root
3170:                        # Negative kerning to put root over tick
3171:                        Kern(-check.width * 0.5),
3172:                        check,                    # Check
3173:                        rightside])               # Body
3174:         return [hlist]
3175: 
3176:     def overline(self, s, loc, toks):
3177:         assert(len(toks)==1)
3178:         assert(len(toks[0])==1)
3179: 
3180:         body = toks[0][0]
3181: 
3182:         state = self.get_state()
3183:         thickness = state.font_output.get_underline_thickness(
3184:             state.font, state.fontsize, state.dpi)
3185: 
3186:         height = body.height - body.shift_amount + thickness * 3.0
3187:         depth = body.depth + body.shift_amount
3188: 
3189:         # Place overline above body
3190:         rightside = Vlist([Hrule(state),
3191:                            Fill(),
3192:                            Hlist([body])])
3193: 
3194:         # Stretch the glue between the hrule and the body
3195:         rightside.vpack(height + (state.fontsize * state.dpi) / (100.0 * 12.0),
3196:                         'exactly', depth)
3197: 
3198:         hlist = Hlist([rightside])
3199:         return [hlist]
3200: 
3201:     def _auto_sized_delimiter(self, front, middle, back):
3202:         state = self.get_state()
3203:         if len(middle):
3204:             height = max(x.height for x in middle)
3205:             depth = max(x.depth for x in middle)
3206:             factor = None
3207:         else:
3208:             height = 0
3209:             depth = 0
3210:             factor = 1.0
3211:         parts = []
3212:         # \left. and \right. aren't supposed to produce any symbols
3213:         if front != '.':
3214:             parts.append(AutoHeightChar(front, height, depth, state, factor=factor))
3215:         parts.extend(middle)
3216:         if back != '.':
3217:             parts.append(AutoHeightChar(back, height, depth, state, factor=factor))
3218:         hlist = Hlist(parts)
3219:         return hlist
3220: 
3221:     def auto_delim(self, s, loc, toks):
3222:         #~ print "auto_delim", toks
3223:         front, middle, back = toks
3224: 
3225:         return self._auto_sized_delimiter(front, middle.asList(), back)
3226: 
3227: ###
3228: 
3229: ##############################################################################
3230: # MAIN
3231: 
3232: class MathTextParser(object):
3233:     _parser = None
3234: 
3235:     _backend_mapping = {
3236:         'bitmap': MathtextBackendBitmap,
3237:         'agg'   : MathtextBackendAgg,
3238:         'ps'    : MathtextBackendPs,
3239:         'pdf'   : MathtextBackendPdf,
3240:         'svg'   : MathtextBackendSvg,
3241:         'path'  : MathtextBackendPath,
3242:         'cairo' : MathtextBackendCairo,
3243:         'macosx': MathtextBackendAgg,
3244:         }
3245: 
3246:     _font_type_mapping = {
3247:         'cm'          : BakomaFonts,
3248:         'dejavuserif' : DejaVuSerifFonts,
3249:         'dejavusans'  : DejaVuSansFonts,
3250:         'stix'        : StixFonts,
3251:         'stixsans'    : StixSansFonts,
3252:         'custom'      : UnicodeFonts
3253:         }
3254: 
3255:     def __init__(self, output):
3256:         '''
3257:         Create a MathTextParser for the given backend *output*.
3258:         '''
3259:         self._output = output.lower()
3260:         self._cache = maxdict(50)
3261: 
3262:     def parse(self, s, dpi = 72, prop = None):
3263:         '''
3264:         Parse the given math expression *s* at the given *dpi*.  If
3265:         *prop* is provided, it is a
3266:         :class:`~matplotlib.font_manager.FontProperties` object
3267:         specifying the "default" font to use in the math expression,
3268:         used for all non-math text.
3269: 
3270:         The results are cached, so multiple calls to :meth:`parse`
3271:         with the same expression should be fast.
3272:         '''
3273:         # There is a bug in Python 3.x where it leaks frame references,
3274:         # and therefore can't handle this caching
3275:         if prop is None:
3276:             prop = FontProperties()
3277: 
3278:         cacheKey = (s, dpi, hash(prop))
3279:         result = self._cache.get(cacheKey)
3280:         if result is not None:
3281:             return result
3282: 
3283:         if self._output == 'ps' and rcParams['ps.useafm']:
3284:             font_output = StandardPsFonts(prop)
3285:         else:
3286:             backend = self._backend_mapping[self._output]()
3287:             fontset = rcParams['mathtext.fontset']
3288:             fontset_class = self._font_type_mapping.get(fontset.lower())
3289:             if fontset_class is not None:
3290:                 font_output = fontset_class(prop, backend)
3291:             else:
3292:                 raise ValueError(
3293:                     "mathtext.fontset must be either 'cm', 'dejavuserif', "
3294:                     "'dejavusans', 'stix', 'stixsans', or 'custom'")
3295: 
3296:         fontsize = prop.get_size_in_points()
3297: 
3298:         # This is a class variable so we don't rebuild the parser
3299:         # with each request.
3300:         if self._parser is None:
3301:             self.__class__._parser = Parser()
3302: 
3303:         box = self._parser.parse(s, font_output, fontsize, dpi)
3304:         font_output.set_canvas_size(box.width, box.height, box.depth)
3305:         result = font_output.get_results(box)
3306:         self._cache[cacheKey] = result
3307:         return result
3308: 
3309:     def to_mask(self, texstr, dpi=120, fontsize=14):
3310:         '''
3311:         *texstr*
3312:             A valid mathtext string, e.g., r'IQ: $\\sigma_i=15$'
3313: 
3314:         *dpi*
3315:             The dots-per-inch to render the text
3316: 
3317:         *fontsize*
3318:             The font size in points
3319: 
3320:         Returns a tuple (*array*, *depth*)
3321: 
3322:           - *array* is an NxM uint8 alpha ubyte mask array of
3323:             rasterized tex.
3324: 
3325:           - depth is the offset of the baseline from the bottom of the
3326:             image in pixels.
3327:         '''
3328:         assert(self._output=="bitmap")
3329:         prop = FontProperties(size=fontsize)
3330:         ftimage, depth = self.parse(texstr, dpi=dpi, prop=prop)
3331: 
3332:         x = ftimage.as_array()
3333:         return x, depth
3334: 
3335:     def to_rgba(self, texstr, color='black', dpi=120, fontsize=14):
3336:         '''
3337:         *texstr*
3338:             A valid mathtext string, e.g., r'IQ: $\\sigma_i=15$'
3339: 
3340:         *color*
3341:             Any matplotlib color argument
3342: 
3343:         *dpi*
3344:             The dots-per-inch to render the text
3345: 
3346:         *fontsize*
3347:             The font size in points
3348: 
3349:         Returns a tuple (*array*, *depth*)
3350: 
3351:           - *array* is an NxM uint8 alpha ubyte mask array of
3352:             rasterized tex.
3353: 
3354:           - depth is the offset of the baseline from the bottom of the
3355:             image in pixels.
3356:         '''
3357:         x, depth = self.to_mask(texstr, dpi=dpi, fontsize=fontsize)
3358: 
3359:         r, g, b, a = mcolors.to_rgba(color)
3360:         RGBA = np.zeros((x.shape[0], x.shape[1], 4), dtype=np.uint8)
3361:         RGBA[:, :, 0] = 255 * r
3362:         RGBA[:, :, 1] = 255 * g
3363:         RGBA[:, :, 2] = 255 * b
3364:         RGBA[:, :, 3] = x
3365:         return RGBA, depth
3366: 
3367:     def to_png(self, filename, texstr, color='black', dpi=120, fontsize=14):
3368:         '''
3369:         Writes a tex expression to a PNG file.
3370: 
3371:         Returns the offset of the baseline from the bottom of the
3372:         image in pixels.
3373: 
3374:         *filename*
3375:             A writable filename or fileobject
3376: 
3377:         *texstr*
3378:             A valid mathtext string, e.g., r'IQ: $\\sigma_i=15$'
3379: 
3380:         *color*
3381:             A valid matplotlib color argument
3382: 
3383:         *dpi*
3384:             The dots-per-inch to render the text
3385: 
3386:         *fontsize*
3387:             The font size in points
3388: 
3389:         Returns the offset of the baseline from the bottom of the
3390:         image in pixels.
3391:         '''
3392:         rgba, depth = self.to_rgba(texstr, color=color, dpi=dpi, fontsize=fontsize)
3393:         _png.write_png(rgba, filename)
3394:         return depth
3395: 
3396:     def get_depth(self, texstr, dpi=120, fontsize=14):
3397:         '''
3398:         Returns the offset of the baseline from the bottom of the
3399:         image in pixels.
3400: 
3401:         *texstr*
3402:             A valid mathtext string, e.g., r'IQ: $\\sigma_i=15$'
3403: 
3404:         *dpi*
3405:             The dots-per-inch to render the text
3406: 
3407:         *fontsize*
3408:             The font size in points
3409:         '''
3410:         assert(self._output=="bitmap")
3411:         prop = FontProperties(size=fontsize)
3412:         ftimage, depth = self.parse(texstr, dpi=dpi, prop=prop)
3413:         return depth
3414: 
3415: def math_to_image(s, filename_or_obj, prop=None, dpi=None, format=None):
3416:     '''
3417:     Given a math expression, renders it in a closely-clipped bounding
3418:     box to an image file.
3419: 
3420:     *s*
3421:        A math expression.  The math portion should be enclosed in
3422:        dollar signs.
3423: 
3424:     *filename_or_obj*
3425:        A filepath or writable file-like object to write the image data
3426:        to.
3427: 
3428:     *prop*
3429:        If provided, a FontProperties() object describing the size and
3430:        style of the text.
3431: 
3432:     *dpi*
3433:        Override the output dpi, otherwise use the default associated
3434:        with the output format.
3435: 
3436:     *format*
3437:        The output format, e.g., 'svg', 'pdf', 'ps' or 'png'.  If not
3438:        provided, will be deduced from the filename.
3439:     '''
3440:     from matplotlib import figure
3441:     # backend_agg supports all of the core output formats
3442:     from matplotlib.backends import backend_agg
3443: 
3444:     if prop is None:
3445:         prop = FontProperties()
3446: 
3447:     parser = MathTextParser('path')
3448:     width, height, depth, _, _ = parser.parse(s, dpi=72, prop=prop)
3449: 
3450:     fig = figure.Figure(figsize=(width / 72.0, height / 72.0))
3451:     fig.text(0, depth/height, s, fontproperties=prop)
3452:     backend_agg.FigureCanvasAgg(fig)
3453:     fig.savefig(filename_or_obj, dpi=dpi, format=format)
3454: 
3455:     return depth
3456: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

unicode_77349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 16, (-1)), 'unicode', u'\n:mod:`~matplotlib.mathtext` is a module for parsing a subset of the\nTeX math syntax and drawing them to a matplotlib backend.\n\nFor a tutorial of its usage see :ref:`sphx_glr_tutorials_text_mathtext.py`.  This\ndocument is primarily concerned with implementation details.\n\nThe module uses pyparsing_ to parse the TeX expression.\n\n.. _pyparsing: http://pyparsing.wikispaces.com/\n\nThe Bakoma distribution of the TeX Computer Modern fonts, and STIX\nfonts are supported.  There is experimental support for using\narbitrary fonts, but results may vary without proper tweaking and\nmetrics for those fonts.\n')
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 20, 0))

# 'import six' statement (line 20)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_77350 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 20, 0), 'six')

if (type(import_77350) is not StypyTypeError):

    if (import_77350 != 'pyd_module'):
        __import__(import_77350)
        sys_modules_77351 = sys.modules[import_77350]
        import_module(stypy.reporting.localization.Localization(__file__, 20, 0), 'six', sys_modules_77351.module_type_store, module_type_store)
    else:
        import six

        import_module(stypy.reporting.localization.Localization(__file__, 20, 0), 'six', six, module_type_store)

else:
    # Assigning a type to the variable 'six' (line 20)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 20, 0), 'six', import_77350)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 22, 0))

# Multiple import statement. import os (1/2) (line 22)
import os

import_module(stypy.reporting.localization.Localization(__file__, 22, 0), 'os', os, module_type_store)
# Multiple import statement. import sys (2/2) (line 22)
import sys

import_module(stypy.reporting.localization.Localization(__file__, 22, 0), 'sys', sys, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 23, 0))

# 'from six import unichr' statement (line 23)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_77352 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 23, 0), 'six')

if (type(import_77352) is not StypyTypeError):

    if (import_77352 != 'pyd_module'):
        __import__(import_77352)
        sys_modules_77353 = sys.modules[import_77352]
        import_from_module(stypy.reporting.localization.Localization(__file__, 23, 0), 'six', sys_modules_77353.module_type_store, module_type_store, ['unichr'])
        nest_module(stypy.reporting.localization.Localization(__file__, 23, 0), __file__, sys_modules_77353, sys_modules_77353.module_type_store, module_type_store)
    else:
        from six import unichr

        import_from_module(stypy.reporting.localization.Localization(__file__, 23, 0), 'six', None, module_type_store, ['unichr'], [unichr])

else:
    # Assigning a type to the variable 'six' (line 23)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 23, 0), 'six', import_77352)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 24, 0))

# 'from math import ceil' statement (line 24)
try:
    from math import ceil

except:
    ceil = UndefinedType
import_from_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'math', None, module_type_store, ['ceil'], [ceil])

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 25, 0))

# 'import unicodedata' statement (line 25)
import unicodedata

import_module(stypy.reporting.localization.Localization(__file__, 25, 0), 'unicodedata', unicodedata, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 26, 0))

# 'from warnings import warn' statement (line 26)
try:
    from warnings import warn

except:
    warn = UndefinedType
import_from_module(stypy.reporting.localization.Localization(__file__, 26, 0), 'warnings', None, module_type_store, ['warn'], [warn])

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 28, 0))

# 'from numpy import inf, isinf' statement (line 28)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_77354 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 28, 0), 'numpy')

if (type(import_77354) is not StypyTypeError):

    if (import_77354 != 'pyd_module'):
        __import__(import_77354)
        sys_modules_77355 = sys.modules[import_77354]
        import_from_module(stypy.reporting.localization.Localization(__file__, 28, 0), 'numpy', sys_modules_77355.module_type_store, module_type_store, ['inf', 'isinf'])
        nest_module(stypy.reporting.localization.Localization(__file__, 28, 0), __file__, sys_modules_77355, sys_modules_77355.module_type_store, module_type_store)
    else:
        from numpy import inf, isinf

        import_from_module(stypy.reporting.localization.Localization(__file__, 28, 0), 'numpy', None, module_type_store, ['inf', 'isinf'], [inf, isinf])

else:
    # Assigning a type to the variable 'numpy' (line 28)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 28, 0), 'numpy', import_77354)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 29, 0))

# 'import numpy' statement (line 29)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_77356 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'numpy')

if (type(import_77356) is not StypyTypeError):

    if (import_77356 != 'pyd_module'):
        __import__(import_77356)
        sys_modules_77357 = sys.modules[import_77356]
        import_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'np', sys_modules_77357.module_type_store, module_type_store)
    else:
        import numpy as np

        import_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'np', numpy, module_type_store)

else:
    # Assigning a type to the variable 'numpy' (line 29)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 29, 0), 'numpy', import_77356)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 31, 0))

# 'import pyparsing' statement (line 31)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_77358 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 31, 0), 'pyparsing')

if (type(import_77358) is not StypyTypeError):

    if (import_77358 != 'pyd_module'):
        __import__(import_77358)
        sys_modules_77359 = sys.modules[import_77358]
        import_module(stypy.reporting.localization.Localization(__file__, 31, 0), 'pyparsing', sys_modules_77359.module_type_store, module_type_store)
    else:
        import pyparsing

        import_module(stypy.reporting.localization.Localization(__file__, 31, 0), 'pyparsing', pyparsing, module_type_store)

else:
    # Assigning a type to the variable 'pyparsing' (line 31)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 31, 0), 'pyparsing', import_77358)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 32, 0))

# 'from pyparsing import Combine, Group, Optional, Forward, Literal, OneOrMore, ZeroOrMore, ParseException, Empty, ParseResults, Suppress, oneOf, StringEnd, ParseFatalException, FollowedBy, Regex, ParserElement, QuotedString, ParseBaseException' statement (line 32)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_77360 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 32, 0), 'pyparsing')

if (type(import_77360) is not StypyTypeError):

    if (import_77360 != 'pyd_module'):
        __import__(import_77360)
        sys_modules_77361 = sys.modules[import_77360]
        import_from_module(stypy.reporting.localization.Localization(__file__, 32, 0), 'pyparsing', sys_modules_77361.module_type_store, module_type_store, ['Combine', 'Group', 'Optional', 'Forward', 'Literal', 'OneOrMore', 'ZeroOrMore', 'ParseException', 'Empty', 'ParseResults', 'Suppress', 'oneOf', 'StringEnd', 'ParseFatalException', 'FollowedBy', 'Regex', 'ParserElement', 'QuotedString', 'ParseBaseException'])
        nest_module(stypy.reporting.localization.Localization(__file__, 32, 0), __file__, sys_modules_77361, sys_modules_77361.module_type_store, module_type_store)
    else:
        from pyparsing import Combine, Group, Optional, Forward, Literal, OneOrMore, ZeroOrMore, ParseException, Empty, ParseResults, Suppress, oneOf, StringEnd, ParseFatalException, FollowedBy, Regex, ParserElement, QuotedString, ParseBaseException

        import_from_module(stypy.reporting.localization.Localization(__file__, 32, 0), 'pyparsing', None, module_type_store, ['Combine', 'Group', 'Optional', 'Forward', 'Literal', 'OneOrMore', 'ZeroOrMore', 'ParseException', 'Empty', 'ParseResults', 'Suppress', 'oneOf', 'StringEnd', 'ParseFatalException', 'FollowedBy', 'Regex', 'ParserElement', 'QuotedString', 'ParseBaseException'], [Combine, Group, Optional, Forward, Literal, OneOrMore, ZeroOrMore, ParseException, Empty, ParseResults, Suppress, oneOf, StringEnd, ParseFatalException, FollowedBy, Regex, ParserElement, QuotedString, ParseBaseException])

else:
    # Assigning a type to the variable 'pyparsing' (line 32)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 32, 0), 'pyparsing', import_77360)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')


# Call to enablePackrat(...): (line 37)
# Processing the call keyword arguments (line 37)
kwargs_77364 = {}
# Getting the type of 'ParserElement' (line 37)
ParserElement_77362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 37, 0), 'ParserElement', False)
# Obtaining the member 'enablePackrat' of a type (line 37)
enablePackrat_77363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 37, 0), ParserElement_77362, 'enablePackrat')
# Calling enablePackrat(args, kwargs) (line 37)
enablePackrat_call_result_77365 = invoke(stypy.reporting.localization.Localization(__file__, 37, 0), enablePackrat_77363, *[], **kwargs_77364)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 39, 0))

# 'from matplotlib.afm import AFM' statement (line 39)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_77366 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 39, 0), 'matplotlib.afm')

if (type(import_77366) is not StypyTypeError):

    if (import_77366 != 'pyd_module'):
        __import__(import_77366)
        sys_modules_77367 = sys.modules[import_77366]
        import_from_module(stypy.reporting.localization.Localization(__file__, 39, 0), 'matplotlib.afm', sys_modules_77367.module_type_store, module_type_store, ['AFM'])
        nest_module(stypy.reporting.localization.Localization(__file__, 39, 0), __file__, sys_modules_77367, sys_modules_77367.module_type_store, module_type_store)
    else:
        from matplotlib.afm import AFM

        import_from_module(stypy.reporting.localization.Localization(__file__, 39, 0), 'matplotlib.afm', None, module_type_store, ['AFM'], [AFM])

else:
    # Assigning a type to the variable 'matplotlib.afm' (line 39)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 39, 0), 'matplotlib.afm', import_77366)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 40, 0))

# 'from matplotlib.cbook import Bunch, get_realpath_and_stat, maxdict' statement (line 40)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_77368 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 40, 0), 'matplotlib.cbook')

if (type(import_77368) is not StypyTypeError):

    if (import_77368 != 'pyd_module'):
        __import__(import_77368)
        sys_modules_77369 = sys.modules[import_77368]
        import_from_module(stypy.reporting.localization.Localization(__file__, 40, 0), 'matplotlib.cbook', sys_modules_77369.module_type_store, module_type_store, ['Bunch', 'get_realpath_and_stat', 'maxdict'])
        nest_module(stypy.reporting.localization.Localization(__file__, 40, 0), __file__, sys_modules_77369, sys_modules_77369.module_type_store, module_type_store)
    else:
        from matplotlib.cbook import Bunch, get_realpath_and_stat, maxdict

        import_from_module(stypy.reporting.localization.Localization(__file__, 40, 0), 'matplotlib.cbook', None, module_type_store, ['Bunch', 'get_realpath_and_stat', 'maxdict'], [Bunch, get_realpath_and_stat, maxdict])

else:
    # Assigning a type to the variable 'matplotlib.cbook' (line 40)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 40, 0), 'matplotlib.cbook', import_77368)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 41, 0))

# 'from matplotlib.ft2font import FT2Image, KERNING_DEFAULT, LOAD_FORCE_AUTOHINT, LOAD_NO_HINTING' statement (line 41)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_77370 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 41, 0), 'matplotlib.ft2font')

if (type(import_77370) is not StypyTypeError):

    if (import_77370 != 'pyd_module'):
        __import__(import_77370)
        sys_modules_77371 = sys.modules[import_77370]
        import_from_module(stypy.reporting.localization.Localization(__file__, 41, 0), 'matplotlib.ft2font', sys_modules_77371.module_type_store, module_type_store, ['FT2Image', 'KERNING_DEFAULT', 'LOAD_FORCE_AUTOHINT', 'LOAD_NO_HINTING'])
        nest_module(stypy.reporting.localization.Localization(__file__, 41, 0), __file__, sys_modules_77371, sys_modules_77371.module_type_store, module_type_store)
    else:
        from matplotlib.ft2font import FT2Image, KERNING_DEFAULT, LOAD_FORCE_AUTOHINT, LOAD_NO_HINTING

        import_from_module(stypy.reporting.localization.Localization(__file__, 41, 0), 'matplotlib.ft2font', None, module_type_store, ['FT2Image', 'KERNING_DEFAULT', 'LOAD_FORCE_AUTOHINT', 'LOAD_NO_HINTING'], [FT2Image, KERNING_DEFAULT, LOAD_FORCE_AUTOHINT, LOAD_NO_HINTING])

else:
    # Assigning a type to the variable 'matplotlib.ft2font' (line 41)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 41, 0), 'matplotlib.ft2font', import_77370)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 43, 0))

# 'from matplotlib.font_manager import findfont, FontProperties, get_font' statement (line 43)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_77372 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 43, 0), 'matplotlib.font_manager')

if (type(import_77372) is not StypyTypeError):

    if (import_77372 != 'pyd_module'):
        __import__(import_77372)
        sys_modules_77373 = sys.modules[import_77372]
        import_from_module(stypy.reporting.localization.Localization(__file__, 43, 0), 'matplotlib.font_manager', sys_modules_77373.module_type_store, module_type_store, ['findfont', 'FontProperties', 'get_font'])
        nest_module(stypy.reporting.localization.Localization(__file__, 43, 0), __file__, sys_modules_77373, sys_modules_77373.module_type_store, module_type_store)
    else:
        from matplotlib.font_manager import findfont, FontProperties, get_font

        import_from_module(stypy.reporting.localization.Localization(__file__, 43, 0), 'matplotlib.font_manager', None, module_type_store, ['findfont', 'FontProperties', 'get_font'], [findfont, FontProperties, get_font])

else:
    # Assigning a type to the variable 'matplotlib.font_manager' (line 43)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 43, 0), 'matplotlib.font_manager', import_77372)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 44, 0))

# 'from matplotlib._mathtext_data import latex_to_bakoma, latex_to_standard, tex2uni, latex_to_cmex, stix_virtual_fonts' statement (line 44)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_77374 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 44, 0), 'matplotlib._mathtext_data')

if (type(import_77374) is not StypyTypeError):

    if (import_77374 != 'pyd_module'):
        __import__(import_77374)
        sys_modules_77375 = sys.modules[import_77374]
        import_from_module(stypy.reporting.localization.Localization(__file__, 44, 0), 'matplotlib._mathtext_data', sys_modules_77375.module_type_store, module_type_store, ['latex_to_bakoma', 'latex_to_standard', 'tex2uni', 'latex_to_cmex', 'stix_virtual_fonts'])
        nest_module(stypy.reporting.localization.Localization(__file__, 44, 0), __file__, sys_modules_77375, sys_modules_77375.module_type_store, module_type_store)
    else:
        from matplotlib._mathtext_data import latex_to_bakoma, latex_to_standard, tex2uni, latex_to_cmex, stix_virtual_fonts

        import_from_module(stypy.reporting.localization.Localization(__file__, 44, 0), 'matplotlib._mathtext_data', None, module_type_store, ['latex_to_bakoma', 'latex_to_standard', 'tex2uni', 'latex_to_cmex', 'stix_virtual_fonts'], [latex_to_bakoma, latex_to_standard, tex2uni, latex_to_cmex, stix_virtual_fonts])

else:
    # Assigning a type to the variable 'matplotlib._mathtext_data' (line 44)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 44, 0), 'matplotlib._mathtext_data', import_77374)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 47, 0))

# 'from matplotlib import get_data_path, rcParams' statement (line 47)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_77376 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 47, 0), 'matplotlib')

if (type(import_77376) is not StypyTypeError):

    if (import_77376 != 'pyd_module'):
        __import__(import_77376)
        sys_modules_77377 = sys.modules[import_77376]
        import_from_module(stypy.reporting.localization.Localization(__file__, 47, 0), 'matplotlib', sys_modules_77377.module_type_store, module_type_store, ['get_data_path', 'rcParams'])
        nest_module(stypy.reporting.localization.Localization(__file__, 47, 0), __file__, sys_modules_77377, sys_modules_77377.module_type_store, module_type_store)
    else:
        from matplotlib import get_data_path, rcParams

        import_from_module(stypy.reporting.localization.Localization(__file__, 47, 0), 'matplotlib', None, module_type_store, ['get_data_path', 'rcParams'], [get_data_path, rcParams])

else:
    # Assigning a type to the variable 'matplotlib' (line 47)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 47, 0), 'matplotlib', import_77376)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 49, 0))

# 'import matplotlib.colors' statement (line 49)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_77378 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 49, 0), 'matplotlib.colors')

if (type(import_77378) is not StypyTypeError):

    if (import_77378 != 'pyd_module'):
        __import__(import_77378)
        sys_modules_77379 = sys.modules[import_77378]
        import_module(stypy.reporting.localization.Localization(__file__, 49, 0), 'mcolors', sys_modules_77379.module_type_store, module_type_store)
    else:
        import matplotlib.colors as mcolors

        import_module(stypy.reporting.localization.Localization(__file__, 49, 0), 'mcolors', matplotlib.colors, module_type_store)

else:
    # Assigning a type to the variable 'matplotlib.colors' (line 49)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 49, 0), 'matplotlib.colors', import_77378)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 50, 0))

# 'import matplotlib._png' statement (line 50)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
import_77380 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 50, 0), 'matplotlib._png')

if (type(import_77380) is not StypyTypeError):

    if (import_77380 != 'pyd_module'):
        __import__(import_77380)
        sys_modules_77381 = sys.modules[import_77380]
        import_module(stypy.reporting.localization.Localization(__file__, 50, 0), '_png', sys_modules_77381.module_type_store, module_type_store)
    else:
        import matplotlib._png as _png

        import_module(stypy.reporting.localization.Localization(__file__, 50, 0), '_png', matplotlib._png, module_type_store)

else:
    # Assigning a type to the variable 'matplotlib._png' (line 50)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 50, 0), 'matplotlib._png', import_77380)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')


@norecursion
def get_unicode_index(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'True' (line 59)
    True_77382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 59, 35), 'True')
    defaults = [True_77382]
    # Create a new context for function 'get_unicode_index'
    module_type_store = module_type_store.open_function_context('get_unicode_index', 59, 0, False)
    
    # Passed parameters checking function
    get_unicode_index.stypy_localization = localization
    get_unicode_index.stypy_type_of_self = None
    get_unicode_index.stypy_type_store = module_type_store
    get_unicode_index.stypy_function_name = 'get_unicode_index'
    get_unicode_index.stypy_param_names_list = ['symbol', 'math']
    get_unicode_index.stypy_varargs_param_name = None
    get_unicode_index.stypy_kwargs_param_name = None
    get_unicode_index.stypy_call_defaults = defaults
    get_unicode_index.stypy_call_varargs = varargs
    get_unicode_index.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'get_unicode_index', ['symbol', 'math'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'get_unicode_index', localization, ['symbol', 'math'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'get_unicode_index(...)' code ##################

    unicode_77383 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 66, (-1)), 'unicode', u"get_unicode_index(symbol, [bool]) -> integer\n\nReturn the integer index (from the Unicode table) of symbol.  *symbol*\ncan be a single unicode character, a TeX command (i.e. r'\\pi'), or a\nType1 symbol name (i.e. 'phi').\nIf math is False, the current symbol should be treated as a non-math symbol.\n")
    
    
    # Getting the type of 'math' (line 68)
    math_77384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 11), 'math')
    # Applying the 'not' unary operator (line 68)
    result_not__77385 = python_operator(stypy.reporting.localization.Localization(__file__, 68, 7), 'not', math_77384)
    
    # Testing the type of an if condition (line 68)
    if_condition_77386 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 68, 4), result_not__77385)
    # Assigning a type to the variable 'if_condition_77386' (line 68)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 68, 4), 'if_condition_77386', if_condition_77386)
    # SSA begins for if statement (line 68)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ord(...): (line 69)
    # Processing the call arguments (line 69)
    # Getting the type of 'symbol' (line 69)
    symbol_77388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 69, 19), 'symbol', False)
    # Processing the call keyword arguments (line 69)
    kwargs_77389 = {}
    # Getting the type of 'ord' (line 69)
    ord_77387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 69, 15), 'ord', False)
    # Calling ord(args, kwargs) (line 69)
    ord_call_result_77390 = invoke(stypy.reporting.localization.Localization(__file__, 69, 15), ord_77387, *[symbol_77388], **kwargs_77389)
    
    # Assigning a type to the variable 'stypy_return_type' (line 69)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 69, 8), 'stypy_return_type', ord_call_result_77390)
    # SSA join for if statement (line 68)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'symbol' (line 75)
    symbol_77391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 7), 'symbol')
    unicode_77392 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 75, 17), 'unicode', u'-')
    # Applying the binary operator '==' (line 75)
    result_eq_77393 = python_operator(stypy.reporting.localization.Localization(__file__, 75, 7), '==', symbol_77391, unicode_77392)
    
    # Testing the type of an if condition (line 75)
    if_condition_77394 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 75, 4), result_eq_77393)
    # Assigning a type to the variable 'if_condition_77394' (line 75)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 75, 4), 'if_condition_77394', if_condition_77394)
    # SSA begins for if statement (line 75)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    int_77395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 76, 15), 'int')
    # Assigning a type to the variable 'stypy_return_type' (line 76)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 76, 8), 'stypy_return_type', int_77395)
    # SSA join for if statement (line 75)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # SSA begins for try-except statement (line 77)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to ord(...): (line 78)
    # Processing the call arguments (line 78)
    # Getting the type of 'symbol' (line 78)
    symbol_77397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 78, 19), 'symbol', False)
    # Processing the call keyword arguments (line 78)
    kwargs_77398 = {}
    # Getting the type of 'ord' (line 78)
    ord_77396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 78, 15), 'ord', False)
    # Calling ord(args, kwargs) (line 78)
    ord_call_result_77399 = invoke(stypy.reporting.localization.Localization(__file__, 78, 15), ord_77396, *[symbol_77397], **kwargs_77398)
    
    # Assigning a type to the variable 'stypy_return_type' (line 78)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 78, 8), 'stypy_return_type', ord_call_result_77399)
    # SSA branch for the except part of a try statement (line 77)
    # SSA branch for the except 'TypeError' branch of a try statement (line 77)
    module_type_store.open_ssa_branch('except')
    pass
    # SSA join for try-except statement (line 77)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # SSA begins for try-except statement (line 81)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Obtaining the type of the subscript
    
    # Call to strip(...): (line 82)
    # Processing the call arguments (line 82)
    unicode_77402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 82, 36), 'unicode', u'\\')
    # Processing the call keyword arguments (line 82)
    kwargs_77403 = {}
    # Getting the type of 'symbol' (line 82)
    symbol_77400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 23), 'symbol', False)
    # Obtaining the member 'strip' of a type (line 82)
    strip_77401 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 82, 23), symbol_77400, 'strip')
    # Calling strip(args, kwargs) (line 82)
    strip_call_result_77404 = invoke(stypy.reporting.localization.Localization(__file__, 82, 23), strip_77401, *[unicode_77402], **kwargs_77403)
    
    # Getting the type of 'tex2uni' (line 82)
    tex2uni_77405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 15), 'tex2uni')
    # Obtaining the member '__getitem__' of a type (line 82)
    getitem___77406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 82, 15), tex2uni_77405, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 82)
    subscript_call_result_77407 = invoke(stypy.reporting.localization.Localization(__file__, 82, 15), getitem___77406, strip_call_result_77404)
    
    # Assigning a type to the variable 'stypy_return_type' (line 82)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 82, 8), 'stypy_return_type', subscript_call_result_77407)
    # SSA branch for the except part of a try statement (line 81)
    # SSA branch for the except 'KeyError' branch of a try statement (line 81)
    module_type_store.open_ssa_branch('except')
    
    # Assigning a BinOp to a Name (line 84):
    
    # Assigning a BinOp to a Name (line 84):
    unicode_77408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 85, (-1)), 'unicode', u"'%(symbol)s' is not a valid Unicode character or\nTeX/Type1 symbol")
    
    # Call to locals(...): (line 85)
    # Processing the call keyword arguments (line 85)
    kwargs_77410 = {}
    # Getting the type of 'locals' (line 85)
    locals_77409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 85, 20), 'locals', False)
    # Calling locals(args, kwargs) (line 85)
    locals_call_result_77411 = invoke(stypy.reporting.localization.Localization(__file__, 85, 20), locals_77409, *[], **kwargs_77410)
    
    # Applying the binary operator '%' (line 85)
    result_mod_77412 = python_operator(stypy.reporting.localization.Localization(__file__, 85, (-1)), '%', unicode_77408, locals_call_result_77411)
    
    # Assigning a type to the variable 'message' (line 84)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 8), 'message', result_mod_77412)
    
    # Call to ValueError(...): (line 86)
    # Processing the call arguments (line 86)
    # Getting the type of 'message' (line 86)
    message_77414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 25), 'message', False)
    # Processing the call keyword arguments (line 86)
    kwargs_77415 = {}
    # Getting the type of 'ValueError' (line 86)
    ValueError_77413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 86)
    ValueError_call_result_77416 = invoke(stypy.reporting.localization.Localization(__file__, 86, 14), ValueError_77413, *[message_77414], **kwargs_77415)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 86, 8), ValueError_call_result_77416, 'raise parameter', BaseException)
    # SSA join for try-except statement (line 81)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'get_unicode_index(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'get_unicode_index' in the type store
    # Getting the type of 'stypy_return_type' (line 59)
    stypy_return_type_77417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 59, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_77417)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'get_unicode_index'
    return stypy_return_type_77417

# Assigning a type to the variable 'get_unicode_index' (line 59)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 59, 0), 'get_unicode_index', get_unicode_index)

@norecursion
def unichr_safe(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'unichr_safe'
    module_type_store = module_type_store.open_function_context('unichr_safe', 88, 0, False)
    
    # Passed parameters checking function
    unichr_safe.stypy_localization = localization
    unichr_safe.stypy_type_of_self = None
    unichr_safe.stypy_type_store = module_type_store
    unichr_safe.stypy_function_name = 'unichr_safe'
    unichr_safe.stypy_param_names_list = ['index']
    unichr_safe.stypy_varargs_param_name = None
    unichr_safe.stypy_kwargs_param_name = None
    unichr_safe.stypy_call_defaults = defaults
    unichr_safe.stypy_call_varargs = varargs
    unichr_safe.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'unichr_safe', ['index'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'unichr_safe', localization, ['index'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'unichr_safe(...)' code ##################

    unicode_77418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 91, (-1)), 'unicode', u'Return the Unicode character corresponding to the index,\nor the replacement character if this is a narrow build of Python\nand the requested character is outside the BMP.')
    
    
    # SSA begins for try-except statement (line 92)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to unichr(...): (line 93)
    # Processing the call arguments (line 93)
    # Getting the type of 'index' (line 93)
    index_77420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 22), 'index', False)
    # Processing the call keyword arguments (line 93)
    kwargs_77421 = {}
    # Getting the type of 'unichr' (line 93)
    unichr_77419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 15), 'unichr', False)
    # Calling unichr(args, kwargs) (line 93)
    unichr_call_result_77422 = invoke(stypy.reporting.localization.Localization(__file__, 93, 15), unichr_77419, *[index_77420], **kwargs_77421)
    
    # Assigning a type to the variable 'stypy_return_type' (line 93)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 93, 8), 'stypy_return_type', unichr_call_result_77422)
    # SSA branch for the except part of a try statement (line 92)
    # SSA branch for the except 'ValueError' branch of a try statement (line 92)
    module_type_store.open_ssa_branch('except')
    
    # Call to unichr(...): (line 95)
    # Processing the call arguments (line 95)
    int_77424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 95, 22), 'int')
    # Processing the call keyword arguments (line 95)
    kwargs_77425 = {}
    # Getting the type of 'unichr' (line 95)
    unichr_77423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 15), 'unichr', False)
    # Calling unichr(args, kwargs) (line 95)
    unichr_call_result_77426 = invoke(stypy.reporting.localization.Localization(__file__, 95, 15), unichr_77423, *[int_77424], **kwargs_77425)
    
    # Assigning a type to the variable 'stypy_return_type' (line 95)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 95, 8), 'stypy_return_type', unichr_call_result_77426)
    # SSA join for try-except statement (line 92)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'unichr_safe(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'unichr_safe' in the type store
    # Getting the type of 'stypy_return_type' (line 88)
    stypy_return_type_77427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 88, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_77427)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'unichr_safe'
    return stypy_return_type_77427

# Assigning a type to the variable 'unichr_safe' (line 88)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 88, 0), 'unichr_safe', unichr_safe)
# Declaration of the 'MathtextBackend' class

class MathtextBackend(object, ):
    unicode_77428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 112, (-1)), 'unicode', u'\n    The base class for the mathtext backend-specific code.  The\n    purpose of :class:`MathtextBackend` subclasses is to interface\n    between mathtext and a specific matplotlib graphics backend.\n\n    Subclasses need to override the following:\n\n      - :meth:`render_glyph`\n      - :meth:`render_rect_filled`\n      - :meth:`get_results`\n\n    And optionally, if you need to use a FreeType hinting style:\n\n      - :meth:`get_hinting_type`\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 113, 4, False)
        # Assigning a type to the variable 'self' (line 114)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 114, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackend.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Num to a Attribute (line 114):
        
        # Assigning a Num to a Attribute (line 114):
        int_77429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 114, 21), 'int')
        # Getting the type of 'self' (line 114)
        self_77430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 114, 8), 'self')
        # Setting the type of the member 'width' of a type (line 114)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 114, 8), self_77430, 'width', int_77429)
        
        # Assigning a Num to a Attribute (line 115):
        
        # Assigning a Num to a Attribute (line 115):
        int_77431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 22), 'int')
        # Getting the type of 'self' (line 115)
        self_77432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 8), 'self')
        # Setting the type of the member 'height' of a type (line 115)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 115, 8), self_77432, 'height', int_77431)
        
        # Assigning a Num to a Attribute (line 116):
        
        # Assigning a Num to a Attribute (line 116):
        int_77433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 116, 21), 'int')
        # Getting the type of 'self' (line 116)
        self_77434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 8), 'self')
        # Setting the type of the member 'depth' of a type (line 116)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 116, 8), self_77434, 'depth', int_77433)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def set_canvas_size(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'set_canvas_size'
        module_type_store = module_type_store.open_function_context('set_canvas_size', 118, 4, False)
        # Assigning a type to the variable 'self' (line 119)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 119, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackend.set_canvas_size.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackend.set_canvas_size.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackend.set_canvas_size.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackend.set_canvas_size.__dict__.__setitem__('stypy_function_name', 'MathtextBackend.set_canvas_size')
        MathtextBackend.set_canvas_size.__dict__.__setitem__('stypy_param_names_list', ['w', 'h', 'd'])
        MathtextBackend.set_canvas_size.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackend.set_canvas_size.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackend.set_canvas_size.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackend.set_canvas_size.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackend.set_canvas_size.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackend.set_canvas_size.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackend.set_canvas_size', ['w', 'h', 'd'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'set_canvas_size', localization, ['w', 'h', 'd'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'set_canvas_size(...)' code ##################

        unicode_77435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 8), 'unicode', u'Dimension the drawing canvas')
        
        # Assigning a Name to a Attribute (line 120):
        
        # Assigning a Name to a Attribute (line 120):
        # Getting the type of 'w' (line 120)
        w_77436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 22), 'w')
        # Getting the type of 'self' (line 120)
        self_77437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 8), 'self')
        # Setting the type of the member 'width' of a type (line 120)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 8), self_77437, 'width', w_77436)
        
        # Assigning a Name to a Attribute (line 121):
        
        # Assigning a Name to a Attribute (line 121):
        # Getting the type of 'h' (line 121)
        h_77438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 22), 'h')
        # Getting the type of 'self' (line 121)
        self_77439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 8), 'self')
        # Setting the type of the member 'height' of a type (line 121)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 121, 8), self_77439, 'height', h_77438)
        
        # Assigning a Name to a Attribute (line 122):
        
        # Assigning a Name to a Attribute (line 122):
        # Getting the type of 'd' (line 122)
        d_77440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 22), 'd')
        # Getting the type of 'self' (line 122)
        self_77441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 8), 'self')
        # Setting the type of the member 'depth' of a type (line 122)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 122, 8), self_77441, 'depth', d_77440)
        
        # ################# End of 'set_canvas_size(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'set_canvas_size' in the type store
        # Getting the type of 'stypy_return_type' (line 118)
        stypy_return_type_77442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_77442)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'set_canvas_size'
        return stypy_return_type_77442


    @norecursion
    def render_glyph(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render_glyph'
        module_type_store = module_type_store.open_function_context('render_glyph', 124, 4, False)
        # Assigning a type to the variable 'self' (line 125)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 125, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackend.render_glyph.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackend.render_glyph.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackend.render_glyph.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackend.render_glyph.__dict__.__setitem__('stypy_function_name', 'MathtextBackend.render_glyph')
        MathtextBackend.render_glyph.__dict__.__setitem__('stypy_param_names_list', ['ox', 'oy', 'info'])
        MathtextBackend.render_glyph.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackend.render_glyph.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackend.render_glyph.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackend.render_glyph.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackend.render_glyph.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackend.render_glyph.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackend.render_glyph', ['ox', 'oy', 'info'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render_glyph', localization, ['ox', 'oy', 'info'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render_glyph(...)' code ##################

        unicode_77443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, (-1)), 'unicode', u'\n        Draw a glyph described by *info* to the reference point (*ox*,\n        *oy*).\n        ')
        
        # Call to NotImplementedError(...): (line 129)
        # Processing the call keyword arguments (line 129)
        kwargs_77445 = {}
        # Getting the type of 'NotImplementedError' (line 129)
        NotImplementedError_77444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 129, 14), 'NotImplementedError', False)
        # Calling NotImplementedError(args, kwargs) (line 129)
        NotImplementedError_call_result_77446 = invoke(stypy.reporting.localization.Localization(__file__, 129, 14), NotImplementedError_77444, *[], **kwargs_77445)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 129, 8), NotImplementedError_call_result_77446, 'raise parameter', BaseException)
        
        # ################# End of 'render_glyph(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render_glyph' in the type store
        # Getting the type of 'stypy_return_type' (line 124)
        stypy_return_type_77447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_77447)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render_glyph'
        return stypy_return_type_77447


    @norecursion
    def render_rect_filled(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render_rect_filled'
        module_type_store = module_type_store.open_function_context('render_rect_filled', 131, 4, False)
        # Assigning a type to the variable 'self' (line 132)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 132, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackend.render_rect_filled.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackend.render_rect_filled.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackend.render_rect_filled.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackend.render_rect_filled.__dict__.__setitem__('stypy_function_name', 'MathtextBackend.render_rect_filled')
        MathtextBackend.render_rect_filled.__dict__.__setitem__('stypy_param_names_list', ['x1', 'y1', 'x2', 'y2'])
        MathtextBackend.render_rect_filled.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackend.render_rect_filled.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackend.render_rect_filled.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackend.render_rect_filled.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackend.render_rect_filled.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackend.render_rect_filled.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackend.render_rect_filled', ['x1', 'y1', 'x2', 'y2'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render_rect_filled', localization, ['x1', 'y1', 'x2', 'y2'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render_rect_filled(...)' code ##################

        unicode_77448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, (-1)), 'unicode', u'\n        Draw a filled black rectangle from (*x1*, *y1*) to (*x2*, *y2*).\n        ')
        
        # Call to NotImplementedError(...): (line 135)
        # Processing the call keyword arguments (line 135)
        kwargs_77450 = {}
        # Getting the type of 'NotImplementedError' (line 135)
        NotImplementedError_77449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 135, 14), 'NotImplementedError', False)
        # Calling NotImplementedError(args, kwargs) (line 135)
        NotImplementedError_call_result_77451 = invoke(stypy.reporting.localization.Localization(__file__, 135, 14), NotImplementedError_77449, *[], **kwargs_77450)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 135, 8), NotImplementedError_call_result_77451, 'raise parameter', BaseException)
        
        # ################# End of 'render_rect_filled(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render_rect_filled' in the type store
        # Getting the type of 'stypy_return_type' (line 131)
        stypy_return_type_77452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 131, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_77452)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render_rect_filled'
        return stypy_return_type_77452


    @norecursion
    def get_results(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_results'
        module_type_store = module_type_store.open_function_context('get_results', 137, 4, False)
        # Assigning a type to the variable 'self' (line 138)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 138, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackend.get_results.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackend.get_results.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackend.get_results.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackend.get_results.__dict__.__setitem__('stypy_function_name', 'MathtextBackend.get_results')
        MathtextBackend.get_results.__dict__.__setitem__('stypy_param_names_list', ['box'])
        MathtextBackend.get_results.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackend.get_results.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackend.get_results.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackend.get_results.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackend.get_results.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackend.get_results.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackend.get_results', ['box'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_results', localization, ['box'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_results(...)' code ##################

        unicode_77453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, (-1)), 'unicode', u'\n        Return a backend-specific tuple to return to the backend after\n        all processing is done.\n        ')
        
        # Call to NotImplementedError(...): (line 142)
        # Processing the call keyword arguments (line 142)
        kwargs_77455 = {}
        # Getting the type of 'NotImplementedError' (line 142)
        NotImplementedError_77454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 14), 'NotImplementedError', False)
        # Calling NotImplementedError(args, kwargs) (line 142)
        NotImplementedError_call_result_77456 = invoke(stypy.reporting.localization.Localization(__file__, 142, 14), NotImplementedError_77454, *[], **kwargs_77455)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 142, 8), NotImplementedError_call_result_77456, 'raise parameter', BaseException)
        
        # ################# End of 'get_results(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_results' in the type store
        # Getting the type of 'stypy_return_type' (line 137)
        stypy_return_type_77457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_77457)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_results'
        return stypy_return_type_77457


    @norecursion
    def get_hinting_type(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_hinting_type'
        module_type_store = module_type_store.open_function_context('get_hinting_type', 144, 4, False)
        # Assigning a type to the variable 'self' (line 145)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 145, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackend.get_hinting_type.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackend.get_hinting_type.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackend.get_hinting_type.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackend.get_hinting_type.__dict__.__setitem__('stypy_function_name', 'MathtextBackend.get_hinting_type')
        MathtextBackend.get_hinting_type.__dict__.__setitem__('stypy_param_names_list', [])
        MathtextBackend.get_hinting_type.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackend.get_hinting_type.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackend.get_hinting_type.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackend.get_hinting_type.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackend.get_hinting_type.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackend.get_hinting_type.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackend.get_hinting_type', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_hinting_type', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_hinting_type(...)' code ##################

        unicode_77458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, (-1)), 'unicode', u'\n        Get the FreeType hinting type to use with this particular\n        backend.\n        ')
        # Getting the type of 'LOAD_NO_HINTING' (line 149)
        LOAD_NO_HINTING_77459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 15), 'LOAD_NO_HINTING')
        # Assigning a type to the variable 'stypy_return_type' (line 149)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 149, 8), 'stypy_return_type', LOAD_NO_HINTING_77459)
        
        # ################# End of 'get_hinting_type(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_hinting_type' in the type store
        # Getting the type of 'stypy_return_type' (line 144)
        stypy_return_type_77460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_77460)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_hinting_type'
        return stypy_return_type_77460


# Assigning a type to the variable 'MathtextBackend' (line 97)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 97, 0), 'MathtextBackend', MathtextBackend)
# Declaration of the 'MathtextBackendAgg' class
# Getting the type of 'MathtextBackend' (line 151)
MathtextBackend_77461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 25), 'MathtextBackend')

class MathtextBackendAgg(MathtextBackend_77461, ):
    unicode_77462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 155, (-1)), 'unicode', u'\n    Render glyphs and rectangles to an FTImage buffer, which is later\n    transferred to the Agg image by the Agg backend.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 156, 4, False)
        # Assigning a type to the variable 'self' (line 157)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 157, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendAgg.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Num to a Attribute (line 157):
        
        # Assigning a Num to a Attribute (line 157):
        int_77463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 18), 'int')
        # Getting the type of 'self' (line 157)
        self_77464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 157, 8), 'self')
        # Setting the type of the member 'ox' of a type (line 157)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 157, 8), self_77464, 'ox', int_77463)
        
        # Assigning a Num to a Attribute (line 158):
        
        # Assigning a Num to a Attribute (line 158):
        int_77465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 18), 'int')
        # Getting the type of 'self' (line 158)
        self_77466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 8), 'self')
        # Setting the type of the member 'oy' of a type (line 158)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 158, 8), self_77466, 'oy', int_77465)
        
        # Assigning a Name to a Attribute (line 159):
        
        # Assigning a Name to a Attribute (line 159):
        # Getting the type of 'None' (line 159)
        None_77467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 21), 'None')
        # Getting the type of 'self' (line 159)
        self_77468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 8), 'self')
        # Setting the type of the member 'image' of a type (line 159)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 159, 8), self_77468, 'image', None_77467)
        
        # Assigning a Str to a Attribute (line 160):
        
        # Assigning a Str to a Attribute (line 160):
        unicode_77469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 20), 'unicode', u'bbox')
        # Getting the type of 'self' (line 160)
        self_77470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 8), 'self')
        # Setting the type of the member 'mode' of a type (line 160)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 160, 8), self_77470, 'mode', unicode_77469)
        
        # Assigning a List to a Attribute (line 161):
        
        # Assigning a List to a Attribute (line 161):
        
        # Obtaining an instance of the builtin type 'list' (line 161)
        list_77471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 161)
        # Adding element type (line 161)
        int_77472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 161, 20), list_77471, int_77472)
        # Adding element type (line 161)
        int_77473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 161, 20), list_77471, int_77473)
        # Adding element type (line 161)
        int_77474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 161, 20), list_77471, int_77474)
        # Adding element type (line 161)
        int_77475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 161, 20), list_77471, int_77475)
        
        # Getting the type of 'self' (line 161)
        self_77476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 161, 8), 'self')
        # Setting the type of the member 'bbox' of a type (line 161)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 161, 8), self_77476, 'bbox', list_77471)
        
        # Call to __init__(...): (line 162)
        # Processing the call arguments (line 162)
        # Getting the type of 'self' (line 162)
        self_77479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 33), 'self', False)
        # Processing the call keyword arguments (line 162)
        kwargs_77480 = {}
        # Getting the type of 'MathtextBackend' (line 162)
        MathtextBackend_77477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 8), 'MathtextBackend', False)
        # Obtaining the member '__init__' of a type (line 162)
        init___77478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 162, 8), MathtextBackend_77477, '__init__')
        # Calling __init__(args, kwargs) (line 162)
        init___call_result_77481 = invoke(stypy.reporting.localization.Localization(__file__, 162, 8), init___77478, *[self_77479], **kwargs_77480)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def _update_bbox(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_update_bbox'
        module_type_store = module_type_store.open_function_context('_update_bbox', 164, 4, False)
        # Assigning a type to the variable 'self' (line 165)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 165, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendAgg._update_bbox.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendAgg._update_bbox.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendAgg._update_bbox.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendAgg._update_bbox.__dict__.__setitem__('stypy_function_name', 'MathtextBackendAgg._update_bbox')
        MathtextBackendAgg._update_bbox.__dict__.__setitem__('stypy_param_names_list', ['x1', 'y1', 'x2', 'y2'])
        MathtextBackendAgg._update_bbox.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendAgg._update_bbox.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendAgg._update_bbox.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendAgg._update_bbox.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendAgg._update_bbox.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendAgg._update_bbox.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendAgg._update_bbox', ['x1', 'y1', 'x2', 'y2'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_update_bbox', localization, ['x1', 'y1', 'x2', 'y2'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_update_bbox(...)' code ##################

        
        # Assigning a List to a Attribute (line 165):
        
        # Assigning a List to a Attribute (line 165):
        
        # Obtaining an instance of the builtin type 'list' (line 165)
        list_77482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 165)
        # Adding element type (line 165)
        
        # Call to min(...): (line 165)
        # Processing the call arguments (line 165)
        
        # Obtaining the type of the subscript
        int_77484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 35), 'int')
        # Getting the type of 'self' (line 165)
        self_77485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 25), 'self', False)
        # Obtaining the member 'bbox' of a type (line 165)
        bbox_77486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 25), self_77485, 'bbox')
        # Obtaining the member '__getitem__' of a type (line 165)
        getitem___77487 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 25), bbox_77486, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 165)
        subscript_call_result_77488 = invoke(stypy.reporting.localization.Localization(__file__, 165, 25), getitem___77487, int_77484)
        
        # Getting the type of 'x1' (line 165)
        x1_77489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 39), 'x1', False)
        # Processing the call keyword arguments (line 165)
        kwargs_77490 = {}
        # Getting the type of 'min' (line 165)
        min_77483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 21), 'min', False)
        # Calling min(args, kwargs) (line 165)
        min_call_result_77491 = invoke(stypy.reporting.localization.Localization(__file__, 165, 21), min_77483, *[subscript_call_result_77488, x1_77489], **kwargs_77490)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 165, 20), list_77482, min_call_result_77491)
        # Adding element type (line 165)
        
        # Call to min(...): (line 166)
        # Processing the call arguments (line 166)
        
        # Obtaining the type of the subscript
        int_77493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 166, 35), 'int')
        # Getting the type of 'self' (line 166)
        self_77494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 166, 25), 'self', False)
        # Obtaining the member 'bbox' of a type (line 166)
        bbox_77495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 166, 25), self_77494, 'bbox')
        # Obtaining the member '__getitem__' of a type (line 166)
        getitem___77496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 166, 25), bbox_77495, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 166)
        subscript_call_result_77497 = invoke(stypy.reporting.localization.Localization(__file__, 166, 25), getitem___77496, int_77493)
        
        # Getting the type of 'y1' (line 166)
        y1_77498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 166, 39), 'y1', False)
        # Processing the call keyword arguments (line 166)
        kwargs_77499 = {}
        # Getting the type of 'min' (line 166)
        min_77492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 166, 21), 'min', False)
        # Calling min(args, kwargs) (line 166)
        min_call_result_77500 = invoke(stypy.reporting.localization.Localization(__file__, 166, 21), min_77492, *[subscript_call_result_77497, y1_77498], **kwargs_77499)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 165, 20), list_77482, min_call_result_77500)
        # Adding element type (line 165)
        
        # Call to max(...): (line 167)
        # Processing the call arguments (line 167)
        
        # Obtaining the type of the subscript
        int_77502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 167, 35), 'int')
        # Getting the type of 'self' (line 167)
        self_77503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 25), 'self', False)
        # Obtaining the member 'bbox' of a type (line 167)
        bbox_77504 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 167, 25), self_77503, 'bbox')
        # Obtaining the member '__getitem__' of a type (line 167)
        getitem___77505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 167, 25), bbox_77504, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 167)
        subscript_call_result_77506 = invoke(stypy.reporting.localization.Localization(__file__, 167, 25), getitem___77505, int_77502)
        
        # Getting the type of 'x2' (line 167)
        x2_77507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 39), 'x2', False)
        # Processing the call keyword arguments (line 167)
        kwargs_77508 = {}
        # Getting the type of 'max' (line 167)
        max_77501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 21), 'max', False)
        # Calling max(args, kwargs) (line 167)
        max_call_result_77509 = invoke(stypy.reporting.localization.Localization(__file__, 167, 21), max_77501, *[subscript_call_result_77506, x2_77507], **kwargs_77508)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 165, 20), list_77482, max_call_result_77509)
        # Adding element type (line 165)
        
        # Call to max(...): (line 168)
        # Processing the call arguments (line 168)
        
        # Obtaining the type of the subscript
        int_77511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 168, 35), 'int')
        # Getting the type of 'self' (line 168)
        self_77512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 25), 'self', False)
        # Obtaining the member 'bbox' of a type (line 168)
        bbox_77513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 168, 25), self_77512, 'bbox')
        # Obtaining the member '__getitem__' of a type (line 168)
        getitem___77514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 168, 25), bbox_77513, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 168)
        subscript_call_result_77515 = invoke(stypy.reporting.localization.Localization(__file__, 168, 25), getitem___77514, int_77511)
        
        # Getting the type of 'y2' (line 168)
        y2_77516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 39), 'y2', False)
        # Processing the call keyword arguments (line 168)
        kwargs_77517 = {}
        # Getting the type of 'max' (line 168)
        max_77510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 21), 'max', False)
        # Calling max(args, kwargs) (line 168)
        max_call_result_77518 = invoke(stypy.reporting.localization.Localization(__file__, 168, 21), max_77510, *[subscript_call_result_77515, y2_77516], **kwargs_77517)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 165, 20), list_77482, max_call_result_77518)
        
        # Getting the type of 'self' (line 165)
        self_77519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 8), 'self')
        # Setting the type of the member 'bbox' of a type (line 165)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 8), self_77519, 'bbox', list_77482)
        
        # ################# End of '_update_bbox(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_update_bbox' in the type store
        # Getting the type of 'stypy_return_type' (line 164)
        stypy_return_type_77520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_77520)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_update_bbox'
        return stypy_return_type_77520


    @norecursion
    def set_canvas_size(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'set_canvas_size'
        module_type_store = module_type_store.open_function_context('set_canvas_size', 170, 4, False)
        # Assigning a type to the variable 'self' (line 171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 171, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendAgg.set_canvas_size.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendAgg.set_canvas_size.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendAgg.set_canvas_size.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendAgg.set_canvas_size.__dict__.__setitem__('stypy_function_name', 'MathtextBackendAgg.set_canvas_size')
        MathtextBackendAgg.set_canvas_size.__dict__.__setitem__('stypy_param_names_list', ['w', 'h', 'd'])
        MathtextBackendAgg.set_canvas_size.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendAgg.set_canvas_size.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendAgg.set_canvas_size.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendAgg.set_canvas_size.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendAgg.set_canvas_size.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendAgg.set_canvas_size.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendAgg.set_canvas_size', ['w', 'h', 'd'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'set_canvas_size', localization, ['w', 'h', 'd'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'set_canvas_size(...)' code ##################

        
        # Call to set_canvas_size(...): (line 171)
        # Processing the call arguments (line 171)
        # Getting the type of 'self' (line 171)
        self_77523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 40), 'self', False)
        # Getting the type of 'w' (line 171)
        w_77524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 46), 'w', False)
        # Getting the type of 'h' (line 171)
        h_77525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 49), 'h', False)
        # Getting the type of 'd' (line 171)
        d_77526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 52), 'd', False)
        # Processing the call keyword arguments (line 171)
        kwargs_77527 = {}
        # Getting the type of 'MathtextBackend' (line 171)
        MathtextBackend_77521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 8), 'MathtextBackend', False)
        # Obtaining the member 'set_canvas_size' of a type (line 171)
        set_canvas_size_77522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 171, 8), MathtextBackend_77521, 'set_canvas_size')
        # Calling set_canvas_size(args, kwargs) (line 171)
        set_canvas_size_call_result_77528 = invoke(stypy.reporting.localization.Localization(__file__, 171, 8), set_canvas_size_77522, *[self_77523, w_77524, h_77525, d_77526], **kwargs_77527)
        
        
        
        # Getting the type of 'self' (line 172)
        self_77529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 11), 'self')
        # Obtaining the member 'mode' of a type (line 172)
        mode_77530 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 11), self_77529, 'mode')
        unicode_77531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, 24), 'unicode', u'bbox')
        # Applying the binary operator '!=' (line 172)
        result_ne_77532 = python_operator(stypy.reporting.localization.Localization(__file__, 172, 11), '!=', mode_77530, unicode_77531)
        
        # Testing the type of an if condition (line 172)
        if_condition_77533 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 172, 8), result_ne_77532)
        # Assigning a type to the variable 'if_condition_77533' (line 172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 172, 8), 'if_condition_77533', if_condition_77533)
        # SSA begins for if statement (line 172)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 173):
        
        # Assigning a Call to a Attribute (line 173):
        
        # Call to FT2Image(...): (line 173)
        # Processing the call arguments (line 173)
        
        # Call to ceil(...): (line 173)
        # Processing the call arguments (line 173)
        # Getting the type of 'w' (line 173)
        w_77536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 39), 'w', False)
        # Processing the call keyword arguments (line 173)
        kwargs_77537 = {}
        # Getting the type of 'ceil' (line 173)
        ceil_77535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 34), 'ceil', False)
        # Calling ceil(args, kwargs) (line 173)
        ceil_call_result_77538 = invoke(stypy.reporting.localization.Localization(__file__, 173, 34), ceil_77535, *[w_77536], **kwargs_77537)
        
        
        # Call to ceil(...): (line 173)
        # Processing the call arguments (line 173)
        # Getting the type of 'h' (line 173)
        h_77540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 48), 'h', False)
        
        # Call to max(...): (line 173)
        # Processing the call arguments (line 173)
        # Getting the type of 'd' (line 173)
        d_77542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 56), 'd', False)
        int_77543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 173, 59), 'int')
        # Processing the call keyword arguments (line 173)
        kwargs_77544 = {}
        # Getting the type of 'max' (line 173)
        max_77541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 52), 'max', False)
        # Calling max(args, kwargs) (line 173)
        max_call_result_77545 = invoke(stypy.reporting.localization.Localization(__file__, 173, 52), max_77541, *[d_77542, int_77543], **kwargs_77544)
        
        # Applying the binary operator '+' (line 173)
        result_add_77546 = python_operator(stypy.reporting.localization.Localization(__file__, 173, 48), '+', h_77540, max_call_result_77545)
        
        # Processing the call keyword arguments (line 173)
        kwargs_77547 = {}
        # Getting the type of 'ceil' (line 173)
        ceil_77539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 43), 'ceil', False)
        # Calling ceil(args, kwargs) (line 173)
        ceil_call_result_77548 = invoke(stypy.reporting.localization.Localization(__file__, 173, 43), ceil_77539, *[result_add_77546], **kwargs_77547)
        
        # Processing the call keyword arguments (line 173)
        kwargs_77549 = {}
        # Getting the type of 'FT2Image' (line 173)
        FT2Image_77534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 25), 'FT2Image', False)
        # Calling FT2Image(args, kwargs) (line 173)
        FT2Image_call_result_77550 = invoke(stypy.reporting.localization.Localization(__file__, 173, 25), FT2Image_77534, *[ceil_call_result_77538, ceil_call_result_77548], **kwargs_77549)
        
        # Getting the type of 'self' (line 173)
        self_77551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 12), 'self')
        # Setting the type of the member 'image' of a type (line 173)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 173, 12), self_77551, 'image', FT2Image_call_result_77550)
        # SSA join for if statement (line 172)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'set_canvas_size(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'set_canvas_size' in the type store
        # Getting the type of 'stypy_return_type' (line 170)
        stypy_return_type_77552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_77552)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'set_canvas_size'
        return stypy_return_type_77552


    @norecursion
    def render_glyph(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render_glyph'
        module_type_store = module_type_store.open_function_context('render_glyph', 175, 4, False)
        # Assigning a type to the variable 'self' (line 176)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 176, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendAgg.render_glyph.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendAgg.render_glyph.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendAgg.render_glyph.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendAgg.render_glyph.__dict__.__setitem__('stypy_function_name', 'MathtextBackendAgg.render_glyph')
        MathtextBackendAgg.render_glyph.__dict__.__setitem__('stypy_param_names_list', ['ox', 'oy', 'info'])
        MathtextBackendAgg.render_glyph.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendAgg.render_glyph.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendAgg.render_glyph.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendAgg.render_glyph.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendAgg.render_glyph.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendAgg.render_glyph.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendAgg.render_glyph', ['ox', 'oy', 'info'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render_glyph', localization, ['ox', 'oy', 'info'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render_glyph(...)' code ##################

        
        
        # Getting the type of 'self' (line 176)
        self_77553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 176, 11), 'self')
        # Obtaining the member 'mode' of a type (line 176)
        mode_77554 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 176, 11), self_77553, 'mode')
        unicode_77555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 176, 24), 'unicode', u'bbox')
        # Applying the binary operator '==' (line 176)
        result_eq_77556 = python_operator(stypy.reporting.localization.Localization(__file__, 176, 11), '==', mode_77554, unicode_77555)
        
        # Testing the type of an if condition (line 176)
        if_condition_77557 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 176, 8), result_eq_77556)
        # Assigning a type to the variable 'if_condition_77557' (line 176)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 176, 8), 'if_condition_77557', if_condition_77557)
        # SSA begins for if statement (line 176)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to _update_bbox(...): (line 177)
        # Processing the call arguments (line 177)
        # Getting the type of 'ox' (line 177)
        ox_77560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 30), 'ox', False)
        # Getting the type of 'info' (line 177)
        info_77561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 35), 'info', False)
        # Obtaining the member 'metrics' of a type (line 177)
        metrics_77562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 177, 35), info_77561, 'metrics')
        # Obtaining the member 'xmin' of a type (line 177)
        xmin_77563 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 177, 35), metrics_77562, 'xmin')
        # Applying the binary operator '+' (line 177)
        result_add_77564 = python_operator(stypy.reporting.localization.Localization(__file__, 177, 30), '+', ox_77560, xmin_77563)
        
        # Getting the type of 'oy' (line 178)
        oy_77565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 30), 'oy', False)
        # Getting the type of 'info' (line 178)
        info_77566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 35), 'info', False)
        # Obtaining the member 'metrics' of a type (line 178)
        metrics_77567 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 178, 35), info_77566, 'metrics')
        # Obtaining the member 'ymax' of a type (line 178)
        ymax_77568 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 178, 35), metrics_77567, 'ymax')
        # Applying the binary operator '-' (line 178)
        result_sub_77569 = python_operator(stypy.reporting.localization.Localization(__file__, 178, 30), '-', oy_77565, ymax_77568)
        
        # Getting the type of 'ox' (line 179)
        ox_77570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 30), 'ox', False)
        # Getting the type of 'info' (line 179)
        info_77571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 35), 'info', False)
        # Obtaining the member 'metrics' of a type (line 179)
        metrics_77572 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 179, 35), info_77571, 'metrics')
        # Obtaining the member 'xmax' of a type (line 179)
        xmax_77573 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 179, 35), metrics_77572, 'xmax')
        # Applying the binary operator '+' (line 179)
        result_add_77574 = python_operator(stypy.reporting.localization.Localization(__file__, 179, 30), '+', ox_77570, xmax_77573)
        
        # Getting the type of 'oy' (line 180)
        oy_77575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 30), 'oy', False)
        # Getting the type of 'info' (line 180)
        info_77576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 35), 'info', False)
        # Obtaining the member 'metrics' of a type (line 180)
        metrics_77577 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 180, 35), info_77576, 'metrics')
        # Obtaining the member 'ymin' of a type (line 180)
        ymin_77578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 180, 35), metrics_77577, 'ymin')
        # Applying the binary operator '-' (line 180)
        result_sub_77579 = python_operator(stypy.reporting.localization.Localization(__file__, 180, 30), '-', oy_77575, ymin_77578)
        
        # Processing the call keyword arguments (line 177)
        kwargs_77580 = {}
        # Getting the type of 'self' (line 177)
        self_77558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 12), 'self', False)
        # Obtaining the member '_update_bbox' of a type (line 177)
        _update_bbox_77559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 177, 12), self_77558, '_update_bbox')
        # Calling _update_bbox(args, kwargs) (line 177)
        _update_bbox_call_result_77581 = invoke(stypy.reporting.localization.Localization(__file__, 177, 12), _update_bbox_77559, *[result_add_77564, result_sub_77569, result_add_77574, result_sub_77579], **kwargs_77580)
        
        # SSA branch for the else part of an if statement (line 176)
        module_type_store.open_ssa_branch('else')
        
        # Call to draw_glyph_to_bitmap(...): (line 182)
        # Processing the call arguments (line 182)
        # Getting the type of 'self' (line 183)
        self_77585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 16), 'self', False)
        # Obtaining the member 'image' of a type (line 183)
        image_77586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 183, 16), self_77585, 'image')
        # Getting the type of 'ox' (line 183)
        ox_77587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 28), 'ox', False)
        # Getting the type of 'oy' (line 183)
        oy_77588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 32), 'oy', False)
        # Getting the type of 'info' (line 183)
        info_77589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 37), 'info', False)
        # Obtaining the member 'metrics' of a type (line 183)
        metrics_77590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 183, 37), info_77589, 'metrics')
        # Obtaining the member 'iceberg' of a type (line 183)
        iceberg_77591 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 183, 37), metrics_77590, 'iceberg')
        # Applying the binary operator '-' (line 183)
        result_sub_77592 = python_operator(stypy.reporting.localization.Localization(__file__, 183, 32), '-', oy_77588, iceberg_77591)
        
        # Getting the type of 'info' (line 183)
        info_77593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 59), 'info', False)
        # Obtaining the member 'glyph' of a type (line 183)
        glyph_77594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 183, 59), info_77593, 'glyph')
        # Processing the call keyword arguments (line 182)
        
        # Obtaining the type of the subscript
        unicode_77595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 37), 'unicode', u'text.antialiased')
        # Getting the type of 'rcParams' (line 184)
        rcParams_77596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 28), 'rcParams', False)
        # Obtaining the member '__getitem__' of a type (line 184)
        getitem___77597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 184, 28), rcParams_77596, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 184)
        subscript_call_result_77598 = invoke(stypy.reporting.localization.Localization(__file__, 184, 28), getitem___77597, unicode_77595)
        
        keyword_77599 = subscript_call_result_77598
        kwargs_77600 = {'antialiased': keyword_77599}
        # Getting the type of 'info' (line 182)
        info_77582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 12), 'info', False)
        # Obtaining the member 'font' of a type (line 182)
        font_77583 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 182, 12), info_77582, 'font')
        # Obtaining the member 'draw_glyph_to_bitmap' of a type (line 182)
        draw_glyph_to_bitmap_77584 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 182, 12), font_77583, 'draw_glyph_to_bitmap')
        # Calling draw_glyph_to_bitmap(args, kwargs) (line 182)
        draw_glyph_to_bitmap_call_result_77601 = invoke(stypy.reporting.localization.Localization(__file__, 182, 12), draw_glyph_to_bitmap_77584, *[image_77586, ox_77587, result_sub_77592, glyph_77594], **kwargs_77600)
        
        # SSA join for if statement (line 176)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'render_glyph(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render_glyph' in the type store
        # Getting the type of 'stypy_return_type' (line 175)
        stypy_return_type_77602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_77602)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render_glyph'
        return stypy_return_type_77602


    @norecursion
    def render_rect_filled(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render_rect_filled'
        module_type_store = module_type_store.open_function_context('render_rect_filled', 186, 4, False)
        # Assigning a type to the variable 'self' (line 187)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 187, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendAgg.render_rect_filled.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendAgg.render_rect_filled.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendAgg.render_rect_filled.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendAgg.render_rect_filled.__dict__.__setitem__('stypy_function_name', 'MathtextBackendAgg.render_rect_filled')
        MathtextBackendAgg.render_rect_filled.__dict__.__setitem__('stypy_param_names_list', ['x1', 'y1', 'x2', 'y2'])
        MathtextBackendAgg.render_rect_filled.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendAgg.render_rect_filled.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendAgg.render_rect_filled.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendAgg.render_rect_filled.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendAgg.render_rect_filled.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendAgg.render_rect_filled.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendAgg.render_rect_filled', ['x1', 'y1', 'x2', 'y2'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render_rect_filled', localization, ['x1', 'y1', 'x2', 'y2'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render_rect_filled(...)' code ##################

        
        
        # Getting the type of 'self' (line 187)
        self_77603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 11), 'self')
        # Obtaining the member 'mode' of a type (line 187)
        mode_77604 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 187, 11), self_77603, 'mode')
        unicode_77605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 187, 24), 'unicode', u'bbox')
        # Applying the binary operator '==' (line 187)
        result_eq_77606 = python_operator(stypy.reporting.localization.Localization(__file__, 187, 11), '==', mode_77604, unicode_77605)
        
        # Testing the type of an if condition (line 187)
        if_condition_77607 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 187, 8), result_eq_77606)
        # Assigning a type to the variable 'if_condition_77607' (line 187)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 187, 8), 'if_condition_77607', if_condition_77607)
        # SSA begins for if statement (line 187)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to _update_bbox(...): (line 188)
        # Processing the call arguments (line 188)
        # Getting the type of 'x1' (line 188)
        x1_77610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 30), 'x1', False)
        # Getting the type of 'y1' (line 188)
        y1_77611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 34), 'y1', False)
        # Getting the type of 'x2' (line 188)
        x2_77612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 38), 'x2', False)
        # Getting the type of 'y2' (line 188)
        y2_77613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 42), 'y2', False)
        # Processing the call keyword arguments (line 188)
        kwargs_77614 = {}
        # Getting the type of 'self' (line 188)
        self_77608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 12), 'self', False)
        # Obtaining the member '_update_bbox' of a type (line 188)
        _update_bbox_77609 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 188, 12), self_77608, '_update_bbox')
        # Calling _update_bbox(args, kwargs) (line 188)
        _update_bbox_call_result_77615 = invoke(stypy.reporting.localization.Localization(__file__, 188, 12), _update_bbox_77609, *[x1_77610, y1_77611, x2_77612, y2_77613], **kwargs_77614)
        
        # SSA branch for the else part of an if statement (line 187)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 190):
        
        # Assigning a Call to a Name (line 190):
        
        # Call to max(...): (line 190)
        # Processing the call arguments (line 190)
        
        # Call to int(...): (line 190)
        # Processing the call arguments (line 190)
        # Getting the type of 'y2' (line 190)
        y2_77618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 29), 'y2', False)
        # Getting the type of 'y1' (line 190)
        y1_77619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 34), 'y1', False)
        # Applying the binary operator '-' (line 190)
        result_sub_77620 = python_operator(stypy.reporting.localization.Localization(__file__, 190, 29), '-', y2_77618, y1_77619)
        
        # Processing the call keyword arguments (line 190)
        kwargs_77621 = {}
        # Getting the type of 'int' (line 190)
        int_77617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 25), 'int', False)
        # Calling int(args, kwargs) (line 190)
        int_call_result_77622 = invoke(stypy.reporting.localization.Localization(__file__, 190, 25), int_77617, *[result_sub_77620], **kwargs_77621)
        
        int_77623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 40), 'int')
        # Applying the binary operator '-' (line 190)
        result_sub_77624 = python_operator(stypy.reporting.localization.Localization(__file__, 190, 25), '-', int_call_result_77622, int_77623)
        
        int_77625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 43), 'int')
        # Processing the call keyword arguments (line 190)
        kwargs_77626 = {}
        # Getting the type of 'max' (line 190)
        max_77616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 21), 'max', False)
        # Calling max(args, kwargs) (line 190)
        max_call_result_77627 = invoke(stypy.reporting.localization.Localization(__file__, 190, 21), max_77616, *[result_sub_77624, int_77625], **kwargs_77626)
        
        # Assigning a type to the variable 'height' (line 190)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 190, 12), 'height', max_call_result_77627)
        
        
        # Getting the type of 'height' (line 191)
        height_77628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 15), 'height')
        int_77629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 191, 25), 'int')
        # Applying the binary operator '==' (line 191)
        result_eq_77630 = python_operator(stypy.reporting.localization.Localization(__file__, 191, 15), '==', height_77628, int_77629)
        
        # Testing the type of an if condition (line 191)
        if_condition_77631 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 191, 12), result_eq_77630)
        # Assigning a type to the variable 'if_condition_77631' (line 191)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'if_condition_77631', if_condition_77631)
        # SSA begins for if statement (line 191)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 192):
        
        # Assigning a BinOp to a Name (line 192):
        # Getting the type of 'y2' (line 192)
        y2_77632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 26), 'y2')
        # Getting the type of 'y1' (line 192)
        y1_77633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 31), 'y1')
        # Applying the binary operator '+' (line 192)
        result_add_77634 = python_operator(stypy.reporting.localization.Localization(__file__, 192, 26), '+', y2_77632, y1_77633)
        
        float_77635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 192, 37), 'float')
        # Applying the binary operator 'div' (line 192)
        result_div_77636 = python_operator(stypy.reporting.localization.Localization(__file__, 192, 25), 'div', result_add_77634, float_77635)
        
        # Assigning a type to the variable 'center' (line 192)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 192, 16), 'center', result_div_77636)
        
        # Assigning a Call to a Name (line 193):
        
        # Assigning a Call to a Name (line 193):
        
        # Call to int(...): (line 193)
        # Processing the call arguments (line 193)
        # Getting the type of 'center' (line 193)
        center_77638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 24), 'center', False)
        # Getting the type of 'height' (line 193)
        height_77639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 34), 'height', False)
        int_77640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 193, 43), 'int')
        # Applying the binary operator '+' (line 193)
        result_add_77641 = python_operator(stypy.reporting.localization.Localization(__file__, 193, 34), '+', height_77639, int_77640)
        
        float_77642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 193, 48), 'float')
        # Applying the binary operator 'div' (line 193)
        result_div_77643 = python_operator(stypy.reporting.localization.Localization(__file__, 193, 33), 'div', result_add_77641, float_77642)
        
        # Applying the binary operator '-' (line 193)
        result_sub_77644 = python_operator(stypy.reporting.localization.Localization(__file__, 193, 24), '-', center_77638, result_div_77643)
        
        # Processing the call keyword arguments (line 193)
        kwargs_77645 = {}
        # Getting the type of 'int' (line 193)
        int_77637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 20), 'int', False)
        # Calling int(args, kwargs) (line 193)
        int_call_result_77646 = invoke(stypy.reporting.localization.Localization(__file__, 193, 20), int_77637, *[result_sub_77644], **kwargs_77645)
        
        # Assigning a type to the variable 'y' (line 193)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 16), 'y', int_call_result_77646)
        # SSA branch for the else part of an if statement (line 191)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 195):
        
        # Assigning a Call to a Name (line 195):
        
        # Call to int(...): (line 195)
        # Processing the call arguments (line 195)
        # Getting the type of 'y1' (line 195)
        y1_77648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 24), 'y1', False)
        # Processing the call keyword arguments (line 195)
        kwargs_77649 = {}
        # Getting the type of 'int' (line 195)
        int_77647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 20), 'int', False)
        # Calling int(args, kwargs) (line 195)
        int_call_result_77650 = invoke(stypy.reporting.localization.Localization(__file__, 195, 20), int_77647, *[y1_77648], **kwargs_77649)
        
        # Assigning a type to the variable 'y' (line 195)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 195, 16), 'y', int_call_result_77650)
        # SSA join for if statement (line 191)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to draw_rect_filled(...): (line 196)
        # Processing the call arguments (line 196)
        
        # Call to int(...): (line 196)
        # Processing the call arguments (line 196)
        # Getting the type of 'x1' (line 196)
        x1_77655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 44), 'x1', False)
        # Processing the call keyword arguments (line 196)
        kwargs_77656 = {}
        # Getting the type of 'int' (line 196)
        int_77654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 40), 'int', False)
        # Calling int(args, kwargs) (line 196)
        int_call_result_77657 = invoke(stypy.reporting.localization.Localization(__file__, 196, 40), int_77654, *[x1_77655], **kwargs_77656)
        
        # Getting the type of 'y' (line 196)
        y_77658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 49), 'y', False)
        
        # Call to ceil(...): (line 196)
        # Processing the call arguments (line 196)
        # Getting the type of 'x2' (line 196)
        x2_77660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 57), 'x2', False)
        # Processing the call keyword arguments (line 196)
        kwargs_77661 = {}
        # Getting the type of 'ceil' (line 196)
        ceil_77659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 52), 'ceil', False)
        # Calling ceil(args, kwargs) (line 196)
        ceil_call_result_77662 = invoke(stypy.reporting.localization.Localization(__file__, 196, 52), ceil_77659, *[x2_77660], **kwargs_77661)
        
        # Getting the type of 'y' (line 196)
        y_77663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 62), 'y', False)
        # Getting the type of 'height' (line 196)
        height_77664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 66), 'height', False)
        # Applying the binary operator '+' (line 196)
        result_add_77665 = python_operator(stypy.reporting.localization.Localization(__file__, 196, 62), '+', y_77663, height_77664)
        
        # Processing the call keyword arguments (line 196)
        kwargs_77666 = {}
        # Getting the type of 'self' (line 196)
        self_77651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 12), 'self', False)
        # Obtaining the member 'image' of a type (line 196)
        image_77652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 196, 12), self_77651, 'image')
        # Obtaining the member 'draw_rect_filled' of a type (line 196)
        draw_rect_filled_77653 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 196, 12), image_77652, 'draw_rect_filled')
        # Calling draw_rect_filled(args, kwargs) (line 196)
        draw_rect_filled_call_result_77667 = invoke(stypy.reporting.localization.Localization(__file__, 196, 12), draw_rect_filled_77653, *[int_call_result_77657, y_77658, ceil_call_result_77662, result_add_77665], **kwargs_77666)
        
        # SSA join for if statement (line 187)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'render_rect_filled(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render_rect_filled' in the type store
        # Getting the type of 'stypy_return_type' (line 186)
        stypy_return_type_77668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_77668)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render_rect_filled'
        return stypy_return_type_77668


    @norecursion
    def get_results(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_results'
        module_type_store = module_type_store.open_function_context('get_results', 198, 4, False)
        # Assigning a type to the variable 'self' (line 199)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 199, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendAgg.get_results.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendAgg.get_results.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendAgg.get_results.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendAgg.get_results.__dict__.__setitem__('stypy_function_name', 'MathtextBackendAgg.get_results')
        MathtextBackendAgg.get_results.__dict__.__setitem__('stypy_param_names_list', ['box', 'used_characters'])
        MathtextBackendAgg.get_results.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendAgg.get_results.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendAgg.get_results.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendAgg.get_results.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendAgg.get_results.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendAgg.get_results.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendAgg.get_results', ['box', 'used_characters'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_results', localization, ['box', 'used_characters'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_results(...)' code ##################

        
        # Assigning a Str to a Attribute (line 199):
        
        # Assigning a Str to a Attribute (line 199):
        unicode_77669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 199, 20), 'unicode', u'bbox')
        # Getting the type of 'self' (line 199)
        self_77670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 8), 'self')
        # Setting the type of the member 'mode' of a type (line 199)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 199, 8), self_77670, 'mode', unicode_77669)
        
        # Assigning a Attribute to a Name (line 200):
        
        # Assigning a Attribute to a Name (line 200):
        # Getting the type of 'box' (line 200)
        box_77671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 22), 'box')
        # Obtaining the member 'height' of a type (line 200)
        height_77672 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 200, 22), box_77671, 'height')
        # Assigning a type to the variable 'orig_height' (line 200)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 200, 8), 'orig_height', height_77672)
        
        # Assigning a Attribute to a Name (line 201):
        
        # Assigning a Attribute to a Name (line 201):
        # Getting the type of 'box' (line 201)
        box_77673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 22), 'box')
        # Obtaining the member 'depth' of a type (line 201)
        depth_77674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 201, 22), box_77673, 'depth')
        # Assigning a type to the variable 'orig_depth' (line 201)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 201, 8), 'orig_depth', depth_77674)
        
        # Call to ship(...): (line 202)
        # Processing the call arguments (line 202)
        int_77676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 13), 'int')
        int_77677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 16), 'int')
        # Getting the type of 'box' (line 202)
        box_77678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 19), 'box', False)
        # Processing the call keyword arguments (line 202)
        kwargs_77679 = {}
        # Getting the type of 'ship' (line 202)
        ship_77675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 8), 'ship', False)
        # Calling ship(args, kwargs) (line 202)
        ship_call_result_77680 = invoke(stypy.reporting.localization.Localization(__file__, 202, 8), ship_77675, *[int_77676, int_77677, box_77678], **kwargs_77679)
        
        
        # Assigning a Attribute to a Name (line 203):
        
        # Assigning a Attribute to a Name (line 203):
        # Getting the type of 'self' (line 203)
        self_77681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 15), 'self')
        # Obtaining the member 'bbox' of a type (line 203)
        bbox_77682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 203, 15), self_77681, 'bbox')
        # Assigning a type to the variable 'bbox' (line 203)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 203, 8), 'bbox', bbox_77682)
        
        # Assigning a List to a Name (line 204):
        
        # Assigning a List to a Name (line 204):
        
        # Obtaining an instance of the builtin type 'list' (line 204)
        list_77683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 204)
        # Adding element type (line 204)
        
        # Obtaining the type of the subscript
        int_77684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 21), 'int')
        # Getting the type of 'bbox' (line 204)
        bbox_77685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 16), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 204)
        getitem___77686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 204, 16), bbox_77685, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 204)
        subscript_call_result_77687 = invoke(stypy.reporting.localization.Localization(__file__, 204, 16), getitem___77686, int_77684)
        
        int_77688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 26), 'int')
        # Applying the binary operator '-' (line 204)
        result_sub_77689 = python_operator(stypy.reporting.localization.Localization(__file__, 204, 16), '-', subscript_call_result_77687, int_77688)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 204, 15), list_77683, result_sub_77689)
        # Adding element type (line 204)
        
        # Obtaining the type of the subscript
        int_77690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 34), 'int')
        # Getting the type of 'bbox' (line 204)
        bbox_77691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 29), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 204)
        getitem___77692 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 204, 29), bbox_77691, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 204)
        subscript_call_result_77693 = invoke(stypy.reporting.localization.Localization(__file__, 204, 29), getitem___77692, int_77690)
        
        int_77694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 39), 'int')
        # Applying the binary operator '-' (line 204)
        result_sub_77695 = python_operator(stypy.reporting.localization.Localization(__file__, 204, 29), '-', subscript_call_result_77693, int_77694)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 204, 15), list_77683, result_sub_77695)
        # Adding element type (line 204)
        
        # Obtaining the type of the subscript
        int_77696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 47), 'int')
        # Getting the type of 'bbox' (line 204)
        bbox_77697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 42), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 204)
        getitem___77698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 204, 42), bbox_77697, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 204)
        subscript_call_result_77699 = invoke(stypy.reporting.localization.Localization(__file__, 204, 42), getitem___77698, int_77696)
        
        int_77700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 52), 'int')
        # Applying the binary operator '+' (line 204)
        result_add_77701 = python_operator(stypy.reporting.localization.Localization(__file__, 204, 42), '+', subscript_call_result_77699, int_77700)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 204, 15), list_77683, result_add_77701)
        # Adding element type (line 204)
        
        # Obtaining the type of the subscript
        int_77702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 60), 'int')
        # Getting the type of 'bbox' (line 204)
        bbox_77703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 55), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 204)
        getitem___77704 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 204, 55), bbox_77703, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 204)
        subscript_call_result_77705 = invoke(stypy.reporting.localization.Localization(__file__, 204, 55), getitem___77704, int_77702)
        
        int_77706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 65), 'int')
        # Applying the binary operator '+' (line 204)
        result_add_77707 = python_operator(stypy.reporting.localization.Localization(__file__, 204, 55), '+', subscript_call_result_77705, int_77706)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 204, 15), list_77683, result_add_77707)
        
        # Assigning a type to the variable 'bbox' (line 204)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 204, 8), 'bbox', list_77683)
        
        # Assigning a Str to a Attribute (line 205):
        
        # Assigning a Str to a Attribute (line 205):
        unicode_77708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 205, 20), 'unicode', u'render')
        # Getting the type of 'self' (line 205)
        self_77709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 8), 'self')
        # Setting the type of the member 'mode' of a type (line 205)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 205, 8), self_77709, 'mode', unicode_77708)
        
        # Call to set_canvas_size(...): (line 206)
        # Processing the call arguments (line 206)
        
        # Obtaining the type of the subscript
        int_77712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 207, 17), 'int')
        # Getting the type of 'bbox' (line 207)
        bbox_77713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 12), 'bbox', False)
        # Obtaining the member '__getitem__' of a type (line 207)
        getitem___77714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 12), bbox_77713, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 207)
        subscript_call_result_77715 = invoke(stypy.reporting.localization.Localization(__file__, 207, 12), getitem___77714, int_77712)
        
        
        # Obtaining the type of the subscript
        int_77716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 207, 27), 'int')
        # Getting the type of 'bbox' (line 207)
        bbox_77717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 22), 'bbox', False)
        # Obtaining the member '__getitem__' of a type (line 207)
        getitem___77718 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 22), bbox_77717, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 207)
        subscript_call_result_77719 = invoke(stypy.reporting.localization.Localization(__file__, 207, 22), getitem___77718, int_77716)
        
        # Applying the binary operator '-' (line 207)
        result_sub_77720 = python_operator(stypy.reporting.localization.Localization(__file__, 207, 12), '-', subscript_call_result_77715, subscript_call_result_77719)
        
        
        # Obtaining the type of the subscript
        int_77721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 18), 'int')
        # Getting the type of 'bbox' (line 208)
        bbox_77722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 13), 'bbox', False)
        # Obtaining the member '__getitem__' of a type (line 208)
        getitem___77723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 208, 13), bbox_77722, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 208)
        subscript_call_result_77724 = invoke(stypy.reporting.localization.Localization(__file__, 208, 13), getitem___77723, int_77721)
        
        
        # Obtaining the type of the subscript
        int_77725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 28), 'int')
        # Getting the type of 'bbox' (line 208)
        bbox_77726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 23), 'bbox', False)
        # Obtaining the member '__getitem__' of a type (line 208)
        getitem___77727 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 208, 23), bbox_77726, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 208)
        subscript_call_result_77728 = invoke(stypy.reporting.localization.Localization(__file__, 208, 23), getitem___77727, int_77725)
        
        # Applying the binary operator '-' (line 208)
        result_sub_77729 = python_operator(stypy.reporting.localization.Localization(__file__, 208, 13), '-', subscript_call_result_77724, subscript_call_result_77728)
        
        # Getting the type of 'orig_depth' (line 208)
        orig_depth_77730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 34), 'orig_depth', False)
        # Applying the binary operator '-' (line 208)
        result_sub_77731 = python_operator(stypy.reporting.localization.Localization(__file__, 208, 12), '-', result_sub_77729, orig_depth_77730)
        
        
        # Obtaining the type of the subscript
        int_77732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 209, 18), 'int')
        # Getting the type of 'bbox' (line 209)
        bbox_77733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 13), 'bbox', False)
        # Obtaining the member '__getitem__' of a type (line 209)
        getitem___77734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 209, 13), bbox_77733, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 209)
        subscript_call_result_77735 = invoke(stypy.reporting.localization.Localization(__file__, 209, 13), getitem___77734, int_77732)
        
        
        # Obtaining the type of the subscript
        int_77736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 209, 28), 'int')
        # Getting the type of 'bbox' (line 209)
        bbox_77737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 23), 'bbox', False)
        # Obtaining the member '__getitem__' of a type (line 209)
        getitem___77738 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 209, 23), bbox_77737, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 209)
        subscript_call_result_77739 = invoke(stypy.reporting.localization.Localization(__file__, 209, 23), getitem___77738, int_77736)
        
        # Applying the binary operator '-' (line 209)
        result_sub_77740 = python_operator(stypy.reporting.localization.Localization(__file__, 209, 13), '-', subscript_call_result_77735, subscript_call_result_77739)
        
        # Getting the type of 'orig_height' (line 209)
        orig_height_77741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 34), 'orig_height', False)
        # Applying the binary operator '-' (line 209)
        result_sub_77742 = python_operator(stypy.reporting.localization.Localization(__file__, 209, 12), '-', result_sub_77740, orig_height_77741)
        
        # Processing the call keyword arguments (line 206)
        kwargs_77743 = {}
        # Getting the type of 'self' (line 206)
        self_77710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'self', False)
        # Obtaining the member 'set_canvas_size' of a type (line 206)
        set_canvas_size_77711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 8), self_77710, 'set_canvas_size')
        # Calling set_canvas_size(args, kwargs) (line 206)
        set_canvas_size_call_result_77744 = invoke(stypy.reporting.localization.Localization(__file__, 206, 8), set_canvas_size_77711, *[result_sub_77720, result_sub_77731, result_sub_77742], **kwargs_77743)
        
        
        # Call to ship(...): (line 210)
        # Processing the call arguments (line 210)
        
        
        # Obtaining the type of the subscript
        int_77746 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 210, 19), 'int')
        # Getting the type of 'bbox' (line 210)
        bbox_77747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 14), 'bbox', False)
        # Obtaining the member '__getitem__' of a type (line 210)
        getitem___77748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 210, 14), bbox_77747, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 210)
        subscript_call_result_77749 = invoke(stypy.reporting.localization.Localization(__file__, 210, 14), getitem___77748, int_77746)
        
        # Applying the 'usub' unary operator (line 210)
        result___neg___77750 = python_operator(stypy.reporting.localization.Localization(__file__, 210, 13), 'usub', subscript_call_result_77749)
        
        
        
        # Obtaining the type of the subscript
        int_77751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 210, 29), 'int')
        # Getting the type of 'bbox' (line 210)
        bbox_77752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 24), 'bbox', False)
        # Obtaining the member '__getitem__' of a type (line 210)
        getitem___77753 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 210, 24), bbox_77752, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 210)
        subscript_call_result_77754 = invoke(stypy.reporting.localization.Localization(__file__, 210, 24), getitem___77753, int_77751)
        
        # Applying the 'usub' unary operator (line 210)
        result___neg___77755 = python_operator(stypy.reporting.localization.Localization(__file__, 210, 23), 'usub', subscript_call_result_77754)
        
        # Getting the type of 'box' (line 210)
        box_77756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 33), 'box', False)
        # Processing the call keyword arguments (line 210)
        kwargs_77757 = {}
        # Getting the type of 'ship' (line 210)
        ship_77745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 8), 'ship', False)
        # Calling ship(args, kwargs) (line 210)
        ship_call_result_77758 = invoke(stypy.reporting.localization.Localization(__file__, 210, 8), ship_77745, *[result___neg___77750, result___neg___77755, box_77756], **kwargs_77757)
        
        
        # Assigning a Tuple to a Name (line 211):
        
        # Assigning a Tuple to a Name (line 211):
        
        # Obtaining an instance of the builtin type 'tuple' (line 211)
        tuple_77759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 18), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 211)
        # Adding element type (line 211)
        # Getting the type of 'self' (line 211)
        self_77760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 18), 'self')
        # Obtaining the member 'ox' of a type (line 211)
        ox_77761 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 211, 18), self_77760, 'ox')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 18), tuple_77759, ox_77761)
        # Adding element type (line 211)
        # Getting the type of 'self' (line 212)
        self_77762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 18), 'self')
        # Obtaining the member 'oy' of a type (line 212)
        oy_77763 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 212, 18), self_77762, 'oy')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 18), tuple_77759, oy_77763)
        # Adding element type (line 211)
        # Getting the type of 'self' (line 213)
        self_77764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 18), 'self')
        # Obtaining the member 'width' of a type (line 213)
        width_77765 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 213, 18), self_77764, 'width')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 18), tuple_77759, width_77765)
        # Adding element type (line 211)
        # Getting the type of 'self' (line 214)
        self_77766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 18), 'self')
        # Obtaining the member 'height' of a type (line 214)
        height_77767 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 214, 18), self_77766, 'height')
        # Getting the type of 'self' (line 214)
        self_77768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 32), 'self')
        # Obtaining the member 'depth' of a type (line 214)
        depth_77769 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 214, 32), self_77768, 'depth')
        # Applying the binary operator '+' (line 214)
        result_add_77770 = python_operator(stypy.reporting.localization.Localization(__file__, 214, 18), '+', height_77767, depth_77769)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 18), tuple_77759, result_add_77770)
        # Adding element type (line 211)
        # Getting the type of 'self' (line 215)
        self_77771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 18), 'self')
        # Obtaining the member 'depth' of a type (line 215)
        depth_77772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 215, 18), self_77771, 'depth')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 18), tuple_77759, depth_77772)
        # Adding element type (line 211)
        # Getting the type of 'self' (line 216)
        self_77773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 18), 'self')
        # Obtaining the member 'image' of a type (line 216)
        image_77774 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 216, 18), self_77773, 'image')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 18), tuple_77759, image_77774)
        # Adding element type (line 211)
        # Getting the type of 'used_characters' (line 217)
        used_characters_77775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 18), 'used_characters')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 18), tuple_77759, used_characters_77775)
        
        # Assigning a type to the variable 'result' (line 211)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 211, 8), 'result', tuple_77759)
        
        # Assigning a Name to a Attribute (line 218):
        
        # Assigning a Name to a Attribute (line 218):
        # Getting the type of 'None' (line 218)
        None_77776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 21), 'None')
        # Getting the type of 'self' (line 218)
        self_77777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 8), 'self')
        # Setting the type of the member 'image' of a type (line 218)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 218, 8), self_77777, 'image', None_77776)
        # Getting the type of 'result' (line 219)
        result_77778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 15), 'result')
        # Assigning a type to the variable 'stypy_return_type' (line 219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 219, 8), 'stypy_return_type', result_77778)
        
        # ################# End of 'get_results(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_results' in the type store
        # Getting the type of 'stypy_return_type' (line 198)
        stypy_return_type_77779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_77779)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_results'
        return stypy_return_type_77779


    @norecursion
    def get_hinting_type(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_hinting_type'
        module_type_store = module_type_store.open_function_context('get_hinting_type', 221, 4, False)
        # Assigning a type to the variable 'self' (line 222)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 222, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendAgg.get_hinting_type.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendAgg.get_hinting_type.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendAgg.get_hinting_type.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendAgg.get_hinting_type.__dict__.__setitem__('stypy_function_name', 'MathtextBackendAgg.get_hinting_type')
        MathtextBackendAgg.get_hinting_type.__dict__.__setitem__('stypy_param_names_list', [])
        MathtextBackendAgg.get_hinting_type.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendAgg.get_hinting_type.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendAgg.get_hinting_type.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendAgg.get_hinting_type.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendAgg.get_hinting_type.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendAgg.get_hinting_type.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendAgg.get_hinting_type', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_hinting_type', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_hinting_type(...)' code ##################

        stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 222, 8))
        
        # 'from matplotlib.backends import backend_agg' statement (line 222)
        update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
        import_77780 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 222, 8), 'matplotlib.backends')

        if (type(import_77780) is not StypyTypeError):

            if (import_77780 != 'pyd_module'):
                __import__(import_77780)
                sys_modules_77781 = sys.modules[import_77780]
                import_from_module(stypy.reporting.localization.Localization(__file__, 222, 8), 'matplotlib.backends', sys_modules_77781.module_type_store, module_type_store, ['backend_agg'])
                nest_module(stypy.reporting.localization.Localization(__file__, 222, 8), __file__, sys_modules_77781, sys_modules_77781.module_type_store, module_type_store)
            else:
                from matplotlib.backends import backend_agg

                import_from_module(stypy.reporting.localization.Localization(__file__, 222, 8), 'matplotlib.backends', None, module_type_store, ['backend_agg'], [backend_agg])

        else:
            # Assigning a type to the variable 'matplotlib.backends' (line 222)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 222, 8), 'matplotlib.backends', import_77780)

        remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')
        
        
        # Call to get_hinting_flag(...): (line 223)
        # Processing the call keyword arguments (line 223)
        kwargs_77784 = {}
        # Getting the type of 'backend_agg' (line 223)
        backend_agg_77782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 15), 'backend_agg', False)
        # Obtaining the member 'get_hinting_flag' of a type (line 223)
        get_hinting_flag_77783 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 223, 15), backend_agg_77782, 'get_hinting_flag')
        # Calling get_hinting_flag(args, kwargs) (line 223)
        get_hinting_flag_call_result_77785 = invoke(stypy.reporting.localization.Localization(__file__, 223, 15), get_hinting_flag_77783, *[], **kwargs_77784)
        
        # Assigning a type to the variable 'stypy_return_type' (line 223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 8), 'stypy_return_type', get_hinting_flag_call_result_77785)
        
        # ################# End of 'get_hinting_type(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_hinting_type' in the type store
        # Getting the type of 'stypy_return_type' (line 221)
        stypy_return_type_77786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_77786)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_hinting_type'
        return stypy_return_type_77786


# Assigning a type to the variable 'MathtextBackendAgg' (line 151)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 151, 0), 'MathtextBackendAgg', MathtextBackendAgg)
# Declaration of the 'MathtextBackendBitmap' class
# Getting the type of 'MathtextBackendAgg' (line 225)
MathtextBackendAgg_77787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 28), 'MathtextBackendAgg')

class MathtextBackendBitmap(MathtextBackendAgg_77787, ):

    @norecursion
    def get_results(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_results'
        module_type_store = module_type_store.open_function_context('get_results', 226, 4, False)
        # Assigning a type to the variable 'self' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendBitmap.get_results.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendBitmap.get_results.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendBitmap.get_results.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendBitmap.get_results.__dict__.__setitem__('stypy_function_name', 'MathtextBackendBitmap.get_results')
        MathtextBackendBitmap.get_results.__dict__.__setitem__('stypy_param_names_list', ['box', 'used_characters'])
        MathtextBackendBitmap.get_results.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendBitmap.get_results.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendBitmap.get_results.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendBitmap.get_results.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendBitmap.get_results.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendBitmap.get_results.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendBitmap.get_results', ['box', 'used_characters'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_results', localization, ['box', 'used_characters'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_results(...)' code ##################

        
        # Assigning a Call to a Tuple (line 227):
        
        # Assigning a Call to a Name:
        
        # Call to get_results(...): (line 228)
        # Processing the call arguments (line 228)
        # Getting the type of 'self' (line 228)
        self_77790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 43), 'self', False)
        # Getting the type of 'box' (line 228)
        box_77791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 49), 'box', False)
        # Getting the type of 'used_characters' (line 228)
        used_characters_77792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 54), 'used_characters', False)
        # Processing the call keyword arguments (line 228)
        kwargs_77793 = {}
        # Getting the type of 'MathtextBackendAgg' (line 228)
        MathtextBackendAgg_77788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 12), 'MathtextBackendAgg', False)
        # Obtaining the member 'get_results' of a type (line 228)
        get_results_77789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 228, 12), MathtextBackendAgg_77788, 'get_results')
        # Calling get_results(args, kwargs) (line 228)
        get_results_call_result_77794 = invoke(stypy.reporting.localization.Localization(__file__, 228, 12), get_results_77789, *[self_77790, box_77791, used_characters_77792], **kwargs_77793)
        
        # Assigning a type to the variable 'call_assignment_77264' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77264', get_results_call_result_77794)
        
        # Assigning a Call to a Name (line 227):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_77797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 8), 'int')
        # Processing the call keyword arguments
        kwargs_77798 = {}
        # Getting the type of 'call_assignment_77264' (line 227)
        call_assignment_77264_77795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77264', False)
        # Obtaining the member '__getitem__' of a type (line 227)
        getitem___77796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 227, 8), call_assignment_77264_77795, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_77799 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___77796, *[int_77797], **kwargs_77798)
        
        # Assigning a type to the variable 'call_assignment_77265' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77265', getitem___call_result_77799)
        
        # Assigning a Name to a Name (line 227):
        # Getting the type of 'call_assignment_77265' (line 227)
        call_assignment_77265_77800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77265')
        # Assigning a type to the variable 'ox' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'ox', call_assignment_77265_77800)
        
        # Assigning a Call to a Name (line 227):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_77803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 8), 'int')
        # Processing the call keyword arguments
        kwargs_77804 = {}
        # Getting the type of 'call_assignment_77264' (line 227)
        call_assignment_77264_77801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77264', False)
        # Obtaining the member '__getitem__' of a type (line 227)
        getitem___77802 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 227, 8), call_assignment_77264_77801, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_77805 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___77802, *[int_77803], **kwargs_77804)
        
        # Assigning a type to the variable 'call_assignment_77266' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77266', getitem___call_result_77805)
        
        # Assigning a Name to a Name (line 227):
        # Getting the type of 'call_assignment_77266' (line 227)
        call_assignment_77266_77806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77266')
        # Assigning a type to the variable 'oy' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 12), 'oy', call_assignment_77266_77806)
        
        # Assigning a Call to a Name (line 227):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_77809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 8), 'int')
        # Processing the call keyword arguments
        kwargs_77810 = {}
        # Getting the type of 'call_assignment_77264' (line 227)
        call_assignment_77264_77807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77264', False)
        # Obtaining the member '__getitem__' of a type (line 227)
        getitem___77808 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 227, 8), call_assignment_77264_77807, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_77811 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___77808, *[int_77809], **kwargs_77810)
        
        # Assigning a type to the variable 'call_assignment_77267' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77267', getitem___call_result_77811)
        
        # Assigning a Name to a Name (line 227):
        # Getting the type of 'call_assignment_77267' (line 227)
        call_assignment_77267_77812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77267')
        # Assigning a type to the variable 'width' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 16), 'width', call_assignment_77267_77812)
        
        # Assigning a Call to a Name (line 227):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_77815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 8), 'int')
        # Processing the call keyword arguments
        kwargs_77816 = {}
        # Getting the type of 'call_assignment_77264' (line 227)
        call_assignment_77264_77813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77264', False)
        # Obtaining the member '__getitem__' of a type (line 227)
        getitem___77814 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 227, 8), call_assignment_77264_77813, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_77817 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___77814, *[int_77815], **kwargs_77816)
        
        # Assigning a type to the variable 'call_assignment_77268' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77268', getitem___call_result_77817)
        
        # Assigning a Name to a Name (line 227):
        # Getting the type of 'call_assignment_77268' (line 227)
        call_assignment_77268_77818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77268')
        # Assigning a type to the variable 'height' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 23), 'height', call_assignment_77268_77818)
        
        # Assigning a Call to a Name (line 227):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_77821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 8), 'int')
        # Processing the call keyword arguments
        kwargs_77822 = {}
        # Getting the type of 'call_assignment_77264' (line 227)
        call_assignment_77264_77819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77264', False)
        # Obtaining the member '__getitem__' of a type (line 227)
        getitem___77820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 227, 8), call_assignment_77264_77819, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_77823 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___77820, *[int_77821], **kwargs_77822)
        
        # Assigning a type to the variable 'call_assignment_77269' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77269', getitem___call_result_77823)
        
        # Assigning a Name to a Name (line 227):
        # Getting the type of 'call_assignment_77269' (line 227)
        call_assignment_77269_77824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77269')
        # Assigning a type to the variable 'depth' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 31), 'depth', call_assignment_77269_77824)
        
        # Assigning a Call to a Name (line 227):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_77827 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 8), 'int')
        # Processing the call keyword arguments
        kwargs_77828 = {}
        # Getting the type of 'call_assignment_77264' (line 227)
        call_assignment_77264_77825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77264', False)
        # Obtaining the member '__getitem__' of a type (line 227)
        getitem___77826 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 227, 8), call_assignment_77264_77825, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_77829 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___77826, *[int_77827], **kwargs_77828)
        
        # Assigning a type to the variable 'call_assignment_77270' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77270', getitem___call_result_77829)
        
        # Assigning a Name to a Name (line 227):
        # Getting the type of 'call_assignment_77270' (line 227)
        call_assignment_77270_77830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77270')
        # Assigning a type to the variable 'image' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 38), 'image', call_assignment_77270_77830)
        
        # Assigning a Call to a Name (line 227):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_77833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 8), 'int')
        # Processing the call keyword arguments
        kwargs_77834 = {}
        # Getting the type of 'call_assignment_77264' (line 227)
        call_assignment_77264_77831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77264', False)
        # Obtaining the member '__getitem__' of a type (line 227)
        getitem___77832 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 227, 8), call_assignment_77264_77831, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_77835 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___77832, *[int_77833], **kwargs_77834)
        
        # Assigning a type to the variable 'call_assignment_77271' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77271', getitem___call_result_77835)
        
        # Assigning a Name to a Name (line 227):
        # Getting the type of 'call_assignment_77271' (line 227)
        call_assignment_77271_77836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_77271')
        # Assigning a type to the variable 'characters' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 45), 'characters', call_assignment_77271_77836)
        
        # Obtaining an instance of the builtin type 'tuple' (line 229)
        tuple_77837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 229, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 229)
        # Adding element type (line 229)
        # Getting the type of 'image' (line 229)
        image_77838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 15), 'image')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 229, 15), tuple_77837, image_77838)
        # Adding element type (line 229)
        # Getting the type of 'depth' (line 229)
        depth_77839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 22), 'depth')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 229, 15), tuple_77837, depth_77839)
        
        # Assigning a type to the variable 'stypy_return_type' (line 229)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 229, 8), 'stypy_return_type', tuple_77837)
        
        # ################# End of 'get_results(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_results' in the type store
        # Getting the type of 'stypy_return_type' (line 226)
        stypy_return_type_77840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_77840)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_results'
        return stypy_return_type_77840


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 225, 0, False)
        # Assigning a type to the variable 'self' (line 226)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendBitmap.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'MathtextBackendBitmap' (line 225)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 225, 0), 'MathtextBackendBitmap', MathtextBackendBitmap)
# Declaration of the 'MathtextBackendPs' class
# Getting the type of 'MathtextBackend' (line 231)
MathtextBackend_77841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 24), 'MathtextBackend')

class MathtextBackendPs(MathtextBackend_77841, ):
    unicode_77842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, (-1)), 'unicode', u'\n    Store information to write a mathtext rendering to the PostScript\n    backend.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 236, 4, False)
        # Assigning a type to the variable 'self' (line 237)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 237, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendPs.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Call to a Attribute (line 237):
        
        # Assigning a Call to a Attribute (line 237):
        
        # Call to cStringIO(...): (line 237)
        # Processing the call keyword arguments (line 237)
        kwargs_77846 = {}
        # Getting the type of 'six' (line 237)
        six_77843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 24), 'six', False)
        # Obtaining the member 'moves' of a type (line 237)
        moves_77844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 24), six_77843, 'moves')
        # Obtaining the member 'cStringIO' of a type (line 237)
        cStringIO_77845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 24), moves_77844, 'cStringIO')
        # Calling cStringIO(args, kwargs) (line 237)
        cStringIO_call_result_77847 = invoke(stypy.reporting.localization.Localization(__file__, 237, 24), cStringIO_77845, *[], **kwargs_77846)
        
        # Getting the type of 'self' (line 237)
        self_77848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 8), 'self')
        # Setting the type of the member 'pswriter' of a type (line 237)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 8), self_77848, 'pswriter', cStringIO_call_result_77847)
        
        # Assigning a Name to a Attribute (line 238):
        
        # Assigning a Name to a Attribute (line 238):
        # Getting the type of 'None' (line 238)
        None_77849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 24), 'None')
        # Getting the type of 'self' (line 238)
        self_77850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 8), 'self')
        # Setting the type of the member 'lastfont' of a type (line 238)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 238, 8), self_77850, 'lastfont', None_77849)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def render_glyph(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render_glyph'
        module_type_store = module_type_store.open_function_context('render_glyph', 240, 4, False)
        # Assigning a type to the variable 'self' (line 241)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendPs.render_glyph.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendPs.render_glyph.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendPs.render_glyph.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendPs.render_glyph.__dict__.__setitem__('stypy_function_name', 'MathtextBackendPs.render_glyph')
        MathtextBackendPs.render_glyph.__dict__.__setitem__('stypy_param_names_list', ['ox', 'oy', 'info'])
        MathtextBackendPs.render_glyph.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendPs.render_glyph.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendPs.render_glyph.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendPs.render_glyph.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendPs.render_glyph.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendPs.render_glyph.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendPs.render_glyph', ['ox', 'oy', 'info'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render_glyph', localization, ['ox', 'oy', 'info'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render_glyph(...)' code ##################

        
        # Assigning a BinOp to a Name (line 241):
        
        # Assigning a BinOp to a Name (line 241):
        # Getting the type of 'self' (line 241)
        self_77851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 13), 'self')
        # Obtaining the member 'height' of a type (line 241)
        height_77852 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 241, 13), self_77851, 'height')
        # Getting the type of 'oy' (line 241)
        oy_77853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 27), 'oy')
        # Applying the binary operator '-' (line 241)
        result_sub_77854 = python_operator(stypy.reporting.localization.Localization(__file__, 241, 13), '-', height_77852, oy_77853)
        
        # Getting the type of 'info' (line 241)
        info_77855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 32), 'info')
        # Obtaining the member 'offset' of a type (line 241)
        offset_77856 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 241, 32), info_77855, 'offset')
        # Applying the binary operator '+' (line 241)
        result_add_77857 = python_operator(stypy.reporting.localization.Localization(__file__, 241, 30), '+', result_sub_77854, offset_77856)
        
        # Assigning a type to the variable 'oy' (line 241)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 8), 'oy', result_add_77857)
        
        # Assigning a Attribute to a Name (line 242):
        
        # Assigning a Attribute to a Name (line 242):
        # Getting the type of 'info' (line 242)
        info_77858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 26), 'info')
        # Obtaining the member 'postscript_name' of a type (line 242)
        postscript_name_77859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 242, 26), info_77858, 'postscript_name')
        # Assigning a type to the variable 'postscript_name' (line 242)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 242, 8), 'postscript_name', postscript_name_77859)
        
        # Assigning a Attribute to a Name (line 243):
        
        # Assigning a Attribute to a Name (line 243):
        # Getting the type of 'info' (line 243)
        info_77860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 26), 'info')
        # Obtaining the member 'fontsize' of a type (line 243)
        fontsize_77861 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 243, 26), info_77860, 'fontsize')
        # Assigning a type to the variable 'fontsize' (line 243)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 243, 8), 'fontsize', fontsize_77861)
        
        # Assigning a Attribute to a Name (line 244):
        
        # Assigning a Attribute to a Name (line 244):
        # Getting the type of 'info' (line 244)
        info_77862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 26), 'info')
        # Obtaining the member 'symbol_name' of a type (line 244)
        symbol_name_77863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 244, 26), info_77862, 'symbol_name')
        # Assigning a type to the variable 'symbol_name' (line 244)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 244, 8), 'symbol_name', symbol_name_77863)
        
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 246)
        tuple_77864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 246, 12), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 246)
        # Adding element type (line 246)
        # Getting the type of 'postscript_name' (line 246)
        postscript_name_77865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 12), 'postscript_name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 246, 12), tuple_77864, postscript_name_77865)
        # Adding element type (line 246)
        # Getting the type of 'fontsize' (line 246)
        fontsize_77866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 29), 'fontsize')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 246, 12), tuple_77864, fontsize_77866)
        
        # Getting the type of 'self' (line 246)
        self_77867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 42), 'self')
        # Obtaining the member 'lastfont' of a type (line 246)
        lastfont_77868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 246, 42), self_77867, 'lastfont')
        # Applying the binary operator '!=' (line 246)
        result_ne_77869 = python_operator(stypy.reporting.localization.Localization(__file__, 246, 11), '!=', tuple_77864, lastfont_77868)
        
        # Testing the type of an if condition (line 246)
        if_condition_77870 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 246, 8), result_ne_77869)
        # Assigning a type to the variable 'if_condition_77870' (line 246)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 246, 8), 'if_condition_77870', if_condition_77870)
        # SSA begins for if statement (line 246)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 247):
        
        # Assigning a BinOp to a Name (line 247):
        unicode_77871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 250, (-1)), 'unicode', u'/%(postscript_name)s findfont\n%(fontsize)s scalefont\nsetfont\n')
        
        # Call to locals(...): (line 250)
        # Processing the call keyword arguments (line 250)
        kwargs_77873 = {}
        # Getting the type of 'locals' (line 250)
        locals_77872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 6), 'locals', False)
        # Calling locals(args, kwargs) (line 250)
        locals_call_result_77874 = invoke(stypy.reporting.localization.Localization(__file__, 250, 6), locals_77872, *[], **kwargs_77873)
        
        # Applying the binary operator '%' (line 250)
        result_mod_77875 = python_operator(stypy.reporting.localization.Localization(__file__, 250, (-1)), '%', unicode_77871, locals_call_result_77874)
        
        # Assigning a type to the variable 'ps' (line 247)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 247, 12), 'ps', result_mod_77875)
        
        # Assigning a Tuple to a Attribute (line 251):
        
        # Assigning a Tuple to a Attribute (line 251):
        
        # Obtaining an instance of the builtin type 'tuple' (line 251)
        tuple_77876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 251, 28), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 251)
        # Adding element type (line 251)
        # Getting the type of 'postscript_name' (line 251)
        postscript_name_77877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 28), 'postscript_name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 251, 28), tuple_77876, postscript_name_77877)
        # Adding element type (line 251)
        # Getting the type of 'fontsize' (line 251)
        fontsize_77878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 45), 'fontsize')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 251, 28), tuple_77876, fontsize_77878)
        
        # Getting the type of 'self' (line 251)
        self_77879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 12), 'self')
        # Setting the type of the member 'lastfont' of a type (line 251)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 251, 12), self_77879, 'lastfont', tuple_77876)
        
        # Call to write(...): (line 252)
        # Processing the call arguments (line 252)
        # Getting the type of 'ps' (line 252)
        ps_77883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 32), 'ps', False)
        # Processing the call keyword arguments (line 252)
        kwargs_77884 = {}
        # Getting the type of 'self' (line 252)
        self_77880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 12), 'self', False)
        # Obtaining the member 'pswriter' of a type (line 252)
        pswriter_77881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 252, 12), self_77880, 'pswriter')
        # Obtaining the member 'write' of a type (line 252)
        write_77882 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 252, 12), pswriter_77881, 'write')
        # Calling write(args, kwargs) (line 252)
        write_call_result_77885 = invoke(stypy.reporting.localization.Localization(__file__, 252, 12), write_77882, *[ps_77883], **kwargs_77884)
        
        # SSA join for if statement (line 246)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 254):
        
        # Assigning a BinOp to a Name (line 254):
        unicode_77886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, (-1)), 'unicode', u'%(ox)f %(oy)f moveto\n/%(symbol_name)s glyphshow\n\n')
        
        # Call to locals(...): (line 256)
        # Processing the call keyword arguments (line 256)
        kwargs_77888 = {}
        # Getting the type of 'locals' (line 256)
        locals_77887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 6), 'locals', False)
        # Calling locals(args, kwargs) (line 256)
        locals_call_result_77889 = invoke(stypy.reporting.localization.Localization(__file__, 256, 6), locals_77887, *[], **kwargs_77888)
        
        # Applying the binary operator '%' (line 256)
        result_mod_77890 = python_operator(stypy.reporting.localization.Localization(__file__, 256, (-1)), '%', unicode_77886, locals_call_result_77889)
        
        # Assigning a type to the variable 'ps' (line 254)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 254, 8), 'ps', result_mod_77890)
        
        # Call to write(...): (line 257)
        # Processing the call arguments (line 257)
        # Getting the type of 'ps' (line 257)
        ps_77894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 28), 'ps', False)
        # Processing the call keyword arguments (line 257)
        kwargs_77895 = {}
        # Getting the type of 'self' (line 257)
        self_77891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 8), 'self', False)
        # Obtaining the member 'pswriter' of a type (line 257)
        pswriter_77892 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 257, 8), self_77891, 'pswriter')
        # Obtaining the member 'write' of a type (line 257)
        write_77893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 257, 8), pswriter_77892, 'write')
        # Calling write(args, kwargs) (line 257)
        write_call_result_77896 = invoke(stypy.reporting.localization.Localization(__file__, 257, 8), write_77893, *[ps_77894], **kwargs_77895)
        
        
        # ################# End of 'render_glyph(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render_glyph' in the type store
        # Getting the type of 'stypy_return_type' (line 240)
        stypy_return_type_77897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_77897)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render_glyph'
        return stypy_return_type_77897


    @norecursion
    def render_rect_filled(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render_rect_filled'
        module_type_store = module_type_store.open_function_context('render_rect_filled', 259, 4, False)
        # Assigning a type to the variable 'self' (line 260)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 260, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendPs.render_rect_filled.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendPs.render_rect_filled.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendPs.render_rect_filled.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendPs.render_rect_filled.__dict__.__setitem__('stypy_function_name', 'MathtextBackendPs.render_rect_filled')
        MathtextBackendPs.render_rect_filled.__dict__.__setitem__('stypy_param_names_list', ['x1', 'y1', 'x2', 'y2'])
        MathtextBackendPs.render_rect_filled.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendPs.render_rect_filled.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendPs.render_rect_filled.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendPs.render_rect_filled.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendPs.render_rect_filled.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendPs.render_rect_filled.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendPs.render_rect_filled', ['x1', 'y1', 'x2', 'y2'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render_rect_filled', localization, ['x1', 'y1', 'x2', 'y2'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render_rect_filled(...)' code ##################

        
        # Assigning a BinOp to a Name (line 260):
        
        # Assigning a BinOp to a Name (line 260):
        unicode_77898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 13), 'unicode', u'%f %f %f %f rectfill\n')
        
        # Obtaining an instance of the builtin type 'tuple' (line 260)
        tuple_77899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 41), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 260)
        # Adding element type (line 260)
        # Getting the type of 'x1' (line 260)
        x1_77900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 41), 'x1')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 260, 41), tuple_77899, x1_77900)
        # Adding element type (line 260)
        # Getting the type of 'self' (line 260)
        self_77901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 45), 'self')
        # Obtaining the member 'height' of a type (line 260)
        height_77902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 260, 45), self_77901, 'height')
        # Getting the type of 'y2' (line 260)
        y2_77903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 59), 'y2')
        # Applying the binary operator '-' (line 260)
        result_sub_77904 = python_operator(stypy.reporting.localization.Localization(__file__, 260, 45), '-', height_77902, y2_77903)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 260, 41), tuple_77899, result_sub_77904)
        # Adding element type (line 260)
        # Getting the type of 'x2' (line 260)
        x2_77905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 63), 'x2')
        # Getting the type of 'x1' (line 260)
        x1_77906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 68), 'x1')
        # Applying the binary operator '-' (line 260)
        result_sub_77907 = python_operator(stypy.reporting.localization.Localization(__file__, 260, 63), '-', x2_77905, x1_77906)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 260, 41), tuple_77899, result_sub_77907)
        # Adding element type (line 260)
        # Getting the type of 'y2' (line 260)
        y2_77908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 72), 'y2')
        # Getting the type of 'y1' (line 260)
        y1_77909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 77), 'y1')
        # Applying the binary operator '-' (line 260)
        result_sub_77910 = python_operator(stypy.reporting.localization.Localization(__file__, 260, 72), '-', y2_77908, y1_77909)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 260, 41), tuple_77899, result_sub_77910)
        
        # Applying the binary operator '%' (line 260)
        result_mod_77911 = python_operator(stypy.reporting.localization.Localization(__file__, 260, 13), '%', unicode_77898, tuple_77899)
        
        # Assigning a type to the variable 'ps' (line 260)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 260, 8), 'ps', result_mod_77911)
        
        # Call to write(...): (line 261)
        # Processing the call arguments (line 261)
        # Getting the type of 'ps' (line 261)
        ps_77915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 28), 'ps', False)
        # Processing the call keyword arguments (line 261)
        kwargs_77916 = {}
        # Getting the type of 'self' (line 261)
        self_77912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 8), 'self', False)
        # Obtaining the member 'pswriter' of a type (line 261)
        pswriter_77913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 261, 8), self_77912, 'pswriter')
        # Obtaining the member 'write' of a type (line 261)
        write_77914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 261, 8), pswriter_77913, 'write')
        # Calling write(args, kwargs) (line 261)
        write_call_result_77917 = invoke(stypy.reporting.localization.Localization(__file__, 261, 8), write_77914, *[ps_77915], **kwargs_77916)
        
        
        # ################# End of 'render_rect_filled(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render_rect_filled' in the type store
        # Getting the type of 'stypy_return_type' (line 259)
        stypy_return_type_77918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_77918)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render_rect_filled'
        return stypy_return_type_77918


    @norecursion
    def get_results(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_results'
        module_type_store = module_type_store.open_function_context('get_results', 263, 4, False)
        # Assigning a type to the variable 'self' (line 264)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 264, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendPs.get_results.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendPs.get_results.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendPs.get_results.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendPs.get_results.__dict__.__setitem__('stypy_function_name', 'MathtextBackendPs.get_results')
        MathtextBackendPs.get_results.__dict__.__setitem__('stypy_param_names_list', ['box', 'used_characters'])
        MathtextBackendPs.get_results.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendPs.get_results.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendPs.get_results.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendPs.get_results.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendPs.get_results.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendPs.get_results.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendPs.get_results', ['box', 'used_characters'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_results', localization, ['box', 'used_characters'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_results(...)' code ##################

        
        # Call to ship(...): (line 264)
        # Processing the call arguments (line 264)
        int_77920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 13), 'int')
        int_77921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 16), 'int')
        # Getting the type of 'box' (line 264)
        box_77922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 19), 'box', False)
        # Processing the call keyword arguments (line 264)
        kwargs_77923 = {}
        # Getting the type of 'ship' (line 264)
        ship_77919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 8), 'ship', False)
        # Calling ship(args, kwargs) (line 264)
        ship_call_result_77924 = invoke(stypy.reporting.localization.Localization(__file__, 264, 8), ship_77919, *[int_77920, int_77921, box_77922], **kwargs_77923)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 265)
        tuple_77925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 265)
        # Adding element type (line 265)
        # Getting the type of 'self' (line 265)
        self_77926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 16), 'self')
        # Obtaining the member 'width' of a type (line 265)
        width_77927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 16), self_77926, 'width')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 265, 16), tuple_77925, width_77927)
        # Adding element type (line 265)
        # Getting the type of 'self' (line 266)
        self_77928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 16), 'self')
        # Obtaining the member 'height' of a type (line 266)
        height_77929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 266, 16), self_77928, 'height')
        # Getting the type of 'self' (line 266)
        self_77930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 30), 'self')
        # Obtaining the member 'depth' of a type (line 266)
        depth_77931 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 266, 30), self_77930, 'depth')
        # Applying the binary operator '+' (line 266)
        result_add_77932 = python_operator(stypy.reporting.localization.Localization(__file__, 266, 16), '+', height_77929, depth_77931)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 265, 16), tuple_77925, result_add_77932)
        # Adding element type (line 265)
        # Getting the type of 'self' (line 267)
        self_77933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 16), 'self')
        # Obtaining the member 'depth' of a type (line 267)
        depth_77934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 267, 16), self_77933, 'depth')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 265, 16), tuple_77925, depth_77934)
        # Adding element type (line 265)
        # Getting the type of 'self' (line 268)
        self_77935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 16), 'self')
        # Obtaining the member 'pswriter' of a type (line 268)
        pswriter_77936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 268, 16), self_77935, 'pswriter')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 265, 16), tuple_77925, pswriter_77936)
        # Adding element type (line 265)
        # Getting the type of 'used_characters' (line 269)
        used_characters_77937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 16), 'used_characters')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 265, 16), tuple_77925, used_characters_77937)
        
        # Assigning a type to the variable 'stypy_return_type' (line 265)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 8), 'stypy_return_type', tuple_77925)
        
        # ################# End of 'get_results(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_results' in the type store
        # Getting the type of 'stypy_return_type' (line 263)
        stypy_return_type_77938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_77938)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_results'
        return stypy_return_type_77938


# Assigning a type to the variable 'MathtextBackendPs' (line 231)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 231, 0), 'MathtextBackendPs', MathtextBackendPs)
# Declaration of the 'MathtextBackendPdf' class
# Getting the type of 'MathtextBackend' (line 271)
MathtextBackend_77939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 25), 'MathtextBackend')

class MathtextBackendPdf(MathtextBackend_77939, ):
    unicode_77940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, (-1)), 'unicode', u'\n    Store information to write a mathtext rendering to the PDF\n    backend.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 276, 4, False)
        # Assigning a type to the variable 'self' (line 277)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendPdf.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a List to a Attribute (line 277):
        
        # Assigning a List to a Attribute (line 277):
        
        # Obtaining an instance of the builtin type 'list' (line 277)
        list_77941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 277)
        
        # Getting the type of 'self' (line 277)
        self_77942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 8), 'self')
        # Setting the type of the member 'glyphs' of a type (line 277)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 8), self_77942, 'glyphs', list_77941)
        
        # Assigning a List to a Attribute (line 278):
        
        # Assigning a List to a Attribute (line 278):
        
        # Obtaining an instance of the builtin type 'list' (line 278)
        list_77943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 278, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 278)
        
        # Getting the type of 'self' (line 278)
        self_77944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 8), 'self')
        # Setting the type of the member 'rects' of a type (line 278)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 278, 8), self_77944, 'rects', list_77943)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def render_glyph(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render_glyph'
        module_type_store = module_type_store.open_function_context('render_glyph', 280, 4, False)
        # Assigning a type to the variable 'self' (line 281)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 281, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendPdf.render_glyph.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendPdf.render_glyph.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendPdf.render_glyph.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendPdf.render_glyph.__dict__.__setitem__('stypy_function_name', 'MathtextBackendPdf.render_glyph')
        MathtextBackendPdf.render_glyph.__dict__.__setitem__('stypy_param_names_list', ['ox', 'oy', 'info'])
        MathtextBackendPdf.render_glyph.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendPdf.render_glyph.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendPdf.render_glyph.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendPdf.render_glyph.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendPdf.render_glyph.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendPdf.render_glyph.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendPdf.render_glyph', ['ox', 'oy', 'info'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render_glyph', localization, ['ox', 'oy', 'info'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render_glyph(...)' code ##################

        
        # Assigning a Attribute to a Name (line 281):
        
        # Assigning a Attribute to a Name (line 281):
        # Getting the type of 'info' (line 281)
        info_77945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 19), 'info')
        # Obtaining the member 'font' of a type (line 281)
        font_77946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 19), info_77945, 'font')
        # Obtaining the member 'fname' of a type (line 281)
        fname_77947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 19), font_77946, 'fname')
        # Assigning a type to the variable 'filename' (line 281)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 281, 8), 'filename', fname_77947)
        
        # Assigning a BinOp to a Name (line 282):
        
        # Assigning a BinOp to a Name (line 282):
        # Getting the type of 'self' (line 282)
        self_77948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 13), 'self')
        # Obtaining the member 'height' of a type (line 282)
        height_77949 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 282, 13), self_77948, 'height')
        # Getting the type of 'oy' (line 282)
        oy_77950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 27), 'oy')
        # Applying the binary operator '-' (line 282)
        result_sub_77951 = python_operator(stypy.reporting.localization.Localization(__file__, 282, 13), '-', height_77949, oy_77950)
        
        # Getting the type of 'info' (line 282)
        info_77952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 32), 'info')
        # Obtaining the member 'offset' of a type (line 282)
        offset_77953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 282, 32), info_77952, 'offset')
        # Applying the binary operator '+' (line 282)
        result_add_77954 = python_operator(stypy.reporting.localization.Localization(__file__, 282, 30), '+', result_sub_77951, offset_77953)
        
        # Assigning a type to the variable 'oy' (line 282)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 282, 8), 'oy', result_add_77954)
        
        # Call to append(...): (line 283)
        # Processing the call arguments (line 283)
        
        # Obtaining an instance of the builtin type 'tuple' (line 284)
        tuple_77958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 284, 13), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 284)
        # Adding element type (line 284)
        # Getting the type of 'ox' (line 284)
        ox_77959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 13), 'ox', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 284, 13), tuple_77958, ox_77959)
        # Adding element type (line 284)
        # Getting the type of 'oy' (line 284)
        oy_77960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 17), 'oy', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 284, 13), tuple_77958, oy_77960)
        # Adding element type (line 284)
        # Getting the type of 'filename' (line 284)
        filename_77961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 21), 'filename', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 284, 13), tuple_77958, filename_77961)
        # Adding element type (line 284)
        # Getting the type of 'info' (line 284)
        info_77962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 31), 'info', False)
        # Obtaining the member 'fontsize' of a type (line 284)
        fontsize_77963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 31), info_77962, 'fontsize')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 284, 13), tuple_77958, fontsize_77963)
        # Adding element type (line 284)
        # Getting the type of 'info' (line 285)
        info_77964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 13), 'info', False)
        # Obtaining the member 'num' of a type (line 285)
        num_77965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 285, 13), info_77964, 'num')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 284, 13), tuple_77958, num_77965)
        # Adding element type (line 284)
        # Getting the type of 'info' (line 285)
        info_77966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 23), 'info', False)
        # Obtaining the member 'symbol_name' of a type (line 285)
        symbol_name_77967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 285, 23), info_77966, 'symbol_name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 284, 13), tuple_77958, symbol_name_77967)
        
        # Processing the call keyword arguments (line 283)
        kwargs_77968 = {}
        # Getting the type of 'self' (line 283)
        self_77955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 283, 8), 'self', False)
        # Obtaining the member 'glyphs' of a type (line 283)
        glyphs_77956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 283, 8), self_77955, 'glyphs')
        # Obtaining the member 'append' of a type (line 283)
        append_77957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 283, 8), glyphs_77956, 'append')
        # Calling append(args, kwargs) (line 283)
        append_call_result_77969 = invoke(stypy.reporting.localization.Localization(__file__, 283, 8), append_77957, *[tuple_77958], **kwargs_77968)
        
        
        # ################# End of 'render_glyph(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render_glyph' in the type store
        # Getting the type of 'stypy_return_type' (line 280)
        stypy_return_type_77970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_77970)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render_glyph'
        return stypy_return_type_77970


    @norecursion
    def render_rect_filled(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render_rect_filled'
        module_type_store = module_type_store.open_function_context('render_rect_filled', 287, 4, False)
        # Assigning a type to the variable 'self' (line 288)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 288, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendPdf.render_rect_filled.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendPdf.render_rect_filled.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendPdf.render_rect_filled.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendPdf.render_rect_filled.__dict__.__setitem__('stypy_function_name', 'MathtextBackendPdf.render_rect_filled')
        MathtextBackendPdf.render_rect_filled.__dict__.__setitem__('stypy_param_names_list', ['x1', 'y1', 'x2', 'y2'])
        MathtextBackendPdf.render_rect_filled.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendPdf.render_rect_filled.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendPdf.render_rect_filled.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendPdf.render_rect_filled.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendPdf.render_rect_filled.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendPdf.render_rect_filled.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendPdf.render_rect_filled', ['x1', 'y1', 'x2', 'y2'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render_rect_filled', localization, ['x1', 'y1', 'x2', 'y2'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render_rect_filled(...)' code ##################

        
        # Call to append(...): (line 288)
        # Processing the call arguments (line 288)
        
        # Obtaining an instance of the builtin type 'tuple' (line 288)
        tuple_77974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 288, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 288)
        # Adding element type (line 288)
        # Getting the type of 'x1' (line 288)
        x1_77975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 27), 'x1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 288, 27), tuple_77974, x1_77975)
        # Adding element type (line 288)
        # Getting the type of 'self' (line 288)
        self_77976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 31), 'self', False)
        # Obtaining the member 'height' of a type (line 288)
        height_77977 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 288, 31), self_77976, 'height')
        # Getting the type of 'y2' (line 288)
        y2_77978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 45), 'y2', False)
        # Applying the binary operator '-' (line 288)
        result_sub_77979 = python_operator(stypy.reporting.localization.Localization(__file__, 288, 31), '-', height_77977, y2_77978)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 288, 27), tuple_77974, result_sub_77979)
        # Adding element type (line 288)
        # Getting the type of 'x2' (line 288)
        x2_77980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 49), 'x2', False)
        # Getting the type of 'x1' (line 288)
        x1_77981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 54), 'x1', False)
        # Applying the binary operator '-' (line 288)
        result_sub_77982 = python_operator(stypy.reporting.localization.Localization(__file__, 288, 49), '-', x2_77980, x1_77981)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 288, 27), tuple_77974, result_sub_77982)
        # Adding element type (line 288)
        # Getting the type of 'y2' (line 288)
        y2_77983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 58), 'y2', False)
        # Getting the type of 'y1' (line 288)
        y1_77984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 63), 'y1', False)
        # Applying the binary operator '-' (line 288)
        result_sub_77985 = python_operator(stypy.reporting.localization.Localization(__file__, 288, 58), '-', y2_77983, y1_77984)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 288, 27), tuple_77974, result_sub_77985)
        
        # Processing the call keyword arguments (line 288)
        kwargs_77986 = {}
        # Getting the type of 'self' (line 288)
        self_77971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 8), 'self', False)
        # Obtaining the member 'rects' of a type (line 288)
        rects_77972 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 288, 8), self_77971, 'rects')
        # Obtaining the member 'append' of a type (line 288)
        append_77973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 288, 8), rects_77972, 'append')
        # Calling append(args, kwargs) (line 288)
        append_call_result_77987 = invoke(stypy.reporting.localization.Localization(__file__, 288, 8), append_77973, *[tuple_77974], **kwargs_77986)
        
        
        # ################# End of 'render_rect_filled(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render_rect_filled' in the type store
        # Getting the type of 'stypy_return_type' (line 287)
        stypy_return_type_77988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_77988)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render_rect_filled'
        return stypy_return_type_77988


    @norecursion
    def get_results(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_results'
        module_type_store = module_type_store.open_function_context('get_results', 290, 4, False)
        # Assigning a type to the variable 'self' (line 291)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 291, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendPdf.get_results.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendPdf.get_results.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendPdf.get_results.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendPdf.get_results.__dict__.__setitem__('stypy_function_name', 'MathtextBackendPdf.get_results')
        MathtextBackendPdf.get_results.__dict__.__setitem__('stypy_param_names_list', ['box', 'used_characters'])
        MathtextBackendPdf.get_results.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendPdf.get_results.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendPdf.get_results.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendPdf.get_results.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendPdf.get_results.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendPdf.get_results.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendPdf.get_results', ['box', 'used_characters'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_results', localization, ['box', 'used_characters'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_results(...)' code ##################

        
        # Call to ship(...): (line 291)
        # Processing the call arguments (line 291)
        int_77990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 291, 13), 'int')
        int_77991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 291, 16), 'int')
        # Getting the type of 'box' (line 291)
        box_77992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 19), 'box', False)
        # Processing the call keyword arguments (line 291)
        kwargs_77993 = {}
        # Getting the type of 'ship' (line 291)
        ship_77989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 8), 'ship', False)
        # Calling ship(args, kwargs) (line 291)
        ship_call_result_77994 = invoke(stypy.reporting.localization.Localization(__file__, 291, 8), ship_77989, *[int_77990, int_77991, box_77992], **kwargs_77993)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 292)
        tuple_77995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 292, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 292)
        # Adding element type (line 292)
        # Getting the type of 'self' (line 292)
        self_77996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 16), 'self')
        # Obtaining the member 'width' of a type (line 292)
        width_77997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 292, 16), self_77996, 'width')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 292, 16), tuple_77995, width_77997)
        # Adding element type (line 292)
        # Getting the type of 'self' (line 293)
        self_77998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 16), 'self')
        # Obtaining the member 'height' of a type (line 293)
        height_77999 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 293, 16), self_77998, 'height')
        # Getting the type of 'self' (line 293)
        self_78000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 30), 'self')
        # Obtaining the member 'depth' of a type (line 293)
        depth_78001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 293, 30), self_78000, 'depth')
        # Applying the binary operator '+' (line 293)
        result_add_78002 = python_operator(stypy.reporting.localization.Localization(__file__, 293, 16), '+', height_77999, depth_78001)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 292, 16), tuple_77995, result_add_78002)
        # Adding element type (line 292)
        # Getting the type of 'self' (line 294)
        self_78003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 16), 'self')
        # Obtaining the member 'depth' of a type (line 294)
        depth_78004 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 294, 16), self_78003, 'depth')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 292, 16), tuple_77995, depth_78004)
        # Adding element type (line 292)
        # Getting the type of 'self' (line 295)
        self_78005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 16), 'self')
        # Obtaining the member 'glyphs' of a type (line 295)
        glyphs_78006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 295, 16), self_78005, 'glyphs')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 292, 16), tuple_77995, glyphs_78006)
        # Adding element type (line 292)
        # Getting the type of 'self' (line 296)
        self_78007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 16), 'self')
        # Obtaining the member 'rects' of a type (line 296)
        rects_78008 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 296, 16), self_78007, 'rects')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 292, 16), tuple_77995, rects_78008)
        # Adding element type (line 292)
        # Getting the type of 'used_characters' (line 297)
        used_characters_78009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 16), 'used_characters')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 292, 16), tuple_77995, used_characters_78009)
        
        # Assigning a type to the variable 'stypy_return_type' (line 292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 8), 'stypy_return_type', tuple_77995)
        
        # ################# End of 'get_results(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_results' in the type store
        # Getting the type of 'stypy_return_type' (line 290)
        stypy_return_type_78010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78010)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_results'
        return stypy_return_type_78010


# Assigning a type to the variable 'MathtextBackendPdf' (line 271)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 0), 'MathtextBackendPdf', MathtextBackendPdf)
# Declaration of the 'MathtextBackendSvg' class
# Getting the type of 'MathtextBackend' (line 299)
MathtextBackend_78011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 25), 'MathtextBackend')

class MathtextBackendSvg(MathtextBackend_78011, ):
    unicode_78012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 303, (-1)), 'unicode', u'\n    Store information to write a mathtext rendering to the SVG\n    backend.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 304, 4, False)
        # Assigning a type to the variable 'self' (line 305)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 305, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendSvg.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a List to a Attribute (line 305):
        
        # Assigning a List to a Attribute (line 305):
        
        # Obtaining an instance of the builtin type 'list' (line 305)
        list_78013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 305, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 305)
        
        # Getting the type of 'self' (line 305)
        self_78014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 8), 'self')
        # Setting the type of the member 'svg_glyphs' of a type (line 305)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 305, 8), self_78014, 'svg_glyphs', list_78013)
        
        # Assigning a List to a Attribute (line 306):
        
        # Assigning a List to a Attribute (line 306):
        
        # Obtaining an instance of the builtin type 'list' (line 306)
        list_78015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 306)
        
        # Getting the type of 'self' (line 306)
        self_78016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 8), 'self')
        # Setting the type of the member 'svg_rects' of a type (line 306)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 8), self_78016, 'svg_rects', list_78015)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def render_glyph(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render_glyph'
        module_type_store = module_type_store.open_function_context('render_glyph', 308, 4, False)
        # Assigning a type to the variable 'self' (line 309)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendSvg.render_glyph.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendSvg.render_glyph.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendSvg.render_glyph.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendSvg.render_glyph.__dict__.__setitem__('stypy_function_name', 'MathtextBackendSvg.render_glyph')
        MathtextBackendSvg.render_glyph.__dict__.__setitem__('stypy_param_names_list', ['ox', 'oy', 'info'])
        MathtextBackendSvg.render_glyph.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendSvg.render_glyph.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendSvg.render_glyph.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendSvg.render_glyph.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendSvg.render_glyph.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendSvg.render_glyph.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendSvg.render_glyph', ['ox', 'oy', 'info'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render_glyph', localization, ['ox', 'oy', 'info'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render_glyph(...)' code ##################

        
        # Assigning a BinOp to a Name (line 309):
        
        # Assigning a BinOp to a Name (line 309):
        # Getting the type of 'self' (line 309)
        self_78017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 13), 'self')
        # Obtaining the member 'height' of a type (line 309)
        height_78018 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 13), self_78017, 'height')
        # Getting the type of 'oy' (line 309)
        oy_78019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 27), 'oy')
        # Applying the binary operator '-' (line 309)
        result_sub_78020 = python_operator(stypy.reporting.localization.Localization(__file__, 309, 13), '-', height_78018, oy_78019)
        
        # Getting the type of 'info' (line 309)
        info_78021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 32), 'info')
        # Obtaining the member 'offset' of a type (line 309)
        offset_78022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 32), info_78021, 'offset')
        # Applying the binary operator '+' (line 309)
        result_add_78023 = python_operator(stypy.reporting.localization.Localization(__file__, 309, 30), '+', result_sub_78020, offset_78022)
        
        # Assigning a type to the variable 'oy' (line 309)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 8), 'oy', result_add_78023)
        
        # Call to append(...): (line 311)
        # Processing the call arguments (line 311)
        
        # Obtaining an instance of the builtin type 'tuple' (line 312)
        tuple_78027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 312, 13), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 312)
        # Adding element type (line 312)
        # Getting the type of 'info' (line 312)
        info_78028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 13), 'info', False)
        # Obtaining the member 'font' of a type (line 312)
        font_78029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 13), info_78028, 'font')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 312, 13), tuple_78027, font_78029)
        # Adding element type (line 312)
        # Getting the type of 'info' (line 312)
        info_78030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 24), 'info', False)
        # Obtaining the member 'fontsize' of a type (line 312)
        fontsize_78031 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 24), info_78030, 'fontsize')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 312, 13), tuple_78027, fontsize_78031)
        # Adding element type (line 312)
        # Getting the type of 'info' (line 312)
        info_78032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 39), 'info', False)
        # Obtaining the member 'num' of a type (line 312)
        num_78033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 39), info_78032, 'num')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 312, 13), tuple_78027, num_78033)
        # Adding element type (line 312)
        # Getting the type of 'ox' (line 312)
        ox_78034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 49), 'ox', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 312, 13), tuple_78027, ox_78034)
        # Adding element type (line 312)
        # Getting the type of 'oy' (line 312)
        oy_78035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 53), 'oy', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 312, 13), tuple_78027, oy_78035)
        # Adding element type (line 312)
        # Getting the type of 'info' (line 312)
        info_78036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 57), 'info', False)
        # Obtaining the member 'metrics' of a type (line 312)
        metrics_78037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 57), info_78036, 'metrics')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 312, 13), tuple_78027, metrics_78037)
        
        # Processing the call keyword arguments (line 311)
        kwargs_78038 = {}
        # Getting the type of 'self' (line 311)
        self_78024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 8), 'self', False)
        # Obtaining the member 'svg_glyphs' of a type (line 311)
        svg_glyphs_78025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 311, 8), self_78024, 'svg_glyphs')
        # Obtaining the member 'append' of a type (line 311)
        append_78026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 311, 8), svg_glyphs_78025, 'append')
        # Calling append(args, kwargs) (line 311)
        append_call_result_78039 = invoke(stypy.reporting.localization.Localization(__file__, 311, 8), append_78026, *[tuple_78027], **kwargs_78038)
        
        
        # ################# End of 'render_glyph(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render_glyph' in the type store
        # Getting the type of 'stypy_return_type' (line 308)
        stypy_return_type_78040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78040)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render_glyph'
        return stypy_return_type_78040


    @norecursion
    def render_rect_filled(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render_rect_filled'
        module_type_store = module_type_store.open_function_context('render_rect_filled', 314, 4, False)
        # Assigning a type to the variable 'self' (line 315)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 315, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendSvg.render_rect_filled.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendSvg.render_rect_filled.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendSvg.render_rect_filled.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendSvg.render_rect_filled.__dict__.__setitem__('stypy_function_name', 'MathtextBackendSvg.render_rect_filled')
        MathtextBackendSvg.render_rect_filled.__dict__.__setitem__('stypy_param_names_list', ['x1', 'y1', 'x2', 'y2'])
        MathtextBackendSvg.render_rect_filled.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendSvg.render_rect_filled.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendSvg.render_rect_filled.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendSvg.render_rect_filled.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendSvg.render_rect_filled.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendSvg.render_rect_filled.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendSvg.render_rect_filled', ['x1', 'y1', 'x2', 'y2'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render_rect_filled', localization, ['x1', 'y1', 'x2', 'y2'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render_rect_filled(...)' code ##################

        
        # Call to append(...): (line 315)
        # Processing the call arguments (line 315)
        
        # Obtaining an instance of the builtin type 'tuple' (line 316)
        tuple_78044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 316, 13), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 316)
        # Adding element type (line 316)
        # Getting the type of 'x1' (line 316)
        x1_78045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 13), 'x1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 316, 13), tuple_78044, x1_78045)
        # Adding element type (line 316)
        # Getting the type of 'self' (line 316)
        self_78046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 17), 'self', False)
        # Obtaining the member 'height' of a type (line 316)
        height_78047 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 316, 17), self_78046, 'height')
        # Getting the type of 'y1' (line 316)
        y1_78048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 31), 'y1', False)
        # Applying the binary operator '-' (line 316)
        result_sub_78049 = python_operator(stypy.reporting.localization.Localization(__file__, 316, 17), '-', height_78047, y1_78048)
        
        int_78050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 316, 36), 'int')
        # Applying the binary operator '+' (line 316)
        result_add_78051 = python_operator(stypy.reporting.localization.Localization(__file__, 316, 34), '+', result_sub_78049, int_78050)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 316, 13), tuple_78044, result_add_78051)
        # Adding element type (line 316)
        # Getting the type of 'x2' (line 316)
        x2_78052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 39), 'x2', False)
        # Getting the type of 'x1' (line 316)
        x1_78053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 44), 'x1', False)
        # Applying the binary operator '-' (line 316)
        result_sub_78054 = python_operator(stypy.reporting.localization.Localization(__file__, 316, 39), '-', x2_78052, x1_78053)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 316, 13), tuple_78044, result_sub_78054)
        # Adding element type (line 316)
        # Getting the type of 'y2' (line 316)
        y2_78055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 48), 'y2', False)
        # Getting the type of 'y1' (line 316)
        y1_78056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 53), 'y1', False)
        # Applying the binary operator '-' (line 316)
        result_sub_78057 = python_operator(stypy.reporting.localization.Localization(__file__, 316, 48), '-', y2_78055, y1_78056)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 316, 13), tuple_78044, result_sub_78057)
        
        # Processing the call keyword arguments (line 315)
        kwargs_78058 = {}
        # Getting the type of 'self' (line 315)
        self_78041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 8), 'self', False)
        # Obtaining the member 'svg_rects' of a type (line 315)
        svg_rects_78042 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 315, 8), self_78041, 'svg_rects')
        # Obtaining the member 'append' of a type (line 315)
        append_78043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 315, 8), svg_rects_78042, 'append')
        # Calling append(args, kwargs) (line 315)
        append_call_result_78059 = invoke(stypy.reporting.localization.Localization(__file__, 315, 8), append_78043, *[tuple_78044], **kwargs_78058)
        
        
        # ################# End of 'render_rect_filled(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render_rect_filled' in the type store
        # Getting the type of 'stypy_return_type' (line 314)
        stypy_return_type_78060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78060)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render_rect_filled'
        return stypy_return_type_78060


    @norecursion
    def get_results(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_results'
        module_type_store = module_type_store.open_function_context('get_results', 318, 4, False)
        # Assigning a type to the variable 'self' (line 319)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 319, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendSvg.get_results.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendSvg.get_results.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendSvg.get_results.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendSvg.get_results.__dict__.__setitem__('stypy_function_name', 'MathtextBackendSvg.get_results')
        MathtextBackendSvg.get_results.__dict__.__setitem__('stypy_param_names_list', ['box', 'used_characters'])
        MathtextBackendSvg.get_results.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendSvg.get_results.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendSvg.get_results.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendSvg.get_results.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendSvg.get_results.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendSvg.get_results.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendSvg.get_results', ['box', 'used_characters'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_results', localization, ['box', 'used_characters'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_results(...)' code ##################

        
        # Call to ship(...): (line 319)
        # Processing the call arguments (line 319)
        int_78062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 13), 'int')
        int_78063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 16), 'int')
        # Getting the type of 'box' (line 319)
        box_78064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 19), 'box', False)
        # Processing the call keyword arguments (line 319)
        kwargs_78065 = {}
        # Getting the type of 'ship' (line 319)
        ship_78061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 8), 'ship', False)
        # Calling ship(args, kwargs) (line 319)
        ship_call_result_78066 = invoke(stypy.reporting.localization.Localization(__file__, 319, 8), ship_78061, *[int_78062, int_78063, box_78064], **kwargs_78065)
        
        
        # Assigning a Call to a Name (line 320):
        
        # Assigning a Call to a Name (line 320):
        
        # Call to Bunch(...): (line 320)
        # Processing the call keyword arguments (line 320)
        # Getting the type of 'self' (line 320)
        self_78068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 42), 'self', False)
        # Obtaining the member 'svg_glyphs' of a type (line 320)
        svg_glyphs_78069 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 320, 42), self_78068, 'svg_glyphs')
        keyword_78070 = svg_glyphs_78069
        # Getting the type of 'self' (line 321)
        self_78071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 41), 'self', False)
        # Obtaining the member 'svg_rects' of a type (line 321)
        svg_rects_78072 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 321, 41), self_78071, 'svg_rects')
        keyword_78073 = svg_rects_78072
        kwargs_78074 = {'svg_glyphs': keyword_78070, 'svg_rects': keyword_78073}
        # Getting the type of 'Bunch' (line 320)
        Bunch_78067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 23), 'Bunch', False)
        # Calling Bunch(args, kwargs) (line 320)
        Bunch_call_result_78075 = invoke(stypy.reporting.localization.Localization(__file__, 320, 23), Bunch_78067, *[], **kwargs_78074)
        
        # Assigning a type to the variable 'svg_elements' (line 320)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 320, 8), 'svg_elements', Bunch_call_result_78075)
        
        # Obtaining an instance of the builtin type 'tuple' (line 322)
        tuple_78076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 322)
        # Adding element type (line 322)
        # Getting the type of 'self' (line 322)
        self_78077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 16), 'self')
        # Obtaining the member 'width' of a type (line 322)
        width_78078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 16), self_78077, 'width')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 16), tuple_78076, width_78078)
        # Adding element type (line 322)
        # Getting the type of 'self' (line 323)
        self_78079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 16), 'self')
        # Obtaining the member 'height' of a type (line 323)
        height_78080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 323, 16), self_78079, 'height')
        # Getting the type of 'self' (line 323)
        self_78081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 30), 'self')
        # Obtaining the member 'depth' of a type (line 323)
        depth_78082 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 323, 30), self_78081, 'depth')
        # Applying the binary operator '+' (line 323)
        result_add_78083 = python_operator(stypy.reporting.localization.Localization(__file__, 323, 16), '+', height_78080, depth_78082)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 16), tuple_78076, result_add_78083)
        # Adding element type (line 322)
        # Getting the type of 'self' (line 324)
        self_78084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 16), 'self')
        # Obtaining the member 'depth' of a type (line 324)
        depth_78085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 16), self_78084, 'depth')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 16), tuple_78076, depth_78085)
        # Adding element type (line 322)
        # Getting the type of 'svg_elements' (line 325)
        svg_elements_78086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 16), 'svg_elements')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 16), tuple_78076, svg_elements_78086)
        # Adding element type (line 322)
        # Getting the type of 'used_characters' (line 326)
        used_characters_78087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 16), 'used_characters')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 16), tuple_78076, used_characters_78087)
        
        # Assigning a type to the variable 'stypy_return_type' (line 322)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 322, 8), 'stypy_return_type', tuple_78076)
        
        # ################# End of 'get_results(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_results' in the type store
        # Getting the type of 'stypy_return_type' (line 318)
        stypy_return_type_78088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78088)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_results'
        return stypy_return_type_78088


# Assigning a type to the variable 'MathtextBackendSvg' (line 299)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 299, 0), 'MathtextBackendSvg', MathtextBackendSvg)
# Declaration of the 'MathtextBackendPath' class
# Getting the type of 'MathtextBackend' (line 328)
MathtextBackend_78089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 26), 'MathtextBackend')

class MathtextBackendPath(MathtextBackend_78089, ):
    unicode_78090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 332, (-1)), 'unicode', u'\n    Store information to write a mathtext rendering to the text path\n    machinery.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 334, 4, False)
        # Assigning a type to the variable 'self' (line 335)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 335, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendPath.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a List to a Attribute (line 335):
        
        # Assigning a List to a Attribute (line 335):
        
        # Obtaining an instance of the builtin type 'list' (line 335)
        list_78091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 335)
        
        # Getting the type of 'self' (line 335)
        self_78092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 8), 'self')
        # Setting the type of the member 'glyphs' of a type (line 335)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 335, 8), self_78092, 'glyphs', list_78091)
        
        # Assigning a List to a Attribute (line 336):
        
        # Assigning a List to a Attribute (line 336):
        
        # Obtaining an instance of the builtin type 'list' (line 336)
        list_78093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 336)
        
        # Getting the type of 'self' (line 336)
        self_78094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 8), 'self')
        # Setting the type of the member 'rects' of a type (line 336)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 336, 8), self_78094, 'rects', list_78093)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def render_glyph(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render_glyph'
        module_type_store = module_type_store.open_function_context('render_glyph', 338, 4, False)
        # Assigning a type to the variable 'self' (line 339)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 339, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendPath.render_glyph.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendPath.render_glyph.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendPath.render_glyph.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendPath.render_glyph.__dict__.__setitem__('stypy_function_name', 'MathtextBackendPath.render_glyph')
        MathtextBackendPath.render_glyph.__dict__.__setitem__('stypy_param_names_list', ['ox', 'oy', 'info'])
        MathtextBackendPath.render_glyph.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendPath.render_glyph.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendPath.render_glyph.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendPath.render_glyph.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendPath.render_glyph.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendPath.render_glyph.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendPath.render_glyph', ['ox', 'oy', 'info'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render_glyph', localization, ['ox', 'oy', 'info'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render_glyph(...)' code ##################

        
        # Assigning a BinOp to a Name (line 339):
        
        # Assigning a BinOp to a Name (line 339):
        # Getting the type of 'self' (line 339)
        self_78095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 13), 'self')
        # Obtaining the member 'height' of a type (line 339)
        height_78096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 339, 13), self_78095, 'height')
        # Getting the type of 'oy' (line 339)
        oy_78097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 27), 'oy')
        # Applying the binary operator '-' (line 339)
        result_sub_78098 = python_operator(stypy.reporting.localization.Localization(__file__, 339, 13), '-', height_78096, oy_78097)
        
        # Getting the type of 'info' (line 339)
        info_78099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 32), 'info')
        # Obtaining the member 'offset' of a type (line 339)
        offset_78100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 339, 32), info_78099, 'offset')
        # Applying the binary operator '+' (line 339)
        result_add_78101 = python_operator(stypy.reporting.localization.Localization(__file__, 339, 30), '+', result_sub_78098, offset_78100)
        
        # Assigning a type to the variable 'oy' (line 339)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 339, 8), 'oy', result_add_78101)
        
        # Assigning a Attribute to a Name (line 340):
        
        # Assigning a Attribute to a Name (line 340):
        # Getting the type of 'info' (line 340)
        info_78102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 18), 'info')
        # Obtaining the member 'num' of a type (line 340)
        num_78103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 340, 18), info_78102, 'num')
        # Assigning a type to the variable 'thetext' (line 340)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 340, 8), 'thetext', num_78103)
        
        # Call to append(...): (line 341)
        # Processing the call arguments (line 341)
        
        # Obtaining an instance of the builtin type 'tuple' (line 342)
        tuple_78107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 13), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 342)
        # Adding element type (line 342)
        # Getting the type of 'info' (line 342)
        info_78108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 13), 'info', False)
        # Obtaining the member 'font' of a type (line 342)
        font_78109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 342, 13), info_78108, 'font')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 13), tuple_78107, font_78109)
        # Adding element type (line 342)
        # Getting the type of 'info' (line 342)
        info_78110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 24), 'info', False)
        # Obtaining the member 'fontsize' of a type (line 342)
        fontsize_78111 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 342, 24), info_78110, 'fontsize')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 13), tuple_78107, fontsize_78111)
        # Adding element type (line 342)
        # Getting the type of 'thetext' (line 342)
        thetext_78112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 39), 'thetext', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 13), tuple_78107, thetext_78112)
        # Adding element type (line 342)
        # Getting the type of 'ox' (line 342)
        ox_78113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 48), 'ox', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 13), tuple_78107, ox_78113)
        # Adding element type (line 342)
        # Getting the type of 'oy' (line 342)
        oy_78114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 52), 'oy', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 13), tuple_78107, oy_78114)
        
        # Processing the call keyword arguments (line 341)
        kwargs_78115 = {}
        # Getting the type of 'self' (line 341)
        self_78104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 8), 'self', False)
        # Obtaining the member 'glyphs' of a type (line 341)
        glyphs_78105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 341, 8), self_78104, 'glyphs')
        # Obtaining the member 'append' of a type (line 341)
        append_78106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 341, 8), glyphs_78105, 'append')
        # Calling append(args, kwargs) (line 341)
        append_call_result_78116 = invoke(stypy.reporting.localization.Localization(__file__, 341, 8), append_78106, *[tuple_78107], **kwargs_78115)
        
        
        # ################# End of 'render_glyph(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render_glyph' in the type store
        # Getting the type of 'stypy_return_type' (line 338)
        stypy_return_type_78117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78117)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render_glyph'
        return stypy_return_type_78117


    @norecursion
    def render_rect_filled(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render_rect_filled'
        module_type_store = module_type_store.open_function_context('render_rect_filled', 344, 4, False)
        # Assigning a type to the variable 'self' (line 345)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 345, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendPath.render_rect_filled.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendPath.render_rect_filled.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendPath.render_rect_filled.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendPath.render_rect_filled.__dict__.__setitem__('stypy_function_name', 'MathtextBackendPath.render_rect_filled')
        MathtextBackendPath.render_rect_filled.__dict__.__setitem__('stypy_param_names_list', ['x1', 'y1', 'x2', 'y2'])
        MathtextBackendPath.render_rect_filled.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendPath.render_rect_filled.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendPath.render_rect_filled.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendPath.render_rect_filled.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendPath.render_rect_filled.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendPath.render_rect_filled.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendPath.render_rect_filled', ['x1', 'y1', 'x2', 'y2'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render_rect_filled', localization, ['x1', 'y1', 'x2', 'y2'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render_rect_filled(...)' code ##################

        
        # Call to append(...): (line 345)
        # Processing the call arguments (line 345)
        
        # Obtaining an instance of the builtin type 'tuple' (line 346)
        tuple_78121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 346, 13), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 346)
        # Adding element type (line 346)
        # Getting the type of 'x1' (line 346)
        x1_78122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 13), 'x1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 346, 13), tuple_78121, x1_78122)
        # Adding element type (line 346)
        # Getting the type of 'self' (line 346)
        self_78123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 17), 'self', False)
        # Obtaining the member 'height' of a type (line 346)
        height_78124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 346, 17), self_78123, 'height')
        # Getting the type of 'y2' (line 346)
        y2_78125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 29), 'y2', False)
        # Applying the binary operator '-' (line 346)
        result_sub_78126 = python_operator(stypy.reporting.localization.Localization(__file__, 346, 17), '-', height_78124, y2_78125)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 346, 13), tuple_78121, result_sub_78126)
        # Adding element type (line 346)
        # Getting the type of 'x2' (line 346)
        x2_78127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 34), 'x2', False)
        # Getting the type of 'x1' (line 346)
        x1_78128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 39), 'x1', False)
        # Applying the binary operator '-' (line 346)
        result_sub_78129 = python_operator(stypy.reporting.localization.Localization(__file__, 346, 34), '-', x2_78127, x1_78128)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 346, 13), tuple_78121, result_sub_78129)
        # Adding element type (line 346)
        # Getting the type of 'y2' (line 346)
        y2_78130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 43), 'y2', False)
        # Getting the type of 'y1' (line 346)
        y1_78131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 48), 'y1', False)
        # Applying the binary operator '-' (line 346)
        result_sub_78132 = python_operator(stypy.reporting.localization.Localization(__file__, 346, 43), '-', y2_78130, y1_78131)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 346, 13), tuple_78121, result_sub_78132)
        
        # Processing the call keyword arguments (line 345)
        kwargs_78133 = {}
        # Getting the type of 'self' (line 345)
        self_78118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 8), 'self', False)
        # Obtaining the member 'rects' of a type (line 345)
        rects_78119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 345, 8), self_78118, 'rects')
        # Obtaining the member 'append' of a type (line 345)
        append_78120 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 345, 8), rects_78119, 'append')
        # Calling append(args, kwargs) (line 345)
        append_call_result_78134 = invoke(stypy.reporting.localization.Localization(__file__, 345, 8), append_78120, *[tuple_78121], **kwargs_78133)
        
        
        # ################# End of 'render_rect_filled(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render_rect_filled' in the type store
        # Getting the type of 'stypy_return_type' (line 344)
        stypy_return_type_78135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78135)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render_rect_filled'
        return stypy_return_type_78135


    @norecursion
    def get_results(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_results'
        module_type_store = module_type_store.open_function_context('get_results', 348, 4, False)
        # Assigning a type to the variable 'self' (line 349)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 349, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendPath.get_results.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendPath.get_results.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendPath.get_results.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendPath.get_results.__dict__.__setitem__('stypy_function_name', 'MathtextBackendPath.get_results')
        MathtextBackendPath.get_results.__dict__.__setitem__('stypy_param_names_list', ['box', 'used_characters'])
        MathtextBackendPath.get_results.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendPath.get_results.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendPath.get_results.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendPath.get_results.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendPath.get_results.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendPath.get_results.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendPath.get_results', ['box', 'used_characters'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_results', localization, ['box', 'used_characters'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_results(...)' code ##################

        
        # Call to ship(...): (line 349)
        # Processing the call arguments (line 349)
        int_78137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 349, 13), 'int')
        int_78138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 349, 16), 'int')
        # Getting the type of 'box' (line 349)
        box_78139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 19), 'box', False)
        # Processing the call keyword arguments (line 349)
        kwargs_78140 = {}
        # Getting the type of 'ship' (line 349)
        ship_78136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 8), 'ship', False)
        # Calling ship(args, kwargs) (line 349)
        ship_call_result_78141 = invoke(stypy.reporting.localization.Localization(__file__, 349, 8), ship_78136, *[int_78137, int_78138, box_78139], **kwargs_78140)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 350)
        tuple_78142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 350, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 350)
        # Adding element type (line 350)
        # Getting the type of 'self' (line 350)
        self_78143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 16), 'self')
        # Obtaining the member 'width' of a type (line 350)
        width_78144 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 16), self_78143, 'width')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 16), tuple_78142, width_78144)
        # Adding element type (line 350)
        # Getting the type of 'self' (line 351)
        self_78145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 16), 'self')
        # Obtaining the member 'height' of a type (line 351)
        height_78146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 16), self_78145, 'height')
        # Getting the type of 'self' (line 351)
        self_78147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 30), 'self')
        # Obtaining the member 'depth' of a type (line 351)
        depth_78148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 30), self_78147, 'depth')
        # Applying the binary operator '+' (line 351)
        result_add_78149 = python_operator(stypy.reporting.localization.Localization(__file__, 351, 16), '+', height_78146, depth_78148)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 16), tuple_78142, result_add_78149)
        # Adding element type (line 350)
        # Getting the type of 'self' (line 352)
        self_78150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 16), 'self')
        # Obtaining the member 'depth' of a type (line 352)
        depth_78151 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 16), self_78150, 'depth')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 16), tuple_78142, depth_78151)
        # Adding element type (line 350)
        # Getting the type of 'self' (line 353)
        self_78152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 16), 'self')
        # Obtaining the member 'glyphs' of a type (line 353)
        glyphs_78153 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 353, 16), self_78152, 'glyphs')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 16), tuple_78142, glyphs_78153)
        # Adding element type (line 350)
        # Getting the type of 'self' (line 354)
        self_78154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 16), 'self')
        # Obtaining the member 'rects' of a type (line 354)
        rects_78155 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 16), self_78154, 'rects')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 16), tuple_78142, rects_78155)
        
        # Assigning a type to the variable 'stypy_return_type' (line 350)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 350, 8), 'stypy_return_type', tuple_78142)
        
        # ################# End of 'get_results(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_results' in the type store
        # Getting the type of 'stypy_return_type' (line 348)
        stypy_return_type_78156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78156)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_results'
        return stypy_return_type_78156


# Assigning a type to the variable 'MathtextBackendPath' (line 328)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 0), 'MathtextBackendPath', MathtextBackendPath)
# Declaration of the 'MathtextBackendCairo' class
# Getting the type of 'MathtextBackend' (line 356)
MathtextBackend_78157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 27), 'MathtextBackend')

class MathtextBackendCairo(MathtextBackend_78157, ):
    unicode_78158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 360, (-1)), 'unicode', u'\n    Store information to write a mathtext rendering to the Cairo\n    backend.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 362, 4, False)
        # Assigning a type to the variable 'self' (line 363)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 363, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendCairo.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a List to a Attribute (line 363):
        
        # Assigning a List to a Attribute (line 363):
        
        # Obtaining an instance of the builtin type 'list' (line 363)
        list_78159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 363)
        
        # Getting the type of 'self' (line 363)
        self_78160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 8), 'self')
        # Setting the type of the member 'glyphs' of a type (line 363)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 363, 8), self_78160, 'glyphs', list_78159)
        
        # Assigning a List to a Attribute (line 364):
        
        # Assigning a List to a Attribute (line 364):
        
        # Obtaining an instance of the builtin type 'list' (line 364)
        list_78161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 364, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 364)
        
        # Getting the type of 'self' (line 364)
        self_78162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 8), 'self')
        # Setting the type of the member 'rects' of a type (line 364)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 364, 8), self_78162, 'rects', list_78161)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def render_glyph(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render_glyph'
        module_type_store = module_type_store.open_function_context('render_glyph', 366, 4, False)
        # Assigning a type to the variable 'self' (line 367)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 367, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendCairo.render_glyph.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendCairo.render_glyph.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendCairo.render_glyph.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendCairo.render_glyph.__dict__.__setitem__('stypy_function_name', 'MathtextBackendCairo.render_glyph')
        MathtextBackendCairo.render_glyph.__dict__.__setitem__('stypy_param_names_list', ['ox', 'oy', 'info'])
        MathtextBackendCairo.render_glyph.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendCairo.render_glyph.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendCairo.render_glyph.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendCairo.render_glyph.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendCairo.render_glyph.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendCairo.render_glyph.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendCairo.render_glyph', ['ox', 'oy', 'info'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render_glyph', localization, ['ox', 'oy', 'info'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render_glyph(...)' code ##################

        
        # Assigning a BinOp to a Name (line 367):
        
        # Assigning a BinOp to a Name (line 367):
        # Getting the type of 'oy' (line 367)
        oy_78163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 13), 'oy')
        # Getting the type of 'info' (line 367)
        info_78164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 18), 'info')
        # Obtaining the member 'offset' of a type (line 367)
        offset_78165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 367, 18), info_78164, 'offset')
        # Applying the binary operator '-' (line 367)
        result_sub_78166 = python_operator(stypy.reporting.localization.Localization(__file__, 367, 13), '-', oy_78163, offset_78165)
        
        # Getting the type of 'self' (line 367)
        self_78167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 32), 'self')
        # Obtaining the member 'height' of a type (line 367)
        height_78168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 367, 32), self_78167, 'height')
        # Applying the binary operator '-' (line 367)
        result_sub_78169 = python_operator(stypy.reporting.localization.Localization(__file__, 367, 30), '-', result_sub_78166, height_78168)
        
        # Assigning a type to the variable 'oy' (line 367)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 367, 8), 'oy', result_sub_78169)
        
        # Assigning a Call to a Name (line 368):
        
        # Assigning a Call to a Name (line 368):
        
        # Call to unichr_safe(...): (line 368)
        # Processing the call arguments (line 368)
        # Getting the type of 'info' (line 368)
        info_78171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 30), 'info', False)
        # Obtaining the member 'num' of a type (line 368)
        num_78172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 368, 30), info_78171, 'num')
        # Processing the call keyword arguments (line 368)
        kwargs_78173 = {}
        # Getting the type of 'unichr_safe' (line 368)
        unichr_safe_78170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 18), 'unichr_safe', False)
        # Calling unichr_safe(args, kwargs) (line 368)
        unichr_safe_call_result_78174 = invoke(stypy.reporting.localization.Localization(__file__, 368, 18), unichr_safe_78170, *[num_78172], **kwargs_78173)
        
        # Assigning a type to the variable 'thetext' (line 368)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 368, 8), 'thetext', unichr_safe_call_result_78174)
        
        # Call to append(...): (line 369)
        # Processing the call arguments (line 369)
        
        # Obtaining an instance of the builtin type 'tuple' (line 370)
        tuple_78178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 370, 13), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 370)
        # Adding element type (line 370)
        # Getting the type of 'info' (line 370)
        info_78179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 13), 'info', False)
        # Obtaining the member 'font' of a type (line 370)
        font_78180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 370, 13), info_78179, 'font')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 370, 13), tuple_78178, font_78180)
        # Adding element type (line 370)
        # Getting the type of 'info' (line 370)
        info_78181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 24), 'info', False)
        # Obtaining the member 'fontsize' of a type (line 370)
        fontsize_78182 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 370, 24), info_78181, 'fontsize')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 370, 13), tuple_78178, fontsize_78182)
        # Adding element type (line 370)
        # Getting the type of 'thetext' (line 370)
        thetext_78183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 39), 'thetext', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 370, 13), tuple_78178, thetext_78183)
        # Adding element type (line 370)
        # Getting the type of 'ox' (line 370)
        ox_78184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 48), 'ox', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 370, 13), tuple_78178, ox_78184)
        # Adding element type (line 370)
        # Getting the type of 'oy' (line 370)
        oy_78185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 52), 'oy', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 370, 13), tuple_78178, oy_78185)
        
        # Processing the call keyword arguments (line 369)
        kwargs_78186 = {}
        # Getting the type of 'self' (line 369)
        self_78175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 8), 'self', False)
        # Obtaining the member 'glyphs' of a type (line 369)
        glyphs_78176 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 369, 8), self_78175, 'glyphs')
        # Obtaining the member 'append' of a type (line 369)
        append_78177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 369, 8), glyphs_78176, 'append')
        # Calling append(args, kwargs) (line 369)
        append_call_result_78187 = invoke(stypy.reporting.localization.Localization(__file__, 369, 8), append_78177, *[tuple_78178], **kwargs_78186)
        
        
        # ################# End of 'render_glyph(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render_glyph' in the type store
        # Getting the type of 'stypy_return_type' (line 366)
        stypy_return_type_78188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78188)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render_glyph'
        return stypy_return_type_78188


    @norecursion
    def render_rect_filled(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render_rect_filled'
        module_type_store = module_type_store.open_function_context('render_rect_filled', 372, 4, False)
        # Assigning a type to the variable 'self' (line 373)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 373, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendCairo.render_rect_filled.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendCairo.render_rect_filled.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendCairo.render_rect_filled.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendCairo.render_rect_filled.__dict__.__setitem__('stypy_function_name', 'MathtextBackendCairo.render_rect_filled')
        MathtextBackendCairo.render_rect_filled.__dict__.__setitem__('stypy_param_names_list', ['x1', 'y1', 'x2', 'y2'])
        MathtextBackendCairo.render_rect_filled.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendCairo.render_rect_filled.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendCairo.render_rect_filled.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendCairo.render_rect_filled.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendCairo.render_rect_filled.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendCairo.render_rect_filled.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendCairo.render_rect_filled', ['x1', 'y1', 'x2', 'y2'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render_rect_filled', localization, ['x1', 'y1', 'x2', 'y2'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render_rect_filled(...)' code ##################

        
        # Call to append(...): (line 373)
        # Processing the call arguments (line 373)
        
        # Obtaining an instance of the builtin type 'tuple' (line 374)
        tuple_78192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 13), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 374)
        # Adding element type (line 374)
        # Getting the type of 'x1' (line 374)
        x1_78193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 13), 'x1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 374, 13), tuple_78192, x1_78193)
        # Adding element type (line 374)
        # Getting the type of 'y1' (line 374)
        y1_78194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 17), 'y1', False)
        # Getting the type of 'self' (line 374)
        self_78195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 22), 'self', False)
        # Obtaining the member 'height' of a type (line 374)
        height_78196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 374, 22), self_78195, 'height')
        # Applying the binary operator '-' (line 374)
        result_sub_78197 = python_operator(stypy.reporting.localization.Localization(__file__, 374, 17), '-', y1_78194, height_78196)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 374, 13), tuple_78192, result_sub_78197)
        # Adding element type (line 374)
        # Getting the type of 'x2' (line 374)
        x2_78198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 35), 'x2', False)
        # Getting the type of 'x1' (line 374)
        x1_78199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 40), 'x1', False)
        # Applying the binary operator '-' (line 374)
        result_sub_78200 = python_operator(stypy.reporting.localization.Localization(__file__, 374, 35), '-', x2_78198, x1_78199)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 374, 13), tuple_78192, result_sub_78200)
        # Adding element type (line 374)
        # Getting the type of 'y2' (line 374)
        y2_78201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 44), 'y2', False)
        # Getting the type of 'y1' (line 374)
        y1_78202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 49), 'y1', False)
        # Applying the binary operator '-' (line 374)
        result_sub_78203 = python_operator(stypy.reporting.localization.Localization(__file__, 374, 44), '-', y2_78201, y1_78202)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 374, 13), tuple_78192, result_sub_78203)
        
        # Processing the call keyword arguments (line 373)
        kwargs_78204 = {}
        # Getting the type of 'self' (line 373)
        self_78189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 8), 'self', False)
        # Obtaining the member 'rects' of a type (line 373)
        rects_78190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 8), self_78189, 'rects')
        # Obtaining the member 'append' of a type (line 373)
        append_78191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 8), rects_78190, 'append')
        # Calling append(args, kwargs) (line 373)
        append_call_result_78205 = invoke(stypy.reporting.localization.Localization(__file__, 373, 8), append_78191, *[tuple_78192], **kwargs_78204)
        
        
        # ################# End of 'render_rect_filled(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render_rect_filled' in the type store
        # Getting the type of 'stypy_return_type' (line 372)
        stypy_return_type_78206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78206)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render_rect_filled'
        return stypy_return_type_78206


    @norecursion
    def get_results(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_results'
        module_type_store = module_type_store.open_function_context('get_results', 376, 4, False)
        # Assigning a type to the variable 'self' (line 377)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 377, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathtextBackendCairo.get_results.__dict__.__setitem__('stypy_localization', localization)
        MathtextBackendCairo.get_results.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathtextBackendCairo.get_results.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathtextBackendCairo.get_results.__dict__.__setitem__('stypy_function_name', 'MathtextBackendCairo.get_results')
        MathtextBackendCairo.get_results.__dict__.__setitem__('stypy_param_names_list', ['box', 'used_characters'])
        MathtextBackendCairo.get_results.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathtextBackendCairo.get_results.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathtextBackendCairo.get_results.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathtextBackendCairo.get_results.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathtextBackendCairo.get_results.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathtextBackendCairo.get_results.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathtextBackendCairo.get_results', ['box', 'used_characters'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_results', localization, ['box', 'used_characters'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_results(...)' code ##################

        
        # Call to ship(...): (line 377)
        # Processing the call arguments (line 377)
        int_78208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 377, 13), 'int')
        int_78209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 377, 16), 'int')
        # Getting the type of 'box' (line 377)
        box_78210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 19), 'box', False)
        # Processing the call keyword arguments (line 377)
        kwargs_78211 = {}
        # Getting the type of 'ship' (line 377)
        ship_78207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 8), 'ship', False)
        # Calling ship(args, kwargs) (line 377)
        ship_call_result_78212 = invoke(stypy.reporting.localization.Localization(__file__, 377, 8), ship_78207, *[int_78208, int_78209, box_78210], **kwargs_78211)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 378)
        tuple_78213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 378)
        # Adding element type (line 378)
        # Getting the type of 'self' (line 378)
        self_78214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 16), 'self')
        # Obtaining the member 'width' of a type (line 378)
        width_78215 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 16), self_78214, 'width')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 378, 16), tuple_78213, width_78215)
        # Adding element type (line 378)
        # Getting the type of 'self' (line 379)
        self_78216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 16), 'self')
        # Obtaining the member 'height' of a type (line 379)
        height_78217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 16), self_78216, 'height')
        # Getting the type of 'self' (line 379)
        self_78218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 30), 'self')
        # Obtaining the member 'depth' of a type (line 379)
        depth_78219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 30), self_78218, 'depth')
        # Applying the binary operator '+' (line 379)
        result_add_78220 = python_operator(stypy.reporting.localization.Localization(__file__, 379, 16), '+', height_78217, depth_78219)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 378, 16), tuple_78213, result_add_78220)
        # Adding element type (line 378)
        # Getting the type of 'self' (line 380)
        self_78221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 16), 'self')
        # Obtaining the member 'depth' of a type (line 380)
        depth_78222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 380, 16), self_78221, 'depth')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 378, 16), tuple_78213, depth_78222)
        # Adding element type (line 378)
        # Getting the type of 'self' (line 381)
        self_78223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 16), 'self')
        # Obtaining the member 'glyphs' of a type (line 381)
        glyphs_78224 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 381, 16), self_78223, 'glyphs')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 378, 16), tuple_78213, glyphs_78224)
        # Adding element type (line 378)
        # Getting the type of 'self' (line 382)
        self_78225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 16), 'self')
        # Obtaining the member 'rects' of a type (line 382)
        rects_78226 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 382, 16), self_78225, 'rects')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 378, 16), tuple_78213, rects_78226)
        
        # Assigning a type to the variable 'stypy_return_type' (line 378)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 378, 8), 'stypy_return_type', tuple_78213)
        
        # ################# End of 'get_results(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_results' in the type store
        # Getting the type of 'stypy_return_type' (line 376)
        stypy_return_type_78227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78227)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_results'
        return stypy_return_type_78227


# Assigning a type to the variable 'MathtextBackendCairo' (line 356)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 356, 0), 'MathtextBackendCairo', MathtextBackendCairo)
# Declaration of the 'Fonts' class

class Fonts(object, ):
    unicode_78228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 391, (-1)), 'unicode', u'\n    An abstract base class for a system of fonts to use for mathtext.\n\n    The class must be able to take symbol keys and font file names and\n    return the character metrics.  It also delegates to a backend class\n    to do the actual drawing.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 393, 4, False)
        # Assigning a type to the variable 'self' (line 394)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 394, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Fonts.__init__', ['default_font_prop', 'mathtext_backend'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['default_font_prop', 'mathtext_backend'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        unicode_78229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 402, (-1)), 'unicode', u'\n        *default_font_prop*: A\n        :class:`~matplotlib.font_manager.FontProperties` object to use\n        for the default non-math font, or the base font for Unicode\n        (generic) font rendering.\n\n        *mathtext_backend*: A subclass of :class:`MathTextBackend`\n        used to delegate the actual rendering.\n        ')
        
        # Assigning a Name to a Attribute (line 403):
        
        # Assigning a Name to a Attribute (line 403):
        # Getting the type of 'default_font_prop' (line 403)
        default_font_prop_78230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 33), 'default_font_prop')
        # Getting the type of 'self' (line 403)
        self_78231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 8), 'self')
        # Setting the type of the member 'default_font_prop' of a type (line 403)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 403, 8), self_78231, 'default_font_prop', default_font_prop_78230)
        
        # Assigning a Name to a Attribute (line 404):
        
        # Assigning a Name to a Attribute (line 404):
        # Getting the type of 'mathtext_backend' (line 404)
        mathtext_backend_78232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 32), 'mathtext_backend')
        # Getting the type of 'self' (line 404)
        self_78233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 8), 'self')
        # Setting the type of the member 'mathtext_backend' of a type (line 404)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 404, 8), self_78233, 'mathtext_backend', mathtext_backend_78232)
        
        # Assigning a Dict to a Attribute (line 405):
        
        # Assigning a Dict to a Attribute (line 405):
        
        # Obtaining an instance of the builtin type 'dict' (line 405)
        dict_78234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 405, 31), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 405)
        
        # Getting the type of 'self' (line 405)
        self_78235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 8), 'self')
        # Setting the type of the member 'used_characters' of a type (line 405)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 405, 8), self_78235, 'used_characters', dict_78234)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def destroy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'destroy'
        module_type_store = module_type_store.open_function_context('destroy', 407, 4, False)
        # Assigning a type to the variable 'self' (line 408)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 408, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Fonts.destroy.__dict__.__setitem__('stypy_localization', localization)
        Fonts.destroy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Fonts.destroy.__dict__.__setitem__('stypy_type_store', module_type_store)
        Fonts.destroy.__dict__.__setitem__('stypy_function_name', 'Fonts.destroy')
        Fonts.destroy.__dict__.__setitem__('stypy_param_names_list', [])
        Fonts.destroy.__dict__.__setitem__('stypy_varargs_param_name', None)
        Fonts.destroy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Fonts.destroy.__dict__.__setitem__('stypy_call_defaults', defaults)
        Fonts.destroy.__dict__.__setitem__('stypy_call_varargs', varargs)
        Fonts.destroy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Fonts.destroy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Fonts.destroy', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'destroy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'destroy(...)' code ##################

        unicode_78236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, (-1)), 'unicode', u'\n        Fix any cyclical references before the object is about\n        to be destroyed.\n        ')
        
        # Assigning a Name to a Attribute (line 412):
        
        # Assigning a Name to a Attribute (line 412):
        # Getting the type of 'None' (line 412)
        None_78237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 31), 'None')
        # Getting the type of 'self' (line 412)
        self_78238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 8), 'self')
        # Setting the type of the member 'used_characters' of a type (line 412)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 412, 8), self_78238, 'used_characters', None_78237)
        
        # ################# End of 'destroy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'destroy' in the type store
        # Getting the type of 'stypy_return_type' (line 407)
        stypy_return_type_78239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78239)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'destroy'
        return stypy_return_type_78239


    @norecursion
    def get_kern(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_kern'
        module_type_store = module_type_store.open_function_context('get_kern', 414, 4, False)
        # Assigning a type to the variable 'self' (line 415)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 415, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Fonts.get_kern.__dict__.__setitem__('stypy_localization', localization)
        Fonts.get_kern.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Fonts.get_kern.__dict__.__setitem__('stypy_type_store', module_type_store)
        Fonts.get_kern.__dict__.__setitem__('stypy_function_name', 'Fonts.get_kern')
        Fonts.get_kern.__dict__.__setitem__('stypy_param_names_list', ['font1', 'fontclass1', 'sym1', 'fontsize1', 'font2', 'fontclass2', 'sym2', 'fontsize2', 'dpi'])
        Fonts.get_kern.__dict__.__setitem__('stypy_varargs_param_name', None)
        Fonts.get_kern.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Fonts.get_kern.__dict__.__setitem__('stypy_call_defaults', defaults)
        Fonts.get_kern.__dict__.__setitem__('stypy_call_varargs', varargs)
        Fonts.get_kern.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Fonts.get_kern.__dict__.__setitem__('stypy_declared_arg_number', 10)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Fonts.get_kern', ['font1', 'fontclass1', 'sym1', 'fontsize1', 'font2', 'fontclass2', 'sym2', 'fontsize2', 'dpi'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_kern', localization, ['font1', 'fontclass1', 'sym1', 'fontsize1', 'font2', 'fontclass2', 'sym2', 'fontsize2', 'dpi'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_kern(...)' code ##################

        unicode_78240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, (-1)), 'unicode', u"\n        Get the kerning distance for font between *sym1* and *sym2*.\n\n        *fontX*: one of the TeX font names::\n\n          tt, it, rm, cal, sf, bf or default/regular (non-math)\n\n        *fontclassX*: TODO\n\n        *symX*: a symbol in raw TeX form. e.g., '1', 'x' or '\\sigma'\n\n        *fontsizeX*: the fontsize in points\n\n        *dpi*: the current dots-per-inch\n        ")
        float_78241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 15), 'float')
        # Assigning a type to the variable 'stypy_return_type' (line 431)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 431, 8), 'stypy_return_type', float_78241)
        
        # ################# End of 'get_kern(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_kern' in the type store
        # Getting the type of 'stypy_return_type' (line 414)
        stypy_return_type_78242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78242)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_kern'
        return stypy_return_type_78242


    @norecursion
    def get_metrics(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'True' (line 433)
        True_78243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 69), 'True')
        defaults = [True_78243]
        # Create a new context for function 'get_metrics'
        module_type_store = module_type_store.open_function_context('get_metrics', 433, 4, False)
        # Assigning a type to the variable 'self' (line 434)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 434, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Fonts.get_metrics.__dict__.__setitem__('stypy_localization', localization)
        Fonts.get_metrics.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Fonts.get_metrics.__dict__.__setitem__('stypy_type_store', module_type_store)
        Fonts.get_metrics.__dict__.__setitem__('stypy_function_name', 'Fonts.get_metrics')
        Fonts.get_metrics.__dict__.__setitem__('stypy_param_names_list', ['font', 'font_class', 'sym', 'fontsize', 'dpi', 'math'])
        Fonts.get_metrics.__dict__.__setitem__('stypy_varargs_param_name', None)
        Fonts.get_metrics.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Fonts.get_metrics.__dict__.__setitem__('stypy_call_defaults', defaults)
        Fonts.get_metrics.__dict__.__setitem__('stypy_call_varargs', varargs)
        Fonts.get_metrics.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Fonts.get_metrics.__dict__.__setitem__('stypy_declared_arg_number', 7)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Fonts.get_metrics', ['font', 'font_class', 'sym', 'fontsize', 'dpi', 'math'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_metrics', localization, ['font', 'font_class', 'sym', 'fontsize', 'dpi', 'math'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_metrics(...)' code ##################

        unicode_78244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 462, (-1)), 'unicode', u'\n        *font*: one of the TeX font names::\n\n          tt, it, rm, cal, sf, bf or default/regular (non-math)\n\n        *font_class*: TODO\n\n        *sym*:  a symbol in raw TeX form. e.g., \'1\', \'x\' or \'\\sigma\'\n\n        *fontsize*: font size in points\n\n        *dpi*: current dots-per-inch\n\n        *math*: whether sym is a math character\n\n        Returns an object with the following attributes:\n\n          - *advance*: The advance distance (in points) of the glyph.\n\n          - *height*: The height of the glyph in points.\n\n          - *width*: The width of the glyph in points.\n\n          - *xmin*, *xmax*, *ymin*, *ymax* - the ink rectangle of the glyph\n\n          - *iceberg* - the distance from the baseline to the top of\n            the glyph.  This corresponds to TeX\'s definition of\n            "height".\n        ')
        
        # Assigning a Call to a Name (line 463):
        
        # Assigning a Call to a Name (line 463):
        
        # Call to _get_info(...): (line 463)
        # Processing the call arguments (line 463)
        # Getting the type of 'font' (line 463)
        font_78247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 30), 'font', False)
        # Getting the type of 'font_class' (line 463)
        font_class_78248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 36), 'font_class', False)
        # Getting the type of 'sym' (line 463)
        sym_78249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 48), 'sym', False)
        # Getting the type of 'fontsize' (line 463)
        fontsize_78250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 53), 'fontsize', False)
        # Getting the type of 'dpi' (line 463)
        dpi_78251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 63), 'dpi', False)
        # Getting the type of 'math' (line 463)
        math_78252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 68), 'math', False)
        # Processing the call keyword arguments (line 463)
        kwargs_78253 = {}
        # Getting the type of 'self' (line 463)
        self_78245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 15), 'self', False)
        # Obtaining the member '_get_info' of a type (line 463)
        _get_info_78246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 463, 15), self_78245, '_get_info')
        # Calling _get_info(args, kwargs) (line 463)
        _get_info_call_result_78254 = invoke(stypy.reporting.localization.Localization(__file__, 463, 15), _get_info_78246, *[font_78247, font_class_78248, sym_78249, fontsize_78250, dpi_78251, math_78252], **kwargs_78253)
        
        # Assigning a type to the variable 'info' (line 463)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 463, 8), 'info', _get_info_call_result_78254)
        # Getting the type of 'info' (line 464)
        info_78255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 464, 15), 'info')
        # Obtaining the member 'metrics' of a type (line 464)
        metrics_78256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 464, 15), info_78255, 'metrics')
        # Assigning a type to the variable 'stypy_return_type' (line 464)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 464, 8), 'stypy_return_type', metrics_78256)
        
        # ################# End of 'get_metrics(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_metrics' in the type store
        # Getting the type of 'stypy_return_type' (line 433)
        stypy_return_type_78257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78257)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_metrics'
        return stypy_return_type_78257


    @norecursion
    def set_canvas_size(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'set_canvas_size'
        module_type_store = module_type_store.open_function_context('set_canvas_size', 466, 4, False)
        # Assigning a type to the variable 'self' (line 467)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 467, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Fonts.set_canvas_size.__dict__.__setitem__('stypy_localization', localization)
        Fonts.set_canvas_size.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Fonts.set_canvas_size.__dict__.__setitem__('stypy_type_store', module_type_store)
        Fonts.set_canvas_size.__dict__.__setitem__('stypy_function_name', 'Fonts.set_canvas_size')
        Fonts.set_canvas_size.__dict__.__setitem__('stypy_param_names_list', ['w', 'h', 'd'])
        Fonts.set_canvas_size.__dict__.__setitem__('stypy_varargs_param_name', None)
        Fonts.set_canvas_size.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Fonts.set_canvas_size.__dict__.__setitem__('stypy_call_defaults', defaults)
        Fonts.set_canvas_size.__dict__.__setitem__('stypy_call_varargs', varargs)
        Fonts.set_canvas_size.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Fonts.set_canvas_size.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Fonts.set_canvas_size', ['w', 'h', 'd'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'set_canvas_size', localization, ['w', 'h', 'd'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'set_canvas_size(...)' code ##################

        unicode_78258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, (-1)), 'unicode', u'\n        Set the size of the buffer used to render the math expression.\n        Only really necessary for the bitmap backends.\n        ')
        
        # Assigning a Tuple to a Tuple (line 471):
        
        # Assigning a Call to a Name (line 471):
        
        # Call to ceil(...): (line 471)
        # Processing the call arguments (line 471)
        # Getting the type of 'w' (line 471)
        w_78260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 51), 'w', False)
        # Processing the call keyword arguments (line 471)
        kwargs_78261 = {}
        # Getting the type of 'ceil' (line 471)
        ceil_78259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 46), 'ceil', False)
        # Calling ceil(args, kwargs) (line 471)
        ceil_call_result_78262 = invoke(stypy.reporting.localization.Localization(__file__, 471, 46), ceil_78259, *[w_78260], **kwargs_78261)
        
        # Assigning a type to the variable 'tuple_assignment_77272' (line 471)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 471, 8), 'tuple_assignment_77272', ceil_call_result_78262)
        
        # Assigning a Call to a Name (line 471):
        
        # Call to ceil(...): (line 471)
        # Processing the call arguments (line 471)
        # Getting the type of 'h' (line 471)
        h_78264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 60), 'h', False)
        # Processing the call keyword arguments (line 471)
        kwargs_78265 = {}
        # Getting the type of 'ceil' (line 471)
        ceil_78263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 55), 'ceil', False)
        # Calling ceil(args, kwargs) (line 471)
        ceil_call_result_78266 = invoke(stypy.reporting.localization.Localization(__file__, 471, 55), ceil_78263, *[h_78264], **kwargs_78265)
        
        # Assigning a type to the variable 'tuple_assignment_77273' (line 471)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 471, 8), 'tuple_assignment_77273', ceil_call_result_78266)
        
        # Assigning a Call to a Name (line 471):
        
        # Call to ceil(...): (line 471)
        # Processing the call arguments (line 471)
        # Getting the type of 'd' (line 471)
        d_78268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 69), 'd', False)
        # Processing the call keyword arguments (line 471)
        kwargs_78269 = {}
        # Getting the type of 'ceil' (line 471)
        ceil_78267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 64), 'ceil', False)
        # Calling ceil(args, kwargs) (line 471)
        ceil_call_result_78270 = invoke(stypy.reporting.localization.Localization(__file__, 471, 64), ceil_78267, *[d_78268], **kwargs_78269)
        
        # Assigning a type to the variable 'tuple_assignment_77274' (line 471)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 471, 8), 'tuple_assignment_77274', ceil_call_result_78270)
        
        # Assigning a Name to a Attribute (line 471):
        # Getting the type of 'tuple_assignment_77272' (line 471)
        tuple_assignment_77272_78271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 8), 'tuple_assignment_77272')
        # Getting the type of 'self' (line 471)
        self_78272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 8), 'self')
        # Setting the type of the member 'width' of a type (line 471)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 471, 8), self_78272, 'width', tuple_assignment_77272_78271)
        
        # Assigning a Name to a Attribute (line 471):
        # Getting the type of 'tuple_assignment_77273' (line 471)
        tuple_assignment_77273_78273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 8), 'tuple_assignment_77273')
        # Getting the type of 'self' (line 471)
        self_78274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 20), 'self')
        # Setting the type of the member 'height' of a type (line 471)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 471, 20), self_78274, 'height', tuple_assignment_77273_78273)
        
        # Assigning a Name to a Attribute (line 471):
        # Getting the type of 'tuple_assignment_77274' (line 471)
        tuple_assignment_77274_78275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 8), 'tuple_assignment_77274')
        # Getting the type of 'self' (line 471)
        self_78276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 33), 'self')
        # Setting the type of the member 'depth' of a type (line 471)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 471, 33), self_78276, 'depth', tuple_assignment_77274_78275)
        
        # Call to set_canvas_size(...): (line 472)
        # Processing the call arguments (line 472)
        # Getting the type of 'self' (line 472)
        self_78280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 46), 'self', False)
        # Obtaining the member 'width' of a type (line 472)
        width_78281 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 46), self_78280, 'width')
        # Getting the type of 'self' (line 472)
        self_78282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 58), 'self', False)
        # Obtaining the member 'height' of a type (line 472)
        height_78283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 58), self_78282, 'height')
        # Getting the type of 'self' (line 472)
        self_78284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 71), 'self', False)
        # Obtaining the member 'depth' of a type (line 472)
        depth_78285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 71), self_78284, 'depth')
        # Processing the call keyword arguments (line 472)
        kwargs_78286 = {}
        # Getting the type of 'self' (line 472)
        self_78277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 8), 'self', False)
        # Obtaining the member 'mathtext_backend' of a type (line 472)
        mathtext_backend_78278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 8), self_78277, 'mathtext_backend')
        # Obtaining the member 'set_canvas_size' of a type (line 472)
        set_canvas_size_78279 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 8), mathtext_backend_78278, 'set_canvas_size')
        # Calling set_canvas_size(args, kwargs) (line 472)
        set_canvas_size_call_result_78287 = invoke(stypy.reporting.localization.Localization(__file__, 472, 8), set_canvas_size_78279, *[width_78281, height_78283, depth_78285], **kwargs_78286)
        
        
        # ################# End of 'set_canvas_size(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'set_canvas_size' in the type store
        # Getting the type of 'stypy_return_type' (line 466)
        stypy_return_type_78288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78288)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'set_canvas_size'
        return stypy_return_type_78288


    @norecursion
    def render_glyph(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render_glyph'
        module_type_store = module_type_store.open_function_context('render_glyph', 474, 4, False)
        # Assigning a type to the variable 'self' (line 475)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 475, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Fonts.render_glyph.__dict__.__setitem__('stypy_localization', localization)
        Fonts.render_glyph.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Fonts.render_glyph.__dict__.__setitem__('stypy_type_store', module_type_store)
        Fonts.render_glyph.__dict__.__setitem__('stypy_function_name', 'Fonts.render_glyph')
        Fonts.render_glyph.__dict__.__setitem__('stypy_param_names_list', ['ox', 'oy', 'facename', 'font_class', 'sym', 'fontsize', 'dpi'])
        Fonts.render_glyph.__dict__.__setitem__('stypy_varargs_param_name', None)
        Fonts.render_glyph.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Fonts.render_glyph.__dict__.__setitem__('stypy_call_defaults', defaults)
        Fonts.render_glyph.__dict__.__setitem__('stypy_call_varargs', varargs)
        Fonts.render_glyph.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Fonts.render_glyph.__dict__.__setitem__('stypy_declared_arg_number', 8)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Fonts.render_glyph', ['ox', 'oy', 'facename', 'font_class', 'sym', 'fontsize', 'dpi'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render_glyph', localization, ['ox', 'oy', 'facename', 'font_class', 'sym', 'fontsize', 'dpi'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render_glyph(...)' code ##################

        unicode_78289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, (-1)), 'unicode', u'\n        Draw a glyph at\n\n          - *ox*, *oy*: position\n\n          - *facename*: One of the TeX face names\n\n          - *font_class*:\n\n          - *sym*: TeX symbol name or single character\n\n          - *fontsize*: fontsize in points\n\n          - *dpi*: The dpi to draw at.\n        ')
        
        # Assigning a Call to a Name (line 490):
        
        # Assigning a Call to a Name (line 490):
        
        # Call to _get_info(...): (line 490)
        # Processing the call arguments (line 490)
        # Getting the type of 'facename' (line 490)
        facename_78292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 30), 'facename', False)
        # Getting the type of 'font_class' (line 490)
        font_class_78293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 40), 'font_class', False)
        # Getting the type of 'sym' (line 490)
        sym_78294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 52), 'sym', False)
        # Getting the type of 'fontsize' (line 490)
        fontsize_78295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 57), 'fontsize', False)
        # Getting the type of 'dpi' (line 490)
        dpi_78296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 67), 'dpi', False)
        # Processing the call keyword arguments (line 490)
        kwargs_78297 = {}
        # Getting the type of 'self' (line 490)
        self_78290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 15), 'self', False)
        # Obtaining the member '_get_info' of a type (line 490)
        _get_info_78291 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 15), self_78290, '_get_info')
        # Calling _get_info(args, kwargs) (line 490)
        _get_info_call_result_78298 = invoke(stypy.reporting.localization.Localization(__file__, 490, 15), _get_info_78291, *[facename_78292, font_class_78293, sym_78294, fontsize_78295, dpi_78296], **kwargs_78297)
        
        # Assigning a type to the variable 'info' (line 490)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 490, 8), 'info', _get_info_call_result_78298)
        
        # Assigning a Call to a Tuple (line 491):
        
        # Assigning a Call to a Name:
        
        # Call to get_realpath_and_stat(...): (line 491)
        # Processing the call arguments (line 491)
        # Getting the type of 'info' (line 491)
        info_78300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 51), 'info', False)
        # Obtaining the member 'font' of a type (line 491)
        font_78301 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 491, 51), info_78300, 'font')
        # Obtaining the member 'fname' of a type (line 491)
        fname_78302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 491, 51), font_78301, 'fname')
        # Processing the call keyword arguments (line 491)
        kwargs_78303 = {}
        # Getting the type of 'get_realpath_and_stat' (line 491)
        get_realpath_and_stat_78299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 29), 'get_realpath_and_stat', False)
        # Calling get_realpath_and_stat(args, kwargs) (line 491)
        get_realpath_and_stat_call_result_78304 = invoke(stypy.reporting.localization.Localization(__file__, 491, 29), get_realpath_and_stat_78299, *[fname_78302], **kwargs_78303)
        
        # Assigning a type to the variable 'call_assignment_77275' (line 491)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 491, 8), 'call_assignment_77275', get_realpath_and_stat_call_result_78304)
        
        # Assigning a Call to a Name (line 491):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_78307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 491, 8), 'int')
        # Processing the call keyword arguments
        kwargs_78308 = {}
        # Getting the type of 'call_assignment_77275' (line 491)
        call_assignment_77275_78305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 8), 'call_assignment_77275', False)
        # Obtaining the member '__getitem__' of a type (line 491)
        getitem___78306 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 491, 8), call_assignment_77275_78305, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_78309 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___78306, *[int_78307], **kwargs_78308)
        
        # Assigning a type to the variable 'call_assignment_77276' (line 491)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 491, 8), 'call_assignment_77276', getitem___call_result_78309)
        
        # Assigning a Name to a Name (line 491):
        # Getting the type of 'call_assignment_77276' (line 491)
        call_assignment_77276_78310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 8), 'call_assignment_77276')
        # Assigning a type to the variable 'realpath' (line 491)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 491, 8), 'realpath', call_assignment_77276_78310)
        
        # Assigning a Call to a Name (line 491):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_78313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 491, 8), 'int')
        # Processing the call keyword arguments
        kwargs_78314 = {}
        # Getting the type of 'call_assignment_77275' (line 491)
        call_assignment_77275_78311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 8), 'call_assignment_77275', False)
        # Obtaining the member '__getitem__' of a type (line 491)
        getitem___78312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 491, 8), call_assignment_77275_78311, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_78315 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___78312, *[int_78313], **kwargs_78314)
        
        # Assigning a type to the variable 'call_assignment_77277' (line 491)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 491, 8), 'call_assignment_77277', getitem___call_result_78315)
        
        # Assigning a Name to a Name (line 491):
        # Getting the type of 'call_assignment_77277' (line 491)
        call_assignment_77277_78316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 8), 'call_assignment_77277')
        # Assigning a type to the variable 'stat_key' (line 491)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 491, 18), 'stat_key', call_assignment_77277_78316)
        
        # Assigning a Call to a Name (line 492):
        
        # Assigning a Call to a Name (line 492):
        
        # Call to setdefault(...): (line 492)
        # Processing the call arguments (line 492)
        # Getting the type of 'stat_key' (line 493)
        stat_key_78320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 12), 'stat_key', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 493)
        tuple_78321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 23), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 493)
        # Adding element type (line 493)
        # Getting the type of 'realpath' (line 493)
        realpath_78322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 23), 'realpath', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 493, 23), tuple_78321, realpath_78322)
        # Adding element type (line 493)
        
        # Call to set(...): (line 493)
        # Processing the call keyword arguments (line 493)
        kwargs_78324 = {}
        # Getting the type of 'set' (line 493)
        set_78323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 33), 'set', False)
        # Calling set(args, kwargs) (line 493)
        set_call_result_78325 = invoke(stypy.reporting.localization.Localization(__file__, 493, 33), set_78323, *[], **kwargs_78324)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 493, 23), tuple_78321, set_call_result_78325)
        
        # Processing the call keyword arguments (line 492)
        kwargs_78326 = {}
        # Getting the type of 'self' (line 492)
        self_78317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 26), 'self', False)
        # Obtaining the member 'used_characters' of a type (line 492)
        used_characters_78318 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 492, 26), self_78317, 'used_characters')
        # Obtaining the member 'setdefault' of a type (line 492)
        setdefault_78319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 492, 26), used_characters_78318, 'setdefault')
        # Calling setdefault(args, kwargs) (line 492)
        setdefault_call_result_78327 = invoke(stypy.reporting.localization.Localization(__file__, 492, 26), setdefault_78319, *[stat_key_78320, tuple_78321], **kwargs_78326)
        
        # Assigning a type to the variable 'used_characters' (line 492)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 492, 8), 'used_characters', setdefault_call_result_78327)
        
        # Call to add(...): (line 494)
        # Processing the call arguments (line 494)
        # Getting the type of 'info' (line 494)
        info_78333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 31), 'info', False)
        # Obtaining the member 'num' of a type (line 494)
        num_78334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 494, 31), info_78333, 'num')
        # Processing the call keyword arguments (line 494)
        kwargs_78335 = {}
        
        # Obtaining the type of the subscript
        int_78328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 24), 'int')
        # Getting the type of 'used_characters' (line 494)
        used_characters_78329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 8), 'used_characters', False)
        # Obtaining the member '__getitem__' of a type (line 494)
        getitem___78330 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 494, 8), used_characters_78329, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 494)
        subscript_call_result_78331 = invoke(stypy.reporting.localization.Localization(__file__, 494, 8), getitem___78330, int_78328)
        
        # Obtaining the member 'add' of a type (line 494)
        add_78332 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 494, 8), subscript_call_result_78331, 'add')
        # Calling add(args, kwargs) (line 494)
        add_call_result_78336 = invoke(stypy.reporting.localization.Localization(__file__, 494, 8), add_78332, *[num_78334], **kwargs_78335)
        
        
        # Call to render_glyph(...): (line 495)
        # Processing the call arguments (line 495)
        # Getting the type of 'ox' (line 495)
        ox_78340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 43), 'ox', False)
        # Getting the type of 'oy' (line 495)
        oy_78341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 47), 'oy', False)
        # Getting the type of 'info' (line 495)
        info_78342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 51), 'info', False)
        # Processing the call keyword arguments (line 495)
        kwargs_78343 = {}
        # Getting the type of 'self' (line 495)
        self_78337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 8), 'self', False)
        # Obtaining the member 'mathtext_backend' of a type (line 495)
        mathtext_backend_78338 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 495, 8), self_78337, 'mathtext_backend')
        # Obtaining the member 'render_glyph' of a type (line 495)
        render_glyph_78339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 495, 8), mathtext_backend_78338, 'render_glyph')
        # Calling render_glyph(args, kwargs) (line 495)
        render_glyph_call_result_78344 = invoke(stypy.reporting.localization.Localization(__file__, 495, 8), render_glyph_78339, *[ox_78340, oy_78341, info_78342], **kwargs_78343)
        
        
        # ################# End of 'render_glyph(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render_glyph' in the type store
        # Getting the type of 'stypy_return_type' (line 474)
        stypy_return_type_78345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78345)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render_glyph'
        return stypy_return_type_78345


    @norecursion
    def render_rect_filled(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render_rect_filled'
        module_type_store = module_type_store.open_function_context('render_rect_filled', 497, 4, False)
        # Assigning a type to the variable 'self' (line 498)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 498, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Fonts.render_rect_filled.__dict__.__setitem__('stypy_localization', localization)
        Fonts.render_rect_filled.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Fonts.render_rect_filled.__dict__.__setitem__('stypy_type_store', module_type_store)
        Fonts.render_rect_filled.__dict__.__setitem__('stypy_function_name', 'Fonts.render_rect_filled')
        Fonts.render_rect_filled.__dict__.__setitem__('stypy_param_names_list', ['x1', 'y1', 'x2', 'y2'])
        Fonts.render_rect_filled.__dict__.__setitem__('stypy_varargs_param_name', None)
        Fonts.render_rect_filled.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Fonts.render_rect_filled.__dict__.__setitem__('stypy_call_defaults', defaults)
        Fonts.render_rect_filled.__dict__.__setitem__('stypy_call_varargs', varargs)
        Fonts.render_rect_filled.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Fonts.render_rect_filled.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Fonts.render_rect_filled', ['x1', 'y1', 'x2', 'y2'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render_rect_filled', localization, ['x1', 'y1', 'x2', 'y2'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render_rect_filled(...)' code ##################

        unicode_78346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 500, (-1)), 'unicode', u'\n        Draw a filled rectangle from (*x1*, *y1*) to (*x2*, *y2*).\n        ')
        
        # Call to render_rect_filled(...): (line 501)
        # Processing the call arguments (line 501)
        # Getting the type of 'x1' (line 501)
        x1_78350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 49), 'x1', False)
        # Getting the type of 'y1' (line 501)
        y1_78351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 53), 'y1', False)
        # Getting the type of 'x2' (line 501)
        x2_78352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 57), 'x2', False)
        # Getting the type of 'y2' (line 501)
        y2_78353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 61), 'y2', False)
        # Processing the call keyword arguments (line 501)
        kwargs_78354 = {}
        # Getting the type of 'self' (line 501)
        self_78347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 8), 'self', False)
        # Obtaining the member 'mathtext_backend' of a type (line 501)
        mathtext_backend_78348 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 501, 8), self_78347, 'mathtext_backend')
        # Obtaining the member 'render_rect_filled' of a type (line 501)
        render_rect_filled_78349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 501, 8), mathtext_backend_78348, 'render_rect_filled')
        # Calling render_rect_filled(args, kwargs) (line 501)
        render_rect_filled_call_result_78355 = invoke(stypy.reporting.localization.Localization(__file__, 501, 8), render_rect_filled_78349, *[x1_78350, y1_78351, x2_78352, y2_78353], **kwargs_78354)
        
        
        # ################# End of 'render_rect_filled(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render_rect_filled' in the type store
        # Getting the type of 'stypy_return_type' (line 497)
        stypy_return_type_78356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78356)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render_rect_filled'
        return stypy_return_type_78356


    @norecursion
    def get_xheight(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_xheight'
        module_type_store = module_type_store.open_function_context('get_xheight', 503, 4, False)
        # Assigning a type to the variable 'self' (line 504)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 504, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Fonts.get_xheight.__dict__.__setitem__('stypy_localization', localization)
        Fonts.get_xheight.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Fonts.get_xheight.__dict__.__setitem__('stypy_type_store', module_type_store)
        Fonts.get_xheight.__dict__.__setitem__('stypy_function_name', 'Fonts.get_xheight')
        Fonts.get_xheight.__dict__.__setitem__('stypy_param_names_list', ['font', 'fontsize', 'dpi'])
        Fonts.get_xheight.__dict__.__setitem__('stypy_varargs_param_name', None)
        Fonts.get_xheight.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Fonts.get_xheight.__dict__.__setitem__('stypy_call_defaults', defaults)
        Fonts.get_xheight.__dict__.__setitem__('stypy_call_varargs', varargs)
        Fonts.get_xheight.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Fonts.get_xheight.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Fonts.get_xheight', ['font', 'fontsize', 'dpi'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_xheight', localization, ['font', 'fontsize', 'dpi'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_xheight(...)' code ##################

        unicode_78357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, (-1)), 'unicode', u'\n        Get the xheight for the given *font* and *fontsize*.\n        ')
        
        # Call to NotImplementedError(...): (line 507)
        # Processing the call keyword arguments (line 507)
        kwargs_78359 = {}
        # Getting the type of 'NotImplementedError' (line 507)
        NotImplementedError_78358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 14), 'NotImplementedError', False)
        # Calling NotImplementedError(args, kwargs) (line 507)
        NotImplementedError_call_result_78360 = invoke(stypy.reporting.localization.Localization(__file__, 507, 14), NotImplementedError_78358, *[], **kwargs_78359)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 507, 8), NotImplementedError_call_result_78360, 'raise parameter', BaseException)
        
        # ################# End of 'get_xheight(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_xheight' in the type store
        # Getting the type of 'stypy_return_type' (line 503)
        stypy_return_type_78361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78361)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_xheight'
        return stypy_return_type_78361


    @norecursion
    def get_underline_thickness(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_underline_thickness'
        module_type_store = module_type_store.open_function_context('get_underline_thickness', 509, 4, False)
        # Assigning a type to the variable 'self' (line 510)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 510, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Fonts.get_underline_thickness.__dict__.__setitem__('stypy_localization', localization)
        Fonts.get_underline_thickness.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Fonts.get_underline_thickness.__dict__.__setitem__('stypy_type_store', module_type_store)
        Fonts.get_underline_thickness.__dict__.__setitem__('stypy_function_name', 'Fonts.get_underline_thickness')
        Fonts.get_underline_thickness.__dict__.__setitem__('stypy_param_names_list', ['font', 'fontsize', 'dpi'])
        Fonts.get_underline_thickness.__dict__.__setitem__('stypy_varargs_param_name', None)
        Fonts.get_underline_thickness.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Fonts.get_underline_thickness.__dict__.__setitem__('stypy_call_defaults', defaults)
        Fonts.get_underline_thickness.__dict__.__setitem__('stypy_call_varargs', varargs)
        Fonts.get_underline_thickness.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Fonts.get_underline_thickness.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Fonts.get_underline_thickness', ['font', 'fontsize', 'dpi'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_underline_thickness', localization, ['font', 'fontsize', 'dpi'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_underline_thickness(...)' code ##################

        unicode_78362 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, (-1)), 'unicode', u'\n        Get the line thickness that matches the given font.  Used as a\n        base unit for drawing lines such as in a fraction or radical.\n        ')
        
        # Call to NotImplementedError(...): (line 514)
        # Processing the call keyword arguments (line 514)
        kwargs_78364 = {}
        # Getting the type of 'NotImplementedError' (line 514)
        NotImplementedError_78363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 14), 'NotImplementedError', False)
        # Calling NotImplementedError(args, kwargs) (line 514)
        NotImplementedError_call_result_78365 = invoke(stypy.reporting.localization.Localization(__file__, 514, 14), NotImplementedError_78363, *[], **kwargs_78364)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 514, 8), NotImplementedError_call_result_78365, 'raise parameter', BaseException)
        
        # ################# End of 'get_underline_thickness(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_underline_thickness' in the type store
        # Getting the type of 'stypy_return_type' (line 509)
        stypy_return_type_78366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78366)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_underline_thickness'
        return stypy_return_type_78366


    @norecursion
    def get_used_characters(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_used_characters'
        module_type_store = module_type_store.open_function_context('get_used_characters', 516, 4, False)
        # Assigning a type to the variable 'self' (line 517)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 517, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Fonts.get_used_characters.__dict__.__setitem__('stypy_localization', localization)
        Fonts.get_used_characters.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Fonts.get_used_characters.__dict__.__setitem__('stypy_type_store', module_type_store)
        Fonts.get_used_characters.__dict__.__setitem__('stypy_function_name', 'Fonts.get_used_characters')
        Fonts.get_used_characters.__dict__.__setitem__('stypy_param_names_list', [])
        Fonts.get_used_characters.__dict__.__setitem__('stypy_varargs_param_name', None)
        Fonts.get_used_characters.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Fonts.get_used_characters.__dict__.__setitem__('stypy_call_defaults', defaults)
        Fonts.get_used_characters.__dict__.__setitem__('stypy_call_varargs', varargs)
        Fonts.get_used_characters.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Fonts.get_used_characters.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Fonts.get_used_characters', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_used_characters', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_used_characters(...)' code ##################

        unicode_78367 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 521, (-1)), 'unicode', u'\n        Get the set of characters that were used in the math\n        expression.  Used by backends that need to subset fonts so\n        they know which glyphs to include.\n        ')
        # Getting the type of 'self' (line 522)
        self_78368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 15), 'self')
        # Obtaining the member 'used_characters' of a type (line 522)
        used_characters_78369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 522, 15), self_78368, 'used_characters')
        # Assigning a type to the variable 'stypy_return_type' (line 522)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 522, 8), 'stypy_return_type', used_characters_78369)
        
        # ################# End of 'get_used_characters(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_used_characters' in the type store
        # Getting the type of 'stypy_return_type' (line 516)
        stypy_return_type_78370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78370)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_used_characters'
        return stypy_return_type_78370


    @norecursion
    def get_results(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_results'
        module_type_store = module_type_store.open_function_context('get_results', 524, 4, False)
        # Assigning a type to the variable 'self' (line 525)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 525, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Fonts.get_results.__dict__.__setitem__('stypy_localization', localization)
        Fonts.get_results.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Fonts.get_results.__dict__.__setitem__('stypy_type_store', module_type_store)
        Fonts.get_results.__dict__.__setitem__('stypy_function_name', 'Fonts.get_results')
        Fonts.get_results.__dict__.__setitem__('stypy_param_names_list', ['box'])
        Fonts.get_results.__dict__.__setitem__('stypy_varargs_param_name', None)
        Fonts.get_results.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Fonts.get_results.__dict__.__setitem__('stypy_call_defaults', defaults)
        Fonts.get_results.__dict__.__setitem__('stypy_call_varargs', varargs)
        Fonts.get_results.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Fonts.get_results.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Fonts.get_results', ['box'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_results', localization, ['box'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_results(...)' code ##################

        unicode_78371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 528, (-1)), 'unicode', u'\n        Get the data needed by the backend to render the math\n        expression.  The return value is backend-specific.\n        ')
        
        # Assigning a Call to a Name (line 529):
        
        # Assigning a Call to a Name (line 529):
        
        # Call to get_results(...): (line 529)
        # Processing the call arguments (line 529)
        # Getting the type of 'box' (line 529)
        box_78375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 51), 'box', False)
        
        # Call to get_used_characters(...): (line 529)
        # Processing the call keyword arguments (line 529)
        kwargs_78378 = {}
        # Getting the type of 'self' (line 529)
        self_78376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 56), 'self', False)
        # Obtaining the member 'get_used_characters' of a type (line 529)
        get_used_characters_78377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 56), self_78376, 'get_used_characters')
        # Calling get_used_characters(args, kwargs) (line 529)
        get_used_characters_call_result_78379 = invoke(stypy.reporting.localization.Localization(__file__, 529, 56), get_used_characters_78377, *[], **kwargs_78378)
        
        # Processing the call keyword arguments (line 529)
        kwargs_78380 = {}
        # Getting the type of 'self' (line 529)
        self_78372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 17), 'self', False)
        # Obtaining the member 'mathtext_backend' of a type (line 529)
        mathtext_backend_78373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 17), self_78372, 'mathtext_backend')
        # Obtaining the member 'get_results' of a type (line 529)
        get_results_78374 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 17), mathtext_backend_78373, 'get_results')
        # Calling get_results(args, kwargs) (line 529)
        get_results_call_result_78381 = invoke(stypy.reporting.localization.Localization(__file__, 529, 17), get_results_78374, *[box_78375, get_used_characters_call_result_78379], **kwargs_78380)
        
        # Assigning a type to the variable 'result' (line 529)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 529, 8), 'result', get_results_call_result_78381)
        
        # Call to destroy(...): (line 530)
        # Processing the call keyword arguments (line 530)
        kwargs_78384 = {}
        # Getting the type of 'self' (line 530)
        self_78382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 8), 'self', False)
        # Obtaining the member 'destroy' of a type (line 530)
        destroy_78383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 8), self_78382, 'destroy')
        # Calling destroy(args, kwargs) (line 530)
        destroy_call_result_78385 = invoke(stypy.reporting.localization.Localization(__file__, 530, 8), destroy_78383, *[], **kwargs_78384)
        
        # Getting the type of 'result' (line 531)
        result_78386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 15), 'result')
        # Assigning a type to the variable 'stypy_return_type' (line 531)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 531, 8), 'stypy_return_type', result_78386)
        
        # ################# End of 'get_results(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_results' in the type store
        # Getting the type of 'stypy_return_type' (line 524)
        stypy_return_type_78387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78387)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_results'
        return stypy_return_type_78387


    @norecursion
    def get_sized_alternatives_for_symbol(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_sized_alternatives_for_symbol'
        module_type_store = module_type_store.open_function_context('get_sized_alternatives_for_symbol', 533, 4, False)
        # Assigning a type to the variable 'self' (line 534)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 534, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Fonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_localization', localization)
        Fonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Fonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_type_store', module_type_store)
        Fonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_function_name', 'Fonts.get_sized_alternatives_for_symbol')
        Fonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_param_names_list', ['fontname', 'sym'])
        Fonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_varargs_param_name', None)
        Fonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Fonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_call_defaults', defaults)
        Fonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_call_varargs', varargs)
        Fonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Fonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Fonts.get_sized_alternatives_for_symbol', ['fontname', 'sym'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_sized_alternatives_for_symbol', localization, ['fontname', 'sym'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_sized_alternatives_for_symbol(...)' code ##################

        unicode_78388 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, (-1)), 'unicode', u'\n        Override if your font provides multiple sizes of the same\n        symbol.  Should return a list of symbols matching *sym* in\n        various sizes.  The expression renderer will select the most\n        appropriate size for a given situation from this list.\n        ')
        
        # Obtaining an instance of the builtin type 'list' (line 540)
        list_78389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 540)
        # Adding element type (line 540)
        
        # Obtaining an instance of the builtin type 'tuple' (line 540)
        tuple_78390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 540)
        # Adding element type (line 540)
        # Getting the type of 'fontname' (line 540)
        fontname_78391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 17), 'fontname')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 540, 17), tuple_78390, fontname_78391)
        # Adding element type (line 540)
        # Getting the type of 'sym' (line 540)
        sym_78392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 27), 'sym')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 540, 17), tuple_78390, sym_78392)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 540, 15), list_78389, tuple_78390)
        
        # Assigning a type to the variable 'stypy_return_type' (line 540)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 540, 8), 'stypy_return_type', list_78389)
        
        # ################# End of 'get_sized_alternatives_for_symbol(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_sized_alternatives_for_symbol' in the type store
        # Getting the type of 'stypy_return_type' (line 533)
        stypy_return_type_78393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78393)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_sized_alternatives_for_symbol'
        return stypy_return_type_78393


# Assigning a type to the variable 'Fonts' (line 384)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 384, 0), 'Fonts', Fonts)
# Declaration of the 'TruetypeFonts' class
# Getting the type of 'Fonts' (line 542)
Fonts_78394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 20), 'Fonts')

class TruetypeFonts(Fonts_78394, ):
    unicode_78395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 546, (-1)), 'unicode', u'\n    A generic base class for all font setups that use Truetype fonts\n    (through FT2Font).\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 547, 4, False)
        # Assigning a type to the variable 'self' (line 548)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 548, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TruetypeFonts.__init__', ['default_font_prop', 'mathtext_backend'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['default_font_prop', 'mathtext_backend'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 548)
        # Processing the call arguments (line 548)
        # Getting the type of 'self' (line 548)
        self_78398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 23), 'self', False)
        # Getting the type of 'default_font_prop' (line 548)
        default_font_prop_78399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 29), 'default_font_prop', False)
        # Getting the type of 'mathtext_backend' (line 548)
        mathtext_backend_78400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 48), 'mathtext_backend', False)
        # Processing the call keyword arguments (line 548)
        kwargs_78401 = {}
        # Getting the type of 'Fonts' (line 548)
        Fonts_78396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 8), 'Fonts', False)
        # Obtaining the member '__init__' of a type (line 548)
        init___78397 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 548, 8), Fonts_78396, '__init__')
        # Calling __init__(args, kwargs) (line 548)
        init___call_result_78402 = invoke(stypy.reporting.localization.Localization(__file__, 548, 8), init___78397, *[self_78398, default_font_prop_78399, mathtext_backend_78400], **kwargs_78401)
        
        
        # Assigning a Dict to a Attribute (line 549):
        
        # Assigning a Dict to a Attribute (line 549):
        
        # Obtaining an instance of the builtin type 'dict' (line 549)
        dict_78403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 22), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 549)
        
        # Getting the type of 'self' (line 549)
        self_78404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 8), 'self')
        # Setting the type of the member 'glyphd' of a type (line 549)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 8), self_78404, 'glyphd', dict_78403)
        
        # Assigning a Dict to a Attribute (line 550):
        
        # Assigning a Dict to a Attribute (line 550):
        
        # Obtaining an instance of the builtin type 'dict' (line 550)
        dict_78405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 22), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 550)
        
        # Getting the type of 'self' (line 550)
        self_78406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 8), 'self')
        # Setting the type of the member '_fonts' of a type (line 550)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 8), self_78406, '_fonts', dict_78405)
        
        # Assigning a Call to a Name (line 552):
        
        # Assigning a Call to a Name (line 552):
        
        # Call to findfont(...): (line 552)
        # Processing the call arguments (line 552)
        # Getting the type of 'default_font_prop' (line 552)
        default_font_prop_78408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 28), 'default_font_prop', False)
        # Processing the call keyword arguments (line 552)
        kwargs_78409 = {}
        # Getting the type of 'findfont' (line 552)
        findfont_78407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 19), 'findfont', False)
        # Calling findfont(args, kwargs) (line 552)
        findfont_call_result_78410 = invoke(stypy.reporting.localization.Localization(__file__, 552, 19), findfont_78407, *[default_font_prop_78408], **kwargs_78409)
        
        # Assigning a type to the variable 'filename' (line 552)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'filename', findfont_call_result_78410)
        
        # Assigning a Call to a Name (line 553):
        
        # Assigning a Call to a Name (line 553):
        
        # Call to get_font(...): (line 553)
        # Processing the call arguments (line 553)
        # Getting the type of 'filename' (line 553)
        filename_78412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 32), 'filename', False)
        # Processing the call keyword arguments (line 553)
        kwargs_78413 = {}
        # Getting the type of 'get_font' (line 553)
        get_font_78411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 23), 'get_font', False)
        # Calling get_font(args, kwargs) (line 553)
        get_font_call_result_78414 = invoke(stypy.reporting.localization.Localization(__file__, 553, 23), get_font_78411, *[filename_78412], **kwargs_78413)
        
        # Assigning a type to the variable 'default_font' (line 553)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 553, 8), 'default_font', get_font_call_result_78414)
        
        # Assigning a Name to a Subscript (line 554):
        
        # Assigning a Name to a Subscript (line 554):
        # Getting the type of 'default_font' (line 554)
        default_font_78415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 33), 'default_font')
        # Getting the type of 'self' (line 554)
        self_78416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 8), 'self')
        # Obtaining the member '_fonts' of a type (line 554)
        _fonts_78417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 554, 8), self_78416, '_fonts')
        unicode_78418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 554, 20), 'unicode', u'default')
        # Storing an element on a container (line 554)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 554, 8), _fonts_78417, (unicode_78418, default_font_78415))
        
        # Assigning a Name to a Subscript (line 555):
        
        # Assigning a Name to a Subscript (line 555):
        # Getting the type of 'default_font' (line 555)
        default_font_78419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 33), 'default_font')
        # Getting the type of 'self' (line 555)
        self_78420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 8), 'self')
        # Obtaining the member '_fonts' of a type (line 555)
        _fonts_78421 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 8), self_78420, '_fonts')
        unicode_78422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 555, 20), 'unicode', u'regular')
        # Storing an element on a container (line 555)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 555, 8), _fonts_78421, (unicode_78422, default_font_78419))
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def destroy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'destroy'
        module_type_store = module_type_store.open_function_context('destroy', 557, 4, False)
        # Assigning a type to the variable 'self' (line 558)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 558, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TruetypeFonts.destroy.__dict__.__setitem__('stypy_localization', localization)
        TruetypeFonts.destroy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TruetypeFonts.destroy.__dict__.__setitem__('stypy_type_store', module_type_store)
        TruetypeFonts.destroy.__dict__.__setitem__('stypy_function_name', 'TruetypeFonts.destroy')
        TruetypeFonts.destroy.__dict__.__setitem__('stypy_param_names_list', [])
        TruetypeFonts.destroy.__dict__.__setitem__('stypy_varargs_param_name', None)
        TruetypeFonts.destroy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TruetypeFonts.destroy.__dict__.__setitem__('stypy_call_defaults', defaults)
        TruetypeFonts.destroy.__dict__.__setitem__('stypy_call_varargs', varargs)
        TruetypeFonts.destroy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TruetypeFonts.destroy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TruetypeFonts.destroy', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'destroy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'destroy(...)' code ##################

        
        # Assigning a Name to a Attribute (line 558):
        
        # Assigning a Name to a Attribute (line 558):
        # Getting the type of 'None' (line 558)
        None_78423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 22), 'None')
        # Getting the type of 'self' (line 558)
        self_78424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 8), 'self')
        # Setting the type of the member 'glyphd' of a type (line 558)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 8), self_78424, 'glyphd', None_78423)
        
        # Call to destroy(...): (line 559)
        # Processing the call arguments (line 559)
        # Getting the type of 'self' (line 559)
        self_78427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 22), 'self', False)
        # Processing the call keyword arguments (line 559)
        kwargs_78428 = {}
        # Getting the type of 'Fonts' (line 559)
        Fonts_78425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 8), 'Fonts', False)
        # Obtaining the member 'destroy' of a type (line 559)
        destroy_78426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 8), Fonts_78425, 'destroy')
        # Calling destroy(args, kwargs) (line 559)
        destroy_call_result_78429 = invoke(stypy.reporting.localization.Localization(__file__, 559, 8), destroy_78426, *[self_78427], **kwargs_78428)
        
        
        # ################# End of 'destroy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'destroy' in the type store
        # Getting the type of 'stypy_return_type' (line 557)
        stypy_return_type_78430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78430)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'destroy'
        return stypy_return_type_78430


    @norecursion
    def _get_font(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_font'
        module_type_store = module_type_store.open_function_context('_get_font', 561, 4, False)
        # Assigning a type to the variable 'self' (line 562)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 562, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TruetypeFonts._get_font.__dict__.__setitem__('stypy_localization', localization)
        TruetypeFonts._get_font.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TruetypeFonts._get_font.__dict__.__setitem__('stypy_type_store', module_type_store)
        TruetypeFonts._get_font.__dict__.__setitem__('stypy_function_name', 'TruetypeFonts._get_font')
        TruetypeFonts._get_font.__dict__.__setitem__('stypy_param_names_list', ['font'])
        TruetypeFonts._get_font.__dict__.__setitem__('stypy_varargs_param_name', None)
        TruetypeFonts._get_font.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TruetypeFonts._get_font.__dict__.__setitem__('stypy_call_defaults', defaults)
        TruetypeFonts._get_font.__dict__.__setitem__('stypy_call_varargs', varargs)
        TruetypeFonts._get_font.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TruetypeFonts._get_font.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TruetypeFonts._get_font', ['font'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_font', localization, ['font'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_font(...)' code ##################

        
        
        # Getting the type of 'font' (line 562)
        font_78431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 11), 'font')
        # Getting the type of 'self' (line 562)
        self_78432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 19), 'self')
        # Obtaining the member 'fontmap' of a type (line 562)
        fontmap_78433 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 19), self_78432, 'fontmap')
        # Applying the binary operator 'in' (line 562)
        result_contains_78434 = python_operator(stypy.reporting.localization.Localization(__file__, 562, 11), 'in', font_78431, fontmap_78433)
        
        # Testing the type of an if condition (line 562)
        if_condition_78435 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 562, 8), result_contains_78434)
        # Assigning a type to the variable 'if_condition_78435' (line 562)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 562, 8), 'if_condition_78435', if_condition_78435)
        # SSA begins for if statement (line 562)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 563):
        
        # Assigning a Subscript to a Name (line 563):
        
        # Obtaining the type of the subscript
        # Getting the type of 'font' (line 563)
        font_78436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 36), 'font')
        # Getting the type of 'self' (line 563)
        self_78437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 23), 'self')
        # Obtaining the member 'fontmap' of a type (line 563)
        fontmap_78438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 563, 23), self_78437, 'fontmap')
        # Obtaining the member '__getitem__' of a type (line 563)
        getitem___78439 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 563, 23), fontmap_78438, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 563)
        subscript_call_result_78440 = invoke(stypy.reporting.localization.Localization(__file__, 563, 23), getitem___78439, font_78436)
        
        # Assigning a type to the variable 'basename' (line 563)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 563, 12), 'basename', subscript_call_result_78440)
        # SSA branch for the else part of an if statement (line 562)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 565):
        
        # Assigning a Name to a Name (line 565):
        # Getting the type of 'font' (line 565)
        font_78441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 23), 'font')
        # Assigning a type to the variable 'basename' (line 565)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 565, 12), 'basename', font_78441)
        # SSA join for if statement (line 562)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 566):
        
        # Assigning a Call to a Name (line 566):
        
        # Call to get(...): (line 566)
        # Processing the call arguments (line 566)
        # Getting the type of 'basename' (line 566)
        basename_78445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 38), 'basename', False)
        # Processing the call keyword arguments (line 566)
        kwargs_78446 = {}
        # Getting the type of 'self' (line 566)
        self_78442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 22), 'self', False)
        # Obtaining the member '_fonts' of a type (line 566)
        _fonts_78443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 22), self_78442, '_fonts')
        # Obtaining the member 'get' of a type (line 566)
        get_78444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 22), _fonts_78443, 'get')
        # Calling get(args, kwargs) (line 566)
        get_call_result_78447 = invoke(stypy.reporting.localization.Localization(__file__, 566, 22), get_78444, *[basename_78445], **kwargs_78446)
        
        # Assigning a type to the variable 'cached_font' (line 566)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 566, 8), 'cached_font', get_call_result_78447)
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'cached_font' (line 567)
        cached_font_78448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 11), 'cached_font')
        # Getting the type of 'None' (line 567)
        None_78449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 26), 'None')
        # Applying the binary operator 'is' (line 567)
        result_is__78450 = python_operator(stypy.reporting.localization.Localization(__file__, 567, 11), 'is', cached_font_78448, None_78449)
        
        
        # Call to exists(...): (line 567)
        # Processing the call arguments (line 567)
        # Getting the type of 'basename' (line 567)
        basename_78454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 50), 'basename', False)
        # Processing the call keyword arguments (line 567)
        kwargs_78455 = {}
        # Getting the type of 'os' (line 567)
        os_78451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 35), 'os', False)
        # Obtaining the member 'path' of a type (line 567)
        path_78452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 35), os_78451, 'path')
        # Obtaining the member 'exists' of a type (line 567)
        exists_78453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 35), path_78452, 'exists')
        # Calling exists(args, kwargs) (line 567)
        exists_call_result_78456 = invoke(stypy.reporting.localization.Localization(__file__, 567, 35), exists_78453, *[basename_78454], **kwargs_78455)
        
        # Applying the binary operator 'and' (line 567)
        result_and_keyword_78457 = python_operator(stypy.reporting.localization.Localization(__file__, 567, 11), 'and', result_is__78450, exists_call_result_78456)
        
        # Testing the type of an if condition (line 567)
        if_condition_78458 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 567, 8), result_and_keyword_78457)
        # Assigning a type to the variable 'if_condition_78458' (line 567)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 567, 8), 'if_condition_78458', if_condition_78458)
        # SSA begins for if statement (line 567)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 568):
        
        # Assigning a Call to a Name (line 568):
        
        # Call to get_font(...): (line 568)
        # Processing the call arguments (line 568)
        # Getting the type of 'basename' (line 568)
        basename_78460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 35), 'basename', False)
        # Processing the call keyword arguments (line 568)
        kwargs_78461 = {}
        # Getting the type of 'get_font' (line 568)
        get_font_78459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 26), 'get_font', False)
        # Calling get_font(args, kwargs) (line 568)
        get_font_call_result_78462 = invoke(stypy.reporting.localization.Localization(__file__, 568, 26), get_font_78459, *[basename_78460], **kwargs_78461)
        
        # Assigning a type to the variable 'cached_font' (line 568)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 568, 12), 'cached_font', get_font_call_result_78462)
        
        # Assigning a Name to a Subscript (line 569):
        
        # Assigning a Name to a Subscript (line 569):
        # Getting the type of 'cached_font' (line 569)
        cached_font_78463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 36), 'cached_font')
        # Getting the type of 'self' (line 569)
        self_78464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 12), 'self')
        # Obtaining the member '_fonts' of a type (line 569)
        _fonts_78465 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 569, 12), self_78464, '_fonts')
        # Getting the type of 'basename' (line 569)
        basename_78466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 24), 'basename')
        # Storing an element on a container (line 569)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 12), _fonts_78465, (basename_78466, cached_font_78463))
        
        # Assigning a Name to a Subscript (line 570):
        
        # Assigning a Name to a Subscript (line 570):
        # Getting the type of 'cached_font' (line 570)
        cached_font_78467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 55), 'cached_font')
        # Getting the type of 'self' (line 570)
        self_78468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 12), 'self')
        # Obtaining the member '_fonts' of a type (line 570)
        _fonts_78469 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 12), self_78468, '_fonts')
        # Getting the type of 'cached_font' (line 570)
        cached_font_78470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 24), 'cached_font')
        # Obtaining the member 'postscript_name' of a type (line 570)
        postscript_name_78471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 24), cached_font_78470, 'postscript_name')
        # Storing an element on a container (line 570)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 12), _fonts_78469, (postscript_name_78471, cached_font_78467))
        
        # Assigning a Name to a Subscript (line 571):
        
        # Assigning a Name to a Subscript (line 571):
        # Getting the type of 'cached_font' (line 571)
        cached_font_78472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 63), 'cached_font')
        # Getting the type of 'self' (line 571)
        self_78473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 12), 'self')
        # Obtaining the member '_fonts' of a type (line 571)
        _fonts_78474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 571, 12), self_78473, '_fonts')
        
        # Call to lower(...): (line 571)
        # Processing the call keyword arguments (line 571)
        kwargs_78478 = {}
        # Getting the type of 'cached_font' (line 571)
        cached_font_78475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 24), 'cached_font', False)
        # Obtaining the member 'postscript_name' of a type (line 571)
        postscript_name_78476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 571, 24), cached_font_78475, 'postscript_name')
        # Obtaining the member 'lower' of a type (line 571)
        lower_78477 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 571, 24), postscript_name_78476, 'lower')
        # Calling lower(args, kwargs) (line 571)
        lower_call_result_78479 = invoke(stypy.reporting.localization.Localization(__file__, 571, 24), lower_78477, *[], **kwargs_78478)
        
        # Storing an element on a container (line 571)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 12), _fonts_78474, (lower_call_result_78479, cached_font_78472))
        # SSA join for if statement (line 567)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'cached_font' (line 572)
        cached_font_78480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 15), 'cached_font')
        # Assigning a type to the variable 'stypy_return_type' (line 572)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 572, 8), 'stypy_return_type', cached_font_78480)
        
        # ################# End of '_get_font(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_font' in the type store
        # Getting the type of 'stypy_return_type' (line 561)
        stypy_return_type_78481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78481)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_font'
        return stypy_return_type_78481


    @norecursion
    def _get_offset(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_offset'
        module_type_store = module_type_store.open_function_context('_get_offset', 574, 4, False)
        # Assigning a type to the variable 'self' (line 575)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TruetypeFonts._get_offset.__dict__.__setitem__('stypy_localization', localization)
        TruetypeFonts._get_offset.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TruetypeFonts._get_offset.__dict__.__setitem__('stypy_type_store', module_type_store)
        TruetypeFonts._get_offset.__dict__.__setitem__('stypy_function_name', 'TruetypeFonts._get_offset')
        TruetypeFonts._get_offset.__dict__.__setitem__('stypy_param_names_list', ['font', 'glyph', 'fontsize', 'dpi'])
        TruetypeFonts._get_offset.__dict__.__setitem__('stypy_varargs_param_name', None)
        TruetypeFonts._get_offset.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TruetypeFonts._get_offset.__dict__.__setitem__('stypy_call_defaults', defaults)
        TruetypeFonts._get_offset.__dict__.__setitem__('stypy_call_varargs', varargs)
        TruetypeFonts._get_offset.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TruetypeFonts._get_offset.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TruetypeFonts._get_offset', ['font', 'glyph', 'fontsize', 'dpi'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_offset', localization, ['font', 'glyph', 'fontsize', 'dpi'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_offset(...)' code ##################

        
        
        # Getting the type of 'font' (line 575)
        font_78482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 11), 'font')
        # Obtaining the member 'postscript_name' of a type (line 575)
        postscript_name_78483 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 575, 11), font_78482, 'postscript_name')
        unicode_78484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 35), 'unicode', u'Cmex10')
        # Applying the binary operator '==' (line 575)
        result_eq_78485 = python_operator(stypy.reporting.localization.Localization(__file__, 575, 11), '==', postscript_name_78483, unicode_78484)
        
        # Testing the type of an if condition (line 575)
        if_condition_78486 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 575, 8), result_eq_78485)
        # Assigning a type to the variable 'if_condition_78486' (line 575)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 8), 'if_condition_78486', if_condition_78486)
        # SSA begins for if statement (line 575)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Getting the type of 'glyph' (line 576)
        glyph_78487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 21), 'glyph')
        # Obtaining the member 'height' of a type (line 576)
        height_78488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 576, 21), glyph_78487, 'height')
        float_78489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 34), 'float')
        # Applying the binary operator 'div' (line 576)
        result_div_78490 = python_operator(stypy.reporting.localization.Localization(__file__, 576, 21), 'div', height_78488, float_78489)
        
        float_78491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 39), 'float')
        # Applying the binary operator 'div' (line 576)
        result_div_78492 = python_operator(stypy.reporting.localization.Localization(__file__, 576, 38), 'div', result_div_78490, float_78491)
        
        # Getting the type of 'fontsize' (line 576)
        fontsize_78493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 47), 'fontsize')
        float_78494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 56), 'float')
        # Applying the binary operator 'div' (line 576)
        result_div_78495 = python_operator(stypy.reporting.localization.Localization(__file__, 576, 47), 'div', fontsize_78493, float_78494)
        
        # Getting the type of 'dpi' (line 576)
        dpi_78496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 62), 'dpi')
        # Applying the binary operator '*' (line 576)
        result_mul_78497 = python_operator(stypy.reporting.localization.Localization(__file__, 576, 60), '*', result_div_78495, dpi_78496)
        
        float_78498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 66), 'float')
        # Applying the binary operator 'div' (line 576)
        result_div_78499 = python_operator(stypy.reporting.localization.Localization(__file__, 576, 65), 'div', result_mul_78497, float_78498)
        
        # Applying the binary operator '+' (line 576)
        result_add_78500 = python_operator(stypy.reporting.localization.Localization(__file__, 576, 20), '+', result_div_78492, result_div_78499)
        
        # Assigning a type to the variable 'stypy_return_type' (line 576)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 576, 12), 'stypy_return_type', result_add_78500)
        # SSA join for if statement (line 575)
        module_type_store = module_type_store.join_ssa_context()
        
        float_78501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 577, 15), 'float')
        # Assigning a type to the variable 'stypy_return_type' (line 577)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 577, 8), 'stypy_return_type', float_78501)
        
        # ################# End of '_get_offset(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_offset' in the type store
        # Getting the type of 'stypy_return_type' (line 574)
        stypy_return_type_78502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78502)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_offset'
        return stypy_return_type_78502


    @norecursion
    def _get_info(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'True' (line 579)
        True_78503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 71), 'True')
        defaults = [True_78503]
        # Create a new context for function '_get_info'
        module_type_store = module_type_store.open_function_context('_get_info', 579, 4, False)
        # Assigning a type to the variable 'self' (line 580)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 580, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TruetypeFonts._get_info.__dict__.__setitem__('stypy_localization', localization)
        TruetypeFonts._get_info.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TruetypeFonts._get_info.__dict__.__setitem__('stypy_type_store', module_type_store)
        TruetypeFonts._get_info.__dict__.__setitem__('stypy_function_name', 'TruetypeFonts._get_info')
        TruetypeFonts._get_info.__dict__.__setitem__('stypy_param_names_list', ['fontname', 'font_class', 'sym', 'fontsize', 'dpi', 'math'])
        TruetypeFonts._get_info.__dict__.__setitem__('stypy_varargs_param_name', None)
        TruetypeFonts._get_info.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TruetypeFonts._get_info.__dict__.__setitem__('stypy_call_defaults', defaults)
        TruetypeFonts._get_info.__dict__.__setitem__('stypy_call_varargs', varargs)
        TruetypeFonts._get_info.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TruetypeFonts._get_info.__dict__.__setitem__('stypy_declared_arg_number', 7)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TruetypeFonts._get_info', ['fontname', 'font_class', 'sym', 'fontsize', 'dpi', 'math'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_info', localization, ['fontname', 'font_class', 'sym', 'fontsize', 'dpi', 'math'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_info(...)' code ##################

        
        # Assigning a Tuple to a Name (line 580):
        
        # Assigning a Tuple to a Name (line 580):
        
        # Obtaining an instance of the builtin type 'tuple' (line 580)
        tuple_78504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 580, 14), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 580)
        # Adding element type (line 580)
        # Getting the type of 'fontname' (line 580)
        fontname_78505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 14), 'fontname')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 14), tuple_78504, fontname_78505)
        # Adding element type (line 580)
        # Getting the type of 'font_class' (line 580)
        font_class_78506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 24), 'font_class')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 14), tuple_78504, font_class_78506)
        # Adding element type (line 580)
        # Getting the type of 'sym' (line 580)
        sym_78507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 36), 'sym')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 14), tuple_78504, sym_78507)
        # Adding element type (line 580)
        # Getting the type of 'fontsize' (line 580)
        fontsize_78508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 41), 'fontsize')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 14), tuple_78504, fontsize_78508)
        # Adding element type (line 580)
        # Getting the type of 'dpi' (line 580)
        dpi_78509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 51), 'dpi')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 14), tuple_78504, dpi_78509)
        
        # Assigning a type to the variable 'key' (line 580)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 580, 8), 'key', tuple_78504)
        
        # Assigning a Call to a Name (line 581):
        
        # Assigning a Call to a Name (line 581):
        
        # Call to get(...): (line 581)
        # Processing the call arguments (line 581)
        # Getting the type of 'key' (line 581)
        key_78513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 32), 'key', False)
        # Processing the call keyword arguments (line 581)
        kwargs_78514 = {}
        # Getting the type of 'self' (line 581)
        self_78510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 16), 'self', False)
        # Obtaining the member 'glyphd' of a type (line 581)
        glyphd_78511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 16), self_78510, 'glyphd')
        # Obtaining the member 'get' of a type (line 581)
        get_78512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 16), glyphd_78511, 'get')
        # Calling get(args, kwargs) (line 581)
        get_call_result_78515 = invoke(stypy.reporting.localization.Localization(__file__, 581, 16), get_78512, *[key_78513], **kwargs_78514)
        
        # Assigning a type to the variable 'bunch' (line 581)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 581, 8), 'bunch', get_call_result_78515)
        
        # Type idiom detected: calculating its left and rigth part (line 582)
        # Getting the type of 'bunch' (line 582)
        bunch_78516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 8), 'bunch')
        # Getting the type of 'None' (line 582)
        None_78517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 24), 'None')
        
        (may_be_78518, more_types_in_union_78519) = may_not_be_none(bunch_78516, None_78517)

        if may_be_78518:

            if more_types_in_union_78519:
                # Runtime conditional SSA (line 582)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Getting the type of 'bunch' (line 583)
            bunch_78520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 19), 'bunch')
            # Assigning a type to the variable 'stypy_return_type' (line 583)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 583, 12), 'stypy_return_type', bunch_78520)

            if more_types_in_union_78519:
                # SSA join for if statement (line 582)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Tuple (line 585):
        
        # Assigning a Call to a Name:
        
        # Call to _get_glyph(...): (line 586)
        # Processing the call arguments (line 586)
        # Getting the type of 'fontname' (line 586)
        fontname_78523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 28), 'fontname', False)
        # Getting the type of 'font_class' (line 586)
        font_class_78524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 38), 'font_class', False)
        # Getting the type of 'sym' (line 586)
        sym_78525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 50), 'sym', False)
        # Getting the type of 'fontsize' (line 586)
        fontsize_78526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 55), 'fontsize', False)
        # Getting the type of 'math' (line 586)
        math_78527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 65), 'math', False)
        # Processing the call keyword arguments (line 586)
        kwargs_78528 = {}
        # Getting the type of 'self' (line 586)
        self_78521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 12), 'self', False)
        # Obtaining the member '_get_glyph' of a type (line 586)
        _get_glyph_78522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 586, 12), self_78521, '_get_glyph')
        # Calling _get_glyph(args, kwargs) (line 586)
        _get_glyph_call_result_78529 = invoke(stypy.reporting.localization.Localization(__file__, 586, 12), _get_glyph_78522, *[fontname_78523, font_class_78524, sym_78525, fontsize_78526, math_78527], **kwargs_78528)
        
        # Assigning a type to the variable 'call_assignment_77278' (line 585)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'call_assignment_77278', _get_glyph_call_result_78529)
        
        # Assigning a Call to a Name (line 585):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_78532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 8), 'int')
        # Processing the call keyword arguments
        kwargs_78533 = {}
        # Getting the type of 'call_assignment_77278' (line 585)
        call_assignment_77278_78530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'call_assignment_77278', False)
        # Obtaining the member '__getitem__' of a type (line 585)
        getitem___78531 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 8), call_assignment_77278_78530, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_78534 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___78531, *[int_78532], **kwargs_78533)
        
        # Assigning a type to the variable 'call_assignment_77279' (line 585)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'call_assignment_77279', getitem___call_result_78534)
        
        # Assigning a Name to a Name (line 585):
        # Getting the type of 'call_assignment_77279' (line 585)
        call_assignment_77279_78535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'call_assignment_77279')
        # Assigning a type to the variable 'font' (line 585)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'font', call_assignment_77279_78535)
        
        # Assigning a Call to a Name (line 585):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_78538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 8), 'int')
        # Processing the call keyword arguments
        kwargs_78539 = {}
        # Getting the type of 'call_assignment_77278' (line 585)
        call_assignment_77278_78536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'call_assignment_77278', False)
        # Obtaining the member '__getitem__' of a type (line 585)
        getitem___78537 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 8), call_assignment_77278_78536, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_78540 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___78537, *[int_78538], **kwargs_78539)
        
        # Assigning a type to the variable 'call_assignment_77280' (line 585)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'call_assignment_77280', getitem___call_result_78540)
        
        # Assigning a Name to a Name (line 585):
        # Getting the type of 'call_assignment_77280' (line 585)
        call_assignment_77280_78541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'call_assignment_77280')
        # Assigning a type to the variable 'num' (line 585)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 585, 14), 'num', call_assignment_77280_78541)
        
        # Assigning a Call to a Name (line 585):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_78544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 8), 'int')
        # Processing the call keyword arguments
        kwargs_78545 = {}
        # Getting the type of 'call_assignment_77278' (line 585)
        call_assignment_77278_78542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'call_assignment_77278', False)
        # Obtaining the member '__getitem__' of a type (line 585)
        getitem___78543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 8), call_assignment_77278_78542, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_78546 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___78543, *[int_78544], **kwargs_78545)
        
        # Assigning a type to the variable 'call_assignment_77281' (line 585)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'call_assignment_77281', getitem___call_result_78546)
        
        # Assigning a Name to a Name (line 585):
        # Getting the type of 'call_assignment_77281' (line 585)
        call_assignment_77281_78547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'call_assignment_77281')
        # Assigning a type to the variable 'symbol_name' (line 585)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 585, 19), 'symbol_name', call_assignment_77281_78547)
        
        # Assigning a Call to a Name (line 585):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_78550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 8), 'int')
        # Processing the call keyword arguments
        kwargs_78551 = {}
        # Getting the type of 'call_assignment_77278' (line 585)
        call_assignment_77278_78548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'call_assignment_77278', False)
        # Obtaining the member '__getitem__' of a type (line 585)
        getitem___78549 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 8), call_assignment_77278_78548, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_78552 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___78549, *[int_78550], **kwargs_78551)
        
        # Assigning a type to the variable 'call_assignment_77282' (line 585)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'call_assignment_77282', getitem___call_result_78552)
        
        # Assigning a Name to a Name (line 585):
        # Getting the type of 'call_assignment_77282' (line 585)
        call_assignment_77282_78553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'call_assignment_77282')
        # Assigning a type to the variable 'fontsize' (line 585)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 585, 32), 'fontsize', call_assignment_77282_78553)
        
        # Assigning a Call to a Name (line 585):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_78556 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 8), 'int')
        # Processing the call keyword arguments
        kwargs_78557 = {}
        # Getting the type of 'call_assignment_77278' (line 585)
        call_assignment_77278_78554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'call_assignment_77278', False)
        # Obtaining the member '__getitem__' of a type (line 585)
        getitem___78555 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 8), call_assignment_77278_78554, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_78558 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___78555, *[int_78556], **kwargs_78557)
        
        # Assigning a type to the variable 'call_assignment_77283' (line 585)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'call_assignment_77283', getitem___call_result_78558)
        
        # Assigning a Name to a Name (line 585):
        # Getting the type of 'call_assignment_77283' (line 585)
        call_assignment_77283_78559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'call_assignment_77283')
        # Assigning a type to the variable 'slanted' (line 585)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 585, 42), 'slanted', call_assignment_77283_78559)
        
        # Call to set_size(...): (line 588)
        # Processing the call arguments (line 588)
        # Getting the type of 'fontsize' (line 588)
        fontsize_78562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 22), 'fontsize', False)
        # Getting the type of 'dpi' (line 588)
        dpi_78563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 32), 'dpi', False)
        # Processing the call keyword arguments (line 588)
        kwargs_78564 = {}
        # Getting the type of 'font' (line 588)
        font_78560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 8), 'font', False)
        # Obtaining the member 'set_size' of a type (line 588)
        set_size_78561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 588, 8), font_78560, 'set_size')
        # Calling set_size(args, kwargs) (line 588)
        set_size_call_result_78565 = invoke(stypy.reporting.localization.Localization(__file__, 588, 8), set_size_78561, *[fontsize_78562, dpi_78563], **kwargs_78564)
        
        
        # Assigning a Call to a Name (line 589):
        
        # Assigning a Call to a Name (line 589):
        
        # Call to load_char(...): (line 589)
        # Processing the call arguments (line 589)
        # Getting the type of 'num' (line 590)
        num_78568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 12), 'num', False)
        # Processing the call keyword arguments (line 589)
        
        # Call to get_hinting_type(...): (line 591)
        # Processing the call keyword arguments (line 591)
        kwargs_78572 = {}
        # Getting the type of 'self' (line 591)
        self_78569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 18), 'self', False)
        # Obtaining the member 'mathtext_backend' of a type (line 591)
        mathtext_backend_78570 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 591, 18), self_78569, 'mathtext_backend')
        # Obtaining the member 'get_hinting_type' of a type (line 591)
        get_hinting_type_78571 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 591, 18), mathtext_backend_78570, 'get_hinting_type')
        # Calling get_hinting_type(args, kwargs) (line 591)
        get_hinting_type_call_result_78573 = invoke(stypy.reporting.localization.Localization(__file__, 591, 18), get_hinting_type_78571, *[], **kwargs_78572)
        
        keyword_78574 = get_hinting_type_call_result_78573
        kwargs_78575 = {'flags': keyword_78574}
        # Getting the type of 'font' (line 589)
        font_78566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 16), 'font', False)
        # Obtaining the member 'load_char' of a type (line 589)
        load_char_78567 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 589, 16), font_78566, 'load_char')
        # Calling load_char(args, kwargs) (line 589)
        load_char_call_result_78576 = invoke(stypy.reporting.localization.Localization(__file__, 589, 16), load_char_78567, *[num_78568], **kwargs_78575)
        
        # Assigning a type to the variable 'glyph' (line 589)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 589, 8), 'glyph', load_char_call_result_78576)
        
        # Assigning a ListComp to a Tuple (line 593):
        
        # Assigning a Subscript to a Name (line 593):
        
        # Obtaining the type of the subscript
        int_78577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 8), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'glyph' (line 593)
        glyph_78581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 54), 'glyph')
        # Obtaining the member 'bbox' of a type (line 593)
        bbox_78582 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 593, 54), glyph_78581, 'bbox')
        comprehension_78583 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 593, 34), bbox_78582)
        # Assigning a type to the variable 'val' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 34), 'val', comprehension_78583)
        # Getting the type of 'val' (line 593)
        val_78578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 34), 'val')
        float_78579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 38), 'float')
        # Applying the binary operator 'div' (line 593)
        result_div_78580 = python_operator(stypy.reporting.localization.Localization(__file__, 593, 34), 'div', val_78578, float_78579)
        
        list_78584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 34), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 593, 34), list_78584, result_div_78580)
        # Obtaining the member '__getitem__' of a type (line 593)
        getitem___78585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 593, 8), list_78584, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 593)
        subscript_call_result_78586 = invoke(stypy.reporting.localization.Localization(__file__, 593, 8), getitem___78585, int_78577)
        
        # Assigning a type to the variable 'tuple_var_assignment_77284' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'tuple_var_assignment_77284', subscript_call_result_78586)
        
        # Assigning a Subscript to a Name (line 593):
        
        # Obtaining the type of the subscript
        int_78587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 8), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'glyph' (line 593)
        glyph_78591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 54), 'glyph')
        # Obtaining the member 'bbox' of a type (line 593)
        bbox_78592 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 593, 54), glyph_78591, 'bbox')
        comprehension_78593 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 593, 34), bbox_78592)
        # Assigning a type to the variable 'val' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 34), 'val', comprehension_78593)
        # Getting the type of 'val' (line 593)
        val_78588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 34), 'val')
        float_78589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 38), 'float')
        # Applying the binary operator 'div' (line 593)
        result_div_78590 = python_operator(stypy.reporting.localization.Localization(__file__, 593, 34), 'div', val_78588, float_78589)
        
        list_78594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 34), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 593, 34), list_78594, result_div_78590)
        # Obtaining the member '__getitem__' of a type (line 593)
        getitem___78595 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 593, 8), list_78594, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 593)
        subscript_call_result_78596 = invoke(stypy.reporting.localization.Localization(__file__, 593, 8), getitem___78595, int_78587)
        
        # Assigning a type to the variable 'tuple_var_assignment_77285' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'tuple_var_assignment_77285', subscript_call_result_78596)
        
        # Assigning a Subscript to a Name (line 593):
        
        # Obtaining the type of the subscript
        int_78597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 8), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'glyph' (line 593)
        glyph_78601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 54), 'glyph')
        # Obtaining the member 'bbox' of a type (line 593)
        bbox_78602 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 593, 54), glyph_78601, 'bbox')
        comprehension_78603 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 593, 34), bbox_78602)
        # Assigning a type to the variable 'val' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 34), 'val', comprehension_78603)
        # Getting the type of 'val' (line 593)
        val_78598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 34), 'val')
        float_78599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 38), 'float')
        # Applying the binary operator 'div' (line 593)
        result_div_78600 = python_operator(stypy.reporting.localization.Localization(__file__, 593, 34), 'div', val_78598, float_78599)
        
        list_78604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 34), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 593, 34), list_78604, result_div_78600)
        # Obtaining the member '__getitem__' of a type (line 593)
        getitem___78605 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 593, 8), list_78604, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 593)
        subscript_call_result_78606 = invoke(stypy.reporting.localization.Localization(__file__, 593, 8), getitem___78605, int_78597)
        
        # Assigning a type to the variable 'tuple_var_assignment_77286' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'tuple_var_assignment_77286', subscript_call_result_78606)
        
        # Assigning a Subscript to a Name (line 593):
        
        # Obtaining the type of the subscript
        int_78607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 8), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'glyph' (line 593)
        glyph_78611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 54), 'glyph')
        # Obtaining the member 'bbox' of a type (line 593)
        bbox_78612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 593, 54), glyph_78611, 'bbox')
        comprehension_78613 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 593, 34), bbox_78612)
        # Assigning a type to the variable 'val' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 34), 'val', comprehension_78613)
        # Getting the type of 'val' (line 593)
        val_78608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 34), 'val')
        float_78609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 38), 'float')
        # Applying the binary operator 'div' (line 593)
        result_div_78610 = python_operator(stypy.reporting.localization.Localization(__file__, 593, 34), 'div', val_78608, float_78609)
        
        list_78614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 34), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 593, 34), list_78614, result_div_78610)
        # Obtaining the member '__getitem__' of a type (line 593)
        getitem___78615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 593, 8), list_78614, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 593)
        subscript_call_result_78616 = invoke(stypy.reporting.localization.Localization(__file__, 593, 8), getitem___78615, int_78607)
        
        # Assigning a type to the variable 'tuple_var_assignment_77287' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'tuple_var_assignment_77287', subscript_call_result_78616)
        
        # Assigning a Name to a Name (line 593):
        # Getting the type of 'tuple_var_assignment_77284' (line 593)
        tuple_var_assignment_77284_78617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'tuple_var_assignment_77284')
        # Assigning a type to the variable 'xmin' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'xmin', tuple_var_assignment_77284_78617)
        
        # Assigning a Name to a Name (line 593):
        # Getting the type of 'tuple_var_assignment_77285' (line 593)
        tuple_var_assignment_77285_78618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'tuple_var_assignment_77285')
        # Assigning a type to the variable 'ymin' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 14), 'ymin', tuple_var_assignment_77285_78618)
        
        # Assigning a Name to a Name (line 593):
        # Getting the type of 'tuple_var_assignment_77286' (line 593)
        tuple_var_assignment_77286_78619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'tuple_var_assignment_77286')
        # Assigning a type to the variable 'xmax' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 20), 'xmax', tuple_var_assignment_77286_78619)
        
        # Assigning a Name to a Name (line 593):
        # Getting the type of 'tuple_var_assignment_77287' (line 593)
        tuple_var_assignment_77287_78620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'tuple_var_assignment_77287')
        # Assigning a type to the variable 'ymax' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 26), 'ymax', tuple_var_assignment_77287_78620)
        
        # Assigning a Call to a Name (line 594):
        
        # Assigning a Call to a Name (line 594):
        
        # Call to _get_offset(...): (line 594)
        # Processing the call arguments (line 594)
        # Getting the type of 'font' (line 594)
        font_78623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 34), 'font', False)
        # Getting the type of 'glyph' (line 594)
        glyph_78624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 40), 'glyph', False)
        # Getting the type of 'fontsize' (line 594)
        fontsize_78625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 47), 'fontsize', False)
        # Getting the type of 'dpi' (line 594)
        dpi_78626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 57), 'dpi', False)
        # Processing the call keyword arguments (line 594)
        kwargs_78627 = {}
        # Getting the type of 'self' (line 594)
        self_78621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 17), 'self', False)
        # Obtaining the member '_get_offset' of a type (line 594)
        _get_offset_78622 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 594, 17), self_78621, '_get_offset')
        # Calling _get_offset(args, kwargs) (line 594)
        _get_offset_call_result_78628 = invoke(stypy.reporting.localization.Localization(__file__, 594, 17), _get_offset_78622, *[font_78623, glyph_78624, fontsize_78625, dpi_78626], **kwargs_78627)
        
        # Assigning a type to the variable 'offset' (line 594)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 594, 8), 'offset', _get_offset_call_result_78628)
        
        # Assigning a Call to a Name (line 595):
        
        # Assigning a Call to a Name (line 595):
        
        # Call to Bunch(...): (line 595)
        # Processing the call keyword arguments (line 595)
        # Getting the type of 'glyph' (line 596)
        glyph_78630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 22), 'glyph', False)
        # Obtaining the member 'linearHoriAdvance' of a type (line 596)
        linearHoriAdvance_78631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 22), glyph_78630, 'linearHoriAdvance')
        float_78632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 46), 'float')
        # Applying the binary operator 'div' (line 596)
        result_div_78633 = python_operator(stypy.reporting.localization.Localization(__file__, 596, 22), 'div', linearHoriAdvance_78631, float_78632)
        
        keyword_78634 = result_div_78633
        # Getting the type of 'glyph' (line 597)
        glyph_78635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 22), 'glyph', False)
        # Obtaining the member 'height' of a type (line 597)
        height_78636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 597, 22), glyph_78635, 'height')
        float_78637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 35), 'float')
        # Applying the binary operator 'div' (line 597)
        result_div_78638 = python_operator(stypy.reporting.localization.Localization(__file__, 597, 22), 'div', height_78636, float_78637)
        
        keyword_78639 = result_div_78638
        # Getting the type of 'glyph' (line 598)
        glyph_78640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 22), 'glyph', False)
        # Obtaining the member 'width' of a type (line 598)
        width_78641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 598, 22), glyph_78640, 'width')
        float_78642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 34), 'float')
        # Applying the binary operator 'div' (line 598)
        result_div_78643 = python_operator(stypy.reporting.localization.Localization(__file__, 598, 22), 'div', width_78641, float_78642)
        
        keyword_78644 = result_div_78643
        # Getting the type of 'xmin' (line 599)
        xmin_78645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 22), 'xmin', False)
        keyword_78646 = xmin_78645
        # Getting the type of 'xmax' (line 600)
        xmax_78647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 22), 'xmax', False)
        keyword_78648 = xmax_78647
        # Getting the type of 'ymin' (line 601)
        ymin_78649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 22), 'ymin', False)
        # Getting the type of 'offset' (line 601)
        offset_78650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 27), 'offset', False)
        # Applying the binary operator '+' (line 601)
        result_add_78651 = python_operator(stypy.reporting.localization.Localization(__file__, 601, 22), '+', ymin_78649, offset_78650)
        
        keyword_78652 = result_add_78651
        # Getting the type of 'ymax' (line 602)
        ymax_78653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 22), 'ymax', False)
        # Getting the type of 'offset' (line 602)
        offset_78654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 27), 'offset', False)
        # Applying the binary operator '+' (line 602)
        result_add_78655 = python_operator(stypy.reporting.localization.Localization(__file__, 602, 22), '+', ymax_78653, offset_78654)
        
        keyword_78656 = result_add_78655
        # Getting the type of 'glyph' (line 604)
        glyph_78657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 22), 'glyph', False)
        # Obtaining the member 'horiBearingY' of a type (line 604)
        horiBearingY_78658 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 22), glyph_78657, 'horiBearingY')
        float_78659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 41), 'float')
        # Applying the binary operator 'div' (line 604)
        result_div_78660 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 22), 'div', horiBearingY_78658, float_78659)
        
        # Getting the type of 'offset' (line 604)
        offset_78661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 48), 'offset', False)
        # Applying the binary operator '+' (line 604)
        result_add_78662 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 22), '+', result_div_78660, offset_78661)
        
        keyword_78663 = result_add_78662
        # Getting the type of 'slanted' (line 605)
        slanted_78664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 22), 'slanted', False)
        keyword_78665 = slanted_78664
        kwargs_78666 = {'advance': keyword_78634, 'iceberg': keyword_78663, 'ymax': keyword_78656, 'height': keyword_78639, 'width': keyword_78644, 'slanted': keyword_78665, 'xmax': keyword_78648, 'xmin': keyword_78646, 'ymin': keyword_78652}
        # Getting the type of 'Bunch' (line 595)
        Bunch_78629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 18), 'Bunch', False)
        # Calling Bunch(args, kwargs) (line 595)
        Bunch_call_result_78667 = invoke(stypy.reporting.localization.Localization(__file__, 595, 18), Bunch_78629, *[], **kwargs_78666)
        
        # Assigning a type to the variable 'metrics' (line 595)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 595, 8), 'metrics', Bunch_call_result_78667)
        
        # Multiple assignment of 2 elements.
        
        # Assigning a Call to a Subscript (line 608):
        
        # Call to Bunch(...): (line 608)
        # Processing the call keyword arguments (line 608)
        # Getting the type of 'font' (line 609)
        font_78669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 30), 'font', False)
        keyword_78670 = font_78669
        # Getting the type of 'fontsize' (line 610)
        fontsize_78671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 30), 'fontsize', False)
        keyword_78672 = fontsize_78671
        # Getting the type of 'font' (line 611)
        font_78673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 30), 'font', False)
        # Obtaining the member 'postscript_name' of a type (line 611)
        postscript_name_78674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 611, 30), font_78673, 'postscript_name')
        keyword_78675 = postscript_name_78674
        # Getting the type of 'metrics' (line 612)
        metrics_78676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 30), 'metrics', False)
        keyword_78677 = metrics_78676
        # Getting the type of 'symbol_name' (line 613)
        symbol_name_78678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 30), 'symbol_name', False)
        keyword_78679 = symbol_name_78678
        # Getting the type of 'num' (line 614)
        num_78680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 30), 'num', False)
        keyword_78681 = num_78680
        # Getting the type of 'glyph' (line 615)
        glyph_78682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 30), 'glyph', False)
        keyword_78683 = glyph_78682
        # Getting the type of 'offset' (line 616)
        offset_78684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 30), 'offset', False)
        keyword_78685 = offset_78684
        kwargs_78686 = {'symbol_name': keyword_78679, 'metrics': keyword_78677, 'num': keyword_78681, 'postscript_name': keyword_78675, 'offset': keyword_78685, 'fontsize': keyword_78672, 'font': keyword_78670, 'glyph': keyword_78683}
        # Getting the type of 'Bunch' (line 608)
        Bunch_78668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 36), 'Bunch', False)
        # Calling Bunch(args, kwargs) (line 608)
        Bunch_call_result_78687 = invoke(stypy.reporting.localization.Localization(__file__, 608, 36), Bunch_78668, *[], **kwargs_78686)
        
        # Getting the type of 'self' (line 608)
        self_78688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 17), 'self')
        # Obtaining the member 'glyphd' of a type (line 608)
        glyphd_78689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 608, 17), self_78688, 'glyphd')
        # Getting the type of 'key' (line 608)
        key_78690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 29), 'key')
        # Storing an element on a container (line 608)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 608, 17), glyphd_78689, (key_78690, Bunch_call_result_78687))
        
        # Assigning a Subscript to a Name (line 608):
        
        # Obtaining the type of the subscript
        # Getting the type of 'key' (line 608)
        key_78691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 29), 'key')
        # Getting the type of 'self' (line 608)
        self_78692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 17), 'self')
        # Obtaining the member 'glyphd' of a type (line 608)
        glyphd_78693 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 608, 17), self_78692, 'glyphd')
        # Obtaining the member '__getitem__' of a type (line 608)
        getitem___78694 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 608, 17), glyphd_78693, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 608)
        subscript_call_result_78695 = invoke(stypy.reporting.localization.Localization(__file__, 608, 17), getitem___78694, key_78691)
        
        # Assigning a type to the variable 'result' (line 608)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 608, 8), 'result', subscript_call_result_78695)
        # Getting the type of 'result' (line 618)
        result_78696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 15), 'result')
        # Assigning a type to the variable 'stypy_return_type' (line 618)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 618, 8), 'stypy_return_type', result_78696)
        
        # ################# End of '_get_info(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_info' in the type store
        # Getting the type of 'stypy_return_type' (line 579)
        stypy_return_type_78697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78697)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_info'
        return stypy_return_type_78697


    @norecursion
    def get_xheight(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_xheight'
        module_type_store = module_type_store.open_function_context('get_xheight', 620, 4, False)
        # Assigning a type to the variable 'self' (line 621)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 621, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TruetypeFonts.get_xheight.__dict__.__setitem__('stypy_localization', localization)
        TruetypeFonts.get_xheight.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TruetypeFonts.get_xheight.__dict__.__setitem__('stypy_type_store', module_type_store)
        TruetypeFonts.get_xheight.__dict__.__setitem__('stypy_function_name', 'TruetypeFonts.get_xheight')
        TruetypeFonts.get_xheight.__dict__.__setitem__('stypy_param_names_list', ['fontname', 'fontsize', 'dpi'])
        TruetypeFonts.get_xheight.__dict__.__setitem__('stypy_varargs_param_name', None)
        TruetypeFonts.get_xheight.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TruetypeFonts.get_xheight.__dict__.__setitem__('stypy_call_defaults', defaults)
        TruetypeFonts.get_xheight.__dict__.__setitem__('stypy_call_varargs', varargs)
        TruetypeFonts.get_xheight.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TruetypeFonts.get_xheight.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TruetypeFonts.get_xheight', ['fontname', 'fontsize', 'dpi'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_xheight', localization, ['fontname', 'fontsize', 'dpi'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_xheight(...)' code ##################

        
        # Assigning a Call to a Name (line 621):
        
        # Assigning a Call to a Name (line 621):
        
        # Call to _get_font(...): (line 621)
        # Processing the call arguments (line 621)
        # Getting the type of 'fontname' (line 621)
        fontname_78700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 30), 'fontname', False)
        # Processing the call keyword arguments (line 621)
        kwargs_78701 = {}
        # Getting the type of 'self' (line 621)
        self_78698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 15), 'self', False)
        # Obtaining the member '_get_font' of a type (line 621)
        _get_font_78699 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 15), self_78698, '_get_font')
        # Calling _get_font(args, kwargs) (line 621)
        _get_font_call_result_78702 = invoke(stypy.reporting.localization.Localization(__file__, 621, 15), _get_font_78699, *[fontname_78700], **kwargs_78701)
        
        # Assigning a type to the variable 'font' (line 621)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'font', _get_font_call_result_78702)
        
        # Call to set_size(...): (line 622)
        # Processing the call arguments (line 622)
        # Getting the type of 'fontsize' (line 622)
        fontsize_78705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 22), 'fontsize', False)
        # Getting the type of 'dpi' (line 622)
        dpi_78706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 32), 'dpi', False)
        # Processing the call keyword arguments (line 622)
        kwargs_78707 = {}
        # Getting the type of 'font' (line 622)
        font_78703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 8), 'font', False)
        # Obtaining the member 'set_size' of a type (line 622)
        set_size_78704 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 622, 8), font_78703, 'set_size')
        # Calling set_size(args, kwargs) (line 622)
        set_size_call_result_78708 = invoke(stypy.reporting.localization.Localization(__file__, 622, 8), set_size_78704, *[fontsize_78705, dpi_78706], **kwargs_78707)
        
        
        # Assigning a Call to a Name (line 623):
        
        # Assigning a Call to a Name (line 623):
        
        # Call to get_sfnt_table(...): (line 623)
        # Processing the call arguments (line 623)
        unicode_78711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 623, 35), 'unicode', u'pclt')
        # Processing the call keyword arguments (line 623)
        kwargs_78712 = {}
        # Getting the type of 'font' (line 623)
        font_78709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 15), 'font', False)
        # Obtaining the member 'get_sfnt_table' of a type (line 623)
        get_sfnt_table_78710 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 623, 15), font_78709, 'get_sfnt_table')
        # Calling get_sfnt_table(args, kwargs) (line 623)
        get_sfnt_table_call_result_78713 = invoke(stypy.reporting.localization.Localization(__file__, 623, 15), get_sfnt_table_78710, *[unicode_78711], **kwargs_78712)
        
        # Assigning a type to the variable 'pclt' (line 623)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'pclt', get_sfnt_table_call_result_78713)
        
        # Type idiom detected: calculating its left and rigth part (line 624)
        # Getting the type of 'pclt' (line 624)
        pclt_78714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 11), 'pclt')
        # Getting the type of 'None' (line 624)
        None_78715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 19), 'None')
        
        (may_be_78716, more_types_in_union_78717) = may_be_none(pclt_78714, None_78715)

        if may_be_78716:

            if more_types_in_union_78717:
                # Runtime conditional SSA (line 624)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 626):
            
            # Assigning a Call to a Name (line 626):
            
            # Call to get_metrics(...): (line 626)
            # Processing the call arguments (line 626)
            # Getting the type of 'fontname' (line 626)
            fontname_78720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 39), 'fontname', False)
            
            # Obtaining the type of the subscript
            unicode_78721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 58), 'unicode', u'mathtext.default')
            # Getting the type of 'rcParams' (line 626)
            rcParams_78722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 49), 'rcParams', False)
            # Obtaining the member '__getitem__' of a type (line 626)
            getitem___78723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 626, 49), rcParams_78722, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 626)
            subscript_call_result_78724 = invoke(stypy.reporting.localization.Localization(__file__, 626, 49), getitem___78723, unicode_78721)
            
            unicode_78725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 79), 'unicode', u'x')
            # Getting the type of 'fontsize' (line 626)
            fontsize_78726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 84), 'fontsize', False)
            # Getting the type of 'dpi' (line 626)
            dpi_78727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 94), 'dpi', False)
            # Processing the call keyword arguments (line 626)
            kwargs_78728 = {}
            # Getting the type of 'self' (line 626)
            self_78718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 22), 'self', False)
            # Obtaining the member 'get_metrics' of a type (line 626)
            get_metrics_78719 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 626, 22), self_78718, 'get_metrics')
            # Calling get_metrics(args, kwargs) (line 626)
            get_metrics_call_result_78729 = invoke(stypy.reporting.localization.Localization(__file__, 626, 22), get_metrics_78719, *[fontname_78720, subscript_call_result_78724, unicode_78725, fontsize_78726, dpi_78727], **kwargs_78728)
            
            # Assigning a type to the variable 'metrics' (line 626)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 626, 12), 'metrics', get_metrics_call_result_78729)
            # Getting the type of 'metrics' (line 627)
            metrics_78730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 19), 'metrics')
            # Obtaining the member 'iceberg' of a type (line 627)
            iceberg_78731 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 627, 19), metrics_78730, 'iceberg')
            # Assigning a type to the variable 'stypy_return_type' (line 627)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 627, 12), 'stypy_return_type', iceberg_78731)

            if more_types_in_union_78717:
                # SSA join for if statement (line 624)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a BinOp to a Name (line 628):
        
        # Assigning a BinOp to a Name (line 628):
        
        # Obtaining the type of the subscript
        unicode_78732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 24), 'unicode', u'xHeight')
        # Getting the type of 'pclt' (line 628)
        pclt_78733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 19), 'pclt')
        # Obtaining the member '__getitem__' of a type (line 628)
        getitem___78734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 19), pclt_78733, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 628)
        subscript_call_result_78735 = invoke(stypy.reporting.localization.Localization(__file__, 628, 19), getitem___78734, unicode_78732)
        
        float_78736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 37), 'float')
        # Applying the binary operator 'div' (line 628)
        result_div_78737 = python_operator(stypy.reporting.localization.Localization(__file__, 628, 19), 'div', subscript_call_result_78735, float_78736)
        
        # Getting the type of 'fontsize' (line 628)
        fontsize_78738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 46), 'fontsize')
        float_78739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 57), 'float')
        # Applying the binary operator 'div' (line 628)
        result_div_78740 = python_operator(stypy.reporting.localization.Localization(__file__, 628, 46), 'div', fontsize_78738, float_78739)
        
        # Applying the binary operator '*' (line 628)
        result_mul_78741 = python_operator(stypy.reporting.localization.Localization(__file__, 628, 18), '*', result_div_78737, result_div_78740)
        
        # Getting the type of 'dpi' (line 628)
        dpi_78742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 66), 'dpi')
        float_78743 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 72), 'float')
        # Applying the binary operator 'div' (line 628)
        result_div_78744 = python_operator(stypy.reporting.localization.Localization(__file__, 628, 66), 'div', dpi_78742, float_78743)
        
        # Applying the binary operator '*' (line 628)
        result_mul_78745 = python_operator(stypy.reporting.localization.Localization(__file__, 628, 63), '*', result_mul_78741, result_div_78744)
        
        # Assigning a type to the variable 'xHeight' (line 628)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 628, 8), 'xHeight', result_mul_78745)
        # Getting the type of 'xHeight' (line 629)
        xHeight_78746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 15), 'xHeight')
        # Assigning a type to the variable 'stypy_return_type' (line 629)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 629, 8), 'stypy_return_type', xHeight_78746)
        
        # ################# End of 'get_xheight(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_xheight' in the type store
        # Getting the type of 'stypy_return_type' (line 620)
        stypy_return_type_78747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78747)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_xheight'
        return stypy_return_type_78747


    @norecursion
    def get_underline_thickness(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_underline_thickness'
        module_type_store = module_type_store.open_function_context('get_underline_thickness', 631, 4, False)
        # Assigning a type to the variable 'self' (line 632)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 632, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TruetypeFonts.get_underline_thickness.__dict__.__setitem__('stypy_localization', localization)
        TruetypeFonts.get_underline_thickness.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TruetypeFonts.get_underline_thickness.__dict__.__setitem__('stypy_type_store', module_type_store)
        TruetypeFonts.get_underline_thickness.__dict__.__setitem__('stypy_function_name', 'TruetypeFonts.get_underline_thickness')
        TruetypeFonts.get_underline_thickness.__dict__.__setitem__('stypy_param_names_list', ['font', 'fontsize', 'dpi'])
        TruetypeFonts.get_underline_thickness.__dict__.__setitem__('stypy_varargs_param_name', None)
        TruetypeFonts.get_underline_thickness.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TruetypeFonts.get_underline_thickness.__dict__.__setitem__('stypy_call_defaults', defaults)
        TruetypeFonts.get_underline_thickness.__dict__.__setitem__('stypy_call_varargs', varargs)
        TruetypeFonts.get_underline_thickness.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TruetypeFonts.get_underline_thickness.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TruetypeFonts.get_underline_thickness', ['font', 'fontsize', 'dpi'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_underline_thickness', localization, ['font', 'fontsize', 'dpi'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_underline_thickness(...)' code ##################

        float_78748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 635, 17), 'float')
        float_78749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 635, 24), 'float')
        # Applying the binary operator 'div' (line 635)
        result_div_78750 = python_operator(stypy.reporting.localization.Localization(__file__, 635, 17), 'div', float_78748, float_78749)
        
        # Getting the type of 'fontsize' (line 635)
        fontsize_78751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 32), 'fontsize')
        # Applying the binary operator '*' (line 635)
        result_mul_78752 = python_operator(stypy.reporting.localization.Localization(__file__, 635, 16), '*', result_div_78750, fontsize_78751)
        
        # Getting the type of 'dpi' (line 635)
        dpi_78753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 43), 'dpi')
        # Applying the binary operator '*' (line 635)
        result_mul_78754 = python_operator(stypy.reporting.localization.Localization(__file__, 635, 41), '*', result_mul_78752, dpi_78753)
        
        float_78755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 635, 50), 'float')
        # Applying the binary operator 'div' (line 635)
        result_div_78756 = python_operator(stypy.reporting.localization.Localization(__file__, 635, 15), 'div', result_mul_78754, float_78755)
        
        # Assigning a type to the variable 'stypy_return_type' (line 635)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 635, 8), 'stypy_return_type', result_div_78756)
        
        # ################# End of 'get_underline_thickness(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_underline_thickness' in the type store
        # Getting the type of 'stypy_return_type' (line 631)
        stypy_return_type_78757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78757)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_underline_thickness'
        return stypy_return_type_78757


    @norecursion
    def get_kern(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_kern'
        module_type_store = module_type_store.open_function_context('get_kern', 637, 4, False)
        # Assigning a type to the variable 'self' (line 638)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 638, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TruetypeFonts.get_kern.__dict__.__setitem__('stypy_localization', localization)
        TruetypeFonts.get_kern.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TruetypeFonts.get_kern.__dict__.__setitem__('stypy_type_store', module_type_store)
        TruetypeFonts.get_kern.__dict__.__setitem__('stypy_function_name', 'TruetypeFonts.get_kern')
        TruetypeFonts.get_kern.__dict__.__setitem__('stypy_param_names_list', ['font1', 'fontclass1', 'sym1', 'fontsize1', 'font2', 'fontclass2', 'sym2', 'fontsize2', 'dpi'])
        TruetypeFonts.get_kern.__dict__.__setitem__('stypy_varargs_param_name', None)
        TruetypeFonts.get_kern.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TruetypeFonts.get_kern.__dict__.__setitem__('stypy_call_defaults', defaults)
        TruetypeFonts.get_kern.__dict__.__setitem__('stypy_call_varargs', varargs)
        TruetypeFonts.get_kern.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TruetypeFonts.get_kern.__dict__.__setitem__('stypy_declared_arg_number', 10)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TruetypeFonts.get_kern', ['font1', 'fontclass1', 'sym1', 'fontsize1', 'font2', 'fontclass2', 'sym2', 'fontsize2', 'dpi'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_kern', localization, ['font1', 'fontclass1', 'sym1', 'fontsize1', 'font2', 'fontclass2', 'sym2', 'fontsize2', 'dpi'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_kern(...)' code ##################

        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'font1' (line 639)
        font1_78758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 11), 'font1')
        # Getting the type of 'font2' (line 639)
        font2_78759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 20), 'font2')
        # Applying the binary operator '==' (line 639)
        result_eq_78760 = python_operator(stypy.reporting.localization.Localization(__file__, 639, 11), '==', font1_78758, font2_78759)
        
        
        # Getting the type of 'fontsize1' (line 639)
        fontsize1_78761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 30), 'fontsize1')
        # Getting the type of 'fontsize2' (line 639)
        fontsize2_78762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 43), 'fontsize2')
        # Applying the binary operator '==' (line 639)
        result_eq_78763 = python_operator(stypy.reporting.localization.Localization(__file__, 639, 30), '==', fontsize1_78761, fontsize2_78762)
        
        # Applying the binary operator 'and' (line 639)
        result_and_keyword_78764 = python_operator(stypy.reporting.localization.Localization(__file__, 639, 11), 'and', result_eq_78760, result_eq_78763)
        
        # Testing the type of an if condition (line 639)
        if_condition_78765 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 639, 8), result_and_keyword_78764)
        # Assigning a type to the variable 'if_condition_78765' (line 639)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 639, 8), 'if_condition_78765', if_condition_78765)
        # SSA begins for if statement (line 639)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 640):
        
        # Assigning a Call to a Name (line 640):
        
        # Call to _get_info(...): (line 640)
        # Processing the call arguments (line 640)
        # Getting the type of 'font1' (line 640)
        font1_78768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 35), 'font1', False)
        # Getting the type of 'fontclass1' (line 640)
        fontclass1_78769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 42), 'fontclass1', False)
        # Getting the type of 'sym1' (line 640)
        sym1_78770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 54), 'sym1', False)
        # Getting the type of 'fontsize1' (line 640)
        fontsize1_78771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 60), 'fontsize1', False)
        # Getting the type of 'dpi' (line 640)
        dpi_78772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 71), 'dpi', False)
        # Processing the call keyword arguments (line 640)
        kwargs_78773 = {}
        # Getting the type of 'self' (line 640)
        self_78766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 20), 'self', False)
        # Obtaining the member '_get_info' of a type (line 640)
        _get_info_78767 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 640, 20), self_78766, '_get_info')
        # Calling _get_info(args, kwargs) (line 640)
        _get_info_call_result_78774 = invoke(stypy.reporting.localization.Localization(__file__, 640, 20), _get_info_78767, *[font1_78768, fontclass1_78769, sym1_78770, fontsize1_78771, dpi_78772], **kwargs_78773)
        
        # Assigning a type to the variable 'info1' (line 640)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 640, 12), 'info1', _get_info_call_result_78774)
        
        # Assigning a Call to a Name (line 641):
        
        # Assigning a Call to a Name (line 641):
        
        # Call to _get_info(...): (line 641)
        # Processing the call arguments (line 641)
        # Getting the type of 'font2' (line 641)
        font2_78777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 35), 'font2', False)
        # Getting the type of 'fontclass2' (line 641)
        fontclass2_78778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 42), 'fontclass2', False)
        # Getting the type of 'sym2' (line 641)
        sym2_78779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 54), 'sym2', False)
        # Getting the type of 'fontsize2' (line 641)
        fontsize2_78780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 60), 'fontsize2', False)
        # Getting the type of 'dpi' (line 641)
        dpi_78781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 71), 'dpi', False)
        # Processing the call keyword arguments (line 641)
        kwargs_78782 = {}
        # Getting the type of 'self' (line 641)
        self_78775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 20), 'self', False)
        # Obtaining the member '_get_info' of a type (line 641)
        _get_info_78776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 641, 20), self_78775, '_get_info')
        # Calling _get_info(args, kwargs) (line 641)
        _get_info_call_result_78783 = invoke(stypy.reporting.localization.Localization(__file__, 641, 20), _get_info_78776, *[font2_78777, fontclass2_78778, sym2_78779, fontsize2_78780, dpi_78781], **kwargs_78782)
        
        # Assigning a type to the variable 'info2' (line 641)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 641, 12), 'info2', _get_info_call_result_78783)
        
        # Assigning a Attribute to a Name (line 642):
        
        # Assigning a Attribute to a Name (line 642):
        # Getting the type of 'info1' (line 642)
        info1_78784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 19), 'info1')
        # Obtaining the member 'font' of a type (line 642)
        font_78785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 642, 19), info1_78784, 'font')
        # Assigning a type to the variable 'font' (line 642)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 642, 12), 'font', font_78785)
        
        # Call to get_kerning(...): (line 643)
        # Processing the call arguments (line 643)
        # Getting the type of 'info1' (line 643)
        info1_78788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 36), 'info1', False)
        # Obtaining the member 'num' of a type (line 643)
        num_78789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 643, 36), info1_78788, 'num')
        # Getting the type of 'info2' (line 643)
        info2_78790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 47), 'info2', False)
        # Obtaining the member 'num' of a type (line 643)
        num_78791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 643, 47), info2_78790, 'num')
        # Getting the type of 'KERNING_DEFAULT' (line 643)
        KERNING_DEFAULT_78792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 58), 'KERNING_DEFAULT', False)
        # Processing the call keyword arguments (line 643)
        kwargs_78793 = {}
        # Getting the type of 'font' (line 643)
        font_78786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 19), 'font', False)
        # Obtaining the member 'get_kerning' of a type (line 643)
        get_kerning_78787 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 643, 19), font_78786, 'get_kerning')
        # Calling get_kerning(args, kwargs) (line 643)
        get_kerning_call_result_78794 = invoke(stypy.reporting.localization.Localization(__file__, 643, 19), get_kerning_78787, *[num_78789, num_78791, KERNING_DEFAULT_78792], **kwargs_78793)
        
        float_78795 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 77), 'float')
        # Applying the binary operator 'div' (line 643)
        result_div_78796 = python_operator(stypy.reporting.localization.Localization(__file__, 643, 19), 'div', get_kerning_call_result_78794, float_78795)
        
        # Assigning a type to the variable 'stypy_return_type' (line 643)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 643, 12), 'stypy_return_type', result_div_78796)
        # SSA join for if statement (line 639)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to get_kern(...): (line 644)
        # Processing the call arguments (line 644)
        # Getting the type of 'self' (line 644)
        self_78799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 30), 'self', False)
        # Getting the type of 'font1' (line 644)
        font1_78800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 36), 'font1', False)
        # Getting the type of 'fontclass1' (line 644)
        fontclass1_78801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 43), 'fontclass1', False)
        # Getting the type of 'sym1' (line 644)
        sym1_78802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 55), 'sym1', False)
        # Getting the type of 'fontsize1' (line 644)
        fontsize1_78803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 61), 'fontsize1', False)
        # Getting the type of 'font2' (line 645)
        font2_78804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 30), 'font2', False)
        # Getting the type of 'fontclass2' (line 645)
        fontclass2_78805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 37), 'fontclass2', False)
        # Getting the type of 'sym2' (line 645)
        sym2_78806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 49), 'sym2', False)
        # Getting the type of 'fontsize2' (line 645)
        fontsize2_78807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 55), 'fontsize2', False)
        # Getting the type of 'dpi' (line 645)
        dpi_78808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 66), 'dpi', False)
        # Processing the call keyword arguments (line 644)
        kwargs_78809 = {}
        # Getting the type of 'Fonts' (line 644)
        Fonts_78797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 15), 'Fonts', False)
        # Obtaining the member 'get_kern' of a type (line 644)
        get_kern_78798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 644, 15), Fonts_78797, 'get_kern')
        # Calling get_kern(args, kwargs) (line 644)
        get_kern_call_result_78810 = invoke(stypy.reporting.localization.Localization(__file__, 644, 15), get_kern_78798, *[self_78799, font1_78800, fontclass1_78801, sym1_78802, fontsize1_78803, font2_78804, fontclass2_78805, sym2_78806, fontsize2_78807, dpi_78808], **kwargs_78809)
        
        # Assigning a type to the variable 'stypy_return_type' (line 644)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 8), 'stypy_return_type', get_kern_call_result_78810)
        
        # ################# End of 'get_kern(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_kern' in the type store
        # Getting the type of 'stypy_return_type' (line 637)
        stypy_return_type_78811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78811)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_kern'
        return stypy_return_type_78811


# Assigning a type to the variable 'TruetypeFonts' (line 542)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 542, 0), 'TruetypeFonts', TruetypeFonts)
# Declaration of the 'BakomaFonts' class
# Getting the type of 'TruetypeFonts' (line 647)
TruetypeFonts_78812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 18), 'TruetypeFonts')

class BakomaFonts(TruetypeFonts_78812, ):
    unicode_78813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, (-1)), 'unicode', u'\n    Use the Bakoma TrueType fonts for rendering.\n\n    Symbols are strewn about a number of font files, each of which has\n    its own proprietary 8-bit encoding.\n    ')
    
    # Assigning a Dict to a Name (line 654):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 663, 4, False)
        # Assigning a type to the variable 'self' (line 664)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 664, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'BakomaFonts.__init__', [], 'args', 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Call to a Attribute (line 664):
        
        # Assigning a Call to a Attribute (line 664):
        
        # Call to StixFonts(...): (line 664)
        # Getting the type of 'args' (line 664)
        args_78815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 664, 41), 'args', False)
        # Processing the call keyword arguments (line 664)
        # Getting the type of 'kwargs' (line 664)
        kwargs_78816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 664, 49), 'kwargs', False)
        kwargs_78817 = {'kwargs_78816': kwargs_78816}
        # Getting the type of 'StixFonts' (line 664)
        StixFonts_78814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 664, 30), 'StixFonts', False)
        # Calling StixFonts(args, kwargs) (line 664)
        StixFonts_call_result_78818 = invoke(stypy.reporting.localization.Localization(__file__, 664, 30), StixFonts_78814, *[args_78815], **kwargs_78817)
        
        # Getting the type of 'self' (line 664)
        self_78819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 664, 8), 'self')
        # Setting the type of the member '_stix_fallback' of a type (line 664)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 664, 8), self_78819, '_stix_fallback', StixFonts_call_result_78818)
        
        # Call to __init__(...): (line 666)
        # Processing the call arguments (line 666)
        # Getting the type of 'self' (line 666)
        self_78822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 31), 'self', False)
        # Getting the type of 'args' (line 666)
        args_78823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 38), 'args', False)
        # Processing the call keyword arguments (line 666)
        # Getting the type of 'kwargs' (line 666)
        kwargs_78824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 46), 'kwargs', False)
        kwargs_78825 = {'kwargs_78824': kwargs_78824}
        # Getting the type of 'TruetypeFonts' (line 666)
        TruetypeFonts_78820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'TruetypeFonts', False)
        # Obtaining the member '__init__' of a type (line 666)
        init___78821 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 666, 8), TruetypeFonts_78820, '__init__')
        # Calling __init__(args, kwargs) (line 666)
        init___call_result_78826 = invoke(stypy.reporting.localization.Localization(__file__, 666, 8), init___78821, *[self_78822, args_78823], **kwargs_78825)
        
        
        # Assigning a Dict to a Attribute (line 667):
        
        # Assigning a Dict to a Attribute (line 667):
        
        # Obtaining an instance of the builtin type 'dict' (line 667)
        dict_78827 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 667, 23), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 667)
        
        # Getting the type of 'self' (line 667)
        self_78828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 8), 'self')
        # Setting the type of the member 'fontmap' of a type (line 667)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 667, 8), self_78828, 'fontmap', dict_78827)
        
        
        # Call to iteritems(...): (line 668)
        # Processing the call arguments (line 668)
        # Getting the type of 'self' (line 668)
        self_78831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 38), 'self', False)
        # Obtaining the member '_fontmap' of a type (line 668)
        _fontmap_78832 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 668, 38), self_78831, '_fontmap')
        # Processing the call keyword arguments (line 668)
        kwargs_78833 = {}
        # Getting the type of 'six' (line 668)
        six_78829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 24), 'six', False)
        # Obtaining the member 'iteritems' of a type (line 668)
        iteritems_78830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 668, 24), six_78829, 'iteritems')
        # Calling iteritems(args, kwargs) (line 668)
        iteritems_call_result_78834 = invoke(stypy.reporting.localization.Localization(__file__, 668, 24), iteritems_78830, *[_fontmap_78832], **kwargs_78833)
        
        # Testing the type of a for loop iterable (line 668)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 668, 8), iteritems_call_result_78834)
        # Getting the type of the for loop variable (line 668)
        for_loop_var_78835 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 668, 8), iteritems_call_result_78834)
        # Assigning a type to the variable 'key' (line 668)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 668, 8), 'key', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 668, 8), for_loop_var_78835))
        # Assigning a type to the variable 'val' (line 668)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 668, 8), 'val', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 668, 8), for_loop_var_78835))
        # SSA begins for a for statement (line 668)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 669):
        
        # Assigning a Call to a Name (line 669):
        
        # Call to findfont(...): (line 669)
        # Processing the call arguments (line 669)
        # Getting the type of 'val' (line 669)
        val_78837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 32), 'val', False)
        # Processing the call keyword arguments (line 669)
        kwargs_78838 = {}
        # Getting the type of 'findfont' (line 669)
        findfont_78836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 23), 'findfont', False)
        # Calling findfont(args, kwargs) (line 669)
        findfont_call_result_78839 = invoke(stypy.reporting.localization.Localization(__file__, 669, 23), findfont_78836, *[val_78837], **kwargs_78838)
        
        # Assigning a type to the variable 'fullpath' (line 669)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 669, 12), 'fullpath', findfont_call_result_78839)
        
        # Assigning a Name to a Subscript (line 670):
        
        # Assigning a Name to a Subscript (line 670):
        # Getting the type of 'fullpath' (line 670)
        fullpath_78840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 32), 'fullpath')
        # Getting the type of 'self' (line 670)
        self_78841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 12), 'self')
        # Obtaining the member 'fontmap' of a type (line 670)
        fontmap_78842 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 670, 12), self_78841, 'fontmap')
        # Getting the type of 'key' (line 670)
        key_78843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 25), 'key')
        # Storing an element on a container (line 670)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 670, 12), fontmap_78842, (key_78843, fullpath_78840))
        
        # Assigning a Name to a Subscript (line 671):
        
        # Assigning a Name to a Subscript (line 671):
        # Getting the type of 'fullpath' (line 671)
        fullpath_78844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 32), 'fullpath')
        # Getting the type of 'self' (line 671)
        self_78845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 12), 'self')
        # Obtaining the member 'fontmap' of a type (line 671)
        fontmap_78846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 671, 12), self_78845, 'fontmap')
        # Getting the type of 'val' (line 671)
        val_78847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 25), 'val')
        # Storing an element on a container (line 671)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 12), fontmap_78846, (val_78847, fullpath_78844))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()

    
    # Assigning a Call to a Name (line 674):

    @norecursion
    def _get_glyph(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'True' (line 676)
        True_78848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 67), 'True')
        defaults = [True_78848]
        # Create a new context for function '_get_glyph'
        module_type_store = module_type_store.open_function_context('_get_glyph', 676, 4, False)
        # Assigning a type to the variable 'self' (line 677)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 677, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        BakomaFonts._get_glyph.__dict__.__setitem__('stypy_localization', localization)
        BakomaFonts._get_glyph.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        BakomaFonts._get_glyph.__dict__.__setitem__('stypy_type_store', module_type_store)
        BakomaFonts._get_glyph.__dict__.__setitem__('stypy_function_name', 'BakomaFonts._get_glyph')
        BakomaFonts._get_glyph.__dict__.__setitem__('stypy_param_names_list', ['fontname', 'font_class', 'sym', 'fontsize', 'math'])
        BakomaFonts._get_glyph.__dict__.__setitem__('stypy_varargs_param_name', None)
        BakomaFonts._get_glyph.__dict__.__setitem__('stypy_kwargs_param_name', None)
        BakomaFonts._get_glyph.__dict__.__setitem__('stypy_call_defaults', defaults)
        BakomaFonts._get_glyph.__dict__.__setitem__('stypy_call_varargs', varargs)
        BakomaFonts._get_glyph.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        BakomaFonts._get_glyph.__dict__.__setitem__('stypy_declared_arg_number', 6)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'BakomaFonts._get_glyph', ['fontname', 'font_class', 'sym', 'fontsize', 'math'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_glyph', localization, ['fontname', 'font_class', 'sym', 'fontsize', 'math'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_glyph(...)' code ##################

        
        # Assigning a Name to a Name (line 677):
        
        # Assigning a Name to a Name (line 677):
        # Getting the type of 'None' (line 677)
        None_78849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 22), 'None')
        # Assigning a type to the variable 'symbol_name' (line 677)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 677, 8), 'symbol_name', None_78849)
        
        # Assigning a Name to a Name (line 678):
        
        # Assigning a Name to a Name (line 678):
        # Getting the type of 'None' (line 678)
        None_78850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 15), 'None')
        # Assigning a type to the variable 'font' (line 678)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 8), 'font', None_78850)
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'fontname' (line 679)
        fontname_78851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 11), 'fontname')
        # Getting the type of 'self' (line 679)
        self_78852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 23), 'self')
        # Obtaining the member 'fontmap' of a type (line 679)
        fontmap_78853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 679, 23), self_78852, 'fontmap')
        # Applying the binary operator 'in' (line 679)
        result_contains_78854 = python_operator(stypy.reporting.localization.Localization(__file__, 679, 11), 'in', fontname_78851, fontmap_78853)
        
        
        # Getting the type of 'sym' (line 679)
        sym_78855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 40), 'sym')
        # Getting the type of 'latex_to_bakoma' (line 679)
        latex_to_bakoma_78856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 47), 'latex_to_bakoma')
        # Applying the binary operator 'in' (line 679)
        result_contains_78857 = python_operator(stypy.reporting.localization.Localization(__file__, 679, 40), 'in', sym_78855, latex_to_bakoma_78856)
        
        # Applying the binary operator 'and' (line 679)
        result_and_keyword_78858 = python_operator(stypy.reporting.localization.Localization(__file__, 679, 11), 'and', result_contains_78854, result_contains_78857)
        
        # Testing the type of an if condition (line 679)
        if_condition_78859 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 679, 8), result_and_keyword_78858)
        # Assigning a type to the variable 'if_condition_78859' (line 679)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 679, 8), 'if_condition_78859', if_condition_78859)
        # SSA begins for if statement (line 679)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Tuple (line 680):
        
        # Assigning a Subscript to a Name (line 680):
        
        # Obtaining the type of the subscript
        int_78860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 680, 12), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'sym' (line 680)
        sym_78861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 44), 'sym')
        # Getting the type of 'latex_to_bakoma' (line 680)
        latex_to_bakoma_78862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 28), 'latex_to_bakoma')
        # Obtaining the member '__getitem__' of a type (line 680)
        getitem___78863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 680, 28), latex_to_bakoma_78862, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 680)
        subscript_call_result_78864 = invoke(stypy.reporting.localization.Localization(__file__, 680, 28), getitem___78863, sym_78861)
        
        # Obtaining the member '__getitem__' of a type (line 680)
        getitem___78865 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 680, 12), subscript_call_result_78864, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 680)
        subscript_call_result_78866 = invoke(stypy.reporting.localization.Localization(__file__, 680, 12), getitem___78865, int_78860)
        
        # Assigning a type to the variable 'tuple_var_assignment_77288' (line 680)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 12), 'tuple_var_assignment_77288', subscript_call_result_78866)
        
        # Assigning a Subscript to a Name (line 680):
        
        # Obtaining the type of the subscript
        int_78867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 680, 12), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'sym' (line 680)
        sym_78868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 44), 'sym')
        # Getting the type of 'latex_to_bakoma' (line 680)
        latex_to_bakoma_78869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 28), 'latex_to_bakoma')
        # Obtaining the member '__getitem__' of a type (line 680)
        getitem___78870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 680, 28), latex_to_bakoma_78869, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 680)
        subscript_call_result_78871 = invoke(stypy.reporting.localization.Localization(__file__, 680, 28), getitem___78870, sym_78868)
        
        # Obtaining the member '__getitem__' of a type (line 680)
        getitem___78872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 680, 12), subscript_call_result_78871, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 680)
        subscript_call_result_78873 = invoke(stypy.reporting.localization.Localization(__file__, 680, 12), getitem___78872, int_78867)
        
        # Assigning a type to the variable 'tuple_var_assignment_77289' (line 680)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 12), 'tuple_var_assignment_77289', subscript_call_result_78873)
        
        # Assigning a Name to a Name (line 680):
        # Getting the type of 'tuple_var_assignment_77288' (line 680)
        tuple_var_assignment_77288_78874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 12), 'tuple_var_assignment_77288')
        # Assigning a type to the variable 'basename' (line 680)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 12), 'basename', tuple_var_assignment_77288_78874)
        
        # Assigning a Name to a Name (line 680):
        # Getting the type of 'tuple_var_assignment_77289' (line 680)
        tuple_var_assignment_77289_78875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 12), 'tuple_var_assignment_77289')
        # Assigning a type to the variable 'num' (line 680)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 22), 'num', tuple_var_assignment_77289_78875)
        
        # Assigning a BoolOp to a Name (line 681):
        
        # Assigning a BoolOp to a Name (line 681):
        
        # Evaluating a boolean operation
        
        # Getting the type of 'basename' (line 681)
        basename_78876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 23), 'basename')
        unicode_78877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 681, 35), 'unicode', u'cmmi10')
        # Applying the binary operator '==' (line 681)
        result_eq_78878 = python_operator(stypy.reporting.localization.Localization(__file__, 681, 23), '==', basename_78876, unicode_78877)
        
        
        # Getting the type of 'sym' (line 681)
        sym_78879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 48), 'sym')
        # Getting the type of 'self' (line 681)
        self_78880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 55), 'self')
        # Obtaining the member '_slanted_symbols' of a type (line 681)
        _slanted_symbols_78881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 681, 55), self_78880, '_slanted_symbols')
        # Applying the binary operator 'in' (line 681)
        result_contains_78882 = python_operator(stypy.reporting.localization.Localization(__file__, 681, 48), 'in', sym_78879, _slanted_symbols_78881)
        
        # Applying the binary operator 'or' (line 681)
        result_or_keyword_78883 = python_operator(stypy.reporting.localization.Localization(__file__, 681, 22), 'or', result_eq_78878, result_contains_78882)
        
        # Assigning a type to the variable 'slanted' (line 681)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 681, 12), 'slanted', result_or_keyword_78883)
        
        # Assigning a Call to a Name (line 682):
        
        # Assigning a Call to a Name (line 682):
        
        # Call to _get_font(...): (line 682)
        # Processing the call arguments (line 682)
        # Getting the type of 'basename' (line 682)
        basename_78886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 34), 'basename', False)
        # Processing the call keyword arguments (line 682)
        kwargs_78887 = {}
        # Getting the type of 'self' (line 682)
        self_78884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 19), 'self', False)
        # Obtaining the member '_get_font' of a type (line 682)
        _get_font_78885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 682, 19), self_78884, '_get_font')
        # Calling _get_font(args, kwargs) (line 682)
        _get_font_call_result_78888 = invoke(stypy.reporting.localization.Localization(__file__, 682, 19), _get_font_78885, *[basename_78886], **kwargs_78887)
        
        # Assigning a type to the variable 'font' (line 682)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 682, 12), 'font', _get_font_call_result_78888)
        # SSA branch for the else part of an if statement (line 679)
        module_type_store.open_ssa_branch('else')
        
        
        
        # Call to len(...): (line 683)
        # Processing the call arguments (line 683)
        # Getting the type of 'sym' (line 683)
        sym_78890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 17), 'sym', False)
        # Processing the call keyword arguments (line 683)
        kwargs_78891 = {}
        # Getting the type of 'len' (line 683)
        len_78889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 13), 'len', False)
        # Calling len(args, kwargs) (line 683)
        len_call_result_78892 = invoke(stypy.reporting.localization.Localization(__file__, 683, 13), len_78889, *[sym_78890], **kwargs_78891)
        
        int_78893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 683, 25), 'int')
        # Applying the binary operator '==' (line 683)
        result_eq_78894 = python_operator(stypy.reporting.localization.Localization(__file__, 683, 13), '==', len_call_result_78892, int_78893)
        
        # Testing the type of an if condition (line 683)
        if_condition_78895 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 683, 13), result_eq_78894)
        # Assigning a type to the variable 'if_condition_78895' (line 683)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 683, 13), 'if_condition_78895', if_condition_78895)
        # SSA begins for if statement (line 683)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Compare to a Name (line 684):
        
        # Assigning a Compare to a Name (line 684):
        
        # Getting the type of 'fontname' (line 684)
        fontname_78896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 23), 'fontname')
        unicode_78897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 684, 35), 'unicode', u'it')
        # Applying the binary operator '==' (line 684)
        result_eq_78898 = python_operator(stypy.reporting.localization.Localization(__file__, 684, 23), '==', fontname_78896, unicode_78897)
        
        # Assigning a type to the variable 'slanted' (line 684)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 684, 12), 'slanted', result_eq_78898)
        
        # Assigning a Call to a Name (line 685):
        
        # Assigning a Call to a Name (line 685):
        
        # Call to _get_font(...): (line 685)
        # Processing the call arguments (line 685)
        # Getting the type of 'fontname' (line 685)
        fontname_78901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 34), 'fontname', False)
        # Processing the call keyword arguments (line 685)
        kwargs_78902 = {}
        # Getting the type of 'self' (line 685)
        self_78899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 19), 'self', False)
        # Obtaining the member '_get_font' of a type (line 685)
        _get_font_78900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 685, 19), self_78899, '_get_font')
        # Calling _get_font(args, kwargs) (line 685)
        _get_font_call_result_78903 = invoke(stypy.reporting.localization.Localization(__file__, 685, 19), _get_font_78900, *[fontname_78901], **kwargs_78902)
        
        # Assigning a type to the variable 'font' (line 685)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 12), 'font', _get_font_call_result_78903)
        
        # Type idiom detected: calculating its left and rigth part (line 686)
        # Getting the type of 'font' (line 686)
        font_78904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 12), 'font')
        # Getting the type of 'None' (line 686)
        None_78905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 27), 'None')
        
        (may_be_78906, more_types_in_union_78907) = may_not_be_none(font_78904, None_78905)

        if may_be_78906:

            if more_types_in_union_78907:
                # Runtime conditional SSA (line 686)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 687):
            
            # Assigning a Call to a Name (line 687):
            
            # Call to ord(...): (line 687)
            # Processing the call arguments (line 687)
            # Getting the type of 'sym' (line 687)
            sym_78909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 26), 'sym', False)
            # Processing the call keyword arguments (line 687)
            kwargs_78910 = {}
            # Getting the type of 'ord' (line 687)
            ord_78908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 22), 'ord', False)
            # Calling ord(args, kwargs) (line 687)
            ord_call_result_78911 = invoke(stypy.reporting.localization.Localization(__file__, 687, 22), ord_78908, *[sym_78909], **kwargs_78910)
            
            # Assigning a type to the variable 'num' (line 687)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 687, 16), 'num', ord_call_result_78911)

            if more_types_in_union_78907:
                # SSA join for if statement (line 686)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA join for if statement (line 683)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 679)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Type idiom detected: calculating its left and rigth part (line 689)
        # Getting the type of 'font' (line 689)
        font_78912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 8), 'font')
        # Getting the type of 'None' (line 689)
        None_78913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 23), 'None')
        
        (may_be_78914, more_types_in_union_78915) = may_not_be_none(font_78912, None_78913)

        if may_be_78914:

            if more_types_in_union_78915:
                # Runtime conditional SSA (line 689)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 690):
            
            # Assigning a Call to a Name (line 690):
            
            # Call to get_char_index(...): (line 690)
            # Processing the call arguments (line 690)
            # Getting the type of 'num' (line 690)
            num_78918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 38), 'num', False)
            # Processing the call keyword arguments (line 690)
            kwargs_78919 = {}
            # Getting the type of 'font' (line 690)
            font_78916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 18), 'font', False)
            # Obtaining the member 'get_char_index' of a type (line 690)
            get_char_index_78917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 690, 18), font_78916, 'get_char_index')
            # Calling get_char_index(args, kwargs) (line 690)
            get_char_index_call_result_78920 = invoke(stypy.reporting.localization.Localization(__file__, 690, 18), get_char_index_78917, *[num_78918], **kwargs_78919)
            
            # Assigning a type to the variable 'gid' (line 690)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 690, 12), 'gid', get_char_index_call_result_78920)
            
            
            # Getting the type of 'gid' (line 691)
            gid_78921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 15), 'gid')
            int_78922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 22), 'int')
            # Applying the binary operator '!=' (line 691)
            result_ne_78923 = python_operator(stypy.reporting.localization.Localization(__file__, 691, 15), '!=', gid_78921, int_78922)
            
            # Testing the type of an if condition (line 691)
            if_condition_78924 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 691, 12), result_ne_78923)
            # Assigning a type to the variable 'if_condition_78924' (line 691)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 691, 12), 'if_condition_78924', if_condition_78924)
            # SSA begins for if statement (line 691)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 692):
            
            # Assigning a Call to a Name (line 692):
            
            # Call to get_glyph_name(...): (line 692)
            # Processing the call arguments (line 692)
            # Getting the type of 'gid' (line 692)
            gid_78927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 50), 'gid', False)
            # Processing the call keyword arguments (line 692)
            kwargs_78928 = {}
            # Getting the type of 'font' (line 692)
            font_78925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 30), 'font', False)
            # Obtaining the member 'get_glyph_name' of a type (line 692)
            get_glyph_name_78926 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 692, 30), font_78925, 'get_glyph_name')
            # Calling get_glyph_name(args, kwargs) (line 692)
            get_glyph_name_call_result_78929 = invoke(stypy.reporting.localization.Localization(__file__, 692, 30), get_glyph_name_78926, *[gid_78927], **kwargs_78928)
            
            # Assigning a type to the variable 'symbol_name' (line 692)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 16), 'symbol_name', get_glyph_name_call_result_78929)
            # SSA join for if statement (line 691)
            module_type_store = module_type_store.join_ssa_context()
            

            if more_types_in_union_78915:
                # SSA join for if statement (line 689)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 694)
        # Getting the type of 'symbol_name' (line 694)
        symbol_name_78930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 11), 'symbol_name')
        # Getting the type of 'None' (line 694)
        None_78931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 26), 'None')
        
        (may_be_78932, more_types_in_union_78933) = may_be_none(symbol_name_78930, None_78931)

        if may_be_78932:

            if more_types_in_union_78933:
                # Runtime conditional SSA (line 694)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to _get_glyph(...): (line 695)
            # Processing the call arguments (line 695)
            # Getting the type of 'fontname' (line 696)
            fontname_78937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 16), 'fontname', False)
            # Getting the type of 'font_class' (line 696)
            font_class_78938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 26), 'font_class', False)
            # Getting the type of 'sym' (line 696)
            sym_78939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 38), 'sym', False)
            # Getting the type of 'fontsize' (line 696)
            fontsize_78940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 43), 'fontsize', False)
            # Getting the type of 'math' (line 696)
            math_78941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 53), 'math', False)
            # Processing the call keyword arguments (line 695)
            kwargs_78942 = {}
            # Getting the type of 'self' (line 695)
            self_78934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 19), 'self', False)
            # Obtaining the member '_stix_fallback' of a type (line 695)
            _stix_fallback_78935 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 695, 19), self_78934, '_stix_fallback')
            # Obtaining the member '_get_glyph' of a type (line 695)
            _get_glyph_78936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 695, 19), _stix_fallback_78935, '_get_glyph')
            # Calling _get_glyph(args, kwargs) (line 695)
            _get_glyph_call_result_78943 = invoke(stypy.reporting.localization.Localization(__file__, 695, 19), _get_glyph_78936, *[fontname_78937, font_class_78938, sym_78939, fontsize_78940, math_78941], **kwargs_78942)
            
            # Assigning a type to the variable 'stypy_return_type' (line 695)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 695, 12), 'stypy_return_type', _get_glyph_call_result_78943)

            if more_types_in_union_78933:
                # SSA join for if statement (line 694)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Obtaining an instance of the builtin type 'tuple' (line 698)
        tuple_78944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 698, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 698)
        # Adding element type (line 698)
        # Getting the type of 'font' (line 698)
        font_78945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 15), 'font')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 698, 15), tuple_78944, font_78945)
        # Adding element type (line 698)
        # Getting the type of 'num' (line 698)
        num_78946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 21), 'num')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 698, 15), tuple_78944, num_78946)
        # Adding element type (line 698)
        # Getting the type of 'symbol_name' (line 698)
        symbol_name_78947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 26), 'symbol_name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 698, 15), tuple_78944, symbol_name_78947)
        # Adding element type (line 698)
        # Getting the type of 'fontsize' (line 698)
        fontsize_78948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 39), 'fontsize')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 698, 15), tuple_78944, fontsize_78948)
        # Adding element type (line 698)
        # Getting the type of 'slanted' (line 698)
        slanted_78949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 49), 'slanted')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 698, 15), tuple_78944, slanted_78949)
        
        # Assigning a type to the variable 'stypy_return_type' (line 698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 698, 8), 'stypy_return_type', tuple_78944)
        
        # ################# End of '_get_glyph(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_glyph' in the type store
        # Getting the type of 'stypy_return_type' (line 676)
        stypy_return_type_78950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78950)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_glyph'
        return stypy_return_type_78950

    
    # Assigning a Dict to a Name (line 703):
    
    
    # Obtaining an instance of the builtin type 'list' (line 744)
    list_78951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 744, 25), 'list')
    # Adding type elements to the builtin type 'list' instance (line 744)
    # Adding element type (line 744)
    
    # Obtaining an instance of the builtin type 'tuple' (line 744)
    tuple_78952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 744, 27), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 744)
    # Adding element type (line 744)
    unicode_78953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 744, 27), 'unicode', u'\\leftparen')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 27), tuple_78952, unicode_78953)
    # Adding element type (line 744)
    unicode_78954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 744, 42), 'unicode', u'(')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 27), tuple_78952, unicode_78954)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 25), list_78951, tuple_78952)
    # Adding element type (line 744)
    
    # Obtaining an instance of the builtin type 'tuple' (line 745)
    tuple_78955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 745, 27), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 745)
    # Adding element type (line 745)
    unicode_78956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 745, 27), 'unicode', u'\\rightparent')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 745, 27), tuple_78955, unicode_78956)
    # Adding element type (line 745)
    unicode_78957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 745, 44), 'unicode', u')')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 745, 27), tuple_78955, unicode_78957)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 25), list_78951, tuple_78955)
    # Adding element type (line 744)
    
    # Obtaining an instance of the builtin type 'tuple' (line 746)
    tuple_78958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 27), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 746)
    # Adding element type (line 746)
    unicode_78959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 27), 'unicode', u'\\leftbrace')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 746, 27), tuple_78958, unicode_78959)
    # Adding element type (line 746)
    unicode_78960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 42), 'unicode', u'{')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 746, 27), tuple_78958, unicode_78960)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 25), list_78951, tuple_78958)
    # Adding element type (line 744)
    
    # Obtaining an instance of the builtin type 'tuple' (line 747)
    tuple_78961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 27), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 747)
    # Adding element type (line 747)
    unicode_78962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 27), 'unicode', u'\\rightbrace')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 747, 27), tuple_78961, unicode_78962)
    # Adding element type (line 747)
    unicode_78963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 43), 'unicode', u'}')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 747, 27), tuple_78961, unicode_78963)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 25), list_78951, tuple_78961)
    # Adding element type (line 744)
    
    # Obtaining an instance of the builtin type 'tuple' (line 748)
    tuple_78964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 27), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 748)
    # Adding element type (line 748)
    unicode_78965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 27), 'unicode', u'\\leftbracket')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 748, 27), tuple_78964, unicode_78965)
    # Adding element type (line 748)
    unicode_78966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 44), 'unicode', u'[')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 748, 27), tuple_78964, unicode_78966)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 25), list_78951, tuple_78964)
    # Adding element type (line 744)
    
    # Obtaining an instance of the builtin type 'tuple' (line 749)
    tuple_78967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 749, 27), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 749)
    # Adding element type (line 749)
    unicode_78968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 749, 27), 'unicode', u'\\rightbracket')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 749, 27), tuple_78967, unicode_78968)
    # Adding element type (line 749)
    unicode_78969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 749, 45), 'unicode', u']')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 749, 27), tuple_78967, unicode_78969)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 25), list_78951, tuple_78967)
    # Adding element type (line 744)
    
    # Obtaining an instance of the builtin type 'tuple' (line 750)
    tuple_78970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 750, 27), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 750)
    # Adding element type (line 750)
    unicode_78971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 750, 27), 'unicode', u'\\{')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 750, 27), tuple_78970, unicode_78971)
    # Adding element type (line 750)
    unicode_78972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 750, 34), 'unicode', u'{')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 750, 27), tuple_78970, unicode_78972)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 25), list_78951, tuple_78970)
    # Adding element type (line 744)
    
    # Obtaining an instance of the builtin type 'tuple' (line 751)
    tuple_78973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 751, 27), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 751)
    # Adding element type (line 751)
    unicode_78974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 751, 27), 'unicode', u'\\}')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 751, 27), tuple_78973, unicode_78974)
    # Adding element type (line 751)
    unicode_78975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 751, 34), 'unicode', u'}')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 751, 27), tuple_78973, unicode_78975)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 25), list_78951, tuple_78973)
    # Adding element type (line 744)
    
    # Obtaining an instance of the builtin type 'tuple' (line 752)
    tuple_78976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 27), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 752)
    # Adding element type (line 752)
    unicode_78977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 27), 'unicode', u'\\[')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 752, 27), tuple_78976, unicode_78977)
    # Adding element type (line 752)
    unicode_78978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 34), 'unicode', u'[')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 752, 27), tuple_78976, unicode_78978)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 25), list_78951, tuple_78976)
    # Adding element type (line 744)
    
    # Obtaining an instance of the builtin type 'tuple' (line 753)
    tuple_78979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 27), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 753)
    # Adding element type (line 753)
    unicode_78980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 27), 'unicode', u'\\]')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 27), tuple_78979, unicode_78980)
    # Adding element type (line 753)
    unicode_78981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 34), 'unicode', u']')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 27), tuple_78979, unicode_78981)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 25), list_78951, tuple_78979)
    
    # Testing the type of a for loop iterable (line 744)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 744, 4), list_78951)
    # Getting the type of the for loop variable (line 744)
    for_loop_var_78982 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 744, 4), list_78951)
    # Assigning a type to the variable 'alias' (line 744)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 744, 4), 'alias', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 4), for_loop_var_78982))
    # Assigning a type to the variable 'target' (line 744)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 744, 4), 'target', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 4), for_loop_var_78982))
    # SSA begins for a for statement (line 744)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Subscript to a Subscript (line 754):
    
    # Assigning a Subscript to a Subscript (line 754):
    
    # Obtaining the type of the subscript
    # Getting the type of 'target' (line 754)
    target_78983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 55), 'target')
    # Getting the type of '_size_alternatives' (line 754)
    _size_alternatives_78984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 36), '_size_alternatives')
    # Obtaining the member '__getitem__' of a type (line 754)
    getitem___78985 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 754, 36), _size_alternatives_78984, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 754)
    subscript_call_result_78986 = invoke(stypy.reporting.localization.Localization(__file__, 754, 36), getitem___78985, target_78983)
    
    # Getting the type of '_size_alternatives' (line 754)
    _size_alternatives_78987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 8), '_size_alternatives')
    # Getting the type of 'alias' (line 754)
    alias_78988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 27), 'alias')
    # Storing an element on a container (line 754)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 754, 8), _size_alternatives_78987, (alias_78988, subscript_call_result_78986))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    

    @norecursion
    def get_sized_alternatives_for_symbol(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_sized_alternatives_for_symbol'
        module_type_store = module_type_store.open_function_context('get_sized_alternatives_for_symbol', 756, 4, False)
        # Assigning a type to the variable 'self' (line 757)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 757, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        BakomaFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_localization', localization)
        BakomaFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        BakomaFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_type_store', module_type_store)
        BakomaFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_function_name', 'BakomaFonts.get_sized_alternatives_for_symbol')
        BakomaFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_param_names_list', ['fontname', 'sym'])
        BakomaFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_varargs_param_name', None)
        BakomaFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_kwargs_param_name', None)
        BakomaFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_call_defaults', defaults)
        BakomaFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_call_varargs', varargs)
        BakomaFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        BakomaFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'BakomaFonts.get_sized_alternatives_for_symbol', ['fontname', 'sym'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_sized_alternatives_for_symbol', localization, ['fontname', 'sym'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_sized_alternatives_for_symbol(...)' code ##################

        
        # Call to get(...): (line 757)
        # Processing the call arguments (line 757)
        # Getting the type of 'sym' (line 757)
        sym_78992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 43), 'sym', False)
        
        # Obtaining an instance of the builtin type 'list' (line 757)
        list_78993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 757, 48), 'list')
        # Adding type elements to the builtin type 'list' instance (line 757)
        # Adding element type (line 757)
        
        # Obtaining an instance of the builtin type 'tuple' (line 757)
        tuple_78994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 757, 50), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 757)
        # Adding element type (line 757)
        # Getting the type of 'fontname' (line 757)
        fontname_78995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 50), 'fontname', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 757, 50), tuple_78994, fontname_78995)
        # Adding element type (line 757)
        # Getting the type of 'sym' (line 757)
        sym_78996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 60), 'sym', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 757, 50), tuple_78994, sym_78996)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 757, 48), list_78993, tuple_78994)
        
        # Processing the call keyword arguments (line 757)
        kwargs_78997 = {}
        # Getting the type of 'self' (line 757)
        self_78989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 15), 'self', False)
        # Obtaining the member '_size_alternatives' of a type (line 757)
        _size_alternatives_78990 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 757, 15), self_78989, '_size_alternatives')
        # Obtaining the member 'get' of a type (line 757)
        get_78991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 757, 15), _size_alternatives_78990, 'get')
        # Calling get(args, kwargs) (line 757)
        get_call_result_78998 = invoke(stypy.reporting.localization.Localization(__file__, 757, 15), get_78991, *[sym_78992, list_78993], **kwargs_78997)
        
        # Assigning a type to the variable 'stypy_return_type' (line 757)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 757, 8), 'stypy_return_type', get_call_result_78998)
        
        # ################# End of 'get_sized_alternatives_for_symbol(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_sized_alternatives_for_symbol' in the type store
        # Getting the type of 'stypy_return_type' (line 756)
        stypy_return_type_78999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_78999)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_sized_alternatives_for_symbol'
        return stypy_return_type_78999


# Assigning a type to the variable 'BakomaFonts' (line 647)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 647, 0), 'BakomaFonts', BakomaFonts)

# Assigning a Dict to a Name (line 654):

# Obtaining an instance of the builtin type 'dict' (line 654)
dict_79000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 15), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 654)
# Adding element type (key, value) (line 654)
unicode_79001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 17), 'unicode', u'cal')
unicode_79002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 25), 'unicode', u'cmsy10')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 654, 15), dict_79000, (unicode_79001, unicode_79002))
# Adding element type (key, value) (line 654)
unicode_79003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 655, 17), 'unicode', u'rm')
unicode_79004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 655, 25), 'unicode', u'cmr10')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 654, 15), dict_79000, (unicode_79003, unicode_79004))
# Adding element type (key, value) (line 654)
unicode_79005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 17), 'unicode', u'tt')
unicode_79006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 25), 'unicode', u'cmtt10')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 654, 15), dict_79000, (unicode_79005, unicode_79006))
# Adding element type (key, value) (line 654)
unicode_79007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 17), 'unicode', u'it')
unicode_79008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 25), 'unicode', u'cmmi10')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 654, 15), dict_79000, (unicode_79007, unicode_79008))
# Adding element type (key, value) (line 654)
unicode_79009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 17), 'unicode', u'bf')
unicode_79010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 25), 'unicode', u'cmb10')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 654, 15), dict_79000, (unicode_79009, unicode_79010))
# Adding element type (key, value) (line 654)
unicode_79011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 17), 'unicode', u'sf')
unicode_79012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 25), 'unicode', u'cmss10')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 654, 15), dict_79000, (unicode_79011, unicode_79012))
# Adding element type (key, value) (line 654)
unicode_79013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 17), 'unicode', u'ex')
unicode_79014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 25), 'unicode', u'cmex10')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 654, 15), dict_79000, (unicode_79013, unicode_79014))

# Getting the type of 'BakomaFonts'
BakomaFonts_79015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'BakomaFonts')
# Setting the type of the member '_fontmap' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), BakomaFonts_79015, '_fontmap', dict_79000)

# Assigning a Call to a Name (line 674):

# Call to set(...): (line 674)
# Processing the call arguments (line 674)

# Call to split(...): (line 674)
# Processing the call keyword arguments (line 674)
kwargs_79019 = {}
unicode_79017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 674, 27), 'unicode', u'\\int \\oint')
# Obtaining the member 'split' of a type (line 674)
split_79018 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 674, 27), unicode_79017, 'split')
# Calling split(args, kwargs) (line 674)
split_call_result_79020 = invoke(stypy.reporting.localization.Localization(__file__, 674, 27), split_79018, *[], **kwargs_79019)

# Processing the call keyword arguments (line 674)
kwargs_79021 = {}
# Getting the type of 'set' (line 674)
set_79016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 23), 'set', False)
# Calling set(args, kwargs) (line 674)
set_call_result_79022 = invoke(stypy.reporting.localization.Localization(__file__, 674, 23), set_79016, *[split_call_result_79020], **kwargs_79021)

# Getting the type of 'BakomaFonts'
BakomaFonts_79023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'BakomaFonts')
# Setting the type of the member '_slanted_symbols' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), BakomaFonts_79023, '_slanted_symbols', set_call_result_79022)

# Assigning a Dict to a Name (line 703):

# Obtaining an instance of the builtin type 'dict' (line 703)
dict_79024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 703, 25), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 703)
# Adding element type (key, value) (line 703)
unicode_79025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 8), 'unicode', u'(')

# Obtaining an instance of the builtin type 'list' (line 704)
list_79026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 704)
# Adding element type (line 704)

# Obtaining an instance of the builtin type 'tuple' (line 704)
tuple_79027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 704)
# Adding element type (line 704)
unicode_79028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 25), 'unicode', u'rm')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 704, 25), tuple_79027, unicode_79028)
# Adding element type (line 704)
unicode_79029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 31), 'unicode', u'(')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 704, 25), tuple_79027, unicode_79029)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 704, 23), list_79026, tuple_79027)
# Adding element type (line 704)

# Obtaining an instance of the builtin type 'tuple' (line 704)
tuple_79030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 38), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 704)
# Adding element type (line 704)
unicode_79031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 38), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 704, 38), tuple_79030, unicode_79031)
# Adding element type (line 704)
unicode_79032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 44), 'unicode', u'\xa1')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 704, 38), tuple_79030, unicode_79032)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 704, 23), list_79026, tuple_79030)
# Adding element type (line 704)

# Obtaining an instance of the builtin type 'tuple' (line 704)
tuple_79033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 54), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 704)
# Adding element type (line 704)
unicode_79034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 54), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 704, 54), tuple_79033, unicode_79034)
# Adding element type (line 704)
unicode_79035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 60), 'unicode', u'\xb3')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 704, 54), tuple_79033, unicode_79035)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 704, 23), list_79026, tuple_79033)
# Adding element type (line 704)

# Obtaining an instance of the builtin type 'tuple' (line 705)
tuple_79036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 705, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 705)
# Adding element type (line 705)
unicode_79037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 705, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 705, 25), tuple_79036, unicode_79037)
# Adding element type (line 705)
unicode_79038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 705, 31), 'unicode', u'\xb5')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 705, 25), tuple_79036, unicode_79038)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 704, 23), list_79026, tuple_79036)
# Adding element type (line 704)

# Obtaining an instance of the builtin type 'tuple' (line 705)
tuple_79039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 705, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 705)
# Adding element type (line 705)
unicode_79040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 705, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 705, 41), tuple_79039, unicode_79040)
# Adding element type (line 705)
unicode_79041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 705, 47), 'unicode', u'\xc3')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 705, 41), tuple_79039, unicode_79041)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 704, 23), list_79026, tuple_79039)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79025, list_79026))
# Adding element type (key, value) (line 703)
unicode_79042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 8), 'unicode', u')')

# Obtaining an instance of the builtin type 'list' (line 706)
list_79043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 706)
# Adding element type (line 706)

# Obtaining an instance of the builtin type 'tuple' (line 706)
tuple_79044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 706)
# Adding element type (line 706)
unicode_79045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 25), 'unicode', u'rm')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 706, 25), tuple_79044, unicode_79045)
# Adding element type (line 706)
unicode_79046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 31), 'unicode', u')')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 706, 25), tuple_79044, unicode_79046)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 706, 23), list_79043, tuple_79044)
# Adding element type (line 706)

# Obtaining an instance of the builtin type 'tuple' (line 706)
tuple_79047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 38), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 706)
# Adding element type (line 706)
unicode_79048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 38), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 706, 38), tuple_79047, unicode_79048)
# Adding element type (line 706)
unicode_79049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 44), 'unicode', u'\xa2')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 706, 38), tuple_79047, unicode_79049)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 706, 23), list_79043, tuple_79047)
# Adding element type (line 706)

# Obtaining an instance of the builtin type 'tuple' (line 706)
tuple_79050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 54), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 706)
# Adding element type (line 706)
unicode_79051 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 54), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 706, 54), tuple_79050, unicode_79051)
# Adding element type (line 706)
unicode_79052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 60), 'unicode', u'\xb4')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 706, 54), tuple_79050, unicode_79052)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 706, 23), list_79043, tuple_79050)
# Adding element type (line 706)

# Obtaining an instance of the builtin type 'tuple' (line 707)
tuple_79053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 707, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 707)
# Adding element type (line 707)
unicode_79054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 707, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 707, 25), tuple_79053, unicode_79054)
# Adding element type (line 707)
unicode_79055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 707, 31), 'unicode', u'\xb6')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 707, 25), tuple_79053, unicode_79055)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 706, 23), list_79043, tuple_79053)
# Adding element type (line 706)

# Obtaining an instance of the builtin type 'tuple' (line 707)
tuple_79056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 707, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 707)
# Adding element type (line 707)
unicode_79057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 707, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 707, 41), tuple_79056, unicode_79057)
# Adding element type (line 707)
unicode_79058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 707, 47), 'unicode', u'!')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 707, 41), tuple_79056, unicode_79058)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 706, 23), list_79043, tuple_79056)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79042, list_79043))
# Adding element type (key, value) (line 703)
unicode_79059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 8), 'unicode', u'{')

# Obtaining an instance of the builtin type 'list' (line 708)
list_79060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 708)
# Adding element type (line 708)

# Obtaining an instance of the builtin type 'tuple' (line 708)
tuple_79061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 708)
# Adding element type (line 708)
unicode_79062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 25), 'unicode', u'cal')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 25), tuple_79061, unicode_79062)
# Adding element type (line 708)
unicode_79063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 32), 'unicode', u'{')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 25), tuple_79061, unicode_79063)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 23), list_79060, tuple_79061)
# Adding element type (line 708)

# Obtaining an instance of the builtin type 'tuple' (line 708)
tuple_79064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 39), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 708)
# Adding element type (line 708)
unicode_79065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 39), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 39), tuple_79064, unicode_79065)
# Adding element type (line 708)
unicode_79066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 45), 'unicode', u'\xa9')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 39), tuple_79064, unicode_79066)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 23), list_79060, tuple_79064)
# Adding element type (line 708)

# Obtaining an instance of the builtin type 'tuple' (line 708)
tuple_79067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 55), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 708)
# Adding element type (line 708)
unicode_79068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 55), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 55), tuple_79067, unicode_79068)
# Adding element type (line 708)
unicode_79069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 61), 'unicode', u'n')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 55), tuple_79067, unicode_79069)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 23), list_79060, tuple_79067)
# Adding element type (line 708)

# Obtaining an instance of the builtin type 'tuple' (line 709)
tuple_79070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 709)
# Adding element type (line 709)
unicode_79071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 709, 25), tuple_79070, unicode_79071)
# Adding element type (line 709)
unicode_79072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 31), 'unicode', u'\xbd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 709, 25), tuple_79070, unicode_79072)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 23), list_79060, tuple_79070)
# Adding element type (line 708)

# Obtaining an instance of the builtin type 'tuple' (line 709)
tuple_79073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 709)
# Adding element type (line 709)
unicode_79074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 709, 41), tuple_79073, unicode_79074)
# Adding element type (line 709)
unicode_79075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 47), 'unicode', u'(')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 709, 41), tuple_79073, unicode_79075)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 708, 23), list_79060, tuple_79073)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79059, list_79060))
# Adding element type (key, value) (line 703)
unicode_79076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 8), 'unicode', u'}')

# Obtaining an instance of the builtin type 'list' (line 710)
list_79077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 710)
# Adding element type (line 710)

# Obtaining an instance of the builtin type 'tuple' (line 710)
tuple_79078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 710)
# Adding element type (line 710)
unicode_79079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 25), 'unicode', u'cal')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 710, 25), tuple_79078, unicode_79079)
# Adding element type (line 710)
unicode_79080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 32), 'unicode', u'}')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 710, 25), tuple_79078, unicode_79080)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 710, 23), list_79077, tuple_79078)
# Adding element type (line 710)

# Obtaining an instance of the builtin type 'tuple' (line 710)
tuple_79081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 39), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 710)
# Adding element type (line 710)
unicode_79082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 39), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 710, 39), tuple_79081, unicode_79082)
# Adding element type (line 710)
unicode_79083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 45), 'unicode', u'\xaa')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 710, 39), tuple_79081, unicode_79083)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 710, 23), list_79077, tuple_79081)
# Adding element type (line 710)

# Obtaining an instance of the builtin type 'tuple' (line 710)
tuple_79084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 55), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 710)
# Adding element type (line 710)
unicode_79085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 55), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 710, 55), tuple_79084, unicode_79085)
# Adding element type (line 710)
unicode_79086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 61), 'unicode', u'o')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 710, 55), tuple_79084, unicode_79086)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 710, 23), list_79077, tuple_79084)
# Adding element type (line 710)

# Obtaining an instance of the builtin type 'tuple' (line 711)
tuple_79087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 711)
# Adding element type (line 711)
unicode_79088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 25), tuple_79087, unicode_79088)
# Adding element type (line 711)
unicode_79089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 31), 'unicode', u'\xbe')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 25), tuple_79087, unicode_79089)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 710, 23), list_79077, tuple_79087)
# Adding element type (line 710)

# Obtaining an instance of the builtin type 'tuple' (line 711)
tuple_79090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 711)
# Adding element type (line 711)
unicode_79091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 41), tuple_79090, unicode_79091)
# Adding element type (line 711)
unicode_79092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 47), 'unicode', u')')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 41), tuple_79090, unicode_79092)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 710, 23), list_79077, tuple_79090)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79076, list_79077))
# Adding element type (key, value) (line 703)
unicode_79093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 8), 'unicode', u'[')

# Obtaining an instance of the builtin type 'list' (line 714)
list_79094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 714)
# Adding element type (line 714)

# Obtaining an instance of the builtin type 'tuple' (line 714)
tuple_79095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 714)
# Adding element type (line 714)
unicode_79096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 25), 'unicode', u'rm')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 25), tuple_79095, unicode_79096)
# Adding element type (line 714)
unicode_79097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 31), 'unicode', u'[')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 25), tuple_79095, unicode_79097)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 23), list_79094, tuple_79095)
# Adding element type (line 714)

# Obtaining an instance of the builtin type 'tuple' (line 714)
tuple_79098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 38), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 714)
# Adding element type (line 714)
unicode_79099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 38), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 38), tuple_79098, unicode_79099)
# Adding element type (line 714)
unicode_79100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 44), 'unicode', u'\xa3')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 38), tuple_79098, unicode_79100)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 23), list_79094, tuple_79098)
# Adding element type (line 714)

# Obtaining an instance of the builtin type 'tuple' (line 714)
tuple_79101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 54), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 714)
# Adding element type (line 714)
unicode_79102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 54), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 54), tuple_79101, unicode_79102)
# Adding element type (line 714)
unicode_79103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 60), 'unicode', u'h')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 54), tuple_79101, unicode_79103)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 23), list_79094, tuple_79101)
# Adding element type (line 714)

# Obtaining an instance of the builtin type 'tuple' (line 715)
tuple_79104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 715, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 715)
# Adding element type (line 715)
unicode_79105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 715, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 715, 25), tuple_79104, unicode_79105)
# Adding element type (line 715)
unicode_79106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 715, 31), 'unicode', u'"')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 715, 25), tuple_79104, unicode_79106)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 23), list_79094, tuple_79104)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79093, list_79094))
# Adding element type (key, value) (line 703)
unicode_79107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 8), 'unicode', u']')

# Obtaining an instance of the builtin type 'list' (line 716)
list_79108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 716)
# Adding element type (line 716)

# Obtaining an instance of the builtin type 'tuple' (line 716)
tuple_79109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 716)
# Adding element type (line 716)
unicode_79110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 25), 'unicode', u'rm')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 25), tuple_79109, unicode_79110)
# Adding element type (line 716)
unicode_79111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 31), 'unicode', u']')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 25), tuple_79109, unicode_79111)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 23), list_79108, tuple_79109)
# Adding element type (line 716)

# Obtaining an instance of the builtin type 'tuple' (line 716)
tuple_79112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 38), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 716)
# Adding element type (line 716)
unicode_79113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 38), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 38), tuple_79112, unicode_79113)
# Adding element type (line 716)
unicode_79114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 44), 'unicode', u'\xa4')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 38), tuple_79112, unicode_79114)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 23), list_79108, tuple_79112)
# Adding element type (line 716)

# Obtaining an instance of the builtin type 'tuple' (line 716)
tuple_79115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 54), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 716)
# Adding element type (line 716)
unicode_79116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 54), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 54), tuple_79115, unicode_79116)
# Adding element type (line 716)
unicode_79117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 60), 'unicode', u'i')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 54), tuple_79115, unicode_79117)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 23), list_79108, tuple_79115)
# Adding element type (line 716)

# Obtaining an instance of the builtin type 'tuple' (line 717)
tuple_79118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 717)
# Adding element type (line 717)
unicode_79119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 717, 25), tuple_79118, unicode_79119)
# Adding element type (line 717)
unicode_79120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 31), 'unicode', u'#')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 717, 25), tuple_79118, unicode_79120)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 23), list_79108, tuple_79118)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79107, list_79108))
# Adding element type (key, value) (line 703)
unicode_79121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 8), 'unicode', u'\\lfloor')

# Obtaining an instance of the builtin type 'list' (line 718)
list_79122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 718)
# Adding element type (line 718)

# Obtaining an instance of the builtin type 'tuple' (line 718)
tuple_79123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 718)
# Adding element type (line 718)
unicode_79124 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 718, 25), tuple_79123, unicode_79124)
# Adding element type (line 718)
unicode_79125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 31), 'unicode', u'\xa5')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 718, 25), tuple_79123, unicode_79125)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 718, 23), list_79122, tuple_79123)
# Adding element type (line 718)

# Obtaining an instance of the builtin type 'tuple' (line 718)
tuple_79126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 718)
# Adding element type (line 718)
unicode_79127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 718, 41), tuple_79126, unicode_79127)
# Adding element type (line 718)
unicode_79128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 47), 'unicode', u'j')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 718, 41), tuple_79126, unicode_79128)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 718, 23), list_79122, tuple_79126)
# Adding element type (line 718)

# Obtaining an instance of the builtin type 'tuple' (line 719)
tuple_79129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 719)
# Adding element type (line 719)
unicode_79130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 719, 25), tuple_79129, unicode_79130)
# Adding element type (line 719)
unicode_79131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 31), 'unicode', u'\xb9')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 719, 25), tuple_79129, unicode_79131)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 718, 23), list_79122, tuple_79129)
# Adding element type (line 718)

# Obtaining an instance of the builtin type 'tuple' (line 719)
tuple_79132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 719)
# Adding element type (line 719)
unicode_79133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 719, 41), tuple_79132, unicode_79133)
# Adding element type (line 719)
unicode_79134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 47), 'unicode', u'$')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 719, 41), tuple_79132, unicode_79134)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 718, 23), list_79122, tuple_79132)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79121, list_79122))
# Adding element type (key, value) (line 703)
unicode_79135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 8), 'unicode', u'\\rfloor')

# Obtaining an instance of the builtin type 'list' (line 720)
list_79136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 720)
# Adding element type (line 720)

# Obtaining an instance of the builtin type 'tuple' (line 720)
tuple_79137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 720)
# Adding element type (line 720)
unicode_79138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 720, 25), tuple_79137, unicode_79138)
# Adding element type (line 720)
unicode_79139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 31), 'unicode', u'\xa6')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 720, 25), tuple_79137, unicode_79139)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 720, 23), list_79136, tuple_79137)
# Adding element type (line 720)

# Obtaining an instance of the builtin type 'tuple' (line 720)
tuple_79140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 720)
# Adding element type (line 720)
unicode_79141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 720, 41), tuple_79140, unicode_79141)
# Adding element type (line 720)
unicode_79142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 47), 'unicode', u'k')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 720, 41), tuple_79140, unicode_79142)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 720, 23), list_79136, tuple_79140)
# Adding element type (line 720)

# Obtaining an instance of the builtin type 'tuple' (line 721)
tuple_79143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 721)
# Adding element type (line 721)
unicode_79144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 721, 25), tuple_79143, unicode_79144)
# Adding element type (line 721)
unicode_79145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 31), 'unicode', u'\xba')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 721, 25), tuple_79143, unicode_79145)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 720, 23), list_79136, tuple_79143)
# Adding element type (line 720)

# Obtaining an instance of the builtin type 'tuple' (line 721)
tuple_79146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 721)
# Adding element type (line 721)
unicode_79147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 721, 41), tuple_79146, unicode_79147)
# Adding element type (line 721)
unicode_79148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 47), 'unicode', u'%')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 721, 41), tuple_79146, unicode_79148)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 720, 23), list_79136, tuple_79146)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79135, list_79136))
# Adding element type (key, value) (line 703)
unicode_79149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 8), 'unicode', u'\\lceil')

# Obtaining an instance of the builtin type 'list' (line 722)
list_79150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 722)
# Adding element type (line 722)

# Obtaining an instance of the builtin type 'tuple' (line 722)
tuple_79151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 722)
# Adding element type (line 722)
unicode_79152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 722, 25), tuple_79151, unicode_79152)
# Adding element type (line 722)
unicode_79153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 31), 'unicode', u'\xa7')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 722, 25), tuple_79151, unicode_79153)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 722, 23), list_79150, tuple_79151)
# Adding element type (line 722)

# Obtaining an instance of the builtin type 'tuple' (line 722)
tuple_79154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 722)
# Adding element type (line 722)
unicode_79155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 722, 41), tuple_79154, unicode_79155)
# Adding element type (line 722)
unicode_79156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 47), 'unicode', u'l')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 722, 41), tuple_79154, unicode_79156)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 722, 23), list_79150, tuple_79154)
# Adding element type (line 722)

# Obtaining an instance of the builtin type 'tuple' (line 723)
tuple_79157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 723, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 723)
# Adding element type (line 723)
unicode_79158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 723, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 723, 25), tuple_79157, unicode_79158)
# Adding element type (line 723)
unicode_79159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 723, 31), 'unicode', u'\xbb')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 723, 25), tuple_79157, unicode_79159)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 722, 23), list_79150, tuple_79157)
# Adding element type (line 722)

# Obtaining an instance of the builtin type 'tuple' (line 723)
tuple_79160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 723, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 723)
# Adding element type (line 723)
unicode_79161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 723, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 723, 41), tuple_79160, unicode_79161)
# Adding element type (line 723)
unicode_79162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 723, 47), 'unicode', u'&')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 723, 41), tuple_79160, unicode_79162)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 722, 23), list_79150, tuple_79160)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79149, list_79150))
# Adding element type (key, value) (line 703)
unicode_79163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 8), 'unicode', u'\\rceil')

# Obtaining an instance of the builtin type 'list' (line 724)
list_79164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 724)
# Adding element type (line 724)

# Obtaining an instance of the builtin type 'tuple' (line 724)
tuple_79165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 724)
# Adding element type (line 724)
unicode_79166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 25), tuple_79165, unicode_79166)
# Adding element type (line 724)
unicode_79167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 31), 'unicode', u'\xa8')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 25), tuple_79165, unicode_79167)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 23), list_79164, tuple_79165)
# Adding element type (line 724)

# Obtaining an instance of the builtin type 'tuple' (line 724)
tuple_79168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 724)
# Adding element type (line 724)
unicode_79169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 41), tuple_79168, unicode_79169)
# Adding element type (line 724)
unicode_79170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 47), 'unicode', u'm')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 41), tuple_79168, unicode_79170)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 23), list_79164, tuple_79168)
# Adding element type (line 724)

# Obtaining an instance of the builtin type 'tuple' (line 725)
tuple_79171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 725)
# Adding element type (line 725)
unicode_79172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 25), tuple_79171, unicode_79172)
# Adding element type (line 725)
unicode_79173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 31), 'unicode', u'\xbc')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 25), tuple_79171, unicode_79173)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 23), list_79164, tuple_79171)
# Adding element type (line 724)

# Obtaining an instance of the builtin type 'tuple' (line 725)
tuple_79174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 725)
# Adding element type (line 725)
unicode_79175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 41), tuple_79174, unicode_79175)
# Adding element type (line 725)
unicode_79176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 47), 'unicode', u"'")
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 41), tuple_79174, unicode_79176)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 23), list_79164, tuple_79174)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79163, list_79164))
# Adding element type (key, value) (line 703)
unicode_79177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 8), 'unicode', u'\\langle')

# Obtaining an instance of the builtin type 'list' (line 726)
list_79178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 726)
# Adding element type (line 726)

# Obtaining an instance of the builtin type 'tuple' (line 726)
tuple_79179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 726)
# Adding element type (line 726)
unicode_79180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 726, 25), tuple_79179, unicode_79180)
# Adding element type (line 726)
unicode_79181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 31), 'unicode', u'\xad')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 726, 25), tuple_79179, unicode_79181)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 726, 23), list_79178, tuple_79179)
# Adding element type (line 726)

# Obtaining an instance of the builtin type 'tuple' (line 726)
tuple_79182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 726)
# Adding element type (line 726)
unicode_79183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 726, 41), tuple_79182, unicode_79183)
# Adding element type (line 726)
unicode_79184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 47), 'unicode', u'D')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 726, 41), tuple_79182, unicode_79184)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 726, 23), list_79178, tuple_79182)
# Adding element type (line 726)

# Obtaining an instance of the builtin type 'tuple' (line 727)
tuple_79185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 727)
# Adding element type (line 727)
unicode_79186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 727, 25), tuple_79185, unicode_79186)
# Adding element type (line 727)
unicode_79187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 31), 'unicode', u'\xbf')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 727, 25), tuple_79185, unicode_79187)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 726, 23), list_79178, tuple_79185)
# Adding element type (line 726)

# Obtaining an instance of the builtin type 'tuple' (line 727)
tuple_79188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 727)
# Adding element type (line 727)
unicode_79189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 727, 41), tuple_79188, unicode_79189)
# Adding element type (line 727)
unicode_79190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 47), 'unicode', u'*')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 727, 41), tuple_79188, unicode_79190)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 726, 23), list_79178, tuple_79188)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79177, list_79178))
# Adding element type (key, value) (line 703)
unicode_79191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 8), 'unicode', u'\\rangle')

# Obtaining an instance of the builtin type 'list' (line 728)
list_79192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 728)
# Adding element type (line 728)

# Obtaining an instance of the builtin type 'tuple' (line 728)
tuple_79193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 728)
# Adding element type (line 728)
unicode_79194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 25), tuple_79193, unicode_79194)
# Adding element type (line 728)
unicode_79195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 31), 'unicode', u'\xae')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 25), tuple_79193, unicode_79195)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 23), list_79192, tuple_79193)
# Adding element type (line 728)

# Obtaining an instance of the builtin type 'tuple' (line 728)
tuple_79196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 728)
# Adding element type (line 728)
unicode_79197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 41), tuple_79196, unicode_79197)
# Adding element type (line 728)
unicode_79198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 47), 'unicode', u'E')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 41), tuple_79196, unicode_79198)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 23), list_79192, tuple_79196)
# Adding element type (line 728)

# Obtaining an instance of the builtin type 'tuple' (line 729)
tuple_79199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 729)
# Adding element type (line 729)
unicode_79200 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 729, 25), tuple_79199, unicode_79200)
# Adding element type (line 729)
unicode_79201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 31), 'unicode', u'\xc0')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 729, 25), tuple_79199, unicode_79201)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 23), list_79192, tuple_79199)
# Adding element type (line 728)

# Obtaining an instance of the builtin type 'tuple' (line 729)
tuple_79202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 729)
# Adding element type (line 729)
unicode_79203 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 729, 41), tuple_79202, unicode_79203)
# Adding element type (line 729)
unicode_79204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 47), 'unicode', u'+')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 729, 41), tuple_79202, unicode_79204)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 23), list_79192, tuple_79202)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79191, list_79192))
# Adding element type (key, value) (line 703)
unicode_79205 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 8), 'unicode', u'\\__sqrt__')

# Obtaining an instance of the builtin type 'list' (line 730)
list_79206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 730)
# Adding element type (line 730)

# Obtaining an instance of the builtin type 'tuple' (line 730)
tuple_79207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 730)
# Adding element type (line 730)
unicode_79208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 25), tuple_79207, unicode_79208)
# Adding element type (line 730)
unicode_79209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 31), 'unicode', u'p')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 25), tuple_79207, unicode_79209)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 23), list_79206, tuple_79207)
# Adding element type (line 730)

# Obtaining an instance of the builtin type 'tuple' (line 730)
tuple_79210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 730)
# Adding element type (line 730)
unicode_79211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 41), tuple_79210, unicode_79211)
# Adding element type (line 730)
unicode_79212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 47), 'unicode', u'q')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 41), tuple_79210, unicode_79212)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 23), list_79206, tuple_79210)
# Adding element type (line 730)

# Obtaining an instance of the builtin type 'tuple' (line 731)
tuple_79213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 731)
# Adding element type (line 731)
unicode_79214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 25), tuple_79213, unicode_79214)
# Adding element type (line 731)
unicode_79215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 31), 'unicode', u'r')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 25), tuple_79213, unicode_79215)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 23), list_79206, tuple_79213)
# Adding element type (line 730)

# Obtaining an instance of the builtin type 'tuple' (line 731)
tuple_79216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 731)
# Adding element type (line 731)
unicode_79217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 41), tuple_79216, unicode_79217)
# Adding element type (line 731)
unicode_79218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 47), 'unicode', u's')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 41), tuple_79216, unicode_79218)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 23), list_79206, tuple_79216)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79205, list_79206))
# Adding element type (key, value) (line 703)
unicode_79219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 8), 'unicode', u'\\backslash')

# Obtaining an instance of the builtin type 'list' (line 732)
list_79220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 732)
# Adding element type (line 732)

# Obtaining an instance of the builtin type 'tuple' (line 732)
tuple_79221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 732)
# Adding element type (line 732)
unicode_79222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 25), tuple_79221, unicode_79222)
# Adding element type (line 732)
unicode_79223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 31), 'unicode', u'\xb2')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 25), tuple_79221, unicode_79223)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 23), list_79220, tuple_79221)
# Adding element type (line 732)

# Obtaining an instance of the builtin type 'tuple' (line 732)
tuple_79224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 732)
# Adding element type (line 732)
unicode_79225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 41), tuple_79224, unicode_79225)
# Adding element type (line 732)
unicode_79226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 47), 'unicode', u'/')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 41), tuple_79224, unicode_79226)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 23), list_79220, tuple_79224)
# Adding element type (line 732)

# Obtaining an instance of the builtin type 'tuple' (line 733)
tuple_79227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 733, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 733)
# Adding element type (line 733)
unicode_79228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 733, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 733, 25), tuple_79227, unicode_79228)
# Adding element type (line 733)
unicode_79229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 733, 31), 'unicode', u'\xc2')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 733, 25), tuple_79227, unicode_79229)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 23), list_79220, tuple_79227)
# Adding element type (line 732)

# Obtaining an instance of the builtin type 'tuple' (line 733)
tuple_79230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 733, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 733)
# Adding element type (line 733)
unicode_79231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 733, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 733, 41), tuple_79230, unicode_79231)
# Adding element type (line 733)
unicode_79232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 733, 47), 'unicode', u'-')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 733, 41), tuple_79230, unicode_79232)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 23), list_79220, tuple_79230)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79219, list_79220))
# Adding element type (key, value) (line 703)
unicode_79233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 8), 'unicode', u'/')

# Obtaining an instance of the builtin type 'list' (line 734)
list_79234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 734)
# Adding element type (line 734)

# Obtaining an instance of the builtin type 'tuple' (line 734)
tuple_79235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 734)
# Adding element type (line 734)
unicode_79236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 25), 'unicode', u'rm')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 25), tuple_79235, unicode_79236)
# Adding element type (line 734)
unicode_79237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 31), 'unicode', u'/')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 25), tuple_79235, unicode_79237)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 23), list_79234, tuple_79235)
# Adding element type (line 734)

# Obtaining an instance of the builtin type 'tuple' (line 734)
tuple_79238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 38), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 734)
# Adding element type (line 734)
unicode_79239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 38), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 38), tuple_79238, unicode_79239)
# Adding element type (line 734)
unicode_79240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 44), 'unicode', u'\xb1')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 38), tuple_79238, unicode_79240)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 23), list_79234, tuple_79238)
# Adding element type (line 734)

# Obtaining an instance of the builtin type 'tuple' (line 734)
tuple_79241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 54), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 734)
# Adding element type (line 734)
unicode_79242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 54), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 54), tuple_79241, unicode_79242)
# Adding element type (line 734)
unicode_79243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 60), 'unicode', u'.')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 54), tuple_79241, unicode_79243)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 23), list_79234, tuple_79241)
# Adding element type (line 734)

# Obtaining an instance of the builtin type 'tuple' (line 735)
tuple_79244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 735, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 735)
# Adding element type (line 735)
unicode_79245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 735, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 735, 25), tuple_79244, unicode_79245)
# Adding element type (line 735)
unicode_79246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 735, 31), 'unicode', u'\xcb')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 735, 25), tuple_79244, unicode_79246)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 23), list_79234, tuple_79244)
# Adding element type (line 734)

# Obtaining an instance of the builtin type 'tuple' (line 735)
tuple_79247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 735, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 735)
# Adding element type (line 735)
unicode_79248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 735, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 735, 41), tuple_79247, unicode_79248)
# Adding element type (line 735)
unicode_79249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 735, 47), 'unicode', u',')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 735, 41), tuple_79247, unicode_79249)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 23), list_79234, tuple_79247)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79233, list_79234))
# Adding element type (key, value) (line 703)
unicode_79250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 8), 'unicode', u'\\widehat')

# Obtaining an instance of the builtin type 'list' (line 736)
list_79251 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 736)
# Adding element type (line 736)

# Obtaining an instance of the builtin type 'tuple' (line 736)
tuple_79252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 736)
# Adding element type (line 736)
unicode_79253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 25), 'unicode', u'rm')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 25), tuple_79252, unicode_79253)
# Adding element type (line 736)
unicode_79254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 31), 'unicode', u'^')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 25), tuple_79252, unicode_79254)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 23), list_79251, tuple_79252)
# Adding element type (line 736)

# Obtaining an instance of the builtin type 'tuple' (line 736)
tuple_79255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 736)
# Adding element type (line 736)
unicode_79256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 41), tuple_79255, unicode_79256)
# Adding element type (line 736)
unicode_79257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 47), 'unicode', u'b')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 41), tuple_79255, unicode_79257)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 23), list_79251, tuple_79255)
# Adding element type (line 736)

# Obtaining an instance of the builtin type 'tuple' (line 736)
tuple_79258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 57), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 736)
# Adding element type (line 736)
unicode_79259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 57), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 57), tuple_79258, unicode_79259)
# Adding element type (line 736)
unicode_79260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 63), 'unicode', u'c')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 57), tuple_79258, unicode_79260)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 23), list_79251, tuple_79258)
# Adding element type (line 736)

# Obtaining an instance of the builtin type 'tuple' (line 737)
tuple_79261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 737, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 737)
# Adding element type (line 737)
unicode_79262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 737, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 737, 25), tuple_79261, unicode_79262)
# Adding element type (line 737)
unicode_79263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 737, 31), 'unicode', u'd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 737, 25), tuple_79261, unicode_79263)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 23), list_79251, tuple_79261)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79250, list_79251))
# Adding element type (key, value) (line 703)
unicode_79264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 8), 'unicode', u'\\widetilde')

# Obtaining an instance of the builtin type 'list' (line 738)
list_79265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 738)
# Adding element type (line 738)

# Obtaining an instance of the builtin type 'tuple' (line 738)
tuple_79266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 738)
# Adding element type (line 738)
unicode_79267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 25), 'unicode', u'rm')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 25), tuple_79266, unicode_79267)
# Adding element type (line 738)
unicode_79268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 31), 'unicode', u'~')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 25), tuple_79266, unicode_79268)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 23), list_79265, tuple_79266)
# Adding element type (line 738)

# Obtaining an instance of the builtin type 'tuple' (line 738)
tuple_79269 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 738)
# Adding element type (line 738)
unicode_79270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 41), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 41), tuple_79269, unicode_79270)
# Adding element type (line 738)
unicode_79271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 47), 'unicode', u'e')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 41), tuple_79269, unicode_79271)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 23), list_79265, tuple_79269)
# Adding element type (line 738)

# Obtaining an instance of the builtin type 'tuple' (line 738)
tuple_79272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 57), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 738)
# Adding element type (line 738)
unicode_79273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 57), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 57), tuple_79272, unicode_79273)
# Adding element type (line 738)
unicode_79274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 63), 'unicode', u'f')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 57), tuple_79272, unicode_79274)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 23), list_79265, tuple_79272)
# Adding element type (line 738)

# Obtaining an instance of the builtin type 'tuple' (line 739)
tuple_79275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 739, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 739)
# Adding element type (line 739)
unicode_79276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 739, 25), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 739, 25), tuple_79275, unicode_79276)
# Adding element type (line 739)
unicode_79277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 739, 31), 'unicode', u'g')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 739, 25), tuple_79275, unicode_79277)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 23), list_79265, tuple_79275)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79264, list_79265))
# Adding element type (key, value) (line 703)
unicode_79278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 8), 'unicode', u'<')

# Obtaining an instance of the builtin type 'list' (line 740)
list_79279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 740)
# Adding element type (line 740)

# Obtaining an instance of the builtin type 'tuple' (line 740)
tuple_79280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 740)
# Adding element type (line 740)
unicode_79281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 25), 'unicode', u'cal')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 740, 25), tuple_79280, unicode_79281)
# Adding element type (line 740)
unicode_79282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 32), 'unicode', u'h')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 740, 25), tuple_79280, unicode_79282)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 740, 23), list_79279, tuple_79280)
# Adding element type (line 740)

# Obtaining an instance of the builtin type 'tuple' (line 740)
tuple_79283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 39), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 740)
# Adding element type (line 740)
unicode_79284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 39), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 740, 39), tuple_79283, unicode_79284)
# Adding element type (line 740)
unicode_79285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 45), 'unicode', u'D')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 740, 39), tuple_79283, unicode_79285)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 740, 23), list_79279, tuple_79283)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79278, list_79279))
# Adding element type (key, value) (line 703)
unicode_79286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 741, 8), 'unicode', u'>')

# Obtaining an instance of the builtin type 'list' (line 741)
list_79287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 741, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 741)
# Adding element type (line 741)

# Obtaining an instance of the builtin type 'tuple' (line 741)
tuple_79288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 741, 25), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 741)
# Adding element type (line 741)
unicode_79289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 741, 25), 'unicode', u'cal')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 741, 25), tuple_79288, unicode_79289)
# Adding element type (line 741)
unicode_79290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 741, 32), 'unicode', u'i')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 741, 25), tuple_79288, unicode_79290)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 741, 23), list_79287, tuple_79288)
# Adding element type (line 741)

# Obtaining an instance of the builtin type 'tuple' (line 741)
tuple_79291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 741, 39), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 741)
# Adding element type (line 741)
unicode_79292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 741, 39), 'unicode', u'ex')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 741, 39), tuple_79291, unicode_79292)
# Adding element type (line 741)
unicode_79293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 741, 45), 'unicode', u'E')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 741, 39), tuple_79291, unicode_79293)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 741, 23), list_79287, tuple_79291)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 25), dict_79024, (unicode_79286, list_79287))

# Getting the type of 'BakomaFonts'
BakomaFonts_79294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'BakomaFonts')
# Setting the type of the member '_size_alternatives' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), BakomaFonts_79294, '_size_alternatives', dict_79024)
# Declaration of the 'UnicodeFonts' class
# Getting the type of 'TruetypeFonts' (line 759)
TruetypeFonts_79295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 19), 'TruetypeFonts')

class UnicodeFonts(TruetypeFonts_79295, ):
    unicode_79296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 769, (-1)), 'unicode', u'\n    An abstract base class for handling Unicode fonts.\n\n    While some reasonably complete Unicode fonts (such as DejaVu) may\n    work in some situations, the only Unicode font I\'m aware of with a\n    complete set of math symbols is STIX.\n\n    This class will "fallback" on the Bakoma fonts when a required\n    symbol can not be found in the font.\n    ')
    
    # Assigning a Name to a Name (line 770):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 772, 4, False)
        # Assigning a type to the variable 'self' (line 773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 773, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnicodeFonts.__init__', [], 'args', 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        
        # Obtaining the type of the subscript
        unicode_79297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 20), 'unicode', u'mathtext.fallback_to_cm')
        # Getting the type of 'rcParams' (line 774)
        rcParams_79298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 11), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 774)
        getitem___79299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 774, 11), rcParams_79298, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 774)
        subscript_call_result_79300 = invoke(stypy.reporting.localization.Localization(__file__, 774, 11), getitem___79299, unicode_79297)
        
        # Testing the type of an if condition (line 774)
        if_condition_79301 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 774, 8), subscript_call_result_79300)
        # Assigning a type to the variable 'if_condition_79301' (line 774)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 774, 8), 'if_condition_79301', if_condition_79301)
        # SSA begins for if statement (line 774)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 775):
        
        # Assigning a Call to a Attribute (line 775):
        
        # Call to BakomaFonts(...): (line 775)
        # Getting the type of 'args' (line 775)
        args_79303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 44), 'args', False)
        # Processing the call keyword arguments (line 775)
        # Getting the type of 'kwargs' (line 775)
        kwargs_79304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 52), 'kwargs', False)
        kwargs_79305 = {'kwargs_79304': kwargs_79304}
        # Getting the type of 'BakomaFonts' (line 775)
        BakomaFonts_79302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 31), 'BakomaFonts', False)
        # Calling BakomaFonts(args, kwargs) (line 775)
        BakomaFonts_call_result_79306 = invoke(stypy.reporting.localization.Localization(__file__, 775, 31), BakomaFonts_79302, *[args_79303], **kwargs_79305)
        
        # Getting the type of 'self' (line 775)
        self_79307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 12), 'self')
        # Setting the type of the member 'cm_fallback' of a type (line 775)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 775, 12), self_79307, 'cm_fallback', BakomaFonts_call_result_79306)
        # SSA branch for the else part of an if statement (line 774)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Attribute (line 777):
        
        # Assigning a Name to a Attribute (line 777):
        # Getting the type of 'None' (line 777)
        None_79308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 31), 'None')
        # Getting the type of 'self' (line 777)
        self_79309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 12), 'self')
        # Setting the type of the member 'cm_fallback' of a type (line 777)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 12), self_79309, 'cm_fallback', None_79308)
        # SSA join for if statement (line 774)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to __init__(...): (line 778)
        # Processing the call arguments (line 778)
        # Getting the type of 'self' (line 778)
        self_79312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 31), 'self', False)
        # Getting the type of 'args' (line 778)
        args_79313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 38), 'args', False)
        # Processing the call keyword arguments (line 778)
        # Getting the type of 'kwargs' (line 778)
        kwargs_79314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 46), 'kwargs', False)
        kwargs_79315 = {'kwargs_79314': kwargs_79314}
        # Getting the type of 'TruetypeFonts' (line 778)
        TruetypeFonts_79310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 8), 'TruetypeFonts', False)
        # Obtaining the member '__init__' of a type (line 778)
        init___79311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 8), TruetypeFonts_79310, '__init__')
        # Calling __init__(args, kwargs) (line 778)
        init___call_result_79316 = invoke(stypy.reporting.localization.Localization(__file__, 778, 8), init___79311, *[self_79312, args_79313], **kwargs_79315)
        
        
        # Assigning a Dict to a Attribute (line 779):
        
        # Assigning a Dict to a Attribute (line 779):
        
        # Obtaining an instance of the builtin type 'dict' (line 779)
        dict_79317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 779, 23), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 779)
        
        # Getting the type of 'self' (line 779)
        self_79318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 8), 'self')
        # Setting the type of the member 'fontmap' of a type (line 779)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 779, 8), self_79318, 'fontmap', dict_79317)
        
        
        # Call to split(...): (line 780)
        # Processing the call keyword arguments (line 780)
        kwargs_79321 = {}
        unicode_79319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 780, 23), 'unicode', u'cal rm tt it bf sf')
        # Obtaining the member 'split' of a type (line 780)
        split_79320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 23), unicode_79319, 'split')
        # Calling split(args, kwargs) (line 780)
        split_call_result_79322 = invoke(stypy.reporting.localization.Localization(__file__, 780, 23), split_79320, *[], **kwargs_79321)
        
        # Testing the type of a for loop iterable (line 780)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 780, 8), split_call_result_79322)
        # Getting the type of the for loop variable (line 780)
        for_loop_var_79323 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 780, 8), split_call_result_79322)
        # Assigning a type to the variable 'texfont' (line 780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 8), 'texfont', for_loop_var_79323)
        # SSA begins for a for statement (line 780)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Subscript to a Name (line 781):
        
        # Assigning a Subscript to a Name (line 781):
        
        # Obtaining the type of the subscript
        unicode_79324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 781, 28), 'unicode', u'mathtext.')
        # Getting the type of 'texfont' (line 781)
        texfont_79325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 42), 'texfont')
        # Applying the binary operator '+' (line 781)
        result_add_79326 = python_operator(stypy.reporting.localization.Localization(__file__, 781, 28), '+', unicode_79324, texfont_79325)
        
        # Getting the type of 'rcParams' (line 781)
        rcParams_79327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 19), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 781)
        getitem___79328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 781, 19), rcParams_79327, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 781)
        subscript_call_result_79329 = invoke(stypy.reporting.localization.Localization(__file__, 781, 19), getitem___79328, result_add_79326)
        
        # Assigning a type to the variable 'prop' (line 781)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 781, 12), 'prop', subscript_call_result_79329)
        
        # Assigning a Call to a Name (line 782):
        
        # Assigning a Call to a Name (line 782):
        
        # Call to findfont(...): (line 782)
        # Processing the call arguments (line 782)
        # Getting the type of 'prop' (line 782)
        prop_79331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 28), 'prop', False)
        # Processing the call keyword arguments (line 782)
        kwargs_79332 = {}
        # Getting the type of 'findfont' (line 782)
        findfont_79330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 19), 'findfont', False)
        # Calling findfont(args, kwargs) (line 782)
        findfont_call_result_79333 = invoke(stypy.reporting.localization.Localization(__file__, 782, 19), findfont_79330, *[prop_79331], **kwargs_79332)
        
        # Assigning a type to the variable 'font' (line 782)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 782, 12), 'font', findfont_call_result_79333)
        
        # Assigning a Name to a Subscript (line 783):
        
        # Assigning a Name to a Subscript (line 783):
        # Getting the type of 'font' (line 783)
        font_79334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 36), 'font')
        # Getting the type of 'self' (line 783)
        self_79335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 12), 'self')
        # Obtaining the member 'fontmap' of a type (line 783)
        fontmap_79336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 783, 12), self_79335, 'fontmap')
        # Getting the type of 'texfont' (line 783)
        texfont_79337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 25), 'texfont')
        # Storing an element on a container (line 783)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 783, 12), fontmap_79336, (texfont_79337, font_79334))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 784):
        
        # Assigning a Call to a Name (line 784):
        
        # Call to FontProperties(...): (line 784)
        # Processing the call arguments (line 784)
        unicode_79339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 784, 30), 'unicode', u'cmex10')
        # Processing the call keyword arguments (line 784)
        kwargs_79340 = {}
        # Getting the type of 'FontProperties' (line 784)
        FontProperties_79338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 15), 'FontProperties', False)
        # Calling FontProperties(args, kwargs) (line 784)
        FontProperties_call_result_79341 = invoke(stypy.reporting.localization.Localization(__file__, 784, 15), FontProperties_79338, *[unicode_79339], **kwargs_79340)
        
        # Assigning a type to the variable 'prop' (line 784)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 784, 8), 'prop', FontProperties_call_result_79341)
        
        # Assigning a Call to a Name (line 785):
        
        # Assigning a Call to a Name (line 785):
        
        # Call to findfont(...): (line 785)
        # Processing the call arguments (line 785)
        # Getting the type of 'prop' (line 785)
        prop_79343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 24), 'prop', False)
        # Processing the call keyword arguments (line 785)
        kwargs_79344 = {}
        # Getting the type of 'findfont' (line 785)
        findfont_79342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 15), 'findfont', False)
        # Calling findfont(args, kwargs) (line 785)
        findfont_call_result_79345 = invoke(stypy.reporting.localization.Localization(__file__, 785, 15), findfont_79342, *[prop_79343], **kwargs_79344)
        
        # Assigning a type to the variable 'font' (line 785)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 785, 8), 'font', findfont_call_result_79345)
        
        # Assigning a Name to a Subscript (line 786):
        
        # Assigning a Name to a Subscript (line 786):
        # Getting the type of 'font' (line 786)
        font_79346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 29), 'font')
        # Getting the type of 'self' (line 786)
        self_79347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 8), 'self')
        # Obtaining the member 'fontmap' of a type (line 786)
        fontmap_79348 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 8), self_79347, 'fontmap')
        unicode_79349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 21), 'unicode', u'ex')
        # Storing an element on a container (line 786)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 786, 8), fontmap_79348, (unicode_79349, font_79346))
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()

    
    # Assigning a Call to a Name (line 788):

    @norecursion
    def _map_virtual_font(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_map_virtual_font'
        module_type_store = module_type_store.open_function_context('_map_virtual_font', 790, 4, False)
        # Assigning a type to the variable 'self' (line 791)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 791, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        UnicodeFonts._map_virtual_font.__dict__.__setitem__('stypy_localization', localization)
        UnicodeFonts._map_virtual_font.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        UnicodeFonts._map_virtual_font.__dict__.__setitem__('stypy_type_store', module_type_store)
        UnicodeFonts._map_virtual_font.__dict__.__setitem__('stypy_function_name', 'UnicodeFonts._map_virtual_font')
        UnicodeFonts._map_virtual_font.__dict__.__setitem__('stypy_param_names_list', ['fontname', 'font_class', 'uniindex'])
        UnicodeFonts._map_virtual_font.__dict__.__setitem__('stypy_varargs_param_name', None)
        UnicodeFonts._map_virtual_font.__dict__.__setitem__('stypy_kwargs_param_name', None)
        UnicodeFonts._map_virtual_font.__dict__.__setitem__('stypy_call_defaults', defaults)
        UnicodeFonts._map_virtual_font.__dict__.__setitem__('stypy_call_varargs', varargs)
        UnicodeFonts._map_virtual_font.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        UnicodeFonts._map_virtual_font.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnicodeFonts._map_virtual_font', ['fontname', 'font_class', 'uniindex'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_map_virtual_font', localization, ['fontname', 'font_class', 'uniindex'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_map_virtual_font(...)' code ##################

        
        # Obtaining an instance of the builtin type 'tuple' (line 791)
        tuple_79350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 791, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 791)
        # Adding element type (line 791)
        # Getting the type of 'fontname' (line 791)
        fontname_79351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 791, 15), 'fontname')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 791, 15), tuple_79350, fontname_79351)
        # Adding element type (line 791)
        # Getting the type of 'uniindex' (line 791)
        uniindex_79352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 791, 25), 'uniindex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 791, 15), tuple_79350, uniindex_79352)
        
        # Assigning a type to the variable 'stypy_return_type' (line 791)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 791, 8), 'stypy_return_type', tuple_79350)
        
        # ################# End of '_map_virtual_font(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_map_virtual_font' in the type store
        # Getting the type of 'stypy_return_type' (line 790)
        stypy_return_type_79353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_79353)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_map_virtual_font'
        return stypy_return_type_79353


    @norecursion
    def _get_glyph(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'True' (line 793)
        True_79354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 67), 'True')
        defaults = [True_79354]
        # Create a new context for function '_get_glyph'
        module_type_store = module_type_store.open_function_context('_get_glyph', 793, 4, False)
        # Assigning a type to the variable 'self' (line 794)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 794, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        UnicodeFonts._get_glyph.__dict__.__setitem__('stypy_localization', localization)
        UnicodeFonts._get_glyph.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        UnicodeFonts._get_glyph.__dict__.__setitem__('stypy_type_store', module_type_store)
        UnicodeFonts._get_glyph.__dict__.__setitem__('stypy_function_name', 'UnicodeFonts._get_glyph')
        UnicodeFonts._get_glyph.__dict__.__setitem__('stypy_param_names_list', ['fontname', 'font_class', 'sym', 'fontsize', 'math'])
        UnicodeFonts._get_glyph.__dict__.__setitem__('stypy_varargs_param_name', None)
        UnicodeFonts._get_glyph.__dict__.__setitem__('stypy_kwargs_param_name', None)
        UnicodeFonts._get_glyph.__dict__.__setitem__('stypy_call_defaults', defaults)
        UnicodeFonts._get_glyph.__dict__.__setitem__('stypy_call_varargs', varargs)
        UnicodeFonts._get_glyph.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        UnicodeFonts._get_glyph.__dict__.__setitem__('stypy_declared_arg_number', 6)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnicodeFonts._get_glyph', ['fontname', 'font_class', 'sym', 'fontsize', 'math'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_glyph', localization, ['fontname', 'font_class', 'sym', 'fontsize', 'math'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_glyph(...)' code ##################

        
        # Assigning a Name to a Name (line 794):
        
        # Assigning a Name to a Name (line 794):
        # Getting the type of 'False' (line 794)
        False_79355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 23), 'False')
        # Assigning a type to the variable 'found_symbol' (line 794)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 794, 8), 'found_symbol', False_79355)
        
        # Getting the type of 'self' (line 796)
        self_79356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 11), 'self')
        # Obtaining the member 'use_cmex' of a type (line 796)
        use_cmex_79357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 796, 11), self_79356, 'use_cmex')
        # Testing the type of an if condition (line 796)
        if_condition_79358 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 796, 8), use_cmex_79357)
        # Assigning a type to the variable 'if_condition_79358' (line 796)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 796, 8), 'if_condition_79358', if_condition_79358)
        # SSA begins for if statement (line 796)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 797):
        
        # Assigning a Call to a Name (line 797):
        
        # Call to get(...): (line 797)
        # Processing the call arguments (line 797)
        # Getting the type of 'sym' (line 797)
        sym_79361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 41), 'sym', False)
        # Processing the call keyword arguments (line 797)
        kwargs_79362 = {}
        # Getting the type of 'latex_to_cmex' (line 797)
        latex_to_cmex_79359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 23), 'latex_to_cmex', False)
        # Obtaining the member 'get' of a type (line 797)
        get_79360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 797, 23), latex_to_cmex_79359, 'get')
        # Calling get(args, kwargs) (line 797)
        get_call_result_79363 = invoke(stypy.reporting.localization.Localization(__file__, 797, 23), get_79360, *[sym_79361], **kwargs_79362)
        
        # Assigning a type to the variable 'uniindex' (line 797)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 797, 12), 'uniindex', get_call_result_79363)
        
        # Type idiom detected: calculating its left and rigth part (line 798)
        # Getting the type of 'uniindex' (line 798)
        uniindex_79364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 12), 'uniindex')
        # Getting the type of 'None' (line 798)
        None_79365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 31), 'None')
        
        (may_be_79366, more_types_in_union_79367) = may_not_be_none(uniindex_79364, None_79365)

        if may_be_79366:

            if more_types_in_union_79367:
                # Runtime conditional SSA (line 798)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Str to a Name (line 799):
            
            # Assigning a Str to a Name (line 799):
            unicode_79368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 799, 27), 'unicode', u'ex')
            # Assigning a type to the variable 'fontname' (line 799)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 799, 16), 'fontname', unicode_79368)
            
            # Assigning a Name to a Name (line 800):
            
            # Assigning a Name to a Name (line 800):
            # Getting the type of 'True' (line 800)
            True_79369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 31), 'True')
            # Assigning a type to the variable 'found_symbol' (line 800)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 800, 16), 'found_symbol', True_79369)

            if more_types_in_union_79367:
                # SSA join for if statement (line 798)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA join for if statement (line 796)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'found_symbol' (line 802)
        found_symbol_79370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 15), 'found_symbol')
        # Applying the 'not' unary operator (line 802)
        result_not__79371 = python_operator(stypy.reporting.localization.Localization(__file__, 802, 11), 'not', found_symbol_79370)
        
        # Testing the type of an if condition (line 802)
        if_condition_79372 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 802, 8), result_not__79371)
        # Assigning a type to the variable 'if_condition_79372' (line 802)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 8), 'if_condition_79372', if_condition_79372)
        # SSA begins for if statement (line 802)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # SSA begins for try-except statement (line 803)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Call to a Name (line 804):
        
        # Assigning a Call to a Name (line 804):
        
        # Call to get_unicode_index(...): (line 804)
        # Processing the call arguments (line 804)
        # Getting the type of 'sym' (line 804)
        sym_79374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 45), 'sym', False)
        # Getting the type of 'math' (line 804)
        math_79375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 50), 'math', False)
        # Processing the call keyword arguments (line 804)
        kwargs_79376 = {}
        # Getting the type of 'get_unicode_index' (line 804)
        get_unicode_index_79373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 27), 'get_unicode_index', False)
        # Calling get_unicode_index(args, kwargs) (line 804)
        get_unicode_index_call_result_79377 = invoke(stypy.reporting.localization.Localization(__file__, 804, 27), get_unicode_index_79373, *[sym_79374, math_79375], **kwargs_79376)
        
        # Assigning a type to the variable 'uniindex' (line 804)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 804, 16), 'uniindex', get_unicode_index_call_result_79377)
        
        # Assigning a Name to a Name (line 805):
        
        # Assigning a Name to a Name (line 805):
        # Getting the type of 'True' (line 805)
        True_79378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 31), 'True')
        # Assigning a type to the variable 'found_symbol' (line 805)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 805, 16), 'found_symbol', True_79378)
        # SSA branch for the except part of a try statement (line 803)
        # SSA branch for the except 'ValueError' branch of a try statement (line 803)
        module_type_store.open_ssa_branch('except')
        
        # Assigning a Call to a Name (line 807):
        
        # Assigning a Call to a Name (line 807):
        
        # Call to ord(...): (line 807)
        # Processing the call arguments (line 807)
        unicode_79380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 807, 31), 'unicode', u'?')
        # Processing the call keyword arguments (line 807)
        kwargs_79381 = {}
        # Getting the type of 'ord' (line 807)
        ord_79379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 807, 27), 'ord', False)
        # Calling ord(args, kwargs) (line 807)
        ord_call_result_79382 = invoke(stypy.reporting.localization.Localization(__file__, 807, 27), ord_79379, *[unicode_79380], **kwargs_79381)
        
        # Assigning a type to the variable 'uniindex' (line 807)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 807, 16), 'uniindex', ord_call_result_79382)
        
        # Call to warn(...): (line 808)
        # Processing the call arguments (line 808)
        unicode_79384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 808, 21), 'unicode', u"No TeX to unicode mapping for '%s'")
        
        # Call to encode(...): (line 809)
        # Processing the call arguments (line 809)
        unicode_79387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 809, 32), 'unicode', u'ascii')
        unicode_79388 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 809, 41), 'unicode', u'backslashreplace')
        # Processing the call keyword arguments (line 809)
        kwargs_79389 = {}
        # Getting the type of 'sym' (line 809)
        sym_79385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 21), 'sym', False)
        # Obtaining the member 'encode' of a type (line 809)
        encode_79386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 809, 21), sym_79385, 'encode')
        # Calling encode(args, kwargs) (line 809)
        encode_call_result_79390 = invoke(stypy.reporting.localization.Localization(__file__, 809, 21), encode_79386, *[unicode_79387, unicode_79388], **kwargs_79389)
        
        # Applying the binary operator '%' (line 808)
        result_mod_79391 = python_operator(stypy.reporting.localization.Localization(__file__, 808, 21), '%', unicode_79384, encode_call_result_79390)
        
        # Getting the type of 'MathTextWarning' (line 810)
        MathTextWarning_79392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 21), 'MathTextWarning', False)
        # Processing the call keyword arguments (line 808)
        kwargs_79393 = {}
        # Getting the type of 'warn' (line 808)
        warn_79383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 16), 'warn', False)
        # Calling warn(args, kwargs) (line 808)
        warn_call_result_79394 = invoke(stypy.reporting.localization.Localization(__file__, 808, 16), warn_79383, *[result_mod_79391, MathTextWarning_79392], **kwargs_79393)
        
        # SSA join for try-except statement (line 803)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 802)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Tuple (line 812):
        
        # Assigning a Call to a Name:
        
        # Call to _map_virtual_font(...): (line 812)
        # Processing the call arguments (line 812)
        # Getting the type of 'fontname' (line 813)
        fontname_79397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 12), 'fontname', False)
        # Getting the type of 'font_class' (line 813)
        font_class_79398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 22), 'font_class', False)
        # Getting the type of 'uniindex' (line 813)
        uniindex_79399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 34), 'uniindex', False)
        # Processing the call keyword arguments (line 812)
        kwargs_79400 = {}
        # Getting the type of 'self' (line 812)
        self_79395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 29), 'self', False)
        # Obtaining the member '_map_virtual_font' of a type (line 812)
        _map_virtual_font_79396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 812, 29), self_79395, '_map_virtual_font')
        # Calling _map_virtual_font(args, kwargs) (line 812)
        _map_virtual_font_call_result_79401 = invoke(stypy.reporting.localization.Localization(__file__, 812, 29), _map_virtual_font_79396, *[fontname_79397, font_class_79398, uniindex_79399], **kwargs_79400)
        
        # Assigning a type to the variable 'call_assignment_77290' (line 812)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 812, 8), 'call_assignment_77290', _map_virtual_font_call_result_79401)
        
        # Assigning a Call to a Name (line 812):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_79404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 8), 'int')
        # Processing the call keyword arguments
        kwargs_79405 = {}
        # Getting the type of 'call_assignment_77290' (line 812)
        call_assignment_77290_79402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 8), 'call_assignment_77290', False)
        # Obtaining the member '__getitem__' of a type (line 812)
        getitem___79403 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 812, 8), call_assignment_77290_79402, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_79406 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___79403, *[int_79404], **kwargs_79405)
        
        # Assigning a type to the variable 'call_assignment_77291' (line 812)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 812, 8), 'call_assignment_77291', getitem___call_result_79406)
        
        # Assigning a Name to a Name (line 812):
        # Getting the type of 'call_assignment_77291' (line 812)
        call_assignment_77291_79407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 8), 'call_assignment_77291')
        # Assigning a type to the variable 'fontname' (line 812)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 812, 8), 'fontname', call_assignment_77291_79407)
        
        # Assigning a Call to a Name (line 812):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_79410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 8), 'int')
        # Processing the call keyword arguments
        kwargs_79411 = {}
        # Getting the type of 'call_assignment_77290' (line 812)
        call_assignment_77290_79408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 8), 'call_assignment_77290', False)
        # Obtaining the member '__getitem__' of a type (line 812)
        getitem___79409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 812, 8), call_assignment_77290_79408, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_79412 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___79409, *[int_79410], **kwargs_79411)
        
        # Assigning a type to the variable 'call_assignment_77292' (line 812)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 812, 8), 'call_assignment_77292', getitem___call_result_79412)
        
        # Assigning a Name to a Name (line 812):
        # Getting the type of 'call_assignment_77292' (line 812)
        call_assignment_77292_79413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 8), 'call_assignment_77292')
        # Assigning a type to the variable 'uniindex' (line 812)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 812, 18), 'uniindex', call_assignment_77292_79413)
        
        # Assigning a Name to a Name (line 815):
        
        # Assigning a Name to a Name (line 815):
        # Getting the type of 'fontname' (line 815)
        fontname_79414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 23), 'fontname')
        # Assigning a type to the variable 'new_fontname' (line 815)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 815, 8), 'new_fontname', fontname_79414)
        
        # Getting the type of 'found_symbol' (line 819)
        found_symbol_79415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 11), 'found_symbol')
        # Testing the type of an if condition (line 819)
        if_condition_79416 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 819, 8), found_symbol_79415)
        # Assigning a type to the variable 'if_condition_79416' (line 819)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 819, 8), 'if_condition_79416', if_condition_79416)
        # SSA begins for if statement (line 819)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'fontname' (line 820)
        fontname_79417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 15), 'fontname')
        unicode_79418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 820, 27), 'unicode', u'it')
        # Applying the binary operator '==' (line 820)
        result_eq_79419 = python_operator(stypy.reporting.localization.Localization(__file__, 820, 15), '==', fontname_79417, unicode_79418)
        
        # Testing the type of an if condition (line 820)
        if_condition_79420 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 820, 12), result_eq_79419)
        # Assigning a type to the variable 'if_condition_79420' (line 820)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 820, 12), 'if_condition_79420', if_condition_79420)
        # SSA begins for if statement (line 820)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'uniindex' (line 821)
        uniindex_79421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 19), 'uniindex')
        int_79422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 821, 30), 'int')
        # Applying the binary operator '<' (line 821)
        result_lt_79423 = python_operator(stypy.reporting.localization.Localization(__file__, 821, 19), '<', uniindex_79421, int_79422)
        
        # Testing the type of an if condition (line 821)
        if_condition_79424 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 821, 16), result_lt_79423)
        # Assigning a type to the variable 'if_condition_79424' (line 821)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 821, 16), 'if_condition_79424', if_condition_79424)
        # SSA begins for if statement (line 821)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 822):
        
        # Assigning a Call to a Name (line 822):
        
        # Call to unichr(...): (line 822)
        # Processing the call arguments (line 822)
        # Getting the type of 'uniindex' (line 822)
        uniindex_79426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 39), 'uniindex', False)
        # Processing the call keyword arguments (line 822)
        kwargs_79427 = {}
        # Getting the type of 'unichr' (line 822)
        unichr_79425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 32), 'unichr', False)
        # Calling unichr(args, kwargs) (line 822)
        unichr_call_result_79428 = invoke(stypy.reporting.localization.Localization(__file__, 822, 32), unichr_79425, *[uniindex_79426], **kwargs_79427)
        
        # Assigning a type to the variable 'unistring' (line 822)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 822, 20), 'unistring', unichr_call_result_79428)
        
        
        # Evaluating a boolean operation
        
        
        
        # Obtaining the type of the subscript
        int_79429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 823, 60), 'int')
        
        # Call to category(...): (line 823)
        # Processing the call arguments (line 823)
        # Getting the type of 'unistring' (line 823)
        unistring_79432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 49), 'unistring', False)
        # Processing the call keyword arguments (line 823)
        kwargs_79433 = {}
        # Getting the type of 'unicodedata' (line 823)
        unicodedata_79430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 28), 'unicodedata', False)
        # Obtaining the member 'category' of a type (line 823)
        category_79431 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 823, 28), unicodedata_79430, 'category')
        # Calling category(args, kwargs) (line 823)
        category_call_result_79434 = invoke(stypy.reporting.localization.Localization(__file__, 823, 28), category_79431, *[unistring_79432], **kwargs_79433)
        
        # Obtaining the member '__getitem__' of a type (line 823)
        getitem___79435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 823, 28), category_call_result_79434, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 823)
        subscript_call_result_79436 = invoke(stypy.reporting.localization.Localization(__file__, 823, 28), getitem___79435, int_79429)
        
        unicode_79437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 823, 66), 'unicode', u'L')
        # Applying the binary operator '==' (line 823)
        result_eq_79438 = python_operator(stypy.reporting.localization.Localization(__file__, 823, 28), '==', subscript_call_result_79436, unicode_79437)
        
        # Applying the 'not' unary operator (line 823)
        result_not__79439 = python_operator(stypy.reporting.localization.Localization(__file__, 823, 24), 'not', result_eq_79438)
        
        
        # Call to startswith(...): (line 824)
        # Processing the call arguments (line 824)
        unicode_79446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 824, 66), 'unicode', u'GREEK CAPITAL')
        # Processing the call keyword arguments (line 824)
        kwargs_79447 = {}
        
        # Call to name(...): (line 824)
        # Processing the call arguments (line 824)
        # Getting the type of 'unistring' (line 824)
        unistring_79442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 824, 44), 'unistring', False)
        # Processing the call keyword arguments (line 824)
        kwargs_79443 = {}
        # Getting the type of 'unicodedata' (line 824)
        unicodedata_79440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 824, 27), 'unicodedata', False)
        # Obtaining the member 'name' of a type (line 824)
        name_79441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 824, 27), unicodedata_79440, 'name')
        # Calling name(args, kwargs) (line 824)
        name_call_result_79444 = invoke(stypy.reporting.localization.Localization(__file__, 824, 27), name_79441, *[unistring_79442], **kwargs_79443)
        
        # Obtaining the member 'startswith' of a type (line 824)
        startswith_79445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 824, 27), name_call_result_79444, 'startswith')
        # Calling startswith(args, kwargs) (line 824)
        startswith_call_result_79448 = invoke(stypy.reporting.localization.Localization(__file__, 824, 27), startswith_79445, *[unicode_79446], **kwargs_79447)
        
        # Applying the binary operator 'or' (line 823)
        result_or_keyword_79449 = python_operator(stypy.reporting.localization.Localization(__file__, 823, 24), 'or', result_not__79439, startswith_call_result_79448)
        
        # Testing the type of an if condition (line 823)
        if_condition_79450 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 823, 20), result_or_keyword_79449)
        # Assigning a type to the variable 'if_condition_79450' (line 823)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 823, 20), 'if_condition_79450', if_condition_79450)
        # SSA begins for if statement (line 823)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Str to a Name (line 825):
        
        # Assigning a Str to a Name (line 825):
        unicode_79451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 39), 'unicode', u'rm')
        # Assigning a type to the variable 'new_fontname' (line 825)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 825, 24), 'new_fontname', unicode_79451)
        # SSA join for if statement (line 823)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 821)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 820)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BoolOp to a Name (line 827):
        
        # Assigning a BoolOp to a Name (line 827):
        
        # Evaluating a boolean operation
        
        # Getting the type of 'new_fontname' (line 827)
        new_fontname_79452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 23), 'new_fontname')
        unicode_79453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 39), 'unicode', u'it')
        # Applying the binary operator '==' (line 827)
        result_eq_79454 = python_operator(stypy.reporting.localization.Localization(__file__, 827, 23), '==', new_fontname_79452, unicode_79453)
        
        
        # Getting the type of 'sym' (line 827)
        sym_79455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 48), 'sym')
        # Getting the type of 'self' (line 827)
        self_79456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 55), 'self')
        # Obtaining the member '_slanted_symbols' of a type (line 827)
        _slanted_symbols_79457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 827, 55), self_79456, '_slanted_symbols')
        # Applying the binary operator 'in' (line 827)
        result_contains_79458 = python_operator(stypy.reporting.localization.Localization(__file__, 827, 48), 'in', sym_79455, _slanted_symbols_79457)
        
        # Applying the binary operator 'or' (line 827)
        result_or_keyword_79459 = python_operator(stypy.reporting.localization.Localization(__file__, 827, 22), 'or', result_eq_79454, result_contains_79458)
        
        # Assigning a type to the variable 'slanted' (line 827)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 827, 12), 'slanted', result_or_keyword_79459)
        
        # Assigning a Name to a Name (line 828):
        
        # Assigning a Name to a Name (line 828):
        # Getting the type of 'False' (line 828)
        False_79460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 27), 'False')
        # Assigning a type to the variable 'found_symbol' (line 828)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 828, 12), 'found_symbol', False_79460)
        
        # Assigning a Call to a Name (line 829):
        
        # Assigning a Call to a Name (line 829):
        
        # Call to _get_font(...): (line 829)
        # Processing the call arguments (line 829)
        # Getting the type of 'new_fontname' (line 829)
        new_fontname_79463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 34), 'new_fontname', False)
        # Processing the call keyword arguments (line 829)
        kwargs_79464 = {}
        # Getting the type of 'self' (line 829)
        self_79461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 19), 'self', False)
        # Obtaining the member '_get_font' of a type (line 829)
        _get_font_79462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 829, 19), self_79461, '_get_font')
        # Calling _get_font(args, kwargs) (line 829)
        _get_font_call_result_79465 = invoke(stypy.reporting.localization.Localization(__file__, 829, 19), _get_font_79462, *[new_fontname_79463], **kwargs_79464)
        
        # Assigning a type to the variable 'font' (line 829)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 829, 12), 'font', _get_font_call_result_79465)
        
        # Type idiom detected: calculating its left and rigth part (line 830)
        # Getting the type of 'font' (line 830)
        font_79466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 12), 'font')
        # Getting the type of 'None' (line 830)
        None_79467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 27), 'None')
        
        (may_be_79468, more_types_in_union_79469) = may_not_be_none(font_79466, None_79467)

        if may_be_79468:

            if more_types_in_union_79469:
                # Runtime conditional SSA (line 830)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 831):
            
            # Assigning a Call to a Name (line 831):
            
            # Call to get_char_index(...): (line 831)
            # Processing the call arguments (line 831)
            # Getting the type of 'uniindex' (line 831)
            uniindex_79472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 49), 'uniindex', False)
            # Processing the call keyword arguments (line 831)
            kwargs_79473 = {}
            # Getting the type of 'font' (line 831)
            font_79470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 29), 'font', False)
            # Obtaining the member 'get_char_index' of a type (line 831)
            get_char_index_79471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 831, 29), font_79470, 'get_char_index')
            # Calling get_char_index(args, kwargs) (line 831)
            get_char_index_call_result_79474 = invoke(stypy.reporting.localization.Localization(__file__, 831, 29), get_char_index_79471, *[uniindex_79472], **kwargs_79473)
            
            # Assigning a type to the variable 'glyphindex' (line 831)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 831, 16), 'glyphindex', get_char_index_call_result_79474)
            
            
            # Getting the type of 'glyphindex' (line 832)
            glyphindex_79475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 19), 'glyphindex')
            int_79476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 33), 'int')
            # Applying the binary operator '!=' (line 832)
            result_ne_79477 = python_operator(stypy.reporting.localization.Localization(__file__, 832, 19), '!=', glyphindex_79475, int_79476)
            
            # Testing the type of an if condition (line 832)
            if_condition_79478 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 832, 16), result_ne_79477)
            # Assigning a type to the variable 'if_condition_79478' (line 832)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 832, 16), 'if_condition_79478', if_condition_79478)
            # SSA begins for if statement (line 832)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Name to a Name (line 833):
            
            # Assigning a Name to a Name (line 833):
            # Getting the type of 'True' (line 833)
            True_79479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 35), 'True')
            # Assigning a type to the variable 'found_symbol' (line 833)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 20), 'found_symbol', True_79479)
            # SSA join for if statement (line 832)
            module_type_store = module_type_store.join_ssa_context()
            

            if more_types_in_union_79469:
                # SSA join for if statement (line 830)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA join for if statement (line 819)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'found_symbol' (line 835)
        found_symbol_79480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 15), 'found_symbol')
        # Applying the 'not' unary operator (line 835)
        result_not__79481 = python_operator(stypy.reporting.localization.Localization(__file__, 835, 11), 'not', found_symbol_79480)
        
        # Testing the type of an if condition (line 835)
        if_condition_79482 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 835, 8), result_not__79481)
        # Assigning a type to the variable 'if_condition_79482' (line 835)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 8), 'if_condition_79482', if_condition_79482)
        # SSA begins for if statement (line 835)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'self' (line 836)
        self_79483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 15), 'self')
        # Obtaining the member 'cm_fallback' of a type (line 836)
        cm_fallback_79484 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 15), self_79483, 'cm_fallback')
        # Testing the type of an if condition (line 836)
        if_condition_79485 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 836, 12), cm_fallback_79484)
        # Assigning a type to the variable 'if_condition_79485' (line 836)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 836, 12), 'if_condition_79485', if_condition_79485)
        # SSA begins for if statement (line 836)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Call to isinstance(...): (line 837)
        # Processing the call arguments (line 837)
        # Getting the type of 'self' (line 837)
        self_79487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 30), 'self', False)
        # Obtaining the member 'cm_fallback' of a type (line 837)
        cm_fallback_79488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 837, 30), self_79487, 'cm_fallback')
        # Getting the type of 'BakomaFonts' (line 837)
        BakomaFonts_79489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 48), 'BakomaFonts', False)
        # Processing the call keyword arguments (line 837)
        kwargs_79490 = {}
        # Getting the type of 'isinstance' (line 837)
        isinstance_79486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 19), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 837)
        isinstance_call_result_79491 = invoke(stypy.reporting.localization.Localization(__file__, 837, 19), isinstance_79486, *[cm_fallback_79488, BakomaFonts_79489], **kwargs_79490)
        
        # Testing the type of an if condition (line 837)
        if_condition_79492 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 837, 16), isinstance_call_result_79491)
        # Assigning a type to the variable 'if_condition_79492' (line 837)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 837, 16), 'if_condition_79492', if_condition_79492)
        # SSA begins for if statement (line 837)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to warn(...): (line 838)
        # Processing the call arguments (line 838)
        unicode_79494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 25), 'unicode', u'Substituting with a symbol from Computer Modern.')
        # Getting the type of 'MathTextWarning' (line 839)
        MathTextWarning_79495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 25), 'MathTextWarning', False)
        # Processing the call keyword arguments (line 838)
        kwargs_79496 = {}
        # Getting the type of 'warn' (line 838)
        warn_79493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 20), 'warn', False)
        # Calling warn(args, kwargs) (line 838)
        warn_call_result_79497 = invoke(stypy.reporting.localization.Localization(__file__, 838, 20), warn_79493, *[unicode_79494, MathTextWarning_79495], **kwargs_79496)
        
        # SSA join for if statement (line 837)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'fontname' (line 840)
        fontname_79498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 20), 'fontname')
        
        # Obtaining an instance of the builtin type 'tuple' (line 840)
        tuple_79499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 840, 33), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 840)
        # Adding element type (line 840)
        unicode_79500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 840, 33), 'unicode', u'it')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 840, 33), tuple_79499, unicode_79500)
        # Adding element type (line 840)
        unicode_79501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 840, 39), 'unicode', u'regular')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 840, 33), tuple_79499, unicode_79501)
        
        # Applying the binary operator 'in' (line 840)
        result_contains_79502 = python_operator(stypy.reporting.localization.Localization(__file__, 840, 20), 'in', fontname_79498, tuple_79499)
        
        
        # Call to isinstance(...): (line 841)
        # Processing the call arguments (line 841)
        # Getting the type of 'self' (line 841)
        self_79504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 35), 'self', False)
        # Obtaining the member 'cm_fallback' of a type (line 841)
        cm_fallback_79505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 35), self_79504, 'cm_fallback')
        # Getting the type of 'StixFonts' (line 841)
        StixFonts_79506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 53), 'StixFonts', False)
        # Processing the call keyword arguments (line 841)
        kwargs_79507 = {}
        # Getting the type of 'isinstance' (line 841)
        isinstance_79503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 24), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 841)
        isinstance_call_result_79508 = invoke(stypy.reporting.localization.Localization(__file__, 841, 24), isinstance_79503, *[cm_fallback_79505, StixFonts_79506], **kwargs_79507)
        
        # Applying the binary operator 'and' (line 840)
        result_and_keyword_79509 = python_operator(stypy.reporting.localization.Localization(__file__, 840, 20), 'and', result_contains_79502, isinstance_call_result_79508)
        
        # Testing the type of an if condition (line 840)
        if_condition_79510 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 840, 16), result_and_keyword_79509)
        # Assigning a type to the variable 'if_condition_79510' (line 840)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 840, 16), 'if_condition_79510', if_condition_79510)
        # SSA begins for if statement (line 840)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to _get_glyph(...): (line 842)
        # Processing the call arguments (line 842)
        unicode_79514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 28), 'unicode', u'rm')
        # Getting the type of 'font_class' (line 843)
        font_class_79515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 34), 'font_class', False)
        # Getting the type of 'sym' (line 843)
        sym_79516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 46), 'sym', False)
        # Getting the type of 'fontsize' (line 843)
        fontsize_79517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 51), 'fontsize', False)
        # Processing the call keyword arguments (line 842)
        kwargs_79518 = {}
        # Getting the type of 'self' (line 842)
        self_79511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 27), 'self', False)
        # Obtaining the member 'cm_fallback' of a type (line 842)
        cm_fallback_79512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 842, 27), self_79511, 'cm_fallback')
        # Obtaining the member '_get_glyph' of a type (line 842)
        _get_glyph_79513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 842, 27), cm_fallback_79512, '_get_glyph')
        # Calling _get_glyph(args, kwargs) (line 842)
        _get_glyph_call_result_79519 = invoke(stypy.reporting.localization.Localization(__file__, 842, 27), _get_glyph_79513, *[unicode_79514, font_class_79515, sym_79516, fontsize_79517], **kwargs_79518)
        
        # Assigning a type to the variable 'stypy_return_type' (line 842)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 842, 20), 'stypy_return_type', _get_glyph_call_result_79519)
        # SSA branch for the else part of an if statement (line 840)
        module_type_store.open_ssa_branch('else')
        
        # Call to _get_glyph(...): (line 845)
        # Processing the call arguments (line 845)
        # Getting the type of 'fontname' (line 846)
        fontname_79523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 24), 'fontname', False)
        # Getting the type of 'font_class' (line 846)
        font_class_79524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 34), 'font_class', False)
        # Getting the type of 'sym' (line 846)
        sym_79525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 46), 'sym', False)
        # Getting the type of 'fontsize' (line 846)
        fontsize_79526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 51), 'fontsize', False)
        # Processing the call keyword arguments (line 845)
        kwargs_79527 = {}
        # Getting the type of 'self' (line 845)
        self_79520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 27), 'self', False)
        # Obtaining the member 'cm_fallback' of a type (line 845)
        cm_fallback_79521 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 845, 27), self_79520, 'cm_fallback')
        # Obtaining the member '_get_glyph' of a type (line 845)
        _get_glyph_79522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 845, 27), cm_fallback_79521, '_get_glyph')
        # Calling _get_glyph(args, kwargs) (line 845)
        _get_glyph_call_result_79528 = invoke(stypy.reporting.localization.Localization(__file__, 845, 27), _get_glyph_79522, *[fontname_79523, font_class_79524, sym_79525, fontsize_79526], **kwargs_79527)
        
        # Assigning a type to the variable 'stypy_return_type' (line 845)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 845, 20), 'stypy_return_type', _get_glyph_call_result_79528)
        # SSA join for if statement (line 840)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 836)
        module_type_store.open_ssa_branch('else')
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'fontname' (line 848)
        fontname_79529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 19), 'fontname')
        
        # Obtaining an instance of the builtin type 'tuple' (line 848)
        tuple_79530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 848, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 848)
        # Adding element type (line 848)
        unicode_79531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 848, 32), 'unicode', u'it')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 848, 32), tuple_79530, unicode_79531)
        # Adding element type (line 848)
        unicode_79532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 848, 38), 'unicode', u'regular')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 848, 32), tuple_79530, unicode_79532)
        
        # Applying the binary operator 'in' (line 848)
        result_contains_79533 = python_operator(stypy.reporting.localization.Localization(__file__, 848, 19), 'in', fontname_79529, tuple_79530)
        
        
        # Call to isinstance(...): (line 848)
        # Processing the call arguments (line 848)
        # Getting the type of 'self' (line 848)
        self_79535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 64), 'self', False)
        # Getting the type of 'StixFonts' (line 848)
        StixFonts_79536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 70), 'StixFonts', False)
        # Processing the call keyword arguments (line 848)
        kwargs_79537 = {}
        # Getting the type of 'isinstance' (line 848)
        isinstance_79534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 53), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 848)
        isinstance_call_result_79538 = invoke(stypy.reporting.localization.Localization(__file__, 848, 53), isinstance_79534, *[self_79535, StixFonts_79536], **kwargs_79537)
        
        # Applying the binary operator 'and' (line 848)
        result_and_keyword_79539 = python_operator(stypy.reporting.localization.Localization(__file__, 848, 19), 'and', result_contains_79533, isinstance_call_result_79538)
        
        # Testing the type of an if condition (line 848)
        if_condition_79540 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 848, 16), result_and_keyword_79539)
        # Assigning a type to the variable 'if_condition_79540' (line 848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 16), 'if_condition_79540', if_condition_79540)
        # SSA begins for if statement (line 848)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to _get_glyph(...): (line 849)
        # Processing the call arguments (line 849)
        unicode_79543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 43), 'unicode', u'rm')
        # Getting the type of 'font_class' (line 849)
        font_class_79544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 49), 'font_class', False)
        # Getting the type of 'sym' (line 849)
        sym_79545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 61), 'sym', False)
        # Getting the type of 'fontsize' (line 849)
        fontsize_79546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 66), 'fontsize', False)
        # Processing the call keyword arguments (line 849)
        kwargs_79547 = {}
        # Getting the type of 'self' (line 849)
        self_79541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 27), 'self', False)
        # Obtaining the member '_get_glyph' of a type (line 849)
        _get_glyph_79542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 849, 27), self_79541, '_get_glyph')
        # Calling _get_glyph(args, kwargs) (line 849)
        _get_glyph_call_result_79548 = invoke(stypy.reporting.localization.Localization(__file__, 849, 27), _get_glyph_79542, *[unicode_79543, font_class_79544, sym_79545, fontsize_79546], **kwargs_79547)
        
        # Assigning a type to the variable 'stypy_return_type' (line 849)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 20), 'stypy_return_type', _get_glyph_call_result_79548)
        # SSA join for if statement (line 848)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to warn(...): (line 850)
        # Processing the call arguments (line 850)
        unicode_79550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 850, 21), 'unicode', u"Font '%s' does not have a glyph for '%s' [U+%x]")
        
        # Obtaining an instance of the builtin type 'tuple' (line 851)
        tuple_79551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 851, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 851)
        # Adding element type (line 851)
        # Getting the type of 'new_fontname' (line 851)
        new_fontname_79552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 22), 'new_fontname', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 851, 22), tuple_79551, new_fontname_79552)
        # Adding element type (line 851)
        
        # Call to decode(...): (line 852)
        # Processing the call arguments (line 852)
        unicode_79560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 69), 'unicode', u'ascii')
        # Processing the call keyword arguments (line 852)
        kwargs_79561 = {}
        
        # Call to encode(...): (line 852)
        # Processing the call arguments (line 852)
        unicode_79555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 33), 'unicode', u'ascii')
        unicode_79556 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 42), 'unicode', u'backslashreplace')
        # Processing the call keyword arguments (line 852)
        kwargs_79557 = {}
        # Getting the type of 'sym' (line 852)
        sym_79553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 22), 'sym', False)
        # Obtaining the member 'encode' of a type (line 852)
        encode_79554 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 852, 22), sym_79553, 'encode')
        # Calling encode(args, kwargs) (line 852)
        encode_call_result_79558 = invoke(stypy.reporting.localization.Localization(__file__, 852, 22), encode_79554, *[unicode_79555, unicode_79556], **kwargs_79557)
        
        # Obtaining the member 'decode' of a type (line 852)
        decode_79559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 852, 22), encode_call_result_79558, 'decode')
        # Calling decode(args, kwargs) (line 852)
        decode_call_result_79562 = invoke(stypy.reporting.localization.Localization(__file__, 852, 22), decode_79559, *[unicode_79560], **kwargs_79561)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 851, 22), tuple_79551, decode_call_result_79562)
        # Adding element type (line 851)
        # Getting the type of 'uniindex' (line 853)
        uniindex_79563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 22), 'uniindex', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 851, 22), tuple_79551, uniindex_79563)
        
        # Applying the binary operator '%' (line 850)
        result_mod_79564 = python_operator(stypy.reporting.localization.Localization(__file__, 850, 21), '%', unicode_79550, tuple_79551)
        
        # Getting the type of 'MathTextWarning' (line 854)
        MathTextWarning_79565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 21), 'MathTextWarning', False)
        # Processing the call keyword arguments (line 850)
        kwargs_79566 = {}
        # Getting the type of 'warn' (line 850)
        warn_79549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 16), 'warn', False)
        # Calling warn(args, kwargs) (line 850)
        warn_call_result_79567 = invoke(stypy.reporting.localization.Localization(__file__, 850, 16), warn_79549, *[result_mod_79564, MathTextWarning_79565], **kwargs_79566)
        
        
        # Call to warn(...): (line 855)
        # Processing the call arguments (line 855)
        unicode_79569 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 855, 21), 'unicode', u'Substituting with a dummy symbol.')
        # Getting the type of 'MathTextWarning' (line 855)
        MathTextWarning_79570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 58), 'MathTextWarning', False)
        # Processing the call keyword arguments (line 855)
        kwargs_79571 = {}
        # Getting the type of 'warn' (line 855)
        warn_79568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 16), 'warn', False)
        # Calling warn(args, kwargs) (line 855)
        warn_call_result_79572 = invoke(stypy.reporting.localization.Localization(__file__, 855, 16), warn_79568, *[unicode_79569, MathTextWarning_79570], **kwargs_79571)
        
        
        # Assigning a Str to a Name (line 856):
        
        # Assigning a Str to a Name (line 856):
        unicode_79573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 856, 27), 'unicode', u'rm')
        # Assigning a type to the variable 'fontname' (line 856)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 856, 16), 'fontname', unicode_79573)
        
        # Assigning a Name to a Name (line 857):
        
        # Assigning a Name to a Name (line 857):
        # Getting the type of 'fontname' (line 857)
        fontname_79574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 31), 'fontname')
        # Assigning a type to the variable 'new_fontname' (line 857)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 857, 16), 'new_fontname', fontname_79574)
        
        # Assigning a Call to a Name (line 858):
        
        # Assigning a Call to a Name (line 858):
        
        # Call to _get_font(...): (line 858)
        # Processing the call arguments (line 858)
        # Getting the type of 'fontname' (line 858)
        fontname_79577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 38), 'fontname', False)
        # Processing the call keyword arguments (line 858)
        kwargs_79578 = {}
        # Getting the type of 'self' (line 858)
        self_79575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 23), 'self', False)
        # Obtaining the member '_get_font' of a type (line 858)
        _get_font_79576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 858, 23), self_79575, '_get_font')
        # Calling _get_font(args, kwargs) (line 858)
        _get_font_call_result_79579 = invoke(stypy.reporting.localization.Localization(__file__, 858, 23), _get_font_79576, *[fontname_79577], **kwargs_79578)
        
        # Assigning a type to the variable 'font' (line 858)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 858, 16), 'font', _get_font_call_result_79579)
        
        # Assigning a Num to a Name (line 859):
        
        # Assigning a Num to a Name (line 859):
        int_79580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 27), 'int')
        # Assigning a type to the variable 'uniindex' (line 859)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 859, 16), 'uniindex', int_79580)
        
        # Assigning a Call to a Name (line 860):
        
        # Assigning a Call to a Name (line 860):
        
        # Call to get_char_index(...): (line 860)
        # Processing the call arguments (line 860)
        # Getting the type of 'uniindex' (line 860)
        uniindex_79583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 49), 'uniindex', False)
        # Processing the call keyword arguments (line 860)
        kwargs_79584 = {}
        # Getting the type of 'font' (line 860)
        font_79581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 29), 'font', False)
        # Obtaining the member 'get_char_index' of a type (line 860)
        get_char_index_79582 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 860, 29), font_79581, 'get_char_index')
        # Calling get_char_index(args, kwargs) (line 860)
        get_char_index_call_result_79585 = invoke(stypy.reporting.localization.Localization(__file__, 860, 29), get_char_index_79582, *[uniindex_79583], **kwargs_79584)
        
        # Assigning a type to the variable 'glyphindex' (line 860)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 860, 16), 'glyphindex', get_char_index_call_result_79585)
        
        # Assigning a Name to a Name (line 861):
        
        # Assigning a Name to a Name (line 861):
        # Getting the type of 'False' (line 861)
        False_79586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 26), 'False')
        # Assigning a type to the variable 'slanted' (line 861)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 861, 16), 'slanted', False_79586)
        # SSA join for if statement (line 836)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 835)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 863):
        
        # Assigning a Call to a Name (line 863):
        
        # Call to get_glyph_name(...): (line 863)
        # Processing the call arguments (line 863)
        # Getting the type of 'glyphindex' (line 863)
        glyphindex_79589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 42), 'glyphindex', False)
        # Processing the call keyword arguments (line 863)
        kwargs_79590 = {}
        # Getting the type of 'font' (line 863)
        font_79587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 22), 'font', False)
        # Obtaining the member 'get_glyph_name' of a type (line 863)
        get_glyph_name_79588 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 22), font_79587, 'get_glyph_name')
        # Calling get_glyph_name(args, kwargs) (line 863)
        get_glyph_name_call_result_79591 = invoke(stypy.reporting.localization.Localization(__file__, 863, 22), get_glyph_name_79588, *[glyphindex_79589], **kwargs_79590)
        
        # Assigning a type to the variable 'symbol_name' (line 863)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 863, 8), 'symbol_name', get_glyph_name_call_result_79591)
        
        # Obtaining an instance of the builtin type 'tuple' (line 864)
        tuple_79592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 864, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 864)
        # Adding element type (line 864)
        # Getting the type of 'font' (line 864)
        font_79593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 15), 'font')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 864, 15), tuple_79592, font_79593)
        # Adding element type (line 864)
        # Getting the type of 'uniindex' (line 864)
        uniindex_79594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 21), 'uniindex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 864, 15), tuple_79592, uniindex_79594)
        # Adding element type (line 864)
        # Getting the type of 'symbol_name' (line 864)
        symbol_name_79595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 31), 'symbol_name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 864, 15), tuple_79592, symbol_name_79595)
        # Adding element type (line 864)
        # Getting the type of 'fontsize' (line 864)
        fontsize_79596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 44), 'fontsize')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 864, 15), tuple_79592, fontsize_79596)
        # Adding element type (line 864)
        # Getting the type of 'slanted' (line 864)
        slanted_79597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 54), 'slanted')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 864, 15), tuple_79592, slanted_79597)
        
        # Assigning a type to the variable 'stypy_return_type' (line 864)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 864, 8), 'stypy_return_type', tuple_79592)
        
        # ################# End of '_get_glyph(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_glyph' in the type store
        # Getting the type of 'stypy_return_type' (line 793)
        stypy_return_type_79598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_79598)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_glyph'
        return stypy_return_type_79598


    @norecursion
    def get_sized_alternatives_for_symbol(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_sized_alternatives_for_symbol'
        module_type_store = module_type_store.open_function_context('get_sized_alternatives_for_symbol', 866, 4, False)
        # Assigning a type to the variable 'self' (line 867)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 867, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        UnicodeFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_localization', localization)
        UnicodeFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        UnicodeFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_type_store', module_type_store)
        UnicodeFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_function_name', 'UnicodeFonts.get_sized_alternatives_for_symbol')
        UnicodeFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_param_names_list', ['fontname', 'sym'])
        UnicodeFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_varargs_param_name', None)
        UnicodeFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_kwargs_param_name', None)
        UnicodeFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_call_defaults', defaults)
        UnicodeFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_call_varargs', varargs)
        UnicodeFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        UnicodeFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnicodeFonts.get_sized_alternatives_for_symbol', ['fontname', 'sym'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_sized_alternatives_for_symbol', localization, ['fontname', 'sym'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_sized_alternatives_for_symbol(...)' code ##################

        
        # Getting the type of 'self' (line 867)
        self_79599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 11), 'self')
        # Obtaining the member 'cm_fallback' of a type (line 867)
        cm_fallback_79600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 867, 11), self_79599, 'cm_fallback')
        # Testing the type of an if condition (line 867)
        if_condition_79601 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 867, 8), cm_fallback_79600)
        # Assigning a type to the variable 'if_condition_79601' (line 867)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 867, 8), 'if_condition_79601', if_condition_79601)
        # SSA begins for if statement (line 867)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to get_sized_alternatives_for_symbol(...): (line 868)
        # Processing the call arguments (line 868)
        # Getting the type of 'fontname' (line 869)
        fontname_79605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 16), 'fontname', False)
        # Getting the type of 'sym' (line 869)
        sym_79606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 26), 'sym', False)
        # Processing the call keyword arguments (line 868)
        kwargs_79607 = {}
        # Getting the type of 'self' (line 868)
        self_79602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 19), 'self', False)
        # Obtaining the member 'cm_fallback' of a type (line 868)
        cm_fallback_79603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 868, 19), self_79602, 'cm_fallback')
        # Obtaining the member 'get_sized_alternatives_for_symbol' of a type (line 868)
        get_sized_alternatives_for_symbol_79604 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 868, 19), cm_fallback_79603, 'get_sized_alternatives_for_symbol')
        # Calling get_sized_alternatives_for_symbol(args, kwargs) (line 868)
        get_sized_alternatives_for_symbol_call_result_79608 = invoke(stypy.reporting.localization.Localization(__file__, 868, 19), get_sized_alternatives_for_symbol_79604, *[fontname_79605, sym_79606], **kwargs_79607)
        
        # Assigning a type to the variable 'stypy_return_type' (line 868)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 868, 12), 'stypy_return_type', get_sized_alternatives_for_symbol_call_result_79608)
        # SSA join for if statement (line 867)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining an instance of the builtin type 'list' (line 870)
        list_79609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 870, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 870)
        # Adding element type (line 870)
        
        # Obtaining an instance of the builtin type 'tuple' (line 870)
        tuple_79610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 870, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 870)
        # Adding element type (line 870)
        # Getting the type of 'fontname' (line 870)
        fontname_79611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 17), 'fontname')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 870, 17), tuple_79610, fontname_79611)
        # Adding element type (line 870)
        # Getting the type of 'sym' (line 870)
        sym_79612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 27), 'sym')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 870, 17), tuple_79610, sym_79612)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 870, 15), list_79609, tuple_79610)
        
        # Assigning a type to the variable 'stypy_return_type' (line 870)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 870, 8), 'stypy_return_type', list_79609)
        
        # ################# End of 'get_sized_alternatives_for_symbol(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_sized_alternatives_for_symbol' in the type store
        # Getting the type of 'stypy_return_type' (line 866)
        stypy_return_type_79613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_79613)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_sized_alternatives_for_symbol'
        return stypy_return_type_79613


# Assigning a type to the variable 'UnicodeFonts' (line 759)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 759, 0), 'UnicodeFonts', UnicodeFonts)

# Assigning a Name to a Name (line 770):
# Getting the type of 'True' (line 770)
True_79614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 15), 'True')
# Getting the type of 'UnicodeFonts'
UnicodeFonts_79615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'UnicodeFonts')
# Setting the type of the member 'use_cmex' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), UnicodeFonts_79615, 'use_cmex', True_79614)

# Assigning a Call to a Name (line 788):

# Call to set(...): (line 788)
# Processing the call arguments (line 788)

# Call to split(...): (line 788)
# Processing the call keyword arguments (line 788)
kwargs_79619 = {}
unicode_79617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 788, 27), 'unicode', u'\\int \\oint')
# Obtaining the member 'split' of a type (line 788)
split_79618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 788, 27), unicode_79617, 'split')
# Calling split(args, kwargs) (line 788)
split_call_result_79620 = invoke(stypy.reporting.localization.Localization(__file__, 788, 27), split_79618, *[], **kwargs_79619)

# Processing the call keyword arguments (line 788)
kwargs_79621 = {}
# Getting the type of 'set' (line 788)
set_79616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 23), 'set', False)
# Calling set(args, kwargs) (line 788)
set_call_result_79622 = invoke(stypy.reporting.localization.Localization(__file__, 788, 23), set_79616, *[split_call_result_79620], **kwargs_79621)

# Getting the type of 'UnicodeFonts'
UnicodeFonts_79623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'UnicodeFonts')
# Setting the type of the member '_slanted_symbols' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), UnicodeFonts_79623, '_slanted_symbols', set_call_result_79622)
# Declaration of the 'DejaVuFonts' class
# Getting the type of 'UnicodeFonts' (line 873)
UnicodeFonts_79624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 18), 'UnicodeFonts')

class DejaVuFonts(UnicodeFonts_79624, ):
    
    # Assigning a Name to a Name (line 874):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 876, 4, False)
        # Assigning a type to the variable 'self' (line 877)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 877, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DejaVuFonts.__init__', [], 'args', 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        
        # Call to isinstance(...): (line 878)
        # Processing the call arguments (line 878)
        # Getting the type of 'self' (line 878)
        self_79626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 22), 'self', False)
        # Getting the type of 'DejaVuSerifFonts' (line 878)
        DejaVuSerifFonts_79627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 28), 'DejaVuSerifFonts', False)
        # Processing the call keyword arguments (line 878)
        kwargs_79628 = {}
        # Getting the type of 'isinstance' (line 878)
        isinstance_79625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 878)
        isinstance_call_result_79629 = invoke(stypy.reporting.localization.Localization(__file__, 878, 11), isinstance_79625, *[self_79626, DejaVuSerifFonts_79627], **kwargs_79628)
        
        # Testing the type of an if condition (line 878)
        if_condition_79630 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 878, 8), isinstance_call_result_79629)
        # Assigning a type to the variable 'if_condition_79630' (line 878)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 878, 8), 'if_condition_79630', if_condition_79630)
        # SSA begins for if statement (line 878)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 879):
        
        # Assigning a Call to a Attribute (line 879):
        
        # Call to StixFonts(...): (line 879)
        # Getting the type of 'args' (line 879)
        args_79632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 42), 'args', False)
        # Processing the call keyword arguments (line 879)
        # Getting the type of 'kwargs' (line 879)
        kwargs_79633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 50), 'kwargs', False)
        kwargs_79634 = {'kwargs_79633': kwargs_79633}
        # Getting the type of 'StixFonts' (line 879)
        StixFonts_79631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 31), 'StixFonts', False)
        # Calling StixFonts(args, kwargs) (line 879)
        StixFonts_call_result_79635 = invoke(stypy.reporting.localization.Localization(__file__, 879, 31), StixFonts_79631, *[args_79632], **kwargs_79634)
        
        # Getting the type of 'self' (line 879)
        self_79636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 12), 'self')
        # Setting the type of the member 'cm_fallback' of a type (line 879)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 879, 12), self_79636, 'cm_fallback', StixFonts_call_result_79635)
        # SSA branch for the else part of an if statement (line 878)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Attribute (line 881):
        
        # Assigning a Call to a Attribute (line 881):
        
        # Call to StixSansFonts(...): (line 881)
        # Getting the type of 'args' (line 881)
        args_79638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 46), 'args', False)
        # Processing the call keyword arguments (line 881)
        # Getting the type of 'kwargs' (line 881)
        kwargs_79639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 54), 'kwargs', False)
        kwargs_79640 = {'kwargs_79639': kwargs_79639}
        # Getting the type of 'StixSansFonts' (line 881)
        StixSansFonts_79637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 31), 'StixSansFonts', False)
        # Calling StixSansFonts(args, kwargs) (line 881)
        StixSansFonts_call_result_79641 = invoke(stypy.reporting.localization.Localization(__file__, 881, 31), StixSansFonts_79637, *[args_79638], **kwargs_79640)
        
        # Getting the type of 'self' (line 881)
        self_79642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 12), 'self')
        # Setting the type of the member 'cm_fallback' of a type (line 881)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 881, 12), self_79642, 'cm_fallback', StixSansFonts_call_result_79641)
        # SSA join for if statement (line 878)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Attribute (line 882):
        
        # Assigning a Call to a Attribute (line 882):
        
        # Call to BakomaFonts(...): (line 882)
        # Getting the type of 'args' (line 882)
        args_79644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 35), 'args', False)
        # Processing the call keyword arguments (line 882)
        # Getting the type of 'kwargs' (line 882)
        kwargs_79645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 43), 'kwargs', False)
        kwargs_79646 = {'kwargs_79645': kwargs_79645}
        # Getting the type of 'BakomaFonts' (line 882)
        BakomaFonts_79643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 22), 'BakomaFonts', False)
        # Calling BakomaFonts(args, kwargs) (line 882)
        BakomaFonts_call_result_79647 = invoke(stypy.reporting.localization.Localization(__file__, 882, 22), BakomaFonts_79643, *[args_79644], **kwargs_79646)
        
        # Getting the type of 'self' (line 882)
        self_79648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 8), 'self')
        # Setting the type of the member 'bakoma' of a type (line 882)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 882, 8), self_79648, 'bakoma', BakomaFonts_call_result_79647)
        
        # Call to __init__(...): (line 883)
        # Processing the call arguments (line 883)
        # Getting the type of 'self' (line 883)
        self_79651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 31), 'self', False)
        # Getting the type of 'args' (line 883)
        args_79652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 38), 'args', False)
        # Processing the call keyword arguments (line 883)
        # Getting the type of 'kwargs' (line 883)
        kwargs_79653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 46), 'kwargs', False)
        kwargs_79654 = {'kwargs_79653': kwargs_79653}
        # Getting the type of 'TruetypeFonts' (line 883)
        TruetypeFonts_79649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'TruetypeFonts', False)
        # Obtaining the member '__init__' of a type (line 883)
        init___79650 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 883, 8), TruetypeFonts_79649, '__init__')
        # Calling __init__(args, kwargs) (line 883)
        init___call_result_79655 = invoke(stypy.reporting.localization.Localization(__file__, 883, 8), init___79650, *[self_79651, args_79652], **kwargs_79654)
        
        
        # Assigning a Dict to a Attribute (line 884):
        
        # Assigning a Dict to a Attribute (line 884):
        
        # Obtaining an instance of the builtin type 'dict' (line 884)
        dict_79656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 884, 23), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 884)
        
        # Getting the type of 'self' (line 884)
        self_79657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 8), 'self')
        # Setting the type of the member 'fontmap' of a type (line 884)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 884, 8), self_79657, 'fontmap', dict_79656)
        
        # Call to update(...): (line 886)
        # Processing the call arguments (line 886)
        
        # Obtaining an instance of the builtin type 'dict' (line 886)
        dict_79661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 29), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 886)
        # Adding element type (key, value) (line 886)
        int_79662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 887, 17), 'int')
        unicode_79663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 887, 21), 'unicode', u'STIXSizeOneSym')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 886, 29), dict_79661, (int_79662, unicode_79663))
        # Adding element type (key, value) (line 886)
        int_79664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 888, 17), 'int')
        unicode_79665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 888, 21), 'unicode', u'STIXSizeTwoSym')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 886, 29), dict_79661, (int_79664, unicode_79665))
        # Adding element type (key, value) (line 886)
        int_79666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 17), 'int')
        unicode_79667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 21), 'unicode', u'STIXSizeThreeSym')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 886, 29), dict_79661, (int_79666, unicode_79667))
        # Adding element type (key, value) (line 886)
        int_79668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 17), 'int')
        unicode_79669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 21), 'unicode', u'STIXSizeFourSym')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 886, 29), dict_79661, (int_79668, unicode_79669))
        # Adding element type (key, value) (line 886)
        int_79670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 891, 17), 'int')
        unicode_79671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 891, 21), 'unicode', u'STIXSizeFiveSym')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 886, 29), dict_79661, (int_79670, unicode_79671))
        
        # Processing the call keyword arguments (line 886)
        kwargs_79672 = {}
        # Getting the type of 'self' (line 886)
        self_79658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 8), 'self', False)
        # Obtaining the member '_fontmap' of a type (line 886)
        _fontmap_79659 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 8), self_79658, '_fontmap')
        # Obtaining the member 'update' of a type (line 886)
        update_79660 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 8), _fontmap_79659, 'update')
        # Calling update(args, kwargs) (line 886)
        update_call_result_79673 = invoke(stypy.reporting.localization.Localization(__file__, 886, 8), update_79660, *[dict_79661], **kwargs_79672)
        
        
        
        # Call to iteritems(...): (line 892)
        # Processing the call arguments (line 892)
        # Getting the type of 'self' (line 892)
        self_79676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 39), 'self', False)
        # Obtaining the member '_fontmap' of a type (line 892)
        _fontmap_79677 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 892, 39), self_79676, '_fontmap')
        # Processing the call keyword arguments (line 892)
        kwargs_79678 = {}
        # Getting the type of 'six' (line 892)
        six_79674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 25), 'six', False)
        # Obtaining the member 'iteritems' of a type (line 892)
        iteritems_79675 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 892, 25), six_79674, 'iteritems')
        # Calling iteritems(args, kwargs) (line 892)
        iteritems_call_result_79679 = invoke(stypy.reporting.localization.Localization(__file__, 892, 25), iteritems_79675, *[_fontmap_79677], **kwargs_79678)
        
        # Testing the type of a for loop iterable (line 892)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 892, 8), iteritems_call_result_79679)
        # Getting the type of the for loop variable (line 892)
        for_loop_var_79680 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 892, 8), iteritems_call_result_79679)
        # Assigning a type to the variable 'key' (line 892)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 892, 8), 'key', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 892, 8), for_loop_var_79680))
        # Assigning a type to the variable 'name' (line 892)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 892, 8), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 892, 8), for_loop_var_79680))
        # SSA begins for a for statement (line 892)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 893):
        
        # Assigning a Call to a Name (line 893):
        
        # Call to findfont(...): (line 893)
        # Processing the call arguments (line 893)
        # Getting the type of 'name' (line 893)
        name_79682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 32), 'name', False)
        # Processing the call keyword arguments (line 893)
        kwargs_79683 = {}
        # Getting the type of 'findfont' (line 893)
        findfont_79681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 23), 'findfont', False)
        # Calling findfont(args, kwargs) (line 893)
        findfont_call_result_79684 = invoke(stypy.reporting.localization.Localization(__file__, 893, 23), findfont_79681, *[name_79682], **kwargs_79683)
        
        # Assigning a type to the variable 'fullpath' (line 893)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 12), 'fullpath', findfont_call_result_79684)
        
        # Assigning a Name to a Subscript (line 894):
        
        # Assigning a Name to a Subscript (line 894):
        # Getting the type of 'fullpath' (line 894)
        fullpath_79685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 32), 'fullpath')
        # Getting the type of 'self' (line 894)
        self_79686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 12), 'self')
        # Obtaining the member 'fontmap' of a type (line 894)
        fontmap_79687 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 894, 12), self_79686, 'fontmap')
        # Getting the type of 'key' (line 894)
        key_79688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 25), 'key')
        # Storing an element on a container (line 894)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 894, 12), fontmap_79687, (key_79688, fullpath_79685))
        
        # Assigning a Name to a Subscript (line 895):
        
        # Assigning a Name to a Subscript (line 895):
        # Getting the type of 'fullpath' (line 895)
        fullpath_79689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 33), 'fullpath')
        # Getting the type of 'self' (line 895)
        self_79690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 12), 'self')
        # Obtaining the member 'fontmap' of a type (line 895)
        fontmap_79691 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 895, 12), self_79690, 'fontmap')
        # Getting the type of 'name' (line 895)
        name_79692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 25), 'name')
        # Storing an element on a container (line 895)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 895, 12), fontmap_79691, (name_79692, fullpath_79689))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def _get_glyph(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'True' (line 897)
        True_79693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 897, 67), 'True')
        defaults = [True_79693]
        # Create a new context for function '_get_glyph'
        module_type_store = module_type_store.open_function_context('_get_glyph', 897, 4, False)
        # Assigning a type to the variable 'self' (line 898)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 898, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        DejaVuFonts._get_glyph.__dict__.__setitem__('stypy_localization', localization)
        DejaVuFonts._get_glyph.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        DejaVuFonts._get_glyph.__dict__.__setitem__('stypy_type_store', module_type_store)
        DejaVuFonts._get_glyph.__dict__.__setitem__('stypy_function_name', 'DejaVuFonts._get_glyph')
        DejaVuFonts._get_glyph.__dict__.__setitem__('stypy_param_names_list', ['fontname', 'font_class', 'sym', 'fontsize', 'math'])
        DejaVuFonts._get_glyph.__dict__.__setitem__('stypy_varargs_param_name', None)
        DejaVuFonts._get_glyph.__dict__.__setitem__('stypy_kwargs_param_name', None)
        DejaVuFonts._get_glyph.__dict__.__setitem__('stypy_call_defaults', defaults)
        DejaVuFonts._get_glyph.__dict__.__setitem__('stypy_call_varargs', varargs)
        DejaVuFonts._get_glyph.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        DejaVuFonts._get_glyph.__dict__.__setitem__('stypy_declared_arg_number', 6)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DejaVuFonts._get_glyph', ['fontname', 'font_class', 'sym', 'fontsize', 'math'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_glyph', localization, ['fontname', 'font_class', 'sym', 'fontsize', 'math'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_glyph(...)' code ##################

        unicode_79694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 8), 'unicode', u' Override prime symbol to use Bakoma ')
        
        
        # Getting the type of 'sym' (line 899)
        sym_79695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 11), 'sym')
        unicode_79696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 899, 18), 'unicode', u'\\prime')
        # Applying the binary operator '==' (line 899)
        result_eq_79697 = python_operator(stypy.reporting.localization.Localization(__file__, 899, 11), '==', sym_79695, unicode_79696)
        
        # Testing the type of an if condition (line 899)
        if_condition_79698 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 899, 8), result_eq_79697)
        # Assigning a type to the variable 'if_condition_79698' (line 899)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 899, 8), 'if_condition_79698', if_condition_79698)
        # SSA begins for if statement (line 899)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to _get_glyph(...): (line 900)
        # Processing the call arguments (line 900)
        # Getting the type of 'fontname' (line 900)
        fontname_79702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 42), 'fontname', False)
        # Getting the type of 'font_class' (line 901)
        font_class_79703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 20), 'font_class', False)
        # Getting the type of 'sym' (line 901)
        sym_79704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 32), 'sym', False)
        # Getting the type of 'fontsize' (line 901)
        fontsize_79705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 37), 'fontsize', False)
        # Getting the type of 'math' (line 901)
        math_79706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 47), 'math', False)
        # Processing the call keyword arguments (line 900)
        kwargs_79707 = {}
        # Getting the type of 'self' (line 900)
        self_79699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 19), 'self', False)
        # Obtaining the member 'bakoma' of a type (line 900)
        bakoma_79700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 900, 19), self_79699, 'bakoma')
        # Obtaining the member '_get_glyph' of a type (line 900)
        _get_glyph_79701 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 900, 19), bakoma_79700, '_get_glyph')
        # Calling _get_glyph(args, kwargs) (line 900)
        _get_glyph_call_result_79708 = invoke(stypy.reporting.localization.Localization(__file__, 900, 19), _get_glyph_79701, *[fontname_79702, font_class_79703, sym_79704, fontsize_79705, math_79706], **kwargs_79707)
        
        # Assigning a type to the variable 'stypy_return_type' (line 900)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 900, 12), 'stypy_return_type', _get_glyph_call_result_79708)
        # SSA branch for the else part of an if statement (line 899)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 904):
        
        # Assigning a Call to a Name (line 904):
        
        # Call to get_unicode_index(...): (line 904)
        # Processing the call arguments (line 904)
        # Getting the type of 'sym' (line 904)
        sym_79710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 904, 41), 'sym', False)
        # Processing the call keyword arguments (line 904)
        kwargs_79711 = {}
        # Getting the type of 'get_unicode_index' (line 904)
        get_unicode_index_79709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 904, 23), 'get_unicode_index', False)
        # Calling get_unicode_index(args, kwargs) (line 904)
        get_unicode_index_call_result_79712 = invoke(stypy.reporting.localization.Localization(__file__, 904, 23), get_unicode_index_79709, *[sym_79710], **kwargs_79711)
        
        # Assigning a type to the variable 'uniindex' (line 904)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 904, 12), 'uniindex', get_unicode_index_call_result_79712)
        
        # Assigning a Call to a Name (line 905):
        
        # Assigning a Call to a Name (line 905):
        
        # Call to _get_font(...): (line 905)
        # Processing the call arguments (line 905)
        unicode_79715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 905, 34), 'unicode', u'ex')
        # Processing the call keyword arguments (line 905)
        kwargs_79716 = {}
        # Getting the type of 'self' (line 905)
        self_79713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 905, 19), 'self', False)
        # Obtaining the member '_get_font' of a type (line 905)
        _get_font_79714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 905, 19), self_79713, '_get_font')
        # Calling _get_font(args, kwargs) (line 905)
        _get_font_call_result_79717 = invoke(stypy.reporting.localization.Localization(__file__, 905, 19), _get_font_79714, *[unicode_79715], **kwargs_79716)
        
        # Assigning a type to the variable 'font' (line 905)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 905, 12), 'font', _get_font_call_result_79717)
        
        # Type idiom detected: calculating its left and rigth part (line 906)
        # Getting the type of 'font' (line 906)
        font_79718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 12), 'font')
        # Getting the type of 'None' (line 906)
        None_79719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 27), 'None')
        
        (may_be_79720, more_types_in_union_79721) = may_not_be_none(font_79718, None_79719)

        if may_be_79720:

            if more_types_in_union_79721:
                # Runtime conditional SSA (line 906)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 907):
            
            # Assigning a Call to a Name (line 907):
            
            # Call to get_char_index(...): (line 907)
            # Processing the call arguments (line 907)
            # Getting the type of 'uniindex' (line 907)
            uniindex_79724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 907, 49), 'uniindex', False)
            # Processing the call keyword arguments (line 907)
            kwargs_79725 = {}
            # Getting the type of 'font' (line 907)
            font_79722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 907, 29), 'font', False)
            # Obtaining the member 'get_char_index' of a type (line 907)
            get_char_index_79723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 907, 29), font_79722, 'get_char_index')
            # Calling get_char_index(args, kwargs) (line 907)
            get_char_index_call_result_79726 = invoke(stypy.reporting.localization.Localization(__file__, 907, 29), get_char_index_79723, *[uniindex_79724], **kwargs_79725)
            
            # Assigning a type to the variable 'glyphindex' (line 907)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 907, 16), 'glyphindex', get_char_index_call_result_79726)
            
            
            # Getting the type of 'glyphindex' (line 908)
            glyphindex_79727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 19), 'glyphindex')
            int_79728 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 908, 33), 'int')
            # Applying the binary operator '!=' (line 908)
            result_ne_79729 = python_operator(stypy.reporting.localization.Localization(__file__, 908, 19), '!=', glyphindex_79727, int_79728)
            
            # Testing the type of an if condition (line 908)
            if_condition_79730 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 908, 16), result_ne_79729)
            # Assigning a type to the variable 'if_condition_79730' (line 908)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 908, 16), 'if_condition_79730', if_condition_79730)
            # SSA begins for if statement (line 908)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to _get_glyph(...): (line 909)
            # Processing the call arguments (line 909)
            unicode_79737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 909, 63), 'unicode', u'ex')
            # Getting the type of 'font_class' (line 910)
            font_class_79738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 28), 'font_class', False)
            # Getting the type of 'sym' (line 910)
            sym_79739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 40), 'sym', False)
            # Getting the type of 'fontsize' (line 910)
            fontsize_79740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 45), 'fontsize', False)
            # Getting the type of 'math' (line 910)
            math_79741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 55), 'math', False)
            # Processing the call keyword arguments (line 909)
            kwargs_79742 = {}
            
            # Call to super(...): (line 909)
            # Processing the call arguments (line 909)
            # Getting the type of 'DejaVuFonts' (line 909)
            DejaVuFonts_79732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 33), 'DejaVuFonts', False)
            # Getting the type of 'self' (line 909)
            self_79733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 46), 'self', False)
            # Processing the call keyword arguments (line 909)
            kwargs_79734 = {}
            # Getting the type of 'super' (line 909)
            super_79731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 27), 'super', False)
            # Calling super(args, kwargs) (line 909)
            super_call_result_79735 = invoke(stypy.reporting.localization.Localization(__file__, 909, 27), super_79731, *[DejaVuFonts_79732, self_79733], **kwargs_79734)
            
            # Obtaining the member '_get_glyph' of a type (line 909)
            _get_glyph_79736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 909, 27), super_call_result_79735, '_get_glyph')
            # Calling _get_glyph(args, kwargs) (line 909)
            _get_glyph_call_result_79743 = invoke(stypy.reporting.localization.Localization(__file__, 909, 27), _get_glyph_79736, *[unicode_79737, font_class_79738, sym_79739, fontsize_79740, math_79741], **kwargs_79742)
            
            # Assigning a type to the variable 'stypy_return_type' (line 909)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 909, 20), 'stypy_return_type', _get_glyph_call_result_79743)
            # SSA join for if statement (line 908)
            module_type_store = module_type_store.join_ssa_context()
            

            if more_types_in_union_79721:
                # SSA join for if statement (line 906)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to _get_glyph(...): (line 912)
        # Processing the call arguments (line 912)
        # Getting the type of 'fontname' (line 912)
        fontname_79750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 55), 'fontname', False)
        # Getting the type of 'font_class' (line 913)
        font_class_79751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 20), 'font_class', False)
        # Getting the type of 'sym' (line 913)
        sym_79752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 32), 'sym', False)
        # Getting the type of 'fontsize' (line 913)
        fontsize_79753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 37), 'fontsize', False)
        # Getting the type of 'math' (line 913)
        math_79754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 47), 'math', False)
        # Processing the call keyword arguments (line 912)
        kwargs_79755 = {}
        
        # Call to super(...): (line 912)
        # Processing the call arguments (line 912)
        # Getting the type of 'DejaVuFonts' (line 912)
        DejaVuFonts_79745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 25), 'DejaVuFonts', False)
        # Getting the type of 'self' (line 912)
        self_79746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 38), 'self', False)
        # Processing the call keyword arguments (line 912)
        kwargs_79747 = {}
        # Getting the type of 'super' (line 912)
        super_79744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 19), 'super', False)
        # Calling super(args, kwargs) (line 912)
        super_call_result_79748 = invoke(stypy.reporting.localization.Localization(__file__, 912, 19), super_79744, *[DejaVuFonts_79745, self_79746], **kwargs_79747)
        
        # Obtaining the member '_get_glyph' of a type (line 912)
        _get_glyph_79749 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 912, 19), super_call_result_79748, '_get_glyph')
        # Calling _get_glyph(args, kwargs) (line 912)
        _get_glyph_call_result_79756 = invoke(stypy.reporting.localization.Localization(__file__, 912, 19), _get_glyph_79749, *[fontname_79750, font_class_79751, sym_79752, fontsize_79753, math_79754], **kwargs_79755)
        
        # Assigning a type to the variable 'stypy_return_type' (line 912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 912, 12), 'stypy_return_type', _get_glyph_call_result_79756)
        # SSA join for if statement (line 899)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_get_glyph(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_glyph' in the type store
        # Getting the type of 'stypy_return_type' (line 897)
        stypy_return_type_79757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 897, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_79757)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_glyph'
        return stypy_return_type_79757


# Assigning a type to the variable 'DejaVuFonts' (line 873)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 873, 0), 'DejaVuFonts', DejaVuFonts)

# Assigning a Name to a Name (line 874):
# Getting the type of 'False' (line 874)
False_79758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 15), 'False')
# Getting the type of 'DejaVuFonts'
DejaVuFonts_79759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'DejaVuFonts')
# Setting the type of the member 'use_cmex' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), DejaVuFonts_79759, 'use_cmex', False_79758)
# Declaration of the 'DejaVuSerifFonts' class
# Getting the type of 'DejaVuFonts' (line 916)
DejaVuFonts_79760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 23), 'DejaVuFonts')

class DejaVuSerifFonts(DejaVuFonts_79760, ):
    unicode_79761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 921, (-1)), 'unicode', u'\n    A font handling class for the DejaVu Serif fonts\n\n    If a glyph is not found it will fallback to Stix Serif\n    ')
    
    # Assigning a Dict to a Name (line 922):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 916, 0, False)
        # Assigning a type to the variable 'self' (line 917)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 917, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DejaVuSerifFonts.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'DejaVuSerifFonts' (line 916)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 916, 0), 'DejaVuSerifFonts', DejaVuSerifFonts)

# Assigning a Dict to a Name (line 922):

# Obtaining an instance of the builtin type 'dict' (line 922)
dict_79762 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 922, 15), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 922)
# Adding element type (key, value) (line 922)
unicode_79763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 922, 17), 'unicode', u'rm')
unicode_79764 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 922, 25), 'unicode', u'DejaVu Serif')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 922, 15), dict_79762, (unicode_79763, unicode_79764))
# Adding element type (key, value) (line 922)
unicode_79765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 923, 17), 'unicode', u'it')
unicode_79766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 923, 25), 'unicode', u'DejaVu Serif:italic')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 922, 15), dict_79762, (unicode_79765, unicode_79766))
# Adding element type (key, value) (line 922)
unicode_79767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 924, 17), 'unicode', u'bf')
unicode_79768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 924, 25), 'unicode', u'DejaVu Serif:weight=bold')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 922, 15), dict_79762, (unicode_79767, unicode_79768))
# Adding element type (key, value) (line 922)
unicode_79769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 925, 17), 'unicode', u'sf')
unicode_79770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 925, 25), 'unicode', u'DejaVu Sans')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 922, 15), dict_79762, (unicode_79769, unicode_79770))
# Adding element type (key, value) (line 922)
unicode_79771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 926, 17), 'unicode', u'tt')
unicode_79772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 926, 25), 'unicode', u'DejaVu Sans Mono')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 922, 15), dict_79762, (unicode_79771, unicode_79772))
# Adding element type (key, value) (line 922)
unicode_79773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 927, 17), 'unicode', u'ex')
unicode_79774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 927, 25), 'unicode', u'DejaVu Serif Display')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 922, 15), dict_79762, (unicode_79773, unicode_79774))
# Adding element type (key, value) (line 922)
int_79775 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 928, 17), 'int')
unicode_79776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 928, 25), 'unicode', u'DejaVu Serif')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 922, 15), dict_79762, (int_79775, unicode_79776))

# Getting the type of 'DejaVuSerifFonts'
DejaVuSerifFonts_79777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'DejaVuSerifFonts')
# Setting the type of the member '_fontmap' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), DejaVuSerifFonts_79777, '_fontmap', dict_79762)
# Declaration of the 'DejaVuSansFonts' class
# Getting the type of 'DejaVuFonts' (line 931)
DejaVuFonts_79778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 931, 22), 'DejaVuFonts')

class DejaVuSansFonts(DejaVuFonts_79778, ):
    unicode_79779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 936, (-1)), 'unicode', u'\n    A font handling class for the DejaVu Sans fonts\n\n    If a glyph is not found it will fallback to Stix Sans\n    ')
    
    # Assigning a Dict to a Name (line 937):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 931, 0, False)
        # Assigning a type to the variable 'self' (line 932)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 932, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DejaVuSansFonts.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'DejaVuSansFonts' (line 931)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 931, 0), 'DejaVuSansFonts', DejaVuSansFonts)

# Assigning a Dict to a Name (line 937):

# Obtaining an instance of the builtin type 'dict' (line 937)
dict_79780 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 937, 15), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 937)
# Adding element type (key, value) (line 937)
unicode_79781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 937, 17), 'unicode', u'rm')
unicode_79782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 937, 25), 'unicode', u'DejaVu Sans')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 937, 15), dict_79780, (unicode_79781, unicode_79782))
# Adding element type (key, value) (line 937)
unicode_79783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 17), 'unicode', u'it')
unicode_79784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 25), 'unicode', u'DejaVu Sans:italic')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 937, 15), dict_79780, (unicode_79783, unicode_79784))
# Adding element type (key, value) (line 937)
unicode_79785 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 939, 17), 'unicode', u'bf')
unicode_79786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 939, 25), 'unicode', u'DejaVu Sans:weight=bold')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 937, 15), dict_79780, (unicode_79785, unicode_79786))
# Adding element type (key, value) (line 937)
unicode_79787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 940, 17), 'unicode', u'sf')
unicode_79788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 940, 25), 'unicode', u'DejaVu Sans')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 937, 15), dict_79780, (unicode_79787, unicode_79788))
# Adding element type (key, value) (line 937)
unicode_79789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 941, 17), 'unicode', u'tt')
unicode_79790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 941, 25), 'unicode', u'DejaVu Sans Mono')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 937, 15), dict_79780, (unicode_79789, unicode_79790))
# Adding element type (key, value) (line 937)
unicode_79791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 942, 17), 'unicode', u'ex')
unicode_79792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 942, 25), 'unicode', u'DejaVu Sans Display')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 937, 15), dict_79780, (unicode_79791, unicode_79792))
# Adding element type (key, value) (line 937)
int_79793 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 17), 'int')
unicode_79794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 25), 'unicode', u'DejaVu Sans')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 937, 15), dict_79780, (int_79793, unicode_79794))

# Getting the type of 'DejaVuSansFonts'
DejaVuSansFonts_79795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'DejaVuSansFonts')
# Setting the type of the member '_fontmap' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), DejaVuSansFonts_79795, '_fontmap', dict_79780)
# Declaration of the 'StixFonts' class
# Getting the type of 'UnicodeFonts' (line 946)
UnicodeFonts_79796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 16), 'UnicodeFonts')

class StixFonts(UnicodeFonts_79796, ):
    unicode_79797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 957, (-1)), 'unicode', u'\n    A font handling class for the STIX fonts.\n\n    In addition to what UnicodeFonts provides, this class:\n\n    - supports "virtual fonts" which are complete alpha numeric\n      character sets with different font styles at special Unicode\n      code points, such as "Blackboard".\n\n    - handles sized alternative characters for the STIXSizeX fonts.\n    ')
    
    # Assigning a Dict to a Name (line 958):
    
    # Assigning a Name to a Name (line 972):
    
    # Assigning a Name to a Name (line 973):
    
    # Assigning a Name to a Name (line 974):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 976, 4, False)
        # Assigning a type to the variable 'self' (line 977)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 977, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StixFonts.__init__', [], 'args', 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 977)
        # Processing the call arguments (line 977)
        # Getting the type of 'self' (line 977)
        self_79800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 31), 'self', False)
        # Getting the type of 'args' (line 977)
        args_79801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 38), 'args', False)
        # Processing the call keyword arguments (line 977)
        # Getting the type of 'kwargs' (line 977)
        kwargs_79802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 46), 'kwargs', False)
        kwargs_79803 = {'kwargs_79802': kwargs_79802}
        # Getting the type of 'TruetypeFonts' (line 977)
        TruetypeFonts_79798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'TruetypeFonts', False)
        # Obtaining the member '__init__' of a type (line 977)
        init___79799 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 977, 8), TruetypeFonts_79798, '__init__')
        # Calling __init__(args, kwargs) (line 977)
        init___call_result_79804 = invoke(stypy.reporting.localization.Localization(__file__, 977, 8), init___79799, *[self_79800, args_79801], **kwargs_79803)
        
        
        # Assigning a Dict to a Attribute (line 978):
        
        # Assigning a Dict to a Attribute (line 978):
        
        # Obtaining an instance of the builtin type 'dict' (line 978)
        dict_79805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 978, 23), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 978)
        
        # Getting the type of 'self' (line 978)
        self_79806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 8), 'self')
        # Setting the type of the member 'fontmap' of a type (line 978)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 978, 8), self_79806, 'fontmap', dict_79805)
        
        
        # Call to iteritems(...): (line 979)
        # Processing the call arguments (line 979)
        # Getting the type of 'self' (line 979)
        self_79809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 39), 'self', False)
        # Obtaining the member '_fontmap' of a type (line 979)
        _fontmap_79810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 39), self_79809, '_fontmap')
        # Processing the call keyword arguments (line 979)
        kwargs_79811 = {}
        # Getting the type of 'six' (line 979)
        six_79807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 25), 'six', False)
        # Obtaining the member 'iteritems' of a type (line 979)
        iteritems_79808 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 25), six_79807, 'iteritems')
        # Calling iteritems(args, kwargs) (line 979)
        iteritems_call_result_79812 = invoke(stypy.reporting.localization.Localization(__file__, 979, 25), iteritems_79808, *[_fontmap_79810], **kwargs_79811)
        
        # Testing the type of a for loop iterable (line 979)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 979, 8), iteritems_call_result_79812)
        # Getting the type of the for loop variable (line 979)
        for_loop_var_79813 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 979, 8), iteritems_call_result_79812)
        # Assigning a type to the variable 'key' (line 979)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 979, 8), 'key', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 979, 8), for_loop_var_79813))
        # Assigning a type to the variable 'name' (line 979)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 979, 8), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 979, 8), for_loop_var_79813))
        # SSA begins for a for statement (line 979)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 980):
        
        # Assigning a Call to a Name (line 980):
        
        # Call to findfont(...): (line 980)
        # Processing the call arguments (line 980)
        # Getting the type of 'name' (line 980)
        name_79815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 32), 'name', False)
        # Processing the call keyword arguments (line 980)
        kwargs_79816 = {}
        # Getting the type of 'findfont' (line 980)
        findfont_79814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 23), 'findfont', False)
        # Calling findfont(args, kwargs) (line 980)
        findfont_call_result_79817 = invoke(stypy.reporting.localization.Localization(__file__, 980, 23), findfont_79814, *[name_79815], **kwargs_79816)
        
        # Assigning a type to the variable 'fullpath' (line 980)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 980, 12), 'fullpath', findfont_call_result_79817)
        
        # Assigning a Name to a Subscript (line 981):
        
        # Assigning a Name to a Subscript (line 981):
        # Getting the type of 'fullpath' (line 981)
        fullpath_79818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 32), 'fullpath')
        # Getting the type of 'self' (line 981)
        self_79819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 12), 'self')
        # Obtaining the member 'fontmap' of a type (line 981)
        fontmap_79820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 981, 12), self_79819, 'fontmap')
        # Getting the type of 'key' (line 981)
        key_79821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 25), 'key')
        # Storing an element on a container (line 981)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 981, 12), fontmap_79820, (key_79821, fullpath_79818))
        
        # Assigning a Name to a Subscript (line 982):
        
        # Assigning a Name to a Subscript (line 982):
        # Getting the type of 'fullpath' (line 982)
        fullpath_79822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 33), 'fullpath')
        # Getting the type of 'self' (line 982)
        self_79823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 12), 'self')
        # Obtaining the member 'fontmap' of a type (line 982)
        fontmap_79824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 982, 12), self_79823, 'fontmap')
        # Getting the type of 'name' (line 982)
        name_79825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 25), 'name')
        # Storing an element on a container (line 982)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 982, 12), fontmap_79824, (name_79825, fullpath_79822))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def _map_virtual_font(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_map_virtual_font'
        module_type_store = module_type_store.open_function_context('_map_virtual_font', 984, 4, False)
        # Assigning a type to the variable 'self' (line 985)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 985, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StixFonts._map_virtual_font.__dict__.__setitem__('stypy_localization', localization)
        StixFonts._map_virtual_font.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StixFonts._map_virtual_font.__dict__.__setitem__('stypy_type_store', module_type_store)
        StixFonts._map_virtual_font.__dict__.__setitem__('stypy_function_name', 'StixFonts._map_virtual_font')
        StixFonts._map_virtual_font.__dict__.__setitem__('stypy_param_names_list', ['fontname', 'font_class', 'uniindex'])
        StixFonts._map_virtual_font.__dict__.__setitem__('stypy_varargs_param_name', None)
        StixFonts._map_virtual_font.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StixFonts._map_virtual_font.__dict__.__setitem__('stypy_call_defaults', defaults)
        StixFonts._map_virtual_font.__dict__.__setitem__('stypy_call_varargs', varargs)
        StixFonts._map_virtual_font.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StixFonts._map_virtual_font.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StixFonts._map_virtual_font', ['fontname', 'font_class', 'uniindex'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_map_virtual_font', localization, ['fontname', 'font_class', 'uniindex'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_map_virtual_font(...)' code ##################

        
        # Assigning a Call to a Name (line 987):
        
        # Assigning a Call to a Name (line 987):
        
        # Call to get(...): (line 987)
        # Processing the call arguments (line 987)
        # Getting the type of 'fontname' (line 987)
        fontname_79828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 41), 'fontname', False)
        # Processing the call keyword arguments (line 987)
        kwargs_79829 = {}
        # Getting the type of 'stix_virtual_fonts' (line 987)
        stix_virtual_fonts_79826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 18), 'stix_virtual_fonts', False)
        # Obtaining the member 'get' of a type (line 987)
        get_79827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 987, 18), stix_virtual_fonts_79826, 'get')
        # Calling get(args, kwargs) (line 987)
        get_call_result_79830 = invoke(stypy.reporting.localization.Localization(__file__, 987, 18), get_79827, *[fontname_79828], **kwargs_79829)
        
        # Assigning a type to the variable 'mapping' (line 987)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 987, 8), 'mapping', get_call_result_79830)
        
        
        # Evaluating a boolean operation
        # Getting the type of 'self' (line 988)
        self_79831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 12), 'self')
        # Obtaining the member '_sans' of a type (line 988)
        _sans_79832 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 12), self_79831, '_sans')
        
        # Getting the type of 'mapping' (line 988)
        mapping_79833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 27), 'mapping')
        # Getting the type of 'None' (line 988)
        None_79834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 38), 'None')
        # Applying the binary operator 'is' (line 988)
        result_is__79835 = python_operator(stypy.reporting.localization.Localization(__file__, 988, 27), 'is', mapping_79833, None_79834)
        
        # Applying the binary operator 'and' (line 988)
        result_and_keyword_79836 = python_operator(stypy.reporting.localization.Localization(__file__, 988, 12), 'and', _sans_79832, result_is__79835)
        
        # Getting the type of 'fontname' (line 989)
        fontname_79837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 12), 'fontname')
        
        # Obtaining an instance of the builtin type 'tuple' (line 989)
        tuple_79838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 29), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 989)
        # Adding element type (line 989)
        unicode_79839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 29), 'unicode', u'regular')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 989, 29), tuple_79838, unicode_79839)
        # Adding element type (line 989)
        unicode_79840 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 40), 'unicode', u'default')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 989, 29), tuple_79838, unicode_79840)
        
        # Applying the binary operator 'notin' (line 989)
        result_contains_79841 = python_operator(stypy.reporting.localization.Localization(__file__, 989, 12), 'notin', fontname_79837, tuple_79838)
        
        # Applying the binary operator 'and' (line 988)
        result_and_keyword_79842 = python_operator(stypy.reporting.localization.Localization(__file__, 988, 12), 'and', result_and_keyword_79836, result_contains_79841)
        
        # Testing the type of an if condition (line 988)
        if_condition_79843 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 988, 8), result_and_keyword_79842)
        # Assigning a type to the variable 'if_condition_79843' (line 988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 988, 8), 'if_condition_79843', if_condition_79843)
        # SSA begins for if statement (line 988)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 990):
        
        # Assigning a Subscript to a Name (line 990):
        
        # Obtaining the type of the subscript
        unicode_79844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 990, 41), 'unicode', u'sf')
        # Getting the type of 'stix_virtual_fonts' (line 990)
        stix_virtual_fonts_79845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 22), 'stix_virtual_fonts')
        # Obtaining the member '__getitem__' of a type (line 990)
        getitem___79846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 990, 22), stix_virtual_fonts_79845, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 990)
        subscript_call_result_79847 = invoke(stypy.reporting.localization.Localization(__file__, 990, 22), getitem___79846, unicode_79844)
        
        # Assigning a type to the variable 'mapping' (line 990)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 990, 12), 'mapping', subscript_call_result_79847)
        
        # Assigning a Name to a Name (line 991):
        
        # Assigning a Name to a Name (line 991):
        # Getting the type of 'True' (line 991)
        True_79848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 36), 'True')
        # Assigning a type to the variable 'doing_sans_conversion' (line 991)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 991, 12), 'doing_sans_conversion', True_79848)
        # SSA branch for the else part of an if statement (line 988)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 993):
        
        # Assigning a Name to a Name (line 993):
        # Getting the type of 'False' (line 993)
        False_79849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 36), 'False')
        # Assigning a type to the variable 'doing_sans_conversion' (line 993)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 993, 12), 'doing_sans_conversion', False_79849)
        # SSA join for if statement (line 988)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Type idiom detected: calculating its left and rigth part (line 995)
        # Getting the type of 'mapping' (line 995)
        mapping_79850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 995, 8), 'mapping')
        # Getting the type of 'None' (line 995)
        None_79851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 995, 26), 'None')
        
        (may_be_79852, more_types_in_union_79853) = may_not_be_none(mapping_79850, None_79851)

        if may_be_79852:

            if more_types_in_union_79853:
                # Runtime conditional SSA (line 995)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Type idiom detected: calculating its left and rigth part (line 996)
            # Getting the type of 'dict' (line 996)
            dict_79854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 35), 'dict')
            # Getting the type of 'mapping' (line 996)
            mapping_79855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 26), 'mapping')
            
            (may_be_79856, more_types_in_union_79857) = may_be_subtype(dict_79854, mapping_79855)

            if may_be_79856:

                if more_types_in_union_79857:
                    # Runtime conditional SSA (line 996)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                # Assigning a type to the variable 'mapping' (line 996)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 12), 'mapping', remove_not_subtype_from_union(mapping_79855, dict))
                
                # Assigning a Call to a Name (line 997):
                
                # Assigning a Call to a Name (line 997):
                
                # Call to get(...): (line 997)
                # Processing the call arguments (line 997)
                # Getting the type of 'font_class' (line 997)
                font_class_79860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 38), 'font_class', False)
                unicode_79861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 997, 50), 'unicode', u'rm')
                # Processing the call keyword arguments (line 997)
                kwargs_79862 = {}
                # Getting the type of 'mapping' (line 997)
                mapping_79858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 26), 'mapping', False)
                # Obtaining the member 'get' of a type (line 997)
                get_79859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 997, 26), mapping_79858, 'get')
                # Calling get(args, kwargs) (line 997)
                get_call_result_79863 = invoke(stypy.reporting.localization.Localization(__file__, 997, 26), get_79859, *[font_class_79860, unicode_79861], **kwargs_79862)
                
                # Assigning a type to the variable 'mapping' (line 997)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 997, 16), 'mapping', get_call_result_79863)

                if more_types_in_union_79857:
                    # SSA join for if statement (line 996)
                    module_type_store = module_type_store.join_ssa_context()


            
            
            # Assigning a Num to a Name (line 1000):
            
            # Assigning a Num to a Name (line 1000):
            int_79864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1000, 17), 'int')
            # Assigning a type to the variable 'lo' (line 1000)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1000, 12), 'lo', int_79864)
            
            # Assigning a Call to a Name (line 1001):
            
            # Assigning a Call to a Name (line 1001):
            
            # Call to len(...): (line 1001)
            # Processing the call arguments (line 1001)
            # Getting the type of 'mapping' (line 1001)
            mapping_79866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 21), 'mapping', False)
            # Processing the call keyword arguments (line 1001)
            kwargs_79867 = {}
            # Getting the type of 'len' (line 1001)
            len_79865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 17), 'len', False)
            # Calling len(args, kwargs) (line 1001)
            len_call_result_79868 = invoke(stypy.reporting.localization.Localization(__file__, 1001, 17), len_79865, *[mapping_79866], **kwargs_79867)
            
            # Assigning a type to the variable 'hi' (line 1001)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1001, 12), 'hi', len_call_result_79868)
            
            
            # Getting the type of 'lo' (line 1002)
            lo_79869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 18), 'lo')
            # Getting the type of 'hi' (line 1002)
            hi_79870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 23), 'hi')
            # Applying the binary operator '<' (line 1002)
            result_lt_79871 = python_operator(stypy.reporting.localization.Localization(__file__, 1002, 18), '<', lo_79869, hi_79870)
            
            # Testing the type of an if condition (line 1002)
            is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1002, 12), result_lt_79871)
            # SSA begins for while statement (line 1002)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
            
            # Assigning a BinOp to a Name (line 1003):
            
            # Assigning a BinOp to a Name (line 1003):
            # Getting the type of 'lo' (line 1003)
            lo_79872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 23), 'lo')
            # Getting the type of 'hi' (line 1003)
            hi_79873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 26), 'hi')
            # Applying the binary operator '+' (line 1003)
            result_add_79874 = python_operator(stypy.reporting.localization.Localization(__file__, 1003, 23), '+', lo_79872, hi_79873)
            
            int_79875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1003, 31), 'int')
            # Applying the binary operator '//' (line 1003)
            result_floordiv_79876 = python_operator(stypy.reporting.localization.Localization(__file__, 1003, 22), '//', result_add_79874, int_79875)
            
            # Assigning a type to the variable 'mid' (line 1003)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1003, 16), 'mid', result_floordiv_79876)
            
            # Assigning a Subscript to a Name (line 1004):
            
            # Assigning a Subscript to a Name (line 1004):
            
            # Obtaining the type of the subscript
            # Getting the type of 'mid' (line 1004)
            mid_79877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 32), 'mid')
            # Getting the type of 'mapping' (line 1004)
            mapping_79878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 24), 'mapping')
            # Obtaining the member '__getitem__' of a type (line 1004)
            getitem___79879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1004, 24), mapping_79878, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1004)
            subscript_call_result_79880 = invoke(stypy.reporting.localization.Localization(__file__, 1004, 24), getitem___79879, mid_79877)
            
            # Assigning a type to the variable 'range' (line 1004)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1004, 16), 'range', subscript_call_result_79880)
            
            
            # Getting the type of 'uniindex' (line 1005)
            uniindex_79881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 19), 'uniindex')
            
            # Obtaining the type of the subscript
            int_79882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 36), 'int')
            # Getting the type of 'range' (line 1005)
            range_79883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 30), 'range')
            # Obtaining the member '__getitem__' of a type (line 1005)
            getitem___79884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1005, 30), range_79883, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1005)
            subscript_call_result_79885 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 30), getitem___79884, int_79882)
            
            # Applying the binary operator '<' (line 1005)
            result_lt_79886 = python_operator(stypy.reporting.localization.Localization(__file__, 1005, 19), '<', uniindex_79881, subscript_call_result_79885)
            
            # Testing the type of an if condition (line 1005)
            if_condition_79887 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1005, 16), result_lt_79886)
            # Assigning a type to the variable 'if_condition_79887' (line 1005)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1005, 16), 'if_condition_79887', if_condition_79887)
            # SSA begins for if statement (line 1005)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Name to a Name (line 1006):
            
            # Assigning a Name to a Name (line 1006):
            # Getting the type of 'mid' (line 1006)
            mid_79888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 25), 'mid')
            # Assigning a type to the variable 'hi' (line 1006)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1006, 20), 'hi', mid_79888)
            # SSA branch for the else part of an if statement (line 1005)
            module_type_store.open_ssa_branch('else')
            
            
            # Getting the type of 'uniindex' (line 1007)
            uniindex_79889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 21), 'uniindex')
            
            # Obtaining the type of the subscript
            int_79890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1007, 39), 'int')
            # Getting the type of 'range' (line 1007)
            range_79891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 33), 'range')
            # Obtaining the member '__getitem__' of a type (line 1007)
            getitem___79892 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1007, 33), range_79891, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1007)
            subscript_call_result_79893 = invoke(stypy.reporting.localization.Localization(__file__, 1007, 33), getitem___79892, int_79890)
            
            # Applying the binary operator '<=' (line 1007)
            result_le_79894 = python_operator(stypy.reporting.localization.Localization(__file__, 1007, 21), '<=', uniindex_79889, subscript_call_result_79893)
            
            # Testing the type of an if condition (line 1007)
            if_condition_79895 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1007, 21), result_le_79894)
            # Assigning a type to the variable 'if_condition_79895' (line 1007)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1007, 21), 'if_condition_79895', if_condition_79895)
            # SSA begins for if statement (line 1007)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # SSA branch for the else part of an if statement (line 1007)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a BinOp to a Name (line 1010):
            
            # Assigning a BinOp to a Name (line 1010):
            # Getting the type of 'mid' (line 1010)
            mid_79896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 25), 'mid')
            int_79897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1010, 31), 'int')
            # Applying the binary operator '+' (line 1010)
            result_add_79898 = python_operator(stypy.reporting.localization.Localization(__file__, 1010, 25), '+', mid_79896, int_79897)
            
            # Assigning a type to the variable 'lo' (line 1010)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1010, 20), 'lo', result_add_79898)
            # SSA join for if statement (line 1007)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for if statement (line 1005)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for while statement (line 1002)
            module_type_store = module_type_store.join_ssa_context()
            
            
            
            # Evaluating a boolean operation
            
            # Getting the type of 'uniindex' (line 1012)
            uniindex_79899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 15), 'uniindex')
            
            # Obtaining the type of the subscript
            int_79900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1012, 33), 'int')
            # Getting the type of 'range' (line 1012)
            range_79901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 27), 'range')
            # Obtaining the member '__getitem__' of a type (line 1012)
            getitem___79902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 27), range_79901, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1012)
            subscript_call_result_79903 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 27), getitem___79902, int_79900)
            
            # Applying the binary operator '>=' (line 1012)
            result_ge_79904 = python_operator(stypy.reporting.localization.Localization(__file__, 1012, 15), '>=', uniindex_79899, subscript_call_result_79903)
            
            
            # Getting the type of 'uniindex' (line 1012)
            uniindex_79905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 40), 'uniindex')
            
            # Obtaining the type of the subscript
            int_79906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1012, 58), 'int')
            # Getting the type of 'range' (line 1012)
            range_79907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 52), 'range')
            # Obtaining the member '__getitem__' of a type (line 1012)
            getitem___79908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 52), range_79907, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1012)
            subscript_call_result_79909 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 52), getitem___79908, int_79906)
            
            # Applying the binary operator '<=' (line 1012)
            result_le_79910 = python_operator(stypy.reporting.localization.Localization(__file__, 1012, 40), '<=', uniindex_79905, subscript_call_result_79909)
            
            # Applying the binary operator 'and' (line 1012)
            result_and_keyword_79911 = python_operator(stypy.reporting.localization.Localization(__file__, 1012, 15), 'and', result_ge_79904, result_le_79910)
            
            # Testing the type of an if condition (line 1012)
            if_condition_79912 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1012, 12), result_and_keyword_79911)
            # Assigning a type to the variable 'if_condition_79912' (line 1012)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1012, 12), 'if_condition_79912', if_condition_79912)
            # SSA begins for if statement (line 1012)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a BinOp to a Name (line 1013):
            
            # Assigning a BinOp to a Name (line 1013):
            # Getting the type of 'uniindex' (line 1013)
            uniindex_79913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 27), 'uniindex')
            
            # Obtaining the type of the subscript
            int_79914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 44), 'int')
            # Getting the type of 'range' (line 1013)
            range_79915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 38), 'range')
            # Obtaining the member '__getitem__' of a type (line 1013)
            getitem___79916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1013, 38), range_79915, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1013)
            subscript_call_result_79917 = invoke(stypy.reporting.localization.Localization(__file__, 1013, 38), getitem___79916, int_79914)
            
            # Applying the binary operator '-' (line 1013)
            result_sub_79918 = python_operator(stypy.reporting.localization.Localization(__file__, 1013, 27), '-', uniindex_79913, subscript_call_result_79917)
            
            
            # Obtaining the type of the subscript
            int_79919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 55), 'int')
            # Getting the type of 'range' (line 1013)
            range_79920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 49), 'range')
            # Obtaining the member '__getitem__' of a type (line 1013)
            getitem___79921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1013, 49), range_79920, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1013)
            subscript_call_result_79922 = invoke(stypy.reporting.localization.Localization(__file__, 1013, 49), getitem___79921, int_79919)
            
            # Applying the binary operator '+' (line 1013)
            result_add_79923 = python_operator(stypy.reporting.localization.Localization(__file__, 1013, 47), '+', result_sub_79918, subscript_call_result_79922)
            
            # Assigning a type to the variable 'uniindex' (line 1013)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1013, 16), 'uniindex', result_add_79923)
            
            # Assigning a Subscript to a Name (line 1014):
            
            # Assigning a Subscript to a Name (line 1014):
            
            # Obtaining the type of the subscript
            int_79924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1014, 33), 'int')
            # Getting the type of 'range' (line 1014)
            range_79925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 27), 'range')
            # Obtaining the member '__getitem__' of a type (line 1014)
            getitem___79926 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1014, 27), range_79925, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1014)
            subscript_call_result_79927 = invoke(stypy.reporting.localization.Localization(__file__, 1014, 27), getitem___79926, int_79924)
            
            # Assigning a type to the variable 'fontname' (line 1014)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1014, 16), 'fontname', subscript_call_result_79927)
            # SSA branch for the else part of an if statement (line 1012)
            module_type_store.open_ssa_branch('else')
            
            
            # Getting the type of 'doing_sans_conversion' (line 1015)
            doing_sans_conversion_79928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 21), 'doing_sans_conversion')
            # Applying the 'not' unary operator (line 1015)
            result_not__79929 = python_operator(stypy.reporting.localization.Localization(__file__, 1015, 17), 'not', doing_sans_conversion_79928)
            
            # Testing the type of an if condition (line 1015)
            if_condition_79930 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1015, 17), result_not__79929)
            # Assigning a type to the variable 'if_condition_79930' (line 1015)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1015, 17), 'if_condition_79930', if_condition_79930)
            # SSA begins for if statement (line 1015)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Num to a Name (line 1017):
            
            # Assigning a Num to a Name (line 1017):
            int_79931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1017, 27), 'int')
            # Assigning a type to the variable 'uniindex' (line 1017)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1017, 16), 'uniindex', int_79931)
            
            # Assigning a Subscript to a Name (line 1018):
            
            # Assigning a Subscript to a Name (line 1018):
            
            # Obtaining the type of the subscript
            unicode_79932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1018, 36), 'unicode', u'mathtext.default')
            # Getting the type of 'rcParams' (line 1018)
            rcParams_79933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 27), 'rcParams')
            # Obtaining the member '__getitem__' of a type (line 1018)
            getitem___79934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1018, 27), rcParams_79933, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1018)
            subscript_call_result_79935 = invoke(stypy.reporting.localization.Localization(__file__, 1018, 27), getitem___79934, unicode_79932)
            
            # Assigning a type to the variable 'fontname' (line 1018)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1018, 16), 'fontname', subscript_call_result_79935)
            # SSA join for if statement (line 1015)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for if statement (line 1012)
            module_type_store = module_type_store.join_ssa_context()
            

            if more_types_in_union_79853:
                # SSA join for if statement (line 995)
                module_type_store = module_type_store.join_ssa_context()


        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'fontname' (line 1021)
        fontname_79936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 12), 'fontname')
        
        # Obtaining an instance of the builtin type 'tuple' (line 1021)
        tuple_79937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1021, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1021)
        # Adding element type (line 1021)
        unicode_79938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1021, 25), 'unicode', u'it')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1021, 25), tuple_79937, unicode_79938)
        # Adding element type (line 1021)
        unicode_79939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1021, 31), 'unicode', u'rm')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1021, 25), tuple_79937, unicode_79939)
        # Adding element type (line 1021)
        unicode_79940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1021, 37), 'unicode', u'bf')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1021, 25), tuple_79937, unicode_79940)
        
        # Applying the binary operator 'in' (line 1021)
        result_contains_79941 = python_operator(stypy.reporting.localization.Localization(__file__, 1021, 12), 'in', fontname_79936, tuple_79937)
        
        
        # Getting the type of 'uniindex' (line 1022)
        uniindex_79942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 12), 'uniindex')
        int_79943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1022, 24), 'int')
        # Applying the binary operator '>=' (line 1022)
        result_ge_79944 = python_operator(stypy.reporting.localization.Localization(__file__, 1022, 12), '>=', uniindex_79942, int_79943)
        
        # Applying the binary operator 'and' (line 1021)
        result_and_keyword_79945 = python_operator(stypy.reporting.localization.Localization(__file__, 1021, 12), 'and', result_contains_79941, result_ge_79944)
        
        # Getting the type of 'uniindex' (line 1022)
        uniindex_79946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 35), 'uniindex')
        int_79947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1022, 47), 'int')
        # Applying the binary operator '<=' (line 1022)
        result_le_79948 = python_operator(stypy.reporting.localization.Localization(__file__, 1022, 35), '<=', uniindex_79946, int_79947)
        
        # Applying the binary operator 'and' (line 1021)
        result_and_keyword_79949 = python_operator(stypy.reporting.localization.Localization(__file__, 1021, 12), 'and', result_and_keyword_79945, result_le_79948)
        
        # Testing the type of an if condition (line 1021)
        if_condition_79950 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1021, 8), result_and_keyword_79949)
        # Assigning a type to the variable 'if_condition_79950' (line 1021)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1021, 8), 'if_condition_79950', if_condition_79950)
        # SSA begins for if statement (line 1021)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 1023):
        
        # Assigning a BinOp to a Name (line 1023):
        unicode_79951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1023, 23), 'unicode', u'nonuni')
        # Getting the type of 'fontname' (line 1023)
        fontname_79952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 34), 'fontname')
        # Applying the binary operator '+' (line 1023)
        result_add_79953 = python_operator(stypy.reporting.localization.Localization(__file__, 1023, 23), '+', unicode_79951, fontname_79952)
        
        # Assigning a type to the variable 'fontname' (line 1023)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1023, 12), 'fontname', result_add_79953)
        # SSA join for if statement (line 1021)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 1025)
        tuple_79954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1025, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1025)
        # Adding element type (line 1025)
        # Getting the type of 'fontname' (line 1025)
        fontname_79955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 15), 'fontname')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1025, 15), tuple_79954, fontname_79955)
        # Adding element type (line 1025)
        # Getting the type of 'uniindex' (line 1025)
        uniindex_79956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 25), 'uniindex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1025, 15), tuple_79954, uniindex_79956)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1025)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1025, 8), 'stypy_return_type', tuple_79954)
        
        # ################# End of '_map_virtual_font(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_map_virtual_font' in the type store
        # Getting the type of 'stypy_return_type' (line 984)
        stypy_return_type_79957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_79957)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_map_virtual_font'
        return stypy_return_type_79957

    
    # Assigning a Dict to a Name (line 1027):

    @norecursion
    def get_sized_alternatives_for_symbol(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_sized_alternatives_for_symbol'
        module_type_store = module_type_store.open_function_context('get_sized_alternatives_for_symbol', 1028, 4, False)
        # Assigning a type to the variable 'self' (line 1029)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1029, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StixFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_localization', localization)
        StixFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StixFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_type_store', module_type_store)
        StixFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_function_name', 'StixFonts.get_sized_alternatives_for_symbol')
        StixFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_param_names_list', ['fontname', 'sym'])
        StixFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_varargs_param_name', None)
        StixFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StixFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_call_defaults', defaults)
        StixFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_call_varargs', varargs)
        StixFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StixFonts.get_sized_alternatives_for_symbol.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StixFonts.get_sized_alternatives_for_symbol', ['fontname', 'sym'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_sized_alternatives_for_symbol', localization, ['fontname', 'sym'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_sized_alternatives_for_symbol(...)' code ##################

        
        # Assigning a Dict to a Name (line 1029):
        
        # Assigning a Dict to a Name (line 1029):
        
        # Obtaining an instance of the builtin type 'dict' (line 1029)
        dict_79958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 16), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1029)
        # Adding element type (key, value) (line 1029)
        unicode_79959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 17), 'unicode', u'\\{')
        unicode_79960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 24), 'unicode', u'{')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1029, 16), dict_79958, (unicode_79959, unicode_79960))
        # Adding element type (key, value) (line 1029)
        unicode_79961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 29), 'unicode', u'\\}')
        unicode_79962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 36), 'unicode', u'}')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1029, 16), dict_79958, (unicode_79961, unicode_79962))
        # Adding element type (key, value) (line 1029)
        unicode_79963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 41), 'unicode', u'\\[')
        unicode_79964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 48), 'unicode', u'[')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1029, 16), dict_79958, (unicode_79963, unicode_79964))
        # Adding element type (key, value) (line 1029)
        unicode_79965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 53), 'unicode', u'\\]')
        unicode_79966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 60), 'unicode', u']')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1029, 16), dict_79958, (unicode_79965, unicode_79966))
        
        # Assigning a type to the variable 'fixes' (line 1029)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1029, 8), 'fixes', dict_79958)
        
        # Assigning a Call to a Name (line 1030):
        
        # Assigning a Call to a Name (line 1030):
        
        # Call to get(...): (line 1030)
        # Processing the call arguments (line 1030)
        # Getting the type of 'sym' (line 1030)
        sym_79969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1030, 24), 'sym', False)
        # Getting the type of 'sym' (line 1030)
        sym_79970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1030, 29), 'sym', False)
        # Processing the call keyword arguments (line 1030)
        kwargs_79971 = {}
        # Getting the type of 'fixes' (line 1030)
        fixes_79967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1030, 14), 'fixes', False)
        # Obtaining the member 'get' of a type (line 1030)
        get_79968 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1030, 14), fixes_79967, 'get')
        # Calling get(args, kwargs) (line 1030)
        get_call_result_79972 = invoke(stypy.reporting.localization.Localization(__file__, 1030, 14), get_79968, *[sym_79969, sym_79970], **kwargs_79971)
        
        # Assigning a type to the variable 'sym' (line 1030)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1030, 8), 'sym', get_call_result_79972)
        
        # Assigning a Call to a Name (line 1032):
        
        # Assigning a Call to a Name (line 1032):
        
        # Call to get(...): (line 1032)
        # Processing the call arguments (line 1032)
        # Getting the type of 'sym' (line 1032)
        sym_79976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 51), 'sym', False)
        # Processing the call keyword arguments (line 1032)
        kwargs_79977 = {}
        # Getting the type of 'self' (line 1032)
        self_79973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 23), 'self', False)
        # Obtaining the member '_size_alternatives' of a type (line 1032)
        _size_alternatives_79974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1032, 23), self_79973, '_size_alternatives')
        # Obtaining the member 'get' of a type (line 1032)
        get_79975 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1032, 23), _size_alternatives_79974, 'get')
        # Calling get(args, kwargs) (line 1032)
        get_call_result_79978 = invoke(stypy.reporting.localization.Localization(__file__, 1032, 23), get_79975, *[sym_79976], **kwargs_79977)
        
        # Assigning a type to the variable 'alternatives' (line 1032)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1032, 8), 'alternatives', get_call_result_79978)
        
        # Getting the type of 'alternatives' (line 1033)
        alternatives_79979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 11), 'alternatives')
        # Testing the type of an if condition (line 1033)
        if_condition_79980 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1033, 8), alternatives_79979)
        # Assigning a type to the variable 'if_condition_79980' (line 1033)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1033, 8), 'if_condition_79980', if_condition_79980)
        # SSA begins for if statement (line 1033)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Getting the type of 'alternatives' (line 1034)
        alternatives_79981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 19), 'alternatives')
        # Assigning a type to the variable 'stypy_return_type' (line 1034)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1034, 12), 'stypy_return_type', alternatives_79981)
        # SSA join for if statement (line 1033)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a List to a Name (line 1036):
        
        # Assigning a List to a Name (line 1036):
        
        # Obtaining an instance of the builtin type 'list' (line 1036)
        list_79982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1036, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1036)
        
        # Assigning a type to the variable 'alternatives' (line 1036)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1036, 8), 'alternatives', list_79982)
        
        
        # SSA begins for try-except statement (line 1037)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Call to a Name (line 1038):
        
        # Assigning a Call to a Name (line 1038):
        
        # Call to get_unicode_index(...): (line 1038)
        # Processing the call arguments (line 1038)
        # Getting the type of 'sym' (line 1038)
        sym_79984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 41), 'sym', False)
        # Processing the call keyword arguments (line 1038)
        kwargs_79985 = {}
        # Getting the type of 'get_unicode_index' (line 1038)
        get_unicode_index_79983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 23), 'get_unicode_index', False)
        # Calling get_unicode_index(args, kwargs) (line 1038)
        get_unicode_index_call_result_79986 = invoke(stypy.reporting.localization.Localization(__file__, 1038, 23), get_unicode_index_79983, *[sym_79984], **kwargs_79985)
        
        # Assigning a type to the variable 'uniindex' (line 1038)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1038, 12), 'uniindex', get_unicode_index_call_result_79986)
        # SSA branch for the except part of a try statement (line 1037)
        # SSA branch for the except 'ValueError' branch of a try statement (line 1037)
        module_type_store.open_ssa_branch('except')
        
        # Obtaining an instance of the builtin type 'list' (line 1040)
        list_79987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1040)
        # Adding element type (line 1040)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1040)
        tuple_79988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1040)
        # Adding element type (line 1040)
        # Getting the type of 'fontname' (line 1040)
        fontname_79989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 21), 'fontname')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1040, 21), tuple_79988, fontname_79989)
        # Adding element type (line 1040)
        # Getting the type of 'sym' (line 1040)
        sym_79990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 31), 'sym')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1040, 21), tuple_79988, sym_79990)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1040, 19), list_79987, tuple_79988)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'stypy_return_type', list_79987)
        # SSA join for try-except statement (line 1037)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Dict to a Name (line 1042):
        
        # Assigning a Dict to a Name (line 1042):
        
        # Obtaining an instance of the builtin type 'dict' (line 1042)
        dict_79991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1042, 18), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1042)
        # Adding element type (key, value) (line 1042)
        
        # Call to ord(...): (line 1043)
        # Processing the call arguments (line 1043)
        unicode_79993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1043, 16), 'unicode', u'<')
        # Processing the call keyword arguments (line 1043)
        kwargs_79994 = {}
        # Getting the type of 'ord' (line 1043)
        ord_79992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 12), 'ord', False)
        # Calling ord(args, kwargs) (line 1043)
        ord_call_result_79995 = invoke(stypy.reporting.localization.Localization(__file__, 1043, 12), ord_79992, *[unicode_79993], **kwargs_79994)
        
        int_79996 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1043, 22), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1042, 18), dict_79991, (ord_call_result_79995, int_79996))
        # Adding element type (key, value) (line 1042)
        
        # Call to ord(...): (line 1044)
        # Processing the call arguments (line 1044)
        unicode_79998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 16), 'unicode', u'>')
        # Processing the call keyword arguments (line 1044)
        kwargs_79999 = {}
        # Getting the type of 'ord' (line 1044)
        ord_79997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1044, 12), 'ord', False)
        # Calling ord(args, kwargs) (line 1044)
        ord_call_result_80000 = invoke(stypy.reporting.localization.Localization(__file__, 1044, 12), ord_79997, *[unicode_79998], **kwargs_79999)
        
        int_80001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 22), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1042, 18), dict_79991, (ord_call_result_80000, int_80001))
        
        # Assigning a type to the variable 'fix_ups' (line 1042)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1042, 8), 'fix_ups', dict_79991)
        
        # Assigning a Call to a Name (line 1046):
        
        # Assigning a Call to a Name (line 1046):
        
        # Call to get(...): (line 1046)
        # Processing the call arguments (line 1046)
        # Getting the type of 'uniindex' (line 1046)
        uniindex_80004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1046, 31), 'uniindex', False)
        # Getting the type of 'uniindex' (line 1046)
        uniindex_80005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1046, 41), 'uniindex', False)
        # Processing the call keyword arguments (line 1046)
        kwargs_80006 = {}
        # Getting the type of 'fix_ups' (line 1046)
        fix_ups_80002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1046, 19), 'fix_ups', False)
        # Obtaining the member 'get' of a type (line 1046)
        get_80003 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1046, 19), fix_ups_80002, 'get')
        # Calling get(args, kwargs) (line 1046)
        get_call_result_80007 = invoke(stypy.reporting.localization.Localization(__file__, 1046, 19), get_80003, *[uniindex_80004, uniindex_80005], **kwargs_80006)
        
        # Assigning a type to the variable 'uniindex' (line 1046)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1046, 8), 'uniindex', get_call_result_80007)
        
        
        # Call to range(...): (line 1048)
        # Processing the call arguments (line 1048)
        int_80009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1048, 23), 'int')
        # Processing the call keyword arguments (line 1048)
        kwargs_80010 = {}
        # Getting the type of 'range' (line 1048)
        range_80008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 17), 'range', False)
        # Calling range(args, kwargs) (line 1048)
        range_call_result_80011 = invoke(stypy.reporting.localization.Localization(__file__, 1048, 17), range_80008, *[int_80009], **kwargs_80010)
        
        # Testing the type of a for loop iterable (line 1048)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1048, 8), range_call_result_80011)
        # Getting the type of the for loop variable (line 1048)
        for_loop_var_80012 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1048, 8), range_call_result_80011)
        # Assigning a type to the variable 'i' (line 1048)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1048, 8), 'i', for_loop_var_80012)
        # SSA begins for a for statement (line 1048)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 1049):
        
        # Assigning a Call to a Name (line 1049):
        
        # Call to _get_font(...): (line 1049)
        # Processing the call arguments (line 1049)
        # Getting the type of 'i' (line 1049)
        i_80015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 34), 'i', False)
        # Processing the call keyword arguments (line 1049)
        kwargs_80016 = {}
        # Getting the type of 'self' (line 1049)
        self_80013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 19), 'self', False)
        # Obtaining the member '_get_font' of a type (line 1049)
        _get_font_80014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1049, 19), self_80013, '_get_font')
        # Calling _get_font(args, kwargs) (line 1049)
        _get_font_call_result_80017 = invoke(stypy.reporting.localization.Localization(__file__, 1049, 19), _get_font_80014, *[i_80015], **kwargs_80016)
        
        # Assigning a type to the variable 'font' (line 1049)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1049, 12), 'font', _get_font_call_result_80017)
        
        # Assigning a Call to a Name (line 1050):
        
        # Assigning a Call to a Name (line 1050):
        
        # Call to get_char_index(...): (line 1050)
        # Processing the call arguments (line 1050)
        # Getting the type of 'uniindex' (line 1050)
        uniindex_80020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 45), 'uniindex', False)
        # Processing the call keyword arguments (line 1050)
        kwargs_80021 = {}
        # Getting the type of 'font' (line 1050)
        font_80018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 25), 'font', False)
        # Obtaining the member 'get_char_index' of a type (line 1050)
        get_char_index_80019 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1050, 25), font_80018, 'get_char_index')
        # Calling get_char_index(args, kwargs) (line 1050)
        get_char_index_call_result_80022 = invoke(stypy.reporting.localization.Localization(__file__, 1050, 25), get_char_index_80019, *[uniindex_80020], **kwargs_80021)
        
        # Assigning a type to the variable 'glyphindex' (line 1050)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1050, 12), 'glyphindex', get_char_index_call_result_80022)
        
        
        # Getting the type of 'glyphindex' (line 1051)
        glyphindex_80023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 15), 'glyphindex')
        int_80024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1051, 29), 'int')
        # Applying the binary operator '!=' (line 1051)
        result_ne_80025 = python_operator(stypy.reporting.localization.Localization(__file__, 1051, 15), '!=', glyphindex_80023, int_80024)
        
        # Testing the type of an if condition (line 1051)
        if_condition_80026 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1051, 12), result_ne_80025)
        # Assigning a type to the variable 'if_condition_80026' (line 1051)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1051, 12), 'if_condition_80026', if_condition_80026)
        # SSA begins for if statement (line 1051)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to append(...): (line 1052)
        # Processing the call arguments (line 1052)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1052)
        tuple_80029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1052, 37), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1052)
        # Adding element type (line 1052)
        # Getting the type of 'i' (line 1052)
        i_80030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 37), 'i', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1052, 37), tuple_80029, i_80030)
        # Adding element type (line 1052)
        
        # Call to unichr_safe(...): (line 1052)
        # Processing the call arguments (line 1052)
        # Getting the type of 'uniindex' (line 1052)
        uniindex_80032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 52), 'uniindex', False)
        # Processing the call keyword arguments (line 1052)
        kwargs_80033 = {}
        # Getting the type of 'unichr_safe' (line 1052)
        unichr_safe_80031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 40), 'unichr_safe', False)
        # Calling unichr_safe(args, kwargs) (line 1052)
        unichr_safe_call_result_80034 = invoke(stypy.reporting.localization.Localization(__file__, 1052, 40), unichr_safe_80031, *[uniindex_80032], **kwargs_80033)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1052, 37), tuple_80029, unichr_safe_call_result_80034)
        
        # Processing the call keyword arguments (line 1052)
        kwargs_80035 = {}
        # Getting the type of 'alternatives' (line 1052)
        alternatives_80027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 16), 'alternatives', False)
        # Obtaining the member 'append' of a type (line 1052)
        append_80028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1052, 16), alternatives_80027, 'append')
        # Calling append(args, kwargs) (line 1052)
        append_call_result_80036 = invoke(stypy.reporting.localization.Localization(__file__, 1052, 16), append_80028, *[tuple_80029], **kwargs_80035)
        
        # SSA join for if statement (line 1051)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'sym' (line 1056)
        sym_80037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1056, 11), 'sym')
        unicode_80038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1056, 18), 'unicode', u'\\__sqrt__')
        # Applying the binary operator '==' (line 1056)
        result_eq_80039 = python_operator(stypy.reporting.localization.Localization(__file__, 1056, 11), '==', sym_80037, unicode_80038)
        
        # Testing the type of an if condition (line 1056)
        if_condition_80040 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1056, 8), result_eq_80039)
        # Assigning a type to the variable 'if_condition_80040' (line 1056)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1056, 8), 'if_condition_80040', if_condition_80040)
        # SSA begins for if statement (line 1056)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 1057):
        
        # Assigning a Subscript to a Name (line 1057):
        
        # Obtaining the type of the subscript
        int_80041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1057, 41), 'int')
        slice_80042 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1057, 27), None, int_80041, None)
        # Getting the type of 'alternatives' (line 1057)
        alternatives_80043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 27), 'alternatives')
        # Obtaining the member '__getitem__' of a type (line 1057)
        getitem___80044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1057, 27), alternatives_80043, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1057)
        subscript_call_result_80045 = invoke(stypy.reporting.localization.Localization(__file__, 1057, 27), getitem___80044, slice_80042)
        
        # Assigning a type to the variable 'alternatives' (line 1057)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1057, 12), 'alternatives', subscript_call_result_80045)
        # SSA join for if statement (line 1056)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Subscript (line 1059):
        
        # Assigning a Name to a Subscript (line 1059):
        # Getting the type of 'alternatives' (line 1059)
        alternatives_80046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1059, 39), 'alternatives')
        # Getting the type of 'self' (line 1059)
        self_80047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1059, 8), 'self')
        # Obtaining the member '_size_alternatives' of a type (line 1059)
        _size_alternatives_80048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1059, 8), self_80047, '_size_alternatives')
        # Getting the type of 'sym' (line 1059)
        sym_80049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1059, 32), 'sym')
        # Storing an element on a container (line 1059)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1059, 8), _size_alternatives_80048, (sym_80049, alternatives_80046))
        # Getting the type of 'alternatives' (line 1060)
        alternatives_80050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 15), 'alternatives')
        # Assigning a type to the variable 'stypy_return_type' (line 1060)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1060, 8), 'stypy_return_type', alternatives_80050)
        
        # ################# End of 'get_sized_alternatives_for_symbol(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_sized_alternatives_for_symbol' in the type store
        # Getting the type of 'stypy_return_type' (line 1028)
        stypy_return_type_80051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80051)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_sized_alternatives_for_symbol'
        return stypy_return_type_80051


# Assigning a type to the variable 'StixFonts' (line 946)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 946, 0), 'StixFonts', StixFonts)

# Assigning a Dict to a Name (line 958):

# Obtaining an instance of the builtin type 'dict' (line 958)
dict_80052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 958, 15), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 958)
# Adding element type (key, value) (line 958)
unicode_80053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 958, 17), 'unicode', u'rm')
unicode_80054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 958, 25), 'unicode', u'STIXGeneral')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 15), dict_80052, (unicode_80053, unicode_80054))
# Adding element type (key, value) (line 958)
unicode_80055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 959, 17), 'unicode', u'it')
unicode_80056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 959, 25), 'unicode', u'STIXGeneral:italic')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 15), dict_80052, (unicode_80055, unicode_80056))
# Adding element type (key, value) (line 958)
unicode_80057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 960, 17), 'unicode', u'bf')
unicode_80058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 960, 25), 'unicode', u'STIXGeneral:weight=bold')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 15), dict_80052, (unicode_80057, unicode_80058))
# Adding element type (key, value) (line 958)
unicode_80059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 961, 17), 'unicode', u'nonunirm')
unicode_80060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 961, 30), 'unicode', u'STIXNonUnicode')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 15), dict_80052, (unicode_80059, unicode_80060))
# Adding element type (key, value) (line 958)
unicode_80061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 962, 17), 'unicode', u'nonuniit')
unicode_80062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 962, 30), 'unicode', u'STIXNonUnicode:italic')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 15), dict_80052, (unicode_80061, unicode_80062))
# Adding element type (key, value) (line 958)
unicode_80063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 963, 17), 'unicode', u'nonunibf')
unicode_80064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 963, 30), 'unicode', u'STIXNonUnicode:weight=bold')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 15), dict_80052, (unicode_80063, unicode_80064))
# Adding element type (key, value) (line 958)
int_80065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 17), 'int')
unicode_80066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 21), 'unicode', u'STIXGeneral')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 15), dict_80052, (int_80065, unicode_80066))
# Adding element type (key, value) (line 958)
int_80067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 966, 17), 'int')
unicode_80068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 966, 21), 'unicode', u'STIXSizeOneSym')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 15), dict_80052, (int_80067, unicode_80068))
# Adding element type (key, value) (line 958)
int_80069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 967, 17), 'int')
unicode_80070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 967, 21), 'unicode', u'STIXSizeTwoSym')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 15), dict_80052, (int_80069, unicode_80070))
# Adding element type (key, value) (line 958)
int_80071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 968, 17), 'int')
unicode_80072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 968, 21), 'unicode', u'STIXSizeThreeSym')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 15), dict_80052, (int_80071, unicode_80072))
# Adding element type (key, value) (line 958)
int_80073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 969, 17), 'int')
unicode_80074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 969, 21), 'unicode', u'STIXSizeFourSym')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 15), dict_80052, (int_80073, unicode_80074))
# Adding element type (key, value) (line 958)
int_80075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 970, 17), 'int')
unicode_80076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 970, 21), 'unicode', u'STIXSizeFiveSym')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 15), dict_80052, (int_80075, unicode_80076))

# Getting the type of 'StixFonts'
StixFonts_80077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'StixFonts')
# Setting the type of the member '_fontmap' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), StixFonts_80077, '_fontmap', dict_80052)

# Assigning a Name to a Name (line 972):
# Getting the type of 'False' (line 972)
False_80078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 972, 15), 'False')
# Getting the type of 'StixFonts'
StixFonts_80079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'StixFonts')
# Setting the type of the member 'use_cmex' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), StixFonts_80079, 'use_cmex', False_80078)

# Assigning a Name to a Name (line 973):
# Getting the type of 'False' (line 973)
False_80080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 18), 'False')
# Getting the type of 'StixFonts'
StixFonts_80081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'StixFonts')
# Setting the type of the member 'cm_fallback' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), StixFonts_80081, 'cm_fallback', False_80080)

# Assigning a Name to a Name (line 974):
# Getting the type of 'False' (line 974)
False_80082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 12), 'False')
# Getting the type of 'StixFonts'
StixFonts_80083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'StixFonts')
# Setting the type of the member '_sans' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), StixFonts_80083, '_sans', False_80082)

# Assigning a Dict to a Name (line 1027):

# Obtaining an instance of the builtin type 'dict' (line 1027)
dict_80084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1027, 25), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1027)

# Getting the type of 'StixFonts'
StixFonts_80085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'StixFonts')
# Setting the type of the member '_size_alternatives' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), StixFonts_80085, '_size_alternatives', dict_80084)
# Declaration of the 'StixSansFonts' class
# Getting the type of 'StixFonts' (line 1062)
StixFonts_80086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1062, 20), 'StixFonts')

class StixSansFonts(StixFonts_80086, ):
    unicode_80087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1066, (-1)), 'unicode', u'\n    A font handling class for the STIX fonts (that uses sans-serif\n    characters by default).\n    ')
    
    # Assigning a Name to a Name (line 1067):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1062, 0, False)
        # Assigning a type to the variable 'self' (line 1063)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1063, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StixSansFonts.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'StixSansFonts' (line 1062)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1062, 0), 'StixSansFonts', StixSansFonts)

# Assigning a Name to a Name (line 1067):
# Getting the type of 'True' (line 1067)
True_80088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 12), 'True')
# Getting the type of 'StixSansFonts'
StixSansFonts_80089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'StixSansFonts')
# Setting the type of the member '_sans' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), StixSansFonts_80089, '_sans', True_80088)
# Declaration of the 'StandardPsFonts' class
# Getting the type of 'Fonts' (line 1069)
Fonts_80090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 22), 'Fonts')

class StandardPsFonts(Fonts_80090, ):
    unicode_80091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1075, (-1)), 'unicode', u'\n    Use the standard postscript fonts for rendering to backend_ps\n\n    Unlike the other font classes, BakomaFont and UnicodeFont, this\n    one requires the Ps backend.\n    ')
    
    # Assigning a Call to a Name (line 1076):
    
    # Assigning a Dict to a Name (line 1078):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1087, 4, False)
        # Assigning a type to the variable 'self' (line 1088)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1088, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StandardPsFonts.__init__', ['default_font_prop'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['default_font_prop'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1088)
        # Processing the call arguments (line 1088)
        # Getting the type of 'self' (line 1088)
        self_80094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 23), 'self', False)
        # Getting the type of 'default_font_prop' (line 1088)
        default_font_prop_80095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 29), 'default_font_prop', False)
        
        # Call to MathtextBackendPs(...): (line 1088)
        # Processing the call keyword arguments (line 1088)
        kwargs_80097 = {}
        # Getting the type of 'MathtextBackendPs' (line 1088)
        MathtextBackendPs_80096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 48), 'MathtextBackendPs', False)
        # Calling MathtextBackendPs(args, kwargs) (line 1088)
        MathtextBackendPs_call_result_80098 = invoke(stypy.reporting.localization.Localization(__file__, 1088, 48), MathtextBackendPs_80096, *[], **kwargs_80097)
        
        # Processing the call keyword arguments (line 1088)
        kwargs_80099 = {}
        # Getting the type of 'Fonts' (line 1088)
        Fonts_80092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 8), 'Fonts', False)
        # Obtaining the member '__init__' of a type (line 1088)
        init___80093 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1088, 8), Fonts_80092, '__init__')
        # Calling __init__(args, kwargs) (line 1088)
        init___call_result_80100 = invoke(stypy.reporting.localization.Localization(__file__, 1088, 8), init___80093, *[self_80094, default_font_prop_80095, MathtextBackendPs_call_result_80098], **kwargs_80099)
        
        
        # Assigning a Dict to a Attribute (line 1089):
        
        # Assigning a Dict to a Attribute (line 1089):
        
        # Obtaining an instance of the builtin type 'dict' (line 1089)
        dict_80101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1089, 22), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1089)
        
        # Getting the type of 'self' (line 1089)
        self_80102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 8), 'self')
        # Setting the type of the member 'glyphd' of a type (line 1089)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1089, 8), self_80102, 'glyphd', dict_80101)
        
        # Assigning a Dict to a Attribute (line 1090):
        
        # Assigning a Dict to a Attribute (line 1090):
        
        # Obtaining an instance of the builtin type 'dict' (line 1090)
        dict_80103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1090, 21), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1090)
        
        # Getting the type of 'self' (line 1090)
        self_80104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1090, 8), 'self')
        # Setting the type of the member 'fonts' of a type (line 1090)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1090, 8), self_80104, 'fonts', dict_80103)
        
        # Assigning a Call to a Name (line 1092):
        
        # Assigning a Call to a Name (line 1092):
        
        # Call to findfont(...): (line 1092)
        # Processing the call arguments (line 1092)
        # Getting the type of 'default_font_prop' (line 1092)
        default_font_prop_80106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1092, 28), 'default_font_prop', False)
        # Processing the call keyword arguments (line 1092)
        unicode_80107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1092, 55), 'unicode', u'afm')
        keyword_80108 = unicode_80107
        # Getting the type of 'self' (line 1093)
        self_80109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1093, 38), 'self', False)
        # Obtaining the member 'basepath' of a type (line 1093)
        basepath_80110 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1093, 38), self_80109, 'basepath')
        keyword_80111 = basepath_80110
        kwargs_80112 = {'directory': keyword_80111, 'fontext': keyword_80108}
        # Getting the type of 'findfont' (line 1092)
        findfont_80105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1092, 19), 'findfont', False)
        # Calling findfont(args, kwargs) (line 1092)
        findfont_call_result_80113 = invoke(stypy.reporting.localization.Localization(__file__, 1092, 19), findfont_80105, *[default_font_prop_80106], **kwargs_80112)
        
        # Assigning a type to the variable 'filename' (line 1092)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1092, 8), 'filename', findfont_call_result_80113)
        
        # Type idiom detected: calculating its left and rigth part (line 1094)
        # Getting the type of 'filename' (line 1094)
        filename_80114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1094, 11), 'filename')
        # Getting the type of 'None' (line 1094)
        None_80115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1094, 23), 'None')
        
        (may_be_80116, more_types_in_union_80117) = may_be_none(filename_80114, None_80115)

        if may_be_80116:

            if more_types_in_union_80117:
                # Runtime conditional SSA (line 1094)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 1095):
            
            # Assigning a Call to a Name (line 1095):
            
            # Call to findfont(...): (line 1095)
            # Processing the call arguments (line 1095)
            unicode_80119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1095, 32), 'unicode', u'Helvetica')
            # Processing the call keyword arguments (line 1095)
            unicode_80120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1095, 53), 'unicode', u'afm')
            keyword_80121 = unicode_80120
            # Getting the type of 'self' (line 1096)
            self_80122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1096, 42), 'self', False)
            # Obtaining the member 'basepath' of a type (line 1096)
            basepath_80123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1096, 42), self_80122, 'basepath')
            keyword_80124 = basepath_80123
            kwargs_80125 = {'directory': keyword_80124, 'fontext': keyword_80121}
            # Getting the type of 'findfont' (line 1095)
            findfont_80118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1095, 23), 'findfont', False)
            # Calling findfont(args, kwargs) (line 1095)
            findfont_call_result_80126 = invoke(stypy.reporting.localization.Localization(__file__, 1095, 23), findfont_80118, *[unicode_80119], **kwargs_80125)
            
            # Assigning a type to the variable 'filename' (line 1095)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1095, 12), 'filename', findfont_call_result_80126)

            if more_types_in_union_80117:
                # SSA join for if statement (line 1094)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to open(...): (line 1097)
        # Processing the call arguments (line 1097)
        # Getting the type of 'filename' (line 1097)
        filename_80128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1097, 18), 'filename', False)
        unicode_80129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1097, 28), 'unicode', u'rb')
        # Processing the call keyword arguments (line 1097)
        kwargs_80130 = {}
        # Getting the type of 'open' (line 1097)
        open_80127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1097, 13), 'open', False)
        # Calling open(args, kwargs) (line 1097)
        open_call_result_80131 = invoke(stypy.reporting.localization.Localization(__file__, 1097, 13), open_80127, *[filename_80128, unicode_80129], **kwargs_80130)
        
        with_80132 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1097, 13), open_call_result_80131, 'with parameter', '__enter__', '__exit__')

        if with_80132:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 1097)
            enter___80133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1097, 13), open_call_result_80131, '__enter__')
            with_enter_80134 = invoke(stypy.reporting.localization.Localization(__file__, 1097, 13), enter___80133)
            # Assigning a type to the variable 'fd' (line 1097)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1097, 13), 'fd', with_enter_80134)
            
            # Assigning a Call to a Name (line 1098):
            
            # Assigning a Call to a Name (line 1098):
            
            # Call to AFM(...): (line 1098)
            # Processing the call arguments (line 1098)
            # Getting the type of 'fd' (line 1098)
            fd_80136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1098, 31), 'fd', False)
            # Processing the call keyword arguments (line 1098)
            kwargs_80137 = {}
            # Getting the type of 'AFM' (line 1098)
            AFM_80135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1098, 27), 'AFM', False)
            # Calling AFM(args, kwargs) (line 1098)
            AFM_call_result_80138 = invoke(stypy.reporting.localization.Localization(__file__, 1098, 27), AFM_80135, *[fd_80136], **kwargs_80137)
            
            # Assigning a type to the variable 'default_font' (line 1098)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1098, 12), 'default_font', AFM_call_result_80138)
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 1097)
            exit___80139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1097, 13), open_call_result_80131, '__exit__')
            with_exit_80140 = invoke(stypy.reporting.localization.Localization(__file__, 1097, 13), exit___80139, None, None, None)

        
        # Assigning a Name to a Attribute (line 1099):
        
        # Assigning a Name to a Attribute (line 1099):
        # Getting the type of 'filename' (line 1099)
        filename_80141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1099, 29), 'filename')
        # Getting the type of 'default_font' (line 1099)
        default_font_80142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1099, 8), 'default_font')
        # Setting the type of the member 'fname' of a type (line 1099)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1099, 8), default_font_80142, 'fname', filename_80141)
        
        # Assigning a Name to a Subscript (line 1101):
        
        # Assigning a Name to a Subscript (line 1101):
        # Getting the type of 'default_font' (line 1101)
        default_font_80143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 32), 'default_font')
        # Getting the type of 'self' (line 1101)
        self_80144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 8), 'self')
        # Obtaining the member 'fonts' of a type (line 1101)
        fonts_80145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1101, 8), self_80144, 'fonts')
        unicode_80146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1101, 19), 'unicode', u'default')
        # Storing an element on a container (line 1101)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1101, 8), fonts_80145, (unicode_80146, default_font_80143))
        
        # Assigning a Name to a Subscript (line 1102):
        
        # Assigning a Name to a Subscript (line 1102):
        # Getting the type of 'default_font' (line 1102)
        default_font_80147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 32), 'default_font')
        # Getting the type of 'self' (line 1102)
        self_80148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 8), 'self')
        # Obtaining the member 'fonts' of a type (line 1102)
        fonts_80149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1102, 8), self_80148, 'fonts')
        unicode_80150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1102, 19), 'unicode', u'regular')
        # Storing an element on a container (line 1102)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1102, 8), fonts_80149, (unicode_80150, default_font_80147))
        
        # Assigning a Call to a Attribute (line 1103):
        
        # Assigning a Call to a Attribute (line 1103):
        
        # Call to cStringIO(...): (line 1103)
        # Processing the call keyword arguments (line 1103)
        kwargs_80154 = {}
        # Getting the type of 'six' (line 1103)
        six_80151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 24), 'six', False)
        # Obtaining the member 'moves' of a type (line 1103)
        moves_80152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1103, 24), six_80151, 'moves')
        # Obtaining the member 'cStringIO' of a type (line 1103)
        cStringIO_80153 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1103, 24), moves_80152, 'cStringIO')
        # Calling cStringIO(args, kwargs) (line 1103)
        cStringIO_call_result_80155 = invoke(stypy.reporting.localization.Localization(__file__, 1103, 24), cStringIO_80153, *[], **kwargs_80154)
        
        # Getting the type of 'self' (line 1103)
        self_80156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 8), 'self')
        # Setting the type of the member 'pswriter' of a type (line 1103)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1103, 8), self_80156, 'pswriter', cStringIO_call_result_80155)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def _get_font(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_font'
        module_type_store = module_type_store.open_function_context('_get_font', 1105, 4, False)
        # Assigning a type to the variable 'self' (line 1106)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1106, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StandardPsFonts._get_font.__dict__.__setitem__('stypy_localization', localization)
        StandardPsFonts._get_font.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StandardPsFonts._get_font.__dict__.__setitem__('stypy_type_store', module_type_store)
        StandardPsFonts._get_font.__dict__.__setitem__('stypy_function_name', 'StandardPsFonts._get_font')
        StandardPsFonts._get_font.__dict__.__setitem__('stypy_param_names_list', ['font'])
        StandardPsFonts._get_font.__dict__.__setitem__('stypy_varargs_param_name', None)
        StandardPsFonts._get_font.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StandardPsFonts._get_font.__dict__.__setitem__('stypy_call_defaults', defaults)
        StandardPsFonts._get_font.__dict__.__setitem__('stypy_call_varargs', varargs)
        StandardPsFonts._get_font.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StandardPsFonts._get_font.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StandardPsFonts._get_font', ['font'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_font', localization, ['font'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_font(...)' code ##################

        
        
        # Getting the type of 'font' (line 1106)
        font_80157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 11), 'font')
        # Getting the type of 'self' (line 1106)
        self_80158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 19), 'self')
        # Obtaining the member 'fontmap' of a type (line 1106)
        fontmap_80159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1106, 19), self_80158, 'fontmap')
        # Applying the binary operator 'in' (line 1106)
        result_contains_80160 = python_operator(stypy.reporting.localization.Localization(__file__, 1106, 11), 'in', font_80157, fontmap_80159)
        
        # Testing the type of an if condition (line 1106)
        if_condition_80161 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1106, 8), result_contains_80160)
        # Assigning a type to the variable 'if_condition_80161' (line 1106)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1106, 8), 'if_condition_80161', if_condition_80161)
        # SSA begins for if statement (line 1106)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 1107):
        
        # Assigning a Subscript to a Name (line 1107):
        
        # Obtaining the type of the subscript
        # Getting the type of 'font' (line 1107)
        font_80162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 36), 'font')
        # Getting the type of 'self' (line 1107)
        self_80163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 23), 'self')
        # Obtaining the member 'fontmap' of a type (line 1107)
        fontmap_80164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1107, 23), self_80163, 'fontmap')
        # Obtaining the member '__getitem__' of a type (line 1107)
        getitem___80165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1107, 23), fontmap_80164, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1107)
        subscript_call_result_80166 = invoke(stypy.reporting.localization.Localization(__file__, 1107, 23), getitem___80165, font_80162)
        
        # Assigning a type to the variable 'basename' (line 1107)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1107, 12), 'basename', subscript_call_result_80166)
        # SSA branch for the else part of an if statement (line 1106)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 1109):
        
        # Assigning a Name to a Name (line 1109):
        # Getting the type of 'font' (line 1109)
        font_80167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1109, 23), 'font')
        # Assigning a type to the variable 'basename' (line 1109)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1109, 12), 'basename', font_80167)
        # SSA join for if statement (line 1106)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1111):
        
        # Assigning a Call to a Name (line 1111):
        
        # Call to get(...): (line 1111)
        # Processing the call arguments (line 1111)
        # Getting the type of 'basename' (line 1111)
        basename_80171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1111, 37), 'basename', False)
        # Processing the call keyword arguments (line 1111)
        kwargs_80172 = {}
        # Getting the type of 'self' (line 1111)
        self_80168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1111, 22), 'self', False)
        # Obtaining the member 'fonts' of a type (line 1111)
        fonts_80169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1111, 22), self_80168, 'fonts')
        # Obtaining the member 'get' of a type (line 1111)
        get_80170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1111, 22), fonts_80169, 'get')
        # Calling get(args, kwargs) (line 1111)
        get_call_result_80173 = invoke(stypy.reporting.localization.Localization(__file__, 1111, 22), get_80170, *[basename_80171], **kwargs_80172)
        
        # Assigning a type to the variable 'cached_font' (line 1111)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1111, 8), 'cached_font', get_call_result_80173)
        
        # Type idiom detected: calculating its left and rigth part (line 1112)
        # Getting the type of 'cached_font' (line 1112)
        cached_font_80174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 11), 'cached_font')
        # Getting the type of 'None' (line 1112)
        None_80175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 26), 'None')
        
        (may_be_80176, more_types_in_union_80177) = may_be_none(cached_font_80174, None_80175)

        if may_be_80176:

            if more_types_in_union_80177:
                # Runtime conditional SSA (line 1112)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 1113):
            
            # Assigning a Call to a Name (line 1113):
            
            # Call to join(...): (line 1113)
            # Processing the call arguments (line 1113)
            # Getting the type of 'self' (line 1113)
            self_80181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1113, 33), 'self', False)
            # Obtaining the member 'basepath' of a type (line 1113)
            basepath_80182 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1113, 33), self_80181, 'basepath')
            # Getting the type of 'basename' (line 1113)
            basename_80183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1113, 48), 'basename', False)
            unicode_80184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1113, 59), 'unicode', u'.afm')
            # Applying the binary operator '+' (line 1113)
            result_add_80185 = python_operator(stypy.reporting.localization.Localization(__file__, 1113, 48), '+', basename_80183, unicode_80184)
            
            # Processing the call keyword arguments (line 1113)
            kwargs_80186 = {}
            # Getting the type of 'os' (line 1113)
            os_80178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1113, 20), 'os', False)
            # Obtaining the member 'path' of a type (line 1113)
            path_80179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1113, 20), os_80178, 'path')
            # Obtaining the member 'join' of a type (line 1113)
            join_80180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1113, 20), path_80179, 'join')
            # Calling join(args, kwargs) (line 1113)
            join_call_result_80187 = invoke(stypy.reporting.localization.Localization(__file__, 1113, 20), join_80180, *[basepath_80182, result_add_80185], **kwargs_80186)
            
            # Assigning a type to the variable 'fname' (line 1113)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1113, 12), 'fname', join_call_result_80187)
            
            # Call to open(...): (line 1114)
            # Processing the call arguments (line 1114)
            # Getting the type of 'fname' (line 1114)
            fname_80189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1114, 22), 'fname', False)
            unicode_80190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1114, 29), 'unicode', u'rb')
            # Processing the call keyword arguments (line 1114)
            kwargs_80191 = {}
            # Getting the type of 'open' (line 1114)
            open_80188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1114, 17), 'open', False)
            # Calling open(args, kwargs) (line 1114)
            open_call_result_80192 = invoke(stypy.reporting.localization.Localization(__file__, 1114, 17), open_80188, *[fname_80189, unicode_80190], **kwargs_80191)
            
            with_80193 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1114, 17), open_call_result_80192, 'with parameter', '__enter__', '__exit__')

            if with_80193:
                # Calling the __enter__ method to initiate a with section
                # Obtaining the member '__enter__' of a type (line 1114)
                enter___80194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1114, 17), open_call_result_80192, '__enter__')
                with_enter_80195 = invoke(stypy.reporting.localization.Localization(__file__, 1114, 17), enter___80194)
                # Assigning a type to the variable 'fd' (line 1114)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1114, 17), 'fd', with_enter_80195)
                
                # Assigning a Call to a Name (line 1115):
                
                # Assigning a Call to a Name (line 1115):
                
                # Call to AFM(...): (line 1115)
                # Processing the call arguments (line 1115)
                # Getting the type of 'fd' (line 1115)
                fd_80197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 34), 'fd', False)
                # Processing the call keyword arguments (line 1115)
                kwargs_80198 = {}
                # Getting the type of 'AFM' (line 1115)
                AFM_80196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 30), 'AFM', False)
                # Calling AFM(args, kwargs) (line 1115)
                AFM_call_result_80199 = invoke(stypy.reporting.localization.Localization(__file__, 1115, 30), AFM_80196, *[fd_80197], **kwargs_80198)
                
                # Assigning a type to the variable 'cached_font' (line 1115)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1115, 16), 'cached_font', AFM_call_result_80199)
                # Calling the __exit__ method to finish a with section
                # Obtaining the member '__exit__' of a type (line 1114)
                exit___80200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1114, 17), open_call_result_80192, '__exit__')
                with_exit_80201 = invoke(stypy.reporting.localization.Localization(__file__, 1114, 17), exit___80200, None, None, None)

            
            # Assigning a Name to a Attribute (line 1116):
            
            # Assigning a Name to a Attribute (line 1116):
            # Getting the type of 'fname' (line 1116)
            fname_80202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 32), 'fname')
            # Getting the type of 'cached_font' (line 1116)
            cached_font_80203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 12), 'cached_font')
            # Setting the type of the member 'fname' of a type (line 1116)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1116, 12), cached_font_80203, 'fname', fname_80202)
            
            # Assigning a Name to a Subscript (line 1117):
            
            # Assigning a Name to a Subscript (line 1117):
            # Getting the type of 'cached_font' (line 1117)
            cached_font_80204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 35), 'cached_font')
            # Getting the type of 'self' (line 1117)
            self_80205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 12), 'self')
            # Obtaining the member 'fonts' of a type (line 1117)
            fonts_80206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1117, 12), self_80205, 'fonts')
            # Getting the type of 'basename' (line 1117)
            basename_80207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 23), 'basename')
            # Storing an element on a container (line 1117)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1117, 12), fonts_80206, (basename_80207, cached_font_80204))
            
            # Assigning a Name to a Subscript (line 1118):
            
            # Assigning a Name to a Subscript (line 1118):
            # Getting the type of 'cached_font' (line 1118)
            cached_font_80208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 53), 'cached_font')
            # Getting the type of 'self' (line 1118)
            self_80209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 12), 'self')
            # Obtaining the member 'fonts' of a type (line 1118)
            fonts_80210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1118, 12), self_80209, 'fonts')
            
            # Call to get_fontname(...): (line 1118)
            # Processing the call keyword arguments (line 1118)
            kwargs_80213 = {}
            # Getting the type of 'cached_font' (line 1118)
            cached_font_80211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 23), 'cached_font', False)
            # Obtaining the member 'get_fontname' of a type (line 1118)
            get_fontname_80212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1118, 23), cached_font_80211, 'get_fontname')
            # Calling get_fontname(args, kwargs) (line 1118)
            get_fontname_call_result_80214 = invoke(stypy.reporting.localization.Localization(__file__, 1118, 23), get_fontname_80212, *[], **kwargs_80213)
            
            # Storing an element on a container (line 1118)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1118, 12), fonts_80210, (get_fontname_call_result_80214, cached_font_80208))

            if more_types_in_union_80177:
                # SSA join for if statement (line 1112)
                module_type_store = module_type_store.join_ssa_context()


        
        # Getting the type of 'cached_font' (line 1119)
        cached_font_80215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 15), 'cached_font')
        # Assigning a type to the variable 'stypy_return_type' (line 1119)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1119, 8), 'stypy_return_type', cached_font_80215)
        
        # ################# End of '_get_font(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_font' in the type store
        # Getting the type of 'stypy_return_type' (line 1105)
        stypy_return_type_80216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80216)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_font'
        return stypy_return_type_80216


    @norecursion
    def _get_info(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'True' (line 1121)
        True_80217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1121, 72), 'True')
        defaults = [True_80217]
        # Create a new context for function '_get_info'
        module_type_store = module_type_store.open_function_context('_get_info', 1121, 4, False)
        # Assigning a type to the variable 'self' (line 1122)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1122, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StandardPsFonts._get_info.__dict__.__setitem__('stypy_localization', localization)
        StandardPsFonts._get_info.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StandardPsFonts._get_info.__dict__.__setitem__('stypy_type_store', module_type_store)
        StandardPsFonts._get_info.__dict__.__setitem__('stypy_function_name', 'StandardPsFonts._get_info')
        StandardPsFonts._get_info.__dict__.__setitem__('stypy_param_names_list', ['fontname', 'font_class', 'sym', 'fontsize', 'dpi', 'math'])
        StandardPsFonts._get_info.__dict__.__setitem__('stypy_varargs_param_name', None)
        StandardPsFonts._get_info.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StandardPsFonts._get_info.__dict__.__setitem__('stypy_call_defaults', defaults)
        StandardPsFonts._get_info.__dict__.__setitem__('stypy_call_varargs', varargs)
        StandardPsFonts._get_info.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StandardPsFonts._get_info.__dict__.__setitem__('stypy_declared_arg_number', 7)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StandardPsFonts._get_info', ['fontname', 'font_class', 'sym', 'fontsize', 'dpi', 'math'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_info', localization, ['fontname', 'font_class', 'sym', 'fontsize', 'dpi', 'math'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_info(...)' code ##################

        unicode_80218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1122, 8), 'unicode', u'load the cmfont, metrics and glyph with caching')
        
        # Assigning a Tuple to a Name (line 1123):
        
        # Assigning a Tuple to a Name (line 1123):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1123)
        tuple_80219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1123, 14), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1123)
        # Adding element type (line 1123)
        # Getting the type of 'fontname' (line 1123)
        fontname_80220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 14), 'fontname')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1123, 14), tuple_80219, fontname_80220)
        # Adding element type (line 1123)
        # Getting the type of 'sym' (line 1123)
        sym_80221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 24), 'sym')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1123, 14), tuple_80219, sym_80221)
        # Adding element type (line 1123)
        # Getting the type of 'fontsize' (line 1123)
        fontsize_80222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 29), 'fontsize')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1123, 14), tuple_80219, fontsize_80222)
        # Adding element type (line 1123)
        # Getting the type of 'dpi' (line 1123)
        dpi_80223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 39), 'dpi')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1123, 14), tuple_80219, dpi_80223)
        
        # Assigning a type to the variable 'key' (line 1123)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1123, 8), 'key', tuple_80219)
        
        # Assigning a Call to a Name (line 1124):
        
        # Assigning a Call to a Name (line 1124):
        
        # Call to get(...): (line 1124)
        # Processing the call arguments (line 1124)
        # Getting the type of 'key' (line 1124)
        key_80227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1124, 30), 'key', False)
        # Processing the call keyword arguments (line 1124)
        kwargs_80228 = {}
        # Getting the type of 'self' (line 1124)
        self_80224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1124, 14), 'self', False)
        # Obtaining the member 'glyphd' of a type (line 1124)
        glyphd_80225 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1124, 14), self_80224, 'glyphd')
        # Obtaining the member 'get' of a type (line 1124)
        get_80226 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1124, 14), glyphd_80225, 'get')
        # Calling get(args, kwargs) (line 1124)
        get_call_result_80229 = invoke(stypy.reporting.localization.Localization(__file__, 1124, 14), get_80226, *[key_80227], **kwargs_80228)
        
        # Assigning a type to the variable 'tup' (line 1124)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1124, 8), 'tup', get_call_result_80229)
        
        # Type idiom detected: calculating its left and rigth part (line 1126)
        # Getting the type of 'tup' (line 1126)
        tup_80230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 8), 'tup')
        # Getting the type of 'None' (line 1126)
        None_80231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 22), 'None')
        
        (may_be_80232, more_types_in_union_80233) = may_not_be_none(tup_80230, None_80231)

        if may_be_80232:

            if more_types_in_union_80233:
                # Runtime conditional SSA (line 1126)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Getting the type of 'tup' (line 1127)
            tup_80234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1127, 19), 'tup')
            # Assigning a type to the variable 'stypy_return_type' (line 1127)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1127, 12), 'stypy_return_type', tup_80234)

            if more_types_in_union_80233:
                # SSA join for if statement (line 1126)
                module_type_store = module_type_store.join_ssa_context()


        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'fontname' (line 1131)
        fontname_80235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1131, 12), 'fontname')
        unicode_80236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1131, 24), 'unicode', u'it')
        # Applying the binary operator '==' (line 1131)
        result_eq_80237 = python_operator(stypy.reporting.localization.Localization(__file__, 1131, 12), '==', fontname_80235, unicode_80236)
        
        
        # Evaluating a boolean operation
        
        
        # Call to len(...): (line 1132)
        # Processing the call arguments (line 1132)
        # Getting the type of 'sym' (line 1132)
        sym_80239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1132, 17), 'sym', False)
        # Processing the call keyword arguments (line 1132)
        kwargs_80240 = {}
        # Getting the type of 'len' (line 1132)
        len_80238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1132, 13), 'len', False)
        # Calling len(args, kwargs) (line 1132)
        len_call_result_80241 = invoke(stypy.reporting.localization.Localization(__file__, 1132, 13), len_80238, *[sym_80239], **kwargs_80240)
        
        int_80242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1132, 24), 'int')
        # Applying the binary operator '>' (line 1132)
        result_gt_80243 = python_operator(stypy.reporting.localization.Localization(__file__, 1132, 13), '>', len_call_result_80241, int_80242)
        
        
        
        # Call to startswith(...): (line 1133)
        # Processing the call arguments (line 1133)
        unicode_80254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1133, 69), 'unicode', u'L')
        # Processing the call keyword arguments (line 1133)
        kwargs_80255 = {}
        
        # Call to category(...): (line 1133)
        # Processing the call arguments (line 1133)
        
        # Call to text_type(...): (line 1133)
        # Processing the call arguments (line 1133)
        # Getting the type of 'sym' (line 1133)
        sym_80248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1133, 52), 'sym', False)
        # Processing the call keyword arguments (line 1133)
        kwargs_80249 = {}
        # Getting the type of 'six' (line 1133)
        six_80246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1133, 38), 'six', False)
        # Obtaining the member 'text_type' of a type (line 1133)
        text_type_80247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1133, 38), six_80246, 'text_type')
        # Calling text_type(args, kwargs) (line 1133)
        text_type_call_result_80250 = invoke(stypy.reporting.localization.Localization(__file__, 1133, 38), text_type_80247, *[sym_80248], **kwargs_80249)
        
        # Processing the call keyword arguments (line 1133)
        kwargs_80251 = {}
        # Getting the type of 'unicodedata' (line 1133)
        unicodedata_80244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1133, 17), 'unicodedata', False)
        # Obtaining the member 'category' of a type (line 1133)
        category_80245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1133, 17), unicodedata_80244, 'category')
        # Calling category(args, kwargs) (line 1133)
        category_call_result_80252 = invoke(stypy.reporting.localization.Localization(__file__, 1133, 17), category_80245, *[text_type_call_result_80250], **kwargs_80251)
        
        # Obtaining the member 'startswith' of a type (line 1133)
        startswith_80253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1133, 17), category_call_result_80252, 'startswith')
        # Calling startswith(args, kwargs) (line 1133)
        startswith_call_result_80256 = invoke(stypy.reporting.localization.Localization(__file__, 1133, 17), startswith_80253, *[unicode_80254], **kwargs_80255)
        
        # Applying the 'not' unary operator (line 1133)
        result_not__80257 = python_operator(stypy.reporting.localization.Localization(__file__, 1133, 13), 'not', startswith_call_result_80256)
        
        # Applying the binary operator 'or' (line 1132)
        result_or_keyword_80258 = python_operator(stypy.reporting.localization.Localization(__file__, 1132, 13), 'or', result_gt_80243, result_not__80257)
        
        # Applying the binary operator 'and' (line 1131)
        result_and_keyword_80259 = python_operator(stypy.reporting.localization.Localization(__file__, 1131, 12), 'and', result_eq_80237, result_or_keyword_80258)
        
        # Testing the type of an if condition (line 1131)
        if_condition_80260 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1131, 8), result_and_keyword_80259)
        # Assigning a type to the variable 'if_condition_80260' (line 1131)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1131, 8), 'if_condition_80260', if_condition_80260)
        # SSA begins for if statement (line 1131)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Str to a Name (line 1134):
        
        # Assigning a Str to a Name (line 1134):
        unicode_80261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1134, 23), 'unicode', u'rm')
        # Assigning a type to the variable 'fontname' (line 1134)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1134, 12), 'fontname', unicode_80261)
        # SSA join for if statement (line 1131)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Name (line 1136):
        
        # Assigning a Name to a Name (line 1136):
        # Getting the type of 'False' (line 1136)
        False_80262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1136, 23), 'False')
        # Assigning a type to the variable 'found_symbol' (line 1136)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1136, 8), 'found_symbol', False_80262)
        
        
        # Getting the type of 'sym' (line 1138)
        sym_80263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1138, 11), 'sym')
        # Getting the type of 'latex_to_standard' (line 1138)
        latex_to_standard_80264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1138, 18), 'latex_to_standard')
        # Applying the binary operator 'in' (line 1138)
        result_contains_80265 = python_operator(stypy.reporting.localization.Localization(__file__, 1138, 11), 'in', sym_80263, latex_to_standard_80264)
        
        # Testing the type of an if condition (line 1138)
        if_condition_80266 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1138, 8), result_contains_80265)
        # Assigning a type to the variable 'if_condition_80266' (line 1138)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1138, 8), 'if_condition_80266', if_condition_80266)
        # SSA begins for if statement (line 1138)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Tuple (line 1139):
        
        # Assigning a Subscript to a Name (line 1139):
        
        # Obtaining the type of the subscript
        int_80267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1139, 12), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'sym' (line 1139)
        sym_80268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 46), 'sym')
        # Getting the type of 'latex_to_standard' (line 1139)
        latex_to_standard_80269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 28), 'latex_to_standard')
        # Obtaining the member '__getitem__' of a type (line 1139)
        getitem___80270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1139, 28), latex_to_standard_80269, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1139)
        subscript_call_result_80271 = invoke(stypy.reporting.localization.Localization(__file__, 1139, 28), getitem___80270, sym_80268)
        
        # Obtaining the member '__getitem__' of a type (line 1139)
        getitem___80272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1139, 12), subscript_call_result_80271, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1139)
        subscript_call_result_80273 = invoke(stypy.reporting.localization.Localization(__file__, 1139, 12), getitem___80272, int_80267)
        
        # Assigning a type to the variable 'tuple_var_assignment_77293' (line 1139)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1139, 12), 'tuple_var_assignment_77293', subscript_call_result_80273)
        
        # Assigning a Subscript to a Name (line 1139):
        
        # Obtaining the type of the subscript
        int_80274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1139, 12), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'sym' (line 1139)
        sym_80275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 46), 'sym')
        # Getting the type of 'latex_to_standard' (line 1139)
        latex_to_standard_80276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 28), 'latex_to_standard')
        # Obtaining the member '__getitem__' of a type (line 1139)
        getitem___80277 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1139, 28), latex_to_standard_80276, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1139)
        subscript_call_result_80278 = invoke(stypy.reporting.localization.Localization(__file__, 1139, 28), getitem___80277, sym_80275)
        
        # Obtaining the member '__getitem__' of a type (line 1139)
        getitem___80279 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1139, 12), subscript_call_result_80278, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1139)
        subscript_call_result_80280 = invoke(stypy.reporting.localization.Localization(__file__, 1139, 12), getitem___80279, int_80274)
        
        # Assigning a type to the variable 'tuple_var_assignment_77294' (line 1139)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1139, 12), 'tuple_var_assignment_77294', subscript_call_result_80280)
        
        # Assigning a Name to a Name (line 1139):
        # Getting the type of 'tuple_var_assignment_77293' (line 1139)
        tuple_var_assignment_77293_80281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 12), 'tuple_var_assignment_77293')
        # Assigning a type to the variable 'fontname' (line 1139)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1139, 12), 'fontname', tuple_var_assignment_77293_80281)
        
        # Assigning a Name to a Name (line 1139):
        # Getting the type of 'tuple_var_assignment_77294' (line 1139)
        tuple_var_assignment_77294_80282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 12), 'tuple_var_assignment_77294')
        # Assigning a type to the variable 'num' (line 1139)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1139, 22), 'num', tuple_var_assignment_77294_80282)
        
        # Assigning a Call to a Name (line 1140):
        
        # Assigning a Call to a Name (line 1140):
        
        # Call to chr(...): (line 1140)
        # Processing the call arguments (line 1140)
        # Getting the type of 'num' (line 1140)
        num_80284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1140, 24), 'num', False)
        # Processing the call keyword arguments (line 1140)
        kwargs_80285 = {}
        # Getting the type of 'chr' (line 1140)
        chr_80283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1140, 20), 'chr', False)
        # Calling chr(args, kwargs) (line 1140)
        chr_call_result_80286 = invoke(stypy.reporting.localization.Localization(__file__, 1140, 20), chr_80283, *[num_80284], **kwargs_80285)
        
        # Assigning a type to the variable 'glyph' (line 1140)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1140, 12), 'glyph', chr_call_result_80286)
        
        # Assigning a Name to a Name (line 1141):
        
        # Assigning a Name to a Name (line 1141):
        # Getting the type of 'True' (line 1141)
        True_80287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1141, 27), 'True')
        # Assigning a type to the variable 'found_symbol' (line 1141)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1141, 12), 'found_symbol', True_80287)
        # SSA branch for the else part of an if statement (line 1138)
        module_type_store.open_ssa_branch('else')
        
        
        
        # Call to len(...): (line 1142)
        # Processing the call arguments (line 1142)
        # Getting the type of 'sym' (line 1142)
        sym_80289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 17), 'sym', False)
        # Processing the call keyword arguments (line 1142)
        kwargs_80290 = {}
        # Getting the type of 'len' (line 1142)
        len_80288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 13), 'len', False)
        # Calling len(args, kwargs) (line 1142)
        len_call_result_80291 = invoke(stypy.reporting.localization.Localization(__file__, 1142, 13), len_80288, *[sym_80289], **kwargs_80290)
        
        int_80292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1142, 25), 'int')
        # Applying the binary operator '==' (line 1142)
        result_eq_80293 = python_operator(stypy.reporting.localization.Localization(__file__, 1142, 13), '==', len_call_result_80291, int_80292)
        
        # Testing the type of an if condition (line 1142)
        if_condition_80294 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1142, 13), result_eq_80293)
        # Assigning a type to the variable 'if_condition_80294' (line 1142)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1142, 13), 'if_condition_80294', if_condition_80294)
        # SSA begins for if statement (line 1142)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 1143):
        
        # Assigning a Name to a Name (line 1143):
        # Getting the type of 'sym' (line 1143)
        sym_80295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1143, 20), 'sym')
        # Assigning a type to the variable 'glyph' (line 1143)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1143, 12), 'glyph', sym_80295)
        
        # Assigning a Call to a Name (line 1144):
        
        # Assigning a Call to a Name (line 1144):
        
        # Call to ord(...): (line 1144)
        # Processing the call arguments (line 1144)
        # Getting the type of 'glyph' (line 1144)
        glyph_80297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1144, 22), 'glyph', False)
        # Processing the call keyword arguments (line 1144)
        kwargs_80298 = {}
        # Getting the type of 'ord' (line 1144)
        ord_80296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1144, 18), 'ord', False)
        # Calling ord(args, kwargs) (line 1144)
        ord_call_result_80299 = invoke(stypy.reporting.localization.Localization(__file__, 1144, 18), ord_80296, *[glyph_80297], **kwargs_80298)
        
        # Assigning a type to the variable 'num' (line 1144)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1144, 12), 'num', ord_call_result_80299)
        
        # Assigning a Name to a Name (line 1145):
        
        # Assigning a Name to a Name (line 1145):
        # Getting the type of 'True' (line 1145)
        True_80300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1145, 27), 'True')
        # Assigning a type to the variable 'found_symbol' (line 1145)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1145, 12), 'found_symbol', True_80300)
        # SSA branch for the else part of an if statement (line 1142)
        module_type_store.open_ssa_branch('else')
        
        # Call to warn(...): (line 1147)
        # Processing the call arguments (line 1147)
        unicode_80302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1147, 17), 'unicode', u"No TeX to built-in Postscript mapping for '%s'")
        # Getting the type of 'sym' (line 1147)
        sym_80303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1147, 68), 'sym', False)
        # Applying the binary operator '%' (line 1147)
        result_mod_80304 = python_operator(stypy.reporting.localization.Localization(__file__, 1147, 17), '%', unicode_80302, sym_80303)
        
        # Getting the type of 'MathTextWarning' (line 1148)
        MathTextWarning_80305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1148, 17), 'MathTextWarning', False)
        # Processing the call keyword arguments (line 1147)
        kwargs_80306 = {}
        # Getting the type of 'warn' (line 1147)
        warn_80301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1147, 12), 'warn', False)
        # Calling warn(args, kwargs) (line 1147)
        warn_call_result_80307 = invoke(stypy.reporting.localization.Localization(__file__, 1147, 12), warn_80301, *[result_mod_80304, MathTextWarning_80305], **kwargs_80306)
        
        # SSA join for if statement (line 1142)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1138)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Compare to a Name (line 1150):
        
        # Assigning a Compare to a Name (line 1150):
        
        # Getting the type of 'fontname' (line 1150)
        fontname_80308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1150, 19), 'fontname')
        unicode_80309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1150, 31), 'unicode', u'it')
        # Applying the binary operator '==' (line 1150)
        result_eq_80310 = python_operator(stypy.reporting.localization.Localization(__file__, 1150, 19), '==', fontname_80308, unicode_80309)
        
        # Assigning a type to the variable 'slanted' (line 1150)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1150, 8), 'slanted', result_eq_80310)
        
        # Assigning a Call to a Name (line 1151):
        
        # Assigning a Call to a Name (line 1151):
        
        # Call to _get_font(...): (line 1151)
        # Processing the call arguments (line 1151)
        # Getting the type of 'fontname' (line 1151)
        fontname_80313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1151, 30), 'fontname', False)
        # Processing the call keyword arguments (line 1151)
        kwargs_80314 = {}
        # Getting the type of 'self' (line 1151)
        self_80311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1151, 15), 'self', False)
        # Obtaining the member '_get_font' of a type (line 1151)
        _get_font_80312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1151, 15), self_80311, '_get_font')
        # Calling _get_font(args, kwargs) (line 1151)
        _get_font_call_result_80315 = invoke(stypy.reporting.localization.Localization(__file__, 1151, 15), _get_font_80312, *[fontname_80313], **kwargs_80314)
        
        # Assigning a type to the variable 'font' (line 1151)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1151, 8), 'font', _get_font_call_result_80315)
        
        # Getting the type of 'found_symbol' (line 1153)
        found_symbol_80316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1153, 11), 'found_symbol')
        # Testing the type of an if condition (line 1153)
        if_condition_80317 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1153, 8), found_symbol_80316)
        # Assigning a type to the variable 'if_condition_80317' (line 1153)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1153, 8), 'if_condition_80317', if_condition_80317)
        # SSA begins for if statement (line 1153)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # SSA begins for try-except statement (line 1154)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Call to a Name (line 1155):
        
        # Assigning a Call to a Name (line 1155):
        
        # Call to get_name_char(...): (line 1155)
        # Processing the call arguments (line 1155)
        # Getting the type of 'glyph' (line 1155)
        glyph_80320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1155, 49), 'glyph', False)
        # Processing the call keyword arguments (line 1155)
        kwargs_80321 = {}
        # Getting the type of 'font' (line 1155)
        font_80318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1155, 30), 'font', False)
        # Obtaining the member 'get_name_char' of a type (line 1155)
        get_name_char_80319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1155, 30), font_80318, 'get_name_char')
        # Calling get_name_char(args, kwargs) (line 1155)
        get_name_char_call_result_80322 = invoke(stypy.reporting.localization.Localization(__file__, 1155, 30), get_name_char_80319, *[glyph_80320], **kwargs_80321)
        
        # Assigning a type to the variable 'symbol_name' (line 1155)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1155, 16), 'symbol_name', get_name_char_call_result_80322)
        # SSA branch for the except part of a try statement (line 1154)
        # SSA branch for the except 'KeyError' branch of a try statement (line 1154)
        module_type_store.open_ssa_branch('except')
        
        # Call to warn(...): (line 1157)
        # Processing the call arguments (line 1157)
        unicode_80324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1157, 21), 'unicode', u"No glyph in standard Postscript font '%s' for '%s'")
        
        # Obtaining an instance of the builtin type 'tuple' (line 1158)
        tuple_80325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1158)
        # Adding element type (line 1158)
        # Getting the type of 'font' (line 1158)
        font_80326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1158, 22), 'font', False)
        # Obtaining the member 'postscript_name' of a type (line 1158)
        postscript_name_80327 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1158, 22), font_80326, 'postscript_name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1158, 22), tuple_80325, postscript_name_80327)
        # Adding element type (line 1158)
        # Getting the type of 'sym' (line 1158)
        sym_80328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1158, 44), 'sym', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1158, 22), tuple_80325, sym_80328)
        
        # Applying the binary operator '%' (line 1157)
        result_mod_80329 = python_operator(stypy.reporting.localization.Localization(__file__, 1157, 21), '%', unicode_80324, tuple_80325)
        
        # Getting the type of 'MathTextWarning' (line 1159)
        MathTextWarning_80330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1159, 21), 'MathTextWarning', False)
        # Processing the call keyword arguments (line 1157)
        kwargs_80331 = {}
        # Getting the type of 'warn' (line 1157)
        warn_80323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1157, 16), 'warn', False)
        # Calling warn(args, kwargs) (line 1157)
        warn_call_result_80332 = invoke(stypy.reporting.localization.Localization(__file__, 1157, 16), warn_80323, *[result_mod_80329, MathTextWarning_80330], **kwargs_80331)
        
        
        # Assigning a Name to a Name (line 1160):
        
        # Assigning a Name to a Name (line 1160):
        # Getting the type of 'False' (line 1160)
        False_80333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1160, 31), 'False')
        # Assigning a type to the variable 'found_symbol' (line 1160)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1160, 16), 'found_symbol', False_80333)
        # SSA join for try-except statement (line 1154)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1153)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'found_symbol' (line 1162)
        found_symbol_80334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1162, 15), 'found_symbol')
        # Applying the 'not' unary operator (line 1162)
        result_not__80335 = python_operator(stypy.reporting.localization.Localization(__file__, 1162, 11), 'not', found_symbol_80334)
        
        # Testing the type of an if condition (line 1162)
        if_condition_80336 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1162, 8), result_not__80335)
        # Assigning a type to the variable 'if_condition_80336' (line 1162)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1162, 8), 'if_condition_80336', if_condition_80336)
        # SSA begins for if statement (line 1162)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Multiple assignment of 2 elements.
        
        # Assigning a Str to a Name (line 1163):
        unicode_80337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1163, 26), 'unicode', u'?')
        # Assigning a type to the variable 'sym' (line 1163)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1163, 20), 'sym', unicode_80337)
        
        # Assigning a Name to a Name (line 1163):
        # Getting the type of 'sym' (line 1163)
        sym_80338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1163, 20), 'sym')
        # Assigning a type to the variable 'glyph' (line 1163)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1163, 12), 'glyph', sym_80338)
        
        # Assigning a Call to a Name (line 1164):
        
        # Assigning a Call to a Name (line 1164):
        
        # Call to ord(...): (line 1164)
        # Processing the call arguments (line 1164)
        # Getting the type of 'glyph' (line 1164)
        glyph_80340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 22), 'glyph', False)
        # Processing the call keyword arguments (line 1164)
        kwargs_80341 = {}
        # Getting the type of 'ord' (line 1164)
        ord_80339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 18), 'ord', False)
        # Calling ord(args, kwargs) (line 1164)
        ord_call_result_80342 = invoke(stypy.reporting.localization.Localization(__file__, 1164, 18), ord_80339, *[glyph_80340], **kwargs_80341)
        
        # Assigning a type to the variable 'num' (line 1164)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1164, 12), 'num', ord_call_result_80342)
        
        # Assigning a Call to a Name (line 1165):
        
        # Assigning a Call to a Name (line 1165):
        
        # Call to get_name_char(...): (line 1165)
        # Processing the call arguments (line 1165)
        # Getting the type of 'glyph' (line 1165)
        glyph_80345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1165, 45), 'glyph', False)
        # Processing the call keyword arguments (line 1165)
        kwargs_80346 = {}
        # Getting the type of 'font' (line 1165)
        font_80343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1165, 26), 'font', False)
        # Obtaining the member 'get_name_char' of a type (line 1165)
        get_name_char_80344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1165, 26), font_80343, 'get_name_char')
        # Calling get_name_char(args, kwargs) (line 1165)
        get_name_char_call_result_80347 = invoke(stypy.reporting.localization.Localization(__file__, 1165, 26), get_name_char_80344, *[glyph_80345], **kwargs_80346)
        
        # Assigning a type to the variable 'symbol_name' (line 1165)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1165, 12), 'symbol_name', get_name_char_call_result_80347)
        # SSA join for if statement (line 1162)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Num to a Name (line 1167):
        
        # Assigning a Num to a Name (line 1167):
        int_80348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1167, 17), 'int')
        # Assigning a type to the variable 'offset' (line 1167)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1167, 8), 'offset', int_80348)
        
        # Assigning a BinOp to a Name (line 1169):
        
        # Assigning a BinOp to a Name (line 1169):
        float_80349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1169, 16), 'float')
        # Getting the type of 'fontsize' (line 1169)
        fontsize_80350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1169, 24), 'fontsize')
        # Applying the binary operator '*' (line 1169)
        result_mul_80351 = python_operator(stypy.reporting.localization.Localization(__file__, 1169, 16), '*', float_80349, fontsize_80350)
        
        # Assigning a type to the variable 'scale' (line 1169)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1169, 8), 'scale', result_mul_80351)
        
        # Assigning a ListComp to a Tuple (line 1171):
        
        # Assigning a Subscript to a Name (line 1171):
        
        # Obtaining the type of the subscript
        int_80352 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1171, 8), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to get_bbox_char(...): (line 1172)
        # Processing the call arguments (line 1172)
        # Getting the type of 'glyph' (line 1172)
        glyph_80358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 64), 'glyph', False)
        # Processing the call keyword arguments (line 1172)
        kwargs_80359 = {}
        # Getting the type of 'font' (line 1172)
        font_80356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 45), 'font', False)
        # Obtaining the member 'get_bbox_char' of a type (line 1172)
        get_bbox_char_80357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 45), font_80356, 'get_bbox_char')
        # Calling get_bbox_char(args, kwargs) (line 1172)
        get_bbox_char_call_result_80360 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 45), get_bbox_char_80357, *[glyph_80358], **kwargs_80359)
        
        comprehension_80361 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1171, 34), get_bbox_char_call_result_80360)
        # Assigning a type to the variable 'val' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 34), 'val', comprehension_80361)
        # Getting the type of 'val' (line 1171)
        val_80353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 34), 'val')
        # Getting the type of 'scale' (line 1171)
        scale_80354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 40), 'scale')
        # Applying the binary operator '*' (line 1171)
        result_mul_80355 = python_operator(stypy.reporting.localization.Localization(__file__, 1171, 34), '*', val_80353, scale_80354)
        
        list_80362 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1171, 34), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1171, 34), list_80362, result_mul_80355)
        # Obtaining the member '__getitem__' of a type (line 1171)
        getitem___80363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1171, 8), list_80362, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1171)
        subscript_call_result_80364 = invoke(stypy.reporting.localization.Localization(__file__, 1171, 8), getitem___80363, int_80352)
        
        # Assigning a type to the variable 'tuple_var_assignment_77295' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'tuple_var_assignment_77295', subscript_call_result_80364)
        
        # Assigning a Subscript to a Name (line 1171):
        
        # Obtaining the type of the subscript
        int_80365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1171, 8), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to get_bbox_char(...): (line 1172)
        # Processing the call arguments (line 1172)
        # Getting the type of 'glyph' (line 1172)
        glyph_80371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 64), 'glyph', False)
        # Processing the call keyword arguments (line 1172)
        kwargs_80372 = {}
        # Getting the type of 'font' (line 1172)
        font_80369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 45), 'font', False)
        # Obtaining the member 'get_bbox_char' of a type (line 1172)
        get_bbox_char_80370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 45), font_80369, 'get_bbox_char')
        # Calling get_bbox_char(args, kwargs) (line 1172)
        get_bbox_char_call_result_80373 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 45), get_bbox_char_80370, *[glyph_80371], **kwargs_80372)
        
        comprehension_80374 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1171, 34), get_bbox_char_call_result_80373)
        # Assigning a type to the variable 'val' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 34), 'val', comprehension_80374)
        # Getting the type of 'val' (line 1171)
        val_80366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 34), 'val')
        # Getting the type of 'scale' (line 1171)
        scale_80367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 40), 'scale')
        # Applying the binary operator '*' (line 1171)
        result_mul_80368 = python_operator(stypy.reporting.localization.Localization(__file__, 1171, 34), '*', val_80366, scale_80367)
        
        list_80375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1171, 34), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1171, 34), list_80375, result_mul_80368)
        # Obtaining the member '__getitem__' of a type (line 1171)
        getitem___80376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1171, 8), list_80375, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1171)
        subscript_call_result_80377 = invoke(stypy.reporting.localization.Localization(__file__, 1171, 8), getitem___80376, int_80365)
        
        # Assigning a type to the variable 'tuple_var_assignment_77296' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'tuple_var_assignment_77296', subscript_call_result_80377)
        
        # Assigning a Subscript to a Name (line 1171):
        
        # Obtaining the type of the subscript
        int_80378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1171, 8), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to get_bbox_char(...): (line 1172)
        # Processing the call arguments (line 1172)
        # Getting the type of 'glyph' (line 1172)
        glyph_80384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 64), 'glyph', False)
        # Processing the call keyword arguments (line 1172)
        kwargs_80385 = {}
        # Getting the type of 'font' (line 1172)
        font_80382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 45), 'font', False)
        # Obtaining the member 'get_bbox_char' of a type (line 1172)
        get_bbox_char_80383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 45), font_80382, 'get_bbox_char')
        # Calling get_bbox_char(args, kwargs) (line 1172)
        get_bbox_char_call_result_80386 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 45), get_bbox_char_80383, *[glyph_80384], **kwargs_80385)
        
        comprehension_80387 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1171, 34), get_bbox_char_call_result_80386)
        # Assigning a type to the variable 'val' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 34), 'val', comprehension_80387)
        # Getting the type of 'val' (line 1171)
        val_80379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 34), 'val')
        # Getting the type of 'scale' (line 1171)
        scale_80380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 40), 'scale')
        # Applying the binary operator '*' (line 1171)
        result_mul_80381 = python_operator(stypy.reporting.localization.Localization(__file__, 1171, 34), '*', val_80379, scale_80380)
        
        list_80388 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1171, 34), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1171, 34), list_80388, result_mul_80381)
        # Obtaining the member '__getitem__' of a type (line 1171)
        getitem___80389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1171, 8), list_80388, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1171)
        subscript_call_result_80390 = invoke(stypy.reporting.localization.Localization(__file__, 1171, 8), getitem___80389, int_80378)
        
        # Assigning a type to the variable 'tuple_var_assignment_77297' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'tuple_var_assignment_77297', subscript_call_result_80390)
        
        # Assigning a Subscript to a Name (line 1171):
        
        # Obtaining the type of the subscript
        int_80391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1171, 8), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to get_bbox_char(...): (line 1172)
        # Processing the call arguments (line 1172)
        # Getting the type of 'glyph' (line 1172)
        glyph_80397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 64), 'glyph', False)
        # Processing the call keyword arguments (line 1172)
        kwargs_80398 = {}
        # Getting the type of 'font' (line 1172)
        font_80395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 45), 'font', False)
        # Obtaining the member 'get_bbox_char' of a type (line 1172)
        get_bbox_char_80396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 45), font_80395, 'get_bbox_char')
        # Calling get_bbox_char(args, kwargs) (line 1172)
        get_bbox_char_call_result_80399 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 45), get_bbox_char_80396, *[glyph_80397], **kwargs_80398)
        
        comprehension_80400 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1171, 34), get_bbox_char_call_result_80399)
        # Assigning a type to the variable 'val' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 34), 'val', comprehension_80400)
        # Getting the type of 'val' (line 1171)
        val_80392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 34), 'val')
        # Getting the type of 'scale' (line 1171)
        scale_80393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 40), 'scale')
        # Applying the binary operator '*' (line 1171)
        result_mul_80394 = python_operator(stypy.reporting.localization.Localization(__file__, 1171, 34), '*', val_80392, scale_80393)
        
        list_80401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1171, 34), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1171, 34), list_80401, result_mul_80394)
        # Obtaining the member '__getitem__' of a type (line 1171)
        getitem___80402 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1171, 8), list_80401, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1171)
        subscript_call_result_80403 = invoke(stypy.reporting.localization.Localization(__file__, 1171, 8), getitem___80402, int_80391)
        
        # Assigning a type to the variable 'tuple_var_assignment_77298' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'tuple_var_assignment_77298', subscript_call_result_80403)
        
        # Assigning a Name to a Name (line 1171):
        # Getting the type of 'tuple_var_assignment_77295' (line 1171)
        tuple_var_assignment_77295_80404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'tuple_var_assignment_77295')
        # Assigning a type to the variable 'xmin' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'xmin', tuple_var_assignment_77295_80404)
        
        # Assigning a Name to a Name (line 1171):
        # Getting the type of 'tuple_var_assignment_77296' (line 1171)
        tuple_var_assignment_77296_80405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'tuple_var_assignment_77296')
        # Assigning a type to the variable 'ymin' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 14), 'ymin', tuple_var_assignment_77296_80405)
        
        # Assigning a Name to a Name (line 1171):
        # Getting the type of 'tuple_var_assignment_77297' (line 1171)
        tuple_var_assignment_77297_80406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'tuple_var_assignment_77297')
        # Assigning a type to the variable 'xmax' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 20), 'xmax', tuple_var_assignment_77297_80406)
        
        # Assigning a Name to a Name (line 1171):
        # Getting the type of 'tuple_var_assignment_77298' (line 1171)
        tuple_var_assignment_77298_80407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'tuple_var_assignment_77298')
        # Assigning a type to the variable 'ymax' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 26), 'ymax', tuple_var_assignment_77298_80407)
        
        # Assigning a Call to a Name (line 1173):
        
        # Assigning a Call to a Name (line 1173):
        
        # Call to Bunch(...): (line 1173)
        # Processing the call keyword arguments (line 1173)
        
        # Call to get_width_char(...): (line 1174)
        # Processing the call arguments (line 1174)
        # Getting the type of 'glyph' (line 1174)
        glyph_80411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1174, 43), 'glyph', False)
        # Processing the call keyword arguments (line 1174)
        kwargs_80412 = {}
        # Getting the type of 'font' (line 1174)
        font_80409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1174, 23), 'font', False)
        # Obtaining the member 'get_width_char' of a type (line 1174)
        get_width_char_80410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1174, 23), font_80409, 'get_width_char')
        # Calling get_width_char(args, kwargs) (line 1174)
        get_width_char_call_result_80413 = invoke(stypy.reporting.localization.Localization(__file__, 1174, 23), get_width_char_80410, *[glyph_80411], **kwargs_80412)
        
        # Getting the type of 'scale' (line 1174)
        scale_80414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1174, 52), 'scale', False)
        # Applying the binary operator '*' (line 1174)
        result_mul_80415 = python_operator(stypy.reporting.localization.Localization(__file__, 1174, 23), '*', get_width_char_call_result_80413, scale_80414)
        
        keyword_80416 = result_mul_80415
        
        # Call to get_width_char(...): (line 1175)
        # Processing the call arguments (line 1175)
        # Getting the type of 'glyph' (line 1175)
        glyph_80419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1175, 43), 'glyph', False)
        # Processing the call keyword arguments (line 1175)
        kwargs_80420 = {}
        # Getting the type of 'font' (line 1175)
        font_80417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1175, 23), 'font', False)
        # Obtaining the member 'get_width_char' of a type (line 1175)
        get_width_char_80418 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1175, 23), font_80417, 'get_width_char')
        # Calling get_width_char(args, kwargs) (line 1175)
        get_width_char_call_result_80421 = invoke(stypy.reporting.localization.Localization(__file__, 1175, 23), get_width_char_80418, *[glyph_80419], **kwargs_80420)
        
        # Getting the type of 'scale' (line 1175)
        scale_80422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1175, 52), 'scale', False)
        # Applying the binary operator '*' (line 1175)
        result_mul_80423 = python_operator(stypy.reporting.localization.Localization(__file__, 1175, 23), '*', get_width_char_call_result_80421, scale_80422)
        
        keyword_80424 = result_mul_80423
        
        # Call to get_height_char(...): (line 1176)
        # Processing the call arguments (line 1176)
        # Getting the type of 'glyph' (line 1176)
        glyph_80427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 44), 'glyph', False)
        # Processing the call keyword arguments (line 1176)
        kwargs_80428 = {}
        # Getting the type of 'font' (line 1176)
        font_80425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 23), 'font', False)
        # Obtaining the member 'get_height_char' of a type (line 1176)
        get_height_char_80426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1176, 23), font_80425, 'get_height_char')
        # Calling get_height_char(args, kwargs) (line 1176)
        get_height_char_call_result_80429 = invoke(stypy.reporting.localization.Localization(__file__, 1176, 23), get_height_char_80426, *[glyph_80427], **kwargs_80428)
        
        # Getting the type of 'scale' (line 1176)
        scale_80430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 53), 'scale', False)
        # Applying the binary operator '*' (line 1176)
        result_mul_80431 = python_operator(stypy.reporting.localization.Localization(__file__, 1176, 23), '*', get_height_char_call_result_80429, scale_80430)
        
        keyword_80432 = result_mul_80431
        # Getting the type of 'xmin' (line 1177)
        xmin_80433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1177, 19), 'xmin', False)
        keyword_80434 = xmin_80433
        # Getting the type of 'xmax' (line 1178)
        xmax_80435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1178, 19), 'xmax', False)
        keyword_80436 = xmax_80435
        # Getting the type of 'ymin' (line 1179)
        ymin_80437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1179, 19), 'ymin', False)
        # Getting the type of 'offset' (line 1179)
        offset_80438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1179, 24), 'offset', False)
        # Applying the binary operator '+' (line 1179)
        result_add_80439 = python_operator(stypy.reporting.localization.Localization(__file__, 1179, 19), '+', ymin_80437, offset_80438)
        
        keyword_80440 = result_add_80439
        # Getting the type of 'ymax' (line 1180)
        ymax_80441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1180, 19), 'ymax', False)
        # Getting the type of 'offset' (line 1180)
        offset_80442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1180, 24), 'offset', False)
        # Applying the binary operator '+' (line 1180)
        result_add_80443 = python_operator(stypy.reporting.localization.Localization(__file__, 1180, 19), '+', ymax_80441, offset_80442)
        
        keyword_80444 = result_add_80443
        # Getting the type of 'ymax' (line 1182)
        ymax_80445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1182, 22), 'ymax', False)
        # Getting the type of 'offset' (line 1182)
        offset_80446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1182, 29), 'offset', False)
        # Applying the binary operator '+' (line 1182)
        result_add_80447 = python_operator(stypy.reporting.localization.Localization(__file__, 1182, 22), '+', ymax_80445, offset_80446)
        
        keyword_80448 = result_add_80447
        # Getting the type of 'slanted' (line 1183)
        slanted_80449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1183, 22), 'slanted', False)
        keyword_80450 = slanted_80449
        kwargs_80451 = {'advance': keyword_80416, 'iceberg': keyword_80448, 'ymax': keyword_80444, 'height': keyword_80432, 'width': keyword_80424, 'slanted': keyword_80450, 'xmax': keyword_80436, 'xmin': keyword_80434, 'ymin': keyword_80440}
        # Getting the type of 'Bunch' (line 1173)
        Bunch_80408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 18), 'Bunch', False)
        # Calling Bunch(args, kwargs) (line 1173)
        Bunch_call_result_80452 = invoke(stypy.reporting.localization.Localization(__file__, 1173, 18), Bunch_80408, *[], **kwargs_80451)
        
        # Assigning a type to the variable 'metrics' (line 1173)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1173, 8), 'metrics', Bunch_call_result_80452)
        
        # Assigning a Call to a Subscript (line 1186):
        
        # Assigning a Call to a Subscript (line 1186):
        
        # Call to Bunch(...): (line 1186)
        # Processing the call keyword arguments (line 1186)
        # Getting the type of 'font' (line 1187)
        font_80454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1187, 30), 'font', False)
        keyword_80455 = font_80454
        # Getting the type of 'fontsize' (line 1188)
        fontsize_80456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1188, 30), 'fontsize', False)
        keyword_80457 = fontsize_80456
        
        # Call to get_fontname(...): (line 1189)
        # Processing the call keyword arguments (line 1189)
        kwargs_80460 = {}
        # Getting the type of 'font' (line 1189)
        font_80458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1189, 30), 'font', False)
        # Obtaining the member 'get_fontname' of a type (line 1189)
        get_fontname_80459 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1189, 30), font_80458, 'get_fontname')
        # Calling get_fontname(args, kwargs) (line 1189)
        get_fontname_call_result_80461 = invoke(stypy.reporting.localization.Localization(__file__, 1189, 30), get_fontname_80459, *[], **kwargs_80460)
        
        keyword_80462 = get_fontname_call_result_80461
        # Getting the type of 'metrics' (line 1190)
        metrics_80463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1190, 30), 'metrics', False)
        keyword_80464 = metrics_80463
        # Getting the type of 'symbol_name' (line 1191)
        symbol_name_80465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1191, 30), 'symbol_name', False)
        keyword_80466 = symbol_name_80465
        # Getting the type of 'num' (line 1192)
        num_80467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1192, 30), 'num', False)
        keyword_80468 = num_80467
        # Getting the type of 'glyph' (line 1193)
        glyph_80469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1193, 30), 'glyph', False)
        keyword_80470 = glyph_80469
        # Getting the type of 'offset' (line 1194)
        offset_80471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1194, 30), 'offset', False)
        keyword_80472 = offset_80471
        kwargs_80473 = {'symbol_name': keyword_80466, 'metrics': keyword_80464, 'num': keyword_80468, 'postscript_name': keyword_80462, 'offset': keyword_80472, 'fontsize': keyword_80457, 'font': keyword_80455, 'glyph': keyword_80470}
        # Getting the type of 'Bunch' (line 1186)
        Bunch_80453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1186, 27), 'Bunch', False)
        # Calling Bunch(args, kwargs) (line 1186)
        Bunch_call_result_80474 = invoke(stypy.reporting.localization.Localization(__file__, 1186, 27), Bunch_80453, *[], **kwargs_80473)
        
        # Getting the type of 'self' (line 1186)
        self_80475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1186, 8), 'self')
        # Obtaining the member 'glyphd' of a type (line 1186)
        glyphd_80476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1186, 8), self_80475, 'glyphd')
        # Getting the type of 'key' (line 1186)
        key_80477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1186, 20), 'key')
        # Storing an element on a container (line 1186)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1186, 8), glyphd_80476, (key_80477, Bunch_call_result_80474))
        
        # Obtaining the type of the subscript
        # Getting the type of 'key' (line 1197)
        key_80478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1197, 27), 'key')
        # Getting the type of 'self' (line 1197)
        self_80479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1197, 15), 'self')
        # Obtaining the member 'glyphd' of a type (line 1197)
        glyphd_80480 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1197, 15), self_80479, 'glyphd')
        # Obtaining the member '__getitem__' of a type (line 1197)
        getitem___80481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1197, 15), glyphd_80480, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1197)
        subscript_call_result_80482 = invoke(stypy.reporting.localization.Localization(__file__, 1197, 15), getitem___80481, key_80478)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1197)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1197, 8), 'stypy_return_type', subscript_call_result_80482)
        
        # ################# End of '_get_info(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_info' in the type store
        # Getting the type of 'stypy_return_type' (line 1121)
        stypy_return_type_80483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1121, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80483)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_info'
        return stypy_return_type_80483


    @norecursion
    def get_kern(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_kern'
        module_type_store = module_type_store.open_function_context('get_kern', 1199, 4, False)
        # Assigning a type to the variable 'self' (line 1200)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1200, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StandardPsFonts.get_kern.__dict__.__setitem__('stypy_localization', localization)
        StandardPsFonts.get_kern.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StandardPsFonts.get_kern.__dict__.__setitem__('stypy_type_store', module_type_store)
        StandardPsFonts.get_kern.__dict__.__setitem__('stypy_function_name', 'StandardPsFonts.get_kern')
        StandardPsFonts.get_kern.__dict__.__setitem__('stypy_param_names_list', ['font1', 'fontclass1', 'sym1', 'fontsize1', 'font2', 'fontclass2', 'sym2', 'fontsize2', 'dpi'])
        StandardPsFonts.get_kern.__dict__.__setitem__('stypy_varargs_param_name', None)
        StandardPsFonts.get_kern.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StandardPsFonts.get_kern.__dict__.__setitem__('stypy_call_defaults', defaults)
        StandardPsFonts.get_kern.__dict__.__setitem__('stypy_call_varargs', varargs)
        StandardPsFonts.get_kern.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StandardPsFonts.get_kern.__dict__.__setitem__('stypy_declared_arg_number', 10)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StandardPsFonts.get_kern', ['font1', 'fontclass1', 'sym1', 'fontsize1', 'font2', 'fontclass2', 'sym2', 'fontsize2', 'dpi'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_kern', localization, ['font1', 'fontclass1', 'sym1', 'fontsize1', 'font2', 'fontclass2', 'sym2', 'fontsize2', 'dpi'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_kern(...)' code ##################

        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'font1' (line 1201)
        font1_80484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 11), 'font1')
        # Getting the type of 'font2' (line 1201)
        font2_80485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 20), 'font2')
        # Applying the binary operator '==' (line 1201)
        result_eq_80486 = python_operator(stypy.reporting.localization.Localization(__file__, 1201, 11), '==', font1_80484, font2_80485)
        
        
        # Getting the type of 'fontsize1' (line 1201)
        fontsize1_80487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 30), 'fontsize1')
        # Getting the type of 'fontsize2' (line 1201)
        fontsize2_80488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 43), 'fontsize2')
        # Applying the binary operator '==' (line 1201)
        result_eq_80489 = python_operator(stypy.reporting.localization.Localization(__file__, 1201, 30), '==', fontsize1_80487, fontsize2_80488)
        
        # Applying the binary operator 'and' (line 1201)
        result_and_keyword_80490 = python_operator(stypy.reporting.localization.Localization(__file__, 1201, 11), 'and', result_eq_80486, result_eq_80489)
        
        # Testing the type of an if condition (line 1201)
        if_condition_80491 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1201, 8), result_and_keyword_80490)
        # Assigning a type to the variable 'if_condition_80491' (line 1201)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1201, 8), 'if_condition_80491', if_condition_80491)
        # SSA begins for if statement (line 1201)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1202):
        
        # Assigning a Call to a Name (line 1202):
        
        # Call to _get_info(...): (line 1202)
        # Processing the call arguments (line 1202)
        # Getting the type of 'font1' (line 1202)
        font1_80494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 35), 'font1', False)
        # Getting the type of 'fontclass1' (line 1202)
        fontclass1_80495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 42), 'fontclass1', False)
        # Getting the type of 'sym1' (line 1202)
        sym1_80496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 54), 'sym1', False)
        # Getting the type of 'fontsize1' (line 1202)
        fontsize1_80497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 60), 'fontsize1', False)
        # Getting the type of 'dpi' (line 1202)
        dpi_80498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 71), 'dpi', False)
        # Processing the call keyword arguments (line 1202)
        kwargs_80499 = {}
        # Getting the type of 'self' (line 1202)
        self_80492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 20), 'self', False)
        # Obtaining the member '_get_info' of a type (line 1202)
        _get_info_80493 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1202, 20), self_80492, '_get_info')
        # Calling _get_info(args, kwargs) (line 1202)
        _get_info_call_result_80500 = invoke(stypy.reporting.localization.Localization(__file__, 1202, 20), _get_info_80493, *[font1_80494, fontclass1_80495, sym1_80496, fontsize1_80497, dpi_80498], **kwargs_80499)
        
        # Assigning a type to the variable 'info1' (line 1202)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1202, 12), 'info1', _get_info_call_result_80500)
        
        # Assigning a Call to a Name (line 1203):
        
        # Assigning a Call to a Name (line 1203):
        
        # Call to _get_info(...): (line 1203)
        # Processing the call arguments (line 1203)
        # Getting the type of 'font2' (line 1203)
        font2_80503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 35), 'font2', False)
        # Getting the type of 'fontclass2' (line 1203)
        fontclass2_80504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 42), 'fontclass2', False)
        # Getting the type of 'sym2' (line 1203)
        sym2_80505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 54), 'sym2', False)
        # Getting the type of 'fontsize2' (line 1203)
        fontsize2_80506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 60), 'fontsize2', False)
        # Getting the type of 'dpi' (line 1203)
        dpi_80507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 71), 'dpi', False)
        # Processing the call keyword arguments (line 1203)
        kwargs_80508 = {}
        # Getting the type of 'self' (line 1203)
        self_80501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 20), 'self', False)
        # Obtaining the member '_get_info' of a type (line 1203)
        _get_info_80502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1203, 20), self_80501, '_get_info')
        # Calling _get_info(args, kwargs) (line 1203)
        _get_info_call_result_80509 = invoke(stypy.reporting.localization.Localization(__file__, 1203, 20), _get_info_80502, *[font2_80503, fontclass2_80504, sym2_80505, fontsize2_80506, dpi_80507], **kwargs_80508)
        
        # Assigning a type to the variable 'info2' (line 1203)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1203, 12), 'info2', _get_info_call_result_80509)
        
        # Assigning a Attribute to a Name (line 1204):
        
        # Assigning a Attribute to a Name (line 1204):
        # Getting the type of 'info1' (line 1204)
        info1_80510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1204, 19), 'info1')
        # Obtaining the member 'font' of a type (line 1204)
        font_80511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1204, 19), info1_80510, 'font')
        # Assigning a type to the variable 'font' (line 1204)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1204, 12), 'font', font_80511)
        
        # Call to get_kern_dist(...): (line 1205)
        # Processing the call arguments (line 1205)
        # Getting the type of 'info1' (line 1205)
        info1_80514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1205, 39), 'info1', False)
        # Obtaining the member 'glyph' of a type (line 1205)
        glyph_80515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1205, 39), info1_80514, 'glyph')
        # Getting the type of 'info2' (line 1205)
        info2_80516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1205, 52), 'info2', False)
        # Obtaining the member 'glyph' of a type (line 1205)
        glyph_80517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1205, 52), info2_80516, 'glyph')
        # Processing the call keyword arguments (line 1205)
        kwargs_80518 = {}
        # Getting the type of 'font' (line 1205)
        font_80512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1205, 20), 'font', False)
        # Obtaining the member 'get_kern_dist' of a type (line 1205)
        get_kern_dist_80513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1205, 20), font_80512, 'get_kern_dist')
        # Calling get_kern_dist(args, kwargs) (line 1205)
        get_kern_dist_call_result_80519 = invoke(stypy.reporting.localization.Localization(__file__, 1205, 20), get_kern_dist_80513, *[glyph_80515, glyph_80517], **kwargs_80518)
        
        float_80520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1206, 22), 'float')
        # Applying the binary operator '*' (line 1205)
        result_mul_80521 = python_operator(stypy.reporting.localization.Localization(__file__, 1205, 20), '*', get_kern_dist_call_result_80519, float_80520)
        
        # Getting the type of 'fontsize1' (line 1206)
        fontsize1_80522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1206, 30), 'fontsize1')
        # Applying the binary operator '*' (line 1206)
        result_mul_80523 = python_operator(stypy.reporting.localization.Localization(__file__, 1206, 28), '*', result_mul_80521, fontsize1_80522)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1205)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1205, 12), 'stypy_return_type', result_mul_80523)
        # SSA join for if statement (line 1201)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to get_kern(...): (line 1207)
        # Processing the call arguments (line 1207)
        # Getting the type of 'self' (line 1207)
        self_80526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 30), 'self', False)
        # Getting the type of 'font1' (line 1207)
        font1_80527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 36), 'font1', False)
        # Getting the type of 'fontclass1' (line 1207)
        fontclass1_80528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 43), 'fontclass1', False)
        # Getting the type of 'sym1' (line 1207)
        sym1_80529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 55), 'sym1', False)
        # Getting the type of 'fontsize1' (line 1207)
        fontsize1_80530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 61), 'fontsize1', False)
        # Getting the type of 'font2' (line 1208)
        font2_80531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1208, 30), 'font2', False)
        # Getting the type of 'fontclass2' (line 1208)
        fontclass2_80532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1208, 37), 'fontclass2', False)
        # Getting the type of 'sym2' (line 1208)
        sym2_80533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1208, 49), 'sym2', False)
        # Getting the type of 'fontsize2' (line 1208)
        fontsize2_80534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1208, 55), 'fontsize2', False)
        # Getting the type of 'dpi' (line 1208)
        dpi_80535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1208, 66), 'dpi', False)
        # Processing the call keyword arguments (line 1207)
        kwargs_80536 = {}
        # Getting the type of 'Fonts' (line 1207)
        Fonts_80524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 15), 'Fonts', False)
        # Obtaining the member 'get_kern' of a type (line 1207)
        get_kern_80525 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1207, 15), Fonts_80524, 'get_kern')
        # Calling get_kern(args, kwargs) (line 1207)
        get_kern_call_result_80537 = invoke(stypy.reporting.localization.Localization(__file__, 1207, 15), get_kern_80525, *[self_80526, font1_80527, fontclass1_80528, sym1_80529, fontsize1_80530, font2_80531, fontclass2_80532, sym2_80533, fontsize2_80534, dpi_80535], **kwargs_80536)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1207)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1207, 8), 'stypy_return_type', get_kern_call_result_80537)
        
        # ################# End of 'get_kern(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_kern' in the type store
        # Getting the type of 'stypy_return_type' (line 1199)
        stypy_return_type_80538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1199, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80538)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_kern'
        return stypy_return_type_80538


    @norecursion
    def get_xheight(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_xheight'
        module_type_store = module_type_store.open_function_context('get_xheight', 1210, 4, False)
        # Assigning a type to the variable 'self' (line 1211)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1211, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StandardPsFonts.get_xheight.__dict__.__setitem__('stypy_localization', localization)
        StandardPsFonts.get_xheight.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StandardPsFonts.get_xheight.__dict__.__setitem__('stypy_type_store', module_type_store)
        StandardPsFonts.get_xheight.__dict__.__setitem__('stypy_function_name', 'StandardPsFonts.get_xheight')
        StandardPsFonts.get_xheight.__dict__.__setitem__('stypy_param_names_list', ['font', 'fontsize', 'dpi'])
        StandardPsFonts.get_xheight.__dict__.__setitem__('stypy_varargs_param_name', None)
        StandardPsFonts.get_xheight.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StandardPsFonts.get_xheight.__dict__.__setitem__('stypy_call_defaults', defaults)
        StandardPsFonts.get_xheight.__dict__.__setitem__('stypy_call_varargs', varargs)
        StandardPsFonts.get_xheight.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StandardPsFonts.get_xheight.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StandardPsFonts.get_xheight', ['font', 'fontsize', 'dpi'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_xheight', localization, ['font', 'fontsize', 'dpi'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_xheight(...)' code ##################

        
        # Assigning a Call to a Name (line 1211):
        
        # Assigning a Call to a Name (line 1211):
        
        # Call to _get_font(...): (line 1211)
        # Processing the call arguments (line 1211)
        # Getting the type of 'font' (line 1211)
        font_80541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1211, 30), 'font', False)
        # Processing the call keyword arguments (line 1211)
        kwargs_80542 = {}
        # Getting the type of 'self' (line 1211)
        self_80539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1211, 15), 'self', False)
        # Obtaining the member '_get_font' of a type (line 1211)
        _get_font_80540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1211, 15), self_80539, '_get_font')
        # Calling _get_font(args, kwargs) (line 1211)
        _get_font_call_result_80543 = invoke(stypy.reporting.localization.Localization(__file__, 1211, 15), _get_font_80540, *[font_80541], **kwargs_80542)
        
        # Assigning a type to the variable 'font' (line 1211)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1211, 8), 'font', _get_font_call_result_80543)
        
        # Call to get_xheight(...): (line 1212)
        # Processing the call keyword arguments (line 1212)
        kwargs_80546 = {}
        # Getting the type of 'font' (line 1212)
        font_80544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 15), 'font', False)
        # Obtaining the member 'get_xheight' of a type (line 1212)
        get_xheight_80545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1212, 15), font_80544, 'get_xheight')
        # Calling get_xheight(args, kwargs) (line 1212)
        get_xheight_call_result_80547 = invoke(stypy.reporting.localization.Localization(__file__, 1212, 15), get_xheight_80545, *[], **kwargs_80546)
        
        float_80548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1212, 36), 'float')
        # Applying the binary operator '*' (line 1212)
        result_mul_80549 = python_operator(stypy.reporting.localization.Localization(__file__, 1212, 15), '*', get_xheight_call_result_80547, float_80548)
        
        # Getting the type of 'fontsize' (line 1212)
        fontsize_80550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 44), 'fontsize')
        # Applying the binary operator '*' (line 1212)
        result_mul_80551 = python_operator(stypy.reporting.localization.Localization(__file__, 1212, 42), '*', result_mul_80549, fontsize_80550)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1212)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1212, 8), 'stypy_return_type', result_mul_80551)
        
        # ################# End of 'get_xheight(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_xheight' in the type store
        # Getting the type of 'stypy_return_type' (line 1210)
        stypy_return_type_80552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1210, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80552)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_xheight'
        return stypy_return_type_80552


    @norecursion
    def get_underline_thickness(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_underline_thickness'
        module_type_store = module_type_store.open_function_context('get_underline_thickness', 1214, 4, False)
        # Assigning a type to the variable 'self' (line 1215)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1215, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StandardPsFonts.get_underline_thickness.__dict__.__setitem__('stypy_localization', localization)
        StandardPsFonts.get_underline_thickness.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StandardPsFonts.get_underline_thickness.__dict__.__setitem__('stypy_type_store', module_type_store)
        StandardPsFonts.get_underline_thickness.__dict__.__setitem__('stypy_function_name', 'StandardPsFonts.get_underline_thickness')
        StandardPsFonts.get_underline_thickness.__dict__.__setitem__('stypy_param_names_list', ['font', 'fontsize', 'dpi'])
        StandardPsFonts.get_underline_thickness.__dict__.__setitem__('stypy_varargs_param_name', None)
        StandardPsFonts.get_underline_thickness.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StandardPsFonts.get_underline_thickness.__dict__.__setitem__('stypy_call_defaults', defaults)
        StandardPsFonts.get_underline_thickness.__dict__.__setitem__('stypy_call_varargs', varargs)
        StandardPsFonts.get_underline_thickness.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StandardPsFonts.get_underline_thickness.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StandardPsFonts.get_underline_thickness', ['font', 'fontsize', 'dpi'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_underline_thickness', localization, ['font', 'fontsize', 'dpi'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_underline_thickness(...)' code ##################

        
        # Assigning a Call to a Name (line 1215):
        
        # Assigning a Call to a Name (line 1215):
        
        # Call to _get_font(...): (line 1215)
        # Processing the call arguments (line 1215)
        # Getting the type of 'font' (line 1215)
        font_80555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1215, 30), 'font', False)
        # Processing the call keyword arguments (line 1215)
        kwargs_80556 = {}
        # Getting the type of 'self' (line 1215)
        self_80553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1215, 15), 'self', False)
        # Obtaining the member '_get_font' of a type (line 1215)
        _get_font_80554 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1215, 15), self_80553, '_get_font')
        # Calling _get_font(args, kwargs) (line 1215)
        _get_font_call_result_80557 = invoke(stypy.reporting.localization.Localization(__file__, 1215, 15), _get_font_80554, *[font_80555], **kwargs_80556)
        
        # Assigning a type to the variable 'font' (line 1215)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1215, 8), 'font', _get_font_call_result_80557)
        
        # Call to get_underline_thickness(...): (line 1216)
        # Processing the call keyword arguments (line 1216)
        kwargs_80560 = {}
        # Getting the type of 'font' (line 1216)
        font_80558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1216, 15), 'font', False)
        # Obtaining the member 'get_underline_thickness' of a type (line 1216)
        get_underline_thickness_80559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1216, 15), font_80558, 'get_underline_thickness')
        # Calling get_underline_thickness(args, kwargs) (line 1216)
        get_underline_thickness_call_result_80561 = invoke(stypy.reporting.localization.Localization(__file__, 1216, 15), get_underline_thickness_80559, *[], **kwargs_80560)
        
        float_80562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1216, 48), 'float')
        # Applying the binary operator '*' (line 1216)
        result_mul_80563 = python_operator(stypy.reporting.localization.Localization(__file__, 1216, 15), '*', get_underline_thickness_call_result_80561, float_80562)
        
        # Getting the type of 'fontsize' (line 1216)
        fontsize_80564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1216, 56), 'fontsize')
        # Applying the binary operator '*' (line 1216)
        result_mul_80565 = python_operator(stypy.reporting.localization.Localization(__file__, 1216, 54), '*', result_mul_80563, fontsize_80564)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1216, 8), 'stypy_return_type', result_mul_80565)
        
        # ################# End of 'get_underline_thickness(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_underline_thickness' in the type store
        # Getting the type of 'stypy_return_type' (line 1214)
        stypy_return_type_80566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1214, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80566)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_underline_thickness'
        return stypy_return_type_80566


# Assigning a type to the variable 'StandardPsFonts' (line 1069)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1069, 0), 'StandardPsFonts', StandardPsFonts)

# Assigning a Call to a Name (line 1076):

# Call to join(...): (line 1076)
# Processing the call arguments (line 1076)

# Call to get_data_path(...): (line 1076)
# Processing the call keyword arguments (line 1076)
kwargs_80571 = {}
# Getting the type of 'get_data_path' (line 1076)
get_data_path_80570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 29), 'get_data_path', False)
# Calling get_data_path(args, kwargs) (line 1076)
get_data_path_call_result_80572 = invoke(stypy.reporting.localization.Localization(__file__, 1076, 29), get_data_path_80570, *[], **kwargs_80571)

unicode_80573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1076, 46), 'unicode', u'fonts')
unicode_80574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1076, 55), 'unicode', u'afm')
# Processing the call keyword arguments (line 1076)
kwargs_80575 = {}
# Getting the type of 'os' (line 1076)
os_80567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 15), 'os', False)
# Obtaining the member 'path' of a type (line 1076)
path_80568 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1076, 15), os_80567, 'path')
# Obtaining the member 'join' of a type (line 1076)
join_80569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1076, 15), path_80568, 'join')
# Calling join(args, kwargs) (line 1076)
join_call_result_80576 = invoke(stypy.reporting.localization.Localization(__file__, 1076, 15), join_80569, *[get_data_path_call_result_80572, unicode_80573, unicode_80574], **kwargs_80575)

# Getting the type of 'StandardPsFonts'
StandardPsFonts_80577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'StandardPsFonts')
# Setting the type of the member 'basepath' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), StandardPsFonts_80577, 'basepath', join_call_result_80576)

# Assigning a Dict to a Name (line 1078):

# Obtaining an instance of the builtin type 'dict' (line 1078)
dict_80578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1078, 14), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1078)
# Adding element type (key, value) (line 1078)
unicode_80579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1078, 16), 'unicode', u'cal')
unicode_80580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1078, 24), 'unicode', u'pzcmi8a')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1078, 14), dict_80578, (unicode_80579, unicode_80580))
# Adding element type (key, value) (line 1078)
unicode_80581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1079, 16), 'unicode', u'rm')
unicode_80582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1079, 24), 'unicode', u'pncr8a')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1078, 14), dict_80578, (unicode_80581, unicode_80582))
# Adding element type (key, value) (line 1078)
unicode_80583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1080, 16), 'unicode', u'tt')
unicode_80584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1080, 24), 'unicode', u'pcrr8a')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1078, 14), dict_80578, (unicode_80583, unicode_80584))
# Adding element type (key, value) (line 1078)
unicode_80585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1081, 16), 'unicode', u'it')
unicode_80586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1081, 24), 'unicode', u'pncri8a')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1078, 14), dict_80578, (unicode_80585, unicode_80586))
# Adding element type (key, value) (line 1078)
unicode_80587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1082, 16), 'unicode', u'sf')
unicode_80588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1082, 24), 'unicode', u'phvr8a')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1078, 14), dict_80578, (unicode_80587, unicode_80588))
# Adding element type (key, value) (line 1078)
unicode_80589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1083, 16), 'unicode', u'bf')
unicode_80590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1083, 24), 'unicode', u'pncb8a')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1078, 14), dict_80578, (unicode_80589, unicode_80590))
# Adding element type (key, value) (line 1078)
# Getting the type of 'None' (line 1084)
None_80591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1084, 16), 'None')
unicode_80592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1084, 24), 'unicode', u'psyr')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1078, 14), dict_80578, (None_80591, unicode_80592))

# Getting the type of 'StandardPsFonts'
StandardPsFonts_80593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'StandardPsFonts')
# Setting the type of the member 'fontmap' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), StandardPsFonts_80593, 'fontmap', dict_80578)

# Assigning a Num to a Name (line 1245):

# Assigning a Num to a Name (line 1245):
float_80594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1245, 18), 'float')
# Assigning a type to the variable 'SHRINK_FACTOR' (line 1245)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1245, 0), 'SHRINK_FACTOR', float_80594)

# Assigning a BinOp to a Name (line 1246):

# Assigning a BinOp to a Name (line 1246):
float_80595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1246, 18), 'float')
# Getting the type of 'SHRINK_FACTOR' (line 1246)
SHRINK_FACTOR_80596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 24), 'SHRINK_FACTOR')
# Applying the binary operator 'div' (line 1246)
result_div_80597 = python_operator(stypy.reporting.localization.Localization(__file__, 1246, 18), 'div', float_80595, SHRINK_FACTOR_80596)

# Assigning a type to the variable 'GROW_FACTOR' (line 1246)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1246, 0), 'GROW_FACTOR', result_div_80597)

# Assigning a Num to a Name (line 1249):

# Assigning a Num to a Name (line 1249):
int_80598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1249, 18), 'int')
# Assigning a type to the variable 'NUM_SIZE_LEVELS' (line 1249)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1249, 0), 'NUM_SIZE_LEVELS', int_80598)
# Declaration of the 'FontConstantsBase' class

class FontConstantsBase(object, ):
    unicode_80599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1257, (-1)), 'unicode', u"\n    A set of constants that controls how certain things, such as sub-\n    and superscripts are laid out.  These are all metrics that can't\n    be reliably retrieved from the font metrics in the font itself.\n    ")
    
    # Assigning a Num to a Name (line 1259):
    
    # Assigning a Num to a Name (line 1262):
    
    # Assigning a Num to a Name (line 1265):
    
    # Assigning a Num to a Name (line 1268):
    
    # Assigning a Num to a Name (line 1272):
    
    # Assigning a Num to a Name (line 1276):
    
    # Assigning a Num to a Name (line 1281):
    
    # Assigning a Num to a Name (line 1285):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1252, 0, False)
        # Assigning a type to the variable 'self' (line 1253)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1253, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FontConstantsBase.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'FontConstantsBase' (line 1252)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1252, 0), 'FontConstantsBase', FontConstantsBase)

# Assigning a Num to a Name (line 1259):
float_80600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1259, 19), 'float')
# Getting the type of 'FontConstantsBase'
FontConstantsBase_80601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FontConstantsBase')
# Setting the type of the member 'script_space' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FontConstantsBase_80601, 'script_space', float_80600)

# Assigning a Num to a Name (line 1262):
float_80602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1262, 14), 'float')
# Getting the type of 'FontConstantsBase'
FontConstantsBase_80603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FontConstantsBase')
# Setting the type of the member 'subdrop' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FontConstantsBase_80603, 'subdrop', float_80602)

# Assigning a Num to a Name (line 1265):
float_80604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1265, 11), 'float')
# Getting the type of 'FontConstantsBase'
FontConstantsBase_80605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FontConstantsBase')
# Setting the type of the member 'sup1' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FontConstantsBase_80605, 'sup1', float_80604)

# Assigning a Num to a Name (line 1268):
float_80606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1268, 11), 'float')
# Getting the type of 'FontConstantsBase'
FontConstantsBase_80607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FontConstantsBase')
# Setting the type of the member 'sub1' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FontConstantsBase_80607, 'sub1', float_80606)

# Assigning a Num to a Name (line 1272):
float_80608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1272, 11), 'float')
# Getting the type of 'FontConstantsBase'
FontConstantsBase_80609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FontConstantsBase')
# Setting the type of the member 'sub2' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FontConstantsBase_80609, 'sub2', float_80608)

# Assigning a Num to a Name (line 1276):
float_80610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1276, 12), 'float')
# Getting the type of 'FontConstantsBase'
FontConstantsBase_80611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FontConstantsBase')
# Setting the type of the member 'delta' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FontConstantsBase_80611, 'delta', float_80610)

# Assigning a Num to a Name (line 1281):
float_80612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1281, 20), 'float')
# Getting the type of 'FontConstantsBase'
FontConstantsBase_80613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FontConstantsBase')
# Setting the type of the member 'delta_slanted' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FontConstantsBase_80613, 'delta_slanted', float_80612)

# Assigning a Num to a Name (line 1285):
float_80614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1285, 21), 'float')
# Getting the type of 'FontConstantsBase'
FontConstantsBase_80615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'FontConstantsBase')
# Setting the type of the member 'delta_integral' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), FontConstantsBase_80615, 'delta_integral', float_80614)
# Declaration of the 'ComputerModernFontConstants' class
# Getting the type of 'FontConstantsBase' (line 1288)
FontConstantsBase_80616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 34), 'FontConstantsBase')

class ComputerModernFontConstants(FontConstantsBase_80616, ):
    
    # Assigning a Num to a Name (line 1289):
    
    # Assigning a Num to a Name (line 1290):
    
    # Assigning a Num to a Name (line 1291):
    
    # Assigning a Num to a Name (line 1292):
    
    # Assigning a Num to a Name (line 1293):
    
    # Assigning a Num to a Name (line 1294):
    
    # Assigning a Num to a Name (line 1295):
    
    # Assigning a Num to a Name (line 1296):
    pass

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1288, 0, False)
        # Assigning a type to the variable 'self' (line 1289)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1289, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ComputerModernFontConstants.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'ComputerModernFontConstants' (line 1288)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1288, 0), 'ComputerModernFontConstants', ComputerModernFontConstants)

# Assigning a Num to a Name (line 1289):
float_80617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1289, 19), 'float')
# Getting the type of 'ComputerModernFontConstants'
ComputerModernFontConstants_80618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'ComputerModernFontConstants')
# Setting the type of the member 'script_space' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), ComputerModernFontConstants_80618, 'script_space', float_80617)

# Assigning a Num to a Name (line 1290):
float_80619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1290, 14), 'float')
# Getting the type of 'ComputerModernFontConstants'
ComputerModernFontConstants_80620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'ComputerModernFontConstants')
# Setting the type of the member 'subdrop' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), ComputerModernFontConstants_80620, 'subdrop', float_80619)

# Assigning a Num to a Name (line 1291):
float_80621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1291, 11), 'float')
# Getting the type of 'ComputerModernFontConstants'
ComputerModernFontConstants_80622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'ComputerModernFontConstants')
# Setting the type of the member 'sup1' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), ComputerModernFontConstants_80622, 'sup1', float_80621)

# Assigning a Num to a Name (line 1292):
float_80623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1292, 11), 'float')
# Getting the type of 'ComputerModernFontConstants'
ComputerModernFontConstants_80624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'ComputerModernFontConstants')
# Setting the type of the member 'sub1' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), ComputerModernFontConstants_80624, 'sub1', float_80623)

# Assigning a Num to a Name (line 1293):
float_80625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1293, 11), 'float')
# Getting the type of 'ComputerModernFontConstants'
ComputerModernFontConstants_80626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'ComputerModernFontConstants')
# Setting the type of the member 'sub2' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), ComputerModernFontConstants_80626, 'sub2', float_80625)

# Assigning a Num to a Name (line 1294):
float_80627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1294, 12), 'float')
# Getting the type of 'ComputerModernFontConstants'
ComputerModernFontConstants_80628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'ComputerModernFontConstants')
# Setting the type of the member 'delta' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), ComputerModernFontConstants_80628, 'delta', float_80627)

# Assigning a Num to a Name (line 1295):
float_80629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1295, 20), 'float')
# Getting the type of 'ComputerModernFontConstants'
ComputerModernFontConstants_80630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'ComputerModernFontConstants')
# Setting the type of the member 'delta_slanted' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), ComputerModernFontConstants_80630, 'delta_slanted', float_80629)

# Assigning a Num to a Name (line 1296):
float_80631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1296, 21), 'float')
# Getting the type of 'ComputerModernFontConstants'
ComputerModernFontConstants_80632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'ComputerModernFontConstants')
# Setting the type of the member 'delta_integral' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), ComputerModernFontConstants_80632, 'delta_integral', float_80631)
# Declaration of the 'STIXFontConstants' class
# Getting the type of 'FontConstantsBase' (line 1299)
FontConstantsBase_80633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 24), 'FontConstantsBase')

class STIXFontConstants(FontConstantsBase_80633, ):
    
    # Assigning a Num to a Name (line 1300):
    
    # Assigning a Num to a Name (line 1301):
    
    # Assigning a Num to a Name (line 1302):
    
    # Assigning a Num to a Name (line 1303):
    
    # Assigning a Num to a Name (line 1304):
    
    # Assigning a Num to a Name (line 1305):
    pass

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1299, 0, False)
        # Assigning a type to the variable 'self' (line 1300)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1300, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'STIXFontConstants.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'STIXFontConstants' (line 1299)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1299, 0), 'STIXFontConstants', STIXFontConstants)

# Assigning a Num to a Name (line 1300):
float_80634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1300, 19), 'float')
# Getting the type of 'STIXFontConstants'
STIXFontConstants_80635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'STIXFontConstants')
# Setting the type of the member 'script_space' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), STIXFontConstants_80635, 'script_space', float_80634)

# Assigning a Num to a Name (line 1301):
float_80636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1301, 11), 'float')
# Getting the type of 'STIXFontConstants'
STIXFontConstants_80637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'STIXFontConstants')
# Setting the type of the member 'sup1' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), STIXFontConstants_80637, 'sup1', float_80636)

# Assigning a Num to a Name (line 1302):
float_80638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1302, 11), 'float')
# Getting the type of 'STIXFontConstants'
STIXFontConstants_80639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'STIXFontConstants')
# Setting the type of the member 'sub2' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), STIXFontConstants_80639, 'sub2', float_80638)

# Assigning a Num to a Name (line 1303):
float_80640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1303, 12), 'float')
# Getting the type of 'STIXFontConstants'
STIXFontConstants_80641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'STIXFontConstants')
# Setting the type of the member 'delta' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), STIXFontConstants_80641, 'delta', float_80640)

# Assigning a Num to a Name (line 1304):
float_80642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1304, 20), 'float')
# Getting the type of 'STIXFontConstants'
STIXFontConstants_80643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'STIXFontConstants')
# Setting the type of the member 'delta_slanted' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), STIXFontConstants_80643, 'delta_slanted', float_80642)

# Assigning a Num to a Name (line 1305):
float_80644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1305, 21), 'float')
# Getting the type of 'STIXFontConstants'
STIXFontConstants_80645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'STIXFontConstants')
# Setting the type of the member 'delta_integral' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), STIXFontConstants_80645, 'delta_integral', float_80644)
# Declaration of the 'STIXSansFontConstants' class
# Getting the type of 'FontConstantsBase' (line 1308)
FontConstantsBase_80646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1308, 28), 'FontConstantsBase')

class STIXSansFontConstants(FontConstantsBase_80646, ):
    
    # Assigning a Num to a Name (line 1309):
    
    # Assigning a Num to a Name (line 1310):
    
    # Assigning a Num to a Name (line 1311):
    
    # Assigning a Num to a Name (line 1312):
    pass

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1308, 0, False)
        # Assigning a type to the variable 'self' (line 1309)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1309, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'STIXSansFontConstants.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'STIXSansFontConstants' (line 1308)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1308, 0), 'STIXSansFontConstants', STIXSansFontConstants)

# Assigning a Num to a Name (line 1309):
float_80647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1309, 19), 'float')
# Getting the type of 'STIXSansFontConstants'
STIXSansFontConstants_80648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'STIXSansFontConstants')
# Setting the type of the member 'script_space' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), STIXSansFontConstants_80648, 'script_space', float_80647)

# Assigning a Num to a Name (line 1310):
float_80649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1310, 11), 'float')
# Getting the type of 'STIXSansFontConstants'
STIXSansFontConstants_80650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'STIXSansFontConstants')
# Setting the type of the member 'sup1' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), STIXSansFontConstants_80650, 'sup1', float_80649)

# Assigning a Num to a Name (line 1311):
float_80651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1311, 20), 'float')
# Getting the type of 'STIXSansFontConstants'
STIXSansFontConstants_80652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'STIXSansFontConstants')
# Setting the type of the member 'delta_slanted' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), STIXSansFontConstants_80652, 'delta_slanted', float_80651)

# Assigning a Num to a Name (line 1312):
float_80653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1312, 21), 'float')
# Getting the type of 'STIXSansFontConstants'
STIXSansFontConstants_80654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'STIXSansFontConstants')
# Setting the type of the member 'delta_integral' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), STIXSansFontConstants_80654, 'delta_integral', float_80653)
# Declaration of the 'DejaVuSerifFontConstants' class
# Getting the type of 'FontConstantsBase' (line 1315)
FontConstantsBase_80655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1315, 31), 'FontConstantsBase')

class DejaVuSerifFontConstants(FontConstantsBase_80655, ):
    pass

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1315, 0, False)
        # Assigning a type to the variable 'self' (line 1316)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1316, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DejaVuSerifFontConstants.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'DejaVuSerifFontConstants' (line 1315)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1315, 0), 'DejaVuSerifFontConstants', DejaVuSerifFontConstants)
# Declaration of the 'DejaVuSansFontConstants' class
# Getting the type of 'FontConstantsBase' (line 1319)
FontConstantsBase_80656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1319, 30), 'FontConstantsBase')

class DejaVuSansFontConstants(FontConstantsBase_80656, ):
    pass

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1319, 0, False)
        # Assigning a type to the variable 'self' (line 1320)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1320, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DejaVuSansFontConstants.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'DejaVuSansFontConstants' (line 1319)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1319, 0), 'DejaVuSansFontConstants', DejaVuSansFontConstants)

# Assigning a Dict to a Name (line 1324):

# Assigning a Dict to a Name (line 1324):

# Obtaining an instance of the builtin type 'dict' (line 1324)
dict_80657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1324, 25), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1324)
# Adding element type (key, value) (line 1324)
unicode_80658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1325, 4), 'unicode', u'DejaVu Sans')
# Getting the type of 'DejaVuSansFontConstants' (line 1325)
DejaVuSansFontConstants_80659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1325, 19), 'DejaVuSansFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80658, DejaVuSansFontConstants_80659))
# Adding element type (key, value) (line 1324)
unicode_80660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1326, 4), 'unicode', u'DejaVu Sans Mono')
# Getting the type of 'DejaVuSansFontConstants' (line 1326)
DejaVuSansFontConstants_80661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1326, 24), 'DejaVuSansFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80660, DejaVuSansFontConstants_80661))
# Adding element type (key, value) (line 1324)
unicode_80662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1327, 4), 'unicode', u'DejaVu Serif')
# Getting the type of 'DejaVuSerifFontConstants' (line 1327)
DejaVuSerifFontConstants_80663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1327, 20), 'DejaVuSerifFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80662, DejaVuSerifFontConstants_80663))
# Adding element type (key, value) (line 1324)
unicode_80664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1328, 4), 'unicode', u'cmb10')
# Getting the type of 'ComputerModernFontConstants' (line 1328)
ComputerModernFontConstants_80665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1328, 13), 'ComputerModernFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80664, ComputerModernFontConstants_80665))
# Adding element type (key, value) (line 1324)
unicode_80666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1329, 4), 'unicode', u'cmex10')
# Getting the type of 'ComputerModernFontConstants' (line 1329)
ComputerModernFontConstants_80667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1329, 14), 'ComputerModernFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80666, ComputerModernFontConstants_80667))
# Adding element type (key, value) (line 1324)
unicode_80668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1330, 4), 'unicode', u'cmmi10')
# Getting the type of 'ComputerModernFontConstants' (line 1330)
ComputerModernFontConstants_80669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1330, 14), 'ComputerModernFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80668, ComputerModernFontConstants_80669))
# Adding element type (key, value) (line 1324)
unicode_80670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1331, 4), 'unicode', u'cmr10')
# Getting the type of 'ComputerModernFontConstants' (line 1331)
ComputerModernFontConstants_80671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1331, 13), 'ComputerModernFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80670, ComputerModernFontConstants_80671))
# Adding element type (key, value) (line 1324)
unicode_80672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1332, 4), 'unicode', u'cmss10')
# Getting the type of 'ComputerModernFontConstants' (line 1332)
ComputerModernFontConstants_80673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 14), 'ComputerModernFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80672, ComputerModernFontConstants_80673))
# Adding element type (key, value) (line 1324)
unicode_80674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1333, 4), 'unicode', u'cmsy10')
# Getting the type of 'ComputerModernFontConstants' (line 1333)
ComputerModernFontConstants_80675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1333, 14), 'ComputerModernFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80674, ComputerModernFontConstants_80675))
# Adding element type (key, value) (line 1324)
unicode_80676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1334, 4), 'unicode', u'cmtt10')
# Getting the type of 'ComputerModernFontConstants' (line 1334)
ComputerModernFontConstants_80677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1334, 14), 'ComputerModernFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80676, ComputerModernFontConstants_80677))
# Adding element type (key, value) (line 1324)
unicode_80678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1335, 4), 'unicode', u'STIXGeneral')
# Getting the type of 'STIXFontConstants' (line 1335)
STIXFontConstants_80679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1335, 19), 'STIXFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80678, STIXFontConstants_80679))
# Adding element type (key, value) (line 1324)
unicode_80680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1336, 4), 'unicode', u'STIXNonUnicode')
# Getting the type of 'STIXFontConstants' (line 1336)
STIXFontConstants_80681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1336, 22), 'STIXFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80680, STIXFontConstants_80681))
# Adding element type (key, value) (line 1324)
unicode_80682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1337, 4), 'unicode', u'STIXSizeFiveSym')
# Getting the type of 'STIXFontConstants' (line 1337)
STIXFontConstants_80683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1337, 23), 'STIXFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80682, STIXFontConstants_80683))
# Adding element type (key, value) (line 1324)
unicode_80684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1338, 4), 'unicode', u'STIXSizeFourSym')
# Getting the type of 'STIXFontConstants' (line 1338)
STIXFontConstants_80685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1338, 23), 'STIXFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80684, STIXFontConstants_80685))
# Adding element type (key, value) (line 1324)
unicode_80686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1339, 4), 'unicode', u'STIXSizeThreeSym')
# Getting the type of 'STIXFontConstants' (line 1339)
STIXFontConstants_80687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1339, 24), 'STIXFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80686, STIXFontConstants_80687))
# Adding element type (key, value) (line 1324)
unicode_80688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1340, 4), 'unicode', u'STIXSizeTwoSym')
# Getting the type of 'STIXFontConstants' (line 1340)
STIXFontConstants_80689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1340, 22), 'STIXFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80688, STIXFontConstants_80689))
# Adding element type (key, value) (line 1324)
unicode_80690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1341, 4), 'unicode', u'STIXSizeOneSym')
# Getting the type of 'STIXFontConstants' (line 1341)
STIXFontConstants_80691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1341, 22), 'STIXFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80690, STIXFontConstants_80691))
# Adding element type (key, value) (line 1324)
unicode_80692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1343, 4), 'unicode', u'Bitstream Vera Sans')
# Getting the type of 'DejaVuSansFontConstants' (line 1343)
DejaVuSansFontConstants_80693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1343, 27), 'DejaVuSansFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80692, DejaVuSansFontConstants_80693))
# Adding element type (key, value) (line 1324)
unicode_80694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 4), 'unicode', u'Bitstream Vera')
# Getting the type of 'DejaVuSansFontConstants' (line 1344)
DejaVuSansFontConstants_80695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 22), 'DejaVuSansFontConstants')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1324, 25), dict_80657, (unicode_80694, DejaVuSansFontConstants_80695))

# Assigning a type to the variable '_font_constant_mapping' (line 1324)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1324, 0), '_font_constant_mapping', dict_80657)

@norecursion
def _get_font_constant_set(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_get_font_constant_set'
    module_type_store = module_type_store.open_function_context('_get_font_constant_set', 1348, 0, False)
    
    # Passed parameters checking function
    _get_font_constant_set.stypy_localization = localization
    _get_font_constant_set.stypy_type_of_self = None
    _get_font_constant_set.stypy_type_store = module_type_store
    _get_font_constant_set.stypy_function_name = '_get_font_constant_set'
    _get_font_constant_set.stypy_param_names_list = ['state']
    _get_font_constant_set.stypy_varargs_param_name = None
    _get_font_constant_set.stypy_kwargs_param_name = None
    _get_font_constant_set.stypy_call_defaults = defaults
    _get_font_constant_set.stypy_call_varargs = varargs
    _get_font_constant_set.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_get_font_constant_set', ['state'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_get_font_constant_set', localization, ['state'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_get_font_constant_set(...)' code ##################

    
    # Assigning a Call to a Name (line 1349):
    
    # Assigning a Call to a Name (line 1349):
    
    # Call to get(...): (line 1349)
    # Processing the call arguments (line 1349)
    
    # Call to _get_font(...): (line 1350)
    # Processing the call arguments (line 1350)
    # Getting the type of 'state' (line 1350)
    state_80701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 36), 'state', False)
    # Obtaining the member 'font' of a type (line 1350)
    font_80702 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1350, 36), state_80701, 'font')
    # Processing the call keyword arguments (line 1350)
    kwargs_80703 = {}
    # Getting the type of 'state' (line 1350)
    state_80698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 8), 'state', False)
    # Obtaining the member 'font_output' of a type (line 1350)
    font_output_80699 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1350, 8), state_80698, 'font_output')
    # Obtaining the member '_get_font' of a type (line 1350)
    _get_font_80700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1350, 8), font_output_80699, '_get_font')
    # Calling _get_font(args, kwargs) (line 1350)
    _get_font_call_result_80704 = invoke(stypy.reporting.localization.Localization(__file__, 1350, 8), _get_font_80700, *[font_80702], **kwargs_80703)
    
    # Obtaining the member 'family_name' of a type (line 1350)
    family_name_80705 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1350, 8), _get_font_call_result_80704, 'family_name')
    # Getting the type of 'FontConstantsBase' (line 1351)
    FontConstantsBase_80706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1351, 8), 'FontConstantsBase', False)
    # Processing the call keyword arguments (line 1349)
    kwargs_80707 = {}
    # Getting the type of '_font_constant_mapping' (line 1349)
    _font_constant_mapping_80696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1349, 16), '_font_constant_mapping', False)
    # Obtaining the member 'get' of a type (line 1349)
    get_80697 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1349, 16), _font_constant_mapping_80696, 'get')
    # Calling get(args, kwargs) (line 1349)
    get_call_result_80708 = invoke(stypy.reporting.localization.Localization(__file__, 1349, 16), get_80697, *[family_name_80705, FontConstantsBase_80706], **kwargs_80707)
    
    # Assigning a type to the variable 'constants' (line 1349)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1349, 4), 'constants', get_call_result_80708)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'constants' (line 1354)
    constants_80709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1354, 8), 'constants')
    # Getting the type of 'STIXFontConstants' (line 1354)
    STIXFontConstants_80710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1354, 21), 'STIXFontConstants')
    # Applying the binary operator 'is' (line 1354)
    result_is__80711 = python_operator(stypy.reporting.localization.Localization(__file__, 1354, 8), 'is', constants_80709, STIXFontConstants_80710)
    
    
    # Call to isinstance(...): (line 1355)
    # Processing the call arguments (line 1355)
    # Getting the type of 'state' (line 1355)
    state_80713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1355, 23), 'state', False)
    # Obtaining the member 'font_output' of a type (line 1355)
    font_output_80714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1355, 23), state_80713, 'font_output')
    # Getting the type of 'StixSansFonts' (line 1355)
    StixSansFonts_80715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1355, 42), 'StixSansFonts', False)
    # Processing the call keyword arguments (line 1355)
    kwargs_80716 = {}
    # Getting the type of 'isinstance' (line 1355)
    isinstance_80712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1355, 12), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 1355)
    isinstance_call_result_80717 = invoke(stypy.reporting.localization.Localization(__file__, 1355, 12), isinstance_80712, *[font_output_80714, StixSansFonts_80715], **kwargs_80716)
    
    # Applying the binary operator 'and' (line 1354)
    result_and_keyword_80718 = python_operator(stypy.reporting.localization.Localization(__file__, 1354, 8), 'and', result_is__80711, isinstance_call_result_80717)
    
    # Testing the type of an if condition (line 1354)
    if_condition_80719 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1354, 4), result_and_keyword_80718)
    # Assigning a type to the variable 'if_condition_80719' (line 1354)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1354, 4), 'if_condition_80719', if_condition_80719)
    # SSA begins for if statement (line 1354)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'STIXSansFontConstants' (line 1356)
    STIXSansFontConstants_80720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1356, 15), 'STIXSansFontConstants')
    # Assigning a type to the variable 'stypy_return_type' (line 1356)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1356, 8), 'stypy_return_type', STIXSansFontConstants_80720)
    # SSA join for if statement (line 1354)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'constants' (line 1357)
    constants_80721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1357, 11), 'constants')
    # Assigning a type to the variable 'stypy_return_type' (line 1357)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1357, 4), 'stypy_return_type', constants_80721)
    
    # ################# End of '_get_font_constant_set(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_get_font_constant_set' in the type store
    # Getting the type of 'stypy_return_type' (line 1348)
    stypy_return_type_80722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1348, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_80722)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_get_font_constant_set'
    return stypy_return_type_80722

# Assigning a type to the variable '_get_font_constant_set' (line 1348)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1348, 0), '_get_font_constant_set', _get_font_constant_set)
# Declaration of the 'MathTextWarning' class
# Getting the type of 'Warning' (line 1360)
Warning_80723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1360, 22), 'Warning')

class MathTextWarning(Warning_80723, ):
    pass

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1360, 0, False)
        # Assigning a type to the variable 'self' (line 1361)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1361, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathTextWarning.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'MathTextWarning' (line 1360)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1360, 0), 'MathTextWarning', MathTextWarning)
# Declaration of the 'Node' class

class Node(object, ):
    unicode_80724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1366, (-1)), 'unicode', u'\n    A node in the TeX box model\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1367, 4, False)
        # Assigning a type to the variable 'self' (line 1368)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1368, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Node.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Num to a Attribute (line 1368):
        
        # Assigning a Num to a Attribute (line 1368):
        int_80725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1368, 20), 'int')
        # Getting the type of 'self' (line 1368)
        self_80726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1368, 8), 'self')
        # Setting the type of the member 'size' of a type (line 1368)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1368, 8), self_80726, 'size', int_80725)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def stypy__repr__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__repr__'
        module_type_store = module_type_store.open_function_context('__repr__', 1370, 4, False)
        # Assigning a type to the variable 'self' (line 1371)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1371, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Node.stypy__repr__.__dict__.__setitem__('stypy_localization', localization)
        Node.stypy__repr__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Node.stypy__repr__.__dict__.__setitem__('stypy_type_store', module_type_store)
        Node.stypy__repr__.__dict__.__setitem__('stypy_function_name', 'Node.stypy__repr__')
        Node.stypy__repr__.__dict__.__setitem__('stypy_param_names_list', [])
        Node.stypy__repr__.__dict__.__setitem__('stypy_varargs_param_name', None)
        Node.stypy__repr__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Node.stypy__repr__.__dict__.__setitem__('stypy_call_defaults', defaults)
        Node.stypy__repr__.__dict__.__setitem__('stypy_call_varargs', varargs)
        Node.stypy__repr__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Node.stypy__repr__.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Node.stypy__repr__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__repr__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__repr__(...)' code ##################

        
        # Call to __internal_repr__(...): (line 1371)
        # Processing the call keyword arguments (line 1371)
        kwargs_80729 = {}
        # Getting the type of 'self' (line 1371)
        self_80727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 15), 'self', False)
        # Obtaining the member '__internal_repr__' of a type (line 1371)
        internal_repr___80728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1371, 15), self_80727, '__internal_repr__')
        # Calling __internal_repr__(args, kwargs) (line 1371)
        internal_repr___call_result_80730 = invoke(stypy.reporting.localization.Localization(__file__, 1371, 15), internal_repr___80728, *[], **kwargs_80729)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1371)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1371, 8), 'stypy_return_type', internal_repr___call_result_80730)
        
        # ################# End of '__repr__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__repr__' in the type store
        # Getting the type of 'stypy_return_type' (line 1370)
        stypy_return_type_80731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80731)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__repr__'
        return stypy_return_type_80731


    @norecursion
    def __internal_repr__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__internal_repr__'
        module_type_store = module_type_store.open_function_context('__internal_repr__', 1373, 4, False)
        # Assigning a type to the variable 'self' (line 1374)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1374, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Node.__internal_repr__.__dict__.__setitem__('stypy_localization', localization)
        Node.__internal_repr__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Node.__internal_repr__.__dict__.__setitem__('stypy_type_store', module_type_store)
        Node.__internal_repr__.__dict__.__setitem__('stypy_function_name', 'Node.__internal_repr__')
        Node.__internal_repr__.__dict__.__setitem__('stypy_param_names_list', [])
        Node.__internal_repr__.__dict__.__setitem__('stypy_varargs_param_name', None)
        Node.__internal_repr__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Node.__internal_repr__.__dict__.__setitem__('stypy_call_defaults', defaults)
        Node.__internal_repr__.__dict__.__setitem__('stypy_call_varargs', varargs)
        Node.__internal_repr__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Node.__internal_repr__.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Node.__internal_repr__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__internal_repr__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__internal_repr__(...)' code ##################

        # Getting the type of 'self' (line 1374)
        self_80732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1374, 15), 'self')
        # Obtaining the member '__class__' of a type (line 1374)
        class___80733 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1374, 15), self_80732, '__class__')
        # Obtaining the member '__name__' of a type (line 1374)
        name___80734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1374, 15), class___80733, '__name__')
        # Assigning a type to the variable 'stypy_return_type' (line 1374)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1374, 8), 'stypy_return_type', name___80734)
        
        # ################# End of '__internal_repr__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__internal_repr__' in the type store
        # Getting the type of 'stypy_return_type' (line 1373)
        stypy_return_type_80735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1373, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80735)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__internal_repr__'
        return stypy_return_type_80735


    @norecursion
    def get_kerning(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_kerning'
        module_type_store = module_type_store.open_function_context('get_kerning', 1376, 4, False)
        # Assigning a type to the variable 'self' (line 1377)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1377, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Node.get_kerning.__dict__.__setitem__('stypy_localization', localization)
        Node.get_kerning.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Node.get_kerning.__dict__.__setitem__('stypy_type_store', module_type_store)
        Node.get_kerning.__dict__.__setitem__('stypy_function_name', 'Node.get_kerning')
        Node.get_kerning.__dict__.__setitem__('stypy_param_names_list', ['next'])
        Node.get_kerning.__dict__.__setitem__('stypy_varargs_param_name', None)
        Node.get_kerning.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Node.get_kerning.__dict__.__setitem__('stypy_call_defaults', defaults)
        Node.get_kerning.__dict__.__setitem__('stypy_call_varargs', varargs)
        Node.get_kerning.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Node.get_kerning.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Node.get_kerning', ['next'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_kerning', localization, ['next'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_kerning(...)' code ##################

        float_80736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1377, 15), 'float')
        # Assigning a type to the variable 'stypy_return_type' (line 1377)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1377, 8), 'stypy_return_type', float_80736)
        
        # ################# End of 'get_kerning(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_kerning' in the type store
        # Getting the type of 'stypy_return_type' (line 1376)
        stypy_return_type_80737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1376, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80737)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_kerning'
        return stypy_return_type_80737


    @norecursion
    def shrink(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'shrink'
        module_type_store = module_type_store.open_function_context('shrink', 1379, 4, False)
        # Assigning a type to the variable 'self' (line 1380)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1380, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Node.shrink.__dict__.__setitem__('stypy_localization', localization)
        Node.shrink.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Node.shrink.__dict__.__setitem__('stypy_type_store', module_type_store)
        Node.shrink.__dict__.__setitem__('stypy_function_name', 'Node.shrink')
        Node.shrink.__dict__.__setitem__('stypy_param_names_list', [])
        Node.shrink.__dict__.__setitem__('stypy_varargs_param_name', None)
        Node.shrink.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Node.shrink.__dict__.__setitem__('stypy_call_defaults', defaults)
        Node.shrink.__dict__.__setitem__('stypy_call_varargs', varargs)
        Node.shrink.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Node.shrink.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Node.shrink', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'shrink', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'shrink(...)' code ##################

        unicode_80738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1383, (-1)), 'unicode', u'\n        Shrinks one level smaller.  There are only three levels of\n        sizes, after which things will no longer get smaller.\n        ')
        
        # Getting the type of 'self' (line 1384)
        self_80739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1384, 8), 'self')
        # Obtaining the member 'size' of a type (line 1384)
        size_80740 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1384, 8), self_80739, 'size')
        int_80741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1384, 21), 'int')
        # Applying the binary operator '+=' (line 1384)
        result_iadd_80742 = python_operator(stypy.reporting.localization.Localization(__file__, 1384, 8), '+=', size_80740, int_80741)
        # Getting the type of 'self' (line 1384)
        self_80743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1384, 8), 'self')
        # Setting the type of the member 'size' of a type (line 1384)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1384, 8), self_80743, 'size', result_iadd_80742)
        
        
        # ################# End of 'shrink(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'shrink' in the type store
        # Getting the type of 'stypy_return_type' (line 1379)
        stypy_return_type_80744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1379, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80744)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'shrink'
        return stypy_return_type_80744


    @norecursion
    def grow(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'grow'
        module_type_store = module_type_store.open_function_context('grow', 1386, 4, False)
        # Assigning a type to the variable 'self' (line 1387)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1387, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Node.grow.__dict__.__setitem__('stypy_localization', localization)
        Node.grow.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Node.grow.__dict__.__setitem__('stypy_type_store', module_type_store)
        Node.grow.__dict__.__setitem__('stypy_function_name', 'Node.grow')
        Node.grow.__dict__.__setitem__('stypy_param_names_list', [])
        Node.grow.__dict__.__setitem__('stypy_varargs_param_name', None)
        Node.grow.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Node.grow.__dict__.__setitem__('stypy_call_defaults', defaults)
        Node.grow.__dict__.__setitem__('stypy_call_varargs', varargs)
        Node.grow.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Node.grow.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Node.grow', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'grow', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'grow(...)' code ##################

        unicode_80745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1390, (-1)), 'unicode', u'\n        Grows one level larger.  There is no limit to how big\n        something can get.\n        ')
        
        # Getting the type of 'self' (line 1391)
        self_80746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1391, 8), 'self')
        # Obtaining the member 'size' of a type (line 1391)
        size_80747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1391, 8), self_80746, 'size')
        int_80748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1391, 21), 'int')
        # Applying the binary operator '-=' (line 1391)
        result_isub_80749 = python_operator(stypy.reporting.localization.Localization(__file__, 1391, 8), '-=', size_80747, int_80748)
        # Getting the type of 'self' (line 1391)
        self_80750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1391, 8), 'self')
        # Setting the type of the member 'size' of a type (line 1391)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1391, 8), self_80750, 'size', result_isub_80749)
        
        
        # ################# End of 'grow(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'grow' in the type store
        # Getting the type of 'stypy_return_type' (line 1386)
        stypy_return_type_80751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1386, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80751)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'grow'
        return stypy_return_type_80751


    @norecursion
    def render(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render'
        module_type_store = module_type_store.open_function_context('render', 1393, 4, False)
        # Assigning a type to the variable 'self' (line 1394)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1394, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Node.render.__dict__.__setitem__('stypy_localization', localization)
        Node.render.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Node.render.__dict__.__setitem__('stypy_type_store', module_type_store)
        Node.render.__dict__.__setitem__('stypy_function_name', 'Node.render')
        Node.render.__dict__.__setitem__('stypy_param_names_list', ['x', 'y'])
        Node.render.__dict__.__setitem__('stypy_varargs_param_name', None)
        Node.render.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Node.render.__dict__.__setitem__('stypy_call_defaults', defaults)
        Node.render.__dict__.__setitem__('stypy_call_varargs', varargs)
        Node.render.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Node.render.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Node.render', ['x', 'y'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render', localization, ['x', 'y'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render(...)' code ##################

        pass
        
        # ################# End of 'render(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render' in the type store
        # Getting the type of 'stypy_return_type' (line 1393)
        stypy_return_type_80752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1393, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80752)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render'
        return stypy_return_type_80752


# Assigning a type to the variable 'Node' (line 1363)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1363, 0), 'Node', Node)
# Declaration of the 'Box' class
# Getting the type of 'Node' (line 1396)
Node_80753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1396, 10), 'Node')

class Box(Node_80753, ):
    unicode_80754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1399, (-1)), 'unicode', u'\n    Represents any node with a physical location.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1400, 4, False)
        # Assigning a type to the variable 'self' (line 1401)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1401, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Box.__init__', ['width', 'height', 'depth'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['width', 'height', 'depth'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1401)
        # Processing the call arguments (line 1401)
        # Getting the type of 'self' (line 1401)
        self_80757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1401, 22), 'self', False)
        # Processing the call keyword arguments (line 1401)
        kwargs_80758 = {}
        # Getting the type of 'Node' (line 1401)
        Node_80755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1401, 8), 'Node', False)
        # Obtaining the member '__init__' of a type (line 1401)
        init___80756 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1401, 8), Node_80755, '__init__')
        # Calling __init__(args, kwargs) (line 1401)
        init___call_result_80759 = invoke(stypy.reporting.localization.Localization(__file__, 1401, 8), init___80756, *[self_80757], **kwargs_80758)
        
        
        # Assigning a Name to a Attribute (line 1402):
        
        # Assigning a Name to a Attribute (line 1402):
        # Getting the type of 'width' (line 1402)
        width_80760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 22), 'width')
        # Getting the type of 'self' (line 1402)
        self_80761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 8), 'self')
        # Setting the type of the member 'width' of a type (line 1402)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1402, 8), self_80761, 'width', width_80760)
        
        # Assigning a Name to a Attribute (line 1403):
        
        # Assigning a Name to a Attribute (line 1403):
        # Getting the type of 'height' (line 1403)
        height_80762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1403, 22), 'height')
        # Getting the type of 'self' (line 1403)
        self_80763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1403, 8), 'self')
        # Setting the type of the member 'height' of a type (line 1403)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1403, 8), self_80763, 'height', height_80762)
        
        # Assigning a Name to a Attribute (line 1404):
        
        # Assigning a Name to a Attribute (line 1404):
        # Getting the type of 'depth' (line 1404)
        depth_80764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1404, 22), 'depth')
        # Getting the type of 'self' (line 1404)
        self_80765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1404, 8), 'self')
        # Setting the type of the member 'depth' of a type (line 1404)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1404, 8), self_80765, 'depth', depth_80764)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def shrink(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'shrink'
        module_type_store = module_type_store.open_function_context('shrink', 1406, 4, False)
        # Assigning a type to the variable 'self' (line 1407)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1407, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Box.shrink.__dict__.__setitem__('stypy_localization', localization)
        Box.shrink.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Box.shrink.__dict__.__setitem__('stypy_type_store', module_type_store)
        Box.shrink.__dict__.__setitem__('stypy_function_name', 'Box.shrink')
        Box.shrink.__dict__.__setitem__('stypy_param_names_list', [])
        Box.shrink.__dict__.__setitem__('stypy_varargs_param_name', None)
        Box.shrink.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Box.shrink.__dict__.__setitem__('stypy_call_defaults', defaults)
        Box.shrink.__dict__.__setitem__('stypy_call_varargs', varargs)
        Box.shrink.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Box.shrink.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Box.shrink', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'shrink', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'shrink(...)' code ##################

        
        # Call to shrink(...): (line 1407)
        # Processing the call arguments (line 1407)
        # Getting the type of 'self' (line 1407)
        self_80768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1407, 20), 'self', False)
        # Processing the call keyword arguments (line 1407)
        kwargs_80769 = {}
        # Getting the type of 'Node' (line 1407)
        Node_80766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1407, 8), 'Node', False)
        # Obtaining the member 'shrink' of a type (line 1407)
        shrink_80767 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1407, 8), Node_80766, 'shrink')
        # Calling shrink(args, kwargs) (line 1407)
        shrink_call_result_80770 = invoke(stypy.reporting.localization.Localization(__file__, 1407, 8), shrink_80767, *[self_80768], **kwargs_80769)
        
        
        
        # Getting the type of 'self' (line 1408)
        self_80771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1408, 11), 'self')
        # Obtaining the member 'size' of a type (line 1408)
        size_80772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1408, 11), self_80771, 'size')
        # Getting the type of 'NUM_SIZE_LEVELS' (line 1408)
        NUM_SIZE_LEVELS_80773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1408, 23), 'NUM_SIZE_LEVELS')
        # Applying the binary operator '<' (line 1408)
        result_lt_80774 = python_operator(stypy.reporting.localization.Localization(__file__, 1408, 11), '<', size_80772, NUM_SIZE_LEVELS_80773)
        
        # Testing the type of an if condition (line 1408)
        if_condition_80775 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1408, 8), result_lt_80774)
        # Assigning a type to the variable 'if_condition_80775' (line 1408)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1408, 8), 'if_condition_80775', if_condition_80775)
        # SSA begins for if statement (line 1408)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'self' (line 1409)
        self_80776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 12), 'self')
        # Obtaining the member 'width' of a type (line 1409)
        width_80777 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1409, 12), self_80776, 'width')
        # Getting the type of 'SHRINK_FACTOR' (line 1409)
        SHRINK_FACTOR_80778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 27), 'SHRINK_FACTOR')
        # Applying the binary operator '*=' (line 1409)
        result_imul_80779 = python_operator(stypy.reporting.localization.Localization(__file__, 1409, 12), '*=', width_80777, SHRINK_FACTOR_80778)
        # Getting the type of 'self' (line 1409)
        self_80780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 12), 'self')
        # Setting the type of the member 'width' of a type (line 1409)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1409, 12), self_80780, 'width', result_imul_80779)
        
        
        # Getting the type of 'self' (line 1410)
        self_80781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1410, 12), 'self')
        # Obtaining the member 'height' of a type (line 1410)
        height_80782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1410, 12), self_80781, 'height')
        # Getting the type of 'SHRINK_FACTOR' (line 1410)
        SHRINK_FACTOR_80783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1410, 27), 'SHRINK_FACTOR')
        # Applying the binary operator '*=' (line 1410)
        result_imul_80784 = python_operator(stypy.reporting.localization.Localization(__file__, 1410, 12), '*=', height_80782, SHRINK_FACTOR_80783)
        # Getting the type of 'self' (line 1410)
        self_80785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1410, 12), 'self')
        # Setting the type of the member 'height' of a type (line 1410)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1410, 12), self_80785, 'height', result_imul_80784)
        
        
        # Getting the type of 'self' (line 1411)
        self_80786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1411, 12), 'self')
        # Obtaining the member 'depth' of a type (line 1411)
        depth_80787 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1411, 12), self_80786, 'depth')
        # Getting the type of 'SHRINK_FACTOR' (line 1411)
        SHRINK_FACTOR_80788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1411, 27), 'SHRINK_FACTOR')
        # Applying the binary operator '*=' (line 1411)
        result_imul_80789 = python_operator(stypy.reporting.localization.Localization(__file__, 1411, 12), '*=', depth_80787, SHRINK_FACTOR_80788)
        # Getting the type of 'self' (line 1411)
        self_80790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1411, 12), 'self')
        # Setting the type of the member 'depth' of a type (line 1411)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1411, 12), self_80790, 'depth', result_imul_80789)
        
        # SSA join for if statement (line 1408)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'shrink(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'shrink' in the type store
        # Getting the type of 'stypy_return_type' (line 1406)
        stypy_return_type_80791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1406, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80791)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'shrink'
        return stypy_return_type_80791


    @norecursion
    def grow(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'grow'
        module_type_store = module_type_store.open_function_context('grow', 1413, 4, False)
        # Assigning a type to the variable 'self' (line 1414)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1414, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Box.grow.__dict__.__setitem__('stypy_localization', localization)
        Box.grow.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Box.grow.__dict__.__setitem__('stypy_type_store', module_type_store)
        Box.grow.__dict__.__setitem__('stypy_function_name', 'Box.grow')
        Box.grow.__dict__.__setitem__('stypy_param_names_list', [])
        Box.grow.__dict__.__setitem__('stypy_varargs_param_name', None)
        Box.grow.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Box.grow.__dict__.__setitem__('stypy_call_defaults', defaults)
        Box.grow.__dict__.__setitem__('stypy_call_varargs', varargs)
        Box.grow.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Box.grow.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Box.grow', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'grow', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'grow(...)' code ##################

        
        # Call to grow(...): (line 1414)
        # Processing the call arguments (line 1414)
        # Getting the type of 'self' (line 1414)
        self_80794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1414, 18), 'self', False)
        # Processing the call keyword arguments (line 1414)
        kwargs_80795 = {}
        # Getting the type of 'Node' (line 1414)
        Node_80792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1414, 8), 'Node', False)
        # Obtaining the member 'grow' of a type (line 1414)
        grow_80793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1414, 8), Node_80792, 'grow')
        # Calling grow(args, kwargs) (line 1414)
        grow_call_result_80796 = invoke(stypy.reporting.localization.Localization(__file__, 1414, 8), grow_80793, *[self_80794], **kwargs_80795)
        
        
        # Getting the type of 'self' (line 1415)
        self_80797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1415, 8), 'self')
        # Obtaining the member 'width' of a type (line 1415)
        width_80798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1415, 8), self_80797, 'width')
        # Getting the type of 'GROW_FACTOR' (line 1415)
        GROW_FACTOR_80799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1415, 23), 'GROW_FACTOR')
        # Applying the binary operator '*=' (line 1415)
        result_imul_80800 = python_operator(stypy.reporting.localization.Localization(__file__, 1415, 8), '*=', width_80798, GROW_FACTOR_80799)
        # Getting the type of 'self' (line 1415)
        self_80801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1415, 8), 'self')
        # Setting the type of the member 'width' of a type (line 1415)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1415, 8), self_80801, 'width', result_imul_80800)
        
        
        # Getting the type of 'self' (line 1416)
        self_80802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 8), 'self')
        # Obtaining the member 'height' of a type (line 1416)
        height_80803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1416, 8), self_80802, 'height')
        # Getting the type of 'GROW_FACTOR' (line 1416)
        GROW_FACTOR_80804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 23), 'GROW_FACTOR')
        # Applying the binary operator '*=' (line 1416)
        result_imul_80805 = python_operator(stypy.reporting.localization.Localization(__file__, 1416, 8), '*=', height_80803, GROW_FACTOR_80804)
        # Getting the type of 'self' (line 1416)
        self_80806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 8), 'self')
        # Setting the type of the member 'height' of a type (line 1416)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1416, 8), self_80806, 'height', result_imul_80805)
        
        
        # Getting the type of 'self' (line 1417)
        self_80807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1417, 8), 'self')
        # Obtaining the member 'depth' of a type (line 1417)
        depth_80808 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1417, 8), self_80807, 'depth')
        # Getting the type of 'GROW_FACTOR' (line 1417)
        GROW_FACTOR_80809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1417, 23), 'GROW_FACTOR')
        # Applying the binary operator '*=' (line 1417)
        result_imul_80810 = python_operator(stypy.reporting.localization.Localization(__file__, 1417, 8), '*=', depth_80808, GROW_FACTOR_80809)
        # Getting the type of 'self' (line 1417)
        self_80811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1417, 8), 'self')
        # Setting the type of the member 'depth' of a type (line 1417)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1417, 8), self_80811, 'depth', result_imul_80810)
        
        
        # ################# End of 'grow(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'grow' in the type store
        # Getting the type of 'stypy_return_type' (line 1413)
        stypy_return_type_80812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1413, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80812)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'grow'
        return stypy_return_type_80812


    @norecursion
    def render(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render'
        module_type_store = module_type_store.open_function_context('render', 1419, 4, False)
        # Assigning a type to the variable 'self' (line 1420)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1420, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Box.render.__dict__.__setitem__('stypy_localization', localization)
        Box.render.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Box.render.__dict__.__setitem__('stypy_type_store', module_type_store)
        Box.render.__dict__.__setitem__('stypy_function_name', 'Box.render')
        Box.render.__dict__.__setitem__('stypy_param_names_list', ['x1', 'y1', 'x2', 'y2'])
        Box.render.__dict__.__setitem__('stypy_varargs_param_name', None)
        Box.render.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Box.render.__dict__.__setitem__('stypy_call_defaults', defaults)
        Box.render.__dict__.__setitem__('stypy_call_varargs', varargs)
        Box.render.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Box.render.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Box.render', ['x1', 'y1', 'x2', 'y2'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render', localization, ['x1', 'y1', 'x2', 'y2'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render(...)' code ##################

        pass
        
        # ################# End of 'render(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render' in the type store
        # Getting the type of 'stypy_return_type' (line 1419)
        stypy_return_type_80813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1419, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80813)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render'
        return stypy_return_type_80813


# Assigning a type to the variable 'Box' (line 1396)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1396, 0), 'Box', Box)
# Declaration of the 'Vbox' class
# Getting the type of 'Box' (line 1422)
Box_80814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1422, 11), 'Box')

class Vbox(Box_80814, ):
    unicode_80815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1425, (-1)), 'unicode', u'\n    A box with only height (zero width).\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1426, 4, False)
        # Assigning a type to the variable 'self' (line 1427)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1427, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Vbox.__init__', ['height', 'depth'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['height', 'depth'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1427)
        # Processing the call arguments (line 1427)
        # Getting the type of 'self' (line 1427)
        self_80818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1427, 21), 'self', False)
        float_80819 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1427, 27), 'float')
        # Getting the type of 'height' (line 1427)
        height_80820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1427, 31), 'height', False)
        # Getting the type of 'depth' (line 1427)
        depth_80821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1427, 39), 'depth', False)
        # Processing the call keyword arguments (line 1427)
        kwargs_80822 = {}
        # Getting the type of 'Box' (line 1427)
        Box_80816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1427, 8), 'Box', False)
        # Obtaining the member '__init__' of a type (line 1427)
        init___80817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1427, 8), Box_80816, '__init__')
        # Calling __init__(args, kwargs) (line 1427)
        init___call_result_80823 = invoke(stypy.reporting.localization.Localization(__file__, 1427, 8), init___80817, *[self_80818, float_80819, height_80820, depth_80821], **kwargs_80822)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'Vbox' (line 1422)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1422, 0), 'Vbox', Vbox)
# Declaration of the 'Hbox' class
# Getting the type of 'Box' (line 1429)
Box_80824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1429, 11), 'Box')

class Hbox(Box_80824, ):
    unicode_80825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1432, (-1)), 'unicode', u'\n    A box with only width (zero height and depth).\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1433, 4, False)
        # Assigning a type to the variable 'self' (line 1434)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1434, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Hbox.__init__', ['width'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['width'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1434)
        # Processing the call arguments (line 1434)
        # Getting the type of 'self' (line 1434)
        self_80828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1434, 21), 'self', False)
        # Getting the type of 'width' (line 1434)
        width_80829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1434, 27), 'width', False)
        float_80830 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1434, 34), 'float')
        float_80831 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1434, 38), 'float')
        # Processing the call keyword arguments (line 1434)
        kwargs_80832 = {}
        # Getting the type of 'Box' (line 1434)
        Box_80826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1434, 8), 'Box', False)
        # Obtaining the member '__init__' of a type (line 1434)
        init___80827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1434, 8), Box_80826, '__init__')
        # Calling __init__(args, kwargs) (line 1434)
        init___call_result_80833 = invoke(stypy.reporting.localization.Localization(__file__, 1434, 8), init___80827, *[self_80828, width_80829, float_80830, float_80831], **kwargs_80832)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'Hbox' (line 1429)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1429, 0), 'Hbox', Hbox)
# Declaration of the 'Char' class
# Getting the type of 'Node' (line 1436)
Node_80834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1436, 11), 'Node')

class Char(Node_80834, ):
    unicode_80835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1446, (-1)), 'unicode', u'\n    Represents a single character.  Unlike TeX, the font information\n    and metrics are stored with each :class:`Char` to make it easier\n    to lookup the font metrics when needed.  Note that TeX boxes have\n    a width, height, and depth, unlike Type1 and Truetype which use a\n    full bounding box and an advance in the x-direction.  The metrics\n    must be converted to the TeX way, and the advance (if different\n    from width) must be converted into a :class:`Kern` node when the\n    :class:`Char` is added to its parent :class:`Hlist`.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'True' (line 1447)
        True_80836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1447, 38), 'True')
        defaults = [True_80836]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1447, 4, False)
        # Assigning a type to the variable 'self' (line 1448)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1448, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Char.__init__', ['c', 'state', 'math'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['c', 'state', 'math'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1448)
        # Processing the call arguments (line 1448)
        # Getting the type of 'self' (line 1448)
        self_80839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1448, 22), 'self', False)
        # Processing the call keyword arguments (line 1448)
        kwargs_80840 = {}
        # Getting the type of 'Node' (line 1448)
        Node_80837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1448, 8), 'Node', False)
        # Obtaining the member '__init__' of a type (line 1448)
        init___80838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1448, 8), Node_80837, '__init__')
        # Calling __init__(args, kwargs) (line 1448)
        init___call_result_80841 = invoke(stypy.reporting.localization.Localization(__file__, 1448, 8), init___80838, *[self_80839], **kwargs_80840)
        
        
        # Assigning a Name to a Attribute (line 1449):
        
        # Assigning a Name to a Attribute (line 1449):
        # Getting the type of 'c' (line 1449)
        c_80842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1449, 17), 'c')
        # Getting the type of 'self' (line 1449)
        self_80843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1449, 8), 'self')
        # Setting the type of the member 'c' of a type (line 1449)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1449, 8), self_80843, 'c', c_80842)
        
        # Assigning a Attribute to a Attribute (line 1450):
        
        # Assigning a Attribute to a Attribute (line 1450):
        # Getting the type of 'state' (line 1450)
        state_80844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1450, 27), 'state')
        # Obtaining the member 'font_output' of a type (line 1450)
        font_output_80845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1450, 27), state_80844, 'font_output')
        # Getting the type of 'self' (line 1450)
        self_80846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1450, 8), 'self')
        # Setting the type of the member 'font_output' of a type (line 1450)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1450, 8), self_80846, 'font_output', font_output_80845)
        
        # Assigning a Attribute to a Attribute (line 1451):
        
        # Assigning a Attribute to a Attribute (line 1451):
        # Getting the type of 'state' (line 1451)
        state_80847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1451, 20), 'state')
        # Obtaining the member 'font' of a type (line 1451)
        font_80848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1451, 20), state_80847, 'font')
        # Getting the type of 'self' (line 1451)
        self_80849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1451, 8), 'self')
        # Setting the type of the member 'font' of a type (line 1451)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1451, 8), self_80849, 'font', font_80848)
        
        # Assigning a Attribute to a Attribute (line 1452):
        
        # Assigning a Attribute to a Attribute (line 1452):
        # Getting the type of 'state' (line 1452)
        state_80850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1452, 26), 'state')
        # Obtaining the member 'font_class' of a type (line 1452)
        font_class_80851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1452, 26), state_80850, 'font_class')
        # Getting the type of 'self' (line 1452)
        self_80852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1452, 8), 'self')
        # Setting the type of the member 'font_class' of a type (line 1452)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1452, 8), self_80852, 'font_class', font_class_80851)
        
        # Assigning a Attribute to a Attribute (line 1453):
        
        # Assigning a Attribute to a Attribute (line 1453):
        # Getting the type of 'state' (line 1453)
        state_80853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1453, 24), 'state')
        # Obtaining the member 'fontsize' of a type (line 1453)
        fontsize_80854 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1453, 24), state_80853, 'fontsize')
        # Getting the type of 'self' (line 1453)
        self_80855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1453, 8), 'self')
        # Setting the type of the member 'fontsize' of a type (line 1453)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1453, 8), self_80855, 'fontsize', fontsize_80854)
        
        # Assigning a Attribute to a Attribute (line 1454):
        
        # Assigning a Attribute to a Attribute (line 1454):
        # Getting the type of 'state' (line 1454)
        state_80856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1454, 19), 'state')
        # Obtaining the member 'dpi' of a type (line 1454)
        dpi_80857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1454, 19), state_80856, 'dpi')
        # Getting the type of 'self' (line 1454)
        self_80858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1454, 8), 'self')
        # Setting the type of the member 'dpi' of a type (line 1454)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1454, 8), self_80858, 'dpi', dpi_80857)
        
        # Assigning a Name to a Attribute (line 1455):
        
        # Assigning a Name to a Attribute (line 1455):
        # Getting the type of 'math' (line 1455)
        math_80859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1455, 20), 'math')
        # Getting the type of 'self' (line 1455)
        self_80860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1455, 8), 'self')
        # Setting the type of the member 'math' of a type (line 1455)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1455, 8), self_80860, 'math', math_80859)
        
        # Call to _update_metrics(...): (line 1458)
        # Processing the call keyword arguments (line 1458)
        kwargs_80863 = {}
        # Getting the type of 'self' (line 1458)
        self_80861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1458, 8), 'self', False)
        # Obtaining the member '_update_metrics' of a type (line 1458)
        _update_metrics_80862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1458, 8), self_80861, '_update_metrics')
        # Calling _update_metrics(args, kwargs) (line 1458)
        _update_metrics_call_result_80864 = invoke(stypy.reporting.localization.Localization(__file__, 1458, 8), _update_metrics_80862, *[], **kwargs_80863)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def __internal_repr__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__internal_repr__'
        module_type_store = module_type_store.open_function_context('__internal_repr__', 1460, 4, False)
        # Assigning a type to the variable 'self' (line 1461)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1461, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Char.__internal_repr__.__dict__.__setitem__('stypy_localization', localization)
        Char.__internal_repr__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Char.__internal_repr__.__dict__.__setitem__('stypy_type_store', module_type_store)
        Char.__internal_repr__.__dict__.__setitem__('stypy_function_name', 'Char.__internal_repr__')
        Char.__internal_repr__.__dict__.__setitem__('stypy_param_names_list', [])
        Char.__internal_repr__.__dict__.__setitem__('stypy_varargs_param_name', None)
        Char.__internal_repr__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Char.__internal_repr__.__dict__.__setitem__('stypy_call_defaults', defaults)
        Char.__internal_repr__.__dict__.__setitem__('stypy_call_varargs', varargs)
        Char.__internal_repr__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Char.__internal_repr__.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Char.__internal_repr__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__internal_repr__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__internal_repr__(...)' code ##################

        unicode_80865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1461, 15), 'unicode', u'`%s`')
        # Getting the type of 'self' (line 1461)
        self_80866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1461, 24), 'self')
        # Obtaining the member 'c' of a type (line 1461)
        c_80867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1461, 24), self_80866, 'c')
        # Applying the binary operator '%' (line 1461)
        result_mod_80868 = python_operator(stypy.reporting.localization.Localization(__file__, 1461, 15), '%', unicode_80865, c_80867)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1461)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1461, 8), 'stypy_return_type', result_mod_80868)
        
        # ################# End of '__internal_repr__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__internal_repr__' in the type store
        # Getting the type of 'stypy_return_type' (line 1460)
        stypy_return_type_80869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80869)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__internal_repr__'
        return stypy_return_type_80869


    @norecursion
    def _update_metrics(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_update_metrics'
        module_type_store = module_type_store.open_function_context('_update_metrics', 1463, 4, False)
        # Assigning a type to the variable 'self' (line 1464)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1464, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Char._update_metrics.__dict__.__setitem__('stypy_localization', localization)
        Char._update_metrics.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Char._update_metrics.__dict__.__setitem__('stypy_type_store', module_type_store)
        Char._update_metrics.__dict__.__setitem__('stypy_function_name', 'Char._update_metrics')
        Char._update_metrics.__dict__.__setitem__('stypy_param_names_list', [])
        Char._update_metrics.__dict__.__setitem__('stypy_varargs_param_name', None)
        Char._update_metrics.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Char._update_metrics.__dict__.__setitem__('stypy_call_defaults', defaults)
        Char._update_metrics.__dict__.__setitem__('stypy_call_varargs', varargs)
        Char._update_metrics.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Char._update_metrics.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Char._update_metrics', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_update_metrics', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_update_metrics(...)' code ##################

        
        # Multiple assignment of 2 elements.
        
        # Assigning a Call to a Attribute (line 1464):
        
        # Call to get_metrics(...): (line 1464)
        # Processing the call arguments (line 1464)
        # Getting the type of 'self' (line 1465)
        self_80873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1465, 12), 'self', False)
        # Obtaining the member 'font' of a type (line 1465)
        font_80874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1465, 12), self_80873, 'font')
        # Getting the type of 'self' (line 1465)
        self_80875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1465, 23), 'self', False)
        # Obtaining the member 'font_class' of a type (line 1465)
        font_class_80876 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1465, 23), self_80875, 'font_class')
        # Getting the type of 'self' (line 1465)
        self_80877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1465, 40), 'self', False)
        # Obtaining the member 'c' of a type (line 1465)
        c_80878 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1465, 40), self_80877, 'c')
        # Getting the type of 'self' (line 1465)
        self_80879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1465, 48), 'self', False)
        # Obtaining the member 'fontsize' of a type (line 1465)
        fontsize_80880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1465, 48), self_80879, 'fontsize')
        # Getting the type of 'self' (line 1465)
        self_80881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1465, 63), 'self', False)
        # Obtaining the member 'dpi' of a type (line 1465)
        dpi_80882 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1465, 63), self_80881, 'dpi')
        # Getting the type of 'self' (line 1465)
        self_80883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1465, 73), 'self', False)
        # Obtaining the member 'math' of a type (line 1465)
        math_80884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1465, 73), self_80883, 'math')
        # Processing the call keyword arguments (line 1464)
        kwargs_80885 = {}
        # Getting the type of 'self' (line 1464)
        self_80870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1464, 34), 'self', False)
        # Obtaining the member 'font_output' of a type (line 1464)
        font_output_80871 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1464, 34), self_80870, 'font_output')
        # Obtaining the member 'get_metrics' of a type (line 1464)
        get_metrics_80872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1464, 34), font_output_80871, 'get_metrics')
        # Calling get_metrics(args, kwargs) (line 1464)
        get_metrics_call_result_80886 = invoke(stypy.reporting.localization.Localization(__file__, 1464, 34), get_metrics_80872, *[font_80874, font_class_80876, c_80878, fontsize_80880, dpi_80882, math_80884], **kwargs_80885)
        
        # Getting the type of 'self' (line 1464)
        self_80887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1464, 18), 'self')
        # Setting the type of the member '_metrics' of a type (line 1464)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1464, 18), self_80887, '_metrics', get_metrics_call_result_80886)
        
        # Assigning a Attribute to a Name (line 1464):
        # Getting the type of 'self' (line 1464)
        self_80888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1464, 18), 'self')
        # Obtaining the member '_metrics' of a type (line 1464)
        _metrics_80889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1464, 18), self_80888, '_metrics')
        # Assigning a type to the variable 'metrics' (line 1464)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1464, 8), 'metrics', _metrics_80889)
        
        
        # Getting the type of 'self' (line 1466)
        self_80890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1466, 11), 'self')
        # Obtaining the member 'c' of a type (line 1466)
        c_80891 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1466, 11), self_80890, 'c')
        unicode_80892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1466, 21), 'unicode', u' ')
        # Applying the binary operator '==' (line 1466)
        result_eq_80893 = python_operator(stypy.reporting.localization.Localization(__file__, 1466, 11), '==', c_80891, unicode_80892)
        
        # Testing the type of an if condition (line 1466)
        if_condition_80894 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1466, 8), result_eq_80893)
        # Assigning a type to the variable 'if_condition_80894' (line 1466)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1466, 8), 'if_condition_80894', if_condition_80894)
        # SSA begins for if statement (line 1466)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Attribute (line 1467):
        
        # Assigning a Attribute to a Attribute (line 1467):
        # Getting the type of 'metrics' (line 1467)
        metrics_80895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1467, 25), 'metrics')
        # Obtaining the member 'advance' of a type (line 1467)
        advance_80896 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1467, 25), metrics_80895, 'advance')
        # Getting the type of 'self' (line 1467)
        self_80897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1467, 12), 'self')
        # Setting the type of the member 'width' of a type (line 1467)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1467, 12), self_80897, 'width', advance_80896)
        # SSA branch for the else part of an if statement (line 1466)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Attribute to a Attribute (line 1469):
        
        # Assigning a Attribute to a Attribute (line 1469):
        # Getting the type of 'metrics' (line 1469)
        metrics_80898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 25), 'metrics')
        # Obtaining the member 'width' of a type (line 1469)
        width_80899 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1469, 25), metrics_80898, 'width')
        # Getting the type of 'self' (line 1469)
        self_80900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 12), 'self')
        # Setting the type of the member 'width' of a type (line 1469)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1469, 12), self_80900, 'width', width_80899)
        # SSA join for if statement (line 1466)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Attribute to a Attribute (line 1470):
        
        # Assigning a Attribute to a Attribute (line 1470):
        # Getting the type of 'metrics' (line 1470)
        metrics_80901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 22), 'metrics')
        # Obtaining the member 'iceberg' of a type (line 1470)
        iceberg_80902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1470, 22), metrics_80901, 'iceberg')
        # Getting the type of 'self' (line 1470)
        self_80903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 8), 'self')
        # Setting the type of the member 'height' of a type (line 1470)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1470, 8), self_80903, 'height', iceberg_80902)
        
        # Assigning a UnaryOp to a Attribute (line 1471):
        
        # Assigning a UnaryOp to a Attribute (line 1471):
        
        # Getting the type of 'metrics' (line 1471)
        metrics_80904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 23), 'metrics')
        # Obtaining the member 'iceberg' of a type (line 1471)
        iceberg_80905 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1471, 23), metrics_80904, 'iceberg')
        # Getting the type of 'metrics' (line 1471)
        metrics_80906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 41), 'metrics')
        # Obtaining the member 'height' of a type (line 1471)
        height_80907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1471, 41), metrics_80906, 'height')
        # Applying the binary operator '-' (line 1471)
        result_sub_80908 = python_operator(stypy.reporting.localization.Localization(__file__, 1471, 23), '-', iceberg_80905, height_80907)
        
        # Applying the 'usub' unary operator (line 1471)
        result___neg___80909 = python_operator(stypy.reporting.localization.Localization(__file__, 1471, 21), 'usub', result_sub_80908)
        
        # Getting the type of 'self' (line 1471)
        self_80910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 8), 'self')
        # Setting the type of the member 'depth' of a type (line 1471)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1471, 8), self_80910, 'depth', result___neg___80909)
        
        # ################# End of '_update_metrics(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_update_metrics' in the type store
        # Getting the type of 'stypy_return_type' (line 1463)
        stypy_return_type_80911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1463, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80911)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_update_metrics'
        return stypy_return_type_80911


    @norecursion
    def is_slanted(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'is_slanted'
        module_type_store = module_type_store.open_function_context('is_slanted', 1473, 4, False)
        # Assigning a type to the variable 'self' (line 1474)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1474, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Char.is_slanted.__dict__.__setitem__('stypy_localization', localization)
        Char.is_slanted.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Char.is_slanted.__dict__.__setitem__('stypy_type_store', module_type_store)
        Char.is_slanted.__dict__.__setitem__('stypy_function_name', 'Char.is_slanted')
        Char.is_slanted.__dict__.__setitem__('stypy_param_names_list', [])
        Char.is_slanted.__dict__.__setitem__('stypy_varargs_param_name', None)
        Char.is_slanted.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Char.is_slanted.__dict__.__setitem__('stypy_call_defaults', defaults)
        Char.is_slanted.__dict__.__setitem__('stypy_call_varargs', varargs)
        Char.is_slanted.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Char.is_slanted.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Char.is_slanted', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'is_slanted', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'is_slanted(...)' code ##################

        # Getting the type of 'self' (line 1474)
        self_80912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1474, 15), 'self')
        # Obtaining the member '_metrics' of a type (line 1474)
        _metrics_80913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1474, 15), self_80912, '_metrics')
        # Obtaining the member 'slanted' of a type (line 1474)
        slanted_80914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1474, 15), _metrics_80913, 'slanted')
        # Assigning a type to the variable 'stypy_return_type' (line 1474)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1474, 8), 'stypy_return_type', slanted_80914)
        
        # ################# End of 'is_slanted(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'is_slanted' in the type store
        # Getting the type of 'stypy_return_type' (line 1473)
        stypy_return_type_80915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80915)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'is_slanted'
        return stypy_return_type_80915


    @norecursion
    def get_kerning(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_kerning'
        module_type_store = module_type_store.open_function_context('get_kerning', 1476, 4, False)
        # Assigning a type to the variable 'self' (line 1477)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1477, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Char.get_kerning.__dict__.__setitem__('stypy_localization', localization)
        Char.get_kerning.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Char.get_kerning.__dict__.__setitem__('stypy_type_store', module_type_store)
        Char.get_kerning.__dict__.__setitem__('stypy_function_name', 'Char.get_kerning')
        Char.get_kerning.__dict__.__setitem__('stypy_param_names_list', ['next'])
        Char.get_kerning.__dict__.__setitem__('stypy_varargs_param_name', None)
        Char.get_kerning.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Char.get_kerning.__dict__.__setitem__('stypy_call_defaults', defaults)
        Char.get_kerning.__dict__.__setitem__('stypy_call_varargs', varargs)
        Char.get_kerning.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Char.get_kerning.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Char.get_kerning', ['next'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_kerning', localization, ['next'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_kerning(...)' code ##################

        unicode_80916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1481, (-1)), 'unicode', u'\n        Return the amount of kerning between this and the given\n        character.  Called when characters are strung together into\n        :class:`Hlist` to create :class:`Kern` nodes.\n        ')
        
        # Assigning a BinOp to a Name (line 1482):
        
        # Assigning a BinOp to a Name (line 1482):
        # Getting the type of 'self' (line 1482)
        self_80917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1482, 18), 'self')
        # Obtaining the member '_metrics' of a type (line 1482)
        _metrics_80918 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1482, 18), self_80917, '_metrics')
        # Obtaining the member 'advance' of a type (line 1482)
        advance_80919 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1482, 18), _metrics_80918, 'advance')
        # Getting the type of 'self' (line 1482)
        self_80920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1482, 42), 'self')
        # Obtaining the member 'width' of a type (line 1482)
        width_80921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1482, 42), self_80920, 'width')
        # Applying the binary operator '-' (line 1482)
        result_sub_80922 = python_operator(stypy.reporting.localization.Localization(__file__, 1482, 18), '-', advance_80919, width_80921)
        
        # Assigning a type to the variable 'advance' (line 1482)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1482, 8), 'advance', result_sub_80922)
        
        # Assigning a Num to a Name (line 1483):
        
        # Assigning a Num to a Name (line 1483):
        float_80923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1483, 15), 'float')
        # Assigning a type to the variable 'kern' (line 1483)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1483, 8), 'kern', float_80923)
        
        
        # Call to isinstance(...): (line 1484)
        # Processing the call arguments (line 1484)
        # Getting the type of 'next' (line 1484)
        next_80925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1484, 22), 'next', False)
        # Getting the type of 'Char' (line 1484)
        Char_80926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1484, 28), 'Char', False)
        # Processing the call keyword arguments (line 1484)
        kwargs_80927 = {}
        # Getting the type of 'isinstance' (line 1484)
        isinstance_80924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1484, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1484)
        isinstance_call_result_80928 = invoke(stypy.reporting.localization.Localization(__file__, 1484, 11), isinstance_80924, *[next_80925, Char_80926], **kwargs_80927)
        
        # Testing the type of an if condition (line 1484)
        if_condition_80929 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1484, 8), isinstance_call_result_80928)
        # Assigning a type to the variable 'if_condition_80929' (line 1484)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1484, 8), 'if_condition_80929', if_condition_80929)
        # SSA begins for if statement (line 1484)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1485):
        
        # Assigning a Call to a Name (line 1485):
        
        # Call to get_kern(...): (line 1485)
        # Processing the call arguments (line 1485)
        # Getting the type of 'self' (line 1486)
        self_80933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1486, 16), 'self', False)
        # Obtaining the member 'font' of a type (line 1486)
        font_80934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1486, 16), self_80933, 'font')
        # Getting the type of 'self' (line 1486)
        self_80935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1486, 27), 'self', False)
        # Obtaining the member 'font_class' of a type (line 1486)
        font_class_80936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1486, 27), self_80935, 'font_class')
        # Getting the type of 'self' (line 1486)
        self_80937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1486, 44), 'self', False)
        # Obtaining the member 'c' of a type (line 1486)
        c_80938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1486, 44), self_80937, 'c')
        # Getting the type of 'self' (line 1486)
        self_80939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1486, 52), 'self', False)
        # Obtaining the member 'fontsize' of a type (line 1486)
        fontsize_80940 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1486, 52), self_80939, 'fontsize')
        # Getting the type of 'next' (line 1487)
        next_80941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1487, 16), 'next', False)
        # Obtaining the member 'font' of a type (line 1487)
        font_80942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1487, 16), next_80941, 'font')
        # Getting the type of 'next' (line 1487)
        next_80943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1487, 27), 'next', False)
        # Obtaining the member 'font_class' of a type (line 1487)
        font_class_80944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1487, 27), next_80943, 'font_class')
        # Getting the type of 'next' (line 1487)
        next_80945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1487, 44), 'next', False)
        # Obtaining the member 'c' of a type (line 1487)
        c_80946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1487, 44), next_80945, 'c')
        # Getting the type of 'next' (line 1487)
        next_80947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1487, 52), 'next', False)
        # Obtaining the member 'fontsize' of a type (line 1487)
        fontsize_80948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1487, 52), next_80947, 'fontsize')
        # Getting the type of 'self' (line 1488)
        self_80949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1488, 16), 'self', False)
        # Obtaining the member 'dpi' of a type (line 1488)
        dpi_80950 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1488, 16), self_80949, 'dpi')
        # Processing the call keyword arguments (line 1485)
        kwargs_80951 = {}
        # Getting the type of 'self' (line 1485)
        self_80930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1485, 19), 'self', False)
        # Obtaining the member 'font_output' of a type (line 1485)
        font_output_80931 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1485, 19), self_80930, 'font_output')
        # Obtaining the member 'get_kern' of a type (line 1485)
        get_kern_80932 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1485, 19), font_output_80931, 'get_kern')
        # Calling get_kern(args, kwargs) (line 1485)
        get_kern_call_result_80952 = invoke(stypy.reporting.localization.Localization(__file__, 1485, 19), get_kern_80932, *[font_80934, font_class_80936, c_80938, fontsize_80940, font_80942, font_class_80944, c_80946, fontsize_80948, dpi_80950], **kwargs_80951)
        
        # Assigning a type to the variable 'kern' (line 1485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1485, 12), 'kern', get_kern_call_result_80952)
        # SSA join for if statement (line 1484)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'advance' (line 1489)
        advance_80953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1489, 15), 'advance')
        # Getting the type of 'kern' (line 1489)
        kern_80954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1489, 25), 'kern')
        # Applying the binary operator '+' (line 1489)
        result_add_80955 = python_operator(stypy.reporting.localization.Localization(__file__, 1489, 15), '+', advance_80953, kern_80954)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1489)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1489, 8), 'stypy_return_type', result_add_80955)
        
        # ################# End of 'get_kerning(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_kerning' in the type store
        # Getting the type of 'stypy_return_type' (line 1476)
        stypy_return_type_80956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1476, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80956)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_kerning'
        return stypy_return_type_80956


    @norecursion
    def render(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render'
        module_type_store = module_type_store.open_function_context('render', 1491, 4, False)
        # Assigning a type to the variable 'self' (line 1492)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1492, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Char.render.__dict__.__setitem__('stypy_localization', localization)
        Char.render.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Char.render.__dict__.__setitem__('stypy_type_store', module_type_store)
        Char.render.__dict__.__setitem__('stypy_function_name', 'Char.render')
        Char.render.__dict__.__setitem__('stypy_param_names_list', ['x', 'y'])
        Char.render.__dict__.__setitem__('stypy_varargs_param_name', None)
        Char.render.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Char.render.__dict__.__setitem__('stypy_call_defaults', defaults)
        Char.render.__dict__.__setitem__('stypy_call_varargs', varargs)
        Char.render.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Char.render.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Char.render', ['x', 'y'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render', localization, ['x', 'y'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render(...)' code ##################

        unicode_80957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1494, (-1)), 'unicode', u'\n        Render the character to the canvas\n        ')
        
        # Call to render_glyph(...): (line 1495)
        # Processing the call arguments (line 1495)
        # Getting the type of 'x' (line 1496)
        x_80961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1496, 12), 'x', False)
        # Getting the type of 'y' (line 1496)
        y_80962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1496, 15), 'y', False)
        # Getting the type of 'self' (line 1497)
        self_80963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 12), 'self', False)
        # Obtaining the member 'font' of a type (line 1497)
        font_80964 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1497, 12), self_80963, 'font')
        # Getting the type of 'self' (line 1497)
        self_80965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 23), 'self', False)
        # Obtaining the member 'font_class' of a type (line 1497)
        font_class_80966 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1497, 23), self_80965, 'font_class')
        # Getting the type of 'self' (line 1497)
        self_80967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 40), 'self', False)
        # Obtaining the member 'c' of a type (line 1497)
        c_80968 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1497, 40), self_80967, 'c')
        # Getting the type of 'self' (line 1497)
        self_80969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 48), 'self', False)
        # Obtaining the member 'fontsize' of a type (line 1497)
        fontsize_80970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1497, 48), self_80969, 'fontsize')
        # Getting the type of 'self' (line 1497)
        self_80971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 63), 'self', False)
        # Obtaining the member 'dpi' of a type (line 1497)
        dpi_80972 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1497, 63), self_80971, 'dpi')
        # Processing the call keyword arguments (line 1495)
        kwargs_80973 = {}
        # Getting the type of 'self' (line 1495)
        self_80958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1495, 8), 'self', False)
        # Obtaining the member 'font_output' of a type (line 1495)
        font_output_80959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1495, 8), self_80958, 'font_output')
        # Obtaining the member 'render_glyph' of a type (line 1495)
        render_glyph_80960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1495, 8), font_output_80959, 'render_glyph')
        # Calling render_glyph(args, kwargs) (line 1495)
        render_glyph_call_result_80974 = invoke(stypy.reporting.localization.Localization(__file__, 1495, 8), render_glyph_80960, *[x_80961, y_80962, font_80964, font_class_80966, c_80968, fontsize_80970, dpi_80972], **kwargs_80973)
        
        
        # ################# End of 'render(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render' in the type store
        # Getting the type of 'stypy_return_type' (line 1491)
        stypy_return_type_80975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1491, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_80975)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render'
        return stypy_return_type_80975


    @norecursion
    def shrink(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'shrink'
        module_type_store = module_type_store.open_function_context('shrink', 1499, 4, False)
        # Assigning a type to the variable 'self' (line 1500)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1500, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Char.shrink.__dict__.__setitem__('stypy_localization', localization)
        Char.shrink.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Char.shrink.__dict__.__setitem__('stypy_type_store', module_type_store)
        Char.shrink.__dict__.__setitem__('stypy_function_name', 'Char.shrink')
        Char.shrink.__dict__.__setitem__('stypy_param_names_list', [])
        Char.shrink.__dict__.__setitem__('stypy_varargs_param_name', None)
        Char.shrink.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Char.shrink.__dict__.__setitem__('stypy_call_defaults', defaults)
        Char.shrink.__dict__.__setitem__('stypy_call_varargs', varargs)
        Char.shrink.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Char.shrink.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Char.shrink', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'shrink', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'shrink(...)' code ##################

        
        # Call to shrink(...): (line 1500)
        # Processing the call arguments (line 1500)
        # Getting the type of 'self' (line 1500)
        self_80978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1500, 20), 'self', False)
        # Processing the call keyword arguments (line 1500)
        kwargs_80979 = {}
        # Getting the type of 'Node' (line 1500)
        Node_80976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1500, 8), 'Node', False)
        # Obtaining the member 'shrink' of a type (line 1500)
        shrink_80977 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1500, 8), Node_80976, 'shrink')
        # Calling shrink(args, kwargs) (line 1500)
        shrink_call_result_80980 = invoke(stypy.reporting.localization.Localization(__file__, 1500, 8), shrink_80977, *[self_80978], **kwargs_80979)
        
        
        
        # Getting the type of 'self' (line 1501)
        self_80981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1501, 11), 'self')
        # Obtaining the member 'size' of a type (line 1501)
        size_80982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1501, 11), self_80981, 'size')
        # Getting the type of 'NUM_SIZE_LEVELS' (line 1501)
        NUM_SIZE_LEVELS_80983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1501, 23), 'NUM_SIZE_LEVELS')
        # Applying the binary operator '<' (line 1501)
        result_lt_80984 = python_operator(stypy.reporting.localization.Localization(__file__, 1501, 11), '<', size_80982, NUM_SIZE_LEVELS_80983)
        
        # Testing the type of an if condition (line 1501)
        if_condition_80985 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1501, 8), result_lt_80984)
        # Assigning a type to the variable 'if_condition_80985' (line 1501)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1501, 8), 'if_condition_80985', if_condition_80985)
        # SSA begins for if statement (line 1501)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'self' (line 1502)
        self_80986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1502, 12), 'self')
        # Obtaining the member 'fontsize' of a type (line 1502)
        fontsize_80987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1502, 12), self_80986, 'fontsize')
        # Getting the type of 'SHRINK_FACTOR' (line 1502)
        SHRINK_FACTOR_80988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1502, 29), 'SHRINK_FACTOR')
        # Applying the binary operator '*=' (line 1502)
        result_imul_80989 = python_operator(stypy.reporting.localization.Localization(__file__, 1502, 12), '*=', fontsize_80987, SHRINK_FACTOR_80988)
        # Getting the type of 'self' (line 1502)
        self_80990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1502, 12), 'self')
        # Setting the type of the member 'fontsize' of a type (line 1502)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1502, 12), self_80990, 'fontsize', result_imul_80989)
        
        
        # Getting the type of 'self' (line 1503)
        self_80991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1503, 12), 'self')
        # Obtaining the member 'width' of a type (line 1503)
        width_80992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1503, 12), self_80991, 'width')
        # Getting the type of 'SHRINK_FACTOR' (line 1503)
        SHRINK_FACTOR_80993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1503, 29), 'SHRINK_FACTOR')
        # Applying the binary operator '*=' (line 1503)
        result_imul_80994 = python_operator(stypy.reporting.localization.Localization(__file__, 1503, 12), '*=', width_80992, SHRINK_FACTOR_80993)
        # Getting the type of 'self' (line 1503)
        self_80995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1503, 12), 'self')
        # Setting the type of the member 'width' of a type (line 1503)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1503, 12), self_80995, 'width', result_imul_80994)
        
        
        # Getting the type of 'self' (line 1504)
        self_80996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1504, 12), 'self')
        # Obtaining the member 'height' of a type (line 1504)
        height_80997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1504, 12), self_80996, 'height')
        # Getting the type of 'SHRINK_FACTOR' (line 1504)
        SHRINK_FACTOR_80998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1504, 29), 'SHRINK_FACTOR')
        # Applying the binary operator '*=' (line 1504)
        result_imul_80999 = python_operator(stypy.reporting.localization.Localization(__file__, 1504, 12), '*=', height_80997, SHRINK_FACTOR_80998)
        # Getting the type of 'self' (line 1504)
        self_81000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1504, 12), 'self')
        # Setting the type of the member 'height' of a type (line 1504)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1504, 12), self_81000, 'height', result_imul_80999)
        
        
        # Getting the type of 'self' (line 1505)
        self_81001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1505, 12), 'self')
        # Obtaining the member 'depth' of a type (line 1505)
        depth_81002 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1505, 12), self_81001, 'depth')
        # Getting the type of 'SHRINK_FACTOR' (line 1505)
        SHRINK_FACTOR_81003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1505, 29), 'SHRINK_FACTOR')
        # Applying the binary operator '*=' (line 1505)
        result_imul_81004 = python_operator(stypy.reporting.localization.Localization(__file__, 1505, 12), '*=', depth_81002, SHRINK_FACTOR_81003)
        # Getting the type of 'self' (line 1505)
        self_81005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1505, 12), 'self')
        # Setting the type of the member 'depth' of a type (line 1505)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1505, 12), self_81005, 'depth', result_imul_81004)
        
        # SSA join for if statement (line 1501)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'shrink(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'shrink' in the type store
        # Getting the type of 'stypy_return_type' (line 1499)
        stypy_return_type_81006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1499, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81006)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'shrink'
        return stypy_return_type_81006


    @norecursion
    def grow(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'grow'
        module_type_store = module_type_store.open_function_context('grow', 1507, 4, False)
        # Assigning a type to the variable 'self' (line 1508)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1508, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Char.grow.__dict__.__setitem__('stypy_localization', localization)
        Char.grow.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Char.grow.__dict__.__setitem__('stypy_type_store', module_type_store)
        Char.grow.__dict__.__setitem__('stypy_function_name', 'Char.grow')
        Char.grow.__dict__.__setitem__('stypy_param_names_list', [])
        Char.grow.__dict__.__setitem__('stypy_varargs_param_name', None)
        Char.grow.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Char.grow.__dict__.__setitem__('stypy_call_defaults', defaults)
        Char.grow.__dict__.__setitem__('stypy_call_varargs', varargs)
        Char.grow.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Char.grow.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Char.grow', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'grow', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'grow(...)' code ##################

        
        # Call to grow(...): (line 1508)
        # Processing the call arguments (line 1508)
        # Getting the type of 'self' (line 1508)
        self_81009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1508, 18), 'self', False)
        # Processing the call keyword arguments (line 1508)
        kwargs_81010 = {}
        # Getting the type of 'Node' (line 1508)
        Node_81007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1508, 8), 'Node', False)
        # Obtaining the member 'grow' of a type (line 1508)
        grow_81008 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1508, 8), Node_81007, 'grow')
        # Calling grow(args, kwargs) (line 1508)
        grow_call_result_81011 = invoke(stypy.reporting.localization.Localization(__file__, 1508, 8), grow_81008, *[self_81009], **kwargs_81010)
        
        
        # Getting the type of 'self' (line 1509)
        self_81012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1509, 8), 'self')
        # Obtaining the member 'fontsize' of a type (line 1509)
        fontsize_81013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1509, 8), self_81012, 'fontsize')
        # Getting the type of 'GROW_FACTOR' (line 1509)
        GROW_FACTOR_81014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1509, 25), 'GROW_FACTOR')
        # Applying the binary operator '*=' (line 1509)
        result_imul_81015 = python_operator(stypy.reporting.localization.Localization(__file__, 1509, 8), '*=', fontsize_81013, GROW_FACTOR_81014)
        # Getting the type of 'self' (line 1509)
        self_81016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1509, 8), 'self')
        # Setting the type of the member 'fontsize' of a type (line 1509)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1509, 8), self_81016, 'fontsize', result_imul_81015)
        
        
        # Getting the type of 'self' (line 1510)
        self_81017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1510, 8), 'self')
        # Obtaining the member 'width' of a type (line 1510)
        width_81018 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1510, 8), self_81017, 'width')
        # Getting the type of 'GROW_FACTOR' (line 1510)
        GROW_FACTOR_81019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1510, 25), 'GROW_FACTOR')
        # Applying the binary operator '*=' (line 1510)
        result_imul_81020 = python_operator(stypy.reporting.localization.Localization(__file__, 1510, 8), '*=', width_81018, GROW_FACTOR_81019)
        # Getting the type of 'self' (line 1510)
        self_81021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1510, 8), 'self')
        # Setting the type of the member 'width' of a type (line 1510)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1510, 8), self_81021, 'width', result_imul_81020)
        
        
        # Getting the type of 'self' (line 1511)
        self_81022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1511, 8), 'self')
        # Obtaining the member 'height' of a type (line 1511)
        height_81023 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1511, 8), self_81022, 'height')
        # Getting the type of 'GROW_FACTOR' (line 1511)
        GROW_FACTOR_81024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1511, 25), 'GROW_FACTOR')
        # Applying the binary operator '*=' (line 1511)
        result_imul_81025 = python_operator(stypy.reporting.localization.Localization(__file__, 1511, 8), '*=', height_81023, GROW_FACTOR_81024)
        # Getting the type of 'self' (line 1511)
        self_81026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1511, 8), 'self')
        # Setting the type of the member 'height' of a type (line 1511)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1511, 8), self_81026, 'height', result_imul_81025)
        
        
        # Getting the type of 'self' (line 1512)
        self_81027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1512, 8), 'self')
        # Obtaining the member 'depth' of a type (line 1512)
        depth_81028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1512, 8), self_81027, 'depth')
        # Getting the type of 'GROW_FACTOR' (line 1512)
        GROW_FACTOR_81029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1512, 25), 'GROW_FACTOR')
        # Applying the binary operator '*=' (line 1512)
        result_imul_81030 = python_operator(stypy.reporting.localization.Localization(__file__, 1512, 8), '*=', depth_81028, GROW_FACTOR_81029)
        # Getting the type of 'self' (line 1512)
        self_81031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1512, 8), 'self')
        # Setting the type of the member 'depth' of a type (line 1512)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1512, 8), self_81031, 'depth', result_imul_81030)
        
        
        # ################# End of 'grow(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'grow' in the type store
        # Getting the type of 'stypy_return_type' (line 1507)
        stypy_return_type_81032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1507, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81032)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'grow'
        return stypy_return_type_81032


# Assigning a type to the variable 'Char' (line 1436)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1436, 0), 'Char', Char)
# Declaration of the 'Accent' class
# Getting the type of 'Char' (line 1514)
Char_81033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1514, 13), 'Char')

class Accent(Char_81033, ):
    unicode_81034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1519, (-1)), 'unicode', u'\n    The font metrics need to be dealt with differently for accents,\n    since they are already offset correctly from the baseline in\n    TrueType fonts.\n    ')

    @norecursion
    def _update_metrics(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_update_metrics'
        module_type_store = module_type_store.open_function_context('_update_metrics', 1520, 4, False)
        # Assigning a type to the variable 'self' (line 1521)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1521, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Accent._update_metrics.__dict__.__setitem__('stypy_localization', localization)
        Accent._update_metrics.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Accent._update_metrics.__dict__.__setitem__('stypy_type_store', module_type_store)
        Accent._update_metrics.__dict__.__setitem__('stypy_function_name', 'Accent._update_metrics')
        Accent._update_metrics.__dict__.__setitem__('stypy_param_names_list', [])
        Accent._update_metrics.__dict__.__setitem__('stypy_varargs_param_name', None)
        Accent._update_metrics.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Accent._update_metrics.__dict__.__setitem__('stypy_call_defaults', defaults)
        Accent._update_metrics.__dict__.__setitem__('stypy_call_varargs', varargs)
        Accent._update_metrics.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Accent._update_metrics.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Accent._update_metrics', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_update_metrics', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_update_metrics(...)' code ##################

        
        # Multiple assignment of 2 elements.
        
        # Assigning a Call to a Attribute (line 1521):
        
        # Call to get_metrics(...): (line 1521)
        # Processing the call arguments (line 1521)
        # Getting the type of 'self' (line 1522)
        self_81038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1522, 12), 'self', False)
        # Obtaining the member 'font' of a type (line 1522)
        font_81039 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1522, 12), self_81038, 'font')
        # Getting the type of 'self' (line 1522)
        self_81040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1522, 23), 'self', False)
        # Obtaining the member 'font_class' of a type (line 1522)
        font_class_81041 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1522, 23), self_81040, 'font_class')
        # Getting the type of 'self' (line 1522)
        self_81042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1522, 40), 'self', False)
        # Obtaining the member 'c' of a type (line 1522)
        c_81043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1522, 40), self_81042, 'c')
        # Getting the type of 'self' (line 1522)
        self_81044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1522, 48), 'self', False)
        # Obtaining the member 'fontsize' of a type (line 1522)
        fontsize_81045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1522, 48), self_81044, 'fontsize')
        # Getting the type of 'self' (line 1522)
        self_81046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1522, 63), 'self', False)
        # Obtaining the member 'dpi' of a type (line 1522)
        dpi_81047 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1522, 63), self_81046, 'dpi')
        # Processing the call keyword arguments (line 1521)
        kwargs_81048 = {}
        # Getting the type of 'self' (line 1521)
        self_81035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1521, 34), 'self', False)
        # Obtaining the member 'font_output' of a type (line 1521)
        font_output_81036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1521, 34), self_81035, 'font_output')
        # Obtaining the member 'get_metrics' of a type (line 1521)
        get_metrics_81037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1521, 34), font_output_81036, 'get_metrics')
        # Calling get_metrics(args, kwargs) (line 1521)
        get_metrics_call_result_81049 = invoke(stypy.reporting.localization.Localization(__file__, 1521, 34), get_metrics_81037, *[font_81039, font_class_81041, c_81043, fontsize_81045, dpi_81047], **kwargs_81048)
        
        # Getting the type of 'self' (line 1521)
        self_81050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1521, 18), 'self')
        # Setting the type of the member '_metrics' of a type (line 1521)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1521, 18), self_81050, '_metrics', get_metrics_call_result_81049)
        
        # Assigning a Attribute to a Name (line 1521):
        # Getting the type of 'self' (line 1521)
        self_81051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1521, 18), 'self')
        # Obtaining the member '_metrics' of a type (line 1521)
        _metrics_81052 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1521, 18), self_81051, '_metrics')
        # Assigning a type to the variable 'metrics' (line 1521)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1521, 8), 'metrics', _metrics_81052)
        
        # Assigning a BinOp to a Attribute (line 1523):
        
        # Assigning a BinOp to a Attribute (line 1523):
        # Getting the type of 'metrics' (line 1523)
        metrics_81053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1523, 21), 'metrics')
        # Obtaining the member 'xmax' of a type (line 1523)
        xmax_81054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1523, 21), metrics_81053, 'xmax')
        # Getting the type of 'metrics' (line 1523)
        metrics_81055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1523, 36), 'metrics')
        # Obtaining the member 'xmin' of a type (line 1523)
        xmin_81056 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1523, 36), metrics_81055, 'xmin')
        # Applying the binary operator '-' (line 1523)
        result_sub_81057 = python_operator(stypy.reporting.localization.Localization(__file__, 1523, 21), '-', xmax_81054, xmin_81056)
        
        # Getting the type of 'self' (line 1523)
        self_81058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1523, 8), 'self')
        # Setting the type of the member 'width' of a type (line 1523)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1523, 8), self_81058, 'width', result_sub_81057)
        
        # Assigning a BinOp to a Attribute (line 1524):
        
        # Assigning a BinOp to a Attribute (line 1524):
        # Getting the type of 'metrics' (line 1524)
        metrics_81059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1524, 22), 'metrics')
        # Obtaining the member 'ymax' of a type (line 1524)
        ymax_81060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1524, 22), metrics_81059, 'ymax')
        # Getting the type of 'metrics' (line 1524)
        metrics_81061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1524, 37), 'metrics')
        # Obtaining the member 'ymin' of a type (line 1524)
        ymin_81062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1524, 37), metrics_81061, 'ymin')
        # Applying the binary operator '-' (line 1524)
        result_sub_81063 = python_operator(stypy.reporting.localization.Localization(__file__, 1524, 22), '-', ymax_81060, ymin_81062)
        
        # Getting the type of 'self' (line 1524)
        self_81064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1524, 8), 'self')
        # Setting the type of the member 'height' of a type (line 1524)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1524, 8), self_81064, 'height', result_sub_81063)
        
        # Assigning a Num to a Attribute (line 1525):
        
        # Assigning a Num to a Attribute (line 1525):
        int_81065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1525, 21), 'int')
        # Getting the type of 'self' (line 1525)
        self_81066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1525, 8), 'self')
        # Setting the type of the member 'depth' of a type (line 1525)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1525, 8), self_81066, 'depth', int_81065)
        
        # ################# End of '_update_metrics(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_update_metrics' in the type store
        # Getting the type of 'stypy_return_type' (line 1520)
        stypy_return_type_81067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1520, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81067)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_update_metrics'
        return stypy_return_type_81067


    @norecursion
    def shrink(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'shrink'
        module_type_store = module_type_store.open_function_context('shrink', 1527, 4, False)
        # Assigning a type to the variable 'self' (line 1528)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1528, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Accent.shrink.__dict__.__setitem__('stypy_localization', localization)
        Accent.shrink.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Accent.shrink.__dict__.__setitem__('stypy_type_store', module_type_store)
        Accent.shrink.__dict__.__setitem__('stypy_function_name', 'Accent.shrink')
        Accent.shrink.__dict__.__setitem__('stypy_param_names_list', [])
        Accent.shrink.__dict__.__setitem__('stypy_varargs_param_name', None)
        Accent.shrink.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Accent.shrink.__dict__.__setitem__('stypy_call_defaults', defaults)
        Accent.shrink.__dict__.__setitem__('stypy_call_varargs', varargs)
        Accent.shrink.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Accent.shrink.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Accent.shrink', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'shrink', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'shrink(...)' code ##################

        
        # Call to shrink(...): (line 1528)
        # Processing the call arguments (line 1528)
        # Getting the type of 'self' (line 1528)
        self_81070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1528, 20), 'self', False)
        # Processing the call keyword arguments (line 1528)
        kwargs_81071 = {}
        # Getting the type of 'Char' (line 1528)
        Char_81068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1528, 8), 'Char', False)
        # Obtaining the member 'shrink' of a type (line 1528)
        shrink_81069 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1528, 8), Char_81068, 'shrink')
        # Calling shrink(args, kwargs) (line 1528)
        shrink_call_result_81072 = invoke(stypy.reporting.localization.Localization(__file__, 1528, 8), shrink_81069, *[self_81070], **kwargs_81071)
        
        
        # Call to _update_metrics(...): (line 1529)
        # Processing the call keyword arguments (line 1529)
        kwargs_81075 = {}
        # Getting the type of 'self' (line 1529)
        self_81073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1529, 8), 'self', False)
        # Obtaining the member '_update_metrics' of a type (line 1529)
        _update_metrics_81074 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1529, 8), self_81073, '_update_metrics')
        # Calling _update_metrics(args, kwargs) (line 1529)
        _update_metrics_call_result_81076 = invoke(stypy.reporting.localization.Localization(__file__, 1529, 8), _update_metrics_81074, *[], **kwargs_81075)
        
        
        # ################# End of 'shrink(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'shrink' in the type store
        # Getting the type of 'stypy_return_type' (line 1527)
        stypy_return_type_81077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1527, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81077)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'shrink'
        return stypy_return_type_81077


    @norecursion
    def grow(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'grow'
        module_type_store = module_type_store.open_function_context('grow', 1531, 4, False)
        # Assigning a type to the variable 'self' (line 1532)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1532, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Accent.grow.__dict__.__setitem__('stypy_localization', localization)
        Accent.grow.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Accent.grow.__dict__.__setitem__('stypy_type_store', module_type_store)
        Accent.grow.__dict__.__setitem__('stypy_function_name', 'Accent.grow')
        Accent.grow.__dict__.__setitem__('stypy_param_names_list', [])
        Accent.grow.__dict__.__setitem__('stypy_varargs_param_name', None)
        Accent.grow.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Accent.grow.__dict__.__setitem__('stypy_call_defaults', defaults)
        Accent.grow.__dict__.__setitem__('stypy_call_varargs', varargs)
        Accent.grow.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Accent.grow.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Accent.grow', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'grow', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'grow(...)' code ##################

        
        # Call to grow(...): (line 1532)
        # Processing the call arguments (line 1532)
        # Getting the type of 'self' (line 1532)
        self_81080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1532, 18), 'self', False)
        # Processing the call keyword arguments (line 1532)
        kwargs_81081 = {}
        # Getting the type of 'Char' (line 1532)
        Char_81078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1532, 8), 'Char', False)
        # Obtaining the member 'grow' of a type (line 1532)
        grow_81079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1532, 8), Char_81078, 'grow')
        # Calling grow(args, kwargs) (line 1532)
        grow_call_result_81082 = invoke(stypy.reporting.localization.Localization(__file__, 1532, 8), grow_81079, *[self_81080], **kwargs_81081)
        
        
        # Call to _update_metrics(...): (line 1533)
        # Processing the call keyword arguments (line 1533)
        kwargs_81085 = {}
        # Getting the type of 'self' (line 1533)
        self_81083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1533, 8), 'self', False)
        # Obtaining the member '_update_metrics' of a type (line 1533)
        _update_metrics_81084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1533, 8), self_81083, '_update_metrics')
        # Calling _update_metrics(args, kwargs) (line 1533)
        _update_metrics_call_result_81086 = invoke(stypy.reporting.localization.Localization(__file__, 1533, 8), _update_metrics_81084, *[], **kwargs_81085)
        
        
        # ################# End of 'grow(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'grow' in the type store
        # Getting the type of 'stypy_return_type' (line 1531)
        stypy_return_type_81087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1531, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81087)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'grow'
        return stypy_return_type_81087


    @norecursion
    def render(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render'
        module_type_store = module_type_store.open_function_context('render', 1535, 4, False)
        # Assigning a type to the variable 'self' (line 1536)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1536, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Accent.render.__dict__.__setitem__('stypy_localization', localization)
        Accent.render.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Accent.render.__dict__.__setitem__('stypy_type_store', module_type_store)
        Accent.render.__dict__.__setitem__('stypy_function_name', 'Accent.render')
        Accent.render.__dict__.__setitem__('stypy_param_names_list', ['x', 'y'])
        Accent.render.__dict__.__setitem__('stypy_varargs_param_name', None)
        Accent.render.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Accent.render.__dict__.__setitem__('stypy_call_defaults', defaults)
        Accent.render.__dict__.__setitem__('stypy_call_varargs', varargs)
        Accent.render.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Accent.render.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Accent.render', ['x', 'y'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render', localization, ['x', 'y'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render(...)' code ##################

        unicode_81088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1538, (-1)), 'unicode', u'\n        Render the character to the canvas.\n        ')
        
        # Call to render_glyph(...): (line 1539)
        # Processing the call arguments (line 1539)
        # Getting the type of 'x' (line 1540)
        x_81092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1540, 12), 'x', False)
        # Getting the type of 'self' (line 1540)
        self_81093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1540, 16), 'self', False)
        # Obtaining the member '_metrics' of a type (line 1540)
        _metrics_81094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1540, 16), self_81093, '_metrics')
        # Obtaining the member 'xmin' of a type (line 1540)
        xmin_81095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1540, 16), _metrics_81094, 'xmin')
        # Applying the binary operator '-' (line 1540)
        result_sub_81096 = python_operator(stypy.reporting.localization.Localization(__file__, 1540, 12), '-', x_81092, xmin_81095)
        
        # Getting the type of 'y' (line 1540)
        y_81097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1540, 36), 'y', False)
        # Getting the type of 'self' (line 1540)
        self_81098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1540, 40), 'self', False)
        # Obtaining the member '_metrics' of a type (line 1540)
        _metrics_81099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1540, 40), self_81098, '_metrics')
        # Obtaining the member 'ymin' of a type (line 1540)
        ymin_81100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1540, 40), _metrics_81099, 'ymin')
        # Applying the binary operator '+' (line 1540)
        result_add_81101 = python_operator(stypy.reporting.localization.Localization(__file__, 1540, 36), '+', y_81097, ymin_81100)
        
        # Getting the type of 'self' (line 1541)
        self_81102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1541, 12), 'self', False)
        # Obtaining the member 'font' of a type (line 1541)
        font_81103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1541, 12), self_81102, 'font')
        # Getting the type of 'self' (line 1541)
        self_81104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1541, 23), 'self', False)
        # Obtaining the member 'font_class' of a type (line 1541)
        font_class_81105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1541, 23), self_81104, 'font_class')
        # Getting the type of 'self' (line 1541)
        self_81106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1541, 40), 'self', False)
        # Obtaining the member 'c' of a type (line 1541)
        c_81107 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1541, 40), self_81106, 'c')
        # Getting the type of 'self' (line 1541)
        self_81108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1541, 48), 'self', False)
        # Obtaining the member 'fontsize' of a type (line 1541)
        fontsize_81109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1541, 48), self_81108, 'fontsize')
        # Getting the type of 'self' (line 1541)
        self_81110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1541, 63), 'self', False)
        # Obtaining the member 'dpi' of a type (line 1541)
        dpi_81111 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1541, 63), self_81110, 'dpi')
        # Processing the call keyword arguments (line 1539)
        kwargs_81112 = {}
        # Getting the type of 'self' (line 1539)
        self_81089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1539, 8), 'self', False)
        # Obtaining the member 'font_output' of a type (line 1539)
        font_output_81090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1539, 8), self_81089, 'font_output')
        # Obtaining the member 'render_glyph' of a type (line 1539)
        render_glyph_81091 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1539, 8), font_output_81090, 'render_glyph')
        # Calling render_glyph(args, kwargs) (line 1539)
        render_glyph_call_result_81113 = invoke(stypy.reporting.localization.Localization(__file__, 1539, 8), render_glyph_81091, *[result_sub_81096, result_add_81101, font_81103, font_class_81105, c_81107, fontsize_81109, dpi_81111], **kwargs_81112)
        
        
        # ################# End of 'render(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render' in the type store
        # Getting the type of 'stypy_return_type' (line 1535)
        stypy_return_type_81114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1535, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81114)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render'
        return stypy_return_type_81114


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1514, 0, False)
        # Assigning a type to the variable 'self' (line 1515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1515, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Accent.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'Accent' (line 1514)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1514, 0), 'Accent', Accent)
# Declaration of the 'List' class
# Getting the type of 'Box' (line 1543)
Box_81115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1543, 11), 'Box')

class List(Box_81115, ):
    unicode_81116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1546, (-1)), 'unicode', u'\n    A list of nodes (either horizontal or vertical).\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1547, 4, False)
        # Assigning a type to the variable 'self' (line 1548)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1548, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'List.__init__', ['elements'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['elements'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1548)
        # Processing the call arguments (line 1548)
        # Getting the type of 'self' (line 1548)
        self_81119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1548, 21), 'self', False)
        float_81120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1548, 27), 'float')
        float_81121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1548, 31), 'float')
        float_81122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1548, 35), 'float')
        # Processing the call keyword arguments (line 1548)
        kwargs_81123 = {}
        # Getting the type of 'Box' (line 1548)
        Box_81117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1548, 8), 'Box', False)
        # Obtaining the member '__init__' of a type (line 1548)
        init___81118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1548, 8), Box_81117, '__init__')
        # Calling __init__(args, kwargs) (line 1548)
        init___call_result_81124 = invoke(stypy.reporting.localization.Localization(__file__, 1548, 8), init___81118, *[self_81119, float_81120, float_81121, float_81122], **kwargs_81123)
        
        
        # Assigning a Num to a Attribute (line 1549):
        
        # Assigning a Num to a Attribute (line 1549):
        float_81125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1549, 28), 'float')
        # Getting the type of 'self' (line 1549)
        self_81126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1549, 8), 'self')
        # Setting the type of the member 'shift_amount' of a type (line 1549)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1549, 8), self_81126, 'shift_amount', float_81125)
        
        # Assigning a Name to a Attribute (line 1550):
        
        # Assigning a Name to a Attribute (line 1550):
        # Getting the type of 'elements' (line 1550)
        elements_81127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1550, 28), 'elements')
        # Getting the type of 'self' (line 1550)
        self_81128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1550, 8), 'self')
        # Setting the type of the member 'children' of a type (line 1550)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1550, 8), self_81128, 'children', elements_81127)
        
        # Assigning a Num to a Attribute (line 1552):
        
        # Assigning a Num to a Attribute (line 1552):
        float_81129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1552, 28), 'float')
        # Getting the type of 'self' (line 1552)
        self_81130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1552, 8), 'self')
        # Setting the type of the member 'glue_set' of a type (line 1552)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1552, 8), self_81130, 'glue_set', float_81129)
        
        # Assigning a Num to a Attribute (line 1553):
        
        # Assigning a Num to a Attribute (line 1553):
        int_81131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1553, 28), 'int')
        # Getting the type of 'self' (line 1553)
        self_81132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1553, 8), 'self')
        # Setting the type of the member 'glue_sign' of a type (line 1553)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1553, 8), self_81132, 'glue_sign', int_81131)
        
        # Assigning a Num to a Attribute (line 1554):
        
        # Assigning a Num to a Attribute (line 1554):
        int_81133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1554, 28), 'int')
        # Getting the type of 'self' (line 1554)
        self_81134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1554, 8), 'self')
        # Setting the type of the member 'glue_order' of a type (line 1554)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1554, 8), self_81134, 'glue_order', int_81133)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def stypy__repr__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__repr__'
        module_type_store = module_type_store.open_function_context('__repr__', 1556, 4, False)
        # Assigning a type to the variable 'self' (line 1557)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1557, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        List.stypy__repr__.__dict__.__setitem__('stypy_localization', localization)
        List.stypy__repr__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        List.stypy__repr__.__dict__.__setitem__('stypy_type_store', module_type_store)
        List.stypy__repr__.__dict__.__setitem__('stypy_function_name', 'List.stypy__repr__')
        List.stypy__repr__.__dict__.__setitem__('stypy_param_names_list', [])
        List.stypy__repr__.__dict__.__setitem__('stypy_varargs_param_name', None)
        List.stypy__repr__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        List.stypy__repr__.__dict__.__setitem__('stypy_call_defaults', defaults)
        List.stypy__repr__.__dict__.__setitem__('stypy_call_varargs', varargs)
        List.stypy__repr__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        List.stypy__repr__.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'List.stypy__repr__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__repr__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__repr__(...)' code ##################

        unicode_81135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1557, 15), 'unicode', u'[%s <%.02f %.02f %.02f %.02f> %s]')
        
        # Obtaining an instance of the builtin type 'tuple' (line 1558)
        tuple_81136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1558, 12), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1558)
        # Adding element type (line 1558)
        
        # Call to __internal_repr__(...): (line 1558)
        # Processing the call keyword arguments (line 1558)
        kwargs_81139 = {}
        # Getting the type of 'self' (line 1558)
        self_81137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1558, 12), 'self', False)
        # Obtaining the member '__internal_repr__' of a type (line 1558)
        internal_repr___81138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1558, 12), self_81137, '__internal_repr__')
        # Calling __internal_repr__(args, kwargs) (line 1558)
        internal_repr___call_result_81140 = invoke(stypy.reporting.localization.Localization(__file__, 1558, 12), internal_repr___81138, *[], **kwargs_81139)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1558, 12), tuple_81136, internal_repr___call_result_81140)
        # Adding element type (line 1558)
        # Getting the type of 'self' (line 1559)
        self_81141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 12), 'self')
        # Obtaining the member 'width' of a type (line 1559)
        width_81142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1559, 12), self_81141, 'width')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1558, 12), tuple_81136, width_81142)
        # Adding element type (line 1558)
        # Getting the type of 'self' (line 1559)
        self_81143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 24), 'self')
        # Obtaining the member 'height' of a type (line 1559)
        height_81144 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1559, 24), self_81143, 'height')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1558, 12), tuple_81136, height_81144)
        # Adding element type (line 1558)
        # Getting the type of 'self' (line 1560)
        self_81145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1560, 12), 'self')
        # Obtaining the member 'depth' of a type (line 1560)
        depth_81146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1560, 12), self_81145, 'depth')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1558, 12), tuple_81136, depth_81146)
        # Adding element type (line 1558)
        # Getting the type of 'self' (line 1560)
        self_81147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1560, 24), 'self')
        # Obtaining the member 'shift_amount' of a type (line 1560)
        shift_amount_81148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1560, 24), self_81147, 'shift_amount')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1558, 12), tuple_81136, shift_amount_81148)
        # Adding element type (line 1558)
        
        # Call to join(...): (line 1561)
        # Processing the call arguments (line 1561)
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'self' (line 1561)
        self_81155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1561, 39), 'self', False)
        # Obtaining the member 'children' of a type (line 1561)
        children_81156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1561, 39), self_81155, 'children')
        comprehension_81157 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1561, 22), children_81156)
        # Assigning a type to the variable 'x' (line 1561)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1561, 22), 'x', comprehension_81157)
        
        # Call to repr(...): (line 1561)
        # Processing the call arguments (line 1561)
        # Getting the type of 'x' (line 1561)
        x_81152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1561, 27), 'x', False)
        # Processing the call keyword arguments (line 1561)
        kwargs_81153 = {}
        # Getting the type of 'repr' (line 1561)
        repr_81151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1561, 22), 'repr', False)
        # Calling repr(args, kwargs) (line 1561)
        repr_call_result_81154 = invoke(stypy.reporting.localization.Localization(__file__, 1561, 22), repr_81151, *[x_81152], **kwargs_81153)
        
        list_81158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1561, 22), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1561, 22), list_81158, repr_call_result_81154)
        # Processing the call keyword arguments (line 1561)
        kwargs_81159 = {}
        unicode_81149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1561, 12), 'unicode', u' ')
        # Obtaining the member 'join' of a type (line 1561)
        join_81150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1561, 12), unicode_81149, 'join')
        # Calling join(args, kwargs) (line 1561)
        join_call_result_81160 = invoke(stypy.reporting.localization.Localization(__file__, 1561, 12), join_81150, *[list_81158], **kwargs_81159)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1558, 12), tuple_81136, join_call_result_81160)
        
        # Applying the binary operator '%' (line 1557)
        result_mod_81161 = python_operator(stypy.reporting.localization.Localization(__file__, 1557, 15), '%', unicode_81135, tuple_81136)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1557)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1557, 8), 'stypy_return_type', result_mod_81161)
        
        # ################# End of '__repr__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__repr__' in the type store
        # Getting the type of 'stypy_return_type' (line 1556)
        stypy_return_type_81162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1556, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81162)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__repr__'
        return stypy_return_type_81162


    @norecursion
    def _determine_order(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_determine_order'
        module_type_store = module_type_store.open_function_context('_determine_order', 1563, 4, False)
        # Assigning a type to the variable 'self' (line 1564)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1564, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        List._determine_order.__dict__.__setitem__('stypy_localization', localization)
        List._determine_order.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        List._determine_order.__dict__.__setitem__('stypy_type_store', module_type_store)
        List._determine_order.__dict__.__setitem__('stypy_function_name', 'List._determine_order')
        List._determine_order.__dict__.__setitem__('stypy_param_names_list', ['totals'])
        List._determine_order.__dict__.__setitem__('stypy_varargs_param_name', None)
        List._determine_order.__dict__.__setitem__('stypy_kwargs_param_name', None)
        List._determine_order.__dict__.__setitem__('stypy_call_defaults', defaults)
        List._determine_order.__dict__.__setitem__('stypy_call_varargs', varargs)
        List._determine_order.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        List._determine_order.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'List._determine_order', ['totals'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_determine_order', localization, ['totals'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_determine_order(...)' code ##################

        unicode_81163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1567, (-1)), 'unicode', u'\n        A helper function to determine the highest order of glue\n        used by the members of this list.  Used by vpack and hpack.\n        ')
        
        # Assigning a Num to a Name (line 1568):
        
        # Assigning a Num to a Name (line 1568):
        int_81164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1568, 12), 'int')
        # Assigning a type to the variable 'o' (line 1568)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1568, 8), 'o', int_81164)
        
        
        # Call to range(...): (line 1569)
        # Processing the call arguments (line 1569)
        
        # Call to len(...): (line 1569)
        # Processing the call arguments (line 1569)
        # Getting the type of 'totals' (line 1569)
        totals_81167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1569, 27), 'totals', False)
        # Processing the call keyword arguments (line 1569)
        kwargs_81168 = {}
        # Getting the type of 'len' (line 1569)
        len_81166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1569, 23), 'len', False)
        # Calling len(args, kwargs) (line 1569)
        len_call_result_81169 = invoke(stypy.reporting.localization.Localization(__file__, 1569, 23), len_81166, *[totals_81167], **kwargs_81168)
        
        int_81170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1569, 37), 'int')
        # Applying the binary operator '-' (line 1569)
        result_sub_81171 = python_operator(stypy.reporting.localization.Localization(__file__, 1569, 23), '-', len_call_result_81169, int_81170)
        
        int_81172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1569, 40), 'int')
        int_81173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1569, 43), 'int')
        # Processing the call keyword arguments (line 1569)
        kwargs_81174 = {}
        # Getting the type of 'range' (line 1569)
        range_81165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1569, 17), 'range', False)
        # Calling range(args, kwargs) (line 1569)
        range_call_result_81175 = invoke(stypy.reporting.localization.Localization(__file__, 1569, 17), range_81165, *[result_sub_81171, int_81172, int_81173], **kwargs_81174)
        
        # Testing the type of a for loop iterable (line 1569)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1569, 8), range_call_result_81175)
        # Getting the type of the for loop variable (line 1569)
        for_loop_var_81176 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1569, 8), range_call_result_81175)
        # Assigning a type to the variable 'i' (line 1569)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1569, 8), 'i', for_loop_var_81176)
        # SSA begins for a for statement (line 1569)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 1570)
        i_81177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1570, 22), 'i')
        # Getting the type of 'totals' (line 1570)
        totals_81178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1570, 15), 'totals')
        # Obtaining the member '__getitem__' of a type (line 1570)
        getitem___81179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1570, 15), totals_81178, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1570)
        subscript_call_result_81180 = invoke(stypy.reporting.localization.Localization(__file__, 1570, 15), getitem___81179, i_81177)
        
        float_81181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1570, 28), 'float')
        # Applying the binary operator '!=' (line 1570)
        result_ne_81182 = python_operator(stypy.reporting.localization.Localization(__file__, 1570, 15), '!=', subscript_call_result_81180, float_81181)
        
        # Testing the type of an if condition (line 1570)
        if_condition_81183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1570, 12), result_ne_81182)
        # Assigning a type to the variable 'if_condition_81183' (line 1570)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1570, 12), 'if_condition_81183', if_condition_81183)
        # SSA begins for if statement (line 1570)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 1571):
        
        # Assigning a Name to a Name (line 1571):
        # Getting the type of 'i' (line 1571)
        i_81184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1571, 20), 'i')
        # Assigning a type to the variable 'o' (line 1571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1571, 16), 'o', i_81184)
        # SSA join for if statement (line 1570)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'o' (line 1573)
        o_81185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1573, 15), 'o')
        # Assigning a type to the variable 'stypy_return_type' (line 1573)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1573, 8), 'stypy_return_type', o_81185)
        
        # ################# End of '_determine_order(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_determine_order' in the type store
        # Getting the type of 'stypy_return_type' (line 1563)
        stypy_return_type_81186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1563, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81186)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_determine_order'
        return stypy_return_type_81186


    @norecursion
    def _set_glue(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_glue'
        module_type_store = module_type_store.open_function_context('_set_glue', 1575, 4, False)
        # Assigning a type to the variable 'self' (line 1576)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1576, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        List._set_glue.__dict__.__setitem__('stypy_localization', localization)
        List._set_glue.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        List._set_glue.__dict__.__setitem__('stypy_type_store', module_type_store)
        List._set_glue.__dict__.__setitem__('stypy_function_name', 'List._set_glue')
        List._set_glue.__dict__.__setitem__('stypy_param_names_list', ['x', 'sign', 'totals', 'error_type'])
        List._set_glue.__dict__.__setitem__('stypy_varargs_param_name', None)
        List._set_glue.__dict__.__setitem__('stypy_kwargs_param_name', None)
        List._set_glue.__dict__.__setitem__('stypy_call_defaults', defaults)
        List._set_glue.__dict__.__setitem__('stypy_call_varargs', varargs)
        List._set_glue.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        List._set_glue.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'List._set_glue', ['x', 'sign', 'totals', 'error_type'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_glue', localization, ['x', 'sign', 'totals', 'error_type'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_glue(...)' code ##################

        
        # Assigning a Call to a Name (line 1576):
        
        # Assigning a Call to a Name (line 1576):
        
        # Call to _determine_order(...): (line 1576)
        # Processing the call arguments (line 1576)
        # Getting the type of 'totals' (line 1576)
        totals_81189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1576, 34), 'totals', False)
        # Processing the call keyword arguments (line 1576)
        kwargs_81190 = {}
        # Getting the type of 'self' (line 1576)
        self_81187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1576, 12), 'self', False)
        # Obtaining the member '_determine_order' of a type (line 1576)
        _determine_order_81188 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1576, 12), self_81187, '_determine_order')
        # Calling _determine_order(args, kwargs) (line 1576)
        _determine_order_call_result_81191 = invoke(stypy.reporting.localization.Localization(__file__, 1576, 12), _determine_order_81188, *[totals_81189], **kwargs_81190)
        
        # Assigning a type to the variable 'o' (line 1576)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1576, 8), 'o', _determine_order_call_result_81191)
        
        # Assigning a Name to a Attribute (line 1577):
        
        # Assigning a Name to a Attribute (line 1577):
        # Getting the type of 'o' (line 1577)
        o_81192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1577, 26), 'o')
        # Getting the type of 'self' (line 1577)
        self_81193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1577, 8), 'self')
        # Setting the type of the member 'glue_order' of a type (line 1577)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1577, 8), self_81193, 'glue_order', o_81192)
        
        # Assigning a Name to a Attribute (line 1578):
        
        # Assigning a Name to a Attribute (line 1578):
        # Getting the type of 'sign' (line 1578)
        sign_81194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1578, 25), 'sign')
        # Getting the type of 'self' (line 1578)
        self_81195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1578, 8), 'self')
        # Setting the type of the member 'glue_sign' of a type (line 1578)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1578, 8), self_81195, 'glue_sign', sign_81194)
        
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'o' (line 1579)
        o_81196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1579, 18), 'o')
        # Getting the type of 'totals' (line 1579)
        totals_81197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1579, 11), 'totals')
        # Obtaining the member '__getitem__' of a type (line 1579)
        getitem___81198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1579, 11), totals_81197, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1579)
        subscript_call_result_81199 = invoke(stypy.reporting.localization.Localization(__file__, 1579, 11), getitem___81198, o_81196)
        
        float_81200 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1579, 24), 'float')
        # Applying the binary operator '!=' (line 1579)
        result_ne_81201 = python_operator(stypy.reporting.localization.Localization(__file__, 1579, 11), '!=', subscript_call_result_81199, float_81200)
        
        # Testing the type of an if condition (line 1579)
        if_condition_81202 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1579, 8), result_ne_81201)
        # Assigning a type to the variable 'if_condition_81202' (line 1579)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1579, 8), 'if_condition_81202', if_condition_81202)
        # SSA begins for if statement (line 1579)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Attribute (line 1580):
        
        # Assigning a BinOp to a Attribute (line 1580):
        # Getting the type of 'x' (line 1580)
        x_81203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1580, 28), 'x')
        
        # Obtaining the type of the subscript
        # Getting the type of 'o' (line 1580)
        o_81204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1580, 39), 'o')
        # Getting the type of 'totals' (line 1580)
        totals_81205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1580, 32), 'totals')
        # Obtaining the member '__getitem__' of a type (line 1580)
        getitem___81206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1580, 32), totals_81205, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1580)
        subscript_call_result_81207 = invoke(stypy.reporting.localization.Localization(__file__, 1580, 32), getitem___81206, o_81204)
        
        # Applying the binary operator 'div' (line 1580)
        result_div_81208 = python_operator(stypy.reporting.localization.Localization(__file__, 1580, 28), 'div', x_81203, subscript_call_result_81207)
        
        # Getting the type of 'self' (line 1580)
        self_81209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1580, 12), 'self')
        # Setting the type of the member 'glue_set' of a type (line 1580)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1580, 12), self_81209, 'glue_set', result_div_81208)
        # SSA branch for the else part of an if statement (line 1579)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Num to a Attribute (line 1582):
        
        # Assigning a Num to a Attribute (line 1582):
        int_81210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1582, 29), 'int')
        # Getting the type of 'self' (line 1582)
        self_81211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1582, 12), 'self')
        # Setting the type of the member 'glue_sign' of a type (line 1582)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1582, 12), self_81211, 'glue_sign', int_81210)
        
        # Assigning a Num to a Attribute (line 1583):
        
        # Assigning a Num to a Attribute (line 1583):
        float_81212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1583, 30), 'float')
        # Getting the type of 'self' (line 1583)
        self_81213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1583, 12), 'self')
        # Setting the type of the member 'glue_ratio' of a type (line 1583)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1583, 12), self_81213, 'glue_ratio', float_81212)
        # SSA join for if statement (line 1579)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'o' (line 1584)
        o_81214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1584, 11), 'o')
        int_81215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1584, 16), 'int')
        # Applying the binary operator '==' (line 1584)
        result_eq_81216 = python_operator(stypy.reporting.localization.Localization(__file__, 1584, 11), '==', o_81214, int_81215)
        
        # Testing the type of an if condition (line 1584)
        if_condition_81217 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1584, 8), result_eq_81216)
        # Assigning a type to the variable 'if_condition_81217' (line 1584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1584, 8), 'if_condition_81217', if_condition_81217)
        # SSA begins for if statement (line 1584)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Call to len(...): (line 1585)
        # Processing the call arguments (line 1585)
        # Getting the type of 'self' (line 1585)
        self_81219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 19), 'self', False)
        # Obtaining the member 'children' of a type (line 1585)
        children_81220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1585, 19), self_81219, 'children')
        # Processing the call keyword arguments (line 1585)
        kwargs_81221 = {}
        # Getting the type of 'len' (line 1585)
        len_81218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 15), 'len', False)
        # Calling len(args, kwargs) (line 1585)
        len_call_result_81222 = invoke(stypy.reporting.localization.Localization(__file__, 1585, 15), len_81218, *[children_81220], **kwargs_81221)
        
        # Testing the type of an if condition (line 1585)
        if_condition_81223 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1585, 12), len_call_result_81222)
        # Assigning a type to the variable 'if_condition_81223' (line 1585)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1585, 12), 'if_condition_81223', if_condition_81223)
        # SSA begins for if statement (line 1585)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to warn(...): (line 1586)
        # Processing the call arguments (line 1586)
        unicode_81225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1586, 21), 'unicode', u'%s %s: %r')
        
        # Obtaining an instance of the builtin type 'tuple' (line 1586)
        tuple_81226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1586, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1586)
        # Adding element type (line 1586)
        # Getting the type of 'error_type' (line 1586)
        error_type_81227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1586, 36), 'error_type', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1586, 36), tuple_81226, error_type_81227)
        # Adding element type (line 1586)
        # Getting the type of 'self' (line 1586)
        self_81228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1586, 48), 'self', False)
        # Obtaining the member '__class__' of a type (line 1586)
        class___81229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1586, 48), self_81228, '__class__')
        # Obtaining the member '__name__' of a type (line 1586)
        name___81230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1586, 48), class___81229, '__name__')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1586, 36), tuple_81226, name___81230)
        # Adding element type (line 1586)
        # Getting the type of 'self' (line 1586)
        self_81231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1586, 73), 'self', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1586, 36), tuple_81226, self_81231)
        
        # Applying the binary operator '%' (line 1586)
        result_mod_81232 = python_operator(stypy.reporting.localization.Localization(__file__, 1586, 21), '%', unicode_81225, tuple_81226)
        
        # Getting the type of 'MathTextWarning' (line 1587)
        MathTextWarning_81233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 21), 'MathTextWarning', False)
        # Processing the call keyword arguments (line 1586)
        kwargs_81234 = {}
        # Getting the type of 'warn' (line 1586)
        warn_81224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1586, 16), 'warn', False)
        # Calling warn(args, kwargs) (line 1586)
        warn_call_result_81235 = invoke(stypy.reporting.localization.Localization(__file__, 1586, 16), warn_81224, *[result_mod_81232, MathTextWarning_81233], **kwargs_81234)
        
        # SSA join for if statement (line 1585)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1584)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_set_glue(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_glue' in the type store
        # Getting the type of 'stypy_return_type' (line 1575)
        stypy_return_type_81236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1575, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81236)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_glue'
        return stypy_return_type_81236


    @norecursion
    def shrink(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'shrink'
        module_type_store = module_type_store.open_function_context('shrink', 1589, 4, False)
        # Assigning a type to the variable 'self' (line 1590)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1590, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        List.shrink.__dict__.__setitem__('stypy_localization', localization)
        List.shrink.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        List.shrink.__dict__.__setitem__('stypy_type_store', module_type_store)
        List.shrink.__dict__.__setitem__('stypy_function_name', 'List.shrink')
        List.shrink.__dict__.__setitem__('stypy_param_names_list', [])
        List.shrink.__dict__.__setitem__('stypy_varargs_param_name', None)
        List.shrink.__dict__.__setitem__('stypy_kwargs_param_name', None)
        List.shrink.__dict__.__setitem__('stypy_call_defaults', defaults)
        List.shrink.__dict__.__setitem__('stypy_call_varargs', varargs)
        List.shrink.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        List.shrink.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'List.shrink', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'shrink', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'shrink(...)' code ##################

        
        # Getting the type of 'self' (line 1590)
        self_81237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1590, 21), 'self')
        # Obtaining the member 'children' of a type (line 1590)
        children_81238 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1590, 21), self_81237, 'children')
        # Testing the type of a for loop iterable (line 1590)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1590, 8), children_81238)
        # Getting the type of the for loop variable (line 1590)
        for_loop_var_81239 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1590, 8), children_81238)
        # Assigning a type to the variable 'child' (line 1590)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1590, 8), 'child', for_loop_var_81239)
        # SSA begins for a for statement (line 1590)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to shrink(...): (line 1591)
        # Processing the call keyword arguments (line 1591)
        kwargs_81242 = {}
        # Getting the type of 'child' (line 1591)
        child_81240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1591, 12), 'child', False)
        # Obtaining the member 'shrink' of a type (line 1591)
        shrink_81241 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1591, 12), child_81240, 'shrink')
        # Calling shrink(args, kwargs) (line 1591)
        shrink_call_result_81243 = invoke(stypy.reporting.localization.Localization(__file__, 1591, 12), shrink_81241, *[], **kwargs_81242)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to shrink(...): (line 1592)
        # Processing the call arguments (line 1592)
        # Getting the type of 'self' (line 1592)
        self_81246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1592, 19), 'self', False)
        # Processing the call keyword arguments (line 1592)
        kwargs_81247 = {}
        # Getting the type of 'Box' (line 1592)
        Box_81244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1592, 8), 'Box', False)
        # Obtaining the member 'shrink' of a type (line 1592)
        shrink_81245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1592, 8), Box_81244, 'shrink')
        # Calling shrink(args, kwargs) (line 1592)
        shrink_call_result_81248 = invoke(stypy.reporting.localization.Localization(__file__, 1592, 8), shrink_81245, *[self_81246], **kwargs_81247)
        
        
        
        # Getting the type of 'self' (line 1593)
        self_81249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1593, 11), 'self')
        # Obtaining the member 'size' of a type (line 1593)
        size_81250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1593, 11), self_81249, 'size')
        # Getting the type of 'NUM_SIZE_LEVELS' (line 1593)
        NUM_SIZE_LEVELS_81251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1593, 23), 'NUM_SIZE_LEVELS')
        # Applying the binary operator '<' (line 1593)
        result_lt_81252 = python_operator(stypy.reporting.localization.Localization(__file__, 1593, 11), '<', size_81250, NUM_SIZE_LEVELS_81251)
        
        # Testing the type of an if condition (line 1593)
        if_condition_81253 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1593, 8), result_lt_81252)
        # Assigning a type to the variable 'if_condition_81253' (line 1593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1593, 8), 'if_condition_81253', if_condition_81253)
        # SSA begins for if statement (line 1593)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'self' (line 1594)
        self_81254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1594, 12), 'self')
        # Obtaining the member 'shift_amount' of a type (line 1594)
        shift_amount_81255 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1594, 12), self_81254, 'shift_amount')
        # Getting the type of 'SHRINK_FACTOR' (line 1594)
        SHRINK_FACTOR_81256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1594, 33), 'SHRINK_FACTOR')
        # Applying the binary operator '*=' (line 1594)
        result_imul_81257 = python_operator(stypy.reporting.localization.Localization(__file__, 1594, 12), '*=', shift_amount_81255, SHRINK_FACTOR_81256)
        # Getting the type of 'self' (line 1594)
        self_81258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1594, 12), 'self')
        # Setting the type of the member 'shift_amount' of a type (line 1594)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1594, 12), self_81258, 'shift_amount', result_imul_81257)
        
        
        # Getting the type of 'self' (line 1595)
        self_81259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1595, 12), 'self')
        # Obtaining the member 'glue_set' of a type (line 1595)
        glue_set_81260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1595, 12), self_81259, 'glue_set')
        # Getting the type of 'SHRINK_FACTOR' (line 1595)
        SHRINK_FACTOR_81261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1595, 33), 'SHRINK_FACTOR')
        # Applying the binary operator '*=' (line 1595)
        result_imul_81262 = python_operator(stypy.reporting.localization.Localization(__file__, 1595, 12), '*=', glue_set_81260, SHRINK_FACTOR_81261)
        # Getting the type of 'self' (line 1595)
        self_81263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1595, 12), 'self')
        # Setting the type of the member 'glue_set' of a type (line 1595)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1595, 12), self_81263, 'glue_set', result_imul_81262)
        
        # SSA join for if statement (line 1593)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'shrink(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'shrink' in the type store
        # Getting the type of 'stypy_return_type' (line 1589)
        stypy_return_type_81264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1589, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81264)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'shrink'
        return stypy_return_type_81264


    @norecursion
    def grow(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'grow'
        module_type_store = module_type_store.open_function_context('grow', 1597, 4, False)
        # Assigning a type to the variable 'self' (line 1598)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1598, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        List.grow.__dict__.__setitem__('stypy_localization', localization)
        List.grow.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        List.grow.__dict__.__setitem__('stypy_type_store', module_type_store)
        List.grow.__dict__.__setitem__('stypy_function_name', 'List.grow')
        List.grow.__dict__.__setitem__('stypy_param_names_list', [])
        List.grow.__dict__.__setitem__('stypy_varargs_param_name', None)
        List.grow.__dict__.__setitem__('stypy_kwargs_param_name', None)
        List.grow.__dict__.__setitem__('stypy_call_defaults', defaults)
        List.grow.__dict__.__setitem__('stypy_call_varargs', varargs)
        List.grow.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        List.grow.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'List.grow', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'grow', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'grow(...)' code ##################

        
        # Getting the type of 'self' (line 1598)
        self_81265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1598, 21), 'self')
        # Obtaining the member 'children' of a type (line 1598)
        children_81266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1598, 21), self_81265, 'children')
        # Testing the type of a for loop iterable (line 1598)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1598, 8), children_81266)
        # Getting the type of the for loop variable (line 1598)
        for_loop_var_81267 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1598, 8), children_81266)
        # Assigning a type to the variable 'child' (line 1598)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1598, 8), 'child', for_loop_var_81267)
        # SSA begins for a for statement (line 1598)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to grow(...): (line 1599)
        # Processing the call keyword arguments (line 1599)
        kwargs_81270 = {}
        # Getting the type of 'child' (line 1599)
        child_81268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1599, 12), 'child', False)
        # Obtaining the member 'grow' of a type (line 1599)
        grow_81269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1599, 12), child_81268, 'grow')
        # Calling grow(args, kwargs) (line 1599)
        grow_call_result_81271 = invoke(stypy.reporting.localization.Localization(__file__, 1599, 12), grow_81269, *[], **kwargs_81270)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to grow(...): (line 1600)
        # Processing the call arguments (line 1600)
        # Getting the type of 'self' (line 1600)
        self_81274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1600, 17), 'self', False)
        # Processing the call keyword arguments (line 1600)
        kwargs_81275 = {}
        # Getting the type of 'Box' (line 1600)
        Box_81272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1600, 8), 'Box', False)
        # Obtaining the member 'grow' of a type (line 1600)
        grow_81273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1600, 8), Box_81272, 'grow')
        # Calling grow(args, kwargs) (line 1600)
        grow_call_result_81276 = invoke(stypy.reporting.localization.Localization(__file__, 1600, 8), grow_81273, *[self_81274], **kwargs_81275)
        
        
        # Getting the type of 'self' (line 1601)
        self_81277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1601, 8), 'self')
        # Obtaining the member 'shift_amount' of a type (line 1601)
        shift_amount_81278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1601, 8), self_81277, 'shift_amount')
        # Getting the type of 'GROW_FACTOR' (line 1601)
        GROW_FACTOR_81279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1601, 29), 'GROW_FACTOR')
        # Applying the binary operator '*=' (line 1601)
        result_imul_81280 = python_operator(stypy.reporting.localization.Localization(__file__, 1601, 8), '*=', shift_amount_81278, GROW_FACTOR_81279)
        # Getting the type of 'self' (line 1601)
        self_81281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1601, 8), 'self')
        # Setting the type of the member 'shift_amount' of a type (line 1601)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1601, 8), self_81281, 'shift_amount', result_imul_81280)
        
        
        # Getting the type of 'self' (line 1602)
        self_81282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1602, 8), 'self')
        # Obtaining the member 'glue_set' of a type (line 1602)
        glue_set_81283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1602, 8), self_81282, 'glue_set')
        # Getting the type of 'GROW_FACTOR' (line 1602)
        GROW_FACTOR_81284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1602, 29), 'GROW_FACTOR')
        # Applying the binary operator '*=' (line 1602)
        result_imul_81285 = python_operator(stypy.reporting.localization.Localization(__file__, 1602, 8), '*=', glue_set_81283, GROW_FACTOR_81284)
        # Getting the type of 'self' (line 1602)
        self_81286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1602, 8), 'self')
        # Setting the type of the member 'glue_set' of a type (line 1602)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1602, 8), self_81286, 'glue_set', result_imul_81285)
        
        
        # ################# End of 'grow(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'grow' in the type store
        # Getting the type of 'stypy_return_type' (line 1597)
        stypy_return_type_81287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1597, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81287)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'grow'
        return stypy_return_type_81287


# Assigning a type to the variable 'List' (line 1543)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1543, 0), 'List', List)
# Declaration of the 'Hlist' class
# Getting the type of 'List' (line 1604)
List_81288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1604, 12), 'List')

class Hlist(List_81288, ):
    unicode_81289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1607, (-1)), 'unicode', u'\n    A horizontal list of boxes.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        float_81290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1608, 35), 'float')
        unicode_81291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1608, 41), 'unicode', u'additional')
        # Getting the type of 'True' (line 1608)
        True_81292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1608, 63), 'True')
        defaults = [float_81290, unicode_81291, True_81292]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1608, 4, False)
        # Assigning a type to the variable 'self' (line 1609)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1609, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Hlist.__init__', ['elements', 'w', 'm', 'do_kern'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['elements', 'w', 'm', 'do_kern'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1609)
        # Processing the call arguments (line 1609)
        # Getting the type of 'self' (line 1609)
        self_81295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1609, 22), 'self', False)
        # Getting the type of 'elements' (line 1609)
        elements_81296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1609, 28), 'elements', False)
        # Processing the call keyword arguments (line 1609)
        kwargs_81297 = {}
        # Getting the type of 'List' (line 1609)
        List_81293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1609, 8), 'List', False)
        # Obtaining the member '__init__' of a type (line 1609)
        init___81294 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1609, 8), List_81293, '__init__')
        # Calling __init__(args, kwargs) (line 1609)
        init___call_result_81298 = invoke(stypy.reporting.localization.Localization(__file__, 1609, 8), init___81294, *[self_81295, elements_81296], **kwargs_81297)
        
        
        # Getting the type of 'do_kern' (line 1610)
        do_kern_81299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1610, 11), 'do_kern')
        # Testing the type of an if condition (line 1610)
        if_condition_81300 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1610, 8), do_kern_81299)
        # Assigning a type to the variable 'if_condition_81300' (line 1610)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1610, 8), 'if_condition_81300', if_condition_81300)
        # SSA begins for if statement (line 1610)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to kern(...): (line 1611)
        # Processing the call keyword arguments (line 1611)
        kwargs_81303 = {}
        # Getting the type of 'self' (line 1611)
        self_81301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1611, 12), 'self', False)
        # Obtaining the member 'kern' of a type (line 1611)
        kern_81302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1611, 12), self_81301, 'kern')
        # Calling kern(args, kwargs) (line 1611)
        kern_call_result_81304 = invoke(stypy.reporting.localization.Localization(__file__, 1611, 12), kern_81302, *[], **kwargs_81303)
        
        # SSA join for if statement (line 1610)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to hpack(...): (line 1612)
        # Processing the call keyword arguments (line 1612)
        kwargs_81307 = {}
        # Getting the type of 'self' (line 1612)
        self_81305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1612, 8), 'self', False)
        # Obtaining the member 'hpack' of a type (line 1612)
        hpack_81306 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1612, 8), self_81305, 'hpack')
        # Calling hpack(args, kwargs) (line 1612)
        hpack_call_result_81308 = invoke(stypy.reporting.localization.Localization(__file__, 1612, 8), hpack_81306, *[], **kwargs_81307)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def kern(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'kern'
        module_type_store = module_type_store.open_function_context('kern', 1614, 4, False)
        # Assigning a type to the variable 'self' (line 1615)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1615, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Hlist.kern.__dict__.__setitem__('stypy_localization', localization)
        Hlist.kern.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Hlist.kern.__dict__.__setitem__('stypy_type_store', module_type_store)
        Hlist.kern.__dict__.__setitem__('stypy_function_name', 'Hlist.kern')
        Hlist.kern.__dict__.__setitem__('stypy_param_names_list', [])
        Hlist.kern.__dict__.__setitem__('stypy_varargs_param_name', None)
        Hlist.kern.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Hlist.kern.__dict__.__setitem__('stypy_call_defaults', defaults)
        Hlist.kern.__dict__.__setitem__('stypy_call_varargs', varargs)
        Hlist.kern.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Hlist.kern.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Hlist.kern', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'kern', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'kern(...)' code ##################

        unicode_81309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1621, (-1)), 'unicode', u'\n        Insert :class:`Kern` nodes between :class:`Char` nodes to set\n        kerning.  The :class:`Char` nodes themselves determine the\n        amount of kerning they need (in :meth:`~Char.get_kerning`),\n        and this function just creates the linked list in the correct\n        way.\n        ')
        
        # Assigning a List to a Name (line 1622):
        
        # Assigning a List to a Name (line 1622):
        
        # Obtaining an instance of the builtin type 'list' (line 1622)
        list_81310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1622, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1622)
        
        # Assigning a type to the variable 'new_children' (line 1622)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1622, 8), 'new_children', list_81310)
        
        # Assigning a Call to a Name (line 1623):
        
        # Assigning a Call to a Name (line 1623):
        
        # Call to len(...): (line 1623)
        # Processing the call arguments (line 1623)
        # Getting the type of 'self' (line 1623)
        self_81312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1623, 27), 'self', False)
        # Obtaining the member 'children' of a type (line 1623)
        children_81313 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1623, 27), self_81312, 'children')
        # Processing the call keyword arguments (line 1623)
        kwargs_81314 = {}
        # Getting the type of 'len' (line 1623)
        len_81311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1623, 23), 'len', False)
        # Calling len(args, kwargs) (line 1623)
        len_call_result_81315 = invoke(stypy.reporting.localization.Localization(__file__, 1623, 23), len_81311, *[children_81313], **kwargs_81314)
        
        # Assigning a type to the variable 'num_children' (line 1623)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1623, 8), 'num_children', len_call_result_81315)
        
        # Getting the type of 'num_children' (line 1624)
        num_children_81316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1624, 11), 'num_children')
        # Testing the type of an if condition (line 1624)
        if_condition_81317 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1624, 8), num_children_81316)
        # Assigning a type to the variable 'if_condition_81317' (line 1624)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1624, 8), 'if_condition_81317', if_condition_81317)
        # SSA begins for if statement (line 1624)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Call to range(...): (line 1625)
        # Processing the call arguments (line 1625)
        # Getting the type of 'num_children' (line 1625)
        num_children_81319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1625, 27), 'num_children', False)
        # Processing the call keyword arguments (line 1625)
        kwargs_81320 = {}
        # Getting the type of 'range' (line 1625)
        range_81318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1625, 21), 'range', False)
        # Calling range(args, kwargs) (line 1625)
        range_call_result_81321 = invoke(stypy.reporting.localization.Localization(__file__, 1625, 21), range_81318, *[num_children_81319], **kwargs_81320)
        
        # Testing the type of a for loop iterable (line 1625)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1625, 12), range_call_result_81321)
        # Getting the type of the for loop variable (line 1625)
        for_loop_var_81322 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1625, 12), range_call_result_81321)
        # Assigning a type to the variable 'i' (line 1625)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1625, 12), 'i', for_loop_var_81322)
        # SSA begins for a for statement (line 1625)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Subscript to a Name (line 1626):
        
        # Assigning a Subscript to a Name (line 1626):
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 1626)
        i_81323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1626, 37), 'i')
        # Getting the type of 'self' (line 1626)
        self_81324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1626, 23), 'self')
        # Obtaining the member 'children' of a type (line 1626)
        children_81325 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1626, 23), self_81324, 'children')
        # Obtaining the member '__getitem__' of a type (line 1626)
        getitem___81326 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1626, 23), children_81325, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1626)
        subscript_call_result_81327 = invoke(stypy.reporting.localization.Localization(__file__, 1626, 23), getitem___81326, i_81323)
        
        # Assigning a type to the variable 'elem' (line 1626)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1626, 16), 'elem', subscript_call_result_81327)
        
        
        # Getting the type of 'i' (line 1627)
        i_81328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1627, 19), 'i')
        # Getting the type of 'num_children' (line 1627)
        num_children_81329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1627, 23), 'num_children')
        int_81330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1627, 38), 'int')
        # Applying the binary operator '-' (line 1627)
        result_sub_81331 = python_operator(stypy.reporting.localization.Localization(__file__, 1627, 23), '-', num_children_81329, int_81330)
        
        # Applying the binary operator '<' (line 1627)
        result_lt_81332 = python_operator(stypy.reporting.localization.Localization(__file__, 1627, 19), '<', i_81328, result_sub_81331)
        
        # Testing the type of an if condition (line 1627)
        if_condition_81333 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1627, 16), result_lt_81332)
        # Assigning a type to the variable 'if_condition_81333' (line 1627)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1627, 16), 'if_condition_81333', if_condition_81333)
        # SSA begins for if statement (line 1627)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 1628):
        
        # Assigning a Subscript to a Name (line 1628):
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 1628)
        i_81334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1628, 41), 'i')
        int_81335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1628, 45), 'int')
        # Applying the binary operator '+' (line 1628)
        result_add_81336 = python_operator(stypy.reporting.localization.Localization(__file__, 1628, 41), '+', i_81334, int_81335)
        
        # Getting the type of 'self' (line 1628)
        self_81337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1628, 27), 'self')
        # Obtaining the member 'children' of a type (line 1628)
        children_81338 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1628, 27), self_81337, 'children')
        # Obtaining the member '__getitem__' of a type (line 1628)
        getitem___81339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1628, 27), children_81338, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1628)
        subscript_call_result_81340 = invoke(stypy.reporting.localization.Localization(__file__, 1628, 27), getitem___81339, result_add_81336)
        
        # Assigning a type to the variable 'next' (line 1628)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1628, 20), 'next', subscript_call_result_81340)
        # SSA branch for the else part of an if statement (line 1627)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 1630):
        
        # Assigning a Name to a Name (line 1630):
        # Getting the type of 'None' (line 1630)
        None_81341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1630, 27), 'None')
        # Assigning a type to the variable 'next' (line 1630)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1630, 20), 'next', None_81341)
        # SSA join for if statement (line 1627)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to append(...): (line 1632)
        # Processing the call arguments (line 1632)
        # Getting the type of 'elem' (line 1632)
        elem_81344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1632, 36), 'elem', False)
        # Processing the call keyword arguments (line 1632)
        kwargs_81345 = {}
        # Getting the type of 'new_children' (line 1632)
        new_children_81342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1632, 16), 'new_children', False)
        # Obtaining the member 'append' of a type (line 1632)
        append_81343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1632, 16), new_children_81342, 'append')
        # Calling append(args, kwargs) (line 1632)
        append_call_result_81346 = invoke(stypy.reporting.localization.Localization(__file__, 1632, 16), append_81343, *[elem_81344], **kwargs_81345)
        
        
        # Assigning a Call to a Name (line 1633):
        
        # Assigning a Call to a Name (line 1633):
        
        # Call to get_kerning(...): (line 1633)
        # Processing the call arguments (line 1633)
        # Getting the type of 'next' (line 1633)
        next_81349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1633, 52), 'next', False)
        # Processing the call keyword arguments (line 1633)
        kwargs_81350 = {}
        # Getting the type of 'elem' (line 1633)
        elem_81347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1633, 35), 'elem', False)
        # Obtaining the member 'get_kerning' of a type (line 1633)
        get_kerning_81348 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1633, 35), elem_81347, 'get_kerning')
        # Calling get_kerning(args, kwargs) (line 1633)
        get_kerning_call_result_81351 = invoke(stypy.reporting.localization.Localization(__file__, 1633, 35), get_kerning_81348, *[next_81349], **kwargs_81350)
        
        # Assigning a type to the variable 'kerning_distance' (line 1633)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1633, 16), 'kerning_distance', get_kerning_call_result_81351)
        
        
        # Getting the type of 'kerning_distance' (line 1634)
        kerning_distance_81352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1634, 19), 'kerning_distance')
        float_81353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1634, 39), 'float')
        # Applying the binary operator '!=' (line 1634)
        result_ne_81354 = python_operator(stypy.reporting.localization.Localization(__file__, 1634, 19), '!=', kerning_distance_81352, float_81353)
        
        # Testing the type of an if condition (line 1634)
        if_condition_81355 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1634, 16), result_ne_81354)
        # Assigning a type to the variable 'if_condition_81355' (line 1634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1634, 16), 'if_condition_81355', if_condition_81355)
        # SSA begins for if statement (line 1634)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1635):
        
        # Assigning a Call to a Name (line 1635):
        
        # Call to Kern(...): (line 1635)
        # Processing the call arguments (line 1635)
        # Getting the type of 'kerning_distance' (line 1635)
        kerning_distance_81357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1635, 32), 'kerning_distance', False)
        # Processing the call keyword arguments (line 1635)
        kwargs_81358 = {}
        # Getting the type of 'Kern' (line 1635)
        Kern_81356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1635, 27), 'Kern', False)
        # Calling Kern(args, kwargs) (line 1635)
        Kern_call_result_81359 = invoke(stypy.reporting.localization.Localization(__file__, 1635, 27), Kern_81356, *[kerning_distance_81357], **kwargs_81358)
        
        # Assigning a type to the variable 'kern' (line 1635)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1635, 20), 'kern', Kern_call_result_81359)
        
        # Call to append(...): (line 1636)
        # Processing the call arguments (line 1636)
        # Getting the type of 'kern' (line 1636)
        kern_81362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1636, 40), 'kern', False)
        # Processing the call keyword arguments (line 1636)
        kwargs_81363 = {}
        # Getting the type of 'new_children' (line 1636)
        new_children_81360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1636, 20), 'new_children', False)
        # Obtaining the member 'append' of a type (line 1636)
        append_81361 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1636, 20), new_children_81360, 'append')
        # Calling append(args, kwargs) (line 1636)
        append_call_result_81364 = invoke(stypy.reporting.localization.Localization(__file__, 1636, 20), append_81361, *[kern_81362], **kwargs_81363)
        
        # SSA join for if statement (line 1634)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 1637):
        
        # Assigning a Name to a Attribute (line 1637):
        # Getting the type of 'new_children' (line 1637)
        new_children_81365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1637, 28), 'new_children')
        # Getting the type of 'self' (line 1637)
        self_81366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1637, 12), 'self')
        # Setting the type of the member 'children' of a type (line 1637)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1637, 12), self_81366, 'children', new_children_81365)
        # SSA join for if statement (line 1624)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'kern(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'kern' in the type store
        # Getting the type of 'stypy_return_type' (line 1614)
        stypy_return_type_81367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81367)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'kern'
        return stypy_return_type_81367


    @norecursion
    def hpack(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        float_81368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1652, 22), 'float')
        unicode_81369 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1652, 28), 'unicode', u'additional')
        defaults = [float_81368, unicode_81369]
        # Create a new context for function 'hpack'
        module_type_store = module_type_store.open_function_context('hpack', 1652, 4, False)
        # Assigning a type to the variable 'self' (line 1653)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1653, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Hlist.hpack.__dict__.__setitem__('stypy_localization', localization)
        Hlist.hpack.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Hlist.hpack.__dict__.__setitem__('stypy_type_store', module_type_store)
        Hlist.hpack.__dict__.__setitem__('stypy_function_name', 'Hlist.hpack')
        Hlist.hpack.__dict__.__setitem__('stypy_param_names_list', ['w', 'm'])
        Hlist.hpack.__dict__.__setitem__('stypy_varargs_param_name', None)
        Hlist.hpack.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Hlist.hpack.__dict__.__setitem__('stypy_call_defaults', defaults)
        Hlist.hpack.__dict__.__setitem__('stypy_call_varargs', varargs)
        Hlist.hpack.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Hlist.hpack.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Hlist.hpack', ['w', 'm'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'hpack', localization, ['w', 'm'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'hpack(...)' code ##################

        unicode_81370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1670, (-1)), 'unicode', u"\n        The main duty of :meth:`hpack` is to compute the dimensions of\n        the resulting boxes, and to adjust the glue if one of those\n        dimensions is pre-specified.  The computed sizes normally\n        enclose all of the material inside the new box; but some items\n        may stick out if negative glue is used, if the box is\n        overfull, or if a ``\\vbox`` includes other boxes that have\n        been shifted left.\n\n          - *w*: specifies a width\n\n          - *m*: is either 'exactly' or 'additional'.\n\n        Thus, ``hpack(w, 'exactly')`` produces a box whose width is\n        exactly *w*, while ``hpack(w, 'additional')`` yields a box\n        whose width is the natural width plus *w*.  The default values\n        produce a box with the natural width.\n        ")
        
        # Assigning a Num to a Name (line 1674):
        
        # Assigning a Num to a Name (line 1674):
        float_81371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1674, 12), 'float')
        # Assigning a type to the variable 'h' (line 1674)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1674, 8), 'h', float_81371)
        
        # Assigning a Num to a Name (line 1675):
        
        # Assigning a Num to a Name (line 1675):
        float_81372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1675, 12), 'float')
        # Assigning a type to the variable 'd' (line 1675)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1675, 8), 'd', float_81372)
        
        # Assigning a Num to a Name (line 1676):
        
        # Assigning a Num to a Name (line 1676):
        float_81373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1676, 12), 'float')
        # Assigning a type to the variable 'x' (line 1676)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1676, 8), 'x', float_81373)
        
        # Assigning a BinOp to a Name (line 1677):
        
        # Assigning a BinOp to a Name (line 1677):
        
        # Obtaining an instance of the builtin type 'list' (line 1677)
        list_81374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1677, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1677)
        # Adding element type (line 1677)
        float_81375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1677, 25), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1677, 24), list_81374, float_81375)
        
        int_81376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1677, 31), 'int')
        # Applying the binary operator '*' (line 1677)
        result_mul_81377 = python_operator(stypy.reporting.localization.Localization(__file__, 1677, 24), '*', list_81374, int_81376)
        
        # Assigning a type to the variable 'total_stretch' (line 1677)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1677, 8), 'total_stretch', result_mul_81377)
        
        # Assigning a BinOp to a Name (line 1678):
        
        # Assigning a BinOp to a Name (line 1678):
        
        # Obtaining an instance of the builtin type 'list' (line 1678)
        list_81378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1678, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1678)
        # Adding element type (line 1678)
        float_81379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1678, 24), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1678, 23), list_81378, float_81379)
        
        int_81380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1678, 30), 'int')
        # Applying the binary operator '*' (line 1678)
        result_mul_81381 = python_operator(stypy.reporting.localization.Localization(__file__, 1678, 23), '*', list_81378, int_81380)
        
        # Assigning a type to the variable 'total_shrink' (line 1678)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1678, 8), 'total_shrink', result_mul_81381)
        
        # Getting the type of 'self' (line 1679)
        self_81382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1679, 17), 'self')
        # Obtaining the member 'children' of a type (line 1679)
        children_81383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1679, 17), self_81382, 'children')
        # Testing the type of a for loop iterable (line 1679)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1679, 8), children_81383)
        # Getting the type of the for loop variable (line 1679)
        for_loop_var_81384 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1679, 8), children_81383)
        # Assigning a type to the variable 'p' (line 1679)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1679, 8), 'p', for_loop_var_81384)
        # SSA begins for a for statement (line 1679)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Call to isinstance(...): (line 1680)
        # Processing the call arguments (line 1680)
        # Getting the type of 'p' (line 1680)
        p_81386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1680, 26), 'p', False)
        # Getting the type of 'Char' (line 1680)
        Char_81387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1680, 29), 'Char', False)
        # Processing the call keyword arguments (line 1680)
        kwargs_81388 = {}
        # Getting the type of 'isinstance' (line 1680)
        isinstance_81385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1680, 15), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1680)
        isinstance_call_result_81389 = invoke(stypy.reporting.localization.Localization(__file__, 1680, 15), isinstance_81385, *[p_81386, Char_81387], **kwargs_81388)
        
        # Testing the type of an if condition (line 1680)
        if_condition_81390 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1680, 12), isinstance_call_result_81389)
        # Assigning a type to the variable 'if_condition_81390' (line 1680)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1680, 12), 'if_condition_81390', if_condition_81390)
        # SSA begins for if statement (line 1680)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'x' (line 1681)
        x_81391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1681, 16), 'x')
        # Getting the type of 'p' (line 1681)
        p_81392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1681, 21), 'p')
        # Obtaining the member 'width' of a type (line 1681)
        width_81393 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1681, 21), p_81392, 'width')
        # Applying the binary operator '+=' (line 1681)
        result_iadd_81394 = python_operator(stypy.reporting.localization.Localization(__file__, 1681, 16), '+=', x_81391, width_81393)
        # Assigning a type to the variable 'x' (line 1681)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1681, 16), 'x', result_iadd_81394)
        
        
        # Assigning a Call to a Name (line 1682):
        
        # Assigning a Call to a Name (line 1682):
        
        # Call to max(...): (line 1682)
        # Processing the call arguments (line 1682)
        # Getting the type of 'h' (line 1682)
        h_81396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1682, 24), 'h', False)
        # Getting the type of 'p' (line 1682)
        p_81397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1682, 27), 'p', False)
        # Obtaining the member 'height' of a type (line 1682)
        height_81398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1682, 27), p_81397, 'height')
        # Processing the call keyword arguments (line 1682)
        kwargs_81399 = {}
        # Getting the type of 'max' (line 1682)
        max_81395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1682, 20), 'max', False)
        # Calling max(args, kwargs) (line 1682)
        max_call_result_81400 = invoke(stypy.reporting.localization.Localization(__file__, 1682, 20), max_81395, *[h_81396, height_81398], **kwargs_81399)
        
        # Assigning a type to the variable 'h' (line 1682)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1682, 16), 'h', max_call_result_81400)
        
        # Assigning a Call to a Name (line 1683):
        
        # Assigning a Call to a Name (line 1683):
        
        # Call to max(...): (line 1683)
        # Processing the call arguments (line 1683)
        # Getting the type of 'd' (line 1683)
        d_81402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1683, 24), 'd', False)
        # Getting the type of 'p' (line 1683)
        p_81403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1683, 27), 'p', False)
        # Obtaining the member 'depth' of a type (line 1683)
        depth_81404 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1683, 27), p_81403, 'depth')
        # Processing the call keyword arguments (line 1683)
        kwargs_81405 = {}
        # Getting the type of 'max' (line 1683)
        max_81401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1683, 20), 'max', False)
        # Calling max(args, kwargs) (line 1683)
        max_call_result_81406 = invoke(stypy.reporting.localization.Localization(__file__, 1683, 20), max_81401, *[d_81402, depth_81404], **kwargs_81405)
        
        # Assigning a type to the variable 'd' (line 1683)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1683, 16), 'd', max_call_result_81406)
        # SSA branch for the else part of an if statement (line 1680)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to isinstance(...): (line 1684)
        # Processing the call arguments (line 1684)
        # Getting the type of 'p' (line 1684)
        p_81408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 28), 'p', False)
        # Getting the type of 'Box' (line 1684)
        Box_81409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 31), 'Box', False)
        # Processing the call keyword arguments (line 1684)
        kwargs_81410 = {}
        # Getting the type of 'isinstance' (line 1684)
        isinstance_81407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 17), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1684)
        isinstance_call_result_81411 = invoke(stypy.reporting.localization.Localization(__file__, 1684, 17), isinstance_81407, *[p_81408, Box_81409], **kwargs_81410)
        
        # Testing the type of an if condition (line 1684)
        if_condition_81412 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1684, 17), isinstance_call_result_81411)
        # Assigning a type to the variable 'if_condition_81412' (line 1684)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1684, 17), 'if_condition_81412', if_condition_81412)
        # SSA begins for if statement (line 1684)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'x' (line 1685)
        x_81413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1685, 16), 'x')
        # Getting the type of 'p' (line 1685)
        p_81414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1685, 21), 'p')
        # Obtaining the member 'width' of a type (line 1685)
        width_81415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1685, 21), p_81414, 'width')
        # Applying the binary operator '+=' (line 1685)
        result_iadd_81416 = python_operator(stypy.reporting.localization.Localization(__file__, 1685, 16), '+=', x_81413, width_81415)
        # Assigning a type to the variable 'x' (line 1685)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1685, 16), 'x', result_iadd_81416)
        
        
        
        # Evaluating a boolean operation
        
        
        # Call to isinf(...): (line 1686)
        # Processing the call arguments (line 1686)
        # Getting the type of 'p' (line 1686)
        p_81418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1686, 29), 'p', False)
        # Obtaining the member 'height' of a type (line 1686)
        height_81419 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1686, 29), p_81418, 'height')
        # Processing the call keyword arguments (line 1686)
        kwargs_81420 = {}
        # Getting the type of 'isinf' (line 1686)
        isinf_81417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1686, 23), 'isinf', False)
        # Calling isinf(args, kwargs) (line 1686)
        isinf_call_result_81421 = invoke(stypy.reporting.localization.Localization(__file__, 1686, 23), isinf_81417, *[height_81419], **kwargs_81420)
        
        # Applying the 'not' unary operator (line 1686)
        result_not__81422 = python_operator(stypy.reporting.localization.Localization(__file__, 1686, 19), 'not', isinf_call_result_81421)
        
        
        
        # Call to isinf(...): (line 1686)
        # Processing the call arguments (line 1686)
        # Getting the type of 'p' (line 1686)
        p_81424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1686, 53), 'p', False)
        # Obtaining the member 'depth' of a type (line 1686)
        depth_81425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1686, 53), p_81424, 'depth')
        # Processing the call keyword arguments (line 1686)
        kwargs_81426 = {}
        # Getting the type of 'isinf' (line 1686)
        isinf_81423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1686, 47), 'isinf', False)
        # Calling isinf(args, kwargs) (line 1686)
        isinf_call_result_81427 = invoke(stypy.reporting.localization.Localization(__file__, 1686, 47), isinf_81423, *[depth_81425], **kwargs_81426)
        
        # Applying the 'not' unary operator (line 1686)
        result_not__81428 = python_operator(stypy.reporting.localization.Localization(__file__, 1686, 43), 'not', isinf_call_result_81427)
        
        # Applying the binary operator 'and' (line 1686)
        result_and_keyword_81429 = python_operator(stypy.reporting.localization.Localization(__file__, 1686, 19), 'and', result_not__81422, result_not__81428)
        
        # Testing the type of an if condition (line 1686)
        if_condition_81430 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1686, 16), result_and_keyword_81429)
        # Assigning a type to the variable 'if_condition_81430' (line 1686)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1686, 16), 'if_condition_81430', if_condition_81430)
        # SSA begins for if statement (line 1686)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1687):
        
        # Assigning a Call to a Name (line 1687):
        
        # Call to getattr(...): (line 1687)
        # Processing the call arguments (line 1687)
        # Getting the type of 'p' (line 1687)
        p_81432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1687, 32), 'p', False)
        unicode_81433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1687, 35), 'unicode', u'shift_amount')
        float_81434 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1687, 51), 'float')
        # Processing the call keyword arguments (line 1687)
        kwargs_81435 = {}
        # Getting the type of 'getattr' (line 1687)
        getattr_81431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1687, 24), 'getattr', False)
        # Calling getattr(args, kwargs) (line 1687)
        getattr_call_result_81436 = invoke(stypy.reporting.localization.Localization(__file__, 1687, 24), getattr_81431, *[p_81432, unicode_81433, float_81434], **kwargs_81435)
        
        # Assigning a type to the variable 's' (line 1687)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1687, 20), 's', getattr_call_result_81436)
        
        # Assigning a Call to a Name (line 1688):
        
        # Assigning a Call to a Name (line 1688):
        
        # Call to max(...): (line 1688)
        # Processing the call arguments (line 1688)
        # Getting the type of 'h' (line 1688)
        h_81438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1688, 28), 'h', False)
        # Getting the type of 'p' (line 1688)
        p_81439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1688, 31), 'p', False)
        # Obtaining the member 'height' of a type (line 1688)
        height_81440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1688, 31), p_81439, 'height')
        # Getting the type of 's' (line 1688)
        s_81441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1688, 42), 's', False)
        # Applying the binary operator '-' (line 1688)
        result_sub_81442 = python_operator(stypy.reporting.localization.Localization(__file__, 1688, 31), '-', height_81440, s_81441)
        
        # Processing the call keyword arguments (line 1688)
        kwargs_81443 = {}
        # Getting the type of 'max' (line 1688)
        max_81437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1688, 24), 'max', False)
        # Calling max(args, kwargs) (line 1688)
        max_call_result_81444 = invoke(stypy.reporting.localization.Localization(__file__, 1688, 24), max_81437, *[h_81438, result_sub_81442], **kwargs_81443)
        
        # Assigning a type to the variable 'h' (line 1688)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1688, 20), 'h', max_call_result_81444)
        
        # Assigning a Call to a Name (line 1689):
        
        # Assigning a Call to a Name (line 1689):
        
        # Call to max(...): (line 1689)
        # Processing the call arguments (line 1689)
        # Getting the type of 'd' (line 1689)
        d_81446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1689, 28), 'd', False)
        # Getting the type of 'p' (line 1689)
        p_81447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1689, 31), 'p', False)
        # Obtaining the member 'depth' of a type (line 1689)
        depth_81448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1689, 31), p_81447, 'depth')
        # Getting the type of 's' (line 1689)
        s_81449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1689, 41), 's', False)
        # Applying the binary operator '+' (line 1689)
        result_add_81450 = python_operator(stypy.reporting.localization.Localization(__file__, 1689, 31), '+', depth_81448, s_81449)
        
        # Processing the call keyword arguments (line 1689)
        kwargs_81451 = {}
        # Getting the type of 'max' (line 1689)
        max_81445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1689, 24), 'max', False)
        # Calling max(args, kwargs) (line 1689)
        max_call_result_81452 = invoke(stypy.reporting.localization.Localization(__file__, 1689, 24), max_81445, *[d_81446, result_add_81450], **kwargs_81451)
        
        # Assigning a type to the variable 'd' (line 1689)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1689, 20), 'd', max_call_result_81452)
        # SSA join for if statement (line 1686)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 1684)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to isinstance(...): (line 1690)
        # Processing the call arguments (line 1690)
        # Getting the type of 'p' (line 1690)
        p_81454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 28), 'p', False)
        # Getting the type of 'Glue' (line 1690)
        Glue_81455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 31), 'Glue', False)
        # Processing the call keyword arguments (line 1690)
        kwargs_81456 = {}
        # Getting the type of 'isinstance' (line 1690)
        isinstance_81453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 17), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1690)
        isinstance_call_result_81457 = invoke(stypy.reporting.localization.Localization(__file__, 1690, 17), isinstance_81453, *[p_81454, Glue_81455], **kwargs_81456)
        
        # Testing the type of an if condition (line 1690)
        if_condition_81458 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1690, 17), isinstance_call_result_81457)
        # Assigning a type to the variable 'if_condition_81458' (line 1690)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1690, 17), 'if_condition_81458', if_condition_81458)
        # SSA begins for if statement (line 1690)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Name (line 1691):
        
        # Assigning a Attribute to a Name (line 1691):
        # Getting the type of 'p' (line 1691)
        p_81459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 28), 'p')
        # Obtaining the member 'glue_spec' of a type (line 1691)
        glue_spec_81460 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1691, 28), p_81459, 'glue_spec')
        # Assigning a type to the variable 'glue_spec' (line 1691)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1691, 16), 'glue_spec', glue_spec_81460)
        
        # Getting the type of 'x' (line 1692)
        x_81461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1692, 16), 'x')
        # Getting the type of 'glue_spec' (line 1692)
        glue_spec_81462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1692, 21), 'glue_spec')
        # Obtaining the member 'width' of a type (line 1692)
        width_81463 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1692, 21), glue_spec_81462, 'width')
        # Applying the binary operator '+=' (line 1692)
        result_iadd_81464 = python_operator(stypy.reporting.localization.Localization(__file__, 1692, 16), '+=', x_81461, width_81463)
        # Assigning a type to the variable 'x' (line 1692)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1692, 16), 'x', result_iadd_81464)
        
        
        # Getting the type of 'total_stretch' (line 1693)
        total_stretch_81465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 16), 'total_stretch')
        
        # Obtaining the type of the subscript
        # Getting the type of 'glue_spec' (line 1693)
        glue_spec_81466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 30), 'glue_spec')
        # Obtaining the member 'stretch_order' of a type (line 1693)
        stretch_order_81467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1693, 30), glue_spec_81466, 'stretch_order')
        # Getting the type of 'total_stretch' (line 1693)
        total_stretch_81468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 16), 'total_stretch')
        # Obtaining the member '__getitem__' of a type (line 1693)
        getitem___81469 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1693, 16), total_stretch_81468, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1693)
        subscript_call_result_81470 = invoke(stypy.reporting.localization.Localization(__file__, 1693, 16), getitem___81469, stretch_order_81467)
        
        # Getting the type of 'glue_spec' (line 1693)
        glue_spec_81471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 58), 'glue_spec')
        # Obtaining the member 'stretch' of a type (line 1693)
        stretch_81472 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1693, 58), glue_spec_81471, 'stretch')
        # Applying the binary operator '+=' (line 1693)
        result_iadd_81473 = python_operator(stypy.reporting.localization.Localization(__file__, 1693, 16), '+=', subscript_call_result_81470, stretch_81472)
        # Getting the type of 'total_stretch' (line 1693)
        total_stretch_81474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 16), 'total_stretch')
        # Getting the type of 'glue_spec' (line 1693)
        glue_spec_81475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 30), 'glue_spec')
        # Obtaining the member 'stretch_order' of a type (line 1693)
        stretch_order_81476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1693, 30), glue_spec_81475, 'stretch_order')
        # Storing an element on a container (line 1693)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1693, 16), total_stretch_81474, (stretch_order_81476, result_iadd_81473))
        
        
        # Getting the type of 'total_shrink' (line 1694)
        total_shrink_81477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1694, 16), 'total_shrink')
        
        # Obtaining the type of the subscript
        # Getting the type of 'glue_spec' (line 1694)
        glue_spec_81478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1694, 29), 'glue_spec')
        # Obtaining the member 'shrink_order' of a type (line 1694)
        shrink_order_81479 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1694, 29), glue_spec_81478, 'shrink_order')
        # Getting the type of 'total_shrink' (line 1694)
        total_shrink_81480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1694, 16), 'total_shrink')
        # Obtaining the member '__getitem__' of a type (line 1694)
        getitem___81481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1694, 16), total_shrink_81480, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1694)
        subscript_call_result_81482 = invoke(stypy.reporting.localization.Localization(__file__, 1694, 16), getitem___81481, shrink_order_81479)
        
        # Getting the type of 'glue_spec' (line 1694)
        glue_spec_81483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1694, 56), 'glue_spec')
        # Obtaining the member 'shrink' of a type (line 1694)
        shrink_81484 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1694, 56), glue_spec_81483, 'shrink')
        # Applying the binary operator '+=' (line 1694)
        result_iadd_81485 = python_operator(stypy.reporting.localization.Localization(__file__, 1694, 16), '+=', subscript_call_result_81482, shrink_81484)
        # Getting the type of 'total_shrink' (line 1694)
        total_shrink_81486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1694, 16), 'total_shrink')
        # Getting the type of 'glue_spec' (line 1694)
        glue_spec_81487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1694, 29), 'glue_spec')
        # Obtaining the member 'shrink_order' of a type (line 1694)
        shrink_order_81488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1694, 29), glue_spec_81487, 'shrink_order')
        # Storing an element on a container (line 1694)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1694, 16), total_shrink_81486, (shrink_order_81488, result_iadd_81485))
        
        # SSA branch for the else part of an if statement (line 1690)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to isinstance(...): (line 1695)
        # Processing the call arguments (line 1695)
        # Getting the type of 'p' (line 1695)
        p_81490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1695, 28), 'p', False)
        # Getting the type of 'Kern' (line 1695)
        Kern_81491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1695, 31), 'Kern', False)
        # Processing the call keyword arguments (line 1695)
        kwargs_81492 = {}
        # Getting the type of 'isinstance' (line 1695)
        isinstance_81489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1695, 17), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1695)
        isinstance_call_result_81493 = invoke(stypy.reporting.localization.Localization(__file__, 1695, 17), isinstance_81489, *[p_81490, Kern_81491], **kwargs_81492)
        
        # Testing the type of an if condition (line 1695)
        if_condition_81494 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1695, 17), isinstance_call_result_81493)
        # Assigning a type to the variable 'if_condition_81494' (line 1695)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1695, 17), 'if_condition_81494', if_condition_81494)
        # SSA begins for if statement (line 1695)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'x' (line 1696)
        x_81495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1696, 16), 'x')
        # Getting the type of 'p' (line 1696)
        p_81496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1696, 21), 'p')
        # Obtaining the member 'width' of a type (line 1696)
        width_81497 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1696, 21), p_81496, 'width')
        # Applying the binary operator '+=' (line 1696)
        result_iadd_81498 = python_operator(stypy.reporting.localization.Localization(__file__, 1696, 16), '+=', x_81495, width_81497)
        # Assigning a type to the variable 'x' (line 1696)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1696, 16), 'x', result_iadd_81498)
        
        # SSA join for if statement (line 1695)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1690)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1684)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1680)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 1697):
        
        # Assigning a Name to a Attribute (line 1697):
        # Getting the type of 'h' (line 1697)
        h_81499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1697, 22), 'h')
        # Getting the type of 'self' (line 1697)
        self_81500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1697, 8), 'self')
        # Setting the type of the member 'height' of a type (line 1697)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1697, 8), self_81500, 'height', h_81499)
        
        # Assigning a Name to a Attribute (line 1698):
        
        # Assigning a Name to a Attribute (line 1698):
        # Getting the type of 'd' (line 1698)
        d_81501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 21), 'd')
        # Getting the type of 'self' (line 1698)
        self_81502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 8), 'self')
        # Setting the type of the member 'depth' of a type (line 1698)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 8), self_81502, 'depth', d_81501)
        
        
        # Getting the type of 'm' (line 1700)
        m_81503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1700, 11), 'm')
        unicode_81504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1700, 16), 'unicode', u'additional')
        # Applying the binary operator '==' (line 1700)
        result_eq_81505 = python_operator(stypy.reporting.localization.Localization(__file__, 1700, 11), '==', m_81503, unicode_81504)
        
        # Testing the type of an if condition (line 1700)
        if_condition_81506 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1700, 8), result_eq_81505)
        # Assigning a type to the variable 'if_condition_81506' (line 1700)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1700, 8), 'if_condition_81506', if_condition_81506)
        # SSA begins for if statement (line 1700)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'w' (line 1701)
        w_81507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1701, 12), 'w')
        # Getting the type of 'x' (line 1701)
        x_81508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1701, 17), 'x')
        # Applying the binary operator '+=' (line 1701)
        result_iadd_81509 = python_operator(stypy.reporting.localization.Localization(__file__, 1701, 12), '+=', w_81507, x_81508)
        # Assigning a type to the variable 'w' (line 1701)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1701, 12), 'w', result_iadd_81509)
        
        # SSA join for if statement (line 1700)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 1702):
        
        # Assigning a Name to a Attribute (line 1702):
        # Getting the type of 'w' (line 1702)
        w_81510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1702, 21), 'w')
        # Getting the type of 'self' (line 1702)
        self_81511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1702, 8), 'self')
        # Setting the type of the member 'width' of a type (line 1702)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1702, 8), self_81511, 'width', w_81510)
        
        # Assigning a BinOp to a Name (line 1703):
        
        # Assigning a BinOp to a Name (line 1703):
        # Getting the type of 'w' (line 1703)
        w_81512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1703, 12), 'w')
        # Getting the type of 'x' (line 1703)
        x_81513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1703, 16), 'x')
        # Applying the binary operator '-' (line 1703)
        result_sub_81514 = python_operator(stypy.reporting.localization.Localization(__file__, 1703, 12), '-', w_81512, x_81513)
        
        # Assigning a type to the variable 'x' (line 1703)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1703, 8), 'x', result_sub_81514)
        
        
        # Getting the type of 'x' (line 1705)
        x_81515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1705, 11), 'x')
        float_81516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1705, 16), 'float')
        # Applying the binary operator '==' (line 1705)
        result_eq_81517 = python_operator(stypy.reporting.localization.Localization(__file__, 1705, 11), '==', x_81515, float_81516)
        
        # Testing the type of an if condition (line 1705)
        if_condition_81518 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1705, 8), result_eq_81517)
        # Assigning a type to the variable 'if_condition_81518' (line 1705)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1705, 8), 'if_condition_81518', if_condition_81518)
        # SSA begins for if statement (line 1705)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Attribute (line 1706):
        
        # Assigning a Num to a Attribute (line 1706):
        int_81519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1706, 29), 'int')
        # Getting the type of 'self' (line 1706)
        self_81520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 12), 'self')
        # Setting the type of the member 'glue_sign' of a type (line 1706)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1706, 12), self_81520, 'glue_sign', int_81519)
        
        # Assigning a Num to a Attribute (line 1707):
        
        # Assigning a Num to a Attribute (line 1707):
        int_81521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1707, 30), 'int')
        # Getting the type of 'self' (line 1707)
        self_81522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 12), 'self')
        # Setting the type of the member 'glue_order' of a type (line 1707)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1707, 12), self_81522, 'glue_order', int_81521)
        
        # Assigning a Num to a Attribute (line 1708):
        
        # Assigning a Num to a Attribute (line 1708):
        float_81523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1708, 30), 'float')
        # Getting the type of 'self' (line 1708)
        self_81524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1708, 12), 'self')
        # Setting the type of the member 'glue_ratio' of a type (line 1708)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1708, 12), self_81524, 'glue_ratio', float_81523)
        # Assigning a type to the variable 'stypy_return_type' (line 1709)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1709, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 1705)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'x' (line 1710)
        x_81525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1710, 11), 'x')
        float_81526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1710, 15), 'float')
        # Applying the binary operator '>' (line 1710)
        result_gt_81527 = python_operator(stypy.reporting.localization.Localization(__file__, 1710, 11), '>', x_81525, float_81526)
        
        # Testing the type of an if condition (line 1710)
        if_condition_81528 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1710, 8), result_gt_81527)
        # Assigning a type to the variable 'if_condition_81528' (line 1710)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1710, 8), 'if_condition_81528', if_condition_81528)
        # SSA begins for if statement (line 1710)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to _set_glue(...): (line 1711)
        # Processing the call arguments (line 1711)
        # Getting the type of 'x' (line 1711)
        x_81531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1711, 27), 'x', False)
        int_81532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1711, 30), 'int')
        # Getting the type of 'total_stretch' (line 1711)
        total_stretch_81533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1711, 33), 'total_stretch', False)
        unicode_81534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1711, 48), 'unicode', u'Overfull')
        # Processing the call keyword arguments (line 1711)
        kwargs_81535 = {}
        # Getting the type of 'self' (line 1711)
        self_81529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1711, 12), 'self', False)
        # Obtaining the member '_set_glue' of a type (line 1711)
        _set_glue_81530 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1711, 12), self_81529, '_set_glue')
        # Calling _set_glue(args, kwargs) (line 1711)
        _set_glue_call_result_81536 = invoke(stypy.reporting.localization.Localization(__file__, 1711, 12), _set_glue_81530, *[x_81531, int_81532, total_stretch_81533, unicode_81534], **kwargs_81535)
        
        # SSA branch for the else part of an if statement (line 1710)
        module_type_store.open_ssa_branch('else')
        
        # Call to _set_glue(...): (line 1713)
        # Processing the call arguments (line 1713)
        # Getting the type of 'x' (line 1713)
        x_81539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1713, 27), 'x', False)
        int_81540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1713, 30), 'int')
        # Getting the type of 'total_shrink' (line 1713)
        total_shrink_81541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1713, 34), 'total_shrink', False)
        unicode_81542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1713, 48), 'unicode', u'Underfull')
        # Processing the call keyword arguments (line 1713)
        kwargs_81543 = {}
        # Getting the type of 'self' (line 1713)
        self_81537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1713, 12), 'self', False)
        # Obtaining the member '_set_glue' of a type (line 1713)
        _set_glue_81538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1713, 12), self_81537, '_set_glue')
        # Calling _set_glue(args, kwargs) (line 1713)
        _set_glue_call_result_81544 = invoke(stypy.reporting.localization.Localization(__file__, 1713, 12), _set_glue_81538, *[x_81539, int_81540, total_shrink_81541, unicode_81542], **kwargs_81543)
        
        # SSA join for if statement (line 1710)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'hpack(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'hpack' in the type store
        # Getting the type of 'stypy_return_type' (line 1652)
        stypy_return_type_81545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1652, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81545)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'hpack'
        return stypy_return_type_81545


# Assigning a type to the variable 'Hlist' (line 1604)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1604, 0), 'Hlist', Hlist)
# Declaration of the 'Vlist' class
# Getting the type of 'List' (line 1715)
List_81546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1715, 12), 'List')

class Vlist(List_81546, ):
    unicode_81547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1718, (-1)), 'unicode', u'\n    A vertical list of boxes.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        float_81548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1719, 35), 'float')
        unicode_81549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1719, 41), 'unicode', u'additional')
        defaults = [float_81548, unicode_81549]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1719, 4, False)
        # Assigning a type to the variable 'self' (line 1720)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1720, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Vlist.__init__', ['elements', 'h', 'm'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['elements', 'h', 'm'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1720)
        # Processing the call arguments (line 1720)
        # Getting the type of 'self' (line 1720)
        self_81552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1720, 22), 'self', False)
        # Getting the type of 'elements' (line 1720)
        elements_81553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1720, 28), 'elements', False)
        # Processing the call keyword arguments (line 1720)
        kwargs_81554 = {}
        # Getting the type of 'List' (line 1720)
        List_81550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1720, 8), 'List', False)
        # Obtaining the member '__init__' of a type (line 1720)
        init___81551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1720, 8), List_81550, '__init__')
        # Calling __init__(args, kwargs) (line 1720)
        init___call_result_81555 = invoke(stypy.reporting.localization.Localization(__file__, 1720, 8), init___81551, *[self_81552, elements_81553], **kwargs_81554)
        
        
        # Call to vpack(...): (line 1721)
        # Processing the call keyword arguments (line 1721)
        kwargs_81558 = {}
        # Getting the type of 'self' (line 1721)
        self_81556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1721, 8), 'self', False)
        # Obtaining the member 'vpack' of a type (line 1721)
        vpack_81557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1721, 8), self_81556, 'vpack')
        # Calling vpack(args, kwargs) (line 1721)
        vpack_call_result_81559 = invoke(stypy.reporting.localization.Localization(__file__, 1721, 8), vpack_81557, *[], **kwargs_81558)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def vpack(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        float_81560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1723, 22), 'float')
        unicode_81561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1723, 28), 'unicode', u'additional')
        
        # Call to float(...): (line 1723)
        # Processing the call arguments (line 1723)
        # Getting the type of 'inf' (line 1723)
        inf_81563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1723, 50), 'inf', False)
        # Processing the call keyword arguments (line 1723)
        kwargs_81564 = {}
        # Getting the type of 'float' (line 1723)
        float_81562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1723, 44), 'float', False)
        # Calling float(args, kwargs) (line 1723)
        float_call_result_81565 = invoke(stypy.reporting.localization.Localization(__file__, 1723, 44), float_81562, *[inf_81563], **kwargs_81564)
        
        defaults = [float_81560, unicode_81561, float_call_result_81565]
        # Create a new context for function 'vpack'
        module_type_store = module_type_store.open_function_context('vpack', 1723, 4, False)
        # Assigning a type to the variable 'self' (line 1724)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1724, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Vlist.vpack.__dict__.__setitem__('stypy_localization', localization)
        Vlist.vpack.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Vlist.vpack.__dict__.__setitem__('stypy_type_store', module_type_store)
        Vlist.vpack.__dict__.__setitem__('stypy_function_name', 'Vlist.vpack')
        Vlist.vpack.__dict__.__setitem__('stypy_param_names_list', ['h', 'm', 'l'])
        Vlist.vpack.__dict__.__setitem__('stypy_varargs_param_name', None)
        Vlist.vpack.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Vlist.vpack.__dict__.__setitem__('stypy_call_defaults', defaults)
        Vlist.vpack.__dict__.__setitem__('stypy_call_varargs', varargs)
        Vlist.vpack.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Vlist.vpack.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Vlist.vpack', ['h', 'm', 'l'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'vpack', localization, ['h', 'm', 'l'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'vpack(...)' code ##################

        unicode_81566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1737, (-1)), 'unicode', u"\n        The main duty of :meth:`vpack` is to compute the dimensions of\n        the resulting boxes, and to adjust the glue if one of those\n        dimensions is pre-specified.\n\n          - *h*: specifies a height\n          - *m*: is either 'exactly' or 'additional'.\n          - *l*: a maximum height\n\n        Thus, ``vpack(h, 'exactly')`` produces a box whose height is\n        exactly *h*, while ``vpack(h, 'additional')`` yields a box\n        whose height is the natural height plus *h*.  The default\n        values produce a box with the natural width.\n        ")
        
        # Assigning a Num to a Name (line 1741):
        
        # Assigning a Num to a Name (line 1741):
        float_81567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1741, 12), 'float')
        # Assigning a type to the variable 'w' (line 1741)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1741, 8), 'w', float_81567)
        
        # Assigning a Num to a Name (line 1742):
        
        # Assigning a Num to a Name (line 1742):
        float_81568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1742, 12), 'float')
        # Assigning a type to the variable 'd' (line 1742)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1742, 8), 'd', float_81568)
        
        # Assigning a Num to a Name (line 1743):
        
        # Assigning a Num to a Name (line 1743):
        float_81569 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1743, 12), 'float')
        # Assigning a type to the variable 'x' (line 1743)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1743, 8), 'x', float_81569)
        
        # Assigning a BinOp to a Name (line 1744):
        
        # Assigning a BinOp to a Name (line 1744):
        
        # Obtaining an instance of the builtin type 'list' (line 1744)
        list_81570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1744, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1744)
        # Adding element type (line 1744)
        float_81571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1744, 25), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1744, 24), list_81570, float_81571)
        
        int_81572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1744, 31), 'int')
        # Applying the binary operator '*' (line 1744)
        result_mul_81573 = python_operator(stypy.reporting.localization.Localization(__file__, 1744, 24), '*', list_81570, int_81572)
        
        # Assigning a type to the variable 'total_stretch' (line 1744)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1744, 8), 'total_stretch', result_mul_81573)
        
        # Assigning a BinOp to a Name (line 1745):
        
        # Assigning a BinOp to a Name (line 1745):
        
        # Obtaining an instance of the builtin type 'list' (line 1745)
        list_81574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1745, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1745)
        # Adding element type (line 1745)
        float_81575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1745, 24), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1745, 23), list_81574, float_81575)
        
        int_81576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1745, 30), 'int')
        # Applying the binary operator '*' (line 1745)
        result_mul_81577 = python_operator(stypy.reporting.localization.Localization(__file__, 1745, 23), '*', list_81574, int_81576)
        
        # Assigning a type to the variable 'total_shrink' (line 1745)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1745, 8), 'total_shrink', result_mul_81577)
        
        # Getting the type of 'self' (line 1746)
        self_81578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1746, 17), 'self')
        # Obtaining the member 'children' of a type (line 1746)
        children_81579 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1746, 17), self_81578, 'children')
        # Testing the type of a for loop iterable (line 1746)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1746, 8), children_81579)
        # Getting the type of the for loop variable (line 1746)
        for_loop_var_81580 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1746, 8), children_81579)
        # Assigning a type to the variable 'p' (line 1746)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1746, 8), 'p', for_loop_var_81580)
        # SSA begins for a for statement (line 1746)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Call to isinstance(...): (line 1747)
        # Processing the call arguments (line 1747)
        # Getting the type of 'p' (line 1747)
        p_81582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1747, 26), 'p', False)
        # Getting the type of 'Box' (line 1747)
        Box_81583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1747, 29), 'Box', False)
        # Processing the call keyword arguments (line 1747)
        kwargs_81584 = {}
        # Getting the type of 'isinstance' (line 1747)
        isinstance_81581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1747, 15), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1747)
        isinstance_call_result_81585 = invoke(stypy.reporting.localization.Localization(__file__, 1747, 15), isinstance_81581, *[p_81582, Box_81583], **kwargs_81584)
        
        # Testing the type of an if condition (line 1747)
        if_condition_81586 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1747, 12), isinstance_call_result_81585)
        # Assigning a type to the variable 'if_condition_81586' (line 1747)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1747, 12), 'if_condition_81586', if_condition_81586)
        # SSA begins for if statement (line 1747)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'x' (line 1748)
        x_81587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1748, 16), 'x')
        # Getting the type of 'd' (line 1748)
        d_81588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1748, 21), 'd')
        # Getting the type of 'p' (line 1748)
        p_81589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1748, 25), 'p')
        # Obtaining the member 'height' of a type (line 1748)
        height_81590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1748, 25), p_81589, 'height')
        # Applying the binary operator '+' (line 1748)
        result_add_81591 = python_operator(stypy.reporting.localization.Localization(__file__, 1748, 21), '+', d_81588, height_81590)
        
        # Applying the binary operator '+=' (line 1748)
        result_iadd_81592 = python_operator(stypy.reporting.localization.Localization(__file__, 1748, 16), '+=', x_81587, result_add_81591)
        # Assigning a type to the variable 'x' (line 1748)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1748, 16), 'x', result_iadd_81592)
        
        
        # Assigning a Attribute to a Name (line 1749):
        
        # Assigning a Attribute to a Name (line 1749):
        # Getting the type of 'p' (line 1749)
        p_81593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1749, 20), 'p')
        # Obtaining the member 'depth' of a type (line 1749)
        depth_81594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1749, 20), p_81593, 'depth')
        # Assigning a type to the variable 'd' (line 1749)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1749, 16), 'd', depth_81594)
        
        
        
        # Call to isinf(...): (line 1750)
        # Processing the call arguments (line 1750)
        # Getting the type of 'p' (line 1750)
        p_81596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1750, 29), 'p', False)
        # Obtaining the member 'width' of a type (line 1750)
        width_81597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1750, 29), p_81596, 'width')
        # Processing the call keyword arguments (line 1750)
        kwargs_81598 = {}
        # Getting the type of 'isinf' (line 1750)
        isinf_81595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1750, 23), 'isinf', False)
        # Calling isinf(args, kwargs) (line 1750)
        isinf_call_result_81599 = invoke(stypy.reporting.localization.Localization(__file__, 1750, 23), isinf_81595, *[width_81597], **kwargs_81598)
        
        # Applying the 'not' unary operator (line 1750)
        result_not__81600 = python_operator(stypy.reporting.localization.Localization(__file__, 1750, 19), 'not', isinf_call_result_81599)
        
        # Testing the type of an if condition (line 1750)
        if_condition_81601 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1750, 16), result_not__81600)
        # Assigning a type to the variable 'if_condition_81601' (line 1750)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1750, 16), 'if_condition_81601', if_condition_81601)
        # SSA begins for if statement (line 1750)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1751):
        
        # Assigning a Call to a Name (line 1751):
        
        # Call to getattr(...): (line 1751)
        # Processing the call arguments (line 1751)
        # Getting the type of 'p' (line 1751)
        p_81603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1751, 32), 'p', False)
        unicode_81604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1751, 35), 'unicode', u'shift_amount')
        float_81605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1751, 51), 'float')
        # Processing the call keyword arguments (line 1751)
        kwargs_81606 = {}
        # Getting the type of 'getattr' (line 1751)
        getattr_81602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1751, 24), 'getattr', False)
        # Calling getattr(args, kwargs) (line 1751)
        getattr_call_result_81607 = invoke(stypy.reporting.localization.Localization(__file__, 1751, 24), getattr_81602, *[p_81603, unicode_81604, float_81605], **kwargs_81606)
        
        # Assigning a type to the variable 's' (line 1751)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1751, 20), 's', getattr_call_result_81607)
        
        # Assigning a Call to a Name (line 1752):
        
        # Assigning a Call to a Name (line 1752):
        
        # Call to max(...): (line 1752)
        # Processing the call arguments (line 1752)
        # Getting the type of 'w' (line 1752)
        w_81609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1752, 28), 'w', False)
        # Getting the type of 'p' (line 1752)
        p_81610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1752, 31), 'p', False)
        # Obtaining the member 'width' of a type (line 1752)
        width_81611 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1752, 31), p_81610, 'width')
        # Getting the type of 's' (line 1752)
        s_81612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1752, 41), 's', False)
        # Applying the binary operator '+' (line 1752)
        result_add_81613 = python_operator(stypy.reporting.localization.Localization(__file__, 1752, 31), '+', width_81611, s_81612)
        
        # Processing the call keyword arguments (line 1752)
        kwargs_81614 = {}
        # Getting the type of 'max' (line 1752)
        max_81608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1752, 24), 'max', False)
        # Calling max(args, kwargs) (line 1752)
        max_call_result_81615 = invoke(stypy.reporting.localization.Localization(__file__, 1752, 24), max_81608, *[w_81609, result_add_81613], **kwargs_81614)
        
        # Assigning a type to the variable 'w' (line 1752)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1752, 20), 'w', max_call_result_81615)
        # SSA join for if statement (line 1750)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 1747)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to isinstance(...): (line 1753)
        # Processing the call arguments (line 1753)
        # Getting the type of 'p' (line 1753)
        p_81617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1753, 28), 'p', False)
        # Getting the type of 'Glue' (line 1753)
        Glue_81618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1753, 31), 'Glue', False)
        # Processing the call keyword arguments (line 1753)
        kwargs_81619 = {}
        # Getting the type of 'isinstance' (line 1753)
        isinstance_81616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1753, 17), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1753)
        isinstance_call_result_81620 = invoke(stypy.reporting.localization.Localization(__file__, 1753, 17), isinstance_81616, *[p_81617, Glue_81618], **kwargs_81619)
        
        # Testing the type of an if condition (line 1753)
        if_condition_81621 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1753, 17), isinstance_call_result_81620)
        # Assigning a type to the variable 'if_condition_81621' (line 1753)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1753, 17), 'if_condition_81621', if_condition_81621)
        # SSA begins for if statement (line 1753)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'x' (line 1754)
        x_81622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1754, 16), 'x')
        # Getting the type of 'd' (line 1754)
        d_81623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1754, 21), 'd')
        # Applying the binary operator '+=' (line 1754)
        result_iadd_81624 = python_operator(stypy.reporting.localization.Localization(__file__, 1754, 16), '+=', x_81622, d_81623)
        # Assigning a type to the variable 'x' (line 1754)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1754, 16), 'x', result_iadd_81624)
        
        
        # Assigning a Num to a Name (line 1755):
        
        # Assigning a Num to a Name (line 1755):
        float_81625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1755, 20), 'float')
        # Assigning a type to the variable 'd' (line 1755)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1755, 16), 'd', float_81625)
        
        # Assigning a Attribute to a Name (line 1756):
        
        # Assigning a Attribute to a Name (line 1756):
        # Getting the type of 'p' (line 1756)
        p_81626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1756, 28), 'p')
        # Obtaining the member 'glue_spec' of a type (line 1756)
        glue_spec_81627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1756, 28), p_81626, 'glue_spec')
        # Assigning a type to the variable 'glue_spec' (line 1756)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1756, 16), 'glue_spec', glue_spec_81627)
        
        # Getting the type of 'x' (line 1757)
        x_81628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1757, 16), 'x')
        # Getting the type of 'glue_spec' (line 1757)
        glue_spec_81629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1757, 21), 'glue_spec')
        # Obtaining the member 'width' of a type (line 1757)
        width_81630 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1757, 21), glue_spec_81629, 'width')
        # Applying the binary operator '+=' (line 1757)
        result_iadd_81631 = python_operator(stypy.reporting.localization.Localization(__file__, 1757, 16), '+=', x_81628, width_81630)
        # Assigning a type to the variable 'x' (line 1757)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1757, 16), 'x', result_iadd_81631)
        
        
        # Getting the type of 'total_stretch' (line 1758)
        total_stretch_81632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1758, 16), 'total_stretch')
        
        # Obtaining the type of the subscript
        # Getting the type of 'glue_spec' (line 1758)
        glue_spec_81633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1758, 30), 'glue_spec')
        # Obtaining the member 'stretch_order' of a type (line 1758)
        stretch_order_81634 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1758, 30), glue_spec_81633, 'stretch_order')
        # Getting the type of 'total_stretch' (line 1758)
        total_stretch_81635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1758, 16), 'total_stretch')
        # Obtaining the member '__getitem__' of a type (line 1758)
        getitem___81636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1758, 16), total_stretch_81635, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1758)
        subscript_call_result_81637 = invoke(stypy.reporting.localization.Localization(__file__, 1758, 16), getitem___81636, stretch_order_81634)
        
        # Getting the type of 'glue_spec' (line 1758)
        glue_spec_81638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1758, 58), 'glue_spec')
        # Obtaining the member 'stretch' of a type (line 1758)
        stretch_81639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1758, 58), glue_spec_81638, 'stretch')
        # Applying the binary operator '+=' (line 1758)
        result_iadd_81640 = python_operator(stypy.reporting.localization.Localization(__file__, 1758, 16), '+=', subscript_call_result_81637, stretch_81639)
        # Getting the type of 'total_stretch' (line 1758)
        total_stretch_81641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1758, 16), 'total_stretch')
        # Getting the type of 'glue_spec' (line 1758)
        glue_spec_81642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1758, 30), 'glue_spec')
        # Obtaining the member 'stretch_order' of a type (line 1758)
        stretch_order_81643 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1758, 30), glue_spec_81642, 'stretch_order')
        # Storing an element on a container (line 1758)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1758, 16), total_stretch_81641, (stretch_order_81643, result_iadd_81640))
        
        
        # Getting the type of 'total_shrink' (line 1759)
        total_shrink_81644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1759, 16), 'total_shrink')
        
        # Obtaining the type of the subscript
        # Getting the type of 'glue_spec' (line 1759)
        glue_spec_81645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1759, 29), 'glue_spec')
        # Obtaining the member 'shrink_order' of a type (line 1759)
        shrink_order_81646 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1759, 29), glue_spec_81645, 'shrink_order')
        # Getting the type of 'total_shrink' (line 1759)
        total_shrink_81647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1759, 16), 'total_shrink')
        # Obtaining the member '__getitem__' of a type (line 1759)
        getitem___81648 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1759, 16), total_shrink_81647, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1759)
        subscript_call_result_81649 = invoke(stypy.reporting.localization.Localization(__file__, 1759, 16), getitem___81648, shrink_order_81646)
        
        # Getting the type of 'glue_spec' (line 1759)
        glue_spec_81650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1759, 56), 'glue_spec')
        # Obtaining the member 'shrink' of a type (line 1759)
        shrink_81651 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1759, 56), glue_spec_81650, 'shrink')
        # Applying the binary operator '+=' (line 1759)
        result_iadd_81652 = python_operator(stypy.reporting.localization.Localization(__file__, 1759, 16), '+=', subscript_call_result_81649, shrink_81651)
        # Getting the type of 'total_shrink' (line 1759)
        total_shrink_81653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1759, 16), 'total_shrink')
        # Getting the type of 'glue_spec' (line 1759)
        glue_spec_81654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1759, 29), 'glue_spec')
        # Obtaining the member 'shrink_order' of a type (line 1759)
        shrink_order_81655 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1759, 29), glue_spec_81654, 'shrink_order')
        # Storing an element on a container (line 1759)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1759, 16), total_shrink_81653, (shrink_order_81655, result_iadd_81652))
        
        # SSA branch for the else part of an if statement (line 1753)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to isinstance(...): (line 1760)
        # Processing the call arguments (line 1760)
        # Getting the type of 'p' (line 1760)
        p_81657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1760, 28), 'p', False)
        # Getting the type of 'Kern' (line 1760)
        Kern_81658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1760, 31), 'Kern', False)
        # Processing the call keyword arguments (line 1760)
        kwargs_81659 = {}
        # Getting the type of 'isinstance' (line 1760)
        isinstance_81656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1760, 17), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1760)
        isinstance_call_result_81660 = invoke(stypy.reporting.localization.Localization(__file__, 1760, 17), isinstance_81656, *[p_81657, Kern_81658], **kwargs_81659)
        
        # Testing the type of an if condition (line 1760)
        if_condition_81661 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1760, 17), isinstance_call_result_81660)
        # Assigning a type to the variable 'if_condition_81661' (line 1760)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1760, 17), 'if_condition_81661', if_condition_81661)
        # SSA begins for if statement (line 1760)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'x' (line 1761)
        x_81662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1761, 16), 'x')
        # Getting the type of 'd' (line 1761)
        d_81663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1761, 21), 'd')
        # Getting the type of 'p' (line 1761)
        p_81664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1761, 25), 'p')
        # Obtaining the member 'width' of a type (line 1761)
        width_81665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1761, 25), p_81664, 'width')
        # Applying the binary operator '+' (line 1761)
        result_add_81666 = python_operator(stypy.reporting.localization.Localization(__file__, 1761, 21), '+', d_81663, width_81665)
        
        # Applying the binary operator '+=' (line 1761)
        result_iadd_81667 = python_operator(stypy.reporting.localization.Localization(__file__, 1761, 16), '+=', x_81662, result_add_81666)
        # Assigning a type to the variable 'x' (line 1761)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1761, 16), 'x', result_iadd_81667)
        
        
        # Assigning a Num to a Name (line 1762):
        
        # Assigning a Num to a Name (line 1762):
        float_81668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1762, 20), 'float')
        # Assigning a type to the variable 'd' (line 1762)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1762, 16), 'd', float_81668)
        # SSA branch for the else part of an if statement (line 1760)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to isinstance(...): (line 1763)
        # Processing the call arguments (line 1763)
        # Getting the type of 'p' (line 1763)
        p_81670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1763, 28), 'p', False)
        # Getting the type of 'Char' (line 1763)
        Char_81671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1763, 31), 'Char', False)
        # Processing the call keyword arguments (line 1763)
        kwargs_81672 = {}
        # Getting the type of 'isinstance' (line 1763)
        isinstance_81669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1763, 17), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1763)
        isinstance_call_result_81673 = invoke(stypy.reporting.localization.Localization(__file__, 1763, 17), isinstance_81669, *[p_81670, Char_81671], **kwargs_81672)
        
        # Testing the type of an if condition (line 1763)
        if_condition_81674 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1763, 17), isinstance_call_result_81673)
        # Assigning a type to the variable 'if_condition_81674' (line 1763)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1763, 17), 'if_condition_81674', if_condition_81674)
        # SSA begins for if statement (line 1763)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to RuntimeError(...): (line 1764)
        # Processing the call arguments (line 1764)
        unicode_81676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1764, 35), 'unicode', u'Internal mathtext error: Char node found in Vlist.')
        # Processing the call keyword arguments (line 1764)
        kwargs_81677 = {}
        # Getting the type of 'RuntimeError' (line 1764)
        RuntimeError_81675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 22), 'RuntimeError', False)
        # Calling RuntimeError(args, kwargs) (line 1764)
        RuntimeError_call_result_81678 = invoke(stypy.reporting.localization.Localization(__file__, 1764, 22), RuntimeError_81675, *[unicode_81676], **kwargs_81677)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1764, 16), RuntimeError_call_result_81678, 'raise parameter', BaseException)
        # SSA join for if statement (line 1763)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1760)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1753)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1747)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 1766):
        
        # Assigning a Name to a Attribute (line 1766):
        # Getting the type of 'w' (line 1766)
        w_81679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1766, 21), 'w')
        # Getting the type of 'self' (line 1766)
        self_81680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1766, 8), 'self')
        # Setting the type of the member 'width' of a type (line 1766)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1766, 8), self_81680, 'width', w_81679)
        
        
        # Getting the type of 'd' (line 1767)
        d_81681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1767, 11), 'd')
        # Getting the type of 'l' (line 1767)
        l_81682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1767, 15), 'l')
        # Applying the binary operator '>' (line 1767)
        result_gt_81683 = python_operator(stypy.reporting.localization.Localization(__file__, 1767, 11), '>', d_81681, l_81682)
        
        # Testing the type of an if condition (line 1767)
        if_condition_81684 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1767, 8), result_gt_81683)
        # Assigning a type to the variable 'if_condition_81684' (line 1767)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1767, 8), 'if_condition_81684', if_condition_81684)
        # SSA begins for if statement (line 1767)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'x' (line 1768)
        x_81685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1768, 12), 'x')
        # Getting the type of 'd' (line 1768)
        d_81686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1768, 17), 'd')
        # Getting the type of 'l' (line 1768)
        l_81687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1768, 21), 'l')
        # Applying the binary operator '-' (line 1768)
        result_sub_81688 = python_operator(stypy.reporting.localization.Localization(__file__, 1768, 17), '-', d_81686, l_81687)
        
        # Applying the binary operator '+=' (line 1768)
        result_iadd_81689 = python_operator(stypy.reporting.localization.Localization(__file__, 1768, 12), '+=', x_81685, result_sub_81688)
        # Assigning a type to the variable 'x' (line 1768)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1768, 12), 'x', result_iadd_81689)
        
        
        # Assigning a Name to a Attribute (line 1769):
        
        # Assigning a Name to a Attribute (line 1769):
        # Getting the type of 'l' (line 1769)
        l_81690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1769, 25), 'l')
        # Getting the type of 'self' (line 1769)
        self_81691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1769, 12), 'self')
        # Setting the type of the member 'depth' of a type (line 1769)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1769, 12), self_81691, 'depth', l_81690)
        # SSA branch for the else part of an if statement (line 1767)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Attribute (line 1771):
        
        # Assigning a Name to a Attribute (line 1771):
        # Getting the type of 'd' (line 1771)
        d_81692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1771, 25), 'd')
        # Getting the type of 'self' (line 1771)
        self_81693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1771, 12), 'self')
        # Setting the type of the member 'depth' of a type (line 1771)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1771, 12), self_81693, 'depth', d_81692)
        # SSA join for if statement (line 1767)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'm' (line 1773)
        m_81694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 11), 'm')
        unicode_81695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1773, 16), 'unicode', u'additional')
        # Applying the binary operator '==' (line 1773)
        result_eq_81696 = python_operator(stypy.reporting.localization.Localization(__file__, 1773, 11), '==', m_81694, unicode_81695)
        
        # Testing the type of an if condition (line 1773)
        if_condition_81697 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1773, 8), result_eq_81696)
        # Assigning a type to the variable 'if_condition_81697' (line 1773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1773, 8), 'if_condition_81697', if_condition_81697)
        # SSA begins for if statement (line 1773)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'h' (line 1774)
        h_81698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1774, 12), 'h')
        # Getting the type of 'x' (line 1774)
        x_81699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1774, 17), 'x')
        # Applying the binary operator '+=' (line 1774)
        result_iadd_81700 = python_operator(stypy.reporting.localization.Localization(__file__, 1774, 12), '+=', h_81698, x_81699)
        # Assigning a type to the variable 'h' (line 1774)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1774, 12), 'h', result_iadd_81700)
        
        # SSA join for if statement (line 1773)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 1775):
        
        # Assigning a Name to a Attribute (line 1775):
        # Getting the type of 'h' (line 1775)
        h_81701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1775, 22), 'h')
        # Getting the type of 'self' (line 1775)
        self_81702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1775, 8), 'self')
        # Setting the type of the member 'height' of a type (line 1775)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1775, 8), self_81702, 'height', h_81701)
        
        # Assigning a BinOp to a Name (line 1776):
        
        # Assigning a BinOp to a Name (line 1776):
        # Getting the type of 'h' (line 1776)
        h_81703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 12), 'h')
        # Getting the type of 'x' (line 1776)
        x_81704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 16), 'x')
        # Applying the binary operator '-' (line 1776)
        result_sub_81705 = python_operator(stypy.reporting.localization.Localization(__file__, 1776, 12), '-', h_81703, x_81704)
        
        # Assigning a type to the variable 'x' (line 1776)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1776, 8), 'x', result_sub_81705)
        
        
        # Getting the type of 'x' (line 1778)
        x_81706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1778, 11), 'x')
        int_81707 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1778, 16), 'int')
        # Applying the binary operator '==' (line 1778)
        result_eq_81708 = python_operator(stypy.reporting.localization.Localization(__file__, 1778, 11), '==', x_81706, int_81707)
        
        # Testing the type of an if condition (line 1778)
        if_condition_81709 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1778, 8), result_eq_81708)
        # Assigning a type to the variable 'if_condition_81709' (line 1778)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1778, 8), 'if_condition_81709', if_condition_81709)
        # SSA begins for if statement (line 1778)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Attribute (line 1779):
        
        # Assigning a Num to a Attribute (line 1779):
        int_81710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1779, 29), 'int')
        # Getting the type of 'self' (line 1779)
        self_81711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1779, 12), 'self')
        # Setting the type of the member 'glue_sign' of a type (line 1779)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1779, 12), self_81711, 'glue_sign', int_81710)
        
        # Assigning a Num to a Attribute (line 1780):
        
        # Assigning a Num to a Attribute (line 1780):
        int_81712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1780, 30), 'int')
        # Getting the type of 'self' (line 1780)
        self_81713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1780, 12), 'self')
        # Setting the type of the member 'glue_order' of a type (line 1780)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1780, 12), self_81713, 'glue_order', int_81712)
        
        # Assigning a Num to a Attribute (line 1781):
        
        # Assigning a Num to a Attribute (line 1781):
        float_81714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1781, 30), 'float')
        # Getting the type of 'self' (line 1781)
        self_81715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1781, 12), 'self')
        # Setting the type of the member 'glue_ratio' of a type (line 1781)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1781, 12), self_81715, 'glue_ratio', float_81714)
        # Assigning a type to the variable 'stypy_return_type' (line 1782)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1782, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 1778)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'x' (line 1784)
        x_81716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1784, 11), 'x')
        float_81717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1784, 15), 'float')
        # Applying the binary operator '>' (line 1784)
        result_gt_81718 = python_operator(stypy.reporting.localization.Localization(__file__, 1784, 11), '>', x_81716, float_81717)
        
        # Testing the type of an if condition (line 1784)
        if_condition_81719 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1784, 8), result_gt_81718)
        # Assigning a type to the variable 'if_condition_81719' (line 1784)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1784, 8), 'if_condition_81719', if_condition_81719)
        # SSA begins for if statement (line 1784)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to _set_glue(...): (line 1785)
        # Processing the call arguments (line 1785)
        # Getting the type of 'x' (line 1785)
        x_81722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1785, 27), 'x', False)
        int_81723 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1785, 30), 'int')
        # Getting the type of 'total_stretch' (line 1785)
        total_stretch_81724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1785, 33), 'total_stretch', False)
        unicode_81725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1785, 48), 'unicode', u'Overfull')
        # Processing the call keyword arguments (line 1785)
        kwargs_81726 = {}
        # Getting the type of 'self' (line 1785)
        self_81720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1785, 12), 'self', False)
        # Obtaining the member '_set_glue' of a type (line 1785)
        _set_glue_81721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1785, 12), self_81720, '_set_glue')
        # Calling _set_glue(args, kwargs) (line 1785)
        _set_glue_call_result_81727 = invoke(stypy.reporting.localization.Localization(__file__, 1785, 12), _set_glue_81721, *[x_81722, int_81723, total_stretch_81724, unicode_81725], **kwargs_81726)
        
        # SSA branch for the else part of an if statement (line 1784)
        module_type_store.open_ssa_branch('else')
        
        # Call to _set_glue(...): (line 1787)
        # Processing the call arguments (line 1787)
        # Getting the type of 'x' (line 1787)
        x_81730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1787, 27), 'x', False)
        int_81731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1787, 30), 'int')
        # Getting the type of 'total_shrink' (line 1787)
        total_shrink_81732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1787, 34), 'total_shrink', False)
        unicode_81733 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1787, 48), 'unicode', u'Underfull')
        # Processing the call keyword arguments (line 1787)
        kwargs_81734 = {}
        # Getting the type of 'self' (line 1787)
        self_81728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1787, 12), 'self', False)
        # Obtaining the member '_set_glue' of a type (line 1787)
        _set_glue_81729 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1787, 12), self_81728, '_set_glue')
        # Calling _set_glue(args, kwargs) (line 1787)
        _set_glue_call_result_81735 = invoke(stypy.reporting.localization.Localization(__file__, 1787, 12), _set_glue_81729, *[x_81730, int_81731, total_shrink_81732, unicode_81733], **kwargs_81734)
        
        # SSA join for if statement (line 1784)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'vpack(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'vpack' in the type store
        # Getting the type of 'stypy_return_type' (line 1723)
        stypy_return_type_81736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1723, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81736)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'vpack'
        return stypy_return_type_81736


# Assigning a type to the variable 'Vlist' (line 1715)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1715, 0), 'Vlist', Vlist)
# Declaration of the 'Rule' class
# Getting the type of 'Box' (line 1789)
Box_81737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1789, 11), 'Box')

class Rule(Box_81737, ):
    unicode_81738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1798, (-1)), 'unicode', u'\n    A :class:`Rule` node stands for a solid black rectangle; it has\n    *width*, *depth*, and *height* fields just as in an\n    :class:`Hlist`. However, if any of these dimensions is inf, the\n    actual value will be determined by running the rule up to the\n    boundary of the innermost enclosing box. This is called a "running\n    dimension." The width is never running in an :class:`Hlist`; the\n    height and depth are never running in a :class:`Vlist`.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1799, 4, False)
        # Assigning a type to the variable 'self' (line 1800)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1800, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Rule.__init__', ['width', 'height', 'depth', 'state'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['width', 'height', 'depth', 'state'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1800)
        # Processing the call arguments (line 1800)
        # Getting the type of 'self' (line 1800)
        self_81741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1800, 21), 'self', False)
        # Getting the type of 'width' (line 1800)
        width_81742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1800, 27), 'width', False)
        # Getting the type of 'height' (line 1800)
        height_81743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1800, 34), 'height', False)
        # Getting the type of 'depth' (line 1800)
        depth_81744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1800, 42), 'depth', False)
        # Processing the call keyword arguments (line 1800)
        kwargs_81745 = {}
        # Getting the type of 'Box' (line 1800)
        Box_81739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1800, 8), 'Box', False)
        # Obtaining the member '__init__' of a type (line 1800)
        init___81740 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1800, 8), Box_81739, '__init__')
        # Calling __init__(args, kwargs) (line 1800)
        init___call_result_81746 = invoke(stypy.reporting.localization.Localization(__file__, 1800, 8), init___81740, *[self_81741, width_81742, height_81743, depth_81744], **kwargs_81745)
        
        
        # Assigning a Attribute to a Attribute (line 1801):
        
        # Assigning a Attribute to a Attribute (line 1801):
        # Getting the type of 'state' (line 1801)
        state_81747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1801, 27), 'state')
        # Obtaining the member 'font_output' of a type (line 1801)
        font_output_81748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1801, 27), state_81747, 'font_output')
        # Getting the type of 'self' (line 1801)
        self_81749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1801, 8), 'self')
        # Setting the type of the member 'font_output' of a type (line 1801)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1801, 8), self_81749, 'font_output', font_output_81748)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def render(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'render'
        module_type_store = module_type_store.open_function_context('render', 1803, 4, False)
        # Assigning a type to the variable 'self' (line 1804)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1804, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Rule.render.__dict__.__setitem__('stypy_localization', localization)
        Rule.render.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Rule.render.__dict__.__setitem__('stypy_type_store', module_type_store)
        Rule.render.__dict__.__setitem__('stypy_function_name', 'Rule.render')
        Rule.render.__dict__.__setitem__('stypy_param_names_list', ['x', 'y', 'w', 'h'])
        Rule.render.__dict__.__setitem__('stypy_varargs_param_name', None)
        Rule.render.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Rule.render.__dict__.__setitem__('stypy_call_defaults', defaults)
        Rule.render.__dict__.__setitem__('stypy_call_varargs', varargs)
        Rule.render.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Rule.render.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Rule.render', ['x', 'y', 'w', 'h'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'render', localization, ['x', 'y', 'w', 'h'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'render(...)' code ##################

        
        # Call to render_rect_filled(...): (line 1804)
        # Processing the call arguments (line 1804)
        # Getting the type of 'x' (line 1804)
        x_81753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1804, 44), 'x', False)
        # Getting the type of 'y' (line 1804)
        y_81754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1804, 47), 'y', False)
        # Getting the type of 'x' (line 1804)
        x_81755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1804, 50), 'x', False)
        # Getting the type of 'w' (line 1804)
        w_81756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1804, 54), 'w', False)
        # Applying the binary operator '+' (line 1804)
        result_add_81757 = python_operator(stypy.reporting.localization.Localization(__file__, 1804, 50), '+', x_81755, w_81756)
        
        # Getting the type of 'y' (line 1804)
        y_81758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1804, 57), 'y', False)
        # Getting the type of 'h' (line 1804)
        h_81759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1804, 61), 'h', False)
        # Applying the binary operator '+' (line 1804)
        result_add_81760 = python_operator(stypy.reporting.localization.Localization(__file__, 1804, 57), '+', y_81758, h_81759)
        
        # Processing the call keyword arguments (line 1804)
        kwargs_81761 = {}
        # Getting the type of 'self' (line 1804)
        self_81750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1804, 8), 'self', False)
        # Obtaining the member 'font_output' of a type (line 1804)
        font_output_81751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1804, 8), self_81750, 'font_output')
        # Obtaining the member 'render_rect_filled' of a type (line 1804)
        render_rect_filled_81752 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1804, 8), font_output_81751, 'render_rect_filled')
        # Calling render_rect_filled(args, kwargs) (line 1804)
        render_rect_filled_call_result_81762 = invoke(stypy.reporting.localization.Localization(__file__, 1804, 8), render_rect_filled_81752, *[x_81753, y_81754, result_add_81757, result_add_81760], **kwargs_81761)
        
        
        # ################# End of 'render(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'render' in the type store
        # Getting the type of 'stypy_return_type' (line 1803)
        stypy_return_type_81763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1803, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81763)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'render'
        return stypy_return_type_81763


# Assigning a type to the variable 'Rule' (line 1789)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1789, 0), 'Rule', Rule)
# Declaration of the 'Hrule' class
# Getting the type of 'Rule' (line 1806)
Rule_81764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1806, 12), 'Rule')

class Hrule(Rule_81764, ):
    unicode_81765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1809, (-1)), 'unicode', u'\n    Convenience class to create a horizontal rule.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 1810)
        None_81766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1810, 40), 'None')
        defaults = [None_81766]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1810, 4, False)
        # Assigning a type to the variable 'self' (line 1811)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1811, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Hrule.__init__', ['state', 'thickness'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['state', 'thickness'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Type idiom detected: calculating its left and rigth part (line 1811)
        # Getting the type of 'thickness' (line 1811)
        thickness_81767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1811, 11), 'thickness')
        # Getting the type of 'None' (line 1811)
        None_81768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1811, 24), 'None')
        
        (may_be_81769, more_types_in_union_81770) = may_be_none(thickness_81767, None_81768)

        if may_be_81769:

            if more_types_in_union_81770:
                # Runtime conditional SSA (line 1811)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 1812):
            
            # Assigning a Call to a Name (line 1812):
            
            # Call to get_underline_thickness(...): (line 1812)
            # Processing the call arguments (line 1812)
            # Getting the type of 'state' (line 1813)
            state_81774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1813, 16), 'state', False)
            # Obtaining the member 'font' of a type (line 1813)
            font_81775 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1813, 16), state_81774, 'font')
            # Getting the type of 'state' (line 1813)
            state_81776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1813, 28), 'state', False)
            # Obtaining the member 'fontsize' of a type (line 1813)
            fontsize_81777 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1813, 28), state_81776, 'fontsize')
            # Getting the type of 'state' (line 1813)
            state_81778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1813, 44), 'state', False)
            # Obtaining the member 'dpi' of a type (line 1813)
            dpi_81779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1813, 44), state_81778, 'dpi')
            # Processing the call keyword arguments (line 1812)
            kwargs_81780 = {}
            # Getting the type of 'state' (line 1812)
            state_81771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1812, 24), 'state', False)
            # Obtaining the member 'font_output' of a type (line 1812)
            font_output_81772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1812, 24), state_81771, 'font_output')
            # Obtaining the member 'get_underline_thickness' of a type (line 1812)
            get_underline_thickness_81773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1812, 24), font_output_81772, 'get_underline_thickness')
            # Calling get_underline_thickness(args, kwargs) (line 1812)
            get_underline_thickness_call_result_81781 = invoke(stypy.reporting.localization.Localization(__file__, 1812, 24), get_underline_thickness_81773, *[font_81775, fontsize_81777, dpi_81779], **kwargs_81780)
            
            # Assigning a type to the variable 'thickness' (line 1812)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1812, 12), 'thickness', get_underline_thickness_call_result_81781)

            if more_types_in_union_81770:
                # SSA join for if statement (line 1811)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Multiple assignment of 2 elements.
        
        # Assigning a BinOp to a Name (line 1814):
        # Getting the type of 'thickness' (line 1814)
        thickness_81782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1814, 25), 'thickness')
        float_81783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1814, 37), 'float')
        # Applying the binary operator '*' (line 1814)
        result_mul_81784 = python_operator(stypy.reporting.localization.Localization(__file__, 1814, 25), '*', thickness_81782, float_81783)
        
        # Assigning a type to the variable 'depth' (line 1814)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1814, 17), 'depth', result_mul_81784)
        
        # Assigning a Name to a Name (line 1814):
        # Getting the type of 'depth' (line 1814)
        depth_81785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1814, 17), 'depth')
        # Assigning a type to the variable 'height' (line 1814)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1814, 8), 'height', depth_81785)
        
        # Call to __init__(...): (line 1815)
        # Processing the call arguments (line 1815)
        # Getting the type of 'self' (line 1815)
        self_81788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 22), 'self', False)
        # Getting the type of 'inf' (line 1815)
        inf_81789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 28), 'inf', False)
        # Getting the type of 'height' (line 1815)
        height_81790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 33), 'height', False)
        # Getting the type of 'depth' (line 1815)
        depth_81791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 41), 'depth', False)
        # Getting the type of 'state' (line 1815)
        state_81792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 48), 'state', False)
        # Processing the call keyword arguments (line 1815)
        kwargs_81793 = {}
        # Getting the type of 'Rule' (line 1815)
        Rule_81786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 8), 'Rule', False)
        # Obtaining the member '__init__' of a type (line 1815)
        init___81787 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1815, 8), Rule_81786, '__init__')
        # Calling __init__(args, kwargs) (line 1815)
        init___call_result_81794 = invoke(stypy.reporting.localization.Localization(__file__, 1815, 8), init___81787, *[self_81788, inf_81789, height_81790, depth_81791, state_81792], **kwargs_81793)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'Hrule' (line 1806)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1806, 0), 'Hrule', Hrule)
# Declaration of the 'Vrule' class
# Getting the type of 'Rule' (line 1817)
Rule_81795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1817, 12), 'Rule')

class Vrule(Rule_81795, ):
    unicode_81796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1820, (-1)), 'unicode', u'\n    Convenience class to create a vertical rule.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1821, 4, False)
        # Assigning a type to the variable 'self' (line 1822)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1822, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Vrule.__init__', ['state'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['state'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Call to a Name (line 1822):
        
        # Assigning a Call to a Name (line 1822):
        
        # Call to get_underline_thickness(...): (line 1822)
        # Processing the call arguments (line 1822)
        # Getting the type of 'state' (line 1823)
        state_81800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1823, 12), 'state', False)
        # Obtaining the member 'font' of a type (line 1823)
        font_81801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1823, 12), state_81800, 'font')
        # Getting the type of 'state' (line 1823)
        state_81802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1823, 24), 'state', False)
        # Obtaining the member 'fontsize' of a type (line 1823)
        fontsize_81803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1823, 24), state_81802, 'fontsize')
        # Getting the type of 'state' (line 1823)
        state_81804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1823, 40), 'state', False)
        # Obtaining the member 'dpi' of a type (line 1823)
        dpi_81805 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1823, 40), state_81804, 'dpi')
        # Processing the call keyword arguments (line 1822)
        kwargs_81806 = {}
        # Getting the type of 'state' (line 1822)
        state_81797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1822, 20), 'state', False)
        # Obtaining the member 'font_output' of a type (line 1822)
        font_output_81798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1822, 20), state_81797, 'font_output')
        # Obtaining the member 'get_underline_thickness' of a type (line 1822)
        get_underline_thickness_81799 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1822, 20), font_output_81798, 'get_underline_thickness')
        # Calling get_underline_thickness(args, kwargs) (line 1822)
        get_underline_thickness_call_result_81807 = invoke(stypy.reporting.localization.Localization(__file__, 1822, 20), get_underline_thickness_81799, *[font_81801, fontsize_81803, dpi_81805], **kwargs_81806)
        
        # Assigning a type to the variable 'thickness' (line 1822)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1822, 8), 'thickness', get_underline_thickness_call_result_81807)
        
        # Call to __init__(...): (line 1824)
        # Processing the call arguments (line 1824)
        # Getting the type of 'self' (line 1824)
        self_81810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1824, 22), 'self', False)
        # Getting the type of 'thickness' (line 1824)
        thickness_81811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1824, 28), 'thickness', False)
        # Getting the type of 'inf' (line 1824)
        inf_81812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1824, 39), 'inf', False)
        # Getting the type of 'inf' (line 1824)
        inf_81813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1824, 44), 'inf', False)
        # Getting the type of 'state' (line 1824)
        state_81814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1824, 49), 'state', False)
        # Processing the call keyword arguments (line 1824)
        kwargs_81815 = {}
        # Getting the type of 'Rule' (line 1824)
        Rule_81808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1824, 8), 'Rule', False)
        # Obtaining the member '__init__' of a type (line 1824)
        init___81809 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1824, 8), Rule_81808, '__init__')
        # Calling __init__(args, kwargs) (line 1824)
        init___call_result_81816 = invoke(stypy.reporting.localization.Localization(__file__, 1824, 8), init___81809, *[self_81810, thickness_81811, inf_81812, inf_81813, state_81814], **kwargs_81815)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'Vrule' (line 1817)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1817, 0), 'Vrule', Vrule)
# Declaration of the 'Glue' class
# Getting the type of 'Node' (line 1826)
Node_81817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1826, 11), 'Node')

class Glue(Node_81817, ):
    unicode_81818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1832, (-1)), 'unicode', u"\n    Most of the information in this object is stored in the underlying\n    :class:`GlueSpec` class, which is shared between multiple glue objects.  (This\n    is a memory optimization which probably doesn't matter anymore, but it's\n    easier to stick to what TeX does.)\n    ")

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'False' (line 1833)
        False_81819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1833, 39), 'False')
        defaults = [False_81819]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1833, 4, False)
        # Assigning a type to the variable 'self' (line 1834)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1834, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Glue.__init__', ['glue_type', 'copy'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['glue_type', 'copy'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1834)
        # Processing the call arguments (line 1834)
        # Getting the type of 'self' (line 1834)
        self_81822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1834, 22), 'self', False)
        # Processing the call keyword arguments (line 1834)
        kwargs_81823 = {}
        # Getting the type of 'Node' (line 1834)
        Node_81820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1834, 8), 'Node', False)
        # Obtaining the member '__init__' of a type (line 1834)
        init___81821 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1834, 8), Node_81820, '__init__')
        # Calling __init__(args, kwargs) (line 1834)
        init___call_result_81824 = invoke(stypy.reporting.localization.Localization(__file__, 1834, 8), init___81821, *[self_81822], **kwargs_81823)
        
        
        # Assigning a Str to a Attribute (line 1835):
        
        # Assigning a Str to a Attribute (line 1835):
        unicode_81825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1835, 30), 'unicode', u'normal')
        # Getting the type of 'self' (line 1835)
        self_81826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1835, 8), 'self')
        # Setting the type of the member 'glue_subtype' of a type (line 1835)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1835, 8), self_81826, 'glue_subtype', unicode_81825)
        
        
        # Call to isinstance(...): (line 1836)
        # Processing the call arguments (line 1836)
        # Getting the type of 'glue_type' (line 1836)
        glue_type_81828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1836, 22), 'glue_type', False)
        # Getting the type of 'six' (line 1836)
        six_81829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1836, 33), 'six', False)
        # Obtaining the member 'string_types' of a type (line 1836)
        string_types_81830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1836, 33), six_81829, 'string_types')
        # Processing the call keyword arguments (line 1836)
        kwargs_81831 = {}
        # Getting the type of 'isinstance' (line 1836)
        isinstance_81827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1836, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1836)
        isinstance_call_result_81832 = invoke(stypy.reporting.localization.Localization(__file__, 1836, 11), isinstance_81827, *[glue_type_81828, string_types_81830], **kwargs_81831)
        
        # Testing the type of an if condition (line 1836)
        if_condition_81833 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1836, 8), isinstance_call_result_81832)
        # Assigning a type to the variable 'if_condition_81833' (line 1836)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1836, 8), 'if_condition_81833', if_condition_81833)
        # SSA begins for if statement (line 1836)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1837):
        
        # Assigning a Call to a Name (line 1837):
        
        # Call to factory(...): (line 1837)
        # Processing the call arguments (line 1837)
        # Getting the type of 'glue_type' (line 1837)
        glue_type_81836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1837, 41), 'glue_type', False)
        # Processing the call keyword arguments (line 1837)
        kwargs_81837 = {}
        # Getting the type of 'GlueSpec' (line 1837)
        GlueSpec_81834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1837, 24), 'GlueSpec', False)
        # Obtaining the member 'factory' of a type (line 1837)
        factory_81835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1837, 24), GlueSpec_81834, 'factory')
        # Calling factory(args, kwargs) (line 1837)
        factory_call_result_81838 = invoke(stypy.reporting.localization.Localization(__file__, 1837, 24), factory_81835, *[glue_type_81836], **kwargs_81837)
        
        # Assigning a type to the variable 'glue_spec' (line 1837)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1837, 12), 'glue_spec', factory_call_result_81838)
        # SSA branch for the else part of an if statement (line 1836)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to isinstance(...): (line 1838)
        # Processing the call arguments (line 1838)
        # Getting the type of 'glue_type' (line 1838)
        glue_type_81840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1838, 24), 'glue_type', False)
        # Getting the type of 'GlueSpec' (line 1838)
        GlueSpec_81841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1838, 35), 'GlueSpec', False)
        # Processing the call keyword arguments (line 1838)
        kwargs_81842 = {}
        # Getting the type of 'isinstance' (line 1838)
        isinstance_81839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1838, 13), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1838)
        isinstance_call_result_81843 = invoke(stypy.reporting.localization.Localization(__file__, 1838, 13), isinstance_81839, *[glue_type_81840, GlueSpec_81841], **kwargs_81842)
        
        # Testing the type of an if condition (line 1838)
        if_condition_81844 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1838, 13), isinstance_call_result_81843)
        # Assigning a type to the variable 'if_condition_81844' (line 1838)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1838, 13), 'if_condition_81844', if_condition_81844)
        # SSA begins for if statement (line 1838)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 1839):
        
        # Assigning a Name to a Name (line 1839):
        # Getting the type of 'glue_type' (line 1839)
        glue_type_81845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1839, 24), 'glue_type')
        # Assigning a type to the variable 'glue_spec' (line 1839)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1839, 12), 'glue_spec', glue_type_81845)
        # SSA branch for the else part of an if statement (line 1838)
        module_type_store.open_ssa_branch('else')
        
        # Call to ArgumentError(...): (line 1841)
        # Processing the call arguments (line 1841)
        unicode_81847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1841, 32), 'unicode', u'glue_type must be a glue spec name or instance.')
        # Processing the call keyword arguments (line 1841)
        kwargs_81848 = {}
        # Getting the type of 'ArgumentError' (line 1841)
        ArgumentError_81846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1841, 18), 'ArgumentError', False)
        # Calling ArgumentError(args, kwargs) (line 1841)
        ArgumentError_call_result_81849 = invoke(stypy.reporting.localization.Localization(__file__, 1841, 18), ArgumentError_81846, *[unicode_81847], **kwargs_81848)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1841, 12), ArgumentError_call_result_81849, 'raise parameter', BaseException)
        # SSA join for if statement (line 1838)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1836)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'copy' (line 1842)
        copy_81850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1842, 11), 'copy')
        # Testing the type of an if condition (line 1842)
        if_condition_81851 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1842, 8), copy_81850)
        # Assigning a type to the variable 'if_condition_81851' (line 1842)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1842, 8), 'if_condition_81851', if_condition_81851)
        # SSA begins for if statement (line 1842)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1843):
        
        # Assigning a Call to a Name (line 1843):
        
        # Call to copy(...): (line 1843)
        # Processing the call keyword arguments (line 1843)
        kwargs_81854 = {}
        # Getting the type of 'glue_spec' (line 1843)
        glue_spec_81852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1843, 24), 'glue_spec', False)
        # Obtaining the member 'copy' of a type (line 1843)
        copy_81853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1843, 24), glue_spec_81852, 'copy')
        # Calling copy(args, kwargs) (line 1843)
        copy_call_result_81855 = invoke(stypy.reporting.localization.Localization(__file__, 1843, 24), copy_81853, *[], **kwargs_81854)
        
        # Assigning a type to the variable 'glue_spec' (line 1843)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1843, 12), 'glue_spec', copy_call_result_81855)
        # SSA join for if statement (line 1842)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 1844):
        
        # Assigning a Name to a Attribute (line 1844):
        # Getting the type of 'glue_spec' (line 1844)
        glue_spec_81856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1844, 30), 'glue_spec')
        # Getting the type of 'self' (line 1844)
        self_81857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1844, 8), 'self')
        # Setting the type of the member 'glue_spec' of a type (line 1844)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1844, 8), self_81857, 'glue_spec', glue_spec_81856)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def shrink(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'shrink'
        module_type_store = module_type_store.open_function_context('shrink', 1846, 4, False)
        # Assigning a type to the variable 'self' (line 1847)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1847, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Glue.shrink.__dict__.__setitem__('stypy_localization', localization)
        Glue.shrink.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Glue.shrink.__dict__.__setitem__('stypy_type_store', module_type_store)
        Glue.shrink.__dict__.__setitem__('stypy_function_name', 'Glue.shrink')
        Glue.shrink.__dict__.__setitem__('stypy_param_names_list', [])
        Glue.shrink.__dict__.__setitem__('stypy_varargs_param_name', None)
        Glue.shrink.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Glue.shrink.__dict__.__setitem__('stypy_call_defaults', defaults)
        Glue.shrink.__dict__.__setitem__('stypy_call_varargs', varargs)
        Glue.shrink.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Glue.shrink.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Glue.shrink', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'shrink', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'shrink(...)' code ##################

        
        # Call to shrink(...): (line 1847)
        # Processing the call arguments (line 1847)
        # Getting the type of 'self' (line 1847)
        self_81860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1847, 20), 'self', False)
        # Processing the call keyword arguments (line 1847)
        kwargs_81861 = {}
        # Getting the type of 'Node' (line 1847)
        Node_81858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1847, 8), 'Node', False)
        # Obtaining the member 'shrink' of a type (line 1847)
        shrink_81859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1847, 8), Node_81858, 'shrink')
        # Calling shrink(args, kwargs) (line 1847)
        shrink_call_result_81862 = invoke(stypy.reporting.localization.Localization(__file__, 1847, 8), shrink_81859, *[self_81860], **kwargs_81861)
        
        
        
        # Getting the type of 'self' (line 1848)
        self_81863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1848, 11), 'self')
        # Obtaining the member 'size' of a type (line 1848)
        size_81864 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1848, 11), self_81863, 'size')
        # Getting the type of 'NUM_SIZE_LEVELS' (line 1848)
        NUM_SIZE_LEVELS_81865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1848, 23), 'NUM_SIZE_LEVELS')
        # Applying the binary operator '<' (line 1848)
        result_lt_81866 = python_operator(stypy.reporting.localization.Localization(__file__, 1848, 11), '<', size_81864, NUM_SIZE_LEVELS_81865)
        
        # Testing the type of an if condition (line 1848)
        if_condition_81867 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1848, 8), result_lt_81866)
        # Assigning a type to the variable 'if_condition_81867' (line 1848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1848, 8), 'if_condition_81867', if_condition_81867)
        # SSA begins for if statement (line 1848)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'self' (line 1849)
        self_81868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1849, 15), 'self')
        # Obtaining the member 'glue_spec' of a type (line 1849)
        glue_spec_81869 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1849, 15), self_81868, 'glue_spec')
        # Obtaining the member 'width' of a type (line 1849)
        width_81870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1849, 15), glue_spec_81869, 'width')
        float_81871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1849, 39), 'float')
        # Applying the binary operator '!=' (line 1849)
        result_ne_81872 = python_operator(stypy.reporting.localization.Localization(__file__, 1849, 15), '!=', width_81870, float_81871)
        
        # Testing the type of an if condition (line 1849)
        if_condition_81873 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1849, 12), result_ne_81872)
        # Assigning a type to the variable 'if_condition_81873' (line 1849)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1849, 12), 'if_condition_81873', if_condition_81873)
        # SSA begins for if statement (line 1849)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 1850):
        
        # Assigning a Call to a Attribute (line 1850):
        
        # Call to copy(...): (line 1850)
        # Processing the call keyword arguments (line 1850)
        kwargs_81877 = {}
        # Getting the type of 'self' (line 1850)
        self_81874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1850, 33), 'self', False)
        # Obtaining the member 'glue_spec' of a type (line 1850)
        glue_spec_81875 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1850, 33), self_81874, 'glue_spec')
        # Obtaining the member 'copy' of a type (line 1850)
        copy_81876 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1850, 33), glue_spec_81875, 'copy')
        # Calling copy(args, kwargs) (line 1850)
        copy_call_result_81878 = invoke(stypy.reporting.localization.Localization(__file__, 1850, 33), copy_81876, *[], **kwargs_81877)
        
        # Getting the type of 'self' (line 1850)
        self_81879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1850, 16), 'self')
        # Setting the type of the member 'glue_spec' of a type (line 1850)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1850, 16), self_81879, 'glue_spec', copy_call_result_81878)
        
        # Getting the type of 'self' (line 1851)
        self_81880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1851, 16), 'self')
        # Obtaining the member 'glue_spec' of a type (line 1851)
        glue_spec_81881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1851, 16), self_81880, 'glue_spec')
        # Obtaining the member 'width' of a type (line 1851)
        width_81882 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1851, 16), glue_spec_81881, 'width')
        # Getting the type of 'SHRINK_FACTOR' (line 1851)
        SHRINK_FACTOR_81883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1851, 40), 'SHRINK_FACTOR')
        # Applying the binary operator '*=' (line 1851)
        result_imul_81884 = python_operator(stypy.reporting.localization.Localization(__file__, 1851, 16), '*=', width_81882, SHRINK_FACTOR_81883)
        # Getting the type of 'self' (line 1851)
        self_81885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1851, 16), 'self')
        # Obtaining the member 'glue_spec' of a type (line 1851)
        glue_spec_81886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1851, 16), self_81885, 'glue_spec')
        # Setting the type of the member 'width' of a type (line 1851)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1851, 16), glue_spec_81886, 'width', result_imul_81884)
        
        # SSA join for if statement (line 1849)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1848)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'shrink(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'shrink' in the type store
        # Getting the type of 'stypy_return_type' (line 1846)
        stypy_return_type_81887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1846, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81887)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'shrink'
        return stypy_return_type_81887


    @norecursion
    def grow(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'grow'
        module_type_store = module_type_store.open_function_context('grow', 1853, 4, False)
        # Assigning a type to the variable 'self' (line 1854)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1854, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Glue.grow.__dict__.__setitem__('stypy_localization', localization)
        Glue.grow.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Glue.grow.__dict__.__setitem__('stypy_type_store', module_type_store)
        Glue.grow.__dict__.__setitem__('stypy_function_name', 'Glue.grow')
        Glue.grow.__dict__.__setitem__('stypy_param_names_list', [])
        Glue.grow.__dict__.__setitem__('stypy_varargs_param_name', None)
        Glue.grow.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Glue.grow.__dict__.__setitem__('stypy_call_defaults', defaults)
        Glue.grow.__dict__.__setitem__('stypy_call_varargs', varargs)
        Glue.grow.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Glue.grow.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Glue.grow', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'grow', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'grow(...)' code ##################

        
        # Call to grow(...): (line 1854)
        # Processing the call arguments (line 1854)
        # Getting the type of 'self' (line 1854)
        self_81890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1854, 18), 'self', False)
        # Processing the call keyword arguments (line 1854)
        kwargs_81891 = {}
        # Getting the type of 'Node' (line 1854)
        Node_81888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1854, 8), 'Node', False)
        # Obtaining the member 'grow' of a type (line 1854)
        grow_81889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1854, 8), Node_81888, 'grow')
        # Calling grow(args, kwargs) (line 1854)
        grow_call_result_81892 = invoke(stypy.reporting.localization.Localization(__file__, 1854, 8), grow_81889, *[self_81890], **kwargs_81891)
        
        
        
        # Getting the type of 'self' (line 1855)
        self_81893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1855, 11), 'self')
        # Obtaining the member 'glue_spec' of a type (line 1855)
        glue_spec_81894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1855, 11), self_81893, 'glue_spec')
        # Obtaining the member 'width' of a type (line 1855)
        width_81895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1855, 11), glue_spec_81894, 'width')
        float_81896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1855, 35), 'float')
        # Applying the binary operator '!=' (line 1855)
        result_ne_81897 = python_operator(stypy.reporting.localization.Localization(__file__, 1855, 11), '!=', width_81895, float_81896)
        
        # Testing the type of an if condition (line 1855)
        if_condition_81898 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1855, 8), result_ne_81897)
        # Assigning a type to the variable 'if_condition_81898' (line 1855)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1855, 8), 'if_condition_81898', if_condition_81898)
        # SSA begins for if statement (line 1855)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 1856):
        
        # Assigning a Call to a Attribute (line 1856):
        
        # Call to copy(...): (line 1856)
        # Processing the call keyword arguments (line 1856)
        kwargs_81902 = {}
        # Getting the type of 'self' (line 1856)
        self_81899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1856, 29), 'self', False)
        # Obtaining the member 'glue_spec' of a type (line 1856)
        glue_spec_81900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1856, 29), self_81899, 'glue_spec')
        # Obtaining the member 'copy' of a type (line 1856)
        copy_81901 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1856, 29), glue_spec_81900, 'copy')
        # Calling copy(args, kwargs) (line 1856)
        copy_call_result_81903 = invoke(stypy.reporting.localization.Localization(__file__, 1856, 29), copy_81901, *[], **kwargs_81902)
        
        # Getting the type of 'self' (line 1856)
        self_81904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1856, 12), 'self')
        # Setting the type of the member 'glue_spec' of a type (line 1856)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1856, 12), self_81904, 'glue_spec', copy_call_result_81903)
        
        # Getting the type of 'self' (line 1857)
        self_81905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1857, 12), 'self')
        # Obtaining the member 'glue_spec' of a type (line 1857)
        glue_spec_81906 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1857, 12), self_81905, 'glue_spec')
        # Obtaining the member 'width' of a type (line 1857)
        width_81907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1857, 12), glue_spec_81906, 'width')
        # Getting the type of 'GROW_FACTOR' (line 1857)
        GROW_FACTOR_81908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1857, 36), 'GROW_FACTOR')
        # Applying the binary operator '*=' (line 1857)
        result_imul_81909 = python_operator(stypy.reporting.localization.Localization(__file__, 1857, 12), '*=', width_81907, GROW_FACTOR_81908)
        # Getting the type of 'self' (line 1857)
        self_81910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1857, 12), 'self')
        # Obtaining the member 'glue_spec' of a type (line 1857)
        glue_spec_81911 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1857, 12), self_81910, 'glue_spec')
        # Setting the type of the member 'width' of a type (line 1857)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1857, 12), glue_spec_81911, 'width', result_imul_81909)
        
        # SSA join for if statement (line 1855)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'grow(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'grow' in the type store
        # Getting the type of 'stypy_return_type' (line 1853)
        stypy_return_type_81912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1853, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81912)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'grow'
        return stypy_return_type_81912


# Assigning a type to the variable 'Glue' (line 1826)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1826, 0), 'Glue', Glue)
# Declaration of the 'GlueSpec' class

class GlueSpec(object, ):
    unicode_81913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1862, (-1)), 'unicode', u'\n    See :class:`Glue`.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        float_81914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1863, 29), 'float')
        float_81915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1863, 41), 'float')
        int_81916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1863, 59), 'int')
        float_81917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1863, 69), 'float')
        int_81918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1863, 86), 'int')
        defaults = [float_81914, float_81915, int_81916, float_81917, int_81918]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1863, 4, False)
        # Assigning a type to the variable 'self' (line 1864)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1864, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GlueSpec.__init__', ['width', 'stretch', 'stretch_order', 'shrink', 'shrink_order'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['width', 'stretch', 'stretch_order', 'shrink', 'shrink_order'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 1864):
        
        # Assigning a Name to a Attribute (line 1864):
        # Getting the type of 'width' (line 1864)
        width_81919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1864, 29), 'width')
        # Getting the type of 'self' (line 1864)
        self_81920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1864, 8), 'self')
        # Setting the type of the member 'width' of a type (line 1864)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1864, 8), self_81920, 'width', width_81919)
        
        # Assigning a Name to a Attribute (line 1865):
        
        # Assigning a Name to a Attribute (line 1865):
        # Getting the type of 'stretch' (line 1865)
        stretch_81921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1865, 29), 'stretch')
        # Getting the type of 'self' (line 1865)
        self_81922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1865, 8), 'self')
        # Setting the type of the member 'stretch' of a type (line 1865)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1865, 8), self_81922, 'stretch', stretch_81921)
        
        # Assigning a Name to a Attribute (line 1866):
        
        # Assigning a Name to a Attribute (line 1866):
        # Getting the type of 'stretch_order' (line 1866)
        stretch_order_81923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1866, 29), 'stretch_order')
        # Getting the type of 'self' (line 1866)
        self_81924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1866, 8), 'self')
        # Setting the type of the member 'stretch_order' of a type (line 1866)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1866, 8), self_81924, 'stretch_order', stretch_order_81923)
        
        # Assigning a Name to a Attribute (line 1867):
        
        # Assigning a Name to a Attribute (line 1867):
        # Getting the type of 'shrink' (line 1867)
        shrink_81925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1867, 29), 'shrink')
        # Getting the type of 'self' (line 1867)
        self_81926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1867, 8), 'self')
        # Setting the type of the member 'shrink' of a type (line 1867)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1867, 8), self_81926, 'shrink', shrink_81925)
        
        # Assigning a Name to a Attribute (line 1868):
        
        # Assigning a Name to a Attribute (line 1868):
        # Getting the type of 'shrink_order' (line 1868)
        shrink_order_81927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1868, 29), 'shrink_order')
        # Getting the type of 'self' (line 1868)
        self_81928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1868, 8), 'self')
        # Setting the type of the member 'shrink_order' of a type (line 1868)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1868, 8), self_81928, 'shrink_order', shrink_order_81927)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def copy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'copy'
        module_type_store = module_type_store.open_function_context('copy', 1870, 4, False)
        # Assigning a type to the variable 'self' (line 1871)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1871, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GlueSpec.copy.__dict__.__setitem__('stypy_localization', localization)
        GlueSpec.copy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GlueSpec.copy.__dict__.__setitem__('stypy_type_store', module_type_store)
        GlueSpec.copy.__dict__.__setitem__('stypy_function_name', 'GlueSpec.copy')
        GlueSpec.copy.__dict__.__setitem__('stypy_param_names_list', [])
        GlueSpec.copy.__dict__.__setitem__('stypy_varargs_param_name', None)
        GlueSpec.copy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GlueSpec.copy.__dict__.__setitem__('stypy_call_defaults', defaults)
        GlueSpec.copy.__dict__.__setitem__('stypy_call_varargs', varargs)
        GlueSpec.copy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GlueSpec.copy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GlueSpec.copy', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'copy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'copy(...)' code ##################

        
        # Call to GlueSpec(...): (line 1871)
        # Processing the call arguments (line 1871)
        # Getting the type of 'self' (line 1872)
        self_81930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1872, 12), 'self', False)
        # Obtaining the member 'width' of a type (line 1872)
        width_81931 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1872, 12), self_81930, 'width')
        # Getting the type of 'self' (line 1873)
        self_81932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 12), 'self', False)
        # Obtaining the member 'stretch' of a type (line 1873)
        stretch_81933 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1873, 12), self_81932, 'stretch')
        # Getting the type of 'self' (line 1874)
        self_81934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1874, 12), 'self', False)
        # Obtaining the member 'stretch_order' of a type (line 1874)
        stretch_order_81935 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1874, 12), self_81934, 'stretch_order')
        # Getting the type of 'self' (line 1875)
        self_81936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1875, 12), 'self', False)
        # Obtaining the member 'shrink' of a type (line 1875)
        shrink_81937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1875, 12), self_81936, 'shrink')
        # Getting the type of 'self' (line 1876)
        self_81938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1876, 12), 'self', False)
        # Obtaining the member 'shrink_order' of a type (line 1876)
        shrink_order_81939 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1876, 12), self_81938, 'shrink_order')
        # Processing the call keyword arguments (line 1871)
        kwargs_81940 = {}
        # Getting the type of 'GlueSpec' (line 1871)
        GlueSpec_81929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1871, 15), 'GlueSpec', False)
        # Calling GlueSpec(args, kwargs) (line 1871)
        GlueSpec_call_result_81941 = invoke(stypy.reporting.localization.Localization(__file__, 1871, 15), GlueSpec_81929, *[width_81931, stretch_81933, stretch_order_81935, shrink_81937, shrink_order_81939], **kwargs_81940)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1871)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1871, 8), 'stypy_return_type', GlueSpec_call_result_81941)
        
        # ################# End of 'copy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'copy' in the type store
        # Getting the type of 'stypy_return_type' (line 1870)
        stypy_return_type_81942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1870, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81942)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'copy'
        return stypy_return_type_81942


    @norecursion
    def factory(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'factory'
        module_type_store = module_type_store.open_function_context('factory', 1878, 4, False)
        # Assigning a type to the variable 'self' (line 1879)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1879, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        GlueSpec.factory.__dict__.__setitem__('stypy_localization', localization)
        GlueSpec.factory.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        GlueSpec.factory.__dict__.__setitem__('stypy_type_store', module_type_store)
        GlueSpec.factory.__dict__.__setitem__('stypy_function_name', 'GlueSpec.factory')
        GlueSpec.factory.__dict__.__setitem__('stypy_param_names_list', ['glue_type'])
        GlueSpec.factory.__dict__.__setitem__('stypy_varargs_param_name', None)
        GlueSpec.factory.__dict__.__setitem__('stypy_kwargs_param_name', None)
        GlueSpec.factory.__dict__.__setitem__('stypy_call_defaults', defaults)
        GlueSpec.factory.__dict__.__setitem__('stypy_call_varargs', varargs)
        GlueSpec.factory.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        GlueSpec.factory.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'GlueSpec.factory', ['glue_type'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'factory', localization, ['glue_type'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'factory(...)' code ##################

        
        # Obtaining the type of the subscript
        # Getting the type of 'glue_type' (line 1879)
        glue_type_81943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1879, 26), 'glue_type')
        # Getting the type of 'cls' (line 1879)
        cls_81944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1879, 15), 'cls')
        # Obtaining the member '_types' of a type (line 1879)
        _types_81945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1879, 15), cls_81944, '_types')
        # Obtaining the member '__getitem__' of a type (line 1879)
        getitem___81946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1879, 15), _types_81945, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1879)
        subscript_call_result_81947 = invoke(stypy.reporting.localization.Localization(__file__, 1879, 15), getitem___81946, glue_type_81943)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1879)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1879, 8), 'stypy_return_type', subscript_call_result_81947)
        
        # ################# End of 'factory(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'factory' in the type store
        # Getting the type of 'stypy_return_type' (line 1878)
        stypy_return_type_81948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1878, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_81948)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'factory'
        return stypy_return_type_81948

    
    # Assigning a Call to a Name (line 1880):

# Assigning a type to the variable 'GlueSpec' (line 1859)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1859, 0), 'GlueSpec', GlueSpec)

# Assigning a Call to a Name (line 1880):

# Call to classmethod(...): (line 1880)
# Processing the call arguments (line 1880)
# Getting the type of 'GlueSpec'
GlueSpec_81950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'GlueSpec', False)
# Obtaining the member 'factory' of a type
factory_81951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), GlueSpec_81950, 'factory')
# Processing the call keyword arguments (line 1880)
kwargs_81952 = {}
# Getting the type of 'classmethod' (line 1880)
classmethod_81949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1880, 14), 'classmethod', False)
# Calling classmethod(args, kwargs) (line 1880)
classmethod_call_result_81953 = invoke(stypy.reporting.localization.Localization(__file__, 1880, 14), classmethod_81949, *[factory_81951], **kwargs_81952)

# Getting the type of 'GlueSpec'
GlueSpec_81954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'GlueSpec')
# Setting the type of the member 'factory' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), GlueSpec_81954, 'factory', classmethod_call_result_81953)

# Assigning a Dict to a Attribute (line 1882):

# Assigning a Dict to a Attribute (line 1882):

# Obtaining an instance of the builtin type 'dict' (line 1882)
dict_81955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1882, 18), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1882)
# Adding element type (key, value) (line 1882)
unicode_81956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1883, 4), 'unicode', u'fil')

# Call to GlueSpec(...): (line 1883)
# Processing the call arguments (line 1883)
float_81958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1883, 28), 'float')
float_81959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1883, 32), 'float')
int_81960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1883, 36), 'int')
float_81961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1883, 39), 'float')
int_81962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1883, 43), 'int')
# Processing the call keyword arguments (line 1883)
kwargs_81963 = {}
# Getting the type of 'GlueSpec' (line 1883)
GlueSpec_81957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1883, 19), 'GlueSpec', False)
# Calling GlueSpec(args, kwargs) (line 1883)
GlueSpec_call_result_81964 = invoke(stypy.reporting.localization.Localization(__file__, 1883, 19), GlueSpec_81957, *[float_81958, float_81959, int_81960, float_81961, int_81962], **kwargs_81963)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1882, 18), dict_81955, (unicode_81956, GlueSpec_call_result_81964))
# Adding element type (key, value) (line 1882)
unicode_81965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1884, 4), 'unicode', u'fill')

# Call to GlueSpec(...): (line 1884)
# Processing the call arguments (line 1884)
float_81967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1884, 28), 'float')
float_81968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1884, 32), 'float')
int_81969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1884, 36), 'int')
float_81970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1884, 39), 'float')
int_81971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1884, 43), 'int')
# Processing the call keyword arguments (line 1884)
kwargs_81972 = {}
# Getting the type of 'GlueSpec' (line 1884)
GlueSpec_81966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1884, 19), 'GlueSpec', False)
# Calling GlueSpec(args, kwargs) (line 1884)
GlueSpec_call_result_81973 = invoke(stypy.reporting.localization.Localization(__file__, 1884, 19), GlueSpec_81966, *[float_81967, float_81968, int_81969, float_81970, int_81971], **kwargs_81972)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1882, 18), dict_81955, (unicode_81965, GlueSpec_call_result_81973))
# Adding element type (key, value) (line 1882)
unicode_81974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1885, 4), 'unicode', u'filll')

# Call to GlueSpec(...): (line 1885)
# Processing the call arguments (line 1885)
float_81976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1885, 28), 'float')
float_81977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1885, 32), 'float')
int_81978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1885, 36), 'int')
float_81979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1885, 39), 'float')
int_81980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1885, 43), 'int')
# Processing the call keyword arguments (line 1885)
kwargs_81981 = {}
# Getting the type of 'GlueSpec' (line 1885)
GlueSpec_81975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1885, 19), 'GlueSpec', False)
# Calling GlueSpec(args, kwargs) (line 1885)
GlueSpec_call_result_81982 = invoke(stypy.reporting.localization.Localization(__file__, 1885, 19), GlueSpec_81975, *[float_81976, float_81977, int_81978, float_81979, int_81980], **kwargs_81981)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1882, 18), dict_81955, (unicode_81974, GlueSpec_call_result_81982))
# Adding element type (key, value) (line 1882)
unicode_81983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1886, 4), 'unicode', u'neg_fil')

# Call to GlueSpec(...): (line 1886)
# Processing the call arguments (line 1886)
float_81985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1886, 28), 'float')
float_81986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1886, 32), 'float')
int_81987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1886, 36), 'int')
float_81988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1886, 39), 'float')
int_81989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1886, 43), 'int')
# Processing the call keyword arguments (line 1886)
kwargs_81990 = {}
# Getting the type of 'GlueSpec' (line 1886)
GlueSpec_81984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1886, 19), 'GlueSpec', False)
# Calling GlueSpec(args, kwargs) (line 1886)
GlueSpec_call_result_81991 = invoke(stypy.reporting.localization.Localization(__file__, 1886, 19), GlueSpec_81984, *[float_81985, float_81986, int_81987, float_81988, int_81989], **kwargs_81990)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1882, 18), dict_81955, (unicode_81983, GlueSpec_call_result_81991))
# Adding element type (key, value) (line 1882)
unicode_81992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1887, 4), 'unicode', u'neg_fill')

# Call to GlueSpec(...): (line 1887)
# Processing the call arguments (line 1887)
float_81994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1887, 28), 'float')
float_81995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1887, 32), 'float')
int_81996 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1887, 36), 'int')
float_81997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1887, 39), 'float')
int_81998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1887, 43), 'int')
# Processing the call keyword arguments (line 1887)
kwargs_81999 = {}
# Getting the type of 'GlueSpec' (line 1887)
GlueSpec_81993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1887, 19), 'GlueSpec', False)
# Calling GlueSpec(args, kwargs) (line 1887)
GlueSpec_call_result_82000 = invoke(stypy.reporting.localization.Localization(__file__, 1887, 19), GlueSpec_81993, *[float_81994, float_81995, int_81996, float_81997, int_81998], **kwargs_81999)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1882, 18), dict_81955, (unicode_81992, GlueSpec_call_result_82000))
# Adding element type (key, value) (line 1882)
unicode_82001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1888, 4), 'unicode', u'neg_filll')

# Call to GlueSpec(...): (line 1888)
# Processing the call arguments (line 1888)
float_82003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1888, 28), 'float')
float_82004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1888, 32), 'float')
int_82005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1888, 36), 'int')
float_82006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1888, 39), 'float')
int_82007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1888, 43), 'int')
# Processing the call keyword arguments (line 1888)
kwargs_82008 = {}
# Getting the type of 'GlueSpec' (line 1888)
GlueSpec_82002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1888, 19), 'GlueSpec', False)
# Calling GlueSpec(args, kwargs) (line 1888)
GlueSpec_call_result_82009 = invoke(stypy.reporting.localization.Localization(__file__, 1888, 19), GlueSpec_82002, *[float_82003, float_82004, int_82005, float_82006, int_82007], **kwargs_82008)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1882, 18), dict_81955, (unicode_82001, GlueSpec_call_result_82009))
# Adding element type (key, value) (line 1882)
unicode_82010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1889, 4), 'unicode', u'empty')

# Call to GlueSpec(...): (line 1889)
# Processing the call arguments (line 1889)
float_82012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1889, 28), 'float')
float_82013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1889, 32), 'float')
int_82014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1889, 36), 'int')
float_82015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1889, 39), 'float')
int_82016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1889, 43), 'int')
# Processing the call keyword arguments (line 1889)
kwargs_82017 = {}
# Getting the type of 'GlueSpec' (line 1889)
GlueSpec_82011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1889, 19), 'GlueSpec', False)
# Calling GlueSpec(args, kwargs) (line 1889)
GlueSpec_call_result_82018 = invoke(stypy.reporting.localization.Localization(__file__, 1889, 19), GlueSpec_82011, *[float_82012, float_82013, int_82014, float_82015, int_82016], **kwargs_82017)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1882, 18), dict_81955, (unicode_82010, GlueSpec_call_result_82018))
# Adding element type (key, value) (line 1882)
unicode_82019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1890, 4), 'unicode', u'ss')

# Call to GlueSpec(...): (line 1890)
# Processing the call arguments (line 1890)
float_82021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1890, 28), 'float')
float_82022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1890, 32), 'float')
int_82023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1890, 36), 'int')
float_82024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1890, 39), 'float')
int_82025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1890, 44), 'int')
# Processing the call keyword arguments (line 1890)
kwargs_82026 = {}
# Getting the type of 'GlueSpec' (line 1890)
GlueSpec_82020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1890, 19), 'GlueSpec', False)
# Calling GlueSpec(args, kwargs) (line 1890)
GlueSpec_call_result_82027 = invoke(stypy.reporting.localization.Localization(__file__, 1890, 19), GlueSpec_82020, *[float_82021, float_82022, int_82023, float_82024, int_82025], **kwargs_82026)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1882, 18), dict_81955, (unicode_82019, GlueSpec_call_result_82027))

# Getting the type of 'GlueSpec' (line 1882)
GlueSpec_82028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1882, 0), 'GlueSpec')
# Setting the type of the member '_types' of a type (line 1882)
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1882, 0), GlueSpec_82028, '_types', dict_81955)
# Declaration of the 'Fil' class
# Getting the type of 'Glue' (line 1895)
Glue_82029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1895, 10), 'Glue')

class Fil(Glue_82029, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1896, 4, False)
        # Assigning a type to the variable 'self' (line 1897)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1897, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Fil.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1897)
        # Processing the call arguments (line 1897)
        # Getting the type of 'self' (line 1897)
        self_82032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1897, 22), 'self', False)
        unicode_82033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1897, 28), 'unicode', u'fil')
        # Processing the call keyword arguments (line 1897)
        kwargs_82034 = {}
        # Getting the type of 'Glue' (line 1897)
        Glue_82030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1897, 8), 'Glue', False)
        # Obtaining the member '__init__' of a type (line 1897)
        init___82031 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1897, 8), Glue_82030, '__init__')
        # Calling __init__(args, kwargs) (line 1897)
        init___call_result_82035 = invoke(stypy.reporting.localization.Localization(__file__, 1897, 8), init___82031, *[self_82032, unicode_82033], **kwargs_82034)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'Fil' (line 1895)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1895, 0), 'Fil', Fil)
# Declaration of the 'Fill' class
# Getting the type of 'Glue' (line 1899)
Glue_82036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1899, 11), 'Glue')

class Fill(Glue_82036, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1900, 4, False)
        # Assigning a type to the variable 'self' (line 1901)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1901, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Fill.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1901)
        # Processing the call arguments (line 1901)
        # Getting the type of 'self' (line 1901)
        self_82039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 22), 'self', False)
        unicode_82040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1901, 28), 'unicode', u'fill')
        # Processing the call keyword arguments (line 1901)
        kwargs_82041 = {}
        # Getting the type of 'Glue' (line 1901)
        Glue_82037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 8), 'Glue', False)
        # Obtaining the member '__init__' of a type (line 1901)
        init___82038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1901, 8), Glue_82037, '__init__')
        # Calling __init__(args, kwargs) (line 1901)
        init___call_result_82042 = invoke(stypy.reporting.localization.Localization(__file__, 1901, 8), init___82038, *[self_82039, unicode_82040], **kwargs_82041)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'Fill' (line 1899)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1899, 0), 'Fill', Fill)
# Declaration of the 'Filll' class
# Getting the type of 'Glue' (line 1903)
Glue_82043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1903, 12), 'Glue')

class Filll(Glue_82043, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1904, 4, False)
        # Assigning a type to the variable 'self' (line 1905)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1905, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Filll.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1905)
        # Processing the call arguments (line 1905)
        # Getting the type of 'self' (line 1905)
        self_82046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1905, 22), 'self', False)
        unicode_82047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1905, 28), 'unicode', u'filll')
        # Processing the call keyword arguments (line 1905)
        kwargs_82048 = {}
        # Getting the type of 'Glue' (line 1905)
        Glue_82044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1905, 8), 'Glue', False)
        # Obtaining the member '__init__' of a type (line 1905)
        init___82045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1905, 8), Glue_82044, '__init__')
        # Calling __init__(args, kwargs) (line 1905)
        init___call_result_82049 = invoke(stypy.reporting.localization.Localization(__file__, 1905, 8), init___82045, *[self_82046, unicode_82047], **kwargs_82048)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'Filll' (line 1903)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1903, 0), 'Filll', Filll)
# Declaration of the 'NegFil' class
# Getting the type of 'Glue' (line 1907)
Glue_82050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1907, 13), 'Glue')

class NegFil(Glue_82050, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1908, 4, False)
        # Assigning a type to the variable 'self' (line 1909)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1909, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'NegFil.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1909)
        # Processing the call arguments (line 1909)
        # Getting the type of 'self' (line 1909)
        self_82053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1909, 22), 'self', False)
        unicode_82054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1909, 28), 'unicode', u'neg_fil')
        # Processing the call keyword arguments (line 1909)
        kwargs_82055 = {}
        # Getting the type of 'Glue' (line 1909)
        Glue_82051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1909, 8), 'Glue', False)
        # Obtaining the member '__init__' of a type (line 1909)
        init___82052 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1909, 8), Glue_82051, '__init__')
        # Calling __init__(args, kwargs) (line 1909)
        init___call_result_82056 = invoke(stypy.reporting.localization.Localization(__file__, 1909, 8), init___82052, *[self_82053, unicode_82054], **kwargs_82055)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'NegFil' (line 1907)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1907, 0), 'NegFil', NegFil)
# Declaration of the 'NegFill' class
# Getting the type of 'Glue' (line 1911)
Glue_82057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1911, 14), 'Glue')

class NegFill(Glue_82057, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1912, 4, False)
        # Assigning a type to the variable 'self' (line 1913)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1913, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'NegFill.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1913)
        # Processing the call arguments (line 1913)
        # Getting the type of 'self' (line 1913)
        self_82060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1913, 22), 'self', False)
        unicode_82061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1913, 28), 'unicode', u'neg_fill')
        # Processing the call keyword arguments (line 1913)
        kwargs_82062 = {}
        # Getting the type of 'Glue' (line 1913)
        Glue_82058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1913, 8), 'Glue', False)
        # Obtaining the member '__init__' of a type (line 1913)
        init___82059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1913, 8), Glue_82058, '__init__')
        # Calling __init__(args, kwargs) (line 1913)
        init___call_result_82063 = invoke(stypy.reporting.localization.Localization(__file__, 1913, 8), init___82059, *[self_82060, unicode_82061], **kwargs_82062)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'NegFill' (line 1911)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1911, 0), 'NegFill', NegFill)
# Declaration of the 'NegFilll' class
# Getting the type of 'Glue' (line 1915)
Glue_82064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1915, 15), 'Glue')

class NegFilll(Glue_82064, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1916, 4, False)
        # Assigning a type to the variable 'self' (line 1917)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1917, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'NegFilll.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1917)
        # Processing the call arguments (line 1917)
        # Getting the type of 'self' (line 1917)
        self_82067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1917, 22), 'self', False)
        unicode_82068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1917, 28), 'unicode', u'neg_filll')
        # Processing the call keyword arguments (line 1917)
        kwargs_82069 = {}
        # Getting the type of 'Glue' (line 1917)
        Glue_82065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1917, 8), 'Glue', False)
        # Obtaining the member '__init__' of a type (line 1917)
        init___82066 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1917, 8), Glue_82065, '__init__')
        # Calling __init__(args, kwargs) (line 1917)
        init___call_result_82070 = invoke(stypy.reporting.localization.Localization(__file__, 1917, 8), init___82066, *[self_82067, unicode_82068], **kwargs_82069)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'NegFilll' (line 1915)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1915, 0), 'NegFilll', NegFilll)
# Declaration of the 'SsGlue' class
# Getting the type of 'Glue' (line 1919)
Glue_82071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1919, 13), 'Glue')

class SsGlue(Glue_82071, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1920, 4, False)
        # Assigning a type to the variable 'self' (line 1921)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1921, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'SsGlue.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1921)
        # Processing the call arguments (line 1921)
        # Getting the type of 'self' (line 1921)
        self_82074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1921, 22), 'self', False)
        unicode_82075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1921, 28), 'unicode', u'ss')
        # Processing the call keyword arguments (line 1921)
        kwargs_82076 = {}
        # Getting the type of 'Glue' (line 1921)
        Glue_82072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1921, 8), 'Glue', False)
        # Obtaining the member '__init__' of a type (line 1921)
        init___82073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1921, 8), Glue_82072, '__init__')
        # Calling __init__(args, kwargs) (line 1921)
        init___call_result_82077 = invoke(stypy.reporting.localization.Localization(__file__, 1921, 8), init___82073, *[self_82074, unicode_82075], **kwargs_82076)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'SsGlue' (line 1919)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1919, 0), 'SsGlue', SsGlue)
# Declaration of the 'HCentered' class
# Getting the type of 'Hlist' (line 1923)
Hlist_82078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1923, 16), 'Hlist')

class HCentered(Hlist_82078, ):
    unicode_82079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1927, (-1)), 'unicode', u'\n    A convenience class to create an :class:`Hlist` whose contents are\n    centered within its enclosing box.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1928, 4, False)
        # Assigning a type to the variable 'self' (line 1929)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1929, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'HCentered.__init__', ['elements'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['elements'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1929)
        # Processing the call arguments (line 1929)
        # Getting the type of 'self' (line 1929)
        self_82082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1929, 23), 'self', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1929)
        list_82083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1929, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1929)
        # Adding element type (line 1929)
        
        # Call to SsGlue(...): (line 1929)
        # Processing the call keyword arguments (line 1929)
        kwargs_82085 = {}
        # Getting the type of 'SsGlue' (line 1929)
        SsGlue_82084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1929, 30), 'SsGlue', False)
        # Calling SsGlue(args, kwargs) (line 1929)
        SsGlue_call_result_82086 = invoke(stypy.reporting.localization.Localization(__file__, 1929, 30), SsGlue_82084, *[], **kwargs_82085)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1929, 29), list_82083, SsGlue_call_result_82086)
        
        # Getting the type of 'elements' (line 1929)
        elements_82087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1929, 42), 'elements', False)
        # Applying the binary operator '+' (line 1929)
        result_add_82088 = python_operator(stypy.reporting.localization.Localization(__file__, 1929, 29), '+', list_82083, elements_82087)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1929)
        list_82089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1929, 53), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1929)
        # Adding element type (line 1929)
        
        # Call to SsGlue(...): (line 1929)
        # Processing the call keyword arguments (line 1929)
        kwargs_82091 = {}
        # Getting the type of 'SsGlue' (line 1929)
        SsGlue_82090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1929, 54), 'SsGlue', False)
        # Calling SsGlue(args, kwargs) (line 1929)
        SsGlue_call_result_82092 = invoke(stypy.reporting.localization.Localization(__file__, 1929, 54), SsGlue_82090, *[], **kwargs_82091)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1929, 53), list_82089, SsGlue_call_result_82092)
        
        # Applying the binary operator '+' (line 1929)
        result_add_82093 = python_operator(stypy.reporting.localization.Localization(__file__, 1929, 51), '+', result_add_82088, list_82089)
        
        # Processing the call keyword arguments (line 1929)
        # Getting the type of 'False' (line 1930)
        False_82094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1930, 31), 'False', False)
        keyword_82095 = False_82094
        kwargs_82096 = {'do_kern': keyword_82095}
        # Getting the type of 'Hlist' (line 1929)
        Hlist_82080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1929, 8), 'Hlist', False)
        # Obtaining the member '__init__' of a type (line 1929)
        init___82081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1929, 8), Hlist_82080, '__init__')
        # Calling __init__(args, kwargs) (line 1929)
        init___call_result_82097 = invoke(stypy.reporting.localization.Localization(__file__, 1929, 8), init___82081, *[self_82082, result_add_82093], **kwargs_82096)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'HCentered' (line 1923)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1923, 0), 'HCentered', HCentered)
# Declaration of the 'VCentered' class
# Getting the type of 'Hlist' (line 1932)
Hlist_82098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1932, 16), 'Hlist')

class VCentered(Hlist_82098, ):
    unicode_82099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1936, (-1)), 'unicode', u'\n    A convenience class to create a :class:`Vlist` whose contents are\n    centered within its enclosing box.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1937, 4, False)
        # Assigning a type to the variable 'self' (line 1938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1938, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'VCentered.__init__', ['elements'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['elements'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1938)
        # Processing the call arguments (line 1938)
        # Getting the type of 'self' (line 1938)
        self_82102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1938, 23), 'self', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1938)
        list_82103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1938, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1938)
        # Adding element type (line 1938)
        
        # Call to SsGlue(...): (line 1938)
        # Processing the call keyword arguments (line 1938)
        kwargs_82105 = {}
        # Getting the type of 'SsGlue' (line 1938)
        SsGlue_82104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1938, 30), 'SsGlue', False)
        # Calling SsGlue(args, kwargs) (line 1938)
        SsGlue_call_result_82106 = invoke(stypy.reporting.localization.Localization(__file__, 1938, 30), SsGlue_82104, *[], **kwargs_82105)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1938, 29), list_82103, SsGlue_call_result_82106)
        
        # Getting the type of 'elements' (line 1938)
        elements_82107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1938, 42), 'elements', False)
        # Applying the binary operator '+' (line 1938)
        result_add_82108 = python_operator(stypy.reporting.localization.Localization(__file__, 1938, 29), '+', list_82103, elements_82107)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1938)
        list_82109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1938, 53), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1938)
        # Adding element type (line 1938)
        
        # Call to SsGlue(...): (line 1938)
        # Processing the call keyword arguments (line 1938)
        kwargs_82111 = {}
        # Getting the type of 'SsGlue' (line 1938)
        SsGlue_82110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1938, 54), 'SsGlue', False)
        # Calling SsGlue(args, kwargs) (line 1938)
        SsGlue_call_result_82112 = invoke(stypy.reporting.localization.Localization(__file__, 1938, 54), SsGlue_82110, *[], **kwargs_82111)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1938, 53), list_82109, SsGlue_call_result_82112)
        
        # Applying the binary operator '+' (line 1938)
        result_add_82113 = python_operator(stypy.reporting.localization.Localization(__file__, 1938, 51), '+', result_add_82108, list_82109)
        
        # Processing the call keyword arguments (line 1938)
        kwargs_82114 = {}
        # Getting the type of 'Vlist' (line 1938)
        Vlist_82100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1938, 8), 'Vlist', False)
        # Obtaining the member '__init__' of a type (line 1938)
        init___82101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1938, 8), Vlist_82100, '__init__')
        # Calling __init__(args, kwargs) (line 1938)
        init___call_result_82115 = invoke(stypy.reporting.localization.Localization(__file__, 1938, 8), init___82101, *[self_82102, result_add_82113], **kwargs_82114)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'VCentered' (line 1932)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1932, 0), 'VCentered', VCentered)
# Declaration of the 'Kern' class
# Getting the type of 'Node' (line 1940)
Node_82116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1940, 11), 'Node')

class Kern(Node_82116, ):
    unicode_82117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1949, (-1)), 'unicode', u'\n    A :class:`Kern` node has a width field to specify a (normally\n    negative) amount of spacing. This spacing correction appears in\n    horizontal lists between letters like A and V when the font\n    designer said that it looks better to move them closer together or\n    further apart. A kern node can also appear in a vertical list,\n    when its *width* denotes additional spacing in the vertical\n    direction.\n    ')
    
    # Assigning a Num to a Name (line 1950):
    
    # Assigning a Num to a Name (line 1951):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1953, 4, False)
        # Assigning a type to the variable 'self' (line 1954)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1954, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Kern.__init__', ['width'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['width'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1954)
        # Processing the call arguments (line 1954)
        # Getting the type of 'self' (line 1954)
        self_82120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1954, 22), 'self', False)
        # Processing the call keyword arguments (line 1954)
        kwargs_82121 = {}
        # Getting the type of 'Node' (line 1954)
        Node_82118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1954, 8), 'Node', False)
        # Obtaining the member '__init__' of a type (line 1954)
        init___82119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1954, 8), Node_82118, '__init__')
        # Calling __init__(args, kwargs) (line 1954)
        init___call_result_82122 = invoke(stypy.reporting.localization.Localization(__file__, 1954, 8), init___82119, *[self_82120], **kwargs_82121)
        
        
        # Assigning a Name to a Attribute (line 1955):
        
        # Assigning a Name to a Attribute (line 1955):
        # Getting the type of 'width' (line 1955)
        width_82123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1955, 21), 'width')
        # Getting the type of 'self' (line 1955)
        self_82124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1955, 8), 'self')
        # Setting the type of the member 'width' of a type (line 1955)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1955, 8), self_82124, 'width', width_82123)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def stypy__repr__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__repr__'
        module_type_store = module_type_store.open_function_context('__repr__', 1957, 4, False)
        # Assigning a type to the variable 'self' (line 1958)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1958, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Kern.stypy__repr__.__dict__.__setitem__('stypy_localization', localization)
        Kern.stypy__repr__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Kern.stypy__repr__.__dict__.__setitem__('stypy_type_store', module_type_store)
        Kern.stypy__repr__.__dict__.__setitem__('stypy_function_name', 'Kern.stypy__repr__')
        Kern.stypy__repr__.__dict__.__setitem__('stypy_param_names_list', [])
        Kern.stypy__repr__.__dict__.__setitem__('stypy_varargs_param_name', None)
        Kern.stypy__repr__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Kern.stypy__repr__.__dict__.__setitem__('stypy_call_defaults', defaults)
        Kern.stypy__repr__.__dict__.__setitem__('stypy_call_varargs', varargs)
        Kern.stypy__repr__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Kern.stypy__repr__.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Kern.stypy__repr__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__repr__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__repr__(...)' code ##################

        unicode_82125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1958, 15), 'unicode', u'k%.02f')
        # Getting the type of 'self' (line 1958)
        self_82126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1958, 26), 'self')
        # Obtaining the member 'width' of a type (line 1958)
        width_82127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1958, 26), self_82126, 'width')
        # Applying the binary operator '%' (line 1958)
        result_mod_82128 = python_operator(stypy.reporting.localization.Localization(__file__, 1958, 15), '%', unicode_82125, width_82127)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1958)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1958, 8), 'stypy_return_type', result_mod_82128)
        
        # ################# End of '__repr__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__repr__' in the type store
        # Getting the type of 'stypy_return_type' (line 1957)
        stypy_return_type_82129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_82129)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__repr__'
        return stypy_return_type_82129


    @norecursion
    def shrink(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'shrink'
        module_type_store = module_type_store.open_function_context('shrink', 1960, 4, False)
        # Assigning a type to the variable 'self' (line 1961)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1961, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Kern.shrink.__dict__.__setitem__('stypy_localization', localization)
        Kern.shrink.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Kern.shrink.__dict__.__setitem__('stypy_type_store', module_type_store)
        Kern.shrink.__dict__.__setitem__('stypy_function_name', 'Kern.shrink')
        Kern.shrink.__dict__.__setitem__('stypy_param_names_list', [])
        Kern.shrink.__dict__.__setitem__('stypy_varargs_param_name', None)
        Kern.shrink.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Kern.shrink.__dict__.__setitem__('stypy_call_defaults', defaults)
        Kern.shrink.__dict__.__setitem__('stypy_call_varargs', varargs)
        Kern.shrink.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Kern.shrink.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Kern.shrink', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'shrink', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'shrink(...)' code ##################

        
        # Call to shrink(...): (line 1961)
        # Processing the call arguments (line 1961)
        # Getting the type of 'self' (line 1961)
        self_82132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1961, 20), 'self', False)
        # Processing the call keyword arguments (line 1961)
        kwargs_82133 = {}
        # Getting the type of 'Node' (line 1961)
        Node_82130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1961, 8), 'Node', False)
        # Obtaining the member 'shrink' of a type (line 1961)
        shrink_82131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1961, 8), Node_82130, 'shrink')
        # Calling shrink(args, kwargs) (line 1961)
        shrink_call_result_82134 = invoke(stypy.reporting.localization.Localization(__file__, 1961, 8), shrink_82131, *[self_82132], **kwargs_82133)
        
        
        
        # Getting the type of 'self' (line 1962)
        self_82135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1962, 11), 'self')
        # Obtaining the member 'size' of a type (line 1962)
        size_82136 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1962, 11), self_82135, 'size')
        # Getting the type of 'NUM_SIZE_LEVELS' (line 1962)
        NUM_SIZE_LEVELS_82137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1962, 23), 'NUM_SIZE_LEVELS')
        # Applying the binary operator '<' (line 1962)
        result_lt_82138 = python_operator(stypy.reporting.localization.Localization(__file__, 1962, 11), '<', size_82136, NUM_SIZE_LEVELS_82137)
        
        # Testing the type of an if condition (line 1962)
        if_condition_82139 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1962, 8), result_lt_82138)
        # Assigning a type to the variable 'if_condition_82139' (line 1962)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1962, 8), 'if_condition_82139', if_condition_82139)
        # SSA begins for if statement (line 1962)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'self' (line 1963)
        self_82140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1963, 12), 'self')
        # Obtaining the member 'width' of a type (line 1963)
        width_82141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1963, 12), self_82140, 'width')
        # Getting the type of 'SHRINK_FACTOR' (line 1963)
        SHRINK_FACTOR_82142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1963, 26), 'SHRINK_FACTOR')
        # Applying the binary operator '*=' (line 1963)
        result_imul_82143 = python_operator(stypy.reporting.localization.Localization(__file__, 1963, 12), '*=', width_82141, SHRINK_FACTOR_82142)
        # Getting the type of 'self' (line 1963)
        self_82144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1963, 12), 'self')
        # Setting the type of the member 'width' of a type (line 1963)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1963, 12), self_82144, 'width', result_imul_82143)
        
        # SSA join for if statement (line 1962)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'shrink(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'shrink' in the type store
        # Getting the type of 'stypy_return_type' (line 1960)
        stypy_return_type_82145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1960, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_82145)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'shrink'
        return stypy_return_type_82145


    @norecursion
    def grow(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'grow'
        module_type_store = module_type_store.open_function_context('grow', 1965, 4, False)
        # Assigning a type to the variable 'self' (line 1966)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1966, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Kern.grow.__dict__.__setitem__('stypy_localization', localization)
        Kern.grow.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Kern.grow.__dict__.__setitem__('stypy_type_store', module_type_store)
        Kern.grow.__dict__.__setitem__('stypy_function_name', 'Kern.grow')
        Kern.grow.__dict__.__setitem__('stypy_param_names_list', [])
        Kern.grow.__dict__.__setitem__('stypy_varargs_param_name', None)
        Kern.grow.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Kern.grow.__dict__.__setitem__('stypy_call_defaults', defaults)
        Kern.grow.__dict__.__setitem__('stypy_call_varargs', varargs)
        Kern.grow.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Kern.grow.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Kern.grow', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'grow', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'grow(...)' code ##################

        
        # Call to grow(...): (line 1966)
        # Processing the call arguments (line 1966)
        # Getting the type of 'self' (line 1966)
        self_82148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1966, 18), 'self', False)
        # Processing the call keyword arguments (line 1966)
        kwargs_82149 = {}
        # Getting the type of 'Node' (line 1966)
        Node_82146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1966, 8), 'Node', False)
        # Obtaining the member 'grow' of a type (line 1966)
        grow_82147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1966, 8), Node_82146, 'grow')
        # Calling grow(args, kwargs) (line 1966)
        grow_call_result_82150 = invoke(stypy.reporting.localization.Localization(__file__, 1966, 8), grow_82147, *[self_82148], **kwargs_82149)
        
        
        # Getting the type of 'self' (line 1967)
        self_82151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1967, 8), 'self')
        # Obtaining the member 'width' of a type (line 1967)
        width_82152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1967, 8), self_82151, 'width')
        # Getting the type of 'GROW_FACTOR' (line 1967)
        GROW_FACTOR_82153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1967, 22), 'GROW_FACTOR')
        # Applying the binary operator '*=' (line 1967)
        result_imul_82154 = python_operator(stypy.reporting.localization.Localization(__file__, 1967, 8), '*=', width_82152, GROW_FACTOR_82153)
        # Getting the type of 'self' (line 1967)
        self_82155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1967, 8), 'self')
        # Setting the type of the member 'width' of a type (line 1967)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1967, 8), self_82155, 'width', result_imul_82154)
        
        
        # ################# End of 'grow(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'grow' in the type store
        # Getting the type of 'stypy_return_type' (line 1965)
        stypy_return_type_82156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1965, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_82156)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'grow'
        return stypy_return_type_82156


# Assigning a type to the variable 'Kern' (line 1940)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1940, 0), 'Kern', Kern)

# Assigning a Num to a Name (line 1950):
int_82157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1950, 13), 'int')
# Getting the type of 'Kern'
Kern_82158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Kern')
# Setting the type of the member 'height' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Kern_82158, 'height', int_82157)

# Assigning a Num to a Name (line 1951):
int_82159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1951, 12), 'int')
# Getting the type of 'Kern'
Kern_82160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Kern')
# Setting the type of the member 'depth' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Kern_82160, 'depth', int_82159)
# Declaration of the 'SubSuperCluster' class
# Getting the type of 'Hlist' (line 1969)
Hlist_82161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1969, 22), 'Hlist')

class SubSuperCluster(Hlist_82161, ):
    unicode_82162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1976, (-1)), 'unicode', u'\n    :class:`SubSuperCluster` is a sort of hack to get around that fact\n    that this code do a two-pass parse like TeX.  This lets us store\n    enough information in the hlist itself, namely the nucleus, sub-\n    and super-script, such that if another script follows that needs\n    to be attached, it can be reconfigured on the fly.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1977, 4, False)
        # Assigning a type to the variable 'self' (line 1978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1978, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'SubSuperCluster.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 1978):
        
        # Assigning a Name to a Attribute (line 1978):
        # Getting the type of 'None' (line 1978)
        None_82163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1978, 23), 'None')
        # Getting the type of 'self' (line 1978)
        self_82164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1978, 8), 'self')
        # Setting the type of the member 'nucleus' of a type (line 1978)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1978, 8), self_82164, 'nucleus', None_82163)
        
        # Assigning a Name to a Attribute (line 1979):
        
        # Assigning a Name to a Attribute (line 1979):
        # Getting the type of 'None' (line 1979)
        None_82165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1979, 19), 'None')
        # Getting the type of 'self' (line 1979)
        self_82166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1979, 8), 'self')
        # Setting the type of the member 'sub' of a type (line 1979)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1979, 8), self_82166, 'sub', None_82165)
        
        # Assigning a Name to a Attribute (line 1980):
        
        # Assigning a Name to a Attribute (line 1980):
        # Getting the type of 'None' (line 1980)
        None_82167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1980, 21), 'None')
        # Getting the type of 'self' (line 1980)
        self_82168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1980, 8), 'self')
        # Setting the type of the member 'super' of a type (line 1980)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1980, 8), self_82168, 'super', None_82167)
        
        # Call to __init__(...): (line 1981)
        # Processing the call arguments (line 1981)
        # Getting the type of 'self' (line 1981)
        self_82171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1981, 23), 'self', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1981)
        list_82172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1981, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1981)
        
        # Processing the call keyword arguments (line 1981)
        kwargs_82173 = {}
        # Getting the type of 'Hlist' (line 1981)
        Hlist_82169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1981, 8), 'Hlist', False)
        # Obtaining the member '__init__' of a type (line 1981)
        init___82170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1981, 8), Hlist_82169, '__init__')
        # Calling __init__(args, kwargs) (line 1981)
        init___call_result_82174 = invoke(stypy.reporting.localization.Localization(__file__, 1981, 8), init___82170, *[self_82171, list_82172], **kwargs_82173)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'SubSuperCluster' (line 1969)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1969, 0), 'SubSuperCluster', SubSuperCluster)
# Declaration of the 'AutoHeightChar' class
# Getting the type of 'Hlist' (line 1983)
Hlist_82175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1983, 21), 'Hlist')

class AutoHeightChar(Hlist_82175, ):
    unicode_82176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1990, (-1)), 'unicode', u'\n    :class:`AutoHeightChar` will create a character as close to the\n    given height and depth as possible.  When using a font with\n    multiple height versions of some characters (such as the BaKoMa\n    fonts), the correct glyph will be selected, otherwise this will\n    always just return a scaled version of the glyph.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'False' (line 1991)
        False_82177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1991, 55), 'False')
        # Getting the type of 'None' (line 1991)
        None_82178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1991, 69), 'None')
        defaults = [False_82177, None_82178]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1991, 4, False)
        # Assigning a type to the variable 'self' (line 1992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1992, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AutoHeightChar.__init__', ['c', 'height', 'depth', 'state', 'always', 'factor'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['c', 'height', 'depth', 'state', 'always', 'factor'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Call to a Name (line 1992):
        
        # Assigning a Call to a Name (line 1992):
        
        # Call to get_sized_alternatives_for_symbol(...): (line 1992)
        # Processing the call arguments (line 1992)
        # Getting the type of 'state' (line 1993)
        state_82182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1993, 12), 'state', False)
        # Obtaining the member 'font' of a type (line 1993)
        font_82183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1993, 12), state_82182, 'font')
        # Getting the type of 'c' (line 1993)
        c_82184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1993, 24), 'c', False)
        # Processing the call keyword arguments (line 1992)
        kwargs_82185 = {}
        # Getting the type of 'state' (line 1992)
        state_82179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1992, 23), 'state', False)
        # Obtaining the member 'font_output' of a type (line 1992)
        font_output_82180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1992, 23), state_82179, 'font_output')
        # Obtaining the member 'get_sized_alternatives_for_symbol' of a type (line 1992)
        get_sized_alternatives_for_symbol_82181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1992, 23), font_output_82180, 'get_sized_alternatives_for_symbol')
        # Calling get_sized_alternatives_for_symbol(args, kwargs) (line 1992)
        get_sized_alternatives_for_symbol_call_result_82186 = invoke(stypy.reporting.localization.Localization(__file__, 1992, 23), get_sized_alternatives_for_symbol_82181, *[font_82183, c_82184], **kwargs_82185)
        
        # Assigning a type to the variable 'alternatives' (line 1992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1992, 8), 'alternatives', get_sized_alternatives_for_symbol_call_result_82186)
        
        # Assigning a Call to a Name (line 1995):
        
        # Assigning a Call to a Name (line 1995):
        
        # Call to get_xheight(...): (line 1995)
        # Processing the call arguments (line 1995)
        # Getting the type of 'state' (line 1996)
        state_82190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1996, 12), 'state', False)
        # Obtaining the member 'font' of a type (line 1996)
        font_82191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1996, 12), state_82190, 'font')
        # Getting the type of 'state' (line 1996)
        state_82192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1996, 24), 'state', False)
        # Obtaining the member 'fontsize' of a type (line 1996)
        fontsize_82193 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1996, 24), state_82192, 'fontsize')
        # Getting the type of 'state' (line 1996)
        state_82194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1996, 40), 'state', False)
        # Obtaining the member 'dpi' of a type (line 1996)
        dpi_82195 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1996, 40), state_82194, 'dpi')
        # Processing the call keyword arguments (line 1995)
        kwargs_82196 = {}
        # Getting the type of 'state' (line 1995)
        state_82187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1995, 18), 'state', False)
        # Obtaining the member 'font_output' of a type (line 1995)
        font_output_82188 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1995, 18), state_82187, 'font_output')
        # Obtaining the member 'get_xheight' of a type (line 1995)
        get_xheight_82189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1995, 18), font_output_82188, 'get_xheight')
        # Calling get_xheight(args, kwargs) (line 1995)
        get_xheight_call_result_82197 = invoke(stypy.reporting.localization.Localization(__file__, 1995, 18), get_xheight_82189, *[font_82191, fontsize_82193, dpi_82195], **kwargs_82196)
        
        # Assigning a type to the variable 'xHeight' (line 1995)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1995, 8), 'xHeight', get_xheight_call_result_82197)
        
        # Assigning a Call to a Name (line 1998):
        
        # Assigning a Call to a Name (line 1998):
        
        # Call to copy(...): (line 1998)
        # Processing the call keyword arguments (line 1998)
        kwargs_82200 = {}
        # Getting the type of 'state' (line 1998)
        state_82198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1998, 16), 'state', False)
        # Obtaining the member 'copy' of a type (line 1998)
        copy_82199 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1998, 16), state_82198, 'copy')
        # Calling copy(args, kwargs) (line 1998)
        copy_call_result_82201 = invoke(stypy.reporting.localization.Localization(__file__, 1998, 16), copy_82199, *[], **kwargs_82200)
        
        # Assigning a type to the variable 'state' (line 1998)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1998, 8), 'state', copy_call_result_82201)
        
        # Assigning a BinOp to a Name (line 1999):
        
        # Assigning a BinOp to a Name (line 1999):
        # Getting the type of 'height' (line 1999)
        height_82202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1999, 23), 'height')
        # Getting the type of 'depth' (line 1999)
        depth_82203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1999, 32), 'depth')
        # Applying the binary operator '+' (line 1999)
        result_add_82204 = python_operator(stypy.reporting.localization.Localization(__file__, 1999, 23), '+', height_82202, depth_82203)
        
        # Assigning a type to the variable 'target_total' (line 1999)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1999, 8), 'target_total', result_add_82204)
        
        # Getting the type of 'alternatives' (line 2000)
        alternatives_82205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2000, 29), 'alternatives')
        # Testing the type of a for loop iterable (line 2000)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2000, 8), alternatives_82205)
        # Getting the type of the for loop variable (line 2000)
        for_loop_var_82206 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2000, 8), alternatives_82205)
        # Assigning a type to the variable 'fontname' (line 2000)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2000, 8), 'fontname', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2000, 8), for_loop_var_82206))
        # Assigning a type to the variable 'sym' (line 2000)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2000, 8), 'sym', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2000, 8), for_loop_var_82206))
        # SSA begins for a for statement (line 2000)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Name to a Attribute (line 2001):
        
        # Assigning a Name to a Attribute (line 2001):
        # Getting the type of 'fontname' (line 2001)
        fontname_82207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2001, 25), 'fontname')
        # Getting the type of 'state' (line 2001)
        state_82208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2001, 12), 'state')
        # Setting the type of the member 'font' of a type (line 2001)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2001, 12), state_82208, 'font', fontname_82207)
        
        # Assigning a Call to a Name (line 2002):
        
        # Assigning a Call to a Name (line 2002):
        
        # Call to Char(...): (line 2002)
        # Processing the call arguments (line 2002)
        # Getting the type of 'sym' (line 2002)
        sym_82210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 24), 'sym', False)
        # Getting the type of 'state' (line 2002)
        state_82211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 29), 'state', False)
        # Processing the call keyword arguments (line 2002)
        kwargs_82212 = {}
        # Getting the type of 'Char' (line 2002)
        Char_82209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 19), 'Char', False)
        # Calling Char(args, kwargs) (line 2002)
        Char_call_result_82213 = invoke(stypy.reporting.localization.Localization(__file__, 2002, 19), Char_82209, *[sym_82210, state_82211], **kwargs_82212)
        
        # Assigning a type to the variable 'char' (line 2002)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2002, 12), 'char', Char_call_result_82213)
        
        
        # Getting the type of 'char' (line 2005)
        char_82214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2005, 15), 'char')
        # Obtaining the member 'height' of a type (line 2005)
        height_82215 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2005, 15), char_82214, 'height')
        # Getting the type of 'char' (line 2005)
        char_82216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2005, 29), 'char')
        # Obtaining the member 'depth' of a type (line 2005)
        depth_82217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2005, 29), char_82216, 'depth')
        # Applying the binary operator '+' (line 2005)
        result_add_82218 = python_operator(stypy.reporting.localization.Localization(__file__, 2005, 15), '+', height_82215, depth_82217)
        
        # Getting the type of 'target_total' (line 2005)
        target_total_82219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2005, 43), 'target_total')
        float_82220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2005, 58), 'float')
        # Getting the type of 'xHeight' (line 2005)
        xHeight_82221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2005, 64), 'xHeight')
        # Applying the binary operator '*' (line 2005)
        result_mul_82222 = python_operator(stypy.reporting.localization.Localization(__file__, 2005, 58), '*', float_82220, xHeight_82221)
        
        # Applying the binary operator '-' (line 2005)
        result_sub_82223 = python_operator(stypy.reporting.localization.Localization(__file__, 2005, 43), '-', target_total_82219, result_mul_82222)
        
        # Applying the binary operator '>=' (line 2005)
        result_ge_82224 = python_operator(stypy.reporting.localization.Localization(__file__, 2005, 15), '>=', result_add_82218, result_sub_82223)
        
        # Testing the type of an if condition (line 2005)
        if_condition_82225 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2005, 12), result_ge_82224)
        # Assigning a type to the variable 'if_condition_82225' (line 2005)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2005, 12), 'if_condition_82225', if_condition_82225)
        # SSA begins for if statement (line 2005)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # SSA join for if statement (line 2005)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Num to a Name (line 2008):
        
        # Assigning a Num to a Name (line 2008):
        int_82226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2008, 16), 'int')
        # Assigning a type to the variable 'shift' (line 2008)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2008, 8), 'shift', int_82226)
        
        
        # Getting the type of 'state' (line 2009)
        state_82227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2009, 11), 'state')
        # Obtaining the member 'font' of a type (line 2009)
        font_82228 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2009, 11), state_82227, 'font')
        int_82229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2009, 25), 'int')
        # Applying the binary operator '!=' (line 2009)
        result_ne_82230 = python_operator(stypy.reporting.localization.Localization(__file__, 2009, 11), '!=', font_82228, int_82229)
        
        # Testing the type of an if condition (line 2009)
        if_condition_82231 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2009, 8), result_ne_82230)
        # Assigning a type to the variable 'if_condition_82231' (line 2009)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2009, 8), 'if_condition_82231', if_condition_82231)
        # SSA begins for if statement (line 2009)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 2010)
        # Getting the type of 'factor' (line 2010)
        factor_82232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2010, 15), 'factor')
        # Getting the type of 'None' (line 2010)
        None_82233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2010, 25), 'None')
        
        (may_be_82234, more_types_in_union_82235) = may_be_none(factor_82232, None_82233)

        if may_be_82234:

            if more_types_in_union_82235:
                # Runtime conditional SSA (line 2010)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a BinOp to a Name (line 2011):
            
            # Assigning a BinOp to a Name (line 2011):
            # Getting the type of 'target_total' (line 2011)
            target_total_82236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2011, 26), 'target_total')
            # Getting the type of 'char' (line 2011)
            char_82237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2011, 43), 'char')
            # Obtaining the member 'height' of a type (line 2011)
            height_82238 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2011, 43), char_82237, 'height')
            # Getting the type of 'char' (line 2011)
            char_82239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2011, 57), 'char')
            # Obtaining the member 'depth' of a type (line 2011)
            depth_82240 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2011, 57), char_82239, 'depth')
            # Applying the binary operator '+' (line 2011)
            result_add_82241 = python_operator(stypy.reporting.localization.Localization(__file__, 2011, 43), '+', height_82238, depth_82240)
            
            # Applying the binary operator 'div' (line 2011)
            result_div_82242 = python_operator(stypy.reporting.localization.Localization(__file__, 2011, 25), 'div', target_total_82236, result_add_82241)
            
            # Assigning a type to the variable 'factor' (line 2011)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2011, 16), 'factor', result_div_82242)

            if more_types_in_union_82235:
                # SSA join for if statement (line 2010)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Getting the type of 'state' (line 2012)
        state_82243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2012, 12), 'state')
        # Obtaining the member 'fontsize' of a type (line 2012)
        fontsize_82244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2012, 12), state_82243, 'fontsize')
        # Getting the type of 'factor' (line 2012)
        factor_82245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2012, 30), 'factor')
        # Applying the binary operator '*=' (line 2012)
        result_imul_82246 = python_operator(stypy.reporting.localization.Localization(__file__, 2012, 12), '*=', fontsize_82244, factor_82245)
        # Getting the type of 'state' (line 2012)
        state_82247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2012, 12), 'state')
        # Setting the type of the member 'fontsize' of a type (line 2012)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2012, 12), state_82247, 'fontsize', result_imul_82246)
        
        
        # Assigning a Call to a Name (line 2013):
        
        # Assigning a Call to a Name (line 2013):
        
        # Call to Char(...): (line 2013)
        # Processing the call arguments (line 2013)
        # Getting the type of 'sym' (line 2013)
        sym_82249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2013, 24), 'sym', False)
        # Getting the type of 'state' (line 2013)
        state_82250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2013, 29), 'state', False)
        # Processing the call keyword arguments (line 2013)
        kwargs_82251 = {}
        # Getting the type of 'Char' (line 2013)
        Char_82248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2013, 19), 'Char', False)
        # Calling Char(args, kwargs) (line 2013)
        Char_call_result_82252 = invoke(stypy.reporting.localization.Localization(__file__, 2013, 19), Char_82248, *[sym_82249, state_82250], **kwargs_82251)
        
        # Assigning a type to the variable 'char' (line 2013)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2013, 12), 'char', Char_call_result_82252)
        
        # Assigning a BinOp to a Name (line 2015):
        
        # Assigning a BinOp to a Name (line 2015):
        # Getting the type of 'depth' (line 2015)
        depth_82253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2015, 21), 'depth')
        # Getting the type of 'char' (line 2015)
        char_82254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2015, 29), 'char')
        # Obtaining the member 'depth' of a type (line 2015)
        depth_82255 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2015, 29), char_82254, 'depth')
        # Applying the binary operator '-' (line 2015)
        result_sub_82256 = python_operator(stypy.reporting.localization.Localization(__file__, 2015, 21), '-', depth_82253, depth_82255)
        
        # Assigning a type to the variable 'shift' (line 2015)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2015, 12), 'shift', result_sub_82256)
        # SSA join for if statement (line 2009)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to __init__(...): (line 2017)
        # Processing the call arguments (line 2017)
        # Getting the type of 'self' (line 2017)
        self_82259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2017, 23), 'self', False)
        
        # Obtaining an instance of the builtin type 'list' (line 2017)
        list_82260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2017, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2017)
        # Adding element type (line 2017)
        # Getting the type of 'char' (line 2017)
        char_82261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2017, 30), 'char', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2017, 29), list_82260, char_82261)
        
        # Processing the call keyword arguments (line 2017)
        kwargs_82262 = {}
        # Getting the type of 'Hlist' (line 2017)
        Hlist_82257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2017, 8), 'Hlist', False)
        # Obtaining the member '__init__' of a type (line 2017)
        init___82258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2017, 8), Hlist_82257, '__init__')
        # Calling __init__(args, kwargs) (line 2017)
        init___call_result_82263 = invoke(stypy.reporting.localization.Localization(__file__, 2017, 8), init___82258, *[self_82259, list_82260], **kwargs_82262)
        
        
        # Assigning a Name to a Attribute (line 2018):
        
        # Assigning a Name to a Attribute (line 2018):
        # Getting the type of 'shift' (line 2018)
        shift_82264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2018, 28), 'shift')
        # Getting the type of 'self' (line 2018)
        self_82265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2018, 8), 'self')
        # Setting the type of the member 'shift_amount' of a type (line 2018)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2018, 8), self_82265, 'shift_amount', shift_82264)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'AutoHeightChar' (line 1983)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1983, 0), 'AutoHeightChar', AutoHeightChar)
# Declaration of the 'AutoWidthChar' class
# Getting the type of 'Hlist' (line 2020)
Hlist_82266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2020, 20), 'Hlist')

class AutoWidthChar(Hlist_82266, ):
    unicode_82267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2027, (-1)), 'unicode', u'\n    :class:`AutoWidthChar` will create a character as close to the\n    given width as possible.  When using a font with multiple width\n    versions of some characters (such as the BaKoMa fonts), the\n    correct glyph will be selected, otherwise this will always just\n    return a scaled version of the glyph.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'False' (line 2028)
        False_82268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2028, 47), 'False')
        # Getting the type of 'Char' (line 2028)
        Char_82269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2028, 65), 'Char')
        defaults = [False_82268, Char_82269]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 2028, 4, False)
        # Assigning a type to the variable 'self' (line 2029)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2029, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AutoWidthChar.__init__', ['c', 'width', 'state', 'always', 'char_class'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['c', 'width', 'state', 'always', 'char_class'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Call to a Name (line 2029):
        
        # Assigning a Call to a Name (line 2029):
        
        # Call to get_sized_alternatives_for_symbol(...): (line 2029)
        # Processing the call arguments (line 2029)
        # Getting the type of 'state' (line 2030)
        state_82273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2030, 12), 'state', False)
        # Obtaining the member 'font' of a type (line 2030)
        font_82274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2030, 12), state_82273, 'font')
        # Getting the type of 'c' (line 2030)
        c_82275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2030, 24), 'c', False)
        # Processing the call keyword arguments (line 2029)
        kwargs_82276 = {}
        # Getting the type of 'state' (line 2029)
        state_82270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2029, 23), 'state', False)
        # Obtaining the member 'font_output' of a type (line 2029)
        font_output_82271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2029, 23), state_82270, 'font_output')
        # Obtaining the member 'get_sized_alternatives_for_symbol' of a type (line 2029)
        get_sized_alternatives_for_symbol_82272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2029, 23), font_output_82271, 'get_sized_alternatives_for_symbol')
        # Calling get_sized_alternatives_for_symbol(args, kwargs) (line 2029)
        get_sized_alternatives_for_symbol_call_result_82277 = invoke(stypy.reporting.localization.Localization(__file__, 2029, 23), get_sized_alternatives_for_symbol_82272, *[font_82274, c_82275], **kwargs_82276)
        
        # Assigning a type to the variable 'alternatives' (line 2029)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2029, 8), 'alternatives', get_sized_alternatives_for_symbol_call_result_82277)
        
        # Assigning a Call to a Name (line 2032):
        
        # Assigning a Call to a Name (line 2032):
        
        # Call to copy(...): (line 2032)
        # Processing the call keyword arguments (line 2032)
        kwargs_82280 = {}
        # Getting the type of 'state' (line 2032)
        state_82278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2032, 16), 'state', False)
        # Obtaining the member 'copy' of a type (line 2032)
        copy_82279 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2032, 16), state_82278, 'copy')
        # Calling copy(args, kwargs) (line 2032)
        copy_call_result_82281 = invoke(stypy.reporting.localization.Localization(__file__, 2032, 16), copy_82279, *[], **kwargs_82280)
        
        # Assigning a type to the variable 'state' (line 2032)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2032, 8), 'state', copy_call_result_82281)
        
        # Getting the type of 'alternatives' (line 2033)
        alternatives_82282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2033, 29), 'alternatives')
        # Testing the type of a for loop iterable (line 2033)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2033, 8), alternatives_82282)
        # Getting the type of the for loop variable (line 2033)
        for_loop_var_82283 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2033, 8), alternatives_82282)
        # Assigning a type to the variable 'fontname' (line 2033)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2033, 8), 'fontname', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2033, 8), for_loop_var_82283))
        # Assigning a type to the variable 'sym' (line 2033)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2033, 8), 'sym', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2033, 8), for_loop_var_82283))
        # SSA begins for a for statement (line 2033)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Name to a Attribute (line 2034):
        
        # Assigning a Name to a Attribute (line 2034):
        # Getting the type of 'fontname' (line 2034)
        fontname_82284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2034, 25), 'fontname')
        # Getting the type of 'state' (line 2034)
        state_82285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2034, 12), 'state')
        # Setting the type of the member 'font' of a type (line 2034)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2034, 12), state_82285, 'font', fontname_82284)
        
        # Assigning a Call to a Name (line 2035):
        
        # Assigning a Call to a Name (line 2035):
        
        # Call to char_class(...): (line 2035)
        # Processing the call arguments (line 2035)
        # Getting the type of 'sym' (line 2035)
        sym_82287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2035, 30), 'sym', False)
        # Getting the type of 'state' (line 2035)
        state_82288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2035, 35), 'state', False)
        # Processing the call keyword arguments (line 2035)
        kwargs_82289 = {}
        # Getting the type of 'char_class' (line 2035)
        char_class_82286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2035, 19), 'char_class', False)
        # Calling char_class(args, kwargs) (line 2035)
        char_class_call_result_82290 = invoke(stypy.reporting.localization.Localization(__file__, 2035, 19), char_class_82286, *[sym_82287, state_82288], **kwargs_82289)
        
        # Assigning a type to the variable 'char' (line 2035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2035, 12), 'char', char_class_call_result_82290)
        
        
        # Getting the type of 'char' (line 2036)
        char_82291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2036, 15), 'char')
        # Obtaining the member 'width' of a type (line 2036)
        width_82292 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2036, 15), char_82291, 'width')
        # Getting the type of 'width' (line 2036)
        width_82293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2036, 29), 'width')
        # Applying the binary operator '>=' (line 2036)
        result_ge_82294 = python_operator(stypy.reporting.localization.Localization(__file__, 2036, 15), '>=', width_82292, width_82293)
        
        # Testing the type of an if condition (line 2036)
        if_condition_82295 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2036, 12), result_ge_82294)
        # Assigning a type to the variable 'if_condition_82295' (line 2036)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2036, 12), 'if_condition_82295', if_condition_82295)
        # SSA begins for if statement (line 2036)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # SSA join for if statement (line 2036)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 2039):
        
        # Assigning a BinOp to a Name (line 2039):
        # Getting the type of 'width' (line 2039)
        width_82296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2039, 17), 'width')
        # Getting the type of 'char' (line 2039)
        char_82297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2039, 25), 'char')
        # Obtaining the member 'width' of a type (line 2039)
        width_82298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2039, 25), char_82297, 'width')
        # Applying the binary operator 'div' (line 2039)
        result_div_82299 = python_operator(stypy.reporting.localization.Localization(__file__, 2039, 17), 'div', width_82296, width_82298)
        
        # Assigning a type to the variable 'factor' (line 2039)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2039, 8), 'factor', result_div_82299)
        
        # Getting the type of 'state' (line 2040)
        state_82300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2040, 8), 'state')
        # Obtaining the member 'fontsize' of a type (line 2040)
        fontsize_82301 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2040, 8), state_82300, 'fontsize')
        # Getting the type of 'factor' (line 2040)
        factor_82302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2040, 26), 'factor')
        # Applying the binary operator '*=' (line 2040)
        result_imul_82303 = python_operator(stypy.reporting.localization.Localization(__file__, 2040, 8), '*=', fontsize_82301, factor_82302)
        # Getting the type of 'state' (line 2040)
        state_82304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2040, 8), 'state')
        # Setting the type of the member 'fontsize' of a type (line 2040)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2040, 8), state_82304, 'fontsize', result_imul_82303)
        
        
        # Assigning a Call to a Name (line 2041):
        
        # Assigning a Call to a Name (line 2041):
        
        # Call to char_class(...): (line 2041)
        # Processing the call arguments (line 2041)
        # Getting the type of 'sym' (line 2041)
        sym_82306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2041, 26), 'sym', False)
        # Getting the type of 'state' (line 2041)
        state_82307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2041, 31), 'state', False)
        # Processing the call keyword arguments (line 2041)
        kwargs_82308 = {}
        # Getting the type of 'char_class' (line 2041)
        char_class_82305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2041, 15), 'char_class', False)
        # Calling char_class(args, kwargs) (line 2041)
        char_class_call_result_82309 = invoke(stypy.reporting.localization.Localization(__file__, 2041, 15), char_class_82305, *[sym_82306, state_82307], **kwargs_82308)
        
        # Assigning a type to the variable 'char' (line 2041)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2041, 8), 'char', char_class_call_result_82309)
        
        # Call to __init__(...): (line 2043)
        # Processing the call arguments (line 2043)
        # Getting the type of 'self' (line 2043)
        self_82312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2043, 23), 'self', False)
        
        # Obtaining an instance of the builtin type 'list' (line 2043)
        list_82313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2043, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2043)
        # Adding element type (line 2043)
        # Getting the type of 'char' (line 2043)
        char_82314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2043, 30), 'char', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2043, 29), list_82313, char_82314)
        
        # Processing the call keyword arguments (line 2043)
        kwargs_82315 = {}
        # Getting the type of 'Hlist' (line 2043)
        Hlist_82310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2043, 8), 'Hlist', False)
        # Obtaining the member '__init__' of a type (line 2043)
        init___82311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2043, 8), Hlist_82310, '__init__')
        # Calling __init__(args, kwargs) (line 2043)
        init___call_result_82316 = invoke(stypy.reporting.localization.Localization(__file__, 2043, 8), init___82311, *[self_82312, list_82313], **kwargs_82315)
        
        
        # Assigning a Attribute to a Attribute (line 2044):
        
        # Assigning a Attribute to a Attribute (line 2044):
        # Getting the type of 'char' (line 2044)
        char_82317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2044, 21), 'char')
        # Obtaining the member 'width' of a type (line 2044)
        width_82318 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2044, 21), char_82317, 'width')
        # Getting the type of 'self' (line 2044)
        self_82319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2044, 8), 'self')
        # Setting the type of the member 'width' of a type (line 2044)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2044, 8), self_82319, 'width', width_82318)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'AutoWidthChar' (line 2020)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2020, 0), 'AutoWidthChar', AutoWidthChar)
# Declaration of the 'Ship' class

class Ship(object, ):
    unicode_82320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2055, (-1)), 'unicode', u'\n    Once the boxes have been set up, this sends them to output.  Since\n    boxes can be inside of boxes inside of boxes, the main work of\n    :class:`Ship` is done by two mutually recursive routines,\n    :meth:`hlist_out` and :meth:`vlist_out`, which traverse the\n    :class:`Hlist` nodes and :class:`Vlist` nodes inside of horizontal\n    and vertical boxes.  The global variables used in TeX to store\n    state as it processes have become member variables here.\n    ')

    @norecursion
    def __call__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__call__'
        module_type_store = module_type_store.open_function_context('__call__', 2056, 4, False)
        # Assigning a type to the variable 'self' (line 2057)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2057, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Ship.__call__.__dict__.__setitem__('stypy_localization', localization)
        Ship.__call__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Ship.__call__.__dict__.__setitem__('stypy_type_store', module_type_store)
        Ship.__call__.__dict__.__setitem__('stypy_function_name', 'Ship.__call__')
        Ship.__call__.__dict__.__setitem__('stypy_param_names_list', ['ox', 'oy', 'box'])
        Ship.__call__.__dict__.__setitem__('stypy_varargs_param_name', None)
        Ship.__call__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Ship.__call__.__dict__.__setitem__('stypy_call_defaults', defaults)
        Ship.__call__.__dict__.__setitem__('stypy_call_varargs', varargs)
        Ship.__call__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Ship.__call__.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Ship.__call__', ['ox', 'oy', 'box'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__call__', localization, ['ox', 'oy', 'box'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__call__(...)' code ##################

        
        # Assigning a Num to a Attribute (line 2057):
        
        # Assigning a Num to a Attribute (line 2057):
        int_82321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2057, 27), 'int')
        # Getting the type of 'self' (line 2057)
        self_82322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2057, 8), 'self')
        # Setting the type of the member 'max_push' of a type (line 2057)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2057, 8), self_82322, 'max_push', int_82321)
        
        # Assigning a Num to a Attribute (line 2058):
        
        # Assigning a Num to a Attribute (line 2058):
        int_82323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2058, 27), 'int')
        # Getting the type of 'self' (line 2058)
        self_82324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2058, 8), 'self')
        # Setting the type of the member 'cur_s' of a type (line 2058)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2058, 8), self_82324, 'cur_s', int_82323)
        
        # Assigning a Num to a Attribute (line 2059):
        
        # Assigning a Num to a Attribute (line 2059):
        float_82325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2059, 27), 'float')
        # Getting the type of 'self' (line 2059)
        self_82326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2059, 8), 'self')
        # Setting the type of the member 'cur_v' of a type (line 2059)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2059, 8), self_82326, 'cur_v', float_82325)
        
        # Assigning a Num to a Attribute (line 2060):
        
        # Assigning a Num to a Attribute (line 2060):
        float_82327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2060, 27), 'float')
        # Getting the type of 'self' (line 2060)
        self_82328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2060, 8), 'self')
        # Setting the type of the member 'cur_h' of a type (line 2060)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2060, 8), self_82328, 'cur_h', float_82327)
        
        # Assigning a Name to a Attribute (line 2061):
        
        # Assigning a Name to a Attribute (line 2061):
        # Getting the type of 'ox' (line 2061)
        ox_82329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2061, 27), 'ox')
        # Getting the type of 'self' (line 2061)
        self_82330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2061, 8), 'self')
        # Setting the type of the member 'off_h' of a type (line 2061)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2061, 8), self_82330, 'off_h', ox_82329)
        
        # Assigning a BinOp to a Attribute (line 2062):
        
        # Assigning a BinOp to a Attribute (line 2062):
        # Getting the type of 'oy' (line 2062)
        oy_82331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2062, 27), 'oy')
        # Getting the type of 'box' (line 2062)
        box_82332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2062, 32), 'box')
        # Obtaining the member 'height' of a type (line 2062)
        height_82333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2062, 32), box_82332, 'height')
        # Applying the binary operator '+' (line 2062)
        result_add_82334 = python_operator(stypy.reporting.localization.Localization(__file__, 2062, 27), '+', oy_82331, height_82333)
        
        # Getting the type of 'self' (line 2062)
        self_82335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2062, 8), 'self')
        # Setting the type of the member 'off_v' of a type (line 2062)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2062, 8), self_82335, 'off_v', result_add_82334)
        
        # Call to hlist_out(...): (line 2063)
        # Processing the call arguments (line 2063)
        # Getting the type of 'box' (line 2063)
        box_82338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2063, 23), 'box', False)
        # Processing the call keyword arguments (line 2063)
        kwargs_82339 = {}
        # Getting the type of 'self' (line 2063)
        self_82336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2063, 8), 'self', False)
        # Obtaining the member 'hlist_out' of a type (line 2063)
        hlist_out_82337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2063, 8), self_82336, 'hlist_out')
        # Calling hlist_out(args, kwargs) (line 2063)
        hlist_out_call_result_82340 = invoke(stypy.reporting.localization.Localization(__file__, 2063, 8), hlist_out_82337, *[box_82338], **kwargs_82339)
        
        
        # ################# End of '__call__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__call__' in the type store
        # Getting the type of 'stypy_return_type' (line 2056)
        stypy_return_type_82341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2056, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_82341)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__call__'
        return stypy_return_type_82341


    @norecursion
    def clamp(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'clamp'
        module_type_store = module_type_store.open_function_context('clamp', 2065, 4, False)
        # Assigning a type to the variable 'self' (line 2066)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2066, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Ship.clamp.__dict__.__setitem__('stypy_localization', localization)
        Ship.clamp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Ship.clamp.__dict__.__setitem__('stypy_type_store', module_type_store)
        Ship.clamp.__dict__.__setitem__('stypy_function_name', 'Ship.clamp')
        Ship.clamp.__dict__.__setitem__('stypy_param_names_list', [])
        Ship.clamp.__dict__.__setitem__('stypy_varargs_param_name', None)
        Ship.clamp.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Ship.clamp.__dict__.__setitem__('stypy_call_defaults', defaults)
        Ship.clamp.__dict__.__setitem__('stypy_call_varargs', varargs)
        Ship.clamp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Ship.clamp.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Ship.clamp', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'clamp', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'clamp(...)' code ##################

        
        
        # Getting the type of 'value' (line 2066)
        value_82342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2066, 11), 'value')
        float_82343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2066, 19), 'float')
        # Applying the binary operator '<' (line 2066)
        result_lt_82344 = python_operator(stypy.reporting.localization.Localization(__file__, 2066, 11), '<', value_82342, float_82343)
        
        # Testing the type of an if condition (line 2066)
        if_condition_82345 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2066, 8), result_lt_82344)
        # Assigning a type to the variable 'if_condition_82345' (line 2066)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2066, 8), 'if_condition_82345', if_condition_82345)
        # SSA begins for if statement (line 2066)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        float_82346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2067, 19), 'float')
        # Assigning a type to the variable 'stypy_return_type' (line 2067)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2067, 12), 'stypy_return_type', float_82346)
        # SSA join for if statement (line 2066)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'value' (line 2068)
        value_82347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2068, 11), 'value')
        float_82348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2068, 19), 'float')
        # Applying the binary operator '>' (line 2068)
        result_gt_82349 = python_operator(stypy.reporting.localization.Localization(__file__, 2068, 11), '>', value_82347, float_82348)
        
        # Testing the type of an if condition (line 2068)
        if_condition_82350 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2068, 8), result_gt_82349)
        # Assigning a type to the variable 'if_condition_82350' (line 2068)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2068, 8), 'if_condition_82350', if_condition_82350)
        # SSA begins for if statement (line 2068)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        float_82351 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2069, 19), 'float')
        # Assigning a type to the variable 'stypy_return_type' (line 2069)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2069, 12), 'stypy_return_type', float_82351)
        # SSA join for if statement (line 2068)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'value' (line 2070)
        value_82352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2070, 15), 'value')
        # Assigning a type to the variable 'stypy_return_type' (line 2070)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2070, 8), 'stypy_return_type', value_82352)
        
        # ################# End of 'clamp(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'clamp' in the type store
        # Getting the type of 'stypy_return_type' (line 2065)
        stypy_return_type_82353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2065, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_82353)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'clamp'
        return stypy_return_type_82353

    
    # Assigning a Call to a Name (line 2071):

    @norecursion
    def hlist_out(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'hlist_out'
        module_type_store = module_type_store.open_function_context('hlist_out', 2073, 4, False)
        # Assigning a type to the variable 'self' (line 2074)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2074, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Ship.hlist_out.__dict__.__setitem__('stypy_localization', localization)
        Ship.hlist_out.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Ship.hlist_out.__dict__.__setitem__('stypy_type_store', module_type_store)
        Ship.hlist_out.__dict__.__setitem__('stypy_function_name', 'Ship.hlist_out')
        Ship.hlist_out.__dict__.__setitem__('stypy_param_names_list', ['box'])
        Ship.hlist_out.__dict__.__setitem__('stypy_varargs_param_name', None)
        Ship.hlist_out.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Ship.hlist_out.__dict__.__setitem__('stypy_call_defaults', defaults)
        Ship.hlist_out.__dict__.__setitem__('stypy_call_varargs', varargs)
        Ship.hlist_out.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Ship.hlist_out.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Ship.hlist_out', ['box'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'hlist_out', localization, ['box'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'hlist_out(...)' code ##################

        
        # Assigning a Num to a Name (line 2074):
        
        # Assigning a Num to a Name (line 2074):
        int_82354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2074, 24), 'int')
        # Assigning a type to the variable 'cur_g' (line 2074)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2074, 8), 'cur_g', int_82354)
        
        # Assigning a Num to a Name (line 2075):
        
        # Assigning a Num to a Name (line 2075):
        float_82355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2075, 24), 'float')
        # Assigning a type to the variable 'cur_glue' (line 2075)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2075, 8), 'cur_glue', float_82355)
        
        # Assigning a Attribute to a Name (line 2076):
        
        # Assigning a Attribute to a Name (line 2076):
        # Getting the type of 'box' (line 2076)
        box_82356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2076, 24), 'box')
        # Obtaining the member 'glue_order' of a type (line 2076)
        glue_order_82357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2076, 24), box_82356, 'glue_order')
        # Assigning a type to the variable 'glue_order' (line 2076)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2076, 8), 'glue_order', glue_order_82357)
        
        # Assigning a Attribute to a Name (line 2077):
        
        # Assigning a Attribute to a Name (line 2077):
        # Getting the type of 'box' (line 2077)
        box_82358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2077, 24), 'box')
        # Obtaining the member 'glue_sign' of a type (line 2077)
        glue_sign_82359 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2077, 24), box_82358, 'glue_sign')
        # Assigning a type to the variable 'glue_sign' (line 2077)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2077, 8), 'glue_sign', glue_sign_82359)
        
        # Assigning a Attribute to a Name (line 2078):
        
        # Assigning a Attribute to a Name (line 2078):
        # Getting the type of 'self' (line 2078)
        self_82360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2078, 24), 'self')
        # Obtaining the member 'cur_v' of a type (line 2078)
        cur_v_82361 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2078, 24), self_82360, 'cur_v')
        # Assigning a type to the variable 'base_line' (line 2078)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2078, 8), 'base_line', cur_v_82361)
        
        # Assigning a Attribute to a Name (line 2079):
        
        # Assigning a Attribute to a Name (line 2079):
        # Getting the type of 'self' (line 2079)
        self_82362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2079, 24), 'self')
        # Obtaining the member 'cur_h' of a type (line 2079)
        cur_h_82363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2079, 24), self_82362, 'cur_h')
        # Assigning a type to the variable 'left_edge' (line 2079)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2079, 8), 'left_edge', cur_h_82363)
        
        # Getting the type of 'self' (line 2080)
        self_82364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2080, 8), 'self')
        # Obtaining the member 'cur_s' of a type (line 2080)
        cur_s_82365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2080, 8), self_82364, 'cur_s')
        int_82366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2080, 25), 'int')
        # Applying the binary operator '+=' (line 2080)
        result_iadd_82367 = python_operator(stypy.reporting.localization.Localization(__file__, 2080, 8), '+=', cur_s_82365, int_82366)
        # Getting the type of 'self' (line 2080)
        self_82368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2080, 8), 'self')
        # Setting the type of the member 'cur_s' of a type (line 2080)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2080, 8), self_82368, 'cur_s', result_iadd_82367)
        
        
        # Assigning a Call to a Attribute (line 2081):
        
        # Assigning a Call to a Attribute (line 2081):
        
        # Call to max(...): (line 2081)
        # Processing the call arguments (line 2081)
        # Getting the type of 'self' (line 2081)
        self_82370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2081, 28), 'self', False)
        # Obtaining the member 'cur_s' of a type (line 2081)
        cur_s_82371 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2081, 28), self_82370, 'cur_s')
        # Getting the type of 'self' (line 2081)
        self_82372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2081, 40), 'self', False)
        # Obtaining the member 'max_push' of a type (line 2081)
        max_push_82373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2081, 40), self_82372, 'max_push')
        # Processing the call keyword arguments (line 2081)
        kwargs_82374 = {}
        # Getting the type of 'max' (line 2081)
        max_82369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2081, 24), 'max', False)
        # Calling max(args, kwargs) (line 2081)
        max_call_result_82375 = invoke(stypy.reporting.localization.Localization(__file__, 2081, 24), max_82369, *[cur_s_82371, max_push_82373], **kwargs_82374)
        
        # Getting the type of 'self' (line 2081)
        self_82376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2081, 8), 'self')
        # Setting the type of the member 'max_push' of a type (line 2081)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2081, 8), self_82376, 'max_push', max_call_result_82375)
        
        # Assigning a Attribute to a Name (line 2082):
        
        # Assigning a Attribute to a Name (line 2082):
        # Getting the type of 'self' (line 2082)
        self_82377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2082, 24), 'self')
        # Obtaining the member 'clamp' of a type (line 2082)
        clamp_82378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2082, 24), self_82377, 'clamp')
        # Assigning a type to the variable 'clamp' (line 2082)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2082, 8), 'clamp', clamp_82378)
        
        # Getting the type of 'box' (line 2084)
        box_82379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2084, 17), 'box')
        # Obtaining the member 'children' of a type (line 2084)
        children_82380 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2084, 17), box_82379, 'children')
        # Testing the type of a for loop iterable (line 2084)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2084, 8), children_82380)
        # Getting the type of the for loop variable (line 2084)
        for_loop_var_82381 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2084, 8), children_82380)
        # Assigning a type to the variable 'p' (line 2084)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2084, 8), 'p', for_loop_var_82381)
        # SSA begins for a for statement (line 2084)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Call to isinstance(...): (line 2085)
        # Processing the call arguments (line 2085)
        # Getting the type of 'p' (line 2085)
        p_82383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2085, 26), 'p', False)
        # Getting the type of 'Char' (line 2085)
        Char_82384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2085, 29), 'Char', False)
        # Processing the call keyword arguments (line 2085)
        kwargs_82385 = {}
        # Getting the type of 'isinstance' (line 2085)
        isinstance_82382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2085, 15), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2085)
        isinstance_call_result_82386 = invoke(stypy.reporting.localization.Localization(__file__, 2085, 15), isinstance_82382, *[p_82383, Char_82384], **kwargs_82385)
        
        # Testing the type of an if condition (line 2085)
        if_condition_82387 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2085, 12), isinstance_call_result_82386)
        # Assigning a type to the variable 'if_condition_82387' (line 2085)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2085, 12), 'if_condition_82387', if_condition_82387)
        # SSA begins for if statement (line 2085)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to render(...): (line 2086)
        # Processing the call arguments (line 2086)
        # Getting the type of 'self' (line 2086)
        self_82390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2086, 25), 'self', False)
        # Obtaining the member 'cur_h' of a type (line 2086)
        cur_h_82391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2086, 25), self_82390, 'cur_h')
        # Getting the type of 'self' (line 2086)
        self_82392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2086, 38), 'self', False)
        # Obtaining the member 'off_h' of a type (line 2086)
        off_h_82393 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2086, 38), self_82392, 'off_h')
        # Applying the binary operator '+' (line 2086)
        result_add_82394 = python_operator(stypy.reporting.localization.Localization(__file__, 2086, 25), '+', cur_h_82391, off_h_82393)
        
        # Getting the type of 'self' (line 2086)
        self_82395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2086, 50), 'self', False)
        # Obtaining the member 'cur_v' of a type (line 2086)
        cur_v_82396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2086, 50), self_82395, 'cur_v')
        # Getting the type of 'self' (line 2086)
        self_82397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2086, 63), 'self', False)
        # Obtaining the member 'off_v' of a type (line 2086)
        off_v_82398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2086, 63), self_82397, 'off_v')
        # Applying the binary operator '+' (line 2086)
        result_add_82399 = python_operator(stypy.reporting.localization.Localization(__file__, 2086, 50), '+', cur_v_82396, off_v_82398)
        
        # Processing the call keyword arguments (line 2086)
        kwargs_82400 = {}
        # Getting the type of 'p' (line 2086)
        p_82388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2086, 16), 'p', False)
        # Obtaining the member 'render' of a type (line 2086)
        render_82389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2086, 16), p_82388, 'render')
        # Calling render(args, kwargs) (line 2086)
        render_call_result_82401 = invoke(stypy.reporting.localization.Localization(__file__, 2086, 16), render_82389, *[result_add_82394, result_add_82399], **kwargs_82400)
        
        
        # Getting the type of 'self' (line 2087)
        self_82402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2087, 16), 'self')
        # Obtaining the member 'cur_h' of a type (line 2087)
        cur_h_82403 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2087, 16), self_82402, 'cur_h')
        # Getting the type of 'p' (line 2087)
        p_82404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2087, 30), 'p')
        # Obtaining the member 'width' of a type (line 2087)
        width_82405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2087, 30), p_82404, 'width')
        # Applying the binary operator '+=' (line 2087)
        result_iadd_82406 = python_operator(stypy.reporting.localization.Localization(__file__, 2087, 16), '+=', cur_h_82403, width_82405)
        # Getting the type of 'self' (line 2087)
        self_82407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2087, 16), 'self')
        # Setting the type of the member 'cur_h' of a type (line 2087)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2087, 16), self_82407, 'cur_h', result_iadd_82406)
        
        # SSA branch for the else part of an if statement (line 2085)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to isinstance(...): (line 2088)
        # Processing the call arguments (line 2088)
        # Getting the type of 'p' (line 2088)
        p_82409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2088, 28), 'p', False)
        # Getting the type of 'Kern' (line 2088)
        Kern_82410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2088, 31), 'Kern', False)
        # Processing the call keyword arguments (line 2088)
        kwargs_82411 = {}
        # Getting the type of 'isinstance' (line 2088)
        isinstance_82408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2088, 17), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2088)
        isinstance_call_result_82412 = invoke(stypy.reporting.localization.Localization(__file__, 2088, 17), isinstance_82408, *[p_82409, Kern_82410], **kwargs_82411)
        
        # Testing the type of an if condition (line 2088)
        if_condition_82413 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2088, 17), isinstance_call_result_82412)
        # Assigning a type to the variable 'if_condition_82413' (line 2088)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2088, 17), 'if_condition_82413', if_condition_82413)
        # SSA begins for if statement (line 2088)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'self' (line 2089)
        self_82414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2089, 16), 'self')
        # Obtaining the member 'cur_h' of a type (line 2089)
        cur_h_82415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2089, 16), self_82414, 'cur_h')
        # Getting the type of 'p' (line 2089)
        p_82416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2089, 30), 'p')
        # Obtaining the member 'width' of a type (line 2089)
        width_82417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2089, 30), p_82416, 'width')
        # Applying the binary operator '+=' (line 2089)
        result_iadd_82418 = python_operator(stypy.reporting.localization.Localization(__file__, 2089, 16), '+=', cur_h_82415, width_82417)
        # Getting the type of 'self' (line 2089)
        self_82419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2089, 16), 'self')
        # Setting the type of the member 'cur_h' of a type (line 2089)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2089, 16), self_82419, 'cur_h', result_iadd_82418)
        
        # SSA branch for the else part of an if statement (line 2088)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to isinstance(...): (line 2090)
        # Processing the call arguments (line 2090)
        # Getting the type of 'p' (line 2090)
        p_82421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2090, 28), 'p', False)
        # Getting the type of 'List' (line 2090)
        List_82422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2090, 31), 'List', False)
        # Processing the call keyword arguments (line 2090)
        kwargs_82423 = {}
        # Getting the type of 'isinstance' (line 2090)
        isinstance_82420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2090, 17), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2090)
        isinstance_call_result_82424 = invoke(stypy.reporting.localization.Localization(__file__, 2090, 17), isinstance_82420, *[p_82421, List_82422], **kwargs_82423)
        
        # Testing the type of an if condition (line 2090)
        if_condition_82425 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2090, 17), isinstance_call_result_82424)
        # Assigning a type to the variable 'if_condition_82425' (line 2090)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2090, 17), 'if_condition_82425', if_condition_82425)
        # SSA begins for if statement (line 2090)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        
        # Call to len(...): (line 2092)
        # Processing the call arguments (line 2092)
        # Getting the type of 'p' (line 2092)
        p_82427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2092, 23), 'p', False)
        # Obtaining the member 'children' of a type (line 2092)
        children_82428 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2092, 23), p_82427, 'children')
        # Processing the call keyword arguments (line 2092)
        kwargs_82429 = {}
        # Getting the type of 'len' (line 2092)
        len_82426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2092, 19), 'len', False)
        # Calling len(args, kwargs) (line 2092)
        len_call_result_82430 = invoke(stypy.reporting.localization.Localization(__file__, 2092, 19), len_82426, *[children_82428], **kwargs_82429)
        
        int_82431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2092, 38), 'int')
        # Applying the binary operator '==' (line 2092)
        result_eq_82432 = python_operator(stypy.reporting.localization.Localization(__file__, 2092, 19), '==', len_call_result_82430, int_82431)
        
        # Testing the type of an if condition (line 2092)
        if_condition_82433 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2092, 16), result_eq_82432)
        # Assigning a type to the variable 'if_condition_82433' (line 2092)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2092, 16), 'if_condition_82433', if_condition_82433)
        # SSA begins for if statement (line 2092)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'self' (line 2093)
        self_82434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2093, 20), 'self')
        # Obtaining the member 'cur_h' of a type (line 2093)
        cur_h_82435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2093, 20), self_82434, 'cur_h')
        # Getting the type of 'p' (line 2093)
        p_82436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2093, 34), 'p')
        # Obtaining the member 'width' of a type (line 2093)
        width_82437 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2093, 34), p_82436, 'width')
        # Applying the binary operator '+=' (line 2093)
        result_iadd_82438 = python_operator(stypy.reporting.localization.Localization(__file__, 2093, 20), '+=', cur_h_82435, width_82437)
        # Getting the type of 'self' (line 2093)
        self_82439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2093, 20), 'self')
        # Setting the type of the member 'cur_h' of a type (line 2093)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2093, 20), self_82439, 'cur_h', result_iadd_82438)
        
        # SSA branch for the else part of an if statement (line 2092)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Attribute to a Name (line 2095):
        
        # Assigning a Attribute to a Name (line 2095):
        # Getting the type of 'self' (line 2095)
        self_82440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2095, 27), 'self')
        # Obtaining the member 'cur_h' of a type (line 2095)
        cur_h_82441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2095, 27), self_82440, 'cur_h')
        # Assigning a type to the variable 'edge' (line 2095)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2095, 20), 'edge', cur_h_82441)
        
        # Assigning a BinOp to a Attribute (line 2096):
        
        # Assigning a BinOp to a Attribute (line 2096):
        # Getting the type of 'base_line' (line 2096)
        base_line_82442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2096, 33), 'base_line')
        # Getting the type of 'p' (line 2096)
        p_82443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2096, 45), 'p')
        # Obtaining the member 'shift_amount' of a type (line 2096)
        shift_amount_82444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2096, 45), p_82443, 'shift_amount')
        # Applying the binary operator '+' (line 2096)
        result_add_82445 = python_operator(stypy.reporting.localization.Localization(__file__, 2096, 33), '+', base_line_82442, shift_amount_82444)
        
        # Getting the type of 'self' (line 2096)
        self_82446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2096, 20), 'self')
        # Setting the type of the member 'cur_v' of a type (line 2096)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2096, 20), self_82446, 'cur_v', result_add_82445)
        
        
        # Call to isinstance(...): (line 2097)
        # Processing the call arguments (line 2097)
        # Getting the type of 'p' (line 2097)
        p_82448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2097, 34), 'p', False)
        # Getting the type of 'Hlist' (line 2097)
        Hlist_82449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2097, 37), 'Hlist', False)
        # Processing the call keyword arguments (line 2097)
        kwargs_82450 = {}
        # Getting the type of 'isinstance' (line 2097)
        isinstance_82447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2097, 23), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2097)
        isinstance_call_result_82451 = invoke(stypy.reporting.localization.Localization(__file__, 2097, 23), isinstance_82447, *[p_82448, Hlist_82449], **kwargs_82450)
        
        # Testing the type of an if condition (line 2097)
        if_condition_82452 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2097, 20), isinstance_call_result_82451)
        # Assigning a type to the variable 'if_condition_82452' (line 2097)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2097, 20), 'if_condition_82452', if_condition_82452)
        # SSA begins for if statement (line 2097)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to hlist_out(...): (line 2098)
        # Processing the call arguments (line 2098)
        # Getting the type of 'p' (line 2098)
        p_82455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2098, 39), 'p', False)
        # Processing the call keyword arguments (line 2098)
        kwargs_82456 = {}
        # Getting the type of 'self' (line 2098)
        self_82453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2098, 24), 'self', False)
        # Obtaining the member 'hlist_out' of a type (line 2098)
        hlist_out_82454 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2098, 24), self_82453, 'hlist_out')
        # Calling hlist_out(args, kwargs) (line 2098)
        hlist_out_call_result_82457 = invoke(stypy.reporting.localization.Localization(__file__, 2098, 24), hlist_out_82454, *[p_82455], **kwargs_82456)
        
        # SSA branch for the else part of an if statement (line 2097)
        module_type_store.open_ssa_branch('else')
        
        # Call to vlist_out(...): (line 2101)
        # Processing the call arguments (line 2101)
        # Getting the type of 'p' (line 2101)
        p_82460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2101, 39), 'p', False)
        # Processing the call keyword arguments (line 2101)
        kwargs_82461 = {}
        # Getting the type of 'self' (line 2101)
        self_82458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2101, 24), 'self', False)
        # Obtaining the member 'vlist_out' of a type (line 2101)
        vlist_out_82459 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2101, 24), self_82458, 'vlist_out')
        # Calling vlist_out(args, kwargs) (line 2101)
        vlist_out_call_result_82462 = invoke(stypy.reporting.localization.Localization(__file__, 2101, 24), vlist_out_82459, *[p_82460], **kwargs_82461)
        
        # SSA join for if statement (line 2097)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Attribute (line 2102):
        
        # Assigning a BinOp to a Attribute (line 2102):
        # Getting the type of 'edge' (line 2102)
        edge_82463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2102, 33), 'edge')
        # Getting the type of 'p' (line 2102)
        p_82464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2102, 40), 'p')
        # Obtaining the member 'width' of a type (line 2102)
        width_82465 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2102, 40), p_82464, 'width')
        # Applying the binary operator '+' (line 2102)
        result_add_82466 = python_operator(stypy.reporting.localization.Localization(__file__, 2102, 33), '+', edge_82463, width_82465)
        
        # Getting the type of 'self' (line 2102)
        self_82467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2102, 20), 'self')
        # Setting the type of the member 'cur_h' of a type (line 2102)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2102, 20), self_82467, 'cur_h', result_add_82466)
        
        # Assigning a Name to a Attribute (line 2103):
        
        # Assigning a Name to a Attribute (line 2103):
        # Getting the type of 'base_line' (line 2103)
        base_line_82468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2103, 33), 'base_line')
        # Getting the type of 'self' (line 2103)
        self_82469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2103, 20), 'self')
        # Setting the type of the member 'cur_v' of a type (line 2103)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2103, 20), self_82469, 'cur_v', base_line_82468)
        # SSA join for if statement (line 2092)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 2090)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to isinstance(...): (line 2104)
        # Processing the call arguments (line 2104)
        # Getting the type of 'p' (line 2104)
        p_82471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2104, 28), 'p', False)
        # Getting the type of 'Box' (line 2104)
        Box_82472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2104, 31), 'Box', False)
        # Processing the call keyword arguments (line 2104)
        kwargs_82473 = {}
        # Getting the type of 'isinstance' (line 2104)
        isinstance_82470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2104, 17), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2104)
        isinstance_call_result_82474 = invoke(stypy.reporting.localization.Localization(__file__, 2104, 17), isinstance_82470, *[p_82471, Box_82472], **kwargs_82473)
        
        # Testing the type of an if condition (line 2104)
        if_condition_82475 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2104, 17), isinstance_call_result_82474)
        # Assigning a type to the variable 'if_condition_82475' (line 2104)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2104, 17), 'if_condition_82475', if_condition_82475)
        # SSA begins for if statement (line 2104)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Name (line 2106):
        
        # Assigning a Attribute to a Name (line 2106):
        # Getting the type of 'p' (line 2106)
        p_82476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2106, 30), 'p')
        # Obtaining the member 'height' of a type (line 2106)
        height_82477 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2106, 30), p_82476, 'height')
        # Assigning a type to the variable 'rule_height' (line 2106)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2106, 16), 'rule_height', height_82477)
        
        # Assigning a Attribute to a Name (line 2107):
        
        # Assigning a Attribute to a Name (line 2107):
        # Getting the type of 'p' (line 2107)
        p_82478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2107, 30), 'p')
        # Obtaining the member 'depth' of a type (line 2107)
        depth_82479 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2107, 30), p_82478, 'depth')
        # Assigning a type to the variable 'rule_depth' (line 2107)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2107, 16), 'rule_depth', depth_82479)
        
        # Assigning a Attribute to a Name (line 2108):
        
        # Assigning a Attribute to a Name (line 2108):
        # Getting the type of 'p' (line 2108)
        p_82480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2108, 30), 'p')
        # Obtaining the member 'width' of a type (line 2108)
        width_82481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2108, 30), p_82480, 'width')
        # Assigning a type to the variable 'rule_width' (line 2108)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2108, 16), 'rule_width', width_82481)
        
        
        # Call to isinf(...): (line 2109)
        # Processing the call arguments (line 2109)
        # Getting the type of 'rule_height' (line 2109)
        rule_height_82483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2109, 25), 'rule_height', False)
        # Processing the call keyword arguments (line 2109)
        kwargs_82484 = {}
        # Getting the type of 'isinf' (line 2109)
        isinf_82482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2109, 19), 'isinf', False)
        # Calling isinf(args, kwargs) (line 2109)
        isinf_call_result_82485 = invoke(stypy.reporting.localization.Localization(__file__, 2109, 19), isinf_82482, *[rule_height_82483], **kwargs_82484)
        
        # Testing the type of an if condition (line 2109)
        if_condition_82486 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2109, 16), isinf_call_result_82485)
        # Assigning a type to the variable 'if_condition_82486' (line 2109)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2109, 16), 'if_condition_82486', if_condition_82486)
        # SSA begins for if statement (line 2109)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Name (line 2110):
        
        # Assigning a Attribute to a Name (line 2110):
        # Getting the type of 'box' (line 2110)
        box_82487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2110, 34), 'box')
        # Obtaining the member 'height' of a type (line 2110)
        height_82488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2110, 34), box_82487, 'height')
        # Assigning a type to the variable 'rule_height' (line 2110)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2110, 20), 'rule_height', height_82488)
        # SSA join for if statement (line 2109)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to isinf(...): (line 2111)
        # Processing the call arguments (line 2111)
        # Getting the type of 'rule_depth' (line 2111)
        rule_depth_82490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2111, 25), 'rule_depth', False)
        # Processing the call keyword arguments (line 2111)
        kwargs_82491 = {}
        # Getting the type of 'isinf' (line 2111)
        isinf_82489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2111, 19), 'isinf', False)
        # Calling isinf(args, kwargs) (line 2111)
        isinf_call_result_82492 = invoke(stypy.reporting.localization.Localization(__file__, 2111, 19), isinf_82489, *[rule_depth_82490], **kwargs_82491)
        
        # Testing the type of an if condition (line 2111)
        if_condition_82493 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2111, 16), isinf_call_result_82492)
        # Assigning a type to the variable 'if_condition_82493' (line 2111)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2111, 16), 'if_condition_82493', if_condition_82493)
        # SSA begins for if statement (line 2111)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Name (line 2112):
        
        # Assigning a Attribute to a Name (line 2112):
        # Getting the type of 'box' (line 2112)
        box_82494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2112, 33), 'box')
        # Obtaining the member 'depth' of a type (line 2112)
        depth_82495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2112, 33), box_82494, 'depth')
        # Assigning a type to the variable 'rule_depth' (line 2112)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2112, 20), 'rule_depth', depth_82495)
        # SSA join for if statement (line 2111)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'rule_height' (line 2113)
        rule_height_82496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2113, 19), 'rule_height')
        int_82497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2113, 33), 'int')
        # Applying the binary operator '>' (line 2113)
        result_gt_82498 = python_operator(stypy.reporting.localization.Localization(__file__, 2113, 19), '>', rule_height_82496, int_82497)
        
        
        # Getting the type of 'rule_width' (line 2113)
        rule_width_82499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2113, 39), 'rule_width')
        int_82500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2113, 52), 'int')
        # Applying the binary operator '>' (line 2113)
        result_gt_82501 = python_operator(stypy.reporting.localization.Localization(__file__, 2113, 39), '>', rule_width_82499, int_82500)
        
        # Applying the binary operator 'and' (line 2113)
        result_and_keyword_82502 = python_operator(stypy.reporting.localization.Localization(__file__, 2113, 19), 'and', result_gt_82498, result_gt_82501)
        
        # Testing the type of an if condition (line 2113)
        if_condition_82503 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2113, 16), result_and_keyword_82502)
        # Assigning a type to the variable 'if_condition_82503' (line 2113)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2113, 16), 'if_condition_82503', if_condition_82503)
        # SSA begins for if statement (line 2113)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Attribute (line 2114):
        
        # Assigning a BinOp to a Attribute (line 2114):
        # Getting the type of 'baseline' (line 2114)
        baseline_82504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2114, 33), 'baseline')
        # Getting the type of 'rule_depth' (line 2114)
        rule_depth_82505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2114, 44), 'rule_depth')
        # Applying the binary operator '+' (line 2114)
        result_add_82506 = python_operator(stypy.reporting.localization.Localization(__file__, 2114, 33), '+', baseline_82504, rule_depth_82505)
        
        # Getting the type of 'self' (line 2114)
        self_82507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2114, 20), 'self')
        # Setting the type of the member 'cur_v' of a type (line 2114)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2114, 20), self_82507, 'cur_v', result_add_82506)
        
        # Call to render(...): (line 2115)
        # Processing the call arguments (line 2115)
        # Getting the type of 'self' (line 2115)
        self_82510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2115, 29), 'self', False)
        # Obtaining the member 'cur_h' of a type (line 2115)
        cur_h_82511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2115, 29), self_82510, 'cur_h')
        # Getting the type of 'self' (line 2115)
        self_82512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2115, 42), 'self', False)
        # Obtaining the member 'off_h' of a type (line 2115)
        off_h_82513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2115, 42), self_82512, 'off_h')
        # Applying the binary operator '+' (line 2115)
        result_add_82514 = python_operator(stypy.reporting.localization.Localization(__file__, 2115, 29), '+', cur_h_82511, off_h_82513)
        
        # Getting the type of 'self' (line 2116)
        self_82515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2116, 29), 'self', False)
        # Obtaining the member 'cur_v' of a type (line 2116)
        cur_v_82516 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2116, 29), self_82515, 'cur_v')
        # Getting the type of 'self' (line 2116)
        self_82517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2116, 42), 'self', False)
        # Obtaining the member 'off_v' of a type (line 2116)
        off_v_82518 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2116, 42), self_82517, 'off_v')
        # Applying the binary operator '+' (line 2116)
        result_add_82519 = python_operator(stypy.reporting.localization.Localization(__file__, 2116, 29), '+', cur_v_82516, off_v_82518)
        
        # Getting the type of 'rule_width' (line 2117)
        rule_width_82520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2117, 29), 'rule_width', False)
        # Getting the type of 'rule_height' (line 2117)
        rule_height_82521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2117, 41), 'rule_height', False)
        # Processing the call keyword arguments (line 2115)
        kwargs_82522 = {}
        # Getting the type of 'p' (line 2115)
        p_82508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2115, 20), 'p', False)
        # Obtaining the member 'render' of a type (line 2115)
        render_82509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2115, 20), p_82508, 'render')
        # Calling render(args, kwargs) (line 2115)
        render_call_result_82523 = invoke(stypy.reporting.localization.Localization(__file__, 2115, 20), render_82509, *[result_add_82514, result_add_82519, rule_width_82520, rule_height_82521], **kwargs_82522)
        
        
        # Assigning a Name to a Attribute (line 2118):
        
        # Assigning a Name to a Attribute (line 2118):
        # Getting the type of 'baseline' (line 2118)
        baseline_82524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2118, 33), 'baseline')
        # Getting the type of 'self' (line 2118)
        self_82525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2118, 20), 'self')
        # Setting the type of the member 'cur_v' of a type (line 2118)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2118, 20), self_82525, 'cur_v', baseline_82524)
        # SSA join for if statement (line 2113)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'self' (line 2119)
        self_82526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2119, 16), 'self')
        # Obtaining the member 'cur_h' of a type (line 2119)
        cur_h_82527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2119, 16), self_82526, 'cur_h')
        # Getting the type of 'rule_width' (line 2119)
        rule_width_82528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2119, 30), 'rule_width')
        # Applying the binary operator '+=' (line 2119)
        result_iadd_82529 = python_operator(stypy.reporting.localization.Localization(__file__, 2119, 16), '+=', cur_h_82527, rule_width_82528)
        # Getting the type of 'self' (line 2119)
        self_82530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2119, 16), 'self')
        # Setting the type of the member 'cur_h' of a type (line 2119)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2119, 16), self_82530, 'cur_h', result_iadd_82529)
        
        # SSA branch for the else part of an if statement (line 2104)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to isinstance(...): (line 2120)
        # Processing the call arguments (line 2120)
        # Getting the type of 'p' (line 2120)
        p_82532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2120, 28), 'p', False)
        # Getting the type of 'Glue' (line 2120)
        Glue_82533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2120, 31), 'Glue', False)
        # Processing the call keyword arguments (line 2120)
        kwargs_82534 = {}
        # Getting the type of 'isinstance' (line 2120)
        isinstance_82531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2120, 17), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2120)
        isinstance_call_result_82535 = invoke(stypy.reporting.localization.Localization(__file__, 2120, 17), isinstance_82531, *[p_82532, Glue_82533], **kwargs_82534)
        
        # Testing the type of an if condition (line 2120)
        if_condition_82536 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2120, 17), isinstance_call_result_82535)
        # Assigning a type to the variable 'if_condition_82536' (line 2120)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2120, 17), 'if_condition_82536', if_condition_82536)
        # SSA begins for if statement (line 2120)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Name (line 2122):
        
        # Assigning a Attribute to a Name (line 2122):
        # Getting the type of 'p' (line 2122)
        p_82537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2122, 28), 'p')
        # Obtaining the member 'glue_spec' of a type (line 2122)
        glue_spec_82538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2122, 28), p_82537, 'glue_spec')
        # Assigning a type to the variable 'glue_spec' (line 2122)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2122, 16), 'glue_spec', glue_spec_82538)
        
        # Assigning a BinOp to a Name (line 2123):
        
        # Assigning a BinOp to a Name (line 2123):
        # Getting the type of 'glue_spec' (line 2123)
        glue_spec_82539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2123, 29), 'glue_spec')
        # Obtaining the member 'width' of a type (line 2123)
        width_82540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2123, 29), glue_spec_82539, 'width')
        # Getting the type of 'cur_g' (line 2123)
        cur_g_82541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2123, 47), 'cur_g')
        # Applying the binary operator '-' (line 2123)
        result_sub_82542 = python_operator(stypy.reporting.localization.Localization(__file__, 2123, 29), '-', width_82540, cur_g_82541)
        
        # Assigning a type to the variable 'rule_width' (line 2123)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2123, 16), 'rule_width', result_sub_82542)
        
        
        # Getting the type of 'glue_sign' (line 2124)
        glue_sign_82543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2124, 19), 'glue_sign')
        int_82544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2124, 32), 'int')
        # Applying the binary operator '!=' (line 2124)
        result_ne_82545 = python_operator(stypy.reporting.localization.Localization(__file__, 2124, 19), '!=', glue_sign_82543, int_82544)
        
        # Testing the type of an if condition (line 2124)
        if_condition_82546 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2124, 16), result_ne_82545)
        # Assigning a type to the variable 'if_condition_82546' (line 2124)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2124, 16), 'if_condition_82546', if_condition_82546)
        # SSA begins for if statement (line 2124)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'glue_sign' (line 2125)
        glue_sign_82547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2125, 23), 'glue_sign')
        int_82548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2125, 36), 'int')
        # Applying the binary operator '==' (line 2125)
        result_eq_82549 = python_operator(stypy.reporting.localization.Localization(__file__, 2125, 23), '==', glue_sign_82547, int_82548)
        
        # Testing the type of an if condition (line 2125)
        if_condition_82550 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2125, 20), result_eq_82549)
        # Assigning a type to the variable 'if_condition_82550' (line 2125)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2125, 20), 'if_condition_82550', if_condition_82550)
        # SSA begins for if statement (line 2125)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'glue_spec' (line 2126)
        glue_spec_82551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2126, 27), 'glue_spec')
        # Obtaining the member 'stretch_order' of a type (line 2126)
        stretch_order_82552 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2126, 27), glue_spec_82551, 'stretch_order')
        # Getting the type of 'glue_order' (line 2126)
        glue_order_82553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2126, 54), 'glue_order')
        # Applying the binary operator '==' (line 2126)
        result_eq_82554 = python_operator(stypy.reporting.localization.Localization(__file__, 2126, 27), '==', stretch_order_82552, glue_order_82553)
        
        # Testing the type of an if condition (line 2126)
        if_condition_82555 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2126, 24), result_eq_82554)
        # Assigning a type to the variable 'if_condition_82555' (line 2126)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2126, 24), 'if_condition_82555', if_condition_82555)
        # SSA begins for if statement (line 2126)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'cur_glue' (line 2127)
        cur_glue_82556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2127, 28), 'cur_glue')
        # Getting the type of 'glue_spec' (line 2127)
        glue_spec_82557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2127, 40), 'glue_spec')
        # Obtaining the member 'stretch' of a type (line 2127)
        stretch_82558 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2127, 40), glue_spec_82557, 'stretch')
        # Applying the binary operator '+=' (line 2127)
        result_iadd_82559 = python_operator(stypy.reporting.localization.Localization(__file__, 2127, 28), '+=', cur_glue_82556, stretch_82558)
        # Assigning a type to the variable 'cur_glue' (line 2127)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2127, 28), 'cur_glue', result_iadd_82559)
        
        
        # Assigning a Call to a Name (line 2128):
        
        # Assigning a Call to a Name (line 2128):
        
        # Call to round(...): (line 2128)
        # Processing the call arguments (line 2128)
        
        # Call to clamp(...): (line 2128)
        # Processing the call arguments (line 2128)
        
        # Call to float(...): (line 2128)
        # Processing the call arguments (line 2128)
        # Getting the type of 'box' (line 2128)
        box_82564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2128, 57), 'box', False)
        # Obtaining the member 'glue_set' of a type (line 2128)
        glue_set_82565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2128, 57), box_82564, 'glue_set')
        # Processing the call keyword arguments (line 2128)
        kwargs_82566 = {}
        # Getting the type of 'float' (line 2128)
        float_82563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2128, 51), 'float', False)
        # Calling float(args, kwargs) (line 2128)
        float_call_result_82567 = invoke(stypy.reporting.localization.Localization(__file__, 2128, 51), float_82563, *[glue_set_82565], **kwargs_82566)
        
        # Getting the type of 'cur_glue' (line 2128)
        cur_glue_82568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2128, 73), 'cur_glue', False)
        # Applying the binary operator '*' (line 2128)
        result_mul_82569 = python_operator(stypy.reporting.localization.Localization(__file__, 2128, 51), '*', float_call_result_82567, cur_glue_82568)
        
        # Processing the call keyword arguments (line 2128)
        kwargs_82570 = {}
        # Getting the type of 'clamp' (line 2128)
        clamp_82562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2128, 45), 'clamp', False)
        # Calling clamp(args, kwargs) (line 2128)
        clamp_call_result_82571 = invoke(stypy.reporting.localization.Localization(__file__, 2128, 45), clamp_82562, *[result_mul_82569], **kwargs_82570)
        
        # Processing the call keyword arguments (line 2128)
        kwargs_82572 = {}
        # Getting the type of 'np' (line 2128)
        np_82560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2128, 36), 'np', False)
        # Obtaining the member 'round' of a type (line 2128)
        round_82561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2128, 36), np_82560, 'round')
        # Calling round(args, kwargs) (line 2128)
        round_call_result_82573 = invoke(stypy.reporting.localization.Localization(__file__, 2128, 36), round_82561, *[clamp_call_result_82571], **kwargs_82572)
        
        # Assigning a type to the variable 'cur_g' (line 2128)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2128, 28), 'cur_g', round_call_result_82573)
        # SSA join for if statement (line 2126)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 2125)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'glue_spec' (line 2129)
        glue_spec_82574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2129, 25), 'glue_spec')
        # Obtaining the member 'shrink_order' of a type (line 2129)
        shrink_order_82575 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2129, 25), glue_spec_82574, 'shrink_order')
        # Getting the type of 'glue_order' (line 2129)
        glue_order_82576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2129, 51), 'glue_order')
        # Applying the binary operator '==' (line 2129)
        result_eq_82577 = python_operator(stypy.reporting.localization.Localization(__file__, 2129, 25), '==', shrink_order_82575, glue_order_82576)
        
        # Testing the type of an if condition (line 2129)
        if_condition_82578 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2129, 25), result_eq_82577)
        # Assigning a type to the variable 'if_condition_82578' (line 2129)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2129, 25), 'if_condition_82578', if_condition_82578)
        # SSA begins for if statement (line 2129)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'cur_glue' (line 2130)
        cur_glue_82579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2130, 24), 'cur_glue')
        # Getting the type of 'glue_spec' (line 2130)
        glue_spec_82580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2130, 36), 'glue_spec')
        # Obtaining the member 'shrink' of a type (line 2130)
        shrink_82581 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2130, 36), glue_spec_82580, 'shrink')
        # Applying the binary operator '+=' (line 2130)
        result_iadd_82582 = python_operator(stypy.reporting.localization.Localization(__file__, 2130, 24), '+=', cur_glue_82579, shrink_82581)
        # Assigning a type to the variable 'cur_glue' (line 2130)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2130, 24), 'cur_glue', result_iadd_82582)
        
        
        # Assigning a Call to a Name (line 2131):
        
        # Assigning a Call to a Name (line 2131):
        
        # Call to round(...): (line 2131)
        # Processing the call arguments (line 2131)
        
        # Call to clamp(...): (line 2131)
        # Processing the call arguments (line 2131)
        
        # Call to float(...): (line 2131)
        # Processing the call arguments (line 2131)
        # Getting the type of 'box' (line 2131)
        box_82587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2131, 53), 'box', False)
        # Obtaining the member 'glue_set' of a type (line 2131)
        glue_set_82588 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2131, 53), box_82587, 'glue_set')
        # Processing the call keyword arguments (line 2131)
        kwargs_82589 = {}
        # Getting the type of 'float' (line 2131)
        float_82586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2131, 47), 'float', False)
        # Calling float(args, kwargs) (line 2131)
        float_call_result_82590 = invoke(stypy.reporting.localization.Localization(__file__, 2131, 47), float_82586, *[glue_set_82588], **kwargs_82589)
        
        # Getting the type of 'cur_glue' (line 2131)
        cur_glue_82591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2131, 69), 'cur_glue', False)
        # Applying the binary operator '*' (line 2131)
        result_mul_82592 = python_operator(stypy.reporting.localization.Localization(__file__, 2131, 47), '*', float_call_result_82590, cur_glue_82591)
        
        # Processing the call keyword arguments (line 2131)
        kwargs_82593 = {}
        # Getting the type of 'clamp' (line 2131)
        clamp_82585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2131, 41), 'clamp', False)
        # Calling clamp(args, kwargs) (line 2131)
        clamp_call_result_82594 = invoke(stypy.reporting.localization.Localization(__file__, 2131, 41), clamp_82585, *[result_mul_82592], **kwargs_82593)
        
        # Processing the call keyword arguments (line 2131)
        kwargs_82595 = {}
        # Getting the type of 'np' (line 2131)
        np_82583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2131, 32), 'np', False)
        # Obtaining the member 'round' of a type (line 2131)
        round_82584 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2131, 32), np_82583, 'round')
        # Calling round(args, kwargs) (line 2131)
        round_call_result_82596 = invoke(stypy.reporting.localization.Localization(__file__, 2131, 32), round_82584, *[clamp_call_result_82594], **kwargs_82595)
        
        # Assigning a type to the variable 'cur_g' (line 2131)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2131, 24), 'cur_g', round_call_result_82596)
        # SSA join for if statement (line 2129)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2125)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2124)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'rule_width' (line 2132)
        rule_width_82597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2132, 16), 'rule_width')
        # Getting the type of 'cur_g' (line 2132)
        cur_g_82598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2132, 30), 'cur_g')
        # Applying the binary operator '+=' (line 2132)
        result_iadd_82599 = python_operator(stypy.reporting.localization.Localization(__file__, 2132, 16), '+=', rule_width_82597, cur_g_82598)
        # Assigning a type to the variable 'rule_width' (line 2132)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2132, 16), 'rule_width', result_iadd_82599)
        
        
        # Getting the type of 'self' (line 2133)
        self_82600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2133, 16), 'self')
        # Obtaining the member 'cur_h' of a type (line 2133)
        cur_h_82601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2133, 16), self_82600, 'cur_h')
        # Getting the type of 'rule_width' (line 2133)
        rule_width_82602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2133, 30), 'rule_width')
        # Applying the binary operator '+=' (line 2133)
        result_iadd_82603 = python_operator(stypy.reporting.localization.Localization(__file__, 2133, 16), '+=', cur_h_82601, rule_width_82602)
        # Getting the type of 'self' (line 2133)
        self_82604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2133, 16), 'self')
        # Setting the type of the member 'cur_h' of a type (line 2133)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2133, 16), self_82604, 'cur_h', result_iadd_82603)
        
        # SSA join for if statement (line 2120)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2104)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2090)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2088)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2085)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'self' (line 2134)
        self_82605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2134, 8), 'self')
        # Obtaining the member 'cur_s' of a type (line 2134)
        cur_s_82606 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2134, 8), self_82605, 'cur_s')
        int_82607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2134, 22), 'int')
        # Applying the binary operator '-=' (line 2134)
        result_isub_82608 = python_operator(stypy.reporting.localization.Localization(__file__, 2134, 8), '-=', cur_s_82606, int_82607)
        # Getting the type of 'self' (line 2134)
        self_82609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2134, 8), 'self')
        # Setting the type of the member 'cur_s' of a type (line 2134)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2134, 8), self_82609, 'cur_s', result_isub_82608)
        
        
        # ################# End of 'hlist_out(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'hlist_out' in the type store
        # Getting the type of 'stypy_return_type' (line 2073)
        stypy_return_type_82610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2073, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_82610)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'hlist_out'
        return stypy_return_type_82610


    @norecursion
    def vlist_out(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'vlist_out'
        module_type_store = module_type_store.open_function_context('vlist_out', 2136, 4, False)
        # Assigning a type to the variable 'self' (line 2137)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2137, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Ship.vlist_out.__dict__.__setitem__('stypy_localization', localization)
        Ship.vlist_out.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Ship.vlist_out.__dict__.__setitem__('stypy_type_store', module_type_store)
        Ship.vlist_out.__dict__.__setitem__('stypy_function_name', 'Ship.vlist_out')
        Ship.vlist_out.__dict__.__setitem__('stypy_param_names_list', ['box'])
        Ship.vlist_out.__dict__.__setitem__('stypy_varargs_param_name', None)
        Ship.vlist_out.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Ship.vlist_out.__dict__.__setitem__('stypy_call_defaults', defaults)
        Ship.vlist_out.__dict__.__setitem__('stypy_call_varargs', varargs)
        Ship.vlist_out.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Ship.vlist_out.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Ship.vlist_out', ['box'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'vlist_out', localization, ['box'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'vlist_out(...)' code ##################

        
        # Assigning a Num to a Name (line 2137):
        
        # Assigning a Num to a Name (line 2137):
        int_82611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2137, 24), 'int')
        # Assigning a type to the variable 'cur_g' (line 2137)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2137, 8), 'cur_g', int_82611)
        
        # Assigning a Num to a Name (line 2138):
        
        # Assigning a Num to a Name (line 2138):
        float_82612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2138, 24), 'float')
        # Assigning a type to the variable 'cur_glue' (line 2138)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2138, 8), 'cur_glue', float_82612)
        
        # Assigning a Attribute to a Name (line 2139):
        
        # Assigning a Attribute to a Name (line 2139):
        # Getting the type of 'box' (line 2139)
        box_82613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2139, 24), 'box')
        # Obtaining the member 'glue_order' of a type (line 2139)
        glue_order_82614 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2139, 24), box_82613, 'glue_order')
        # Assigning a type to the variable 'glue_order' (line 2139)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2139, 8), 'glue_order', glue_order_82614)
        
        # Assigning a Attribute to a Name (line 2140):
        
        # Assigning a Attribute to a Name (line 2140):
        # Getting the type of 'box' (line 2140)
        box_82615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2140, 24), 'box')
        # Obtaining the member 'glue_sign' of a type (line 2140)
        glue_sign_82616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2140, 24), box_82615, 'glue_sign')
        # Assigning a type to the variable 'glue_sign' (line 2140)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2140, 8), 'glue_sign', glue_sign_82616)
        
        # Getting the type of 'self' (line 2141)
        self_82617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2141, 8), 'self')
        # Obtaining the member 'cur_s' of a type (line 2141)
        cur_s_82618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2141, 8), self_82617, 'cur_s')
        int_82619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2141, 25), 'int')
        # Applying the binary operator '+=' (line 2141)
        result_iadd_82620 = python_operator(stypy.reporting.localization.Localization(__file__, 2141, 8), '+=', cur_s_82618, int_82619)
        # Getting the type of 'self' (line 2141)
        self_82621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2141, 8), 'self')
        # Setting the type of the member 'cur_s' of a type (line 2141)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2141, 8), self_82621, 'cur_s', result_iadd_82620)
        
        
        # Assigning a Call to a Attribute (line 2142):
        
        # Assigning a Call to a Attribute (line 2142):
        
        # Call to max(...): (line 2142)
        # Processing the call arguments (line 2142)
        # Getting the type of 'self' (line 2142)
        self_82623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2142, 28), 'self', False)
        # Obtaining the member 'max_push' of a type (line 2142)
        max_push_82624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2142, 28), self_82623, 'max_push')
        # Getting the type of 'self' (line 2142)
        self_82625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2142, 43), 'self', False)
        # Obtaining the member 'cur_s' of a type (line 2142)
        cur_s_82626 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2142, 43), self_82625, 'cur_s')
        # Processing the call keyword arguments (line 2142)
        kwargs_82627 = {}
        # Getting the type of 'max' (line 2142)
        max_82622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2142, 24), 'max', False)
        # Calling max(args, kwargs) (line 2142)
        max_call_result_82628 = invoke(stypy.reporting.localization.Localization(__file__, 2142, 24), max_82622, *[max_push_82624, cur_s_82626], **kwargs_82627)
        
        # Getting the type of 'self' (line 2142)
        self_82629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2142, 8), 'self')
        # Setting the type of the member 'max_push' of a type (line 2142)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2142, 8), self_82629, 'max_push', max_call_result_82628)
        
        # Assigning a Attribute to a Name (line 2143):
        
        # Assigning a Attribute to a Name (line 2143):
        # Getting the type of 'self' (line 2143)
        self_82630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2143, 24), 'self')
        # Obtaining the member 'cur_h' of a type (line 2143)
        cur_h_82631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2143, 24), self_82630, 'cur_h')
        # Assigning a type to the variable 'left_edge' (line 2143)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2143, 8), 'left_edge', cur_h_82631)
        
        # Getting the type of 'self' (line 2144)
        self_82632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2144, 8), 'self')
        # Obtaining the member 'cur_v' of a type (line 2144)
        cur_v_82633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2144, 8), self_82632, 'cur_v')
        # Getting the type of 'box' (line 2144)
        box_82634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2144, 25), 'box')
        # Obtaining the member 'height' of a type (line 2144)
        height_82635 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2144, 25), box_82634, 'height')
        # Applying the binary operator '-=' (line 2144)
        result_isub_82636 = python_operator(stypy.reporting.localization.Localization(__file__, 2144, 8), '-=', cur_v_82633, height_82635)
        # Getting the type of 'self' (line 2144)
        self_82637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2144, 8), 'self')
        # Setting the type of the member 'cur_v' of a type (line 2144)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2144, 8), self_82637, 'cur_v', result_isub_82636)
        
        
        # Assigning a Attribute to a Name (line 2145):
        
        # Assigning a Attribute to a Name (line 2145):
        # Getting the type of 'self' (line 2145)
        self_82638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2145, 24), 'self')
        # Obtaining the member 'cur_v' of a type (line 2145)
        cur_v_82639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2145, 24), self_82638, 'cur_v')
        # Assigning a type to the variable 'top_edge' (line 2145)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2145, 8), 'top_edge', cur_v_82639)
        
        # Assigning a Attribute to a Name (line 2146):
        
        # Assigning a Attribute to a Name (line 2146):
        # Getting the type of 'self' (line 2146)
        self_82640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2146, 24), 'self')
        # Obtaining the member 'clamp' of a type (line 2146)
        clamp_82641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2146, 24), self_82640, 'clamp')
        # Assigning a type to the variable 'clamp' (line 2146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2146, 8), 'clamp', clamp_82641)
        
        # Getting the type of 'box' (line 2148)
        box_82642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2148, 17), 'box')
        # Obtaining the member 'children' of a type (line 2148)
        children_82643 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2148, 17), box_82642, 'children')
        # Testing the type of a for loop iterable (line 2148)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2148, 8), children_82643)
        # Getting the type of the for loop variable (line 2148)
        for_loop_var_82644 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2148, 8), children_82643)
        # Assigning a type to the variable 'p' (line 2148)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2148, 8), 'p', for_loop_var_82644)
        # SSA begins for a for statement (line 2148)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Call to isinstance(...): (line 2149)
        # Processing the call arguments (line 2149)
        # Getting the type of 'p' (line 2149)
        p_82646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2149, 26), 'p', False)
        # Getting the type of 'Kern' (line 2149)
        Kern_82647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2149, 29), 'Kern', False)
        # Processing the call keyword arguments (line 2149)
        kwargs_82648 = {}
        # Getting the type of 'isinstance' (line 2149)
        isinstance_82645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2149, 15), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2149)
        isinstance_call_result_82649 = invoke(stypy.reporting.localization.Localization(__file__, 2149, 15), isinstance_82645, *[p_82646, Kern_82647], **kwargs_82648)
        
        # Testing the type of an if condition (line 2149)
        if_condition_82650 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2149, 12), isinstance_call_result_82649)
        # Assigning a type to the variable 'if_condition_82650' (line 2149)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2149, 12), 'if_condition_82650', if_condition_82650)
        # SSA begins for if statement (line 2149)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'self' (line 2150)
        self_82651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2150, 16), 'self')
        # Obtaining the member 'cur_v' of a type (line 2150)
        cur_v_82652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2150, 16), self_82651, 'cur_v')
        # Getting the type of 'p' (line 2150)
        p_82653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2150, 30), 'p')
        # Obtaining the member 'width' of a type (line 2150)
        width_82654 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2150, 30), p_82653, 'width')
        # Applying the binary operator '+=' (line 2150)
        result_iadd_82655 = python_operator(stypy.reporting.localization.Localization(__file__, 2150, 16), '+=', cur_v_82652, width_82654)
        # Getting the type of 'self' (line 2150)
        self_82656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2150, 16), 'self')
        # Setting the type of the member 'cur_v' of a type (line 2150)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2150, 16), self_82656, 'cur_v', result_iadd_82655)
        
        # SSA branch for the else part of an if statement (line 2149)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to isinstance(...): (line 2151)
        # Processing the call arguments (line 2151)
        # Getting the type of 'p' (line 2151)
        p_82658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2151, 28), 'p', False)
        # Getting the type of 'List' (line 2151)
        List_82659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2151, 31), 'List', False)
        # Processing the call keyword arguments (line 2151)
        kwargs_82660 = {}
        # Getting the type of 'isinstance' (line 2151)
        isinstance_82657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2151, 17), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2151)
        isinstance_call_result_82661 = invoke(stypy.reporting.localization.Localization(__file__, 2151, 17), isinstance_82657, *[p_82658, List_82659], **kwargs_82660)
        
        # Testing the type of an if condition (line 2151)
        if_condition_82662 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2151, 17), isinstance_call_result_82661)
        # Assigning a type to the variable 'if_condition_82662' (line 2151)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2151, 17), 'if_condition_82662', if_condition_82662)
        # SSA begins for if statement (line 2151)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        
        # Call to len(...): (line 2152)
        # Processing the call arguments (line 2152)
        # Getting the type of 'p' (line 2152)
        p_82664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2152, 23), 'p', False)
        # Obtaining the member 'children' of a type (line 2152)
        children_82665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2152, 23), p_82664, 'children')
        # Processing the call keyword arguments (line 2152)
        kwargs_82666 = {}
        # Getting the type of 'len' (line 2152)
        len_82663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2152, 19), 'len', False)
        # Calling len(args, kwargs) (line 2152)
        len_call_result_82667 = invoke(stypy.reporting.localization.Localization(__file__, 2152, 19), len_82663, *[children_82665], **kwargs_82666)
        
        int_82668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2152, 38), 'int')
        # Applying the binary operator '==' (line 2152)
        result_eq_82669 = python_operator(stypy.reporting.localization.Localization(__file__, 2152, 19), '==', len_call_result_82667, int_82668)
        
        # Testing the type of an if condition (line 2152)
        if_condition_82670 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2152, 16), result_eq_82669)
        # Assigning a type to the variable 'if_condition_82670' (line 2152)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2152, 16), 'if_condition_82670', if_condition_82670)
        # SSA begins for if statement (line 2152)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'self' (line 2153)
        self_82671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2153, 20), 'self')
        # Obtaining the member 'cur_v' of a type (line 2153)
        cur_v_82672 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2153, 20), self_82671, 'cur_v')
        # Getting the type of 'p' (line 2153)
        p_82673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2153, 34), 'p')
        # Obtaining the member 'height' of a type (line 2153)
        height_82674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2153, 34), p_82673, 'height')
        # Getting the type of 'p' (line 2153)
        p_82675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2153, 45), 'p')
        # Obtaining the member 'depth' of a type (line 2153)
        depth_82676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2153, 45), p_82675, 'depth')
        # Applying the binary operator '+' (line 2153)
        result_add_82677 = python_operator(stypy.reporting.localization.Localization(__file__, 2153, 34), '+', height_82674, depth_82676)
        
        # Applying the binary operator '+=' (line 2153)
        result_iadd_82678 = python_operator(stypy.reporting.localization.Localization(__file__, 2153, 20), '+=', cur_v_82672, result_add_82677)
        # Getting the type of 'self' (line 2153)
        self_82679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2153, 20), 'self')
        # Setting the type of the member 'cur_v' of a type (line 2153)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2153, 20), self_82679, 'cur_v', result_iadd_82678)
        
        # SSA branch for the else part of an if statement (line 2152)
        module_type_store.open_ssa_branch('else')
        
        # Getting the type of 'self' (line 2155)
        self_82680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2155, 20), 'self')
        # Obtaining the member 'cur_v' of a type (line 2155)
        cur_v_82681 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2155, 20), self_82680, 'cur_v')
        # Getting the type of 'p' (line 2155)
        p_82682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2155, 34), 'p')
        # Obtaining the member 'height' of a type (line 2155)
        height_82683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2155, 34), p_82682, 'height')
        # Applying the binary operator '+=' (line 2155)
        result_iadd_82684 = python_operator(stypy.reporting.localization.Localization(__file__, 2155, 20), '+=', cur_v_82681, height_82683)
        # Getting the type of 'self' (line 2155)
        self_82685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2155, 20), 'self')
        # Setting the type of the member 'cur_v' of a type (line 2155)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2155, 20), self_82685, 'cur_v', result_iadd_82684)
        
        
        # Assigning a BinOp to a Attribute (line 2156):
        
        # Assigning a BinOp to a Attribute (line 2156):
        # Getting the type of 'left_edge' (line 2156)
        left_edge_82686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2156, 33), 'left_edge')
        # Getting the type of 'p' (line 2156)
        p_82687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2156, 45), 'p')
        # Obtaining the member 'shift_amount' of a type (line 2156)
        shift_amount_82688 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2156, 45), p_82687, 'shift_amount')
        # Applying the binary operator '+' (line 2156)
        result_add_82689 = python_operator(stypy.reporting.localization.Localization(__file__, 2156, 33), '+', left_edge_82686, shift_amount_82688)
        
        # Getting the type of 'self' (line 2156)
        self_82690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2156, 20), 'self')
        # Setting the type of the member 'cur_h' of a type (line 2156)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2156, 20), self_82690, 'cur_h', result_add_82689)
        
        # Assigning a Attribute to a Name (line 2157):
        
        # Assigning a Attribute to a Name (line 2157):
        # Getting the type of 'self' (line 2157)
        self_82691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2157, 29), 'self')
        # Obtaining the member 'cur_v' of a type (line 2157)
        cur_v_82692 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2157, 29), self_82691, 'cur_v')
        # Assigning a type to the variable 'save_v' (line 2157)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2157, 20), 'save_v', cur_v_82692)
        
        # Assigning a Attribute to a Attribute (line 2158):
        
        # Assigning a Attribute to a Attribute (line 2158):
        # Getting the type of 'box' (line 2158)
        box_82693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2158, 30), 'box')
        # Obtaining the member 'width' of a type (line 2158)
        width_82694 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2158, 30), box_82693, 'width')
        # Getting the type of 'p' (line 2158)
        p_82695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2158, 20), 'p')
        # Setting the type of the member 'width' of a type (line 2158)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2158, 20), p_82695, 'width', width_82694)
        
        
        # Call to isinstance(...): (line 2159)
        # Processing the call arguments (line 2159)
        # Getting the type of 'p' (line 2159)
        p_82697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2159, 34), 'p', False)
        # Getting the type of 'Hlist' (line 2159)
        Hlist_82698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2159, 37), 'Hlist', False)
        # Processing the call keyword arguments (line 2159)
        kwargs_82699 = {}
        # Getting the type of 'isinstance' (line 2159)
        isinstance_82696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2159, 23), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2159)
        isinstance_call_result_82700 = invoke(stypy.reporting.localization.Localization(__file__, 2159, 23), isinstance_82696, *[p_82697, Hlist_82698], **kwargs_82699)
        
        # Testing the type of an if condition (line 2159)
        if_condition_82701 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2159, 20), isinstance_call_result_82700)
        # Assigning a type to the variable 'if_condition_82701' (line 2159)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2159, 20), 'if_condition_82701', if_condition_82701)
        # SSA begins for if statement (line 2159)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to hlist_out(...): (line 2160)
        # Processing the call arguments (line 2160)
        # Getting the type of 'p' (line 2160)
        p_82704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2160, 39), 'p', False)
        # Processing the call keyword arguments (line 2160)
        kwargs_82705 = {}
        # Getting the type of 'self' (line 2160)
        self_82702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2160, 24), 'self', False)
        # Obtaining the member 'hlist_out' of a type (line 2160)
        hlist_out_82703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2160, 24), self_82702, 'hlist_out')
        # Calling hlist_out(args, kwargs) (line 2160)
        hlist_out_call_result_82706 = invoke(stypy.reporting.localization.Localization(__file__, 2160, 24), hlist_out_82703, *[p_82704], **kwargs_82705)
        
        # SSA branch for the else part of an if statement (line 2159)
        module_type_store.open_ssa_branch('else')
        
        # Call to vlist_out(...): (line 2162)
        # Processing the call arguments (line 2162)
        # Getting the type of 'p' (line 2162)
        p_82709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2162, 39), 'p', False)
        # Processing the call keyword arguments (line 2162)
        kwargs_82710 = {}
        # Getting the type of 'self' (line 2162)
        self_82707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2162, 24), 'self', False)
        # Obtaining the member 'vlist_out' of a type (line 2162)
        vlist_out_82708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2162, 24), self_82707, 'vlist_out')
        # Calling vlist_out(args, kwargs) (line 2162)
        vlist_out_call_result_82711 = invoke(stypy.reporting.localization.Localization(__file__, 2162, 24), vlist_out_82708, *[p_82709], **kwargs_82710)
        
        # SSA join for if statement (line 2159)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Attribute (line 2163):
        
        # Assigning a BinOp to a Attribute (line 2163):
        # Getting the type of 'save_v' (line 2163)
        save_v_82712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2163, 33), 'save_v')
        # Getting the type of 'p' (line 2163)
        p_82713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2163, 42), 'p')
        # Obtaining the member 'depth' of a type (line 2163)
        depth_82714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2163, 42), p_82713, 'depth')
        # Applying the binary operator '+' (line 2163)
        result_add_82715 = python_operator(stypy.reporting.localization.Localization(__file__, 2163, 33), '+', save_v_82712, depth_82714)
        
        # Getting the type of 'self' (line 2163)
        self_82716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2163, 20), 'self')
        # Setting the type of the member 'cur_v' of a type (line 2163)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2163, 20), self_82716, 'cur_v', result_add_82715)
        
        # Assigning a Name to a Attribute (line 2164):
        
        # Assigning a Name to a Attribute (line 2164):
        # Getting the type of 'left_edge' (line 2164)
        left_edge_82717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2164, 33), 'left_edge')
        # Getting the type of 'self' (line 2164)
        self_82718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2164, 20), 'self')
        # Setting the type of the member 'cur_h' of a type (line 2164)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2164, 20), self_82718, 'cur_h', left_edge_82717)
        # SSA join for if statement (line 2152)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 2151)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to isinstance(...): (line 2165)
        # Processing the call arguments (line 2165)
        # Getting the type of 'p' (line 2165)
        p_82720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2165, 28), 'p', False)
        # Getting the type of 'Box' (line 2165)
        Box_82721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2165, 31), 'Box', False)
        # Processing the call keyword arguments (line 2165)
        kwargs_82722 = {}
        # Getting the type of 'isinstance' (line 2165)
        isinstance_82719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2165, 17), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2165)
        isinstance_call_result_82723 = invoke(stypy.reporting.localization.Localization(__file__, 2165, 17), isinstance_82719, *[p_82720, Box_82721], **kwargs_82722)
        
        # Testing the type of an if condition (line 2165)
        if_condition_82724 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2165, 17), isinstance_call_result_82723)
        # Assigning a type to the variable 'if_condition_82724' (line 2165)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2165, 17), 'if_condition_82724', if_condition_82724)
        # SSA begins for if statement (line 2165)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Name (line 2166):
        
        # Assigning a Attribute to a Name (line 2166):
        # Getting the type of 'p' (line 2166)
        p_82725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2166, 30), 'p')
        # Obtaining the member 'height' of a type (line 2166)
        height_82726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2166, 30), p_82725, 'height')
        # Assigning a type to the variable 'rule_height' (line 2166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2166, 16), 'rule_height', height_82726)
        
        # Assigning a Attribute to a Name (line 2167):
        
        # Assigning a Attribute to a Name (line 2167):
        # Getting the type of 'p' (line 2167)
        p_82727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2167, 29), 'p')
        # Obtaining the member 'depth' of a type (line 2167)
        depth_82728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2167, 29), p_82727, 'depth')
        # Assigning a type to the variable 'rule_depth' (line 2167)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2167, 16), 'rule_depth', depth_82728)
        
        # Assigning a Attribute to a Name (line 2168):
        
        # Assigning a Attribute to a Name (line 2168):
        # Getting the type of 'p' (line 2168)
        p_82729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2168, 29), 'p')
        # Obtaining the member 'width' of a type (line 2168)
        width_82730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2168, 29), p_82729, 'width')
        # Assigning a type to the variable 'rule_width' (line 2168)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2168, 16), 'rule_width', width_82730)
        
        
        # Call to isinf(...): (line 2169)
        # Processing the call arguments (line 2169)
        # Getting the type of 'rule_width' (line 2169)
        rule_width_82732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2169, 25), 'rule_width', False)
        # Processing the call keyword arguments (line 2169)
        kwargs_82733 = {}
        # Getting the type of 'isinf' (line 2169)
        isinf_82731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2169, 19), 'isinf', False)
        # Calling isinf(args, kwargs) (line 2169)
        isinf_call_result_82734 = invoke(stypy.reporting.localization.Localization(__file__, 2169, 19), isinf_82731, *[rule_width_82732], **kwargs_82733)
        
        # Testing the type of an if condition (line 2169)
        if_condition_82735 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2169, 16), isinf_call_result_82734)
        # Assigning a type to the variable 'if_condition_82735' (line 2169)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2169, 16), 'if_condition_82735', if_condition_82735)
        # SSA begins for if statement (line 2169)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Name (line 2170):
        
        # Assigning a Attribute to a Name (line 2170):
        # Getting the type of 'box' (line 2170)
        box_82736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2170, 33), 'box')
        # Obtaining the member 'width' of a type (line 2170)
        width_82737 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2170, 33), box_82736, 'width')
        # Assigning a type to the variable 'rule_width' (line 2170)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2170, 20), 'rule_width', width_82737)
        # SSA join for if statement (line 2169)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'rule_height' (line 2171)
        rule_height_82738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2171, 16), 'rule_height')
        # Getting the type of 'rule_depth' (line 2171)
        rule_depth_82739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2171, 31), 'rule_depth')
        # Applying the binary operator '+=' (line 2171)
        result_iadd_82740 = python_operator(stypy.reporting.localization.Localization(__file__, 2171, 16), '+=', rule_height_82738, rule_depth_82739)
        # Assigning a type to the variable 'rule_height' (line 2171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2171, 16), 'rule_height', result_iadd_82740)
        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'rule_height' (line 2172)
        rule_height_82741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2172, 19), 'rule_height')
        int_82742 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2172, 33), 'int')
        # Applying the binary operator '>' (line 2172)
        result_gt_82743 = python_operator(stypy.reporting.localization.Localization(__file__, 2172, 19), '>', rule_height_82741, int_82742)
        
        
        # Getting the type of 'rule_depth' (line 2172)
        rule_depth_82744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2172, 39), 'rule_depth')
        int_82745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2172, 52), 'int')
        # Applying the binary operator '>' (line 2172)
        result_gt_82746 = python_operator(stypy.reporting.localization.Localization(__file__, 2172, 39), '>', rule_depth_82744, int_82745)
        
        # Applying the binary operator 'and' (line 2172)
        result_and_keyword_82747 = python_operator(stypy.reporting.localization.Localization(__file__, 2172, 19), 'and', result_gt_82743, result_gt_82746)
        
        # Testing the type of an if condition (line 2172)
        if_condition_82748 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2172, 16), result_and_keyword_82747)
        # Assigning a type to the variable 'if_condition_82748' (line 2172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2172, 16), 'if_condition_82748', if_condition_82748)
        # SSA begins for if statement (line 2172)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'self' (line 2173)
        self_82749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2173, 20), 'self')
        # Obtaining the member 'cur_v' of a type (line 2173)
        cur_v_82750 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2173, 20), self_82749, 'cur_v')
        # Getting the type of 'rule_height' (line 2173)
        rule_height_82751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2173, 34), 'rule_height')
        # Applying the binary operator '+=' (line 2173)
        result_iadd_82752 = python_operator(stypy.reporting.localization.Localization(__file__, 2173, 20), '+=', cur_v_82750, rule_height_82751)
        # Getting the type of 'self' (line 2173)
        self_82753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2173, 20), 'self')
        # Setting the type of the member 'cur_v' of a type (line 2173)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2173, 20), self_82753, 'cur_v', result_iadd_82752)
        
        
        # Call to render(...): (line 2174)
        # Processing the call arguments (line 2174)
        # Getting the type of 'self' (line 2174)
        self_82756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2174, 29), 'self', False)
        # Obtaining the member 'cur_h' of a type (line 2174)
        cur_h_82757 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2174, 29), self_82756, 'cur_h')
        # Getting the type of 'self' (line 2174)
        self_82758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2174, 42), 'self', False)
        # Obtaining the member 'off_h' of a type (line 2174)
        off_h_82759 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2174, 42), self_82758, 'off_h')
        # Applying the binary operator '+' (line 2174)
        result_add_82760 = python_operator(stypy.reporting.localization.Localization(__file__, 2174, 29), '+', cur_h_82757, off_h_82759)
        
        # Getting the type of 'self' (line 2175)
        self_82761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2175, 29), 'self', False)
        # Obtaining the member 'cur_v' of a type (line 2175)
        cur_v_82762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2175, 29), self_82761, 'cur_v')
        # Getting the type of 'self' (line 2175)
        self_82763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2175, 42), 'self', False)
        # Obtaining the member 'off_v' of a type (line 2175)
        off_v_82764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2175, 42), self_82763, 'off_v')
        # Applying the binary operator '+' (line 2175)
        result_add_82765 = python_operator(stypy.reporting.localization.Localization(__file__, 2175, 29), '+', cur_v_82762, off_v_82764)
        
        # Getting the type of 'rule_width' (line 2176)
        rule_width_82766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2176, 29), 'rule_width', False)
        # Getting the type of 'rule_height' (line 2176)
        rule_height_82767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2176, 41), 'rule_height', False)
        # Processing the call keyword arguments (line 2174)
        kwargs_82768 = {}
        # Getting the type of 'p' (line 2174)
        p_82754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2174, 20), 'p', False)
        # Obtaining the member 'render' of a type (line 2174)
        render_82755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2174, 20), p_82754, 'render')
        # Calling render(args, kwargs) (line 2174)
        render_call_result_82769 = invoke(stypy.reporting.localization.Localization(__file__, 2174, 20), render_82755, *[result_add_82760, result_add_82765, rule_width_82766, rule_height_82767], **kwargs_82768)
        
        # SSA join for if statement (line 2172)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 2165)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to isinstance(...): (line 2177)
        # Processing the call arguments (line 2177)
        # Getting the type of 'p' (line 2177)
        p_82771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2177, 28), 'p', False)
        # Getting the type of 'Glue' (line 2177)
        Glue_82772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2177, 31), 'Glue', False)
        # Processing the call keyword arguments (line 2177)
        kwargs_82773 = {}
        # Getting the type of 'isinstance' (line 2177)
        isinstance_82770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2177, 17), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2177)
        isinstance_call_result_82774 = invoke(stypy.reporting.localization.Localization(__file__, 2177, 17), isinstance_82770, *[p_82771, Glue_82772], **kwargs_82773)
        
        # Testing the type of an if condition (line 2177)
        if_condition_82775 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2177, 17), isinstance_call_result_82774)
        # Assigning a type to the variable 'if_condition_82775' (line 2177)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2177, 17), 'if_condition_82775', if_condition_82775)
        # SSA begins for if statement (line 2177)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Name (line 2178):
        
        # Assigning a Attribute to a Name (line 2178):
        # Getting the type of 'p' (line 2178)
        p_82776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2178, 28), 'p')
        # Obtaining the member 'glue_spec' of a type (line 2178)
        glue_spec_82777 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2178, 28), p_82776, 'glue_spec')
        # Assigning a type to the variable 'glue_spec' (line 2178)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2178, 16), 'glue_spec', glue_spec_82777)
        
        # Assigning a BinOp to a Name (line 2179):
        
        # Assigning a BinOp to a Name (line 2179):
        # Getting the type of 'glue_spec' (line 2179)
        glue_spec_82778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2179, 30), 'glue_spec')
        # Obtaining the member 'width' of a type (line 2179)
        width_82779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2179, 30), glue_spec_82778, 'width')
        # Getting the type of 'cur_g' (line 2179)
        cur_g_82780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2179, 48), 'cur_g')
        # Applying the binary operator '-' (line 2179)
        result_sub_82781 = python_operator(stypy.reporting.localization.Localization(__file__, 2179, 30), '-', width_82779, cur_g_82780)
        
        # Assigning a type to the variable 'rule_height' (line 2179)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2179, 16), 'rule_height', result_sub_82781)
        
        
        # Getting the type of 'glue_sign' (line 2180)
        glue_sign_82782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2180, 19), 'glue_sign')
        int_82783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2180, 32), 'int')
        # Applying the binary operator '!=' (line 2180)
        result_ne_82784 = python_operator(stypy.reporting.localization.Localization(__file__, 2180, 19), '!=', glue_sign_82782, int_82783)
        
        # Testing the type of an if condition (line 2180)
        if_condition_82785 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2180, 16), result_ne_82784)
        # Assigning a type to the variable 'if_condition_82785' (line 2180)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2180, 16), 'if_condition_82785', if_condition_82785)
        # SSA begins for if statement (line 2180)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'glue_sign' (line 2181)
        glue_sign_82786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2181, 23), 'glue_sign')
        int_82787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2181, 36), 'int')
        # Applying the binary operator '==' (line 2181)
        result_eq_82788 = python_operator(stypy.reporting.localization.Localization(__file__, 2181, 23), '==', glue_sign_82786, int_82787)
        
        # Testing the type of an if condition (line 2181)
        if_condition_82789 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2181, 20), result_eq_82788)
        # Assigning a type to the variable 'if_condition_82789' (line 2181)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2181, 20), 'if_condition_82789', if_condition_82789)
        # SSA begins for if statement (line 2181)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'glue_spec' (line 2182)
        glue_spec_82790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2182, 27), 'glue_spec')
        # Obtaining the member 'stretch_order' of a type (line 2182)
        stretch_order_82791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2182, 27), glue_spec_82790, 'stretch_order')
        # Getting the type of 'glue_order' (line 2182)
        glue_order_82792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2182, 54), 'glue_order')
        # Applying the binary operator '==' (line 2182)
        result_eq_82793 = python_operator(stypy.reporting.localization.Localization(__file__, 2182, 27), '==', stretch_order_82791, glue_order_82792)
        
        # Testing the type of an if condition (line 2182)
        if_condition_82794 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2182, 24), result_eq_82793)
        # Assigning a type to the variable 'if_condition_82794' (line 2182)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2182, 24), 'if_condition_82794', if_condition_82794)
        # SSA begins for if statement (line 2182)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'cur_glue' (line 2183)
        cur_glue_82795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2183, 28), 'cur_glue')
        # Getting the type of 'glue_spec' (line 2183)
        glue_spec_82796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2183, 40), 'glue_spec')
        # Obtaining the member 'stretch' of a type (line 2183)
        stretch_82797 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2183, 40), glue_spec_82796, 'stretch')
        # Applying the binary operator '+=' (line 2183)
        result_iadd_82798 = python_operator(stypy.reporting.localization.Localization(__file__, 2183, 28), '+=', cur_glue_82795, stretch_82797)
        # Assigning a type to the variable 'cur_glue' (line 2183)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2183, 28), 'cur_glue', result_iadd_82798)
        
        
        # Assigning a Call to a Name (line 2184):
        
        # Assigning a Call to a Name (line 2184):
        
        # Call to round(...): (line 2184)
        # Processing the call arguments (line 2184)
        
        # Call to clamp(...): (line 2184)
        # Processing the call arguments (line 2184)
        
        # Call to float(...): (line 2184)
        # Processing the call arguments (line 2184)
        # Getting the type of 'box' (line 2184)
        box_82803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2184, 57), 'box', False)
        # Obtaining the member 'glue_set' of a type (line 2184)
        glue_set_82804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2184, 57), box_82803, 'glue_set')
        # Processing the call keyword arguments (line 2184)
        kwargs_82805 = {}
        # Getting the type of 'float' (line 2184)
        float_82802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2184, 51), 'float', False)
        # Calling float(args, kwargs) (line 2184)
        float_call_result_82806 = invoke(stypy.reporting.localization.Localization(__file__, 2184, 51), float_82802, *[glue_set_82804], **kwargs_82805)
        
        # Getting the type of 'cur_glue' (line 2184)
        cur_glue_82807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2184, 73), 'cur_glue', False)
        # Applying the binary operator '*' (line 2184)
        result_mul_82808 = python_operator(stypy.reporting.localization.Localization(__file__, 2184, 51), '*', float_call_result_82806, cur_glue_82807)
        
        # Processing the call keyword arguments (line 2184)
        kwargs_82809 = {}
        # Getting the type of 'clamp' (line 2184)
        clamp_82801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2184, 45), 'clamp', False)
        # Calling clamp(args, kwargs) (line 2184)
        clamp_call_result_82810 = invoke(stypy.reporting.localization.Localization(__file__, 2184, 45), clamp_82801, *[result_mul_82808], **kwargs_82809)
        
        # Processing the call keyword arguments (line 2184)
        kwargs_82811 = {}
        # Getting the type of 'np' (line 2184)
        np_82799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2184, 36), 'np', False)
        # Obtaining the member 'round' of a type (line 2184)
        round_82800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2184, 36), np_82799, 'round')
        # Calling round(args, kwargs) (line 2184)
        round_call_result_82812 = invoke(stypy.reporting.localization.Localization(__file__, 2184, 36), round_82800, *[clamp_call_result_82810], **kwargs_82811)
        
        # Assigning a type to the variable 'cur_g' (line 2184)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2184, 28), 'cur_g', round_call_result_82812)
        # SSA join for if statement (line 2182)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 2181)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'glue_spec' (line 2185)
        glue_spec_82813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2185, 25), 'glue_spec')
        # Obtaining the member 'shrink_order' of a type (line 2185)
        shrink_order_82814 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2185, 25), glue_spec_82813, 'shrink_order')
        # Getting the type of 'glue_order' (line 2185)
        glue_order_82815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2185, 51), 'glue_order')
        # Applying the binary operator '==' (line 2185)
        result_eq_82816 = python_operator(stypy.reporting.localization.Localization(__file__, 2185, 25), '==', shrink_order_82814, glue_order_82815)
        
        # Testing the type of an if condition (line 2185)
        if_condition_82817 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2185, 25), result_eq_82816)
        # Assigning a type to the variable 'if_condition_82817' (line 2185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2185, 25), 'if_condition_82817', if_condition_82817)
        # SSA begins for if statement (line 2185)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'cur_glue' (line 2186)
        cur_glue_82818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2186, 24), 'cur_glue')
        # Getting the type of 'glue_spec' (line 2186)
        glue_spec_82819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2186, 36), 'glue_spec')
        # Obtaining the member 'shrink' of a type (line 2186)
        shrink_82820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2186, 36), glue_spec_82819, 'shrink')
        # Applying the binary operator '+=' (line 2186)
        result_iadd_82821 = python_operator(stypy.reporting.localization.Localization(__file__, 2186, 24), '+=', cur_glue_82818, shrink_82820)
        # Assigning a type to the variable 'cur_glue' (line 2186)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2186, 24), 'cur_glue', result_iadd_82821)
        
        
        # Assigning a Call to a Name (line 2187):
        
        # Assigning a Call to a Name (line 2187):
        
        # Call to round(...): (line 2187)
        # Processing the call arguments (line 2187)
        
        # Call to clamp(...): (line 2187)
        # Processing the call arguments (line 2187)
        
        # Call to float(...): (line 2187)
        # Processing the call arguments (line 2187)
        # Getting the type of 'box' (line 2187)
        box_82826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2187, 53), 'box', False)
        # Obtaining the member 'glue_set' of a type (line 2187)
        glue_set_82827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2187, 53), box_82826, 'glue_set')
        # Processing the call keyword arguments (line 2187)
        kwargs_82828 = {}
        # Getting the type of 'float' (line 2187)
        float_82825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2187, 47), 'float', False)
        # Calling float(args, kwargs) (line 2187)
        float_call_result_82829 = invoke(stypy.reporting.localization.Localization(__file__, 2187, 47), float_82825, *[glue_set_82827], **kwargs_82828)
        
        # Getting the type of 'cur_glue' (line 2187)
        cur_glue_82830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2187, 69), 'cur_glue', False)
        # Applying the binary operator '*' (line 2187)
        result_mul_82831 = python_operator(stypy.reporting.localization.Localization(__file__, 2187, 47), '*', float_call_result_82829, cur_glue_82830)
        
        # Processing the call keyword arguments (line 2187)
        kwargs_82832 = {}
        # Getting the type of 'clamp' (line 2187)
        clamp_82824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2187, 41), 'clamp', False)
        # Calling clamp(args, kwargs) (line 2187)
        clamp_call_result_82833 = invoke(stypy.reporting.localization.Localization(__file__, 2187, 41), clamp_82824, *[result_mul_82831], **kwargs_82832)
        
        # Processing the call keyword arguments (line 2187)
        kwargs_82834 = {}
        # Getting the type of 'np' (line 2187)
        np_82822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2187, 32), 'np', False)
        # Obtaining the member 'round' of a type (line 2187)
        round_82823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2187, 32), np_82822, 'round')
        # Calling round(args, kwargs) (line 2187)
        round_call_result_82835 = invoke(stypy.reporting.localization.Localization(__file__, 2187, 32), round_82823, *[clamp_call_result_82833], **kwargs_82834)
        
        # Assigning a type to the variable 'cur_g' (line 2187)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2187, 24), 'cur_g', round_call_result_82835)
        # SSA join for if statement (line 2185)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2181)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2180)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'rule_height' (line 2188)
        rule_height_82836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2188, 16), 'rule_height')
        # Getting the type of 'cur_g' (line 2188)
        cur_g_82837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2188, 31), 'cur_g')
        # Applying the binary operator '+=' (line 2188)
        result_iadd_82838 = python_operator(stypy.reporting.localization.Localization(__file__, 2188, 16), '+=', rule_height_82836, cur_g_82837)
        # Assigning a type to the variable 'rule_height' (line 2188)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2188, 16), 'rule_height', result_iadd_82838)
        
        
        # Getting the type of 'self' (line 2189)
        self_82839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2189, 16), 'self')
        # Obtaining the member 'cur_v' of a type (line 2189)
        cur_v_82840 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2189, 16), self_82839, 'cur_v')
        # Getting the type of 'rule_height' (line 2189)
        rule_height_82841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2189, 30), 'rule_height')
        # Applying the binary operator '+=' (line 2189)
        result_iadd_82842 = python_operator(stypy.reporting.localization.Localization(__file__, 2189, 16), '+=', cur_v_82840, rule_height_82841)
        # Getting the type of 'self' (line 2189)
        self_82843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2189, 16), 'self')
        # Setting the type of the member 'cur_v' of a type (line 2189)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2189, 16), self_82843, 'cur_v', result_iadd_82842)
        
        # SSA branch for the else part of an if statement (line 2177)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to isinstance(...): (line 2190)
        # Processing the call arguments (line 2190)
        # Getting the type of 'p' (line 2190)
        p_82845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2190, 28), 'p', False)
        # Getting the type of 'Char' (line 2190)
        Char_82846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2190, 31), 'Char', False)
        # Processing the call keyword arguments (line 2190)
        kwargs_82847 = {}
        # Getting the type of 'isinstance' (line 2190)
        isinstance_82844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2190, 17), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2190)
        isinstance_call_result_82848 = invoke(stypy.reporting.localization.Localization(__file__, 2190, 17), isinstance_82844, *[p_82845, Char_82846], **kwargs_82847)
        
        # Testing the type of an if condition (line 2190)
        if_condition_82849 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2190, 17), isinstance_call_result_82848)
        # Assigning a type to the variable 'if_condition_82849' (line 2190)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2190, 17), 'if_condition_82849', if_condition_82849)
        # SSA begins for if statement (line 2190)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to RuntimeError(...): (line 2191)
        # Processing the call arguments (line 2191)
        unicode_82851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2191, 35), 'unicode', u'Internal mathtext error: Char node found in vlist')
        # Processing the call keyword arguments (line 2191)
        kwargs_82852 = {}
        # Getting the type of 'RuntimeError' (line 2191)
        RuntimeError_82850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2191, 22), 'RuntimeError', False)
        # Calling RuntimeError(args, kwargs) (line 2191)
        RuntimeError_call_result_82853 = invoke(stypy.reporting.localization.Localization(__file__, 2191, 22), RuntimeError_82850, *[unicode_82851], **kwargs_82852)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2191, 16), RuntimeError_call_result_82853, 'raise parameter', BaseException)
        # SSA join for if statement (line 2190)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2177)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2165)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2151)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2149)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'self' (line 2192)
        self_82854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2192, 8), 'self')
        # Obtaining the member 'cur_s' of a type (line 2192)
        cur_s_82855 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2192, 8), self_82854, 'cur_s')
        int_82856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2192, 22), 'int')
        # Applying the binary operator '-=' (line 2192)
        result_isub_82857 = python_operator(stypy.reporting.localization.Localization(__file__, 2192, 8), '-=', cur_s_82855, int_82856)
        # Getting the type of 'self' (line 2192)
        self_82858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2192, 8), 'self')
        # Setting the type of the member 'cur_s' of a type (line 2192)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2192, 8), self_82858, 'cur_s', result_isub_82857)
        
        
        # ################# End of 'vlist_out(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'vlist_out' in the type store
        # Getting the type of 'stypy_return_type' (line 2136)
        stypy_return_type_82859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2136, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_82859)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'vlist_out'
        return stypy_return_type_82859


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 2046, 0, False)
        # Assigning a type to the variable 'self' (line 2047)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2047, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Ship.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'Ship' (line 2046)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2046, 0), 'Ship', Ship)

# Assigning a Call to a Name (line 2071):

# Call to staticmethod(...): (line 2071)
# Processing the call arguments (line 2071)
# Getting the type of 'Ship'
Ship_82861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Ship', False)
# Obtaining the member 'clamp' of a type
clamp_82862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Ship_82861, 'clamp')
# Processing the call keyword arguments (line 2071)
kwargs_82863 = {}
# Getting the type of 'staticmethod' (line 2071)
staticmethod_82860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2071, 12), 'staticmethod', False)
# Calling staticmethod(args, kwargs) (line 2071)
staticmethod_call_result_82864 = invoke(stypy.reporting.localization.Localization(__file__, 2071, 12), staticmethod_82860, *[clamp_82862], **kwargs_82863)

# Getting the type of 'Ship'
Ship_82865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Ship')
# Setting the type of the member 'clamp' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Ship_82865, 'clamp', staticmethod_call_result_82864)

# Assigning a Call to a Name (line 2194):

# Assigning a Call to a Name (line 2194):

# Call to Ship(...): (line 2194)
# Processing the call keyword arguments (line 2194)
kwargs_82867 = {}
# Getting the type of 'Ship' (line 2194)
Ship_82866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2194, 7), 'Ship', False)
# Calling Ship(args, kwargs) (line 2194)
Ship_call_result_82868 = invoke(stypy.reporting.localization.Localization(__file__, 2194, 7), Ship_82866, *[], **kwargs_82867)

# Assigning a type to the variable 'ship' (line 2194)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2194, 0), 'ship', Ship_call_result_82868)

@norecursion
def Error(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'Error'
    module_type_store = module_type_store.open_function_context('Error', 2199, 0, False)
    
    # Passed parameters checking function
    Error.stypy_localization = localization
    Error.stypy_type_of_self = None
    Error.stypy_type_store = module_type_store
    Error.stypy_function_name = 'Error'
    Error.stypy_param_names_list = ['msg']
    Error.stypy_varargs_param_name = None
    Error.stypy_kwargs_param_name = None
    Error.stypy_call_defaults = defaults
    Error.stypy_call_varargs = varargs
    Error.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'Error', ['msg'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'Error', localization, ['msg'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'Error(...)' code ##################

    unicode_82869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2202, (-1)), 'unicode', u'\n    Helper class to raise parser errors.\n    ')

    @norecursion
    def raise_error(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'raise_error'
        module_type_store = module_type_store.open_function_context('raise_error', 2203, 4, False)
        
        # Passed parameters checking function
        raise_error.stypy_localization = localization
        raise_error.stypy_type_of_self = None
        raise_error.stypy_type_store = module_type_store
        raise_error.stypy_function_name = 'raise_error'
        raise_error.stypy_param_names_list = ['s', 'loc', 'toks']
        raise_error.stypy_varargs_param_name = None
        raise_error.stypy_kwargs_param_name = None
        raise_error.stypy_call_defaults = defaults
        raise_error.stypy_call_varargs = varargs
        raise_error.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'raise_error', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'raise_error', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'raise_error(...)' code ##################

        
        # Call to ParseFatalException(...): (line 2204)
        # Processing the call arguments (line 2204)
        # Getting the type of 's' (line 2204)
        s_82871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2204, 34), 's', False)
        # Getting the type of 'loc' (line 2204)
        loc_82872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2204, 37), 'loc', False)
        # Getting the type of 'msg' (line 2204)
        msg_82873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2204, 42), 'msg', False)
        # Processing the call keyword arguments (line 2204)
        kwargs_82874 = {}
        # Getting the type of 'ParseFatalException' (line 2204)
        ParseFatalException_82870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2204, 14), 'ParseFatalException', False)
        # Calling ParseFatalException(args, kwargs) (line 2204)
        ParseFatalException_call_result_82875 = invoke(stypy.reporting.localization.Localization(__file__, 2204, 14), ParseFatalException_82870, *[s_82871, loc_82872, msg_82873], **kwargs_82874)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2204, 8), ParseFatalException_call_result_82875, 'raise parameter', BaseException)
        
        # ################# End of 'raise_error(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'raise_error' in the type store
        # Getting the type of 'stypy_return_type' (line 2203)
        stypy_return_type_82876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2203, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_82876)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'raise_error'
        return stypy_return_type_82876

    # Assigning a type to the variable 'raise_error' (line 2203)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2203, 4), 'raise_error', raise_error)
    
    # Assigning a Call to a Name (line 2206):
    
    # Assigning a Call to a Name (line 2206):
    
    # Call to Empty(...): (line 2206)
    # Processing the call keyword arguments (line 2206)
    kwargs_82878 = {}
    # Getting the type of 'Empty' (line 2206)
    Empty_82877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2206, 12), 'Empty', False)
    # Calling Empty(args, kwargs) (line 2206)
    Empty_call_result_82879 = invoke(stypy.reporting.localization.Localization(__file__, 2206, 12), Empty_82877, *[], **kwargs_82878)
    
    # Assigning a type to the variable 'empty' (line 2206)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2206, 4), 'empty', Empty_call_result_82879)
    
    # Call to setParseAction(...): (line 2207)
    # Processing the call arguments (line 2207)
    # Getting the type of 'raise_error' (line 2207)
    raise_error_82882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2207, 25), 'raise_error', False)
    # Processing the call keyword arguments (line 2207)
    kwargs_82883 = {}
    # Getting the type of 'empty' (line 2207)
    empty_82880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2207, 4), 'empty', False)
    # Obtaining the member 'setParseAction' of a type (line 2207)
    setParseAction_82881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2207, 4), empty_82880, 'setParseAction')
    # Calling setParseAction(args, kwargs) (line 2207)
    setParseAction_call_result_82884 = invoke(stypy.reporting.localization.Localization(__file__, 2207, 4), setParseAction_82881, *[raise_error_82882], **kwargs_82883)
    
    # Getting the type of 'empty' (line 2208)
    empty_82885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2208, 11), 'empty')
    # Assigning a type to the variable 'stypy_return_type' (line 2208)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2208, 4), 'stypy_return_type', empty_82885)
    
    # ################# End of 'Error(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'Error' in the type store
    # Getting the type of 'stypy_return_type' (line 2199)
    stypy_return_type_82886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2199, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_82886)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'Error'
    return stypy_return_type_82886

# Assigning a type to the variable 'Error' (line 2199)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2199, 0), 'Error', Error)
# Declaration of the 'Parser' class

class Parser(object, ):
    unicode_82887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2218, (-1)), 'unicode', u'\n    This is the pyparsing-based parser for math expressions.  It\n    actually parses full strings *containing* math expressions, in\n    that raw text may also appear outside of pairs of ``$``.\n\n    The grammar is based directly on that in TeX, though it cuts a few\n    corners.\n    ')
    
    # Assigning a Call to a Name (line 2220):
    
    # Assigning a Call to a Name (line 2223):
    
    # Assigning a Call to a Name (line 2238):
    
    # Assigning a Call to a Name (line 2251):
    
    # Assigning a BinOp to a Name (line 2264):
    
    # Assigning a Call to a Name (line 2266):
    
    # Assigning a Call to a Name (line 2268):
    
    # Assigning a Call to a Name (line 2273):
    
    # Assigning a Call to a Name (line 2276):
    
    # Assigning a Call to a Name (line 2278):
    
    # Assigning a Call to a Name (line 2280):
    
    # Assigning a Call to a Name (line 2285):
    
    # Assigning a Call to a Name (line 2289):
    
    # Assigning a Call to a Name (line 2291):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 2293, 4, False)
        # Assigning a type to the variable 'self' (line 2294)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2294, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Call to a Name (line 2294):
        
        # Assigning a Call to a Name (line 2294):
        
        # Call to Bunch(...): (line 2294)
        # Processing the call keyword arguments (line 2294)
        kwargs_82889 = {}
        # Getting the type of 'Bunch' (line 2294)
        Bunch_82888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2294, 12), 'Bunch', False)
        # Calling Bunch(args, kwargs) (line 2294)
        Bunch_call_result_82890 = invoke(stypy.reporting.localization.Localization(__file__, 2294, 12), Bunch_82888, *[], **kwargs_82889)
        
        # Assigning a type to the variable 'p' (line 2294)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2294, 8), 'p', Bunch_call_result_82890)
        
        # Assigning a Call to a Attribute (line 2296):
        
        # Assigning a Call to a Attribute (line 2296):
        
        # Call to Forward(...): (line 2296)
        # Processing the call keyword arguments (line 2296)
        kwargs_82892 = {}
        # Getting the type of 'Forward' (line 2296)
        Forward_82891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2296, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2296)
        Forward_call_result_82893 = invoke(stypy.reporting.localization.Localization(__file__, 2296, 29), Forward_82891, *[], **kwargs_82892)
        
        # Getting the type of 'p' (line 2296)
        p_82894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2296, 8), 'p')
        # Setting the type of the member 'accent' of a type (line 2296)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2296, 8), p_82894, 'accent', Forward_call_result_82893)
        
        # Assigning a Call to a Attribute (line 2297):
        
        # Assigning a Call to a Attribute (line 2297):
        
        # Call to Forward(...): (line 2297)
        # Processing the call keyword arguments (line 2297)
        kwargs_82896 = {}
        # Getting the type of 'Forward' (line 2297)
        Forward_82895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2297, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2297)
        Forward_call_result_82897 = invoke(stypy.reporting.localization.Localization(__file__, 2297, 29), Forward_82895, *[], **kwargs_82896)
        
        # Getting the type of 'p' (line 2297)
        p_82898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2297, 8), 'p')
        # Setting the type of the member 'ambi_delim' of a type (line 2297)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2297, 8), p_82898, 'ambi_delim', Forward_call_result_82897)
        
        # Assigning a Call to a Attribute (line 2298):
        
        # Assigning a Call to a Attribute (line 2298):
        
        # Call to Forward(...): (line 2298)
        # Processing the call keyword arguments (line 2298)
        kwargs_82900 = {}
        # Getting the type of 'Forward' (line 2298)
        Forward_82899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2298, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2298)
        Forward_call_result_82901 = invoke(stypy.reporting.localization.Localization(__file__, 2298, 29), Forward_82899, *[], **kwargs_82900)
        
        # Getting the type of 'p' (line 2298)
        p_82902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2298, 8), 'p')
        # Setting the type of the member 'apostrophe' of a type (line 2298)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2298, 8), p_82902, 'apostrophe', Forward_call_result_82901)
        
        # Assigning a Call to a Attribute (line 2299):
        
        # Assigning a Call to a Attribute (line 2299):
        
        # Call to Forward(...): (line 2299)
        # Processing the call keyword arguments (line 2299)
        kwargs_82904 = {}
        # Getting the type of 'Forward' (line 2299)
        Forward_82903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2299, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2299)
        Forward_call_result_82905 = invoke(stypy.reporting.localization.Localization(__file__, 2299, 29), Forward_82903, *[], **kwargs_82904)
        
        # Getting the type of 'p' (line 2299)
        p_82906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2299, 8), 'p')
        # Setting the type of the member 'auto_delim' of a type (line 2299)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2299, 8), p_82906, 'auto_delim', Forward_call_result_82905)
        
        # Assigning a Call to a Attribute (line 2300):
        
        # Assigning a Call to a Attribute (line 2300):
        
        # Call to Forward(...): (line 2300)
        # Processing the call keyword arguments (line 2300)
        kwargs_82908 = {}
        # Getting the type of 'Forward' (line 2300)
        Forward_82907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2300, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2300)
        Forward_call_result_82909 = invoke(stypy.reporting.localization.Localization(__file__, 2300, 29), Forward_82907, *[], **kwargs_82908)
        
        # Getting the type of 'p' (line 2300)
        p_82910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2300, 8), 'p')
        # Setting the type of the member 'binom' of a type (line 2300)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2300, 8), p_82910, 'binom', Forward_call_result_82909)
        
        # Assigning a Call to a Attribute (line 2301):
        
        # Assigning a Call to a Attribute (line 2301):
        
        # Call to Forward(...): (line 2301)
        # Processing the call keyword arguments (line 2301)
        kwargs_82912 = {}
        # Getting the type of 'Forward' (line 2301)
        Forward_82911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2301, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2301)
        Forward_call_result_82913 = invoke(stypy.reporting.localization.Localization(__file__, 2301, 29), Forward_82911, *[], **kwargs_82912)
        
        # Getting the type of 'p' (line 2301)
        p_82914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2301, 8), 'p')
        # Setting the type of the member 'bslash' of a type (line 2301)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2301, 8), p_82914, 'bslash', Forward_call_result_82913)
        
        # Assigning a Call to a Attribute (line 2302):
        
        # Assigning a Call to a Attribute (line 2302):
        
        # Call to Forward(...): (line 2302)
        # Processing the call keyword arguments (line 2302)
        kwargs_82916 = {}
        # Getting the type of 'Forward' (line 2302)
        Forward_82915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2302, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2302)
        Forward_call_result_82917 = invoke(stypy.reporting.localization.Localization(__file__, 2302, 29), Forward_82915, *[], **kwargs_82916)
        
        # Getting the type of 'p' (line 2302)
        p_82918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2302, 8), 'p')
        # Setting the type of the member 'c_over_c' of a type (line 2302)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2302, 8), p_82918, 'c_over_c', Forward_call_result_82917)
        
        # Assigning a Call to a Attribute (line 2303):
        
        # Assigning a Call to a Attribute (line 2303):
        
        # Call to Forward(...): (line 2303)
        # Processing the call keyword arguments (line 2303)
        kwargs_82920 = {}
        # Getting the type of 'Forward' (line 2303)
        Forward_82919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2303, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2303)
        Forward_call_result_82921 = invoke(stypy.reporting.localization.Localization(__file__, 2303, 29), Forward_82919, *[], **kwargs_82920)
        
        # Getting the type of 'p' (line 2303)
        p_82922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2303, 8), 'p')
        # Setting the type of the member 'customspace' of a type (line 2303)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2303, 8), p_82922, 'customspace', Forward_call_result_82921)
        
        # Assigning a Call to a Attribute (line 2304):
        
        # Assigning a Call to a Attribute (line 2304):
        
        # Call to Forward(...): (line 2304)
        # Processing the call keyword arguments (line 2304)
        kwargs_82924 = {}
        # Getting the type of 'Forward' (line 2304)
        Forward_82923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2304, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2304)
        Forward_call_result_82925 = invoke(stypy.reporting.localization.Localization(__file__, 2304, 29), Forward_82923, *[], **kwargs_82924)
        
        # Getting the type of 'p' (line 2304)
        p_82926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2304, 8), 'p')
        # Setting the type of the member 'end_group' of a type (line 2304)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2304, 8), p_82926, 'end_group', Forward_call_result_82925)
        
        # Assigning a Call to a Attribute (line 2305):
        
        # Assigning a Call to a Attribute (line 2305):
        
        # Call to Forward(...): (line 2305)
        # Processing the call keyword arguments (line 2305)
        kwargs_82928 = {}
        # Getting the type of 'Forward' (line 2305)
        Forward_82927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2305, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2305)
        Forward_call_result_82929 = invoke(stypy.reporting.localization.Localization(__file__, 2305, 29), Forward_82927, *[], **kwargs_82928)
        
        # Getting the type of 'p' (line 2305)
        p_82930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2305, 8), 'p')
        # Setting the type of the member 'float_literal' of a type (line 2305)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2305, 8), p_82930, 'float_literal', Forward_call_result_82929)
        
        # Assigning a Call to a Attribute (line 2306):
        
        # Assigning a Call to a Attribute (line 2306):
        
        # Call to Forward(...): (line 2306)
        # Processing the call keyword arguments (line 2306)
        kwargs_82932 = {}
        # Getting the type of 'Forward' (line 2306)
        Forward_82931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2306, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2306)
        Forward_call_result_82933 = invoke(stypy.reporting.localization.Localization(__file__, 2306, 29), Forward_82931, *[], **kwargs_82932)
        
        # Getting the type of 'p' (line 2306)
        p_82934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2306, 8), 'p')
        # Setting the type of the member 'font' of a type (line 2306)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2306, 8), p_82934, 'font', Forward_call_result_82933)
        
        # Assigning a Call to a Attribute (line 2307):
        
        # Assigning a Call to a Attribute (line 2307):
        
        # Call to Forward(...): (line 2307)
        # Processing the call keyword arguments (line 2307)
        kwargs_82936 = {}
        # Getting the type of 'Forward' (line 2307)
        Forward_82935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2307, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2307)
        Forward_call_result_82937 = invoke(stypy.reporting.localization.Localization(__file__, 2307, 29), Forward_82935, *[], **kwargs_82936)
        
        # Getting the type of 'p' (line 2307)
        p_82938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2307, 8), 'p')
        # Setting the type of the member 'frac' of a type (line 2307)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2307, 8), p_82938, 'frac', Forward_call_result_82937)
        
        # Assigning a Call to a Attribute (line 2308):
        
        # Assigning a Call to a Attribute (line 2308):
        
        # Call to Forward(...): (line 2308)
        # Processing the call keyword arguments (line 2308)
        kwargs_82940 = {}
        # Getting the type of 'Forward' (line 2308)
        Forward_82939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2308, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2308)
        Forward_call_result_82941 = invoke(stypy.reporting.localization.Localization(__file__, 2308, 29), Forward_82939, *[], **kwargs_82940)
        
        # Getting the type of 'p' (line 2308)
        p_82942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2308, 8), 'p')
        # Setting the type of the member 'dfrac' of a type (line 2308)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2308, 8), p_82942, 'dfrac', Forward_call_result_82941)
        
        # Assigning a Call to a Attribute (line 2309):
        
        # Assigning a Call to a Attribute (line 2309):
        
        # Call to Forward(...): (line 2309)
        # Processing the call keyword arguments (line 2309)
        kwargs_82944 = {}
        # Getting the type of 'Forward' (line 2309)
        Forward_82943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2309, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2309)
        Forward_call_result_82945 = invoke(stypy.reporting.localization.Localization(__file__, 2309, 29), Forward_82943, *[], **kwargs_82944)
        
        # Getting the type of 'p' (line 2309)
        p_82946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2309, 8), 'p')
        # Setting the type of the member 'function' of a type (line 2309)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2309, 8), p_82946, 'function', Forward_call_result_82945)
        
        # Assigning a Call to a Attribute (line 2310):
        
        # Assigning a Call to a Attribute (line 2310):
        
        # Call to Forward(...): (line 2310)
        # Processing the call keyword arguments (line 2310)
        kwargs_82948 = {}
        # Getting the type of 'Forward' (line 2310)
        Forward_82947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2310, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2310)
        Forward_call_result_82949 = invoke(stypy.reporting.localization.Localization(__file__, 2310, 29), Forward_82947, *[], **kwargs_82948)
        
        # Getting the type of 'p' (line 2310)
        p_82950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2310, 8), 'p')
        # Setting the type of the member 'genfrac' of a type (line 2310)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2310, 8), p_82950, 'genfrac', Forward_call_result_82949)
        
        # Assigning a Call to a Attribute (line 2311):
        
        # Assigning a Call to a Attribute (line 2311):
        
        # Call to Forward(...): (line 2311)
        # Processing the call keyword arguments (line 2311)
        kwargs_82952 = {}
        # Getting the type of 'Forward' (line 2311)
        Forward_82951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2311, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2311)
        Forward_call_result_82953 = invoke(stypy.reporting.localization.Localization(__file__, 2311, 29), Forward_82951, *[], **kwargs_82952)
        
        # Getting the type of 'p' (line 2311)
        p_82954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2311, 8), 'p')
        # Setting the type of the member 'group' of a type (line 2311)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2311, 8), p_82954, 'group', Forward_call_result_82953)
        
        # Assigning a Call to a Attribute (line 2312):
        
        # Assigning a Call to a Attribute (line 2312):
        
        # Call to Forward(...): (line 2312)
        # Processing the call keyword arguments (line 2312)
        kwargs_82956 = {}
        # Getting the type of 'Forward' (line 2312)
        Forward_82955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2312, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2312)
        Forward_call_result_82957 = invoke(stypy.reporting.localization.Localization(__file__, 2312, 29), Forward_82955, *[], **kwargs_82956)
        
        # Getting the type of 'p' (line 2312)
        p_82958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2312, 8), 'p')
        # Setting the type of the member 'int_literal' of a type (line 2312)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2312, 8), p_82958, 'int_literal', Forward_call_result_82957)
        
        # Assigning a Call to a Attribute (line 2313):
        
        # Assigning a Call to a Attribute (line 2313):
        
        # Call to Forward(...): (line 2313)
        # Processing the call keyword arguments (line 2313)
        kwargs_82960 = {}
        # Getting the type of 'Forward' (line 2313)
        Forward_82959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2313, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2313)
        Forward_call_result_82961 = invoke(stypy.reporting.localization.Localization(__file__, 2313, 29), Forward_82959, *[], **kwargs_82960)
        
        # Getting the type of 'p' (line 2313)
        p_82962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2313, 8), 'p')
        # Setting the type of the member 'latexfont' of a type (line 2313)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2313, 8), p_82962, 'latexfont', Forward_call_result_82961)
        
        # Assigning a Call to a Attribute (line 2314):
        
        # Assigning a Call to a Attribute (line 2314):
        
        # Call to Forward(...): (line 2314)
        # Processing the call keyword arguments (line 2314)
        kwargs_82964 = {}
        # Getting the type of 'Forward' (line 2314)
        Forward_82963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2314, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2314)
        Forward_call_result_82965 = invoke(stypy.reporting.localization.Localization(__file__, 2314, 29), Forward_82963, *[], **kwargs_82964)
        
        # Getting the type of 'p' (line 2314)
        p_82966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2314, 8), 'p')
        # Setting the type of the member 'lbracket' of a type (line 2314)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2314, 8), p_82966, 'lbracket', Forward_call_result_82965)
        
        # Assigning a Call to a Attribute (line 2315):
        
        # Assigning a Call to a Attribute (line 2315):
        
        # Call to Forward(...): (line 2315)
        # Processing the call keyword arguments (line 2315)
        kwargs_82968 = {}
        # Getting the type of 'Forward' (line 2315)
        Forward_82967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2315, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2315)
        Forward_call_result_82969 = invoke(stypy.reporting.localization.Localization(__file__, 2315, 29), Forward_82967, *[], **kwargs_82968)
        
        # Getting the type of 'p' (line 2315)
        p_82970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2315, 8), 'p')
        # Setting the type of the member 'left_delim' of a type (line 2315)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2315, 8), p_82970, 'left_delim', Forward_call_result_82969)
        
        # Assigning a Call to a Attribute (line 2316):
        
        # Assigning a Call to a Attribute (line 2316):
        
        # Call to Forward(...): (line 2316)
        # Processing the call keyword arguments (line 2316)
        kwargs_82972 = {}
        # Getting the type of 'Forward' (line 2316)
        Forward_82971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2316, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2316)
        Forward_call_result_82973 = invoke(stypy.reporting.localization.Localization(__file__, 2316, 29), Forward_82971, *[], **kwargs_82972)
        
        # Getting the type of 'p' (line 2316)
        p_82974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2316, 8), 'p')
        # Setting the type of the member 'lbrace' of a type (line 2316)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2316, 8), p_82974, 'lbrace', Forward_call_result_82973)
        
        # Assigning a Call to a Attribute (line 2317):
        
        # Assigning a Call to a Attribute (line 2317):
        
        # Call to Forward(...): (line 2317)
        # Processing the call keyword arguments (line 2317)
        kwargs_82976 = {}
        # Getting the type of 'Forward' (line 2317)
        Forward_82975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2317, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2317)
        Forward_call_result_82977 = invoke(stypy.reporting.localization.Localization(__file__, 2317, 29), Forward_82975, *[], **kwargs_82976)
        
        # Getting the type of 'p' (line 2317)
        p_82978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2317, 8), 'p')
        # Setting the type of the member 'main' of a type (line 2317)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2317, 8), p_82978, 'main', Forward_call_result_82977)
        
        # Assigning a Call to a Attribute (line 2318):
        
        # Assigning a Call to a Attribute (line 2318):
        
        # Call to Forward(...): (line 2318)
        # Processing the call keyword arguments (line 2318)
        kwargs_82980 = {}
        # Getting the type of 'Forward' (line 2318)
        Forward_82979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2318, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2318)
        Forward_call_result_82981 = invoke(stypy.reporting.localization.Localization(__file__, 2318, 29), Forward_82979, *[], **kwargs_82980)
        
        # Getting the type of 'p' (line 2318)
        p_82982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2318, 8), 'p')
        # Setting the type of the member 'math' of a type (line 2318)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2318, 8), p_82982, 'math', Forward_call_result_82981)
        
        # Assigning a Call to a Attribute (line 2319):
        
        # Assigning a Call to a Attribute (line 2319):
        
        # Call to Forward(...): (line 2319)
        # Processing the call keyword arguments (line 2319)
        kwargs_82984 = {}
        # Getting the type of 'Forward' (line 2319)
        Forward_82983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2319, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2319)
        Forward_call_result_82985 = invoke(stypy.reporting.localization.Localization(__file__, 2319, 29), Forward_82983, *[], **kwargs_82984)
        
        # Getting the type of 'p' (line 2319)
        p_82986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2319, 8), 'p')
        # Setting the type of the member 'math_string' of a type (line 2319)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2319, 8), p_82986, 'math_string', Forward_call_result_82985)
        
        # Assigning a Call to a Attribute (line 2320):
        
        # Assigning a Call to a Attribute (line 2320):
        
        # Call to Forward(...): (line 2320)
        # Processing the call keyword arguments (line 2320)
        kwargs_82988 = {}
        # Getting the type of 'Forward' (line 2320)
        Forward_82987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2320, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2320)
        Forward_call_result_82989 = invoke(stypy.reporting.localization.Localization(__file__, 2320, 29), Forward_82987, *[], **kwargs_82988)
        
        # Getting the type of 'p' (line 2320)
        p_82990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2320, 8), 'p')
        # Setting the type of the member 'non_math' of a type (line 2320)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2320, 8), p_82990, 'non_math', Forward_call_result_82989)
        
        # Assigning a Call to a Attribute (line 2321):
        
        # Assigning a Call to a Attribute (line 2321):
        
        # Call to Forward(...): (line 2321)
        # Processing the call keyword arguments (line 2321)
        kwargs_82992 = {}
        # Getting the type of 'Forward' (line 2321)
        Forward_82991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2321, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2321)
        Forward_call_result_82993 = invoke(stypy.reporting.localization.Localization(__file__, 2321, 29), Forward_82991, *[], **kwargs_82992)
        
        # Getting the type of 'p' (line 2321)
        p_82994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2321, 8), 'p')
        # Setting the type of the member 'operatorname' of a type (line 2321)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2321, 8), p_82994, 'operatorname', Forward_call_result_82993)
        
        # Assigning a Call to a Attribute (line 2322):
        
        # Assigning a Call to a Attribute (line 2322):
        
        # Call to Forward(...): (line 2322)
        # Processing the call keyword arguments (line 2322)
        kwargs_82996 = {}
        # Getting the type of 'Forward' (line 2322)
        Forward_82995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2322, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2322)
        Forward_call_result_82997 = invoke(stypy.reporting.localization.Localization(__file__, 2322, 29), Forward_82995, *[], **kwargs_82996)
        
        # Getting the type of 'p' (line 2322)
        p_82998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2322, 8), 'p')
        # Setting the type of the member 'overline' of a type (line 2322)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2322, 8), p_82998, 'overline', Forward_call_result_82997)
        
        # Assigning a Call to a Attribute (line 2323):
        
        # Assigning a Call to a Attribute (line 2323):
        
        # Call to Forward(...): (line 2323)
        # Processing the call keyword arguments (line 2323)
        kwargs_83000 = {}
        # Getting the type of 'Forward' (line 2323)
        Forward_82999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2323, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2323)
        Forward_call_result_83001 = invoke(stypy.reporting.localization.Localization(__file__, 2323, 29), Forward_82999, *[], **kwargs_83000)
        
        # Getting the type of 'p' (line 2323)
        p_83002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2323, 8), 'p')
        # Setting the type of the member 'placeable' of a type (line 2323)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2323, 8), p_83002, 'placeable', Forward_call_result_83001)
        
        # Assigning a Call to a Attribute (line 2324):
        
        # Assigning a Call to a Attribute (line 2324):
        
        # Call to Forward(...): (line 2324)
        # Processing the call keyword arguments (line 2324)
        kwargs_83004 = {}
        # Getting the type of 'Forward' (line 2324)
        Forward_83003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2324, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2324)
        Forward_call_result_83005 = invoke(stypy.reporting.localization.Localization(__file__, 2324, 29), Forward_83003, *[], **kwargs_83004)
        
        # Getting the type of 'p' (line 2324)
        p_83006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2324, 8), 'p')
        # Setting the type of the member 'rbrace' of a type (line 2324)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2324, 8), p_83006, 'rbrace', Forward_call_result_83005)
        
        # Assigning a Call to a Attribute (line 2325):
        
        # Assigning a Call to a Attribute (line 2325):
        
        # Call to Forward(...): (line 2325)
        # Processing the call keyword arguments (line 2325)
        kwargs_83008 = {}
        # Getting the type of 'Forward' (line 2325)
        Forward_83007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2325, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2325)
        Forward_call_result_83009 = invoke(stypy.reporting.localization.Localization(__file__, 2325, 29), Forward_83007, *[], **kwargs_83008)
        
        # Getting the type of 'p' (line 2325)
        p_83010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2325, 8), 'p')
        # Setting the type of the member 'rbracket' of a type (line 2325)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2325, 8), p_83010, 'rbracket', Forward_call_result_83009)
        
        # Assigning a Call to a Attribute (line 2326):
        
        # Assigning a Call to a Attribute (line 2326):
        
        # Call to Forward(...): (line 2326)
        # Processing the call keyword arguments (line 2326)
        kwargs_83012 = {}
        # Getting the type of 'Forward' (line 2326)
        Forward_83011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2326, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2326)
        Forward_call_result_83013 = invoke(stypy.reporting.localization.Localization(__file__, 2326, 29), Forward_83011, *[], **kwargs_83012)
        
        # Getting the type of 'p' (line 2326)
        p_83014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2326, 8), 'p')
        # Setting the type of the member 'required_group' of a type (line 2326)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2326, 8), p_83014, 'required_group', Forward_call_result_83013)
        
        # Assigning a Call to a Attribute (line 2327):
        
        # Assigning a Call to a Attribute (line 2327):
        
        # Call to Forward(...): (line 2327)
        # Processing the call keyword arguments (line 2327)
        kwargs_83016 = {}
        # Getting the type of 'Forward' (line 2327)
        Forward_83015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2327, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2327)
        Forward_call_result_83017 = invoke(stypy.reporting.localization.Localization(__file__, 2327, 29), Forward_83015, *[], **kwargs_83016)
        
        # Getting the type of 'p' (line 2327)
        p_83018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2327, 8), 'p')
        # Setting the type of the member 'right_delim' of a type (line 2327)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2327, 8), p_83018, 'right_delim', Forward_call_result_83017)
        
        # Assigning a Call to a Attribute (line 2328):
        
        # Assigning a Call to a Attribute (line 2328):
        
        # Call to Forward(...): (line 2328)
        # Processing the call keyword arguments (line 2328)
        kwargs_83020 = {}
        # Getting the type of 'Forward' (line 2328)
        Forward_83019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2328, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2328)
        Forward_call_result_83021 = invoke(stypy.reporting.localization.Localization(__file__, 2328, 29), Forward_83019, *[], **kwargs_83020)
        
        # Getting the type of 'p' (line 2328)
        p_83022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2328, 8), 'p')
        # Setting the type of the member 'right_delim_safe' of a type (line 2328)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2328, 8), p_83022, 'right_delim_safe', Forward_call_result_83021)
        
        # Assigning a Call to a Attribute (line 2329):
        
        # Assigning a Call to a Attribute (line 2329):
        
        # Call to Forward(...): (line 2329)
        # Processing the call keyword arguments (line 2329)
        kwargs_83024 = {}
        # Getting the type of 'Forward' (line 2329)
        Forward_83023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2329, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2329)
        Forward_call_result_83025 = invoke(stypy.reporting.localization.Localization(__file__, 2329, 29), Forward_83023, *[], **kwargs_83024)
        
        # Getting the type of 'p' (line 2329)
        p_83026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2329, 8), 'p')
        # Setting the type of the member 'simple' of a type (line 2329)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2329, 8), p_83026, 'simple', Forward_call_result_83025)
        
        # Assigning a Call to a Attribute (line 2330):
        
        # Assigning a Call to a Attribute (line 2330):
        
        # Call to Forward(...): (line 2330)
        # Processing the call keyword arguments (line 2330)
        kwargs_83028 = {}
        # Getting the type of 'Forward' (line 2330)
        Forward_83027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2330, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2330)
        Forward_call_result_83029 = invoke(stypy.reporting.localization.Localization(__file__, 2330, 29), Forward_83027, *[], **kwargs_83028)
        
        # Getting the type of 'p' (line 2330)
        p_83030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2330, 8), 'p')
        # Setting the type of the member 'simple_group' of a type (line 2330)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2330, 8), p_83030, 'simple_group', Forward_call_result_83029)
        
        # Assigning a Call to a Attribute (line 2331):
        
        # Assigning a Call to a Attribute (line 2331):
        
        # Call to Forward(...): (line 2331)
        # Processing the call keyword arguments (line 2331)
        kwargs_83032 = {}
        # Getting the type of 'Forward' (line 2331)
        Forward_83031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2331, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2331)
        Forward_call_result_83033 = invoke(stypy.reporting.localization.Localization(__file__, 2331, 29), Forward_83031, *[], **kwargs_83032)
        
        # Getting the type of 'p' (line 2331)
        p_83034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2331, 8), 'p')
        # Setting the type of the member 'single_symbol' of a type (line 2331)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2331, 8), p_83034, 'single_symbol', Forward_call_result_83033)
        
        # Assigning a Call to a Attribute (line 2332):
        
        # Assigning a Call to a Attribute (line 2332):
        
        # Call to Forward(...): (line 2332)
        # Processing the call keyword arguments (line 2332)
        kwargs_83036 = {}
        # Getting the type of 'Forward' (line 2332)
        Forward_83035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2332, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2332)
        Forward_call_result_83037 = invoke(stypy.reporting.localization.Localization(__file__, 2332, 29), Forward_83035, *[], **kwargs_83036)
        
        # Getting the type of 'p' (line 2332)
        p_83038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2332, 8), 'p')
        # Setting the type of the member 'snowflake' of a type (line 2332)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2332, 8), p_83038, 'snowflake', Forward_call_result_83037)
        
        # Assigning a Call to a Attribute (line 2333):
        
        # Assigning a Call to a Attribute (line 2333):
        
        # Call to Forward(...): (line 2333)
        # Processing the call keyword arguments (line 2333)
        kwargs_83040 = {}
        # Getting the type of 'Forward' (line 2333)
        Forward_83039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2333, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2333)
        Forward_call_result_83041 = invoke(stypy.reporting.localization.Localization(__file__, 2333, 29), Forward_83039, *[], **kwargs_83040)
        
        # Getting the type of 'p' (line 2333)
        p_83042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2333, 8), 'p')
        # Setting the type of the member 'space' of a type (line 2333)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2333, 8), p_83042, 'space', Forward_call_result_83041)
        
        # Assigning a Call to a Attribute (line 2334):
        
        # Assigning a Call to a Attribute (line 2334):
        
        # Call to Forward(...): (line 2334)
        # Processing the call keyword arguments (line 2334)
        kwargs_83044 = {}
        # Getting the type of 'Forward' (line 2334)
        Forward_83043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2334, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2334)
        Forward_call_result_83045 = invoke(stypy.reporting.localization.Localization(__file__, 2334, 29), Forward_83043, *[], **kwargs_83044)
        
        # Getting the type of 'p' (line 2334)
        p_83046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2334, 8), 'p')
        # Setting the type of the member 'sqrt' of a type (line 2334)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2334, 8), p_83046, 'sqrt', Forward_call_result_83045)
        
        # Assigning a Call to a Attribute (line 2335):
        
        # Assigning a Call to a Attribute (line 2335):
        
        # Call to Forward(...): (line 2335)
        # Processing the call keyword arguments (line 2335)
        kwargs_83048 = {}
        # Getting the type of 'Forward' (line 2335)
        Forward_83047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2335, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2335)
        Forward_call_result_83049 = invoke(stypy.reporting.localization.Localization(__file__, 2335, 29), Forward_83047, *[], **kwargs_83048)
        
        # Getting the type of 'p' (line 2335)
        p_83050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2335, 8), 'p')
        # Setting the type of the member 'stackrel' of a type (line 2335)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2335, 8), p_83050, 'stackrel', Forward_call_result_83049)
        
        # Assigning a Call to a Attribute (line 2336):
        
        # Assigning a Call to a Attribute (line 2336):
        
        # Call to Forward(...): (line 2336)
        # Processing the call keyword arguments (line 2336)
        kwargs_83052 = {}
        # Getting the type of 'Forward' (line 2336)
        Forward_83051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2336, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2336)
        Forward_call_result_83053 = invoke(stypy.reporting.localization.Localization(__file__, 2336, 29), Forward_83051, *[], **kwargs_83052)
        
        # Getting the type of 'p' (line 2336)
        p_83054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2336, 8), 'p')
        # Setting the type of the member 'start_group' of a type (line 2336)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2336, 8), p_83054, 'start_group', Forward_call_result_83053)
        
        # Assigning a Call to a Attribute (line 2337):
        
        # Assigning a Call to a Attribute (line 2337):
        
        # Call to Forward(...): (line 2337)
        # Processing the call keyword arguments (line 2337)
        kwargs_83056 = {}
        # Getting the type of 'Forward' (line 2337)
        Forward_83055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2337, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2337)
        Forward_call_result_83057 = invoke(stypy.reporting.localization.Localization(__file__, 2337, 29), Forward_83055, *[], **kwargs_83056)
        
        # Getting the type of 'p' (line 2337)
        p_83058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2337, 8), 'p')
        # Setting the type of the member 'subsuper' of a type (line 2337)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2337, 8), p_83058, 'subsuper', Forward_call_result_83057)
        
        # Assigning a Call to a Attribute (line 2338):
        
        # Assigning a Call to a Attribute (line 2338):
        
        # Call to Forward(...): (line 2338)
        # Processing the call keyword arguments (line 2338)
        kwargs_83060 = {}
        # Getting the type of 'Forward' (line 2338)
        Forward_83059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2338, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2338)
        Forward_call_result_83061 = invoke(stypy.reporting.localization.Localization(__file__, 2338, 29), Forward_83059, *[], **kwargs_83060)
        
        # Getting the type of 'p' (line 2338)
        p_83062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2338, 8), 'p')
        # Setting the type of the member 'subsuperop' of a type (line 2338)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2338, 8), p_83062, 'subsuperop', Forward_call_result_83061)
        
        # Assigning a Call to a Attribute (line 2339):
        
        # Assigning a Call to a Attribute (line 2339):
        
        # Call to Forward(...): (line 2339)
        # Processing the call keyword arguments (line 2339)
        kwargs_83064 = {}
        # Getting the type of 'Forward' (line 2339)
        Forward_83063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2339, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2339)
        Forward_call_result_83065 = invoke(stypy.reporting.localization.Localization(__file__, 2339, 29), Forward_83063, *[], **kwargs_83064)
        
        # Getting the type of 'p' (line 2339)
        p_83066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2339, 8), 'p')
        # Setting the type of the member 'symbol' of a type (line 2339)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2339, 8), p_83066, 'symbol', Forward_call_result_83065)
        
        # Assigning a Call to a Attribute (line 2340):
        
        # Assigning a Call to a Attribute (line 2340):
        
        # Call to Forward(...): (line 2340)
        # Processing the call keyword arguments (line 2340)
        kwargs_83068 = {}
        # Getting the type of 'Forward' (line 2340)
        Forward_83067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2340, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2340)
        Forward_call_result_83069 = invoke(stypy.reporting.localization.Localization(__file__, 2340, 29), Forward_83067, *[], **kwargs_83068)
        
        # Getting the type of 'p' (line 2340)
        p_83070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2340, 8), 'p')
        # Setting the type of the member 'symbol_name' of a type (line 2340)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2340, 8), p_83070, 'symbol_name', Forward_call_result_83069)
        
        # Assigning a Call to a Attribute (line 2341):
        
        # Assigning a Call to a Attribute (line 2341):
        
        # Call to Forward(...): (line 2341)
        # Processing the call keyword arguments (line 2341)
        kwargs_83072 = {}
        # Getting the type of 'Forward' (line 2341)
        Forward_83071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2341, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2341)
        Forward_call_result_83073 = invoke(stypy.reporting.localization.Localization(__file__, 2341, 29), Forward_83071, *[], **kwargs_83072)
        
        # Getting the type of 'p' (line 2341)
        p_83074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2341, 8), 'p')
        # Setting the type of the member 'token' of a type (line 2341)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2341, 8), p_83074, 'token', Forward_call_result_83073)
        
        # Assigning a Call to a Attribute (line 2342):
        
        # Assigning a Call to a Attribute (line 2342):
        
        # Call to Forward(...): (line 2342)
        # Processing the call keyword arguments (line 2342)
        kwargs_83076 = {}
        # Getting the type of 'Forward' (line 2342)
        Forward_83075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2342, 29), 'Forward', False)
        # Calling Forward(args, kwargs) (line 2342)
        Forward_call_result_83077 = invoke(stypy.reporting.localization.Localization(__file__, 2342, 29), Forward_83075, *[], **kwargs_83076)
        
        # Getting the type of 'p' (line 2342)
        p_83078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2342, 8), 'p')
        # Setting the type of the member 'unknown_symbol' of a type (line 2342)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2342, 8), p_83078, 'unknown_symbol', Forward_call_result_83077)
        
        
        # Call to items(...): (line 2345)
        # Processing the call keyword arguments (line 2345)
        kwargs_83084 = {}
        
        # Call to vars(...): (line 2345)
        # Processing the call arguments (line 2345)
        # Getting the type of 'p' (line 2345)
        p_83080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2345, 29), 'p', False)
        # Processing the call keyword arguments (line 2345)
        kwargs_83081 = {}
        # Getting the type of 'vars' (line 2345)
        vars_83079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2345, 24), 'vars', False)
        # Calling vars(args, kwargs) (line 2345)
        vars_call_result_83082 = invoke(stypy.reporting.localization.Localization(__file__, 2345, 24), vars_83079, *[p_83080], **kwargs_83081)
        
        # Obtaining the member 'items' of a type (line 2345)
        items_83083 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2345, 24), vars_call_result_83082, 'items')
        # Calling items(args, kwargs) (line 2345)
        items_call_result_83085 = invoke(stypy.reporting.localization.Localization(__file__, 2345, 24), items_83083, *[], **kwargs_83084)
        
        # Testing the type of a for loop iterable (line 2345)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2345, 8), items_call_result_83085)
        # Getting the type of the for loop variable (line 2345)
        for_loop_var_83086 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2345, 8), items_call_result_83085)
        # Assigning a type to the variable 'key' (line 2345)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2345, 8), 'key', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2345, 8), for_loop_var_83086))
        # Assigning a type to the variable 'val' (line 2345)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2345, 8), 'val', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2345, 8), for_loop_var_83086))
        # SSA begins for a for statement (line 2345)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        
        # Call to startswith(...): (line 2346)
        # Processing the call arguments (line 2346)
        unicode_83089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2346, 34), 'unicode', u'_')
        # Processing the call keyword arguments (line 2346)
        kwargs_83090 = {}
        # Getting the type of 'key' (line 2346)
        key_83087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2346, 19), 'key', False)
        # Obtaining the member 'startswith' of a type (line 2346)
        startswith_83088 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2346, 19), key_83087, 'startswith')
        # Calling startswith(args, kwargs) (line 2346)
        startswith_call_result_83091 = invoke(stypy.reporting.localization.Localization(__file__, 2346, 19), startswith_83088, *[unicode_83089], **kwargs_83090)
        
        # Applying the 'not' unary operator (line 2346)
        result_not__83092 = python_operator(stypy.reporting.localization.Localization(__file__, 2346, 15), 'not', startswith_call_result_83091)
        
        # Testing the type of an if condition (line 2346)
        if_condition_83093 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2346, 12), result_not__83092)
        # Assigning a type to the variable 'if_condition_83093' (line 2346)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2346, 12), 'if_condition_83093', if_condition_83093)
        # SSA begins for if statement (line 2346)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to setName(...): (line 2347)
        # Processing the call arguments (line 2347)
        # Getting the type of 'key' (line 2347)
        key_83096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2347, 28), 'key', False)
        # Processing the call keyword arguments (line 2347)
        kwargs_83097 = {}
        # Getting the type of 'val' (line 2347)
        val_83094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2347, 16), 'val', False)
        # Obtaining the member 'setName' of a type (line 2347)
        setName_83095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2347, 16), val_83094, 'setName')
        # Calling setName(args, kwargs) (line 2347)
        setName_call_result_83098 = invoke(stypy.reporting.localization.Localization(__file__, 2347, 16), setName_83095, *[key_83096], **kwargs_83097)
        
        # SSA join for if statement (line 2346)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'p' (line 2349)
        p_83099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2349, 8), 'p')
        # Obtaining the member 'float_literal' of a type (line 2349)
        float_literal_83100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2349, 8), p_83099, 'float_literal')
        
        # Call to Regex(...): (line 2349)
        # Processing the call arguments (line 2349)
        unicode_83102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2349, 34), 'unicode', u'[-+]?([0-9]+\\.?[0-9]*|\\.[0-9]+)')
        # Processing the call keyword arguments (line 2349)
        kwargs_83103 = {}
        # Getting the type of 'Regex' (line 2349)
        Regex_83101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2349, 28), 'Regex', False)
        # Calling Regex(args, kwargs) (line 2349)
        Regex_call_result_83104 = invoke(stypy.reporting.localization.Localization(__file__, 2349, 28), Regex_83101, *[unicode_83102], **kwargs_83103)
        
        # Applying the binary operator '<<=' (line 2349)
        result_ilshift_83105 = python_operator(stypy.reporting.localization.Localization(__file__, 2349, 8), '<<=', float_literal_83100, Regex_call_result_83104)
        # Getting the type of 'p' (line 2349)
        p_83106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2349, 8), 'p')
        # Setting the type of the member 'float_literal' of a type (line 2349)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2349, 8), p_83106, 'float_literal', result_ilshift_83105)
        
        
        # Getting the type of 'p' (line 2350)
        p_83107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2350, 8), 'p')
        # Obtaining the member 'int_literal' of a type (line 2350)
        int_literal_83108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2350, 8), p_83107, 'int_literal')
        
        # Call to Regex(...): (line 2350)
        # Processing the call arguments (line 2350)
        unicode_83110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2350, 34), 'unicode', u'[-+]?[0-9]+')
        # Processing the call keyword arguments (line 2350)
        kwargs_83111 = {}
        # Getting the type of 'Regex' (line 2350)
        Regex_83109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2350, 28), 'Regex', False)
        # Calling Regex(args, kwargs) (line 2350)
        Regex_call_result_83112 = invoke(stypy.reporting.localization.Localization(__file__, 2350, 28), Regex_83109, *[unicode_83110], **kwargs_83111)
        
        # Applying the binary operator '<<=' (line 2350)
        result_ilshift_83113 = python_operator(stypy.reporting.localization.Localization(__file__, 2350, 8), '<<=', int_literal_83108, Regex_call_result_83112)
        # Getting the type of 'p' (line 2350)
        p_83114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2350, 8), 'p')
        # Setting the type of the member 'int_literal' of a type (line 2350)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2350, 8), p_83114, 'int_literal', result_ilshift_83113)
        
        
        # Getting the type of 'p' (line 2352)
        p_83115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2352, 8), 'p')
        # Obtaining the member 'lbrace' of a type (line 2352)
        lbrace_83116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2352, 8), p_83115, 'lbrace')
        
        # Call to suppress(...): (line 2352)
        # Processing the call keyword arguments (line 2352)
        kwargs_83122 = {}
        
        # Call to Literal(...): (line 2352)
        # Processing the call arguments (line 2352)
        unicode_83118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2352, 36), 'unicode', u'{')
        # Processing the call keyword arguments (line 2352)
        kwargs_83119 = {}
        # Getting the type of 'Literal' (line 2352)
        Literal_83117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2352, 28), 'Literal', False)
        # Calling Literal(args, kwargs) (line 2352)
        Literal_call_result_83120 = invoke(stypy.reporting.localization.Localization(__file__, 2352, 28), Literal_83117, *[unicode_83118], **kwargs_83119)
        
        # Obtaining the member 'suppress' of a type (line 2352)
        suppress_83121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2352, 28), Literal_call_result_83120, 'suppress')
        # Calling suppress(args, kwargs) (line 2352)
        suppress_call_result_83123 = invoke(stypy.reporting.localization.Localization(__file__, 2352, 28), suppress_83121, *[], **kwargs_83122)
        
        # Applying the binary operator '<<=' (line 2352)
        result_ilshift_83124 = python_operator(stypy.reporting.localization.Localization(__file__, 2352, 8), '<<=', lbrace_83116, suppress_call_result_83123)
        # Getting the type of 'p' (line 2352)
        p_83125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2352, 8), 'p')
        # Setting the type of the member 'lbrace' of a type (line 2352)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2352, 8), p_83125, 'lbrace', result_ilshift_83124)
        
        
        # Getting the type of 'p' (line 2353)
        p_83126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2353, 8), 'p')
        # Obtaining the member 'rbrace' of a type (line 2353)
        rbrace_83127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2353, 8), p_83126, 'rbrace')
        
        # Call to suppress(...): (line 2353)
        # Processing the call keyword arguments (line 2353)
        kwargs_83133 = {}
        
        # Call to Literal(...): (line 2353)
        # Processing the call arguments (line 2353)
        unicode_83129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2353, 36), 'unicode', u'}')
        # Processing the call keyword arguments (line 2353)
        kwargs_83130 = {}
        # Getting the type of 'Literal' (line 2353)
        Literal_83128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2353, 28), 'Literal', False)
        # Calling Literal(args, kwargs) (line 2353)
        Literal_call_result_83131 = invoke(stypy.reporting.localization.Localization(__file__, 2353, 28), Literal_83128, *[unicode_83129], **kwargs_83130)
        
        # Obtaining the member 'suppress' of a type (line 2353)
        suppress_83132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2353, 28), Literal_call_result_83131, 'suppress')
        # Calling suppress(args, kwargs) (line 2353)
        suppress_call_result_83134 = invoke(stypy.reporting.localization.Localization(__file__, 2353, 28), suppress_83132, *[], **kwargs_83133)
        
        # Applying the binary operator '<<=' (line 2353)
        result_ilshift_83135 = python_operator(stypy.reporting.localization.Localization(__file__, 2353, 8), '<<=', rbrace_83127, suppress_call_result_83134)
        # Getting the type of 'p' (line 2353)
        p_83136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2353, 8), 'p')
        # Setting the type of the member 'rbrace' of a type (line 2353)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2353, 8), p_83136, 'rbrace', result_ilshift_83135)
        
        
        # Getting the type of 'p' (line 2354)
        p_83137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2354, 8), 'p')
        # Obtaining the member 'lbracket' of a type (line 2354)
        lbracket_83138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2354, 8), p_83137, 'lbracket')
        
        # Call to suppress(...): (line 2354)
        # Processing the call keyword arguments (line 2354)
        kwargs_83144 = {}
        
        # Call to Literal(...): (line 2354)
        # Processing the call arguments (line 2354)
        unicode_83140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2354, 36), 'unicode', u'[')
        # Processing the call keyword arguments (line 2354)
        kwargs_83141 = {}
        # Getting the type of 'Literal' (line 2354)
        Literal_83139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2354, 28), 'Literal', False)
        # Calling Literal(args, kwargs) (line 2354)
        Literal_call_result_83142 = invoke(stypy.reporting.localization.Localization(__file__, 2354, 28), Literal_83139, *[unicode_83140], **kwargs_83141)
        
        # Obtaining the member 'suppress' of a type (line 2354)
        suppress_83143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2354, 28), Literal_call_result_83142, 'suppress')
        # Calling suppress(args, kwargs) (line 2354)
        suppress_call_result_83145 = invoke(stypy.reporting.localization.Localization(__file__, 2354, 28), suppress_83143, *[], **kwargs_83144)
        
        # Applying the binary operator '<<=' (line 2354)
        result_ilshift_83146 = python_operator(stypy.reporting.localization.Localization(__file__, 2354, 8), '<<=', lbracket_83138, suppress_call_result_83145)
        # Getting the type of 'p' (line 2354)
        p_83147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2354, 8), 'p')
        # Setting the type of the member 'lbracket' of a type (line 2354)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2354, 8), p_83147, 'lbracket', result_ilshift_83146)
        
        
        # Getting the type of 'p' (line 2355)
        p_83148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2355, 8), 'p')
        # Obtaining the member 'rbracket' of a type (line 2355)
        rbracket_83149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2355, 8), p_83148, 'rbracket')
        
        # Call to suppress(...): (line 2355)
        # Processing the call keyword arguments (line 2355)
        kwargs_83155 = {}
        
        # Call to Literal(...): (line 2355)
        # Processing the call arguments (line 2355)
        unicode_83151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2355, 36), 'unicode', u']')
        # Processing the call keyword arguments (line 2355)
        kwargs_83152 = {}
        # Getting the type of 'Literal' (line 2355)
        Literal_83150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2355, 28), 'Literal', False)
        # Calling Literal(args, kwargs) (line 2355)
        Literal_call_result_83153 = invoke(stypy.reporting.localization.Localization(__file__, 2355, 28), Literal_83150, *[unicode_83151], **kwargs_83152)
        
        # Obtaining the member 'suppress' of a type (line 2355)
        suppress_83154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2355, 28), Literal_call_result_83153, 'suppress')
        # Calling suppress(args, kwargs) (line 2355)
        suppress_call_result_83156 = invoke(stypy.reporting.localization.Localization(__file__, 2355, 28), suppress_83154, *[], **kwargs_83155)
        
        # Applying the binary operator '<<=' (line 2355)
        result_ilshift_83157 = python_operator(stypy.reporting.localization.Localization(__file__, 2355, 8), '<<=', rbracket_83149, suppress_call_result_83156)
        # Getting the type of 'p' (line 2355)
        p_83158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2355, 8), 'p')
        # Setting the type of the member 'rbracket' of a type (line 2355)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2355, 8), p_83158, 'rbracket', result_ilshift_83157)
        
        
        # Getting the type of 'p' (line 2356)
        p_83159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2356, 8), 'p')
        # Obtaining the member 'bslash' of a type (line 2356)
        bslash_83160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2356, 8), p_83159, 'bslash')
        
        # Call to Literal(...): (line 2356)
        # Processing the call arguments (line 2356)
        unicode_83162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2356, 36), 'unicode', u'\\')
        # Processing the call keyword arguments (line 2356)
        kwargs_83163 = {}
        # Getting the type of 'Literal' (line 2356)
        Literal_83161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2356, 28), 'Literal', False)
        # Calling Literal(args, kwargs) (line 2356)
        Literal_call_result_83164 = invoke(stypy.reporting.localization.Localization(__file__, 2356, 28), Literal_83161, *[unicode_83162], **kwargs_83163)
        
        # Applying the binary operator '<<=' (line 2356)
        result_ilshift_83165 = python_operator(stypy.reporting.localization.Localization(__file__, 2356, 8), '<<=', bslash_83160, Literal_call_result_83164)
        # Getting the type of 'p' (line 2356)
        p_83166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2356, 8), 'p')
        # Setting the type of the member 'bslash' of a type (line 2356)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2356, 8), p_83166, 'bslash', result_ilshift_83165)
        
        
        # Getting the type of 'p' (line 2358)
        p_83167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2358, 8), 'p')
        # Obtaining the member 'space' of a type (line 2358)
        space_83168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2358, 8), p_83167, 'space')
        
        # Call to oneOf(...): (line 2358)
        # Processing the call arguments (line 2358)
        
        # Call to list(...): (line 2358)
        # Processing the call arguments (line 2358)
        # Getting the type of 'self' (line 2358)
        self_83171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2358, 39), 'self', False)
        # Obtaining the member '_space_widths' of a type (line 2358)
        _space_widths_83172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2358, 39), self_83171, '_space_widths')
        # Processing the call keyword arguments (line 2358)
        kwargs_83173 = {}
        # Getting the type of 'list' (line 2358)
        list_83170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2358, 34), 'list', False)
        # Calling list(args, kwargs) (line 2358)
        list_call_result_83174 = invoke(stypy.reporting.localization.Localization(__file__, 2358, 34), list_83170, *[_space_widths_83172], **kwargs_83173)
        
        # Processing the call keyword arguments (line 2358)
        kwargs_83175 = {}
        # Getting the type of 'oneOf' (line 2358)
        oneOf_83169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2358, 28), 'oneOf', False)
        # Calling oneOf(args, kwargs) (line 2358)
        oneOf_call_result_83176 = invoke(stypy.reporting.localization.Localization(__file__, 2358, 28), oneOf_83169, *[list_call_result_83174], **kwargs_83175)
        
        # Applying the binary operator '<<=' (line 2358)
        result_ilshift_83177 = python_operator(stypy.reporting.localization.Localization(__file__, 2358, 8), '<<=', space_83168, oneOf_call_result_83176)
        # Getting the type of 'p' (line 2358)
        p_83178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2358, 8), 'p')
        # Setting the type of the member 'space' of a type (line 2358)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2358, 8), p_83178, 'space', result_ilshift_83177)
        
        
        # Getting the type of 'p' (line 2359)
        p_83179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2359, 8), 'p')
        # Obtaining the member 'customspace' of a type (line 2359)
        customspace_83180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2359, 8), p_83179, 'customspace')
        
        # Call to Suppress(...): (line 2359)
        # Processing the call arguments (line 2359)
        
        # Call to Literal(...): (line 2359)
        # Processing the call arguments (line 2359)
        unicode_83183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2359, 46), 'unicode', u'\\hspace')
        # Processing the call keyword arguments (line 2359)
        kwargs_83184 = {}
        # Getting the type of 'Literal' (line 2359)
        Literal_83182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2359, 38), 'Literal', False)
        # Calling Literal(args, kwargs) (line 2359)
        Literal_call_result_83185 = invoke(stypy.reporting.localization.Localization(__file__, 2359, 38), Literal_83182, *[unicode_83183], **kwargs_83184)
        
        # Processing the call keyword arguments (line 2359)
        kwargs_83186 = {}
        # Getting the type of 'Suppress' (line 2359)
        Suppress_83181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2359, 29), 'Suppress', False)
        # Calling Suppress(args, kwargs) (line 2359)
        Suppress_call_result_83187 = invoke(stypy.reporting.localization.Localization(__file__, 2359, 29), Suppress_83181, *[Literal_call_result_83185], **kwargs_83186)
        
        # Getting the type of 'p' (line 2360)
        p_83188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2360, 30), 'p')
        # Obtaining the member 'lbrace' of a type (line 2360)
        lbrace_83189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2360, 30), p_83188, 'lbrace')
        # Getting the type of 'p' (line 2360)
        p_83190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2360, 41), 'p')
        # Obtaining the member 'float_literal' of a type (line 2360)
        float_literal_83191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2360, 41), p_83190, 'float_literal')
        # Applying the binary operator '+' (line 2360)
        result_add_83192 = python_operator(stypy.reporting.localization.Localization(__file__, 2360, 30), '+', lbrace_83189, float_literal_83191)
        
        # Getting the type of 'p' (line 2360)
        p_83193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2360, 59), 'p')
        # Obtaining the member 'rbrace' of a type (line 2360)
        rbrace_83194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2360, 59), p_83193, 'rbrace')
        # Applying the binary operator '+' (line 2360)
        result_add_83195 = python_operator(stypy.reporting.localization.Localization(__file__, 2360, 57), '+', result_add_83192, rbrace_83194)
        
        
        # Call to Error(...): (line 2361)
        # Processing the call arguments (line 2361)
        unicode_83197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2361, 36), 'unicode', u'Expected \\hspace{n}')
        # Processing the call keyword arguments (line 2361)
        kwargs_83198 = {}
        # Getting the type of 'Error' (line 2361)
        Error_83196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2361, 30), 'Error', False)
        # Calling Error(args, kwargs) (line 2361)
        Error_call_result_83199 = invoke(stypy.reporting.localization.Localization(__file__, 2361, 30), Error_83196, *[unicode_83197], **kwargs_83198)
        
        # Applying the binary operator '|' (line 2360)
        result_or__83200 = python_operator(stypy.reporting.localization.Localization(__file__, 2360, 29), '|', result_add_83195, Error_call_result_83199)
        
        # Applying the binary operator '-' (line 2359)
        result_sub_83201 = python_operator(stypy.reporting.localization.Localization(__file__, 2359, 29), '-', Suppress_call_result_83187, result_or__83200)
        
        # Applying the binary operator '<<=' (line 2359)
        result_ilshift_83202 = python_operator(stypy.reporting.localization.Localization(__file__, 2359, 8), '<<=', customspace_83180, result_sub_83201)
        # Getting the type of 'p' (line 2359)
        p_83203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2359, 8), 'p')
        # Setting the type of the member 'customspace' of a type (line 2359)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2359, 8), p_83203, 'customspace', result_ilshift_83202)
        
        
        # Assigning a Str to a Name (line 2363):
        
        # Assigning a Str to a Name (line 2363):
        unicode_83204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2363, 25), 'unicode', u'\x80-\U0001ffff')
        # Assigning a type to the variable 'unicode_range' (line 2363)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2363, 8), 'unicode_range', unicode_83204)
        
        # Getting the type of 'p' (line 2364)
        p_83205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2364, 8), 'p')
        # Obtaining the member 'single_symbol' of a type (line 2364)
        single_symbol_83206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2364, 8), p_83205, 'single_symbol')
        
        # Call to Regex(...): (line 2364)
        # Processing the call arguments (line 2364)
        unicode_83208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2364, 34), 'unicode', u"([a-zA-Z0-9 +\\-*/<>=:,.;!\\?&'@()\\[\\]|%s])|(\\\\[%%${}\\[\\]_|])")
        # Getting the type of 'unicode_range' (line 2365)
        unicode_range_83209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2365, 31), 'unicode_range', False)
        # Applying the binary operator '%' (line 2364)
        result_mod_83210 = python_operator(stypy.reporting.localization.Localization(__file__, 2364, 34), '%', unicode_83208, unicode_range_83209)
        
        # Processing the call keyword arguments (line 2364)
        kwargs_83211 = {}
        # Getting the type of 'Regex' (line 2364)
        Regex_83207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2364, 28), 'Regex', False)
        # Calling Regex(args, kwargs) (line 2364)
        Regex_call_result_83212 = invoke(stypy.reporting.localization.Localization(__file__, 2364, 28), Regex_83207, *[result_mod_83210], **kwargs_83211)
        
        # Applying the binary operator '<<=' (line 2364)
        result_ilshift_83213 = python_operator(stypy.reporting.localization.Localization(__file__, 2364, 8), '<<=', single_symbol_83206, Regex_call_result_83212)
        # Getting the type of 'p' (line 2364)
        p_83214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2364, 8), 'p')
        # Setting the type of the member 'single_symbol' of a type (line 2364)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2364, 8), p_83214, 'single_symbol', result_ilshift_83213)
        
        
        # Getting the type of 'p' (line 2366)
        p_83215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2366, 8), 'p')
        # Obtaining the member 'snowflake' of a type (line 2366)
        snowflake_83216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2366, 8), p_83215, 'snowflake')
        
        # Call to Suppress(...): (line 2366)
        # Processing the call arguments (line 2366)
        # Getting the type of 'p' (line 2366)
        p_83218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2366, 37), 'p', False)
        # Obtaining the member 'bslash' of a type (line 2366)
        bslash_83219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2366, 37), p_83218, 'bslash')
        # Processing the call keyword arguments (line 2366)
        kwargs_83220 = {}
        # Getting the type of 'Suppress' (line 2366)
        Suppress_83217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2366, 28), 'Suppress', False)
        # Calling Suppress(args, kwargs) (line 2366)
        Suppress_call_result_83221 = invoke(stypy.reporting.localization.Localization(__file__, 2366, 28), Suppress_83217, *[bslash_83219], **kwargs_83220)
        
        
        # Call to oneOf(...): (line 2366)
        # Processing the call arguments (line 2366)
        # Getting the type of 'self' (line 2366)
        self_83223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2366, 55), 'self', False)
        # Obtaining the member '_snowflake' of a type (line 2366)
        _snowflake_83224 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2366, 55), self_83223, '_snowflake')
        # Processing the call keyword arguments (line 2366)
        kwargs_83225 = {}
        # Getting the type of 'oneOf' (line 2366)
        oneOf_83222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2366, 49), 'oneOf', False)
        # Calling oneOf(args, kwargs) (line 2366)
        oneOf_call_result_83226 = invoke(stypy.reporting.localization.Localization(__file__, 2366, 49), oneOf_83222, *[_snowflake_83224], **kwargs_83225)
        
        # Applying the binary operator '+' (line 2366)
        result_add_83227 = python_operator(stypy.reporting.localization.Localization(__file__, 2366, 28), '+', Suppress_call_result_83221, oneOf_call_result_83226)
        
        # Applying the binary operator '<<=' (line 2366)
        result_ilshift_83228 = python_operator(stypy.reporting.localization.Localization(__file__, 2366, 8), '<<=', snowflake_83216, result_add_83227)
        # Getting the type of 'p' (line 2366)
        p_83229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2366, 8), 'p')
        # Setting the type of the member 'snowflake' of a type (line 2366)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2366, 8), p_83229, 'snowflake', result_ilshift_83228)
        
        
        # Getting the type of 'p' (line 2367)
        p_83230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2367, 8), 'p')
        # Obtaining the member 'symbol_name' of a type (line 2367)
        symbol_name_83231 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2367, 8), p_83230, 'symbol_name')
        
        # Call to Combine(...): (line 2367)
        # Processing the call arguments (line 2367)
        # Getting the type of 'p' (line 2367)
        p_83233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2367, 37), 'p', False)
        # Obtaining the member 'bslash' of a type (line 2367)
        bslash_83234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2367, 37), p_83233, 'bslash')
        
        # Call to oneOf(...): (line 2367)
        # Processing the call arguments (line 2367)
        
        # Call to list(...): (line 2367)
        # Processing the call arguments (line 2367)
        # Getting the type of 'tex2uni' (line 2367)
        tex2uni_83237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2367, 59), 'tex2uni', False)
        # Processing the call keyword arguments (line 2367)
        kwargs_83238 = {}
        # Getting the type of 'list' (line 2367)
        list_83236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2367, 54), 'list', False)
        # Calling list(args, kwargs) (line 2367)
        list_call_result_83239 = invoke(stypy.reporting.localization.Localization(__file__, 2367, 54), list_83236, *[tex2uni_83237], **kwargs_83238)
        
        # Processing the call keyword arguments (line 2367)
        kwargs_83240 = {}
        # Getting the type of 'oneOf' (line 2367)
        oneOf_83235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2367, 48), 'oneOf', False)
        # Calling oneOf(args, kwargs) (line 2367)
        oneOf_call_result_83241 = invoke(stypy.reporting.localization.Localization(__file__, 2367, 48), oneOf_83235, *[list_call_result_83239], **kwargs_83240)
        
        # Applying the binary operator '+' (line 2367)
        result_add_83242 = python_operator(stypy.reporting.localization.Localization(__file__, 2367, 37), '+', bslash_83234, oneOf_call_result_83241)
        
        # Processing the call keyword arguments (line 2367)
        kwargs_83243 = {}
        # Getting the type of 'Combine' (line 2367)
        Combine_83232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2367, 29), 'Combine', False)
        # Calling Combine(args, kwargs) (line 2367)
        Combine_call_result_83244 = invoke(stypy.reporting.localization.Localization(__file__, 2367, 29), Combine_83232, *[result_add_83242], **kwargs_83243)
        
        
        # Call to FollowedBy(...): (line 2368)
        # Processing the call arguments (line 2368)
        
        # Call to leaveWhitespace(...): (line 2368)
        # Processing the call keyword arguments (line 2368)
        kwargs_83251 = {}
        
        # Call to Regex(...): (line 2368)
        # Processing the call arguments (line 2368)
        unicode_83247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2368, 43), 'unicode', u'[^A-Za-z]')
        # Processing the call keyword arguments (line 2368)
        kwargs_83248 = {}
        # Getting the type of 'Regex' (line 2368)
        Regex_83246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2368, 37), 'Regex', False)
        # Calling Regex(args, kwargs) (line 2368)
        Regex_call_result_83249 = invoke(stypy.reporting.localization.Localization(__file__, 2368, 37), Regex_83246, *[unicode_83247], **kwargs_83248)
        
        # Obtaining the member 'leaveWhitespace' of a type (line 2368)
        leaveWhitespace_83250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2368, 37), Regex_call_result_83249, 'leaveWhitespace')
        # Calling leaveWhitespace(args, kwargs) (line 2368)
        leaveWhitespace_call_result_83252 = invoke(stypy.reporting.localization.Localization(__file__, 2368, 37), leaveWhitespace_83250, *[], **kwargs_83251)
        
        
        # Call to StringEnd(...): (line 2368)
        # Processing the call keyword arguments (line 2368)
        kwargs_83254 = {}
        # Getting the type of 'StringEnd' (line 2368)
        StringEnd_83253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2368, 76), 'StringEnd', False)
        # Calling StringEnd(args, kwargs) (line 2368)
        StringEnd_call_result_83255 = invoke(stypy.reporting.localization.Localization(__file__, 2368, 76), StringEnd_83253, *[], **kwargs_83254)
        
        # Applying the binary operator '|' (line 2368)
        result_or__83256 = python_operator(stypy.reporting.localization.Localization(__file__, 2368, 37), '|', leaveWhitespace_call_result_83252, StringEnd_call_result_83255)
        
        # Processing the call keyword arguments (line 2368)
        kwargs_83257 = {}
        # Getting the type of 'FollowedBy' (line 2368)
        FollowedBy_83245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2368, 26), 'FollowedBy', False)
        # Calling FollowedBy(args, kwargs) (line 2368)
        FollowedBy_call_result_83258 = invoke(stypy.reporting.localization.Localization(__file__, 2368, 26), FollowedBy_83245, *[result_or__83256], **kwargs_83257)
        
        # Applying the binary operator '+' (line 2367)
        result_add_83259 = python_operator(stypy.reporting.localization.Localization(__file__, 2367, 29), '+', Combine_call_result_83244, FollowedBy_call_result_83258)
        
        # Applying the binary operator '<<=' (line 2367)
        result_ilshift_83260 = python_operator(stypy.reporting.localization.Localization(__file__, 2367, 8), '<<=', symbol_name_83231, result_add_83259)
        # Getting the type of 'p' (line 2367)
        p_83261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2367, 8), 'p')
        # Setting the type of the member 'symbol_name' of a type (line 2367)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2367, 8), p_83261, 'symbol_name', result_ilshift_83260)
        
        
        # Getting the type of 'p' (line 2369)
        p_83262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2369, 8), 'p')
        # Obtaining the member 'symbol' of a type (line 2369)
        symbol_83263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2369, 8), p_83262, 'symbol')
        
        # Call to leaveWhitespace(...): (line 2369)
        # Processing the call keyword arguments (line 2369)
        kwargs_83270 = {}
        # Getting the type of 'p' (line 2369)
        p_83264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2369, 29), 'p', False)
        # Obtaining the member 'single_symbol' of a type (line 2369)
        single_symbol_83265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2369, 29), p_83264, 'single_symbol')
        # Getting the type of 'p' (line 2369)
        p_83266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2369, 47), 'p', False)
        # Obtaining the member 'symbol_name' of a type (line 2369)
        symbol_name_83267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2369, 47), p_83266, 'symbol_name')
        # Applying the binary operator '|' (line 2369)
        result_or__83268 = python_operator(stypy.reporting.localization.Localization(__file__, 2369, 29), '|', single_symbol_83265, symbol_name_83267)
        
        # Obtaining the member 'leaveWhitespace' of a type (line 2369)
        leaveWhitespace_83269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2369, 29), result_or__83268, 'leaveWhitespace')
        # Calling leaveWhitespace(args, kwargs) (line 2369)
        leaveWhitespace_call_result_83271 = invoke(stypy.reporting.localization.Localization(__file__, 2369, 29), leaveWhitespace_83269, *[], **kwargs_83270)
        
        # Applying the binary operator '<<=' (line 2369)
        result_ilshift_83272 = python_operator(stypy.reporting.localization.Localization(__file__, 2369, 8), '<<=', symbol_83263, leaveWhitespace_call_result_83271)
        # Getting the type of 'p' (line 2369)
        p_83273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2369, 8), 'p')
        # Setting the type of the member 'symbol' of a type (line 2369)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2369, 8), p_83273, 'symbol', result_ilshift_83272)
        
        
        # Getting the type of 'p' (line 2371)
        p_83274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2371, 8), 'p')
        # Obtaining the member 'apostrophe' of a type (line 2371)
        apostrophe_83275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2371, 8), p_83274, 'apostrophe')
        
        # Call to Regex(...): (line 2371)
        # Processing the call arguments (line 2371)
        unicode_83277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2371, 34), 'unicode', u"'+")
        # Processing the call keyword arguments (line 2371)
        kwargs_83278 = {}
        # Getting the type of 'Regex' (line 2371)
        Regex_83276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2371, 28), 'Regex', False)
        # Calling Regex(args, kwargs) (line 2371)
        Regex_call_result_83279 = invoke(stypy.reporting.localization.Localization(__file__, 2371, 28), Regex_83276, *[unicode_83277], **kwargs_83278)
        
        # Applying the binary operator '<<=' (line 2371)
        result_ilshift_83280 = python_operator(stypy.reporting.localization.Localization(__file__, 2371, 8), '<<=', apostrophe_83275, Regex_call_result_83279)
        # Getting the type of 'p' (line 2371)
        p_83281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2371, 8), 'p')
        # Setting the type of the member 'apostrophe' of a type (line 2371)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2371, 8), p_83281, 'apostrophe', result_ilshift_83280)
        
        
        # Getting the type of 'p' (line 2373)
        p_83282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2373, 8), 'p')
        # Obtaining the member 'c_over_c' of a type (line 2373)
        c_over_c_83283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2373, 8), p_83282, 'c_over_c')
        
        # Call to Suppress(...): (line 2373)
        # Processing the call arguments (line 2373)
        # Getting the type of 'p' (line 2373)
        p_83285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2373, 37), 'p', False)
        # Obtaining the member 'bslash' of a type (line 2373)
        bslash_83286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2373, 37), p_83285, 'bslash')
        # Processing the call keyword arguments (line 2373)
        kwargs_83287 = {}
        # Getting the type of 'Suppress' (line 2373)
        Suppress_83284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2373, 28), 'Suppress', False)
        # Calling Suppress(args, kwargs) (line 2373)
        Suppress_call_result_83288 = invoke(stypy.reporting.localization.Localization(__file__, 2373, 28), Suppress_83284, *[bslash_83286], **kwargs_83287)
        
        
        # Call to oneOf(...): (line 2373)
        # Processing the call arguments (line 2373)
        
        # Call to list(...): (line 2373)
        # Processing the call arguments (line 2373)
        # Getting the type of 'self' (line 2373)
        self_83291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2373, 60), 'self', False)
        # Obtaining the member '_char_over_chars' of a type (line 2373)
        _char_over_chars_83292 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2373, 60), self_83291, '_char_over_chars')
        # Processing the call keyword arguments (line 2373)
        kwargs_83293 = {}
        # Getting the type of 'list' (line 2373)
        list_83290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2373, 55), 'list', False)
        # Calling list(args, kwargs) (line 2373)
        list_call_result_83294 = invoke(stypy.reporting.localization.Localization(__file__, 2373, 55), list_83290, *[_char_over_chars_83292], **kwargs_83293)
        
        # Processing the call keyword arguments (line 2373)
        kwargs_83295 = {}
        # Getting the type of 'oneOf' (line 2373)
        oneOf_83289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2373, 49), 'oneOf', False)
        # Calling oneOf(args, kwargs) (line 2373)
        oneOf_call_result_83296 = invoke(stypy.reporting.localization.Localization(__file__, 2373, 49), oneOf_83289, *[list_call_result_83294], **kwargs_83295)
        
        # Applying the binary operator '+' (line 2373)
        result_add_83297 = python_operator(stypy.reporting.localization.Localization(__file__, 2373, 28), '+', Suppress_call_result_83288, oneOf_call_result_83296)
        
        # Applying the binary operator '<<=' (line 2373)
        result_ilshift_83298 = python_operator(stypy.reporting.localization.Localization(__file__, 2373, 8), '<<=', c_over_c_83283, result_add_83297)
        # Getting the type of 'p' (line 2373)
        p_83299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2373, 8), 'p')
        # Setting the type of the member 'c_over_c' of a type (line 2373)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2373, 8), p_83299, 'c_over_c', result_ilshift_83298)
        
        
        # Getting the type of 'p' (line 2375)
        p_83300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2375, 8), 'p')
        # Obtaining the member 'accent' of a type (line 2375)
        accent_83301 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2375, 8), p_83300, 'accent')
        
        # Call to Group(...): (line 2375)
        # Processing the call arguments (line 2375)
        
        # Call to Suppress(...): (line 2376)
        # Processing the call arguments (line 2376)
        # Getting the type of 'p' (line 2376)
        p_83304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2376, 38), 'p', False)
        # Obtaining the member 'bslash' of a type (line 2376)
        bslash_83305 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2376, 38), p_83304, 'bslash')
        # Processing the call keyword arguments (line 2376)
        kwargs_83306 = {}
        # Getting the type of 'Suppress' (line 2376)
        Suppress_83303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2376, 29), 'Suppress', False)
        # Calling Suppress(args, kwargs) (line 2376)
        Suppress_call_result_83307 = invoke(stypy.reporting.localization.Localization(__file__, 2376, 29), Suppress_83303, *[bslash_83305], **kwargs_83306)
        
        
        # Call to oneOf(...): (line 2377)
        # Processing the call arguments (line 2377)
        
        # Call to list(...): (line 2377)
        # Processing the call arguments (line 2377)
        # Getting the type of 'self' (line 2377)
        self_83310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2377, 40), 'self', False)
        # Obtaining the member '_accent_map' of a type (line 2377)
        _accent_map_83311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2377, 40), self_83310, '_accent_map')
        # Processing the call keyword arguments (line 2377)
        kwargs_83312 = {}
        # Getting the type of 'list' (line 2377)
        list_83309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2377, 35), 'list', False)
        # Calling list(args, kwargs) (line 2377)
        list_call_result_83313 = invoke(stypy.reporting.localization.Localization(__file__, 2377, 35), list_83309, *[_accent_map_83311], **kwargs_83312)
        
        
        # Call to list(...): (line 2377)
        # Processing the call arguments (line 2377)
        # Getting the type of 'self' (line 2377)
        self_83315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2377, 65), 'self', False)
        # Obtaining the member '_wide_accents' of a type (line 2377)
        _wide_accents_83316 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2377, 65), self_83315, '_wide_accents')
        # Processing the call keyword arguments (line 2377)
        kwargs_83317 = {}
        # Getting the type of 'list' (line 2377)
        list_83314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2377, 60), 'list', False)
        # Calling list(args, kwargs) (line 2377)
        list_call_result_83318 = invoke(stypy.reporting.localization.Localization(__file__, 2377, 60), list_83314, *[_wide_accents_83316], **kwargs_83317)
        
        # Applying the binary operator '+' (line 2377)
        result_add_83319 = python_operator(stypy.reporting.localization.Localization(__file__, 2377, 35), '+', list_call_result_83313, list_call_result_83318)
        
        # Processing the call keyword arguments (line 2377)
        kwargs_83320 = {}
        # Getting the type of 'oneOf' (line 2377)
        oneOf_83308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2377, 29), 'oneOf', False)
        # Calling oneOf(args, kwargs) (line 2377)
        oneOf_call_result_83321 = invoke(stypy.reporting.localization.Localization(__file__, 2377, 29), oneOf_83308, *[result_add_83319], **kwargs_83320)
        
        # Applying the binary operator '+' (line 2376)
        result_add_83322 = python_operator(stypy.reporting.localization.Localization(__file__, 2376, 29), '+', Suppress_call_result_83307, oneOf_call_result_83321)
        
        # Getting the type of 'p' (line 2378)
        p_83323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2378, 29), 'p', False)
        # Obtaining the member 'placeable' of a type (line 2378)
        placeable_83324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2378, 29), p_83323, 'placeable')
        # Applying the binary operator '-' (line 2378)
        result_sub_83325 = python_operator(stypy.reporting.localization.Localization(__file__, 2378, 27), '-', result_add_83322, placeable_83324)
        
        # Processing the call keyword arguments (line 2375)
        kwargs_83326 = {}
        # Getting the type of 'Group' (line 2375)
        Group_83302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2375, 28), 'Group', False)
        # Calling Group(args, kwargs) (line 2375)
        Group_call_result_83327 = invoke(stypy.reporting.localization.Localization(__file__, 2375, 28), Group_83302, *[result_sub_83325], **kwargs_83326)
        
        # Applying the binary operator '<<=' (line 2375)
        result_ilshift_83328 = python_operator(stypy.reporting.localization.Localization(__file__, 2375, 8), '<<=', accent_83301, Group_call_result_83327)
        # Getting the type of 'p' (line 2375)
        p_83329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2375, 8), 'p')
        # Setting the type of the member 'accent' of a type (line 2375)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2375, 8), p_83329, 'accent', result_ilshift_83328)
        
        
        # Getting the type of 'p' (line 2381)
        p_83330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2381, 8), 'p')
        # Obtaining the member 'function' of a type (line 2381)
        function_83331 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2381, 8), p_83330, 'function')
        
        # Call to Suppress(...): (line 2381)
        # Processing the call arguments (line 2381)
        # Getting the type of 'p' (line 2381)
        p_83333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2381, 37), 'p', False)
        # Obtaining the member 'bslash' of a type (line 2381)
        bslash_83334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2381, 37), p_83333, 'bslash')
        # Processing the call keyword arguments (line 2381)
        kwargs_83335 = {}
        # Getting the type of 'Suppress' (line 2381)
        Suppress_83332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2381, 28), 'Suppress', False)
        # Calling Suppress(args, kwargs) (line 2381)
        Suppress_call_result_83336 = invoke(stypy.reporting.localization.Localization(__file__, 2381, 28), Suppress_83332, *[bslash_83334], **kwargs_83335)
        
        
        # Call to oneOf(...): (line 2381)
        # Processing the call arguments (line 2381)
        
        # Call to list(...): (line 2381)
        # Processing the call arguments (line 2381)
        # Getting the type of 'self' (line 2381)
        self_83339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2381, 60), 'self', False)
        # Obtaining the member '_function_names' of a type (line 2381)
        _function_names_83340 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2381, 60), self_83339, '_function_names')
        # Processing the call keyword arguments (line 2381)
        kwargs_83341 = {}
        # Getting the type of 'list' (line 2381)
        list_83338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2381, 55), 'list', False)
        # Calling list(args, kwargs) (line 2381)
        list_call_result_83342 = invoke(stypy.reporting.localization.Localization(__file__, 2381, 55), list_83338, *[_function_names_83340], **kwargs_83341)
        
        # Processing the call keyword arguments (line 2381)
        kwargs_83343 = {}
        # Getting the type of 'oneOf' (line 2381)
        oneOf_83337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2381, 49), 'oneOf', False)
        # Calling oneOf(args, kwargs) (line 2381)
        oneOf_call_result_83344 = invoke(stypy.reporting.localization.Localization(__file__, 2381, 49), oneOf_83337, *[list_call_result_83342], **kwargs_83343)
        
        # Applying the binary operator '+' (line 2381)
        result_add_83345 = python_operator(stypy.reporting.localization.Localization(__file__, 2381, 28), '+', Suppress_call_result_83336, oneOf_call_result_83344)
        
        # Applying the binary operator '<<=' (line 2381)
        result_ilshift_83346 = python_operator(stypy.reporting.localization.Localization(__file__, 2381, 8), '<<=', function_83331, result_add_83345)
        # Getting the type of 'p' (line 2381)
        p_83347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2381, 8), 'p')
        # Setting the type of the member 'function' of a type (line 2381)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2381, 8), p_83347, 'function', result_ilshift_83346)
        
        
        # Getting the type of 'p' (line 2383)
        p_83348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2383, 8), 'p')
        # Obtaining the member 'start_group' of a type (line 2383)
        start_group_83349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2383, 8), p_83348, 'start_group')
        
        # Call to Optional(...): (line 2383)
        # Processing the call arguments (line 2383)
        # Getting the type of 'p' (line 2383)
        p_83351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2383, 37), 'p', False)
        # Obtaining the member 'latexfont' of a type (line 2383)
        latexfont_83352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2383, 37), p_83351, 'latexfont')
        # Processing the call keyword arguments (line 2383)
        kwargs_83353 = {}
        # Getting the type of 'Optional' (line 2383)
        Optional_83350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2383, 28), 'Optional', False)
        # Calling Optional(args, kwargs) (line 2383)
        Optional_call_result_83354 = invoke(stypy.reporting.localization.Localization(__file__, 2383, 28), Optional_83350, *[latexfont_83352], **kwargs_83353)
        
        # Getting the type of 'p' (line 2383)
        p_83355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2383, 52), 'p')
        # Obtaining the member 'lbrace' of a type (line 2383)
        lbrace_83356 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2383, 52), p_83355, 'lbrace')
        # Applying the binary operator '+' (line 2383)
        result_add_83357 = python_operator(stypy.reporting.localization.Localization(__file__, 2383, 28), '+', Optional_call_result_83354, lbrace_83356)
        
        # Applying the binary operator '<<=' (line 2383)
        result_ilshift_83358 = python_operator(stypy.reporting.localization.Localization(__file__, 2383, 8), '<<=', start_group_83349, result_add_83357)
        # Getting the type of 'p' (line 2383)
        p_83359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2383, 8), 'p')
        # Setting the type of the member 'start_group' of a type (line 2383)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2383, 8), p_83359, 'start_group', result_ilshift_83358)
        
        
        # Getting the type of 'p' (line 2384)
        p_83360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2384, 8), 'p')
        # Obtaining the member 'end_group' of a type (line 2384)
        end_group_83361 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2384, 8), p_83360, 'end_group')
        
        # Call to copy(...): (line 2384)
        # Processing the call keyword arguments (line 2384)
        kwargs_83365 = {}
        # Getting the type of 'p' (line 2384)
        p_83362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2384, 28), 'p', False)
        # Obtaining the member 'rbrace' of a type (line 2384)
        rbrace_83363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2384, 28), p_83362, 'rbrace')
        # Obtaining the member 'copy' of a type (line 2384)
        copy_83364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2384, 28), rbrace_83363, 'copy')
        # Calling copy(args, kwargs) (line 2384)
        copy_call_result_83366 = invoke(stypy.reporting.localization.Localization(__file__, 2384, 28), copy_83364, *[], **kwargs_83365)
        
        # Applying the binary operator '<<=' (line 2384)
        result_ilshift_83367 = python_operator(stypy.reporting.localization.Localization(__file__, 2384, 8), '<<=', end_group_83361, copy_call_result_83366)
        # Getting the type of 'p' (line 2384)
        p_83368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2384, 8), 'p')
        # Setting the type of the member 'end_group' of a type (line 2384)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2384, 8), p_83368, 'end_group', result_ilshift_83367)
        
        
        # Getting the type of 'p' (line 2385)
        p_83369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2385, 8), 'p')
        # Obtaining the member 'simple_group' of a type (line 2385)
        simple_group_83370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2385, 8), p_83369, 'simple_group')
        
        # Call to Group(...): (line 2385)
        # Processing the call arguments (line 2385)
        # Getting the type of 'p' (line 2385)
        p_83372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2385, 34), 'p', False)
        # Obtaining the member 'lbrace' of a type (line 2385)
        lbrace_83373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2385, 34), p_83372, 'lbrace')
        
        # Call to ZeroOrMore(...): (line 2385)
        # Processing the call arguments (line 2385)
        # Getting the type of 'p' (line 2385)
        p_83375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2385, 56), 'p', False)
        # Obtaining the member 'token' of a type (line 2385)
        token_83376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2385, 56), p_83375, 'token')
        # Processing the call keyword arguments (line 2385)
        kwargs_83377 = {}
        # Getting the type of 'ZeroOrMore' (line 2385)
        ZeroOrMore_83374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2385, 45), 'ZeroOrMore', False)
        # Calling ZeroOrMore(args, kwargs) (line 2385)
        ZeroOrMore_call_result_83378 = invoke(stypy.reporting.localization.Localization(__file__, 2385, 45), ZeroOrMore_83374, *[token_83376], **kwargs_83377)
        
        # Applying the binary operator '+' (line 2385)
        result_add_83379 = python_operator(stypy.reporting.localization.Localization(__file__, 2385, 34), '+', lbrace_83373, ZeroOrMore_call_result_83378)
        
        # Getting the type of 'p' (line 2385)
        p_83380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2385, 67), 'p', False)
        # Obtaining the member 'rbrace' of a type (line 2385)
        rbrace_83381 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2385, 67), p_83380, 'rbrace')
        # Applying the binary operator '+' (line 2385)
        result_add_83382 = python_operator(stypy.reporting.localization.Localization(__file__, 2385, 65), '+', result_add_83379, rbrace_83381)
        
        # Processing the call keyword arguments (line 2385)
        kwargs_83383 = {}
        # Getting the type of 'Group' (line 2385)
        Group_83371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2385, 28), 'Group', False)
        # Calling Group(args, kwargs) (line 2385)
        Group_call_result_83384 = invoke(stypy.reporting.localization.Localization(__file__, 2385, 28), Group_83371, *[result_add_83382], **kwargs_83383)
        
        # Applying the binary operator '<<=' (line 2385)
        result_ilshift_83385 = python_operator(stypy.reporting.localization.Localization(__file__, 2385, 8), '<<=', simple_group_83370, Group_call_result_83384)
        # Getting the type of 'p' (line 2385)
        p_83386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2385, 8), 'p')
        # Setting the type of the member 'simple_group' of a type (line 2385)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2385, 8), p_83386, 'simple_group', result_ilshift_83385)
        
        
        # Getting the type of 'p' (line 2386)
        p_83387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2386, 8), 'p')
        # Obtaining the member 'required_group' of a type (line 2386)
        required_group_83388 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2386, 8), p_83387, 'required_group')
        
        # Call to Group(...): (line 2386)
        # Processing the call arguments (line 2386)
        # Getting the type of 'p' (line 2386)
        p_83390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2386, 34), 'p', False)
        # Obtaining the member 'lbrace' of a type (line 2386)
        lbrace_83391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2386, 34), p_83390, 'lbrace')
        
        # Call to OneOrMore(...): (line 2386)
        # Processing the call arguments (line 2386)
        # Getting the type of 'p' (line 2386)
        p_83393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2386, 55), 'p', False)
        # Obtaining the member 'token' of a type (line 2386)
        token_83394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2386, 55), p_83393, 'token')
        # Processing the call keyword arguments (line 2386)
        kwargs_83395 = {}
        # Getting the type of 'OneOrMore' (line 2386)
        OneOrMore_83392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2386, 45), 'OneOrMore', False)
        # Calling OneOrMore(args, kwargs) (line 2386)
        OneOrMore_call_result_83396 = invoke(stypy.reporting.localization.Localization(__file__, 2386, 45), OneOrMore_83392, *[token_83394], **kwargs_83395)
        
        # Applying the binary operator '+' (line 2386)
        result_add_83397 = python_operator(stypy.reporting.localization.Localization(__file__, 2386, 34), '+', lbrace_83391, OneOrMore_call_result_83396)
        
        # Getting the type of 'p' (line 2386)
        p_83398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2386, 66), 'p', False)
        # Obtaining the member 'rbrace' of a type (line 2386)
        rbrace_83399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2386, 66), p_83398, 'rbrace')
        # Applying the binary operator '+' (line 2386)
        result_add_83400 = python_operator(stypy.reporting.localization.Localization(__file__, 2386, 64), '+', result_add_83397, rbrace_83399)
        
        # Processing the call keyword arguments (line 2386)
        kwargs_83401 = {}
        # Getting the type of 'Group' (line 2386)
        Group_83389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2386, 28), 'Group', False)
        # Calling Group(args, kwargs) (line 2386)
        Group_call_result_83402 = invoke(stypy.reporting.localization.Localization(__file__, 2386, 28), Group_83389, *[result_add_83400], **kwargs_83401)
        
        # Applying the binary operator '<<=' (line 2386)
        result_ilshift_83403 = python_operator(stypy.reporting.localization.Localization(__file__, 2386, 8), '<<=', required_group_83388, Group_call_result_83402)
        # Getting the type of 'p' (line 2386)
        p_83404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2386, 8), 'p')
        # Setting the type of the member 'required_group' of a type (line 2386)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2386, 8), p_83404, 'required_group', result_ilshift_83403)
        
        
        # Getting the type of 'p' (line 2387)
        p_83405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2387, 8), 'p')
        # Obtaining the member 'group' of a type (line 2387)
        group_83406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2387, 8), p_83405, 'group')
        
        # Call to Group(...): (line 2387)
        # Processing the call arguments (line 2387)
        # Getting the type of 'p' (line 2387)
        p_83408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2387, 34), 'p', False)
        # Obtaining the member 'start_group' of a type (line 2387)
        start_group_83409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2387, 34), p_83408, 'start_group')
        
        # Call to ZeroOrMore(...): (line 2387)
        # Processing the call arguments (line 2387)
        # Getting the type of 'p' (line 2387)
        p_83411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2387, 61), 'p', False)
        # Obtaining the member 'token' of a type (line 2387)
        token_83412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2387, 61), p_83411, 'token')
        # Processing the call keyword arguments (line 2387)
        kwargs_83413 = {}
        # Getting the type of 'ZeroOrMore' (line 2387)
        ZeroOrMore_83410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2387, 50), 'ZeroOrMore', False)
        # Calling ZeroOrMore(args, kwargs) (line 2387)
        ZeroOrMore_call_result_83414 = invoke(stypy.reporting.localization.Localization(__file__, 2387, 50), ZeroOrMore_83410, *[token_83412], **kwargs_83413)
        
        # Applying the binary operator '+' (line 2387)
        result_add_83415 = python_operator(stypy.reporting.localization.Localization(__file__, 2387, 34), '+', start_group_83409, ZeroOrMore_call_result_83414)
        
        # Getting the type of 'p' (line 2387)
        p_83416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2387, 72), 'p', False)
        # Obtaining the member 'end_group' of a type (line 2387)
        end_group_83417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2387, 72), p_83416, 'end_group')
        # Applying the binary operator '+' (line 2387)
        result_add_83418 = python_operator(stypy.reporting.localization.Localization(__file__, 2387, 70), '+', result_add_83415, end_group_83417)
        
        # Processing the call keyword arguments (line 2387)
        kwargs_83419 = {}
        # Getting the type of 'Group' (line 2387)
        Group_83407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2387, 28), 'Group', False)
        # Calling Group(args, kwargs) (line 2387)
        Group_call_result_83420 = invoke(stypy.reporting.localization.Localization(__file__, 2387, 28), Group_83407, *[result_add_83418], **kwargs_83419)
        
        # Applying the binary operator '<<=' (line 2387)
        result_ilshift_83421 = python_operator(stypy.reporting.localization.Localization(__file__, 2387, 8), '<<=', group_83406, Group_call_result_83420)
        # Getting the type of 'p' (line 2387)
        p_83422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2387, 8), 'p')
        # Setting the type of the member 'group' of a type (line 2387)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2387, 8), p_83422, 'group', result_ilshift_83421)
        
        
        # Getting the type of 'p' (line 2389)
        p_83423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2389, 8), 'p')
        # Obtaining the member 'font' of a type (line 2389)
        font_83424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2389, 8), p_83423, 'font')
        
        # Call to Suppress(...): (line 2389)
        # Processing the call arguments (line 2389)
        # Getting the type of 'p' (line 2389)
        p_83426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2389, 37), 'p', False)
        # Obtaining the member 'bslash' of a type (line 2389)
        bslash_83427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2389, 37), p_83426, 'bslash')
        # Processing the call keyword arguments (line 2389)
        kwargs_83428 = {}
        # Getting the type of 'Suppress' (line 2389)
        Suppress_83425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2389, 28), 'Suppress', False)
        # Calling Suppress(args, kwargs) (line 2389)
        Suppress_call_result_83429 = invoke(stypy.reporting.localization.Localization(__file__, 2389, 28), Suppress_83425, *[bslash_83427], **kwargs_83428)
        
        
        # Call to oneOf(...): (line 2389)
        # Processing the call arguments (line 2389)
        
        # Call to list(...): (line 2389)
        # Processing the call arguments (line 2389)
        # Getting the type of 'self' (line 2389)
        self_83432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2389, 60), 'self', False)
        # Obtaining the member '_fontnames' of a type (line 2389)
        _fontnames_83433 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2389, 60), self_83432, '_fontnames')
        # Processing the call keyword arguments (line 2389)
        kwargs_83434 = {}
        # Getting the type of 'list' (line 2389)
        list_83431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2389, 55), 'list', False)
        # Calling list(args, kwargs) (line 2389)
        list_call_result_83435 = invoke(stypy.reporting.localization.Localization(__file__, 2389, 55), list_83431, *[_fontnames_83433], **kwargs_83434)
        
        # Processing the call keyword arguments (line 2389)
        kwargs_83436 = {}
        # Getting the type of 'oneOf' (line 2389)
        oneOf_83430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2389, 49), 'oneOf', False)
        # Calling oneOf(args, kwargs) (line 2389)
        oneOf_call_result_83437 = invoke(stypy.reporting.localization.Localization(__file__, 2389, 49), oneOf_83430, *[list_call_result_83435], **kwargs_83436)
        
        # Applying the binary operator '+' (line 2389)
        result_add_83438 = python_operator(stypy.reporting.localization.Localization(__file__, 2389, 28), '+', Suppress_call_result_83429, oneOf_call_result_83437)
        
        # Applying the binary operator '<<=' (line 2389)
        result_ilshift_83439 = python_operator(stypy.reporting.localization.Localization(__file__, 2389, 8), '<<=', font_83424, result_add_83438)
        # Getting the type of 'p' (line 2389)
        p_83440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2389, 8), 'p')
        # Setting the type of the member 'font' of a type (line 2389)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2389, 8), p_83440, 'font', result_ilshift_83439)
        
        
        # Getting the type of 'p' (line 2390)
        p_83441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2390, 8), 'p')
        # Obtaining the member 'latexfont' of a type (line 2390)
        latexfont_83442 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2390, 8), p_83441, 'latexfont')
        
        # Call to Suppress(...): (line 2390)
        # Processing the call arguments (line 2390)
        # Getting the type of 'p' (line 2390)
        p_83444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2390, 37), 'p', False)
        # Obtaining the member 'bslash' of a type (line 2390)
        bslash_83445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2390, 37), p_83444, 'bslash')
        # Processing the call keyword arguments (line 2390)
        kwargs_83446 = {}
        # Getting the type of 'Suppress' (line 2390)
        Suppress_83443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2390, 28), 'Suppress', False)
        # Calling Suppress(args, kwargs) (line 2390)
        Suppress_call_result_83447 = invoke(stypy.reporting.localization.Localization(__file__, 2390, 28), Suppress_83443, *[bslash_83445], **kwargs_83446)
        
        
        # Call to oneOf(...): (line 2390)
        # Processing the call arguments (line 2390)
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'self' (line 2390)
        self_83452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2390, 76), 'self', False)
        # Obtaining the member '_fontnames' of a type (line 2390)
        _fontnames_83453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2390, 76), self_83452, '_fontnames')
        comprehension_83454 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2390, 56), _fontnames_83453)
        # Assigning a type to the variable 'x' (line 2390)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2390, 56), 'x', comprehension_83454)
        unicode_83449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2390, 56), 'unicode', u'math')
        # Getting the type of 'x' (line 2390)
        x_83450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2390, 65), 'x', False)
        # Applying the binary operator '+' (line 2390)
        result_add_83451 = python_operator(stypy.reporting.localization.Localization(__file__, 2390, 56), '+', unicode_83449, x_83450)
        
        list_83455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2390, 56), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2390, 56), list_83455, result_add_83451)
        # Processing the call keyword arguments (line 2390)
        kwargs_83456 = {}
        # Getting the type of 'oneOf' (line 2390)
        oneOf_83448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2390, 49), 'oneOf', False)
        # Calling oneOf(args, kwargs) (line 2390)
        oneOf_call_result_83457 = invoke(stypy.reporting.localization.Localization(__file__, 2390, 49), oneOf_83448, *[list_83455], **kwargs_83456)
        
        # Applying the binary operator '+' (line 2390)
        result_add_83458 = python_operator(stypy.reporting.localization.Localization(__file__, 2390, 28), '+', Suppress_call_result_83447, oneOf_call_result_83457)
        
        # Applying the binary operator '<<=' (line 2390)
        result_ilshift_83459 = python_operator(stypy.reporting.localization.Localization(__file__, 2390, 8), '<<=', latexfont_83442, result_add_83458)
        # Getting the type of 'p' (line 2390)
        p_83460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2390, 8), 'p')
        # Setting the type of the member 'latexfont' of a type (line 2390)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2390, 8), p_83460, 'latexfont', result_ilshift_83459)
        
        
        # Getting the type of 'p' (line 2392)
        p_83461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2392, 8), 'p')
        # Obtaining the member 'frac' of a type (line 2392)
        frac_83462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2392, 8), p_83461, 'frac')
        
        # Call to Group(...): (line 2392)
        # Processing the call arguments (line 2392)
        
        # Call to Suppress(...): (line 2393)
        # Processing the call arguments (line 2393)
        
        # Call to Literal(...): (line 2393)
        # Processing the call arguments (line 2393)
        unicode_83466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2393, 46), 'unicode', u'\\frac')
        # Processing the call keyword arguments (line 2393)
        kwargs_83467 = {}
        # Getting the type of 'Literal' (line 2393)
        Literal_83465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2393, 38), 'Literal', False)
        # Calling Literal(args, kwargs) (line 2393)
        Literal_call_result_83468 = invoke(stypy.reporting.localization.Localization(__file__, 2393, 38), Literal_83465, *[unicode_83466], **kwargs_83467)
        
        # Processing the call keyword arguments (line 2393)
        kwargs_83469 = {}
        # Getting the type of 'Suppress' (line 2393)
        Suppress_83464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2393, 29), 'Suppress', False)
        # Calling Suppress(args, kwargs) (line 2393)
        Suppress_call_result_83470 = invoke(stypy.reporting.localization.Localization(__file__, 2393, 29), Suppress_83464, *[Literal_call_result_83468], **kwargs_83469)
        
        # Getting the type of 'p' (line 2394)
        p_83471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2394, 31), 'p', False)
        # Obtaining the member 'required_group' of a type (line 2394)
        required_group_83472 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2394, 31), p_83471, 'required_group')
        # Getting the type of 'p' (line 2394)
        p_83473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2394, 50), 'p', False)
        # Obtaining the member 'required_group' of a type (line 2394)
        required_group_83474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2394, 50), p_83473, 'required_group')
        # Applying the binary operator '+' (line 2394)
        result_add_83475 = python_operator(stypy.reporting.localization.Localization(__file__, 2394, 31), '+', required_group_83472, required_group_83474)
        
        
        # Call to Error(...): (line 2394)
        # Processing the call arguments (line 2394)
        unicode_83477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2394, 76), 'unicode', u'Expected \\frac{num}{den}')
        # Processing the call keyword arguments (line 2394)
        kwargs_83478 = {}
        # Getting the type of 'Error' (line 2394)
        Error_83476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2394, 70), 'Error', False)
        # Calling Error(args, kwargs) (line 2394)
        Error_call_result_83479 = invoke(stypy.reporting.localization.Localization(__file__, 2394, 70), Error_83476, *[unicode_83477], **kwargs_83478)
        
        # Applying the binary operator '|' (line 2394)
        result_or__83480 = python_operator(stypy.reporting.localization.Localization(__file__, 2394, 30), '|', result_add_83475, Error_call_result_83479)
        
        # Applying the binary operator '-' (line 2393)
        result_sub_83481 = python_operator(stypy.reporting.localization.Localization(__file__, 2393, 29), '-', Suppress_call_result_83470, result_or__83480)
        
        # Processing the call keyword arguments (line 2392)
        kwargs_83482 = {}
        # Getting the type of 'Group' (line 2392)
        Group_83463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2392, 28), 'Group', False)
        # Calling Group(args, kwargs) (line 2392)
        Group_call_result_83483 = invoke(stypy.reporting.localization.Localization(__file__, 2392, 28), Group_83463, *[result_sub_83481], **kwargs_83482)
        
        # Applying the binary operator '<<=' (line 2392)
        result_ilshift_83484 = python_operator(stypy.reporting.localization.Localization(__file__, 2392, 8), '<<=', frac_83462, Group_call_result_83483)
        # Getting the type of 'p' (line 2392)
        p_83485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2392, 8), 'p')
        # Setting the type of the member 'frac' of a type (line 2392)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2392, 8), p_83485, 'frac', result_ilshift_83484)
        
        
        # Getting the type of 'p' (line 2397)
        p_83486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2397, 8), 'p')
        # Obtaining the member 'dfrac' of a type (line 2397)
        dfrac_83487 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2397, 8), p_83486, 'dfrac')
        
        # Call to Group(...): (line 2397)
        # Processing the call arguments (line 2397)
        
        # Call to Suppress(...): (line 2398)
        # Processing the call arguments (line 2398)
        
        # Call to Literal(...): (line 2398)
        # Processing the call arguments (line 2398)
        unicode_83491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2398, 46), 'unicode', u'\\dfrac')
        # Processing the call keyword arguments (line 2398)
        kwargs_83492 = {}
        # Getting the type of 'Literal' (line 2398)
        Literal_83490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2398, 38), 'Literal', False)
        # Calling Literal(args, kwargs) (line 2398)
        Literal_call_result_83493 = invoke(stypy.reporting.localization.Localization(__file__, 2398, 38), Literal_83490, *[unicode_83491], **kwargs_83492)
        
        # Processing the call keyword arguments (line 2398)
        kwargs_83494 = {}
        # Getting the type of 'Suppress' (line 2398)
        Suppress_83489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2398, 29), 'Suppress', False)
        # Calling Suppress(args, kwargs) (line 2398)
        Suppress_call_result_83495 = invoke(stypy.reporting.localization.Localization(__file__, 2398, 29), Suppress_83489, *[Literal_call_result_83493], **kwargs_83494)
        
        # Getting the type of 'p' (line 2399)
        p_83496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2399, 31), 'p', False)
        # Obtaining the member 'required_group' of a type (line 2399)
        required_group_83497 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2399, 31), p_83496, 'required_group')
        # Getting the type of 'p' (line 2399)
        p_83498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2399, 50), 'p', False)
        # Obtaining the member 'required_group' of a type (line 2399)
        required_group_83499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2399, 50), p_83498, 'required_group')
        # Applying the binary operator '+' (line 2399)
        result_add_83500 = python_operator(stypy.reporting.localization.Localization(__file__, 2399, 31), '+', required_group_83497, required_group_83499)
        
        
        # Call to Error(...): (line 2399)
        # Processing the call arguments (line 2399)
        unicode_83502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2399, 76), 'unicode', u'Expected \\dfrac{num}{den}')
        # Processing the call keyword arguments (line 2399)
        kwargs_83503 = {}
        # Getting the type of 'Error' (line 2399)
        Error_83501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2399, 70), 'Error', False)
        # Calling Error(args, kwargs) (line 2399)
        Error_call_result_83504 = invoke(stypy.reporting.localization.Localization(__file__, 2399, 70), Error_83501, *[unicode_83502], **kwargs_83503)
        
        # Applying the binary operator '|' (line 2399)
        result_or__83505 = python_operator(stypy.reporting.localization.Localization(__file__, 2399, 30), '|', result_add_83500, Error_call_result_83504)
        
        # Applying the binary operator '-' (line 2398)
        result_sub_83506 = python_operator(stypy.reporting.localization.Localization(__file__, 2398, 29), '-', Suppress_call_result_83495, result_or__83505)
        
        # Processing the call keyword arguments (line 2397)
        kwargs_83507 = {}
        # Getting the type of 'Group' (line 2397)
        Group_83488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2397, 28), 'Group', False)
        # Calling Group(args, kwargs) (line 2397)
        Group_call_result_83508 = invoke(stypy.reporting.localization.Localization(__file__, 2397, 28), Group_83488, *[result_sub_83506], **kwargs_83507)
        
        # Applying the binary operator '<<=' (line 2397)
        result_ilshift_83509 = python_operator(stypy.reporting.localization.Localization(__file__, 2397, 8), '<<=', dfrac_83487, Group_call_result_83508)
        # Getting the type of 'p' (line 2397)
        p_83510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2397, 8), 'p')
        # Setting the type of the member 'dfrac' of a type (line 2397)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2397, 8), p_83510, 'dfrac', result_ilshift_83509)
        
        
        # Getting the type of 'p' (line 2402)
        p_83511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2402, 8), 'p')
        # Obtaining the member 'stackrel' of a type (line 2402)
        stackrel_83512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2402, 8), p_83511, 'stackrel')
        
        # Call to Group(...): (line 2402)
        # Processing the call arguments (line 2402)
        
        # Call to Suppress(...): (line 2403)
        # Processing the call arguments (line 2403)
        
        # Call to Literal(...): (line 2403)
        # Processing the call arguments (line 2403)
        unicode_83516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2403, 46), 'unicode', u'\\stackrel')
        # Processing the call keyword arguments (line 2403)
        kwargs_83517 = {}
        # Getting the type of 'Literal' (line 2403)
        Literal_83515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2403, 38), 'Literal', False)
        # Calling Literal(args, kwargs) (line 2403)
        Literal_call_result_83518 = invoke(stypy.reporting.localization.Localization(__file__, 2403, 38), Literal_83515, *[unicode_83516], **kwargs_83517)
        
        # Processing the call keyword arguments (line 2403)
        kwargs_83519 = {}
        # Getting the type of 'Suppress' (line 2403)
        Suppress_83514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2403, 29), 'Suppress', False)
        # Calling Suppress(args, kwargs) (line 2403)
        Suppress_call_result_83520 = invoke(stypy.reporting.localization.Localization(__file__, 2403, 29), Suppress_83514, *[Literal_call_result_83518], **kwargs_83519)
        
        # Getting the type of 'p' (line 2404)
        p_83521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2404, 31), 'p', False)
        # Obtaining the member 'required_group' of a type (line 2404)
        required_group_83522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2404, 31), p_83521, 'required_group')
        # Getting the type of 'p' (line 2404)
        p_83523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2404, 50), 'p', False)
        # Obtaining the member 'required_group' of a type (line 2404)
        required_group_83524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2404, 50), p_83523, 'required_group')
        # Applying the binary operator '+' (line 2404)
        result_add_83525 = python_operator(stypy.reporting.localization.Localization(__file__, 2404, 31), '+', required_group_83522, required_group_83524)
        
        
        # Call to Error(...): (line 2404)
        # Processing the call arguments (line 2404)
        unicode_83527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2404, 76), 'unicode', u'Expected \\stackrel{num}{den}')
        # Processing the call keyword arguments (line 2404)
        kwargs_83528 = {}
        # Getting the type of 'Error' (line 2404)
        Error_83526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2404, 70), 'Error', False)
        # Calling Error(args, kwargs) (line 2404)
        Error_call_result_83529 = invoke(stypy.reporting.localization.Localization(__file__, 2404, 70), Error_83526, *[unicode_83527], **kwargs_83528)
        
        # Applying the binary operator '|' (line 2404)
        result_or__83530 = python_operator(stypy.reporting.localization.Localization(__file__, 2404, 30), '|', result_add_83525, Error_call_result_83529)
        
        # Applying the binary operator '-' (line 2403)
        result_sub_83531 = python_operator(stypy.reporting.localization.Localization(__file__, 2403, 29), '-', Suppress_call_result_83520, result_or__83530)
        
        # Processing the call keyword arguments (line 2402)
        kwargs_83532 = {}
        # Getting the type of 'Group' (line 2402)
        Group_83513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2402, 28), 'Group', False)
        # Calling Group(args, kwargs) (line 2402)
        Group_call_result_83533 = invoke(stypy.reporting.localization.Localization(__file__, 2402, 28), Group_83513, *[result_sub_83531], **kwargs_83532)
        
        # Applying the binary operator '<<=' (line 2402)
        result_ilshift_83534 = python_operator(stypy.reporting.localization.Localization(__file__, 2402, 8), '<<=', stackrel_83512, Group_call_result_83533)
        # Getting the type of 'p' (line 2402)
        p_83535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2402, 8), 'p')
        # Setting the type of the member 'stackrel' of a type (line 2402)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2402, 8), p_83535, 'stackrel', result_ilshift_83534)
        
        
        # Getting the type of 'p' (line 2407)
        p_83536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2407, 8), 'p')
        # Obtaining the member 'binom' of a type (line 2407)
        binom_83537 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2407, 8), p_83536, 'binom')
        
        # Call to Group(...): (line 2407)
        # Processing the call arguments (line 2407)
        
        # Call to Suppress(...): (line 2408)
        # Processing the call arguments (line 2408)
        
        # Call to Literal(...): (line 2408)
        # Processing the call arguments (line 2408)
        unicode_83541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2408, 46), 'unicode', u'\\binom')
        # Processing the call keyword arguments (line 2408)
        kwargs_83542 = {}
        # Getting the type of 'Literal' (line 2408)
        Literal_83540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2408, 38), 'Literal', False)
        # Calling Literal(args, kwargs) (line 2408)
        Literal_call_result_83543 = invoke(stypy.reporting.localization.Localization(__file__, 2408, 38), Literal_83540, *[unicode_83541], **kwargs_83542)
        
        # Processing the call keyword arguments (line 2408)
        kwargs_83544 = {}
        # Getting the type of 'Suppress' (line 2408)
        Suppress_83539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2408, 29), 'Suppress', False)
        # Calling Suppress(args, kwargs) (line 2408)
        Suppress_call_result_83545 = invoke(stypy.reporting.localization.Localization(__file__, 2408, 29), Suppress_83539, *[Literal_call_result_83543], **kwargs_83544)
        
        # Getting the type of 'p' (line 2409)
        p_83546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2409, 31), 'p', False)
        # Obtaining the member 'required_group' of a type (line 2409)
        required_group_83547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2409, 31), p_83546, 'required_group')
        # Getting the type of 'p' (line 2409)
        p_83548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2409, 50), 'p', False)
        # Obtaining the member 'required_group' of a type (line 2409)
        required_group_83549 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2409, 50), p_83548, 'required_group')
        # Applying the binary operator '+' (line 2409)
        result_add_83550 = python_operator(stypy.reporting.localization.Localization(__file__, 2409, 31), '+', required_group_83547, required_group_83549)
        
        
        # Call to Error(...): (line 2409)
        # Processing the call arguments (line 2409)
        unicode_83552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2409, 76), 'unicode', u'Expected \\binom{num}{den}')
        # Processing the call keyword arguments (line 2409)
        kwargs_83553 = {}
        # Getting the type of 'Error' (line 2409)
        Error_83551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2409, 70), 'Error', False)
        # Calling Error(args, kwargs) (line 2409)
        Error_call_result_83554 = invoke(stypy.reporting.localization.Localization(__file__, 2409, 70), Error_83551, *[unicode_83552], **kwargs_83553)
        
        # Applying the binary operator '|' (line 2409)
        result_or__83555 = python_operator(stypy.reporting.localization.Localization(__file__, 2409, 30), '|', result_add_83550, Error_call_result_83554)
        
        # Applying the binary operator '-' (line 2408)
        result_sub_83556 = python_operator(stypy.reporting.localization.Localization(__file__, 2408, 29), '-', Suppress_call_result_83545, result_or__83555)
        
        # Processing the call keyword arguments (line 2407)
        kwargs_83557 = {}
        # Getting the type of 'Group' (line 2407)
        Group_83538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2407, 28), 'Group', False)
        # Calling Group(args, kwargs) (line 2407)
        Group_call_result_83558 = invoke(stypy.reporting.localization.Localization(__file__, 2407, 28), Group_83538, *[result_sub_83556], **kwargs_83557)
        
        # Applying the binary operator '<<=' (line 2407)
        result_ilshift_83559 = python_operator(stypy.reporting.localization.Localization(__file__, 2407, 8), '<<=', binom_83537, Group_call_result_83558)
        # Getting the type of 'p' (line 2407)
        p_83560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2407, 8), 'p')
        # Setting the type of the member 'binom' of a type (line 2407)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2407, 8), p_83560, 'binom', result_ilshift_83559)
        
        
        # Getting the type of 'p' (line 2412)
        p_83561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2412, 8), 'p')
        # Obtaining the member 'ambi_delim' of a type (line 2412)
        ambi_delim_83562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2412, 8), p_83561, 'ambi_delim')
        
        # Call to oneOf(...): (line 2412)
        # Processing the call arguments (line 2412)
        
        # Call to list(...): (line 2412)
        # Processing the call arguments (line 2412)
        # Getting the type of 'self' (line 2412)
        self_83565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2412, 39), 'self', False)
        # Obtaining the member '_ambi_delim' of a type (line 2412)
        _ambi_delim_83566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2412, 39), self_83565, '_ambi_delim')
        # Processing the call keyword arguments (line 2412)
        kwargs_83567 = {}
        # Getting the type of 'list' (line 2412)
        list_83564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2412, 34), 'list', False)
        # Calling list(args, kwargs) (line 2412)
        list_call_result_83568 = invoke(stypy.reporting.localization.Localization(__file__, 2412, 34), list_83564, *[_ambi_delim_83566], **kwargs_83567)
        
        # Processing the call keyword arguments (line 2412)
        kwargs_83569 = {}
        # Getting the type of 'oneOf' (line 2412)
        oneOf_83563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2412, 28), 'oneOf', False)
        # Calling oneOf(args, kwargs) (line 2412)
        oneOf_call_result_83570 = invoke(stypy.reporting.localization.Localization(__file__, 2412, 28), oneOf_83563, *[list_call_result_83568], **kwargs_83569)
        
        # Applying the binary operator '<<=' (line 2412)
        result_ilshift_83571 = python_operator(stypy.reporting.localization.Localization(__file__, 2412, 8), '<<=', ambi_delim_83562, oneOf_call_result_83570)
        # Getting the type of 'p' (line 2412)
        p_83572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2412, 8), 'p')
        # Setting the type of the member 'ambi_delim' of a type (line 2412)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2412, 8), p_83572, 'ambi_delim', result_ilshift_83571)
        
        
        # Getting the type of 'p' (line 2413)
        p_83573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 8), 'p')
        # Obtaining the member 'left_delim' of a type (line 2413)
        left_delim_83574 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2413, 8), p_83573, 'left_delim')
        
        # Call to oneOf(...): (line 2413)
        # Processing the call arguments (line 2413)
        
        # Call to list(...): (line 2413)
        # Processing the call arguments (line 2413)
        # Getting the type of 'self' (line 2413)
        self_83577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 39), 'self', False)
        # Obtaining the member '_left_delim' of a type (line 2413)
        _left_delim_83578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2413, 39), self_83577, '_left_delim')
        # Processing the call keyword arguments (line 2413)
        kwargs_83579 = {}
        # Getting the type of 'list' (line 2413)
        list_83576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 34), 'list', False)
        # Calling list(args, kwargs) (line 2413)
        list_call_result_83580 = invoke(stypy.reporting.localization.Localization(__file__, 2413, 34), list_83576, *[_left_delim_83578], **kwargs_83579)
        
        # Processing the call keyword arguments (line 2413)
        kwargs_83581 = {}
        # Getting the type of 'oneOf' (line 2413)
        oneOf_83575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 28), 'oneOf', False)
        # Calling oneOf(args, kwargs) (line 2413)
        oneOf_call_result_83582 = invoke(stypy.reporting.localization.Localization(__file__, 2413, 28), oneOf_83575, *[list_call_result_83580], **kwargs_83581)
        
        # Applying the binary operator '<<=' (line 2413)
        result_ilshift_83583 = python_operator(stypy.reporting.localization.Localization(__file__, 2413, 8), '<<=', left_delim_83574, oneOf_call_result_83582)
        # Getting the type of 'p' (line 2413)
        p_83584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 8), 'p')
        # Setting the type of the member 'left_delim' of a type (line 2413)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2413, 8), p_83584, 'left_delim', result_ilshift_83583)
        
        
        # Getting the type of 'p' (line 2414)
        p_83585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 8), 'p')
        # Obtaining the member 'right_delim' of a type (line 2414)
        right_delim_83586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2414, 8), p_83585, 'right_delim')
        
        # Call to oneOf(...): (line 2414)
        # Processing the call arguments (line 2414)
        
        # Call to list(...): (line 2414)
        # Processing the call arguments (line 2414)
        # Getting the type of 'self' (line 2414)
        self_83589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 39), 'self', False)
        # Obtaining the member '_right_delim' of a type (line 2414)
        _right_delim_83590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2414, 39), self_83589, '_right_delim')
        # Processing the call keyword arguments (line 2414)
        kwargs_83591 = {}
        # Getting the type of 'list' (line 2414)
        list_83588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 34), 'list', False)
        # Calling list(args, kwargs) (line 2414)
        list_call_result_83592 = invoke(stypy.reporting.localization.Localization(__file__, 2414, 34), list_83588, *[_right_delim_83590], **kwargs_83591)
        
        # Processing the call keyword arguments (line 2414)
        kwargs_83593 = {}
        # Getting the type of 'oneOf' (line 2414)
        oneOf_83587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 28), 'oneOf', False)
        # Calling oneOf(args, kwargs) (line 2414)
        oneOf_call_result_83594 = invoke(stypy.reporting.localization.Localization(__file__, 2414, 28), oneOf_83587, *[list_call_result_83592], **kwargs_83593)
        
        # Applying the binary operator '<<=' (line 2414)
        result_ilshift_83595 = python_operator(stypy.reporting.localization.Localization(__file__, 2414, 8), '<<=', right_delim_83586, oneOf_call_result_83594)
        # Getting the type of 'p' (line 2414)
        p_83596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 8), 'p')
        # Setting the type of the member 'right_delim' of a type (line 2414)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2414, 8), p_83596, 'right_delim', result_ilshift_83595)
        
        
        # Getting the type of 'p' (line 2415)
        p_83597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2415, 8), 'p')
        # Obtaining the member 'right_delim_safe' of a type (line 2415)
        right_delim_safe_83598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2415, 8), p_83597, 'right_delim_safe')
        
        # Call to oneOf(...): (line 2415)
        # Processing the call arguments (line 2415)
        
        # Call to list(...): (line 2415)
        # Processing the call arguments (line 2415)
        # Getting the type of 'self' (line 2415)
        self_83601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2415, 42), 'self', False)
        # Obtaining the member '_right_delim' of a type (line 2415)
        _right_delim_83602 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2415, 42), self_83601, '_right_delim')
        
        # Obtaining an instance of the builtin type 'set' (line 2415)
        set_83603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2415, 62), 'set')
        # Adding type elements to the builtin type 'set' instance (line 2415)
        # Adding element type (line 2415)
        unicode_83604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2415, 63), 'unicode', u'}')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2415, 62), set_83603, unicode_83604)
        
        # Applying the binary operator '-' (line 2415)
        result_sub_83605 = python_operator(stypy.reporting.localization.Localization(__file__, 2415, 42), '-', _right_delim_83602, set_83603)
        
        # Processing the call keyword arguments (line 2415)
        kwargs_83606 = {}
        # Getting the type of 'list' (line 2415)
        list_83600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2415, 37), 'list', False)
        # Calling list(args, kwargs) (line 2415)
        list_call_result_83607 = invoke(stypy.reporting.localization.Localization(__file__, 2415, 37), list_83600, *[result_sub_83605], **kwargs_83606)
        
        
        # Obtaining an instance of the builtin type 'list' (line 2415)
        list_83608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2415, 71), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2415)
        # Adding element type (line 2415)
        unicode_83609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2415, 72), 'unicode', u'\\}')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2415, 71), list_83608, unicode_83609)
        
        # Applying the binary operator '+' (line 2415)
        result_add_83610 = python_operator(stypy.reporting.localization.Localization(__file__, 2415, 37), '+', list_call_result_83607, list_83608)
        
        # Processing the call keyword arguments (line 2415)
        kwargs_83611 = {}
        # Getting the type of 'oneOf' (line 2415)
        oneOf_83599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2415, 31), 'oneOf', False)
        # Calling oneOf(args, kwargs) (line 2415)
        oneOf_call_result_83612 = invoke(stypy.reporting.localization.Localization(__file__, 2415, 31), oneOf_83599, *[result_add_83610], **kwargs_83611)
        
        # Applying the binary operator '<<=' (line 2415)
        result_ilshift_83613 = python_operator(stypy.reporting.localization.Localization(__file__, 2415, 8), '<<=', right_delim_safe_83598, oneOf_call_result_83612)
        # Getting the type of 'p' (line 2415)
        p_83614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2415, 8), 'p')
        # Setting the type of the member 'right_delim_safe' of a type (line 2415)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2415, 8), p_83614, 'right_delim_safe', result_ilshift_83613)
        
        
        # Getting the type of 'p' (line 2417)
        p_83615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2417, 8), 'p')
        # Obtaining the member 'genfrac' of a type (line 2417)
        genfrac_83616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2417, 8), p_83615, 'genfrac')
        
        # Call to Group(...): (line 2417)
        # Processing the call arguments (line 2417)
        
        # Call to Suppress(...): (line 2418)
        # Processing the call arguments (line 2418)
        
        # Call to Literal(...): (line 2418)
        # Processing the call arguments (line 2418)
        unicode_83620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2418, 46), 'unicode', u'\\genfrac')
        # Processing the call keyword arguments (line 2418)
        kwargs_83621 = {}
        # Getting the type of 'Literal' (line 2418)
        Literal_83619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2418, 38), 'Literal', False)
        # Calling Literal(args, kwargs) (line 2418)
        Literal_call_result_83622 = invoke(stypy.reporting.localization.Localization(__file__, 2418, 38), Literal_83619, *[unicode_83620], **kwargs_83621)
        
        # Processing the call keyword arguments (line 2418)
        kwargs_83623 = {}
        # Getting the type of 'Suppress' (line 2418)
        Suppress_83618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2418, 29), 'Suppress', False)
        # Calling Suppress(args, kwargs) (line 2418)
        Suppress_call_result_83624 = invoke(stypy.reporting.localization.Localization(__file__, 2418, 29), Suppress_83618, *[Literal_call_result_83622], **kwargs_83623)
        
        # Getting the type of 'p' (line 2419)
        p_83625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2419, 32), 'p', False)
        # Obtaining the member 'lbrace' of a type (line 2419)
        lbrace_83626 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2419, 32), p_83625, 'lbrace')
        
        # Call to Optional(...): (line 2419)
        # Processing the call arguments (line 2419)
        # Getting the type of 'p' (line 2419)
        p_83628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2419, 52), 'p', False)
        # Obtaining the member 'ambi_delim' of a type (line 2419)
        ambi_delim_83629 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2419, 52), p_83628, 'ambi_delim')
        # Getting the type of 'p' (line 2419)
        p_83630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2419, 67), 'p', False)
        # Obtaining the member 'left_delim' of a type (line 2419)
        left_delim_83631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2419, 67), p_83630, 'left_delim')
        # Applying the binary operator '|' (line 2419)
        result_or__83632 = python_operator(stypy.reporting.localization.Localization(__file__, 2419, 52), '|', ambi_delim_83629, left_delim_83631)
        
        # Processing the call keyword arguments (line 2419)
        unicode_83633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2419, 89), 'unicode', u'')
        keyword_83634 = unicode_83633
        kwargs_83635 = {'default': keyword_83634}
        # Getting the type of 'Optional' (line 2419)
        Optional_83627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2419, 43), 'Optional', False)
        # Calling Optional(args, kwargs) (line 2419)
        Optional_call_result_83636 = invoke(stypy.reporting.localization.Localization(__file__, 2419, 43), Optional_83627, *[result_or__83632], **kwargs_83635)
        
        # Applying the binary operator '+' (line 2419)
        result_add_83637 = python_operator(stypy.reporting.localization.Localization(__file__, 2419, 32), '+', lbrace_83626, Optional_call_result_83636)
        
        # Getting the type of 'p' (line 2419)
        p_83638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2419, 95), 'p', False)
        # Obtaining the member 'rbrace' of a type (line 2419)
        rbrace_83639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2419, 95), p_83638, 'rbrace')
        # Applying the binary operator '+' (line 2419)
        result_add_83640 = python_operator(stypy.reporting.localization.Localization(__file__, 2419, 93), '+', result_add_83637, rbrace_83639)
        
        # Getting the type of 'p' (line 2420)
        p_83641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2420, 32), 'p', False)
        # Obtaining the member 'lbrace' of a type (line 2420)
        lbrace_83642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2420, 32), p_83641, 'lbrace')
        
        # Call to Optional(...): (line 2420)
        # Processing the call arguments (line 2420)
        # Getting the type of 'p' (line 2420)
        p_83644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2420, 52), 'p', False)
        # Obtaining the member 'ambi_delim' of a type (line 2420)
        ambi_delim_83645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2420, 52), p_83644, 'ambi_delim')
        # Getting the type of 'p' (line 2420)
        p_83646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2420, 67), 'p', False)
        # Obtaining the member 'right_delim_safe' of a type (line 2420)
        right_delim_safe_83647 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2420, 67), p_83646, 'right_delim_safe')
        # Applying the binary operator '|' (line 2420)
        result_or__83648 = python_operator(stypy.reporting.localization.Localization(__file__, 2420, 52), '|', ambi_delim_83645, right_delim_safe_83647)
        
        # Processing the call keyword arguments (line 2420)
        unicode_83649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2420, 95), 'unicode', u'')
        keyword_83650 = unicode_83649
        kwargs_83651 = {'default': keyword_83650}
        # Getting the type of 'Optional' (line 2420)
        Optional_83643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2420, 43), 'Optional', False)
        # Calling Optional(args, kwargs) (line 2420)
        Optional_call_result_83652 = invoke(stypy.reporting.localization.Localization(__file__, 2420, 43), Optional_83643, *[result_or__83648], **kwargs_83651)
        
        # Applying the binary operator '+' (line 2420)
        result_add_83653 = python_operator(stypy.reporting.localization.Localization(__file__, 2420, 32), '+', lbrace_83642, Optional_call_result_83652)
        
        # Getting the type of 'p' (line 2420)
        p_83654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2420, 101), 'p', False)
        # Obtaining the member 'rbrace' of a type (line 2420)
        rbrace_83655 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2420, 101), p_83654, 'rbrace')
        # Applying the binary operator '+' (line 2420)
        result_add_83656 = python_operator(stypy.reporting.localization.Localization(__file__, 2420, 99), '+', result_add_83653, rbrace_83655)
        
        # Applying the binary operator '+' (line 2419)
        result_add_83657 = python_operator(stypy.reporting.localization.Localization(__file__, 2419, 31), '+', result_add_83640, result_add_83656)
        
        # Getting the type of 'p' (line 2421)
        p_83658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2421, 32), 'p', False)
        # Obtaining the member 'lbrace' of a type (line 2421)
        lbrace_83659 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2421, 32), p_83658, 'lbrace')
        # Getting the type of 'p' (line 2421)
        p_83660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2421, 43), 'p', False)
        # Obtaining the member 'float_literal' of a type (line 2421)
        float_literal_83661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2421, 43), p_83660, 'float_literal')
        # Applying the binary operator '+' (line 2421)
        result_add_83662 = python_operator(stypy.reporting.localization.Localization(__file__, 2421, 32), '+', lbrace_83659, float_literal_83661)
        
        # Getting the type of 'p' (line 2421)
        p_83663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2421, 61), 'p', False)
        # Obtaining the member 'rbrace' of a type (line 2421)
        rbrace_83664 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2421, 61), p_83663, 'rbrace')
        # Applying the binary operator '+' (line 2421)
        result_add_83665 = python_operator(stypy.reporting.localization.Localization(__file__, 2421, 59), '+', result_add_83662, rbrace_83664)
        
        # Applying the binary operator '+' (line 2421)
        result_add_83666 = python_operator(stypy.reporting.localization.Localization(__file__, 2421, 27), '+', result_add_83657, result_add_83665)
        
        # Getting the type of 'p' (line 2422)
        p_83667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2422, 31), 'p', False)
        # Obtaining the member 'simple_group' of a type (line 2422)
        simple_group_83668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2422, 31), p_83667, 'simple_group')
        # Applying the binary operator '+' (line 2422)
        result_add_83669 = python_operator(stypy.reporting.localization.Localization(__file__, 2422, 27), '+', result_add_83666, simple_group_83668)
        
        # Getting the type of 'p' (line 2422)
        p_83670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2422, 48), 'p', False)
        # Obtaining the member 'required_group' of a type (line 2422)
        required_group_83671 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2422, 48), p_83670, 'required_group')
        # Applying the binary operator '+' (line 2422)
        result_add_83672 = python_operator(stypy.reporting.localization.Localization(__file__, 2422, 46), '+', result_add_83669, required_group_83671)
        
        # Getting the type of 'p' (line 2422)
        p_83673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2422, 67), 'p', False)
        # Obtaining the member 'required_group' of a type (line 2422)
        required_group_83674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2422, 67), p_83673, 'required_group')
        # Applying the binary operator '+' (line 2422)
        result_add_83675 = python_operator(stypy.reporting.localization.Localization(__file__, 2422, 65), '+', result_add_83672, required_group_83674)
        
        
        # Call to Error(...): (line 2423)
        # Processing the call arguments (line 2423)
        unicode_83677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2423, 35), 'unicode', u'Expected \\genfrac{ldelim}{rdelim}{rulesize}{style}{num}{den}')
        # Processing the call keyword arguments (line 2423)
        kwargs_83678 = {}
        # Getting the type of 'Error' (line 2423)
        Error_83676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2423, 29), 'Error', False)
        # Calling Error(args, kwargs) (line 2423)
        Error_call_result_83679 = invoke(stypy.reporting.localization.Localization(__file__, 2423, 29), Error_83676, *[unicode_83677], **kwargs_83678)
        
        # Applying the binary operator '|' (line 2419)
        result_or__83680 = python_operator(stypy.reporting.localization.Localization(__file__, 2419, 30), '|', result_add_83675, Error_call_result_83679)
        
        # Applying the binary operator '-' (line 2418)
        result_sub_83681 = python_operator(stypy.reporting.localization.Localization(__file__, 2418, 29), '-', Suppress_call_result_83624, result_or__83680)
        
        # Processing the call keyword arguments (line 2417)
        kwargs_83682 = {}
        # Getting the type of 'Group' (line 2417)
        Group_83617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2417, 28), 'Group', False)
        # Calling Group(args, kwargs) (line 2417)
        Group_call_result_83683 = invoke(stypy.reporting.localization.Localization(__file__, 2417, 28), Group_83617, *[result_sub_83681], **kwargs_83682)
        
        # Applying the binary operator '<<=' (line 2417)
        result_ilshift_83684 = python_operator(stypy.reporting.localization.Localization(__file__, 2417, 8), '<<=', genfrac_83616, Group_call_result_83683)
        # Getting the type of 'p' (line 2417)
        p_83685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2417, 8), 'p')
        # Setting the type of the member 'genfrac' of a type (line 2417)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2417, 8), p_83685, 'genfrac', result_ilshift_83684)
        
        
        # Getting the type of 'p' (line 2426)
        p_83686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2426, 8), 'p')
        # Obtaining the member 'sqrt' of a type (line 2426)
        sqrt_83687 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2426, 8), p_83686, 'sqrt')
        
        # Call to Group(...): (line 2426)
        # Processing the call arguments (line 2426)
        
        # Call to Suppress(...): (line 2427)
        # Processing the call arguments (line 2427)
        
        # Call to Literal(...): (line 2427)
        # Processing the call arguments (line 2427)
        unicode_83691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2427, 46), 'unicode', u'\\sqrt')
        # Processing the call keyword arguments (line 2427)
        kwargs_83692 = {}
        # Getting the type of 'Literal' (line 2427)
        Literal_83690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2427, 38), 'Literal', False)
        # Calling Literal(args, kwargs) (line 2427)
        Literal_call_result_83693 = invoke(stypy.reporting.localization.Localization(__file__, 2427, 38), Literal_83690, *[unicode_83691], **kwargs_83692)
        
        # Processing the call keyword arguments (line 2427)
        kwargs_83694 = {}
        # Getting the type of 'Suppress' (line 2427)
        Suppress_83689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2427, 29), 'Suppress', False)
        # Calling Suppress(args, kwargs) (line 2427)
        Suppress_call_result_83695 = invoke(stypy.reporting.localization.Localization(__file__, 2427, 29), Suppress_83689, *[Literal_call_result_83693], **kwargs_83694)
        
        
        # Call to Optional(...): (line 2428)
        # Processing the call arguments (line 2428)
        # Getting the type of 'p' (line 2428)
        p_83697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2428, 40), 'p', False)
        # Obtaining the member 'lbracket' of a type (line 2428)
        lbracket_83698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2428, 40), p_83697, 'lbracket')
        # Getting the type of 'p' (line 2428)
        p_83699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2428, 53), 'p', False)
        # Obtaining the member 'int_literal' of a type (line 2428)
        int_literal_83700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2428, 53), p_83699, 'int_literal')
        # Applying the binary operator '+' (line 2428)
        result_add_83701 = python_operator(stypy.reporting.localization.Localization(__file__, 2428, 40), '+', lbracket_83698, int_literal_83700)
        
        # Getting the type of 'p' (line 2428)
        p_83702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2428, 69), 'p', False)
        # Obtaining the member 'rbracket' of a type (line 2428)
        rbracket_83703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2428, 69), p_83702, 'rbracket')
        # Applying the binary operator '+' (line 2428)
        result_add_83704 = python_operator(stypy.reporting.localization.Localization(__file__, 2428, 67), '+', result_add_83701, rbracket_83703)
        
        # Processing the call keyword arguments (line 2428)
        # Getting the type of 'None' (line 2428)
        None_83705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2428, 89), 'None', False)
        keyword_83706 = None_83705
        kwargs_83707 = {'default': keyword_83706}
        # Getting the type of 'Optional' (line 2428)
        Optional_83696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2428, 31), 'Optional', False)
        # Calling Optional(args, kwargs) (line 2428)
        Optional_call_result_83708 = invoke(stypy.reporting.localization.Localization(__file__, 2428, 31), Optional_83696, *[result_add_83704], **kwargs_83707)
        
        # Getting the type of 'p' (line 2429)
        p_83709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2429, 32), 'p', False)
        # Obtaining the member 'required_group' of a type (line 2429)
        required_group_83710 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2429, 32), p_83709, 'required_group')
        # Applying the binary operator '+' (line 2428)
        result_add_83711 = python_operator(stypy.reporting.localization.Localization(__file__, 2428, 31), '+', Optional_call_result_83708, required_group_83710)
        
        
        # Call to Error(...): (line 2430)
        # Processing the call arguments (line 2430)
        unicode_83713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2430, 35), 'unicode', u'Expected \\sqrt{value}')
        # Processing the call keyword arguments (line 2430)
        kwargs_83714 = {}
        # Getting the type of 'Error' (line 2430)
        Error_83712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2430, 29), 'Error', False)
        # Calling Error(args, kwargs) (line 2430)
        Error_call_result_83715 = invoke(stypy.reporting.localization.Localization(__file__, 2430, 29), Error_83712, *[unicode_83713], **kwargs_83714)
        
        # Applying the binary operator '|' (line 2428)
        result_or__83716 = python_operator(stypy.reporting.localization.Localization(__file__, 2428, 30), '|', result_add_83711, Error_call_result_83715)
        
        # Applying the binary operator '-' (line 2427)
        result_sub_83717 = python_operator(stypy.reporting.localization.Localization(__file__, 2427, 29), '-', Suppress_call_result_83695, result_or__83716)
        
        # Processing the call keyword arguments (line 2426)
        kwargs_83718 = {}
        # Getting the type of 'Group' (line 2426)
        Group_83688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2426, 28), 'Group', False)
        # Calling Group(args, kwargs) (line 2426)
        Group_call_result_83719 = invoke(stypy.reporting.localization.Localization(__file__, 2426, 28), Group_83688, *[result_sub_83717], **kwargs_83718)
        
        # Applying the binary operator '<<=' (line 2426)
        result_ilshift_83720 = python_operator(stypy.reporting.localization.Localization(__file__, 2426, 8), '<<=', sqrt_83687, Group_call_result_83719)
        # Getting the type of 'p' (line 2426)
        p_83721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2426, 8), 'p')
        # Setting the type of the member 'sqrt' of a type (line 2426)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2426, 8), p_83721, 'sqrt', result_ilshift_83720)
        
        
        # Getting the type of 'p' (line 2433)
        p_83722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2433, 8), 'p')
        # Obtaining the member 'overline' of a type (line 2433)
        overline_83723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2433, 8), p_83722, 'overline')
        
        # Call to Group(...): (line 2433)
        # Processing the call arguments (line 2433)
        
        # Call to Suppress(...): (line 2434)
        # Processing the call arguments (line 2434)
        
        # Call to Literal(...): (line 2434)
        # Processing the call arguments (line 2434)
        unicode_83727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2434, 46), 'unicode', u'\\overline')
        # Processing the call keyword arguments (line 2434)
        kwargs_83728 = {}
        # Getting the type of 'Literal' (line 2434)
        Literal_83726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 38), 'Literal', False)
        # Calling Literal(args, kwargs) (line 2434)
        Literal_call_result_83729 = invoke(stypy.reporting.localization.Localization(__file__, 2434, 38), Literal_83726, *[unicode_83727], **kwargs_83728)
        
        # Processing the call keyword arguments (line 2434)
        kwargs_83730 = {}
        # Getting the type of 'Suppress' (line 2434)
        Suppress_83725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 29), 'Suppress', False)
        # Calling Suppress(args, kwargs) (line 2434)
        Suppress_call_result_83731 = invoke(stypy.reporting.localization.Localization(__file__, 2434, 29), Suppress_83725, *[Literal_call_result_83729], **kwargs_83730)
        
        # Getting the type of 'p' (line 2435)
        p_83732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2435, 30), 'p', False)
        # Obtaining the member 'required_group' of a type (line 2435)
        required_group_83733 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2435, 30), p_83732, 'required_group')
        
        # Call to Error(...): (line 2435)
        # Processing the call arguments (line 2435)
        unicode_83735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2435, 55), 'unicode', u'Expected \\overline{value}')
        # Processing the call keyword arguments (line 2435)
        kwargs_83736 = {}
        # Getting the type of 'Error' (line 2435)
        Error_83734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2435, 49), 'Error', False)
        # Calling Error(args, kwargs) (line 2435)
        Error_call_result_83737 = invoke(stypy.reporting.localization.Localization(__file__, 2435, 49), Error_83734, *[unicode_83735], **kwargs_83736)
        
        # Applying the binary operator '|' (line 2435)
        result_or__83738 = python_operator(stypy.reporting.localization.Localization(__file__, 2435, 30), '|', required_group_83733, Error_call_result_83737)
        
        # Applying the binary operator '-' (line 2434)
        result_sub_83739 = python_operator(stypy.reporting.localization.Localization(__file__, 2434, 29), '-', Suppress_call_result_83731, result_or__83738)
        
        # Processing the call keyword arguments (line 2433)
        kwargs_83740 = {}
        # Getting the type of 'Group' (line 2433)
        Group_83724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2433, 28), 'Group', False)
        # Calling Group(args, kwargs) (line 2433)
        Group_call_result_83741 = invoke(stypy.reporting.localization.Localization(__file__, 2433, 28), Group_83724, *[result_sub_83739], **kwargs_83740)
        
        # Applying the binary operator '<<=' (line 2433)
        result_ilshift_83742 = python_operator(stypy.reporting.localization.Localization(__file__, 2433, 8), '<<=', overline_83723, Group_call_result_83741)
        # Getting the type of 'p' (line 2433)
        p_83743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2433, 8), 'p')
        # Setting the type of the member 'overline' of a type (line 2433)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2433, 8), p_83743, 'overline', result_ilshift_83742)
        
        
        # Getting the type of 'p' (line 2438)
        p_83744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2438, 8), 'p')
        # Obtaining the member 'unknown_symbol' of a type (line 2438)
        unknown_symbol_83745 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2438, 8), p_83744, 'unknown_symbol')
        
        # Call to Combine(...): (line 2438)
        # Processing the call arguments (line 2438)
        # Getting the type of 'p' (line 2438)
        p_83747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2438, 36), 'p', False)
        # Obtaining the member 'bslash' of a type (line 2438)
        bslash_83748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2438, 36), p_83747, 'bslash')
        
        # Call to Regex(...): (line 2438)
        # Processing the call arguments (line 2438)
        unicode_83750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2438, 53), 'unicode', u'[A-Za-z]*')
        # Processing the call keyword arguments (line 2438)
        kwargs_83751 = {}
        # Getting the type of 'Regex' (line 2438)
        Regex_83749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2438, 47), 'Regex', False)
        # Calling Regex(args, kwargs) (line 2438)
        Regex_call_result_83752 = invoke(stypy.reporting.localization.Localization(__file__, 2438, 47), Regex_83749, *[unicode_83750], **kwargs_83751)
        
        # Applying the binary operator '+' (line 2438)
        result_add_83753 = python_operator(stypy.reporting.localization.Localization(__file__, 2438, 36), '+', bslash_83748, Regex_call_result_83752)
        
        # Processing the call keyword arguments (line 2438)
        kwargs_83754 = {}
        # Getting the type of 'Combine' (line 2438)
        Combine_83746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2438, 28), 'Combine', False)
        # Calling Combine(args, kwargs) (line 2438)
        Combine_call_result_83755 = invoke(stypy.reporting.localization.Localization(__file__, 2438, 28), Combine_83746, *[result_add_83753], **kwargs_83754)
        
        # Applying the binary operator '<<=' (line 2438)
        result_ilshift_83756 = python_operator(stypy.reporting.localization.Localization(__file__, 2438, 8), '<<=', unknown_symbol_83745, Combine_call_result_83755)
        # Getting the type of 'p' (line 2438)
        p_83757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2438, 8), 'p')
        # Setting the type of the member 'unknown_symbol' of a type (line 2438)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2438, 8), p_83757, 'unknown_symbol', result_ilshift_83756)
        
        
        # Getting the type of 'p' (line 2440)
        p_83758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2440, 8), 'p')
        # Obtaining the member 'operatorname' of a type (line 2440)
        operatorname_83759 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2440, 8), p_83758, 'operatorname')
        
        # Call to Group(...): (line 2440)
        # Processing the call arguments (line 2440)
        
        # Call to Suppress(...): (line 2441)
        # Processing the call arguments (line 2441)
        
        # Call to Literal(...): (line 2441)
        # Processing the call arguments (line 2441)
        unicode_83763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2441, 46), 'unicode', u'\\operatorname')
        # Processing the call keyword arguments (line 2441)
        kwargs_83764 = {}
        # Getting the type of 'Literal' (line 2441)
        Literal_83762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2441, 38), 'Literal', False)
        # Calling Literal(args, kwargs) (line 2441)
        Literal_call_result_83765 = invoke(stypy.reporting.localization.Localization(__file__, 2441, 38), Literal_83762, *[unicode_83763], **kwargs_83764)
        
        # Processing the call keyword arguments (line 2441)
        kwargs_83766 = {}
        # Getting the type of 'Suppress' (line 2441)
        Suppress_83761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2441, 29), 'Suppress', False)
        # Calling Suppress(args, kwargs) (line 2441)
        Suppress_call_result_83767 = invoke(stypy.reporting.localization.Localization(__file__, 2441, 29), Suppress_83761, *[Literal_call_result_83765], **kwargs_83766)
        
        # Getting the type of 'p' (line 2442)
        p_83768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2442, 31), 'p', False)
        # Obtaining the member 'lbrace' of a type (line 2442)
        lbrace_83769 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2442, 31), p_83768, 'lbrace')
        
        # Call to ZeroOrMore(...): (line 2442)
        # Processing the call arguments (line 2442)
        # Getting the type of 'p' (line 2442)
        p_83771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2442, 53), 'p', False)
        # Obtaining the member 'simple' of a type (line 2442)
        simple_83772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2442, 53), p_83771, 'simple')
        # Getting the type of 'p' (line 2442)
        p_83773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2442, 64), 'p', False)
        # Obtaining the member 'unknown_symbol' of a type (line 2442)
        unknown_symbol_83774 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2442, 64), p_83773, 'unknown_symbol')
        # Applying the binary operator '|' (line 2442)
        result_or__83775 = python_operator(stypy.reporting.localization.Localization(__file__, 2442, 53), '|', simple_83772, unknown_symbol_83774)
        
        # Processing the call keyword arguments (line 2442)
        kwargs_83776 = {}
        # Getting the type of 'ZeroOrMore' (line 2442)
        ZeroOrMore_83770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2442, 42), 'ZeroOrMore', False)
        # Calling ZeroOrMore(args, kwargs) (line 2442)
        ZeroOrMore_call_result_83777 = invoke(stypy.reporting.localization.Localization(__file__, 2442, 42), ZeroOrMore_83770, *[result_or__83775], **kwargs_83776)
        
        # Applying the binary operator '+' (line 2442)
        result_add_83778 = python_operator(stypy.reporting.localization.Localization(__file__, 2442, 31), '+', lbrace_83769, ZeroOrMore_call_result_83777)
        
        # Getting the type of 'p' (line 2442)
        p_83779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2442, 84), 'p', False)
        # Obtaining the member 'rbrace' of a type (line 2442)
        rbrace_83780 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2442, 84), p_83779, 'rbrace')
        # Applying the binary operator '+' (line 2442)
        result_add_83781 = python_operator(stypy.reporting.localization.Localization(__file__, 2442, 82), '+', result_add_83778, rbrace_83780)
        
        
        # Call to Error(...): (line 2443)
        # Processing the call arguments (line 2443)
        unicode_83783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2443, 38), 'unicode', u'Expected \\operatorname{value}')
        # Processing the call keyword arguments (line 2443)
        kwargs_83784 = {}
        # Getting the type of 'Error' (line 2443)
        Error_83782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2443, 32), 'Error', False)
        # Calling Error(args, kwargs) (line 2443)
        Error_call_result_83785 = invoke(stypy.reporting.localization.Localization(__file__, 2443, 32), Error_83782, *[unicode_83783], **kwargs_83784)
        
        # Applying the binary operator '|' (line 2442)
        result_or__83786 = python_operator(stypy.reporting.localization.Localization(__file__, 2442, 30), '|', result_add_83781, Error_call_result_83785)
        
        # Applying the binary operator '-' (line 2441)
        result_sub_83787 = python_operator(stypy.reporting.localization.Localization(__file__, 2441, 29), '-', Suppress_call_result_83767, result_or__83786)
        
        # Processing the call keyword arguments (line 2440)
        kwargs_83788 = {}
        # Getting the type of 'Group' (line 2440)
        Group_83760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2440, 28), 'Group', False)
        # Calling Group(args, kwargs) (line 2440)
        Group_call_result_83789 = invoke(stypy.reporting.localization.Localization(__file__, 2440, 28), Group_83760, *[result_sub_83787], **kwargs_83788)
        
        # Applying the binary operator '<<=' (line 2440)
        result_ilshift_83790 = python_operator(stypy.reporting.localization.Localization(__file__, 2440, 8), '<<=', operatorname_83759, Group_call_result_83789)
        # Getting the type of 'p' (line 2440)
        p_83791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2440, 8), 'p')
        # Setting the type of the member 'operatorname' of a type (line 2440)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2440, 8), p_83791, 'operatorname', result_ilshift_83790)
        
        
        # Getting the type of 'p' (line 2446)
        p_83792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2446, 8), 'p')
        # Obtaining the member 'placeable' of a type (line 2446)
        placeable_83793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2446, 8), p_83792, 'placeable')
        # Getting the type of 'p' (line 2446)
        p_83794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2446, 30), 'p')
        # Obtaining the member 'snowflake' of a type (line 2446)
        snowflake_83795 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2446, 30), p_83794, 'snowflake')
        # Getting the type of 'p' (line 2448)
        p_83796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2448, 27), 'p')
        # Obtaining the member 'accent' of a type (line 2448)
        accent_83797 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2448, 27), p_83796, 'accent')
        # Applying the binary operator '|' (line 2446)
        result_or__83798 = python_operator(stypy.reporting.localization.Localization(__file__, 2446, 30), '|', snowflake_83795, accent_83797)
        
        # Getting the type of 'p' (line 2449)
        p_83799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2449, 27), 'p')
        # Obtaining the member 'symbol' of a type (line 2449)
        symbol_83800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2449, 27), p_83799, 'symbol')
        # Applying the binary operator '|' (line 2449)
        result_or__83801 = python_operator(stypy.reporting.localization.Localization(__file__, 2449, 25), '|', result_or__83798, symbol_83800)
        
        # Getting the type of 'p' (line 2450)
        p_83802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2450, 27), 'p')
        # Obtaining the member 'c_over_c' of a type (line 2450)
        c_over_c_83803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2450, 27), p_83802, 'c_over_c')
        # Applying the binary operator '|' (line 2450)
        result_or__83804 = python_operator(stypy.reporting.localization.Localization(__file__, 2450, 25), '|', result_or__83801, c_over_c_83803)
        
        # Getting the type of 'p' (line 2451)
        p_83805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2451, 27), 'p')
        # Obtaining the member 'function' of a type (line 2451)
        function_83806 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2451, 27), p_83805, 'function')
        # Applying the binary operator '|' (line 2451)
        result_or__83807 = python_operator(stypy.reporting.localization.Localization(__file__, 2451, 25), '|', result_or__83804, function_83806)
        
        # Getting the type of 'p' (line 2452)
        p_83808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2452, 27), 'p')
        # Obtaining the member 'group' of a type (line 2452)
        group_83809 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2452, 27), p_83808, 'group')
        # Applying the binary operator '|' (line 2452)
        result_or__83810 = python_operator(stypy.reporting.localization.Localization(__file__, 2452, 25), '|', result_or__83807, group_83809)
        
        # Getting the type of 'p' (line 2453)
        p_83811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2453, 27), 'p')
        # Obtaining the member 'frac' of a type (line 2453)
        frac_83812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2453, 27), p_83811, 'frac')
        # Applying the binary operator '|' (line 2453)
        result_or__83813 = python_operator(stypy.reporting.localization.Localization(__file__, 2453, 25), '|', result_or__83810, frac_83812)
        
        # Getting the type of 'p' (line 2454)
        p_83814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2454, 27), 'p')
        # Obtaining the member 'dfrac' of a type (line 2454)
        dfrac_83815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2454, 27), p_83814, 'dfrac')
        # Applying the binary operator '|' (line 2454)
        result_or__83816 = python_operator(stypy.reporting.localization.Localization(__file__, 2454, 25), '|', result_or__83813, dfrac_83815)
        
        # Getting the type of 'p' (line 2455)
        p_83817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2455, 27), 'p')
        # Obtaining the member 'stackrel' of a type (line 2455)
        stackrel_83818 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2455, 27), p_83817, 'stackrel')
        # Applying the binary operator '|' (line 2455)
        result_or__83819 = python_operator(stypy.reporting.localization.Localization(__file__, 2455, 25), '|', result_or__83816, stackrel_83818)
        
        # Getting the type of 'p' (line 2456)
        p_83820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2456, 27), 'p')
        # Obtaining the member 'binom' of a type (line 2456)
        binom_83821 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2456, 27), p_83820, 'binom')
        # Applying the binary operator '|' (line 2456)
        result_or__83822 = python_operator(stypy.reporting.localization.Localization(__file__, 2456, 25), '|', result_or__83819, binom_83821)
        
        # Getting the type of 'p' (line 2457)
        p_83823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2457, 27), 'p')
        # Obtaining the member 'genfrac' of a type (line 2457)
        genfrac_83824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2457, 27), p_83823, 'genfrac')
        # Applying the binary operator '|' (line 2457)
        result_or__83825 = python_operator(stypy.reporting.localization.Localization(__file__, 2457, 25), '|', result_or__83822, genfrac_83824)
        
        # Getting the type of 'p' (line 2458)
        p_83826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2458, 27), 'p')
        # Obtaining the member 'sqrt' of a type (line 2458)
        sqrt_83827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2458, 27), p_83826, 'sqrt')
        # Applying the binary operator '|' (line 2458)
        result_or__83828 = python_operator(stypy.reporting.localization.Localization(__file__, 2458, 25), '|', result_or__83825, sqrt_83827)
        
        # Getting the type of 'p' (line 2459)
        p_83829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2459, 27), 'p')
        # Obtaining the member 'overline' of a type (line 2459)
        overline_83830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2459, 27), p_83829, 'overline')
        # Applying the binary operator '|' (line 2459)
        result_or__83831 = python_operator(stypy.reporting.localization.Localization(__file__, 2459, 25), '|', result_or__83828, overline_83830)
        
        # Getting the type of 'p' (line 2460)
        p_83832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2460, 27), 'p')
        # Obtaining the member 'operatorname' of a type (line 2460)
        operatorname_83833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2460, 27), p_83832, 'operatorname')
        # Applying the binary operator '|' (line 2460)
        result_or__83834 = python_operator(stypy.reporting.localization.Localization(__file__, 2460, 25), '|', result_or__83831, operatorname_83833)
        
        # Applying the binary operator '<<=' (line 2446)
        result_ilshift_83835 = python_operator(stypy.reporting.localization.Localization(__file__, 2446, 8), '<<=', placeable_83793, result_or__83834)
        # Getting the type of 'p' (line 2446)
        p_83836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2446, 8), 'p')
        # Setting the type of the member 'placeable' of a type (line 2446)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2446, 8), p_83836, 'placeable', result_ilshift_83835)
        
        
        # Getting the type of 'p' (line 2463)
        p_83837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2463, 8), 'p')
        # Obtaining the member 'simple' of a type (line 2463)
        simple_83838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2463, 8), p_83837, 'simple')
        # Getting the type of 'p' (line 2463)
        p_83839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2463, 30), 'p')
        # Obtaining the member 'space' of a type (line 2463)
        space_83840 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2463, 30), p_83839, 'space')
        # Getting the type of 'p' (line 2464)
        p_83841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2464, 27), 'p')
        # Obtaining the member 'customspace' of a type (line 2464)
        customspace_83842 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2464, 27), p_83841, 'customspace')
        # Applying the binary operator '|' (line 2463)
        result_or__83843 = python_operator(stypy.reporting.localization.Localization(__file__, 2463, 30), '|', space_83840, customspace_83842)
        
        # Getting the type of 'p' (line 2465)
        p_83844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2465, 27), 'p')
        # Obtaining the member 'font' of a type (line 2465)
        font_83845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2465, 27), p_83844, 'font')
        # Applying the binary operator '|' (line 2465)
        result_or__83846 = python_operator(stypy.reporting.localization.Localization(__file__, 2465, 25), '|', result_or__83843, font_83845)
        
        # Getting the type of 'p' (line 2466)
        p_83847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2466, 27), 'p')
        # Obtaining the member 'subsuper' of a type (line 2466)
        subsuper_83848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2466, 27), p_83847, 'subsuper')
        # Applying the binary operator '|' (line 2466)
        result_or__83849 = python_operator(stypy.reporting.localization.Localization(__file__, 2466, 25), '|', result_or__83846, subsuper_83848)
        
        # Applying the binary operator '<<=' (line 2463)
        result_ilshift_83850 = python_operator(stypy.reporting.localization.Localization(__file__, 2463, 8), '<<=', simple_83838, result_or__83849)
        # Getting the type of 'p' (line 2463)
        p_83851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2463, 8), 'p')
        # Setting the type of the member 'simple' of a type (line 2463)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2463, 8), p_83851, 'simple', result_ilshift_83850)
        
        
        # Getting the type of 'p' (line 2469)
        p_83852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2469, 8), 'p')
        # Obtaining the member 'subsuperop' of a type (line 2469)
        subsuperop_83853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2469, 8), p_83852, 'subsuperop')
        
        # Call to oneOf(...): (line 2469)
        # Processing the call arguments (line 2469)
        
        # Obtaining an instance of the builtin type 'list' (line 2469)
        list_83855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2469, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2469)
        # Adding element type (line 2469)
        unicode_83856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2469, 35), 'unicode', u'_')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2469, 34), list_83855, unicode_83856)
        # Adding element type (line 2469)
        unicode_83857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2469, 40), 'unicode', u'^')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2469, 34), list_83855, unicode_83857)
        
        # Processing the call keyword arguments (line 2469)
        kwargs_83858 = {}
        # Getting the type of 'oneOf' (line 2469)
        oneOf_83854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2469, 28), 'oneOf', False)
        # Calling oneOf(args, kwargs) (line 2469)
        oneOf_call_result_83859 = invoke(stypy.reporting.localization.Localization(__file__, 2469, 28), oneOf_83854, *[list_83855], **kwargs_83858)
        
        # Applying the binary operator '<<=' (line 2469)
        result_ilshift_83860 = python_operator(stypy.reporting.localization.Localization(__file__, 2469, 8), '<<=', subsuperop_83853, oneOf_call_result_83859)
        # Getting the type of 'p' (line 2469)
        p_83861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2469, 8), 'p')
        # Setting the type of the member 'subsuperop' of a type (line 2469)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2469, 8), p_83861, 'subsuperop', result_ilshift_83860)
        
        
        # Getting the type of 'p' (line 2471)
        p_83862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2471, 8), 'p')
        # Obtaining the member 'subsuper' of a type (line 2471)
        subsuper_83863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2471, 8), p_83862, 'subsuper')
        
        # Call to Group(...): (line 2471)
        # Processing the call arguments (line 2471)
        
        # Call to Optional(...): (line 2472)
        # Processing the call arguments (line 2472)
        # Getting the type of 'p' (line 2472)
        p_83866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2472, 39), 'p', False)
        # Obtaining the member 'placeable' of a type (line 2472)
        placeable_83867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2472, 39), p_83866, 'placeable')
        # Processing the call keyword arguments (line 2472)
        kwargs_83868 = {}
        # Getting the type of 'Optional' (line 2472)
        Optional_83865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2472, 30), 'Optional', False)
        # Calling Optional(args, kwargs) (line 2472)
        Optional_call_result_83869 = invoke(stypy.reporting.localization.Localization(__file__, 2472, 30), Optional_83865, *[placeable_83867], **kwargs_83868)
        
        
        # Call to OneOrMore(...): (line 2472)
        # Processing the call arguments (line 2472)
        # Getting the type of 'p' (line 2472)
        p_83871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2472, 64), 'p', False)
        # Obtaining the member 'subsuperop' of a type (line 2472)
        subsuperop_83872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2472, 64), p_83871, 'subsuperop')
        # Getting the type of 'p' (line 2472)
        p_83873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2472, 79), 'p', False)
        # Obtaining the member 'placeable' of a type (line 2472)
        placeable_83874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2472, 79), p_83873, 'placeable')
        # Applying the binary operator '-' (line 2472)
        result_sub_83875 = python_operator(stypy.reporting.localization.Localization(__file__, 2472, 64), '-', subsuperop_83872, placeable_83874)
        
        # Processing the call keyword arguments (line 2472)
        kwargs_83876 = {}
        # Getting the type of 'OneOrMore' (line 2472)
        OneOrMore_83870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2472, 54), 'OneOrMore', False)
        # Calling OneOrMore(args, kwargs) (line 2472)
        OneOrMore_call_result_83877 = invoke(stypy.reporting.localization.Localization(__file__, 2472, 54), OneOrMore_83870, *[result_sub_83875], **kwargs_83876)
        
        # Applying the binary operator '+' (line 2472)
        result_add_83878 = python_operator(stypy.reporting.localization.Localization(__file__, 2472, 30), '+', Optional_call_result_83869, OneOrMore_call_result_83877)
        
        
        # Call to Optional(...): (line 2472)
        # Processing the call arguments (line 2472)
        # Getting the type of 'p' (line 2472)
        p_83880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2472, 103), 'p', False)
        # Obtaining the member 'apostrophe' of a type (line 2472)
        apostrophe_83881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2472, 103), p_83880, 'apostrophe')
        # Processing the call keyword arguments (line 2472)
        kwargs_83882 = {}
        # Getting the type of 'Optional' (line 2472)
        Optional_83879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2472, 94), 'Optional', False)
        # Calling Optional(args, kwargs) (line 2472)
        Optional_call_result_83883 = invoke(stypy.reporting.localization.Localization(__file__, 2472, 94), Optional_83879, *[apostrophe_83881], **kwargs_83882)
        
        # Applying the binary operator '+' (line 2472)
        result_add_83884 = python_operator(stypy.reporting.localization.Localization(__file__, 2472, 92), '+', result_add_83878, Optional_call_result_83883)
        
        # Getting the type of 'p' (line 2473)
        p_83885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2473, 30), 'p', False)
        # Obtaining the member 'placeable' of a type (line 2473)
        placeable_83886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2473, 30), p_83885, 'placeable')
        
        # Call to Optional(...): (line 2473)
        # Processing the call arguments (line 2473)
        # Getting the type of 'p' (line 2473)
        p_83888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2473, 53), 'p', False)
        # Obtaining the member 'apostrophe' of a type (line 2473)
        apostrophe_83889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2473, 53), p_83888, 'apostrophe')
        # Processing the call keyword arguments (line 2473)
        kwargs_83890 = {}
        # Getting the type of 'Optional' (line 2473)
        Optional_83887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2473, 44), 'Optional', False)
        # Calling Optional(args, kwargs) (line 2473)
        Optional_call_result_83891 = invoke(stypy.reporting.localization.Localization(__file__, 2473, 44), Optional_83887, *[apostrophe_83889], **kwargs_83890)
        
        # Applying the binary operator '+' (line 2473)
        result_add_83892 = python_operator(stypy.reporting.localization.Localization(__file__, 2473, 30), '+', placeable_83886, Optional_call_result_83891)
        
        # Applying the binary operator '|' (line 2472)
        result_or__83893 = python_operator(stypy.reporting.localization.Localization(__file__, 2472, 29), '|', result_add_83884, result_add_83892)
        
        # Getting the type of 'p' (line 2474)
        p_83894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2474, 29), 'p', False)
        # Obtaining the member 'apostrophe' of a type (line 2474)
        apostrophe_83895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2474, 29), p_83894, 'apostrophe')
        # Applying the binary operator '|' (line 2474)
        result_or__83896 = python_operator(stypy.reporting.localization.Localization(__file__, 2474, 27), '|', result_or__83893, apostrophe_83895)
        
        # Processing the call keyword arguments (line 2471)
        kwargs_83897 = {}
        # Getting the type of 'Group' (line 2471)
        Group_83864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2471, 28), 'Group', False)
        # Calling Group(args, kwargs) (line 2471)
        Group_call_result_83898 = invoke(stypy.reporting.localization.Localization(__file__, 2471, 28), Group_83864, *[result_or__83896], **kwargs_83897)
        
        # Applying the binary operator '<<=' (line 2471)
        result_ilshift_83899 = python_operator(stypy.reporting.localization.Localization(__file__, 2471, 8), '<<=', subsuper_83863, Group_call_result_83898)
        # Getting the type of 'p' (line 2471)
        p_83900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2471, 8), 'p')
        # Setting the type of the member 'subsuper' of a type (line 2471)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2471, 8), p_83900, 'subsuper', result_ilshift_83899)
        
        
        # Getting the type of 'p' (line 2477)
        p_83901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2477, 8), 'p')
        # Obtaining the member 'token' of a type (line 2477)
        token_83902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2477, 8), p_83901, 'token')
        # Getting the type of 'p' (line 2477)
        p_83903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2477, 30), 'p')
        # Obtaining the member 'simple' of a type (line 2477)
        simple_83904 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2477, 30), p_83903, 'simple')
        # Getting the type of 'p' (line 2478)
        p_83905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2478, 27), 'p')
        # Obtaining the member 'auto_delim' of a type (line 2478)
        auto_delim_83906 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2478, 27), p_83905, 'auto_delim')
        # Applying the binary operator '|' (line 2477)
        result_or__83907 = python_operator(stypy.reporting.localization.Localization(__file__, 2477, 30), '|', simple_83904, auto_delim_83906)
        
        # Getting the type of 'p' (line 2479)
        p_83908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2479, 27), 'p')
        # Obtaining the member 'unknown_symbol' of a type (line 2479)
        unknown_symbol_83909 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2479, 27), p_83908, 'unknown_symbol')
        # Applying the binary operator '|' (line 2479)
        result_or__83910 = python_operator(stypy.reporting.localization.Localization(__file__, 2479, 25), '|', result_or__83907, unknown_symbol_83909)
        
        # Applying the binary operator '<<=' (line 2477)
        result_ilshift_83911 = python_operator(stypy.reporting.localization.Localization(__file__, 2477, 8), '<<=', token_83902, result_or__83910)
        # Getting the type of 'p' (line 2477)
        p_83912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2477, 8), 'p')
        # Setting the type of the member 'token' of a type (line 2477)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2477, 8), p_83912, 'token', result_ilshift_83911)
        
        
        # Getting the type of 'p' (line 2482)
        p_83913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2482, 8), 'p')
        # Obtaining the member 'auto_delim' of a type (line 2482)
        auto_delim_83914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2482, 8), p_83913, 'auto_delim')
        
        # Call to Suppress(...): (line 2482)
        # Processing the call arguments (line 2482)
        
        # Call to Literal(...): (line 2482)
        # Processing the call arguments (line 2482)
        unicode_83917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2482, 46), 'unicode', u'\\left')
        # Processing the call keyword arguments (line 2482)
        kwargs_83918 = {}
        # Getting the type of 'Literal' (line 2482)
        Literal_83916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2482, 38), 'Literal', False)
        # Calling Literal(args, kwargs) (line 2482)
        Literal_call_result_83919 = invoke(stypy.reporting.localization.Localization(__file__, 2482, 38), Literal_83916, *[unicode_83917], **kwargs_83918)
        
        # Processing the call keyword arguments (line 2482)
        kwargs_83920 = {}
        # Getting the type of 'Suppress' (line 2482)
        Suppress_83915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2482, 29), 'Suppress', False)
        # Calling Suppress(args, kwargs) (line 2482)
        Suppress_call_result_83921 = invoke(stypy.reporting.localization.Localization(__file__, 2482, 29), Suppress_83915, *[Literal_call_result_83919], **kwargs_83920)
        
        # Getting the type of 'p' (line 2483)
        p_83922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2483, 30), 'p')
        # Obtaining the member 'left_delim' of a type (line 2483)
        left_delim_83923 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2483, 30), p_83922, 'left_delim')
        # Getting the type of 'p' (line 2483)
        p_83924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2483, 45), 'p')
        # Obtaining the member 'ambi_delim' of a type (line 2483)
        ambi_delim_83925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2483, 45), p_83924, 'ambi_delim')
        # Applying the binary operator '|' (line 2483)
        result_or__83926 = python_operator(stypy.reporting.localization.Localization(__file__, 2483, 30), '|', left_delim_83923, ambi_delim_83925)
        
        
        # Call to Error(...): (line 2483)
        # Processing the call arguments (line 2483)
        unicode_83928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2483, 67), 'unicode', u'Expected a delimiter')
        # Processing the call keyword arguments (line 2483)
        kwargs_83929 = {}
        # Getting the type of 'Error' (line 2483)
        Error_83927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2483, 61), 'Error', False)
        # Calling Error(args, kwargs) (line 2483)
        Error_call_result_83930 = invoke(stypy.reporting.localization.Localization(__file__, 2483, 61), Error_83927, *[unicode_83928], **kwargs_83929)
        
        # Applying the binary operator '|' (line 2483)
        result_or__83931 = python_operator(stypy.reporting.localization.Localization(__file__, 2483, 29), '|', result_or__83926, Error_call_result_83930)
        
        # Applying the binary operator '-' (line 2482)
        result_sub_83932 = python_operator(stypy.reporting.localization.Localization(__file__, 2482, 29), '-', Suppress_call_result_83921, result_or__83931)
        
        
        # Call to Group(...): (line 2484)
        # Processing the call arguments (line 2484)
        
        # Call to ZeroOrMore(...): (line 2484)
        # Processing the call arguments (line 2484)
        # Getting the type of 'p' (line 2484)
        p_83935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2484, 45), 'p', False)
        # Obtaining the member 'simple' of a type (line 2484)
        simple_83936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2484, 45), p_83935, 'simple')
        # Getting the type of 'p' (line 2484)
        p_83937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2484, 56), 'p', False)
        # Obtaining the member 'auto_delim' of a type (line 2484)
        auto_delim_83938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2484, 56), p_83937, 'auto_delim')
        # Applying the binary operator '|' (line 2484)
        result_or__83939 = python_operator(stypy.reporting.localization.Localization(__file__, 2484, 45), '|', simple_83936, auto_delim_83938)
        
        # Processing the call keyword arguments (line 2484)
        kwargs_83940 = {}
        # Getting the type of 'ZeroOrMore' (line 2484)
        ZeroOrMore_83934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2484, 34), 'ZeroOrMore', False)
        # Calling ZeroOrMore(args, kwargs) (line 2484)
        ZeroOrMore_call_result_83941 = invoke(stypy.reporting.localization.Localization(__file__, 2484, 34), ZeroOrMore_83934, *[result_or__83939], **kwargs_83940)
        
        # Processing the call keyword arguments (line 2484)
        kwargs_83942 = {}
        # Getting the type of 'Group' (line 2484)
        Group_83933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2484, 28), 'Group', False)
        # Calling Group(args, kwargs) (line 2484)
        Group_call_result_83943 = invoke(stypy.reporting.localization.Localization(__file__, 2484, 28), Group_83933, *[ZeroOrMore_call_result_83941], **kwargs_83942)
        
        # Applying the binary operator '+' (line 2484)
        result_add_83944 = python_operator(stypy.reporting.localization.Localization(__file__, 2484, 26), '+', result_sub_83932, Group_call_result_83943)
        
        
        # Call to Suppress(...): (line 2485)
        # Processing the call arguments (line 2485)
        
        # Call to Literal(...): (line 2485)
        # Processing the call arguments (line 2485)
        unicode_83947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2485, 45), 'unicode', u'\\right')
        # Processing the call keyword arguments (line 2485)
        kwargs_83948 = {}
        # Getting the type of 'Literal' (line 2485)
        Literal_83946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2485, 37), 'Literal', False)
        # Calling Literal(args, kwargs) (line 2485)
        Literal_call_result_83949 = invoke(stypy.reporting.localization.Localization(__file__, 2485, 37), Literal_83946, *[unicode_83947], **kwargs_83948)
        
        # Processing the call keyword arguments (line 2485)
        kwargs_83950 = {}
        # Getting the type of 'Suppress' (line 2485)
        Suppress_83945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2485, 28), 'Suppress', False)
        # Calling Suppress(args, kwargs) (line 2485)
        Suppress_call_result_83951 = invoke(stypy.reporting.localization.Localization(__file__, 2485, 28), Suppress_83945, *[Literal_call_result_83949], **kwargs_83950)
        
        # Applying the binary operator '+' (line 2485)
        result_add_83952 = python_operator(stypy.reporting.localization.Localization(__file__, 2485, 26), '+', result_add_83944, Suppress_call_result_83951)
        
        # Getting the type of 'p' (line 2486)
        p_83953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2486, 30), 'p')
        # Obtaining the member 'right_delim' of a type (line 2486)
        right_delim_83954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2486, 30), p_83953, 'right_delim')
        # Getting the type of 'p' (line 2486)
        p_83955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2486, 46), 'p')
        # Obtaining the member 'ambi_delim' of a type (line 2486)
        ambi_delim_83956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2486, 46), p_83955, 'ambi_delim')
        # Applying the binary operator '|' (line 2486)
        result_or__83957 = python_operator(stypy.reporting.localization.Localization(__file__, 2486, 30), '|', right_delim_83954, ambi_delim_83956)
        
        
        # Call to Error(...): (line 2486)
        # Processing the call arguments (line 2486)
        unicode_83959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2486, 68), 'unicode', u'Expected a delimiter')
        # Processing the call keyword arguments (line 2486)
        kwargs_83960 = {}
        # Getting the type of 'Error' (line 2486)
        Error_83958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2486, 62), 'Error', False)
        # Calling Error(args, kwargs) (line 2486)
        Error_call_result_83961 = invoke(stypy.reporting.localization.Localization(__file__, 2486, 62), Error_83958, *[unicode_83959], **kwargs_83960)
        
        # Applying the binary operator '|' (line 2486)
        result_or__83962 = python_operator(stypy.reporting.localization.Localization(__file__, 2486, 29), '|', result_or__83957, Error_call_result_83961)
        
        # Applying the binary operator '-' (line 2486)
        result_sub_83963 = python_operator(stypy.reporting.localization.Localization(__file__, 2486, 26), '-', result_add_83952, result_or__83962)
        
        # Applying the binary operator '<<=' (line 2482)
        result_ilshift_83964 = python_operator(stypy.reporting.localization.Localization(__file__, 2482, 8), '<<=', auto_delim_83914, result_sub_83963)
        # Getting the type of 'p' (line 2482)
        p_83965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2482, 8), 'p')
        # Setting the type of the member 'auto_delim' of a type (line 2482)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2482, 8), p_83965, 'auto_delim', result_ilshift_83964)
        
        
        # Getting the type of 'p' (line 2489)
        p_83966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2489, 8), 'p')
        # Obtaining the member 'math' of a type (line 2489)
        math_83967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2489, 8), p_83966, 'math')
        
        # Call to OneOrMore(...): (line 2489)
        # Processing the call arguments (line 2489)
        # Getting the type of 'p' (line 2489)
        p_83969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2489, 38), 'p', False)
        # Obtaining the member 'token' of a type (line 2489)
        token_83970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2489, 38), p_83969, 'token')
        # Processing the call keyword arguments (line 2489)
        kwargs_83971 = {}
        # Getting the type of 'OneOrMore' (line 2489)
        OneOrMore_83968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2489, 28), 'OneOrMore', False)
        # Calling OneOrMore(args, kwargs) (line 2489)
        OneOrMore_call_result_83972 = invoke(stypy.reporting.localization.Localization(__file__, 2489, 28), OneOrMore_83968, *[token_83970], **kwargs_83971)
        
        # Applying the binary operator '<<=' (line 2489)
        result_ilshift_83973 = python_operator(stypy.reporting.localization.Localization(__file__, 2489, 8), '<<=', math_83967, OneOrMore_call_result_83972)
        # Getting the type of 'p' (line 2489)
        p_83974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2489, 8), 'p')
        # Setting the type of the member 'math' of a type (line 2489)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2489, 8), p_83974, 'math', result_ilshift_83973)
        
        
        # Getting the type of 'p' (line 2491)
        p_83975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2491, 8), 'p')
        # Obtaining the member 'math_string' of a type (line 2491)
        math_string_83976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2491, 8), p_83975, 'math_string')
        
        # Call to QuotedString(...): (line 2491)
        # Processing the call arguments (line 2491)
        unicode_83978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2491, 41), 'unicode', u'$')
        unicode_83979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2491, 46), 'unicode', u'\\')
        # Processing the call keyword arguments (line 2491)
        # Getting the type of 'False' (line 2491)
        False_83980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2491, 67), 'False', False)
        keyword_83981 = False_83980
        kwargs_83982 = {'unquoteResults': keyword_83981}
        # Getting the type of 'QuotedString' (line 2491)
        QuotedString_83977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2491, 28), 'QuotedString', False)
        # Calling QuotedString(args, kwargs) (line 2491)
        QuotedString_call_result_83983 = invoke(stypy.reporting.localization.Localization(__file__, 2491, 28), QuotedString_83977, *[unicode_83978, unicode_83979], **kwargs_83982)
        
        # Applying the binary operator '<<=' (line 2491)
        result_ilshift_83984 = python_operator(stypy.reporting.localization.Localization(__file__, 2491, 8), '<<=', math_string_83976, QuotedString_call_result_83983)
        # Getting the type of 'p' (line 2491)
        p_83985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2491, 8), 'p')
        # Setting the type of the member 'math_string' of a type (line 2491)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2491, 8), p_83985, 'math_string', result_ilshift_83984)
        
        
        # Getting the type of 'p' (line 2493)
        p_83986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2493, 8), 'p')
        # Obtaining the member 'non_math' of a type (line 2493)
        non_math_83987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2493, 8), p_83986, 'non_math')
        
        # Call to leaveWhitespace(...): (line 2493)
        # Processing the call keyword arguments (line 2493)
        kwargs_83993 = {}
        
        # Call to Regex(...): (line 2493)
        # Processing the call arguments (line 2493)
        unicode_83989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2493, 34), 'unicode', u'(?:(?:\\\\[$])|[^$])*')
        # Processing the call keyword arguments (line 2493)
        kwargs_83990 = {}
        # Getting the type of 'Regex' (line 2493)
        Regex_83988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2493, 28), 'Regex', False)
        # Calling Regex(args, kwargs) (line 2493)
        Regex_call_result_83991 = invoke(stypy.reporting.localization.Localization(__file__, 2493, 28), Regex_83988, *[unicode_83989], **kwargs_83990)
        
        # Obtaining the member 'leaveWhitespace' of a type (line 2493)
        leaveWhitespace_83992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2493, 28), Regex_call_result_83991, 'leaveWhitespace')
        # Calling leaveWhitespace(args, kwargs) (line 2493)
        leaveWhitespace_call_result_83994 = invoke(stypy.reporting.localization.Localization(__file__, 2493, 28), leaveWhitespace_83992, *[], **kwargs_83993)
        
        # Applying the binary operator '<<=' (line 2493)
        result_ilshift_83995 = python_operator(stypy.reporting.localization.Localization(__file__, 2493, 8), '<<=', non_math_83987, leaveWhitespace_call_result_83994)
        # Getting the type of 'p' (line 2493)
        p_83996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2493, 8), 'p')
        # Setting the type of the member 'non_math' of a type (line 2493)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2493, 8), p_83996, 'non_math', result_ilshift_83995)
        
        
        # Getting the type of 'p' (line 2495)
        p_83997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2495, 8), 'p')
        # Obtaining the member 'main' of a type (line 2495)
        main_83998 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2495, 8), p_83997, 'main')
        # Getting the type of 'p' (line 2495)
        p_83999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2495, 29), 'p')
        # Obtaining the member 'non_math' of a type (line 2495)
        non_math_84000 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2495, 29), p_83999, 'non_math')
        
        # Call to ZeroOrMore(...): (line 2495)
        # Processing the call arguments (line 2495)
        # Getting the type of 'p' (line 2495)
        p_84002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2495, 53), 'p', False)
        # Obtaining the member 'math_string' of a type (line 2495)
        math_string_84003 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2495, 53), p_84002, 'math_string')
        # Getting the type of 'p' (line 2495)
        p_84004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2495, 69), 'p', False)
        # Obtaining the member 'non_math' of a type (line 2495)
        non_math_84005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2495, 69), p_84004, 'non_math')
        # Applying the binary operator '+' (line 2495)
        result_add_84006 = python_operator(stypy.reporting.localization.Localization(__file__, 2495, 53), '+', math_string_84003, non_math_84005)
        
        # Processing the call keyword arguments (line 2495)
        kwargs_84007 = {}
        # Getting the type of 'ZeroOrMore' (line 2495)
        ZeroOrMore_84001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2495, 42), 'ZeroOrMore', False)
        # Calling ZeroOrMore(args, kwargs) (line 2495)
        ZeroOrMore_call_result_84008 = invoke(stypy.reporting.localization.Localization(__file__, 2495, 42), ZeroOrMore_84001, *[result_add_84006], **kwargs_84007)
        
        # Applying the binary operator '+' (line 2495)
        result_add_84009 = python_operator(stypy.reporting.localization.Localization(__file__, 2495, 29), '+', non_math_84000, ZeroOrMore_call_result_84008)
        
        
        # Call to StringEnd(...): (line 2495)
        # Processing the call keyword arguments (line 2495)
        kwargs_84011 = {}
        # Getting the type of 'StringEnd' (line 2495)
        StringEnd_84010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2495, 84), 'StringEnd', False)
        # Calling StringEnd(args, kwargs) (line 2495)
        StringEnd_call_result_84012 = invoke(stypy.reporting.localization.Localization(__file__, 2495, 84), StringEnd_84010, *[], **kwargs_84011)
        
        # Applying the binary operator '+' (line 2495)
        result_add_84013 = python_operator(stypy.reporting.localization.Localization(__file__, 2495, 28), '+', result_add_84009, StringEnd_call_result_84012)
        
        # Applying the binary operator '<<=' (line 2495)
        result_ilshift_84014 = python_operator(stypy.reporting.localization.Localization(__file__, 2495, 8), '<<=', main_83998, result_add_84013)
        # Getting the type of 'p' (line 2495)
        p_84015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2495, 8), 'p')
        # Setting the type of the member 'main' of a type (line 2495)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2495, 8), p_84015, 'main', result_ilshift_84014)
        
        
        
        # Call to items(...): (line 2498)
        # Processing the call keyword arguments (line 2498)
        kwargs_84021 = {}
        
        # Call to vars(...): (line 2498)
        # Processing the call arguments (line 2498)
        # Getting the type of 'p' (line 2498)
        p_84017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2498, 29), 'p', False)
        # Processing the call keyword arguments (line 2498)
        kwargs_84018 = {}
        # Getting the type of 'vars' (line 2498)
        vars_84016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2498, 24), 'vars', False)
        # Calling vars(args, kwargs) (line 2498)
        vars_call_result_84019 = invoke(stypy.reporting.localization.Localization(__file__, 2498, 24), vars_84016, *[p_84017], **kwargs_84018)
        
        # Obtaining the member 'items' of a type (line 2498)
        items_84020 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2498, 24), vars_call_result_84019, 'items')
        # Calling items(args, kwargs) (line 2498)
        items_call_result_84022 = invoke(stypy.reporting.localization.Localization(__file__, 2498, 24), items_84020, *[], **kwargs_84021)
        
        # Testing the type of a for loop iterable (line 2498)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2498, 8), items_call_result_84022)
        # Getting the type of the for loop variable (line 2498)
        for_loop_var_84023 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2498, 8), items_call_result_84022)
        # Assigning a type to the variable 'key' (line 2498)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2498, 8), 'key', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2498, 8), for_loop_var_84023))
        # Assigning a type to the variable 'val' (line 2498)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2498, 8), 'val', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2498, 8), for_loop_var_84023))
        # SSA begins for a for statement (line 2498)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        
        # Call to startswith(...): (line 2499)
        # Processing the call arguments (line 2499)
        unicode_84026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2499, 34), 'unicode', u'_')
        # Processing the call keyword arguments (line 2499)
        kwargs_84027 = {}
        # Getting the type of 'key' (line 2499)
        key_84024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2499, 19), 'key', False)
        # Obtaining the member 'startswith' of a type (line 2499)
        startswith_84025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2499, 19), key_84024, 'startswith')
        # Calling startswith(args, kwargs) (line 2499)
        startswith_call_result_84028 = invoke(stypy.reporting.localization.Localization(__file__, 2499, 19), startswith_84025, *[unicode_84026], **kwargs_84027)
        
        # Applying the 'not' unary operator (line 2499)
        result_not__84029 = python_operator(stypy.reporting.localization.Localization(__file__, 2499, 15), 'not', startswith_call_result_84028)
        
        # Testing the type of an if condition (line 2499)
        if_condition_84030 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2499, 12), result_not__84029)
        # Assigning a type to the variable 'if_condition_84030' (line 2499)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2499, 12), 'if_condition_84030', if_condition_84030)
        # SSA begins for if statement (line 2499)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Call to hasattr(...): (line 2500)
        # Processing the call arguments (line 2500)
        # Getting the type of 'self' (line 2500)
        self_84032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2500, 27), 'self', False)
        # Getting the type of 'key' (line 2500)
        key_84033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2500, 33), 'key', False)
        # Processing the call keyword arguments (line 2500)
        kwargs_84034 = {}
        # Getting the type of 'hasattr' (line 2500)
        hasattr_84031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2500, 19), 'hasattr', False)
        # Calling hasattr(args, kwargs) (line 2500)
        hasattr_call_result_84035 = invoke(stypy.reporting.localization.Localization(__file__, 2500, 19), hasattr_84031, *[self_84032, key_84033], **kwargs_84034)
        
        # Testing the type of an if condition (line 2500)
        if_condition_84036 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2500, 16), hasattr_call_result_84035)
        # Assigning a type to the variable 'if_condition_84036' (line 2500)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2500, 16), 'if_condition_84036', if_condition_84036)
        # SSA begins for if statement (line 2500)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to setParseAction(...): (line 2501)
        # Processing the call arguments (line 2501)
        
        # Call to getattr(...): (line 2501)
        # Processing the call arguments (line 2501)
        # Getting the type of 'self' (line 2501)
        self_84040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2501, 47), 'self', False)
        # Getting the type of 'key' (line 2501)
        key_84041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2501, 53), 'key', False)
        # Processing the call keyword arguments (line 2501)
        kwargs_84042 = {}
        # Getting the type of 'getattr' (line 2501)
        getattr_84039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2501, 39), 'getattr', False)
        # Calling getattr(args, kwargs) (line 2501)
        getattr_call_result_84043 = invoke(stypy.reporting.localization.Localization(__file__, 2501, 39), getattr_84039, *[self_84040, key_84041], **kwargs_84042)
        
        # Processing the call keyword arguments (line 2501)
        kwargs_84044 = {}
        # Getting the type of 'val' (line 2501)
        val_84037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2501, 20), 'val', False)
        # Obtaining the member 'setParseAction' of a type (line 2501)
        setParseAction_84038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2501, 20), val_84037, 'setParseAction')
        # Calling setParseAction(args, kwargs) (line 2501)
        setParseAction_call_result_84045 = invoke(stypy.reporting.localization.Localization(__file__, 2501, 20), setParseAction_84038, *[getattr_call_result_84043], **kwargs_84044)
        
        # SSA join for if statement (line 2500)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2499)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Attribute to a Attribute (line 2503):
        
        # Assigning a Attribute to a Attribute (line 2503):
        # Getting the type of 'p' (line 2503)
        p_84046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2503, 27), 'p')
        # Obtaining the member 'main' of a type (line 2503)
        main_84047 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2503, 27), p_84046, 'main')
        # Getting the type of 'self' (line 2503)
        self_84048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2503, 8), 'self')
        # Setting the type of the member '_expression' of a type (line 2503)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2503, 8), self_84048, '_expression', main_84047)
        
        # Assigning a Attribute to a Attribute (line 2504):
        
        # Assigning a Attribute to a Attribute (line 2504):
        # Getting the type of 'p' (line 2504)
        p_84049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2504, 32), 'p')
        # Obtaining the member 'math' of a type (line 2504)
        math_84050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2504, 32), p_84049, 'math')
        # Getting the type of 'self' (line 2504)
        self_84051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2504, 8), 'self')
        # Setting the type of the member '_math_expression' of a type (line 2504)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2504, 8), self_84051, '_math_expression', math_84050)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def parse(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'parse'
        module_type_store = module_type_store.open_function_context('parse', 2506, 4, False)
        # Assigning a type to the variable 'self' (line 2507)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2507, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.parse.__dict__.__setitem__('stypy_localization', localization)
        Parser.parse.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.parse.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.parse.__dict__.__setitem__('stypy_function_name', 'Parser.parse')
        Parser.parse.__dict__.__setitem__('stypy_param_names_list', ['s', 'fonts_object', 'fontsize', 'dpi'])
        Parser.parse.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.parse.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.parse.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.parse.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.parse.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.parse.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.parse', ['s', 'fonts_object', 'fontsize', 'dpi'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'parse', localization, ['s', 'fonts_object', 'fontsize', 'dpi'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'parse(...)' code ##################

        unicode_84052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2512, (-1)), 'unicode', u'\n        Parse expression *s* using the given *fonts_object* for\n        output, at the given *fontsize* and *dpi*.\n\n        Returns the parse tree of :class:`Node` instances.\n        ')
        
        # Assigning a List to a Attribute (line 2513):
        
        # Assigning a List to a Attribute (line 2513):
        
        # Obtaining an instance of the builtin type 'list' (line 2513)
        list_84053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2513, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2513)
        # Adding element type (line 2513)
        
        # Call to State(...): (line 2513)
        # Processing the call arguments (line 2513)
        # Getting the type of 'fonts_object' (line 2513)
        fonts_object_84056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2513, 40), 'fonts_object', False)
        unicode_84057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2513, 54), 'unicode', u'default')
        unicode_84058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2513, 65), 'unicode', u'rm')
        # Getting the type of 'fontsize' (line 2513)
        fontsize_84059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2513, 71), 'fontsize', False)
        # Getting the type of 'dpi' (line 2513)
        dpi_84060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2513, 81), 'dpi', False)
        # Processing the call keyword arguments (line 2513)
        kwargs_84061 = {}
        # Getting the type of 'self' (line 2513)
        self_84054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2513, 29), 'self', False)
        # Obtaining the member 'State' of a type (line 2513)
        State_84055 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2513, 29), self_84054, 'State')
        # Calling State(args, kwargs) (line 2513)
        State_call_result_84062 = invoke(stypy.reporting.localization.Localization(__file__, 2513, 29), State_84055, *[fonts_object_84056, unicode_84057, unicode_84058, fontsize_84059, dpi_84060], **kwargs_84061)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2513, 28), list_84053, State_call_result_84062)
        
        # Getting the type of 'self' (line 2513)
        self_84063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2513, 8), 'self')
        # Setting the type of the member '_state_stack' of a type (line 2513)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2513, 8), self_84063, '_state_stack', list_84053)
        
        # Assigning a Dict to a Attribute (line 2514):
        
        # Assigning a Dict to a Attribute (line 2514):
        
        # Obtaining an instance of the builtin type 'dict' (line 2514)
        dict_84064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2514, 31), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 2514)
        
        # Getting the type of 'self' (line 2514)
        self_84065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2514, 8), 'self')
        # Setting the type of the member '_em_width_cache' of a type (line 2514)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2514, 8), self_84065, '_em_width_cache', dict_84064)
        
        
        # SSA begins for try-except statement (line 2515)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Call to a Name (line 2516):
        
        # Assigning a Call to a Name (line 2516):
        
        # Call to parseString(...): (line 2516)
        # Processing the call arguments (line 2516)
        # Getting the type of 's' (line 2516)
        s_84069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2516, 50), 's', False)
        # Processing the call keyword arguments (line 2516)
        kwargs_84070 = {}
        # Getting the type of 'self' (line 2516)
        self_84066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2516, 21), 'self', False)
        # Obtaining the member '_expression' of a type (line 2516)
        _expression_84067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2516, 21), self_84066, '_expression')
        # Obtaining the member 'parseString' of a type (line 2516)
        parseString_84068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2516, 21), _expression_84067, 'parseString')
        # Calling parseString(args, kwargs) (line 2516)
        parseString_call_result_84071 = invoke(stypy.reporting.localization.Localization(__file__, 2516, 21), parseString_84068, *[s_84069], **kwargs_84070)
        
        # Assigning a type to the variable 'result' (line 2516)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2516, 12), 'result', parseString_call_result_84071)
        # SSA branch for the except part of a try statement (line 2515)
        # SSA branch for the except 'ParseBaseException' branch of a try statement (line 2515)
        # Storing handler type
        module_type_store.open_ssa_branch('except')
        # Getting the type of 'ParseBaseException' (line 2517)
        ParseBaseException_84072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2517, 15), 'ParseBaseException')
        # Assigning a type to the variable 'err' (line 2517)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2517, 8), 'err', ParseBaseException_84072)
        
        # Call to ValueError(...): (line 2518)
        # Processing the call arguments (line 2518)
        
        # Call to join(...): (line 2518)
        # Processing the call arguments (line 2518)
        
        # Obtaining an instance of the builtin type 'list' (line 2518)
        list_84076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2518, 39), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2518)
        # Adding element type (line 2518)
        unicode_84077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2519, 24), 'unicode', u'')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2518, 39), list_84076, unicode_84077)
        # Adding element type (line 2518)
        # Getting the type of 'err' (line 2520)
        err_84078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2520, 24), 'err', False)
        # Obtaining the member 'line' of a type (line 2520)
        line_84079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2520, 24), err_84078, 'line')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2518, 39), list_84076, line_84079)
        # Adding element type (line 2518)
        unicode_84080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2521, 24), 'unicode', u' ')
        # Getting the type of 'err' (line 2521)
        err_84081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2521, 31), 'err', False)
        # Obtaining the member 'column' of a type (line 2521)
        column_84082 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2521, 31), err_84081, 'column')
        int_84083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2521, 44), 'int')
        # Applying the binary operator '-' (line 2521)
        result_sub_84084 = python_operator(stypy.reporting.localization.Localization(__file__, 2521, 31), '-', column_84082, int_84083)
        
        # Applying the binary operator '*' (line 2521)
        result_mul_84085 = python_operator(stypy.reporting.localization.Localization(__file__, 2521, 24), '*', unicode_84080, result_sub_84084)
        
        unicode_84086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2521, 49), 'unicode', u'^')
        # Applying the binary operator '+' (line 2521)
        result_add_84087 = python_operator(stypy.reporting.localization.Localization(__file__, 2521, 24), '+', result_mul_84085, unicode_84086)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2518, 39), list_84076, result_add_84087)
        # Adding element type (line 2518)
        
        # Call to text_type(...): (line 2522)
        # Processing the call arguments (line 2522)
        # Getting the type of 'err' (line 2522)
        err_84090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2522, 38), 'err', False)
        # Processing the call keyword arguments (line 2522)
        kwargs_84091 = {}
        # Getting the type of 'six' (line 2522)
        six_84088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2522, 24), 'six', False)
        # Obtaining the member 'text_type' of a type (line 2522)
        text_type_84089 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2522, 24), six_84088, 'text_type')
        # Calling text_type(args, kwargs) (line 2522)
        text_type_call_result_84092 = invoke(stypy.reporting.localization.Localization(__file__, 2522, 24), text_type_84089, *[err_84090], **kwargs_84091)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2518, 39), list_84076, text_type_call_result_84092)
        
        # Processing the call keyword arguments (line 2518)
        kwargs_84093 = {}
        unicode_84074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2518, 29), 'unicode', u'\n')
        # Obtaining the member 'join' of a type (line 2518)
        join_84075 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2518, 29), unicode_84074, 'join')
        # Calling join(args, kwargs) (line 2518)
        join_call_result_84094 = invoke(stypy.reporting.localization.Localization(__file__, 2518, 29), join_84075, *[list_84076], **kwargs_84093)
        
        # Processing the call keyword arguments (line 2518)
        kwargs_84095 = {}
        # Getting the type of 'ValueError' (line 2518)
        ValueError_84073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2518, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 2518)
        ValueError_call_result_84096 = invoke(stypy.reporting.localization.Localization(__file__, 2518, 18), ValueError_84073, *[join_call_result_84094], **kwargs_84095)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2518, 12), ValueError_call_result_84096, 'raise parameter', BaseException)
        # SSA join for try-except statement (line 2515)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 2523):
        
        # Assigning a Name to a Attribute (line 2523):
        # Getting the type of 'None' (line 2523)
        None_84097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2523, 28), 'None')
        # Getting the type of 'self' (line 2523)
        self_84098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2523, 8), 'self')
        # Setting the type of the member '_state_stack' of a type (line 2523)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2523, 8), self_84098, '_state_stack', None_84097)
        
        # Assigning a Dict to a Attribute (line 2524):
        
        # Assigning a Dict to a Attribute (line 2524):
        
        # Obtaining an instance of the builtin type 'dict' (line 2524)
        dict_84099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2524, 31), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 2524)
        
        # Getting the type of 'self' (line 2524)
        self_84100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2524, 8), 'self')
        # Setting the type of the member '_em_width_cache' of a type (line 2524)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2524, 8), self_84100, '_em_width_cache', dict_84099)
        
        # Call to resetCache(...): (line 2525)
        # Processing the call keyword arguments (line 2525)
        kwargs_84104 = {}
        # Getting the type of 'self' (line 2525)
        self_84101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2525, 8), 'self', False)
        # Obtaining the member '_expression' of a type (line 2525)
        _expression_84102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2525, 8), self_84101, '_expression')
        # Obtaining the member 'resetCache' of a type (line 2525)
        resetCache_84103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2525, 8), _expression_84102, 'resetCache')
        # Calling resetCache(args, kwargs) (line 2525)
        resetCache_call_result_84105 = invoke(stypy.reporting.localization.Localization(__file__, 2525, 8), resetCache_84103, *[], **kwargs_84104)
        
        
        # Obtaining the type of the subscript
        int_84106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2526, 22), 'int')
        # Getting the type of 'result' (line 2526)
        result_84107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2526, 15), 'result')
        # Obtaining the member '__getitem__' of a type (line 2526)
        getitem___84108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2526, 15), result_84107, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2526)
        subscript_call_result_84109 = invoke(stypy.reporting.localization.Localization(__file__, 2526, 15), getitem___84108, int_84106)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2526)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2526, 8), 'stypy_return_type', subscript_call_result_84109)
        
        # ################# End of 'parse(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'parse' in the type store
        # Getting the type of 'stypy_return_type' (line 2506)
        stypy_return_type_84110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2506, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84110)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'parse'
        return stypy_return_type_84110

    # Declaration of the 'State' class

    class State(object, ):
        unicode_84111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2538, (-1)), 'unicode', u'\n        Stores the state of the parser.\n\n        States are pushed and popped from a stack as necessary, and\n        the "current" state is always at the top of the stack.\n        ')

        @norecursion
        def __init__(type_of_self, localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '__init__'
            module_type_store = module_type_store.open_function_context('__init__', 2539, 8, False)
            # Assigning a type to the variable 'self' (line 2540)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2540, 8), 'self', type_of_self)
            
            # Passed parameters checking function
            arguments = process_argument_values(localization, type_of_self, module_type_store, 'State.__init__', ['font_output', 'font', 'font_class', 'fontsize', 'dpi'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return

            # Initialize method data
            init_call_information(module_type_store, '__init__', localization, ['font_output', 'font', 'font_class', 'fontsize', 'dpi'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of '__init__(...)' code ##################

            
            # Assigning a Name to a Attribute (line 2540):
            
            # Assigning a Name to a Attribute (line 2540):
            # Getting the type of 'font_output' (line 2540)
            font_output_84112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2540, 31), 'font_output')
            # Getting the type of 'self' (line 2540)
            self_84113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2540, 12), 'self')
            # Setting the type of the member 'font_output' of a type (line 2540)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2540, 12), self_84113, 'font_output', font_output_84112)
            
            # Assigning a Name to a Attribute (line 2541):
            
            # Assigning a Name to a Attribute (line 2541):
            # Getting the type of 'font' (line 2541)
            font_84114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2541, 25), 'font')
            # Getting the type of 'self' (line 2541)
            self_84115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2541, 12), 'self')
            # Setting the type of the member '_font' of a type (line 2541)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2541, 12), self_84115, '_font', font_84114)
            
            # Assigning a Name to a Attribute (line 2542):
            
            # Assigning a Name to a Attribute (line 2542):
            # Getting the type of 'font_class' (line 2542)
            font_class_84116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2542, 30), 'font_class')
            # Getting the type of 'self' (line 2542)
            self_84117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2542, 12), 'self')
            # Setting the type of the member 'font_class' of a type (line 2542)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2542, 12), self_84117, 'font_class', font_class_84116)
            
            # Assigning a Name to a Attribute (line 2543):
            
            # Assigning a Name to a Attribute (line 2543):
            # Getting the type of 'fontsize' (line 2543)
            fontsize_84118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2543, 28), 'fontsize')
            # Getting the type of 'self' (line 2543)
            self_84119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2543, 12), 'self')
            # Setting the type of the member 'fontsize' of a type (line 2543)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2543, 12), self_84119, 'fontsize', fontsize_84118)
            
            # Assigning a Name to a Attribute (line 2544):
            
            # Assigning a Name to a Attribute (line 2544):
            # Getting the type of 'dpi' (line 2544)
            dpi_84120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2544, 23), 'dpi')
            # Getting the type of 'self' (line 2544)
            self_84121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2544, 12), 'self')
            # Setting the type of the member 'dpi' of a type (line 2544)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2544, 12), self_84121, 'dpi', dpi_84120)
            
            # ################# End of '__init__(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()


        @norecursion
        def copy(type_of_self, localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'copy'
            module_type_store = module_type_store.open_function_context('copy', 2546, 8, False)
            # Assigning a type to the variable 'self' (line 2547)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2547, 8), 'self', type_of_self)
            
            # Passed parameters checking function
            State.copy.__dict__.__setitem__('stypy_localization', localization)
            State.copy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
            State.copy.__dict__.__setitem__('stypy_type_store', module_type_store)
            State.copy.__dict__.__setitem__('stypy_function_name', 'State.copy')
            State.copy.__dict__.__setitem__('stypy_param_names_list', [])
            State.copy.__dict__.__setitem__('stypy_varargs_param_name', None)
            State.copy.__dict__.__setitem__('stypy_kwargs_param_name', None)
            State.copy.__dict__.__setitem__('stypy_call_defaults', defaults)
            State.copy.__dict__.__setitem__('stypy_call_varargs', varargs)
            State.copy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
            State.copy.__dict__.__setitem__('stypy_declared_arg_number', 1)
            arguments = process_argument_values(localization, type_of_self, module_type_store, 'State.copy', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'copy', localization, [], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'copy(...)' code ##################

            
            # Call to State(...): (line 2547)
            # Processing the call arguments (line 2547)
            # Getting the type of 'self' (line 2548)
            self_84124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2548, 16), 'self', False)
            # Obtaining the member 'font_output' of a type (line 2548)
            font_output_84125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2548, 16), self_84124, 'font_output')
            # Getting the type of 'self' (line 2549)
            self_84126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2549, 16), 'self', False)
            # Obtaining the member 'font' of a type (line 2549)
            font_84127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2549, 16), self_84126, 'font')
            # Getting the type of 'self' (line 2550)
            self_84128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2550, 16), 'self', False)
            # Obtaining the member 'font_class' of a type (line 2550)
            font_class_84129 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2550, 16), self_84128, 'font_class')
            # Getting the type of 'self' (line 2551)
            self_84130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2551, 16), 'self', False)
            # Obtaining the member 'fontsize' of a type (line 2551)
            fontsize_84131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2551, 16), self_84130, 'fontsize')
            # Getting the type of 'self' (line 2552)
            self_84132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2552, 16), 'self', False)
            # Obtaining the member 'dpi' of a type (line 2552)
            dpi_84133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2552, 16), self_84132, 'dpi')
            # Processing the call keyword arguments (line 2547)
            kwargs_84134 = {}
            # Getting the type of 'Parser' (line 2547)
            Parser_84122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2547, 19), 'Parser', False)
            # Obtaining the member 'State' of a type (line 2547)
            State_84123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2547, 19), Parser_84122, 'State')
            # Calling State(args, kwargs) (line 2547)
            State_call_result_84135 = invoke(stypy.reporting.localization.Localization(__file__, 2547, 19), State_84123, *[font_output_84125, font_84127, font_class_84129, fontsize_84131, dpi_84133], **kwargs_84134)
            
            # Assigning a type to the variable 'stypy_return_type' (line 2547)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2547, 12), 'stypy_return_type', State_call_result_84135)
            
            # ################# End of 'copy(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'copy' in the type store
            # Getting the type of 'stypy_return_type' (line 2546)
            stypy_return_type_84136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2546, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_84136)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'copy'
            return stypy_return_type_84136


        @norecursion
        def _get_font(type_of_self, localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_get_font'
            module_type_store = module_type_store.open_function_context('_get_font', 2554, 8, False)
            # Assigning a type to the variable 'self' (line 2555)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2555, 8), 'self', type_of_self)
            
            # Passed parameters checking function
            State._get_font.__dict__.__setitem__('stypy_localization', localization)
            State._get_font.__dict__.__setitem__('stypy_type_of_self', type_of_self)
            State._get_font.__dict__.__setitem__('stypy_type_store', module_type_store)
            State._get_font.__dict__.__setitem__('stypy_function_name', 'State._get_font')
            State._get_font.__dict__.__setitem__('stypy_param_names_list', [])
            State._get_font.__dict__.__setitem__('stypy_varargs_param_name', None)
            State._get_font.__dict__.__setitem__('stypy_kwargs_param_name', None)
            State._get_font.__dict__.__setitem__('stypy_call_defaults', defaults)
            State._get_font.__dict__.__setitem__('stypy_call_varargs', varargs)
            State._get_font.__dict__.__setitem__('stypy_call_kwargs', kwargs)
            State._get_font.__dict__.__setitem__('stypy_declared_arg_number', 1)
            arguments = process_argument_values(localization, type_of_self, module_type_store, 'State._get_font', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, '_get_font', localization, [], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of '_get_font(...)' code ##################

            # Getting the type of 'self' (line 2555)
            self_84137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2555, 19), 'self')
            # Obtaining the member '_font' of a type (line 2555)
            _font_84138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2555, 19), self_84137, '_font')
            # Assigning a type to the variable 'stypy_return_type' (line 2555)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2555, 12), 'stypy_return_type', _font_84138)
            
            # ################# End of '_get_font(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function '_get_font' in the type store
            # Getting the type of 'stypy_return_type' (line 2554)
            stypy_return_type_84139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2554, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_84139)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_get_font'
            return stypy_return_type_84139


        @norecursion
        def _set_font(type_of_self, localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_set_font'
            module_type_store = module_type_store.open_function_context('_set_font', 2556, 8, False)
            # Assigning a type to the variable 'self' (line 2557)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2557, 8), 'self', type_of_self)
            
            # Passed parameters checking function
            State._set_font.__dict__.__setitem__('stypy_localization', localization)
            State._set_font.__dict__.__setitem__('stypy_type_of_self', type_of_self)
            State._set_font.__dict__.__setitem__('stypy_type_store', module_type_store)
            State._set_font.__dict__.__setitem__('stypy_function_name', 'State._set_font')
            State._set_font.__dict__.__setitem__('stypy_param_names_list', ['name'])
            State._set_font.__dict__.__setitem__('stypy_varargs_param_name', None)
            State._set_font.__dict__.__setitem__('stypy_kwargs_param_name', None)
            State._set_font.__dict__.__setitem__('stypy_call_defaults', defaults)
            State._set_font.__dict__.__setitem__('stypy_call_varargs', varargs)
            State._set_font.__dict__.__setitem__('stypy_call_kwargs', kwargs)
            State._set_font.__dict__.__setitem__('stypy_declared_arg_number', 2)
            arguments = process_argument_values(localization, type_of_self, module_type_store, 'State._set_font', ['name'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, '_set_font', localization, ['name'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of '_set_font(...)' code ##################

            
            
            # Getting the type of 'name' (line 2557)
            name_84140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2557, 15), 'name')
            
            # Obtaining an instance of the builtin type 'tuple' (line 2557)
            tuple_84141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2557, 24), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 2557)
            # Adding element type (line 2557)
            unicode_84142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2557, 24), 'unicode', u'rm')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2557, 24), tuple_84141, unicode_84142)
            # Adding element type (line 2557)
            unicode_84143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2557, 30), 'unicode', u'it')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2557, 24), tuple_84141, unicode_84143)
            # Adding element type (line 2557)
            unicode_84144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2557, 36), 'unicode', u'bf')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2557, 24), tuple_84141, unicode_84144)
            
            # Applying the binary operator 'in' (line 2557)
            result_contains_84145 = python_operator(stypy.reporting.localization.Localization(__file__, 2557, 15), 'in', name_84140, tuple_84141)
            
            # Testing the type of an if condition (line 2557)
            if_condition_84146 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2557, 12), result_contains_84145)
            # Assigning a type to the variable 'if_condition_84146' (line 2557)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2557, 12), 'if_condition_84146', if_condition_84146)
            # SSA begins for if statement (line 2557)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Name to a Attribute (line 2558):
            
            # Assigning a Name to a Attribute (line 2558):
            # Getting the type of 'name' (line 2558)
            name_84147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2558, 34), 'name')
            # Getting the type of 'self' (line 2558)
            self_84148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2558, 16), 'self')
            # Setting the type of the member 'font_class' of a type (line 2558)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2558, 16), self_84148, 'font_class', name_84147)
            # SSA join for if statement (line 2557)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a Name to a Attribute (line 2559):
            
            # Assigning a Name to a Attribute (line 2559):
            # Getting the type of 'name' (line 2559)
            name_84149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2559, 25), 'name')
            # Getting the type of 'self' (line 2559)
            self_84150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2559, 12), 'self')
            # Setting the type of the member '_font' of a type (line 2559)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2559, 12), self_84150, '_font', name_84149)
            
            # ################# End of '_set_font(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function '_set_font' in the type store
            # Getting the type of 'stypy_return_type' (line 2556)
            stypy_return_type_84151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2556, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_84151)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_set_font'
            return stypy_return_type_84151

        
        # Assigning a Call to a Name (line 2560):
        
        # Assigning a Call to a Name (line 2560):
        
        # Call to property(...): (line 2560)
        # Processing the call arguments (line 2560)
        # Getting the type of '_get_font' (line 2560)
        _get_font_84153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2560, 24), '_get_font', False)
        # Getting the type of '_set_font' (line 2560)
        _set_font_84154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2560, 35), '_set_font', False)
        # Processing the call keyword arguments (line 2560)
        kwargs_84155 = {}
        # Getting the type of 'property' (line 2560)
        property_84152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2560, 15), 'property', False)
        # Calling property(args, kwargs) (line 2560)
        property_call_result_84156 = invoke(stypy.reporting.localization.Localization(__file__, 2560, 15), property_84152, *[_get_font_84153, _set_font_84154], **kwargs_84155)
        
        # Assigning a type to the variable 'font' (line 2560)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2560, 8), 'font', property_call_result_84156)
    
    # Assigning a type to the variable 'State' (line 2532)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2532, 4), 'State', State)

    @norecursion
    def get_state(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_state'
        module_type_store = module_type_store.open_function_context('get_state', 2562, 4, False)
        # Assigning a type to the variable 'self' (line 2563)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2563, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.get_state.__dict__.__setitem__('stypy_localization', localization)
        Parser.get_state.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.get_state.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.get_state.__dict__.__setitem__('stypy_function_name', 'Parser.get_state')
        Parser.get_state.__dict__.__setitem__('stypy_param_names_list', [])
        Parser.get_state.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.get_state.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.get_state.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.get_state.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.get_state.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.get_state.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.get_state', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_state', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_state(...)' code ##################

        unicode_84157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2565, (-1)), 'unicode', u'\n        Get the current :class:`State` of the parser.\n        ')
        
        # Obtaining the type of the subscript
        int_84158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2566, 33), 'int')
        # Getting the type of 'self' (line 2566)
        self_84159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2566, 15), 'self')
        # Obtaining the member '_state_stack' of a type (line 2566)
        _state_stack_84160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2566, 15), self_84159, '_state_stack')
        # Obtaining the member '__getitem__' of a type (line 2566)
        getitem___84161 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2566, 15), _state_stack_84160, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2566)
        subscript_call_result_84162 = invoke(stypy.reporting.localization.Localization(__file__, 2566, 15), getitem___84161, int_84158)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2566)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2566, 8), 'stypy_return_type', subscript_call_result_84162)
        
        # ################# End of 'get_state(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_state' in the type store
        # Getting the type of 'stypy_return_type' (line 2562)
        stypy_return_type_84163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2562, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84163)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_state'
        return stypy_return_type_84163


    @norecursion
    def pop_state(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'pop_state'
        module_type_store = module_type_store.open_function_context('pop_state', 2568, 4, False)
        # Assigning a type to the variable 'self' (line 2569)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2569, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.pop_state.__dict__.__setitem__('stypy_localization', localization)
        Parser.pop_state.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.pop_state.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.pop_state.__dict__.__setitem__('stypy_function_name', 'Parser.pop_state')
        Parser.pop_state.__dict__.__setitem__('stypy_param_names_list', [])
        Parser.pop_state.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.pop_state.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.pop_state.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.pop_state.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.pop_state.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.pop_state.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.pop_state', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'pop_state', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'pop_state(...)' code ##################

        unicode_84164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2571, (-1)), 'unicode', u'\n        Pop a :class:`State` off of the stack.\n        ')
        
        # Call to pop(...): (line 2572)
        # Processing the call keyword arguments (line 2572)
        kwargs_84168 = {}
        # Getting the type of 'self' (line 2572)
        self_84165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2572, 8), 'self', False)
        # Obtaining the member '_state_stack' of a type (line 2572)
        _state_stack_84166 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2572, 8), self_84165, '_state_stack')
        # Obtaining the member 'pop' of a type (line 2572)
        pop_84167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2572, 8), _state_stack_84166, 'pop')
        # Calling pop(args, kwargs) (line 2572)
        pop_call_result_84169 = invoke(stypy.reporting.localization.Localization(__file__, 2572, 8), pop_84167, *[], **kwargs_84168)
        
        
        # ################# End of 'pop_state(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'pop_state' in the type store
        # Getting the type of 'stypy_return_type' (line 2568)
        stypy_return_type_84170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2568, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84170)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'pop_state'
        return stypy_return_type_84170


    @norecursion
    def push_state(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'push_state'
        module_type_store = module_type_store.open_function_context('push_state', 2574, 4, False)
        # Assigning a type to the variable 'self' (line 2575)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2575, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.push_state.__dict__.__setitem__('stypy_localization', localization)
        Parser.push_state.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.push_state.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.push_state.__dict__.__setitem__('stypy_function_name', 'Parser.push_state')
        Parser.push_state.__dict__.__setitem__('stypy_param_names_list', [])
        Parser.push_state.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.push_state.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.push_state.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.push_state.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.push_state.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.push_state.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.push_state', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'push_state', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'push_state(...)' code ##################

        unicode_84171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2578, (-1)), 'unicode', u'\n        Push a new :class:`State` onto the stack which is just a copy\n        of the current state.\n        ')
        
        # Call to append(...): (line 2579)
        # Processing the call arguments (line 2579)
        
        # Call to copy(...): (line 2579)
        # Processing the call keyword arguments (line 2579)
        kwargs_84180 = {}
        
        # Call to get_state(...): (line 2579)
        # Processing the call keyword arguments (line 2579)
        kwargs_84177 = {}
        # Getting the type of 'self' (line 2579)
        self_84175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2579, 33), 'self', False)
        # Obtaining the member 'get_state' of a type (line 2579)
        get_state_84176 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2579, 33), self_84175, 'get_state')
        # Calling get_state(args, kwargs) (line 2579)
        get_state_call_result_84178 = invoke(stypy.reporting.localization.Localization(__file__, 2579, 33), get_state_84176, *[], **kwargs_84177)
        
        # Obtaining the member 'copy' of a type (line 2579)
        copy_84179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2579, 33), get_state_call_result_84178, 'copy')
        # Calling copy(args, kwargs) (line 2579)
        copy_call_result_84181 = invoke(stypy.reporting.localization.Localization(__file__, 2579, 33), copy_84179, *[], **kwargs_84180)
        
        # Processing the call keyword arguments (line 2579)
        kwargs_84182 = {}
        # Getting the type of 'self' (line 2579)
        self_84172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2579, 8), 'self', False)
        # Obtaining the member '_state_stack' of a type (line 2579)
        _state_stack_84173 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2579, 8), self_84172, '_state_stack')
        # Obtaining the member 'append' of a type (line 2579)
        append_84174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2579, 8), _state_stack_84173, 'append')
        # Calling append(args, kwargs) (line 2579)
        append_call_result_84183 = invoke(stypy.reporting.localization.Localization(__file__, 2579, 8), append_84174, *[copy_call_result_84181], **kwargs_84182)
        
        
        # ################# End of 'push_state(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'push_state' in the type store
        # Getting the type of 'stypy_return_type' (line 2574)
        stypy_return_type_84184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2574, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84184)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'push_state'
        return stypy_return_type_84184


    @norecursion
    def main(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'main'
        module_type_store = module_type_store.open_function_context('main', 2581, 4, False)
        # Assigning a type to the variable 'self' (line 2582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2582, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.main.__dict__.__setitem__('stypy_localization', localization)
        Parser.main.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.main.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.main.__dict__.__setitem__('stypy_function_name', 'Parser.main')
        Parser.main.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.main.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.main.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.main.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.main.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.main.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.main.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.main', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'main', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'main(...)' code ##################

        
        # Obtaining an instance of the builtin type 'list' (line 2583)
        list_84185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2583, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2583)
        # Adding element type (line 2583)
        
        # Call to Hlist(...): (line 2583)
        # Processing the call arguments (line 2583)
        # Getting the type of 'toks' (line 2583)
        toks_84187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2583, 22), 'toks', False)
        # Processing the call keyword arguments (line 2583)
        kwargs_84188 = {}
        # Getting the type of 'Hlist' (line 2583)
        Hlist_84186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2583, 16), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 2583)
        Hlist_call_result_84189 = invoke(stypy.reporting.localization.Localization(__file__, 2583, 16), Hlist_84186, *[toks_84187], **kwargs_84188)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2583, 15), list_84185, Hlist_call_result_84189)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2583)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2583, 8), 'stypy_return_type', list_84185)
        
        # ################# End of 'main(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'main' in the type store
        # Getting the type of 'stypy_return_type' (line 2581)
        stypy_return_type_84190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2581, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84190)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'main'
        return stypy_return_type_84190


    @norecursion
    def math_string(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'math_string'
        module_type_store = module_type_store.open_function_context('math_string', 2585, 4, False)
        # Assigning a type to the variable 'self' (line 2586)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2586, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.math_string.__dict__.__setitem__('stypy_localization', localization)
        Parser.math_string.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.math_string.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.math_string.__dict__.__setitem__('stypy_function_name', 'Parser.math_string')
        Parser.math_string.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.math_string.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.math_string.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.math_string.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.math_string.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.math_string.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.math_string.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.math_string', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'math_string', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'math_string(...)' code ##################

        
        # Call to parseString(...): (line 2587)
        # Processing the call arguments (line 2587)
        
        # Obtaining the type of the subscript
        int_84194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2587, 57), 'int')
        int_84195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2587, 59), 'int')
        slice_84196 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2587, 49), int_84194, int_84195, None)
        
        # Obtaining the type of the subscript
        int_84197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2587, 54), 'int')
        # Getting the type of 'toks' (line 2587)
        toks_84198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2587, 49), 'toks', False)
        # Obtaining the member '__getitem__' of a type (line 2587)
        getitem___84199 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2587, 49), toks_84198, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2587)
        subscript_call_result_84200 = invoke(stypy.reporting.localization.Localization(__file__, 2587, 49), getitem___84199, int_84197)
        
        # Obtaining the member '__getitem__' of a type (line 2587)
        getitem___84201 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2587, 49), subscript_call_result_84200, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2587)
        subscript_call_result_84202 = invoke(stypy.reporting.localization.Localization(__file__, 2587, 49), getitem___84201, slice_84196)
        
        # Processing the call keyword arguments (line 2587)
        kwargs_84203 = {}
        # Getting the type of 'self' (line 2587)
        self_84191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2587, 15), 'self', False)
        # Obtaining the member '_math_expression' of a type (line 2587)
        _math_expression_84192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2587, 15), self_84191, '_math_expression')
        # Obtaining the member 'parseString' of a type (line 2587)
        parseString_84193 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2587, 15), _math_expression_84192, 'parseString')
        # Calling parseString(args, kwargs) (line 2587)
        parseString_call_result_84204 = invoke(stypy.reporting.localization.Localization(__file__, 2587, 15), parseString_84193, *[subscript_call_result_84202], **kwargs_84203)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2587)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2587, 8), 'stypy_return_type', parseString_call_result_84204)
        
        # ################# End of 'math_string(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'math_string' in the type store
        # Getting the type of 'stypy_return_type' (line 2585)
        stypy_return_type_84205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2585, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84205)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'math_string'
        return stypy_return_type_84205


    @norecursion
    def math(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'math'
        module_type_store = module_type_store.open_function_context('math', 2589, 4, False)
        # Assigning a type to the variable 'self' (line 2590)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2590, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.math.__dict__.__setitem__('stypy_localization', localization)
        Parser.math.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.math.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.math.__dict__.__setitem__('stypy_function_name', 'Parser.math')
        Parser.math.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.math.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.math.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.math.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.math.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.math.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.math.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.math', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'math', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'math(...)' code ##################

        
        # Assigning a Call to a Name (line 2591):
        
        # Assigning a Call to a Name (line 2591):
        
        # Call to Hlist(...): (line 2591)
        # Processing the call arguments (line 2591)
        # Getting the type of 'toks' (line 2591)
        toks_84207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2591, 22), 'toks', False)
        # Processing the call keyword arguments (line 2591)
        kwargs_84208 = {}
        # Getting the type of 'Hlist' (line 2591)
        Hlist_84206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2591, 16), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 2591)
        Hlist_call_result_84209 = invoke(stypy.reporting.localization.Localization(__file__, 2591, 16), Hlist_84206, *[toks_84207], **kwargs_84208)
        
        # Assigning a type to the variable 'hlist' (line 2591)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2591, 8), 'hlist', Hlist_call_result_84209)
        
        # Call to pop_state(...): (line 2592)
        # Processing the call keyword arguments (line 2592)
        kwargs_84212 = {}
        # Getting the type of 'self' (line 2592)
        self_84210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2592, 8), 'self', False)
        # Obtaining the member 'pop_state' of a type (line 2592)
        pop_state_84211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2592, 8), self_84210, 'pop_state')
        # Calling pop_state(args, kwargs) (line 2592)
        pop_state_call_result_84213 = invoke(stypy.reporting.localization.Localization(__file__, 2592, 8), pop_state_84211, *[], **kwargs_84212)
        
        
        # Obtaining an instance of the builtin type 'list' (line 2593)
        list_84214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2593, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2593)
        # Adding element type (line 2593)
        # Getting the type of 'hlist' (line 2593)
        hlist_84215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2593, 16), 'hlist')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2593, 15), list_84214, hlist_84215)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2593, 8), 'stypy_return_type', list_84214)
        
        # ################# End of 'math(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'math' in the type store
        # Getting the type of 'stypy_return_type' (line 2589)
        stypy_return_type_84216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2589, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84216)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'math'
        return stypy_return_type_84216


    @norecursion
    def non_math(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'non_math'
        module_type_store = module_type_store.open_function_context('non_math', 2595, 4, False)
        # Assigning a type to the variable 'self' (line 2596)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2596, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.non_math.__dict__.__setitem__('stypy_localization', localization)
        Parser.non_math.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.non_math.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.non_math.__dict__.__setitem__('stypy_function_name', 'Parser.non_math')
        Parser.non_math.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.non_math.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.non_math.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.non_math.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.non_math.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.non_math.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.non_math.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.non_math', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'non_math', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'non_math(...)' code ##################

        
        # Assigning a Call to a Name (line 2597):
        
        # Assigning a Call to a Name (line 2597):
        
        # Call to replace(...): (line 2597)
        # Processing the call arguments (line 2597)
        unicode_84222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2597, 28), 'unicode', u'\\$')
        unicode_84223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2597, 35), 'unicode', u'$')
        # Processing the call keyword arguments (line 2597)
        kwargs_84224 = {}
        
        # Obtaining the type of the subscript
        int_84217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2597, 17), 'int')
        # Getting the type of 'toks' (line 2597)
        toks_84218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2597, 12), 'toks', False)
        # Obtaining the member '__getitem__' of a type (line 2597)
        getitem___84219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2597, 12), toks_84218, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2597)
        subscript_call_result_84220 = invoke(stypy.reporting.localization.Localization(__file__, 2597, 12), getitem___84219, int_84217)
        
        # Obtaining the member 'replace' of a type (line 2597)
        replace_84221 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2597, 12), subscript_call_result_84220, 'replace')
        # Calling replace(args, kwargs) (line 2597)
        replace_call_result_84225 = invoke(stypy.reporting.localization.Localization(__file__, 2597, 12), replace_84221, *[unicode_84222, unicode_84223], **kwargs_84224)
        
        # Assigning a type to the variable 's' (line 2597)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2597, 8), 's', replace_call_result_84225)
        
        # Assigning a ListComp to a Name (line 2598):
        
        # Assigning a ListComp to a Name (line 2598):
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 's' (line 2598)
        s_84236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2598, 66), 's')
        comprehension_84237 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2598, 19), s_84236)
        # Assigning a type to the variable 'c' (line 2598)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2598, 19), 'c', comprehension_84237)
        
        # Call to Char(...): (line 2598)
        # Processing the call arguments (line 2598)
        # Getting the type of 'c' (line 2598)
        c_84227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2598, 24), 'c', False)
        
        # Call to get_state(...): (line 2598)
        # Processing the call keyword arguments (line 2598)
        kwargs_84230 = {}
        # Getting the type of 'self' (line 2598)
        self_84228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2598, 27), 'self', False)
        # Obtaining the member 'get_state' of a type (line 2598)
        get_state_84229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2598, 27), self_84228, 'get_state')
        # Calling get_state(args, kwargs) (line 2598)
        get_state_call_result_84231 = invoke(stypy.reporting.localization.Localization(__file__, 2598, 27), get_state_84229, *[], **kwargs_84230)
        
        # Processing the call keyword arguments (line 2598)
        # Getting the type of 'False' (line 2598)
        False_84232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2598, 50), 'False', False)
        keyword_84233 = False_84232
        kwargs_84234 = {'math': keyword_84233}
        # Getting the type of 'Char' (line 2598)
        Char_84226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2598, 19), 'Char', False)
        # Calling Char(args, kwargs) (line 2598)
        Char_call_result_84235 = invoke(stypy.reporting.localization.Localization(__file__, 2598, 19), Char_84226, *[c_84227, get_state_call_result_84231], **kwargs_84234)
        
        list_84238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2598, 19), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2598, 19), list_84238, Char_call_result_84235)
        # Assigning a type to the variable 'symbols' (line 2598)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2598, 8), 'symbols', list_84238)
        
        # Assigning a Call to a Name (line 2599):
        
        # Assigning a Call to a Name (line 2599):
        
        # Call to Hlist(...): (line 2599)
        # Processing the call arguments (line 2599)
        # Getting the type of 'symbols' (line 2599)
        symbols_84240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2599, 22), 'symbols', False)
        # Processing the call keyword arguments (line 2599)
        kwargs_84241 = {}
        # Getting the type of 'Hlist' (line 2599)
        Hlist_84239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2599, 16), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 2599)
        Hlist_call_result_84242 = invoke(stypy.reporting.localization.Localization(__file__, 2599, 16), Hlist_84239, *[symbols_84240], **kwargs_84241)
        
        # Assigning a type to the variable 'hlist' (line 2599)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2599, 8), 'hlist', Hlist_call_result_84242)
        
        # Call to push_state(...): (line 2601)
        # Processing the call keyword arguments (line 2601)
        kwargs_84245 = {}
        # Getting the type of 'self' (line 2601)
        self_84243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2601, 8), 'self', False)
        # Obtaining the member 'push_state' of a type (line 2601)
        push_state_84244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2601, 8), self_84243, 'push_state')
        # Calling push_state(args, kwargs) (line 2601)
        push_state_call_result_84246 = invoke(stypy.reporting.localization.Localization(__file__, 2601, 8), push_state_84244, *[], **kwargs_84245)
        
        
        # Assigning a Subscript to a Attribute (line 2602):
        
        # Assigning a Subscript to a Attribute (line 2602):
        
        # Obtaining the type of the subscript
        unicode_84247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2602, 41), 'unicode', u'mathtext.default')
        # Getting the type of 'rcParams' (line 2602)
        rcParams_84248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2602, 32), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 2602)
        getitem___84249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2602, 32), rcParams_84248, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2602)
        subscript_call_result_84250 = invoke(stypy.reporting.localization.Localization(__file__, 2602, 32), getitem___84249, unicode_84247)
        
        
        # Call to get_state(...): (line 2602)
        # Processing the call keyword arguments (line 2602)
        kwargs_84253 = {}
        # Getting the type of 'self' (line 2602)
        self_84251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2602, 8), 'self', False)
        # Obtaining the member 'get_state' of a type (line 2602)
        get_state_84252 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2602, 8), self_84251, 'get_state')
        # Calling get_state(args, kwargs) (line 2602)
        get_state_call_result_84254 = invoke(stypy.reporting.localization.Localization(__file__, 2602, 8), get_state_84252, *[], **kwargs_84253)
        
        # Setting the type of the member 'font' of a type (line 2602)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2602, 8), get_state_call_result_84254, 'font', subscript_call_result_84250)
        
        # Obtaining an instance of the builtin type 'list' (line 2603)
        list_84255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2603, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2603)
        # Adding element type (line 2603)
        # Getting the type of 'hlist' (line 2603)
        hlist_84256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2603, 16), 'hlist')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2603, 15), list_84255, hlist_84256)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2603)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2603, 8), 'stypy_return_type', list_84255)
        
        # ################# End of 'non_math(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'non_math' in the type store
        # Getting the type of 'stypy_return_type' (line 2595)
        stypy_return_type_84257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2595, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84257)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'non_math'
        return stypy_return_type_84257


    @norecursion
    def _make_space(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_make_space'
        module_type_store = module_type_store.open_function_context('_make_space', 2605, 4, False)
        # Assigning a type to the variable 'self' (line 2606)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2606, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser._make_space.__dict__.__setitem__('stypy_localization', localization)
        Parser._make_space.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser._make_space.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser._make_space.__dict__.__setitem__('stypy_function_name', 'Parser._make_space')
        Parser._make_space.__dict__.__setitem__('stypy_param_names_list', ['percentage'])
        Parser._make_space.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser._make_space.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser._make_space.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser._make_space.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser._make_space.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser._make_space.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser._make_space', ['percentage'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_make_space', localization, ['percentage'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_make_space(...)' code ##################

        
        # Assigning a Call to a Name (line 2607):
        
        # Assigning a Call to a Name (line 2607):
        
        # Call to get_state(...): (line 2607)
        # Processing the call keyword arguments (line 2607)
        kwargs_84260 = {}
        # Getting the type of 'self' (line 2607)
        self_84258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2607, 16), 'self', False)
        # Obtaining the member 'get_state' of a type (line 2607)
        get_state_84259 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2607, 16), self_84258, 'get_state')
        # Calling get_state(args, kwargs) (line 2607)
        get_state_call_result_84261 = invoke(stypy.reporting.localization.Localization(__file__, 2607, 16), get_state_84259, *[], **kwargs_84260)
        
        # Assigning a type to the variable 'state' (line 2607)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2607, 8), 'state', get_state_call_result_84261)
        
        # Assigning a Tuple to a Name (line 2608):
        
        # Assigning a Tuple to a Name (line 2608):
        
        # Obtaining an instance of the builtin type 'tuple' (line 2608)
        tuple_84262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2608, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2608)
        # Adding element type (line 2608)
        # Getting the type of 'state' (line 2608)
        state_84263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2608, 15), 'state')
        # Obtaining the member 'font' of a type (line 2608)
        font_84264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2608, 15), state_84263, 'font')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2608, 15), tuple_84262, font_84264)
        # Adding element type (line 2608)
        # Getting the type of 'state' (line 2608)
        state_84265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2608, 27), 'state')
        # Obtaining the member 'fontsize' of a type (line 2608)
        fontsize_84266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2608, 27), state_84265, 'fontsize')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2608, 15), tuple_84262, fontsize_84266)
        # Adding element type (line 2608)
        # Getting the type of 'state' (line 2608)
        state_84267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2608, 43), 'state')
        # Obtaining the member 'dpi' of a type (line 2608)
        dpi_84268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2608, 43), state_84267, 'dpi')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2608, 15), tuple_84262, dpi_84268)
        
        # Assigning a type to the variable 'key' (line 2608)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2608, 8), 'key', tuple_84262)
        
        # Assigning a Call to a Name (line 2609):
        
        # Assigning a Call to a Name (line 2609):
        
        # Call to get(...): (line 2609)
        # Processing the call arguments (line 2609)
        # Getting the type of 'key' (line 2609)
        key_84272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2609, 41), 'key', False)
        # Processing the call keyword arguments (line 2609)
        kwargs_84273 = {}
        # Getting the type of 'self' (line 2609)
        self_84269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2609, 16), 'self', False)
        # Obtaining the member '_em_width_cache' of a type (line 2609)
        _em_width_cache_84270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2609, 16), self_84269, '_em_width_cache')
        # Obtaining the member 'get' of a type (line 2609)
        get_84271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2609, 16), _em_width_cache_84270, 'get')
        # Calling get(args, kwargs) (line 2609)
        get_call_result_84274 = invoke(stypy.reporting.localization.Localization(__file__, 2609, 16), get_84271, *[key_84272], **kwargs_84273)
        
        # Assigning a type to the variable 'width' (line 2609)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2609, 8), 'width', get_call_result_84274)
        
        # Type idiom detected: calculating its left and rigth part (line 2610)
        # Getting the type of 'width' (line 2610)
        width_84275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2610, 11), 'width')
        # Getting the type of 'None' (line 2610)
        None_84276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2610, 20), 'None')
        
        (may_be_84277, more_types_in_union_84278) = may_be_none(width_84275, None_84276)

        if may_be_84277:

            if more_types_in_union_84278:
                # Runtime conditional SSA (line 2610)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 2611):
            
            # Assigning a Call to a Name (line 2611):
            
            # Call to get_metrics(...): (line 2611)
            # Processing the call arguments (line 2611)
            # Getting the type of 'state' (line 2612)
            state_84282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2612, 16), 'state', False)
            # Obtaining the member 'font' of a type (line 2612)
            font_84283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2612, 16), state_84282, 'font')
            
            # Obtaining the type of the subscript
            unicode_84284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2612, 37), 'unicode', u'mathtext.default')
            # Getting the type of 'rcParams' (line 2612)
            rcParams_84285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2612, 28), 'rcParams', False)
            # Obtaining the member '__getitem__' of a type (line 2612)
            getitem___84286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2612, 28), rcParams_84285, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 2612)
            subscript_call_result_84287 = invoke(stypy.reporting.localization.Localization(__file__, 2612, 28), getitem___84286, unicode_84284)
            
            unicode_84288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2612, 58), 'unicode', u'm')
            # Getting the type of 'state' (line 2612)
            state_84289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2612, 63), 'state', False)
            # Obtaining the member 'fontsize' of a type (line 2612)
            fontsize_84290 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2612, 63), state_84289, 'fontsize')
            # Getting the type of 'state' (line 2612)
            state_84291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2612, 79), 'state', False)
            # Obtaining the member 'dpi' of a type (line 2612)
            dpi_84292 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2612, 79), state_84291, 'dpi')
            # Processing the call keyword arguments (line 2611)
            kwargs_84293 = {}
            # Getting the type of 'state' (line 2611)
            state_84279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2611, 22), 'state', False)
            # Obtaining the member 'font_output' of a type (line 2611)
            font_output_84280 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2611, 22), state_84279, 'font_output')
            # Obtaining the member 'get_metrics' of a type (line 2611)
            get_metrics_84281 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2611, 22), font_output_84280, 'get_metrics')
            # Calling get_metrics(args, kwargs) (line 2611)
            get_metrics_call_result_84294 = invoke(stypy.reporting.localization.Localization(__file__, 2611, 22), get_metrics_84281, *[font_84283, subscript_call_result_84287, unicode_84288, fontsize_84290, dpi_84292], **kwargs_84293)
            
            # Assigning a type to the variable 'metrics' (line 2611)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2611, 12), 'metrics', get_metrics_call_result_84294)
            
            # Assigning a Attribute to a Name (line 2613):
            
            # Assigning a Attribute to a Name (line 2613):
            # Getting the type of 'metrics' (line 2613)
            metrics_84295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2613, 20), 'metrics')
            # Obtaining the member 'advance' of a type (line 2613)
            advance_84296 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2613, 20), metrics_84295, 'advance')
            # Assigning a type to the variable 'width' (line 2613)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2613, 12), 'width', advance_84296)
            
            # Assigning a Name to a Subscript (line 2614):
            
            # Assigning a Name to a Subscript (line 2614):
            # Getting the type of 'width' (line 2614)
            width_84297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2614, 40), 'width')
            # Getting the type of 'self' (line 2614)
            self_84298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2614, 12), 'self')
            # Obtaining the member '_em_width_cache' of a type (line 2614)
            _em_width_cache_84299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2614, 12), self_84298, '_em_width_cache')
            # Getting the type of 'key' (line 2614)
            key_84300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2614, 33), 'key')
            # Storing an element on a container (line 2614)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2614, 12), _em_width_cache_84299, (key_84300, width_84297))

            if more_types_in_union_84278:
                # SSA join for if statement (line 2610)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to Kern(...): (line 2615)
        # Processing the call arguments (line 2615)
        # Getting the type of 'width' (line 2615)
        width_84302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2615, 20), 'width', False)
        # Getting the type of 'percentage' (line 2615)
        percentage_84303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2615, 28), 'percentage', False)
        # Applying the binary operator '*' (line 2615)
        result_mul_84304 = python_operator(stypy.reporting.localization.Localization(__file__, 2615, 20), '*', width_84302, percentage_84303)
        
        # Processing the call keyword arguments (line 2615)
        kwargs_84305 = {}
        # Getting the type of 'Kern' (line 2615)
        Kern_84301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2615, 15), 'Kern', False)
        # Calling Kern(args, kwargs) (line 2615)
        Kern_call_result_84306 = invoke(stypy.reporting.localization.Localization(__file__, 2615, 15), Kern_84301, *[result_mul_84304], **kwargs_84305)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2615)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2615, 8), 'stypy_return_type', Kern_call_result_84306)
        
        # ################# End of '_make_space(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_make_space' in the type store
        # Getting the type of 'stypy_return_type' (line 2605)
        stypy_return_type_84307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2605, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84307)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_make_space'
        return stypy_return_type_84307

    
    # Assigning a Dict to a Name (line 2617):

    @norecursion
    def space(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'space'
        module_type_store = module_type_store.open_function_context('space', 2629, 4, False)
        # Assigning a type to the variable 'self' (line 2630)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2630, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.space.__dict__.__setitem__('stypy_localization', localization)
        Parser.space.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.space.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.space.__dict__.__setitem__('stypy_function_name', 'Parser.space')
        Parser.space.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.space.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.space.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.space.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.space.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.space.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.space.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.space', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'space', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'space(...)' code ##################

        # Evaluating assert statement condition
        
        
        # Call to len(...): (line 2630)
        # Processing the call arguments (line 2630)
        # Getting the type of 'toks' (line 2630)
        toks_84309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2630, 19), 'toks', False)
        # Processing the call keyword arguments (line 2630)
        kwargs_84310 = {}
        # Getting the type of 'len' (line 2630)
        len_84308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2630, 15), 'len', False)
        # Calling len(args, kwargs) (line 2630)
        len_call_result_84311 = invoke(stypy.reporting.localization.Localization(__file__, 2630, 15), len_84308, *[toks_84309], **kwargs_84310)
        
        int_84312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2630, 26), 'int')
        # Applying the binary operator '==' (line 2630)
        result_eq_84313 = python_operator(stypy.reporting.localization.Localization(__file__, 2630, 15), '==', len_call_result_84311, int_84312)
        
        
        # Assigning a Subscript to a Name (line 2631):
        
        # Assigning a Subscript to a Name (line 2631):
        
        # Obtaining the type of the subscript
        
        # Obtaining the type of the subscript
        int_84314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2631, 38), 'int')
        # Getting the type of 'toks' (line 2631)
        toks_84315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2631, 33), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2631)
        getitem___84316 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2631, 33), toks_84315, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2631)
        subscript_call_result_84317 = invoke(stypy.reporting.localization.Localization(__file__, 2631, 33), getitem___84316, int_84314)
        
        # Getting the type of 'self' (line 2631)
        self_84318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2631, 14), 'self')
        # Obtaining the member '_space_widths' of a type (line 2631)
        _space_widths_84319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2631, 14), self_84318, '_space_widths')
        # Obtaining the member '__getitem__' of a type (line 2631)
        getitem___84320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2631, 14), _space_widths_84319, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2631)
        subscript_call_result_84321 = invoke(stypy.reporting.localization.Localization(__file__, 2631, 14), getitem___84320, subscript_call_result_84317)
        
        # Assigning a type to the variable 'num' (line 2631)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2631, 8), 'num', subscript_call_result_84321)
        
        # Assigning a Call to a Name (line 2632):
        
        # Assigning a Call to a Name (line 2632):
        
        # Call to _make_space(...): (line 2632)
        # Processing the call arguments (line 2632)
        # Getting the type of 'num' (line 2632)
        num_84324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2632, 31), 'num', False)
        # Processing the call keyword arguments (line 2632)
        kwargs_84325 = {}
        # Getting the type of 'self' (line 2632)
        self_84322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2632, 14), 'self', False)
        # Obtaining the member '_make_space' of a type (line 2632)
        _make_space_84323 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2632, 14), self_84322, '_make_space')
        # Calling _make_space(args, kwargs) (line 2632)
        _make_space_call_result_84326 = invoke(stypy.reporting.localization.Localization(__file__, 2632, 14), _make_space_84323, *[num_84324], **kwargs_84325)
        
        # Assigning a type to the variable 'box' (line 2632)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2632, 8), 'box', _make_space_call_result_84326)
        
        # Obtaining an instance of the builtin type 'list' (line 2633)
        list_84327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2633, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2633)
        # Adding element type (line 2633)
        # Getting the type of 'box' (line 2633)
        box_84328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2633, 16), 'box')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2633, 15), list_84327, box_84328)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2633)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2633, 8), 'stypy_return_type', list_84327)
        
        # ################# End of 'space(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'space' in the type store
        # Getting the type of 'stypy_return_type' (line 2629)
        stypy_return_type_84329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2629, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84329)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'space'
        return stypy_return_type_84329


    @norecursion
    def customspace(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'customspace'
        module_type_store = module_type_store.open_function_context('customspace', 2635, 4, False)
        # Assigning a type to the variable 'self' (line 2636)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2636, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.customspace.__dict__.__setitem__('stypy_localization', localization)
        Parser.customspace.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.customspace.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.customspace.__dict__.__setitem__('stypy_function_name', 'Parser.customspace')
        Parser.customspace.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.customspace.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.customspace.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.customspace.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.customspace.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.customspace.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.customspace.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.customspace', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'customspace', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'customspace(...)' code ##################

        
        # Obtaining an instance of the builtin type 'list' (line 2636)
        list_84330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2636, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2636)
        # Adding element type (line 2636)
        
        # Call to _make_space(...): (line 2636)
        # Processing the call arguments (line 2636)
        
        # Call to float(...): (line 2636)
        # Processing the call arguments (line 2636)
        
        # Obtaining the type of the subscript
        int_84334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2636, 44), 'int')
        # Getting the type of 'toks' (line 2636)
        toks_84335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2636, 39), 'toks', False)
        # Obtaining the member '__getitem__' of a type (line 2636)
        getitem___84336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2636, 39), toks_84335, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2636)
        subscript_call_result_84337 = invoke(stypy.reporting.localization.Localization(__file__, 2636, 39), getitem___84336, int_84334)
        
        # Processing the call keyword arguments (line 2636)
        kwargs_84338 = {}
        # Getting the type of 'float' (line 2636)
        float_84333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2636, 33), 'float', False)
        # Calling float(args, kwargs) (line 2636)
        float_call_result_84339 = invoke(stypy.reporting.localization.Localization(__file__, 2636, 33), float_84333, *[subscript_call_result_84337], **kwargs_84338)
        
        # Processing the call keyword arguments (line 2636)
        kwargs_84340 = {}
        # Getting the type of 'self' (line 2636)
        self_84331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2636, 16), 'self', False)
        # Obtaining the member '_make_space' of a type (line 2636)
        _make_space_84332 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2636, 16), self_84331, '_make_space')
        # Calling _make_space(args, kwargs) (line 2636)
        _make_space_call_result_84341 = invoke(stypy.reporting.localization.Localization(__file__, 2636, 16), _make_space_84332, *[float_call_result_84339], **kwargs_84340)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2636, 15), list_84330, _make_space_call_result_84341)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2636)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2636, 8), 'stypy_return_type', list_84330)
        
        # ################# End of 'customspace(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'customspace' in the type store
        # Getting the type of 'stypy_return_type' (line 2635)
        stypy_return_type_84342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2635, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84342)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'customspace'
        return stypy_return_type_84342


    @norecursion
    def symbol(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'symbol'
        module_type_store = module_type_store.open_function_context('symbol', 2638, 4, False)
        # Assigning a type to the variable 'self' (line 2639)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2639, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.symbol.__dict__.__setitem__('stypy_localization', localization)
        Parser.symbol.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.symbol.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.symbol.__dict__.__setitem__('stypy_function_name', 'Parser.symbol')
        Parser.symbol.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.symbol.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.symbol.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.symbol.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.symbol.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.symbol.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.symbol.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.symbol', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'symbol', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'symbol(...)' code ##################

        
        # Assigning a Subscript to a Name (line 2640):
        
        # Assigning a Subscript to a Name (line 2640):
        
        # Obtaining the type of the subscript
        int_84343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2640, 17), 'int')
        # Getting the type of 'toks' (line 2640)
        toks_84344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2640, 12), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2640)
        getitem___84345 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2640, 12), toks_84344, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2640)
        subscript_call_result_84346 = invoke(stypy.reporting.localization.Localization(__file__, 2640, 12), getitem___84345, int_84343)
        
        # Assigning a type to the variable 'c' (line 2640)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2640, 8), 'c', subscript_call_result_84346)
        
        
        # SSA begins for try-except statement (line 2641)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Call to a Name (line 2642):
        
        # Assigning a Call to a Name (line 2642):
        
        # Call to Char(...): (line 2642)
        # Processing the call arguments (line 2642)
        # Getting the type of 'c' (line 2642)
        c_84348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2642, 24), 'c', False)
        
        # Call to get_state(...): (line 2642)
        # Processing the call keyword arguments (line 2642)
        kwargs_84351 = {}
        # Getting the type of 'self' (line 2642)
        self_84349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2642, 27), 'self', False)
        # Obtaining the member 'get_state' of a type (line 2642)
        get_state_84350 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2642, 27), self_84349, 'get_state')
        # Calling get_state(args, kwargs) (line 2642)
        get_state_call_result_84352 = invoke(stypy.reporting.localization.Localization(__file__, 2642, 27), get_state_84350, *[], **kwargs_84351)
        
        # Processing the call keyword arguments (line 2642)
        kwargs_84353 = {}
        # Getting the type of 'Char' (line 2642)
        Char_84347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2642, 19), 'Char', False)
        # Calling Char(args, kwargs) (line 2642)
        Char_call_result_84354 = invoke(stypy.reporting.localization.Localization(__file__, 2642, 19), Char_84347, *[c_84348, get_state_call_result_84352], **kwargs_84353)
        
        # Assigning a type to the variable 'char' (line 2642)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2642, 12), 'char', Char_call_result_84354)
        # SSA branch for the except part of a try statement (line 2641)
        # SSA branch for the except 'ValueError' branch of a try statement (line 2641)
        module_type_store.open_ssa_branch('except')
        
        # Call to ParseFatalException(...): (line 2644)
        # Processing the call arguments (line 2644)
        # Getting the type of 's' (line 2644)
        s_84356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2644, 38), 's', False)
        # Getting the type of 'loc' (line 2644)
        loc_84357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2644, 41), 'loc', False)
        unicode_84358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2644, 46), 'unicode', u'Unknown symbol: %s')
        # Getting the type of 'c' (line 2644)
        c_84359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2644, 69), 'c', False)
        # Applying the binary operator '%' (line 2644)
        result_mod_84360 = python_operator(stypy.reporting.localization.Localization(__file__, 2644, 46), '%', unicode_84358, c_84359)
        
        # Processing the call keyword arguments (line 2644)
        kwargs_84361 = {}
        # Getting the type of 'ParseFatalException' (line 2644)
        ParseFatalException_84355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2644, 18), 'ParseFatalException', False)
        # Calling ParseFatalException(args, kwargs) (line 2644)
        ParseFatalException_call_result_84362 = invoke(stypy.reporting.localization.Localization(__file__, 2644, 18), ParseFatalException_84355, *[s_84356, loc_84357, result_mod_84360], **kwargs_84361)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2644, 12), ParseFatalException_call_result_84362, 'raise parameter', BaseException)
        # SSA join for try-except statement (line 2641)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'c' (line 2646)
        c_84363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2646, 11), 'c')
        # Getting the type of 'self' (line 2646)
        self_84364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2646, 16), 'self')
        # Obtaining the member '_spaced_symbols' of a type (line 2646)
        _spaced_symbols_84365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2646, 16), self_84364, '_spaced_symbols')
        # Applying the binary operator 'in' (line 2646)
        result_contains_84366 = python_operator(stypy.reporting.localization.Localization(__file__, 2646, 11), 'in', c_84363, _spaced_symbols_84365)
        
        # Testing the type of an if condition (line 2646)
        if_condition_84367 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2646, 8), result_contains_84366)
        # Assigning a type to the variable 'if_condition_84367' (line 2646)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2646, 8), 'if_condition_84367', if_condition_84367)
        # SSA begins for if statement (line 2646)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Call to xrange(...): (line 2649)
        # Processing the call arguments (line 2649)
        int_84371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2649, 38), 'int')
        # Getting the type of 'loc' (line 2649)
        loc_84372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2649, 41), 'loc', False)
        int_84373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2649, 47), 'int')
        # Applying the binary operator '+' (line 2649)
        result_add_84374 = python_operator(stypy.reporting.localization.Localization(__file__, 2649, 41), '+', loc_84372, int_84373)
        
        # Processing the call keyword arguments (line 2649)
        kwargs_84375 = {}
        # Getting the type of 'six' (line 2649)
        six_84368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2649, 21), 'six', False)
        # Obtaining the member 'moves' of a type (line 2649)
        moves_84369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2649, 21), six_84368, 'moves')
        # Obtaining the member 'xrange' of a type (line 2649)
        xrange_84370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2649, 21), moves_84369, 'xrange')
        # Calling xrange(args, kwargs) (line 2649)
        xrange_call_result_84376 = invoke(stypy.reporting.localization.Localization(__file__, 2649, 21), xrange_84370, *[int_84371, result_add_84374], **kwargs_84375)
        
        # Testing the type of a for loop iterable (line 2649)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2649, 12), xrange_call_result_84376)
        # Getting the type of the for loop variable (line 2649)
        for_loop_var_84377 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2649, 12), xrange_call_result_84376)
        # Assigning a type to the variable 'i' (line 2649)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2649, 12), 'i', for_loop_var_84377)
        # SSA begins for a for statement (line 2649)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Subscript to a Name (line 2650):
        
        # Assigning a Subscript to a Name (line 2650):
        
        # Obtaining the type of the subscript
        # Getting the type of 'loc' (line 2650)
        loc_84378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2650, 30), 'loc')
        # Getting the type of 'i' (line 2650)
        i_84379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2650, 34), 'i')
        # Applying the binary operator '-' (line 2650)
        result_sub_84380 = python_operator(stypy.reporting.localization.Localization(__file__, 2650, 30), '-', loc_84378, i_84379)
        
        # Getting the type of 's' (line 2650)
        s_84381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2650, 28), 's')
        # Obtaining the member '__getitem__' of a type (line 2650)
        getitem___84382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2650, 28), s_84381, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2650)
        subscript_call_result_84383 = invoke(stypy.reporting.localization.Localization(__file__, 2650, 28), getitem___84382, result_sub_84380)
        
        # Assigning a type to the variable 'prev_char' (line 2650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2650, 16), 'prev_char', subscript_call_result_84383)
        
        
        # Getting the type of 'prev_char' (line 2651)
        prev_char_84384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2651, 19), 'prev_char')
        unicode_84385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2651, 32), 'unicode', u' ')
        # Applying the binary operator '!=' (line 2651)
        result_ne_84386 = python_operator(stypy.reporting.localization.Localization(__file__, 2651, 19), '!=', prev_char_84384, unicode_84385)
        
        # Testing the type of an if condition (line 2651)
        if_condition_84387 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2651, 16), result_ne_84386)
        # Assigning a type to the variable 'if_condition_84387' (line 2651)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2651, 16), 'if_condition_84387', if_condition_84387)
        # SSA begins for if statement (line 2651)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # SSA join for if statement (line 2651)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'c' (line 2654)
        c_84388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2654, 16), 'c')
        # Getting the type of 'self' (line 2654)
        self_84389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2654, 21), 'self')
        # Obtaining the member '_binary_operators' of a type (line 2654)
        _binary_operators_84390 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2654, 21), self_84389, '_binary_operators')
        # Applying the binary operator 'in' (line 2654)
        result_contains_84391 = python_operator(stypy.reporting.localization.Localization(__file__, 2654, 16), 'in', c_84388, _binary_operators_84390)
        
        
        # Evaluating a boolean operation
        
        
        # Call to len(...): (line 2655)
        # Processing the call arguments (line 2655)
        
        # Call to split(...): (line 2655)
        # Processing the call keyword arguments (line 2655)
        kwargs_84399 = {}
        
        # Obtaining the type of the subscript
        # Getting the type of 'loc' (line 2655)
        loc_84393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2655, 28), 'loc', False)
        slice_84394 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2655, 25), None, loc_84393, None)
        # Getting the type of 's' (line 2655)
        s_84395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2655, 25), 's', False)
        # Obtaining the member '__getitem__' of a type (line 2655)
        getitem___84396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2655, 25), s_84395, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2655)
        subscript_call_result_84397 = invoke(stypy.reporting.localization.Localization(__file__, 2655, 25), getitem___84396, slice_84394)
        
        # Obtaining the member 'split' of a type (line 2655)
        split_84398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2655, 25), subscript_call_result_84397, 'split')
        # Calling split(args, kwargs) (line 2655)
        split_call_result_84400 = invoke(stypy.reporting.localization.Localization(__file__, 2655, 25), split_84398, *[], **kwargs_84399)
        
        # Processing the call keyword arguments (line 2655)
        kwargs_84401 = {}
        # Getting the type of 'len' (line 2655)
        len_84392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2655, 21), 'len', False)
        # Calling len(args, kwargs) (line 2655)
        len_call_result_84402 = invoke(stypy.reporting.localization.Localization(__file__, 2655, 21), len_84392, *[split_call_result_84400], **kwargs_84401)
        
        int_84403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2655, 45), 'int')
        # Applying the binary operator '==' (line 2655)
        result_eq_84404 = python_operator(stypy.reporting.localization.Localization(__file__, 2655, 21), '==', len_call_result_84402, int_84403)
        
        
        # Getting the type of 'prev_char' (line 2655)
        prev_char_84405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2655, 50), 'prev_char')
        unicode_84406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2655, 63), 'unicode', u'{')
        # Applying the binary operator '==' (line 2655)
        result_eq_84407 = python_operator(stypy.reporting.localization.Localization(__file__, 2655, 50), '==', prev_char_84405, unicode_84406)
        
        # Applying the binary operator 'or' (line 2655)
        result_or_keyword_84408 = python_operator(stypy.reporting.localization.Localization(__file__, 2655, 21), 'or', result_eq_84404, result_eq_84407)
        
        # Getting the type of 'prev_char' (line 2656)
        prev_char_84409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2656, 24), 'prev_char')
        # Getting the type of 'self' (line 2656)
        self_84410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2656, 37), 'self')
        # Obtaining the member '_left_delim' of a type (line 2656)
        _left_delim_84411 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2656, 37), self_84410, '_left_delim')
        # Applying the binary operator 'in' (line 2656)
        result_contains_84412 = python_operator(stypy.reporting.localization.Localization(__file__, 2656, 24), 'in', prev_char_84409, _left_delim_84411)
        
        # Applying the binary operator 'or' (line 2655)
        result_or_keyword_84413 = python_operator(stypy.reporting.localization.Localization(__file__, 2655, 21), 'or', result_or_keyword_84408, result_contains_84412)
        
        # Applying the binary operator 'and' (line 2654)
        result_and_keyword_84414 = python_operator(stypy.reporting.localization.Localization(__file__, 2654, 16), 'and', result_contains_84391, result_or_keyword_84413)
        
        # Testing the type of an if condition (line 2654)
        if_condition_84415 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2654, 12), result_and_keyword_84414)
        # Assigning a type to the variable 'if_condition_84415' (line 2654)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2654, 12), 'if_condition_84415', if_condition_84415)
        # SSA begins for if statement (line 2654)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining an instance of the builtin type 'list' (line 2657)
        list_84416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2657, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2657)
        # Adding element type (line 2657)
        # Getting the type of 'char' (line 2657)
        char_84417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2657, 24), 'char')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2657, 23), list_84416, char_84417)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2657)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2657, 16), 'stypy_return_type', list_84416)
        # SSA branch for the else part of an if statement (line 2654)
        module_type_store.open_ssa_branch('else')
        
        # Obtaining an instance of the builtin type 'list' (line 2659)
        list_84418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2659, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2659)
        # Adding element type (line 2659)
        
        # Call to Hlist(...): (line 2659)
        # Processing the call arguments (line 2659)
        
        # Obtaining an instance of the builtin type 'list' (line 2659)
        list_84420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2659, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2659)
        # Adding element type (line 2659)
        
        # Call to _make_space(...): (line 2659)
        # Processing the call arguments (line 2659)
        float_84423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2659, 48), 'float')
        # Processing the call keyword arguments (line 2659)
        kwargs_84424 = {}
        # Getting the type of 'self' (line 2659)
        self_84421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2659, 31), 'self', False)
        # Obtaining the member '_make_space' of a type (line 2659)
        _make_space_84422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2659, 31), self_84421, '_make_space')
        # Calling _make_space(args, kwargs) (line 2659)
        _make_space_call_result_84425 = invoke(stypy.reporting.localization.Localization(__file__, 2659, 31), _make_space_84422, *[float_84423], **kwargs_84424)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2659, 30), list_84420, _make_space_call_result_84425)
        # Adding element type (line 2659)
        # Getting the type of 'char' (line 2660)
        char_84426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2660, 31), 'char', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2659, 30), list_84420, char_84426)
        # Adding element type (line 2659)
        
        # Call to _make_space(...): (line 2661)
        # Processing the call arguments (line 2661)
        float_84429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2661, 48), 'float')
        # Processing the call keyword arguments (line 2661)
        kwargs_84430 = {}
        # Getting the type of 'self' (line 2661)
        self_84427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2661, 31), 'self', False)
        # Obtaining the member '_make_space' of a type (line 2661)
        _make_space_84428 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2661, 31), self_84427, '_make_space')
        # Calling _make_space(args, kwargs) (line 2661)
        _make_space_call_result_84431 = invoke(stypy.reporting.localization.Localization(__file__, 2661, 31), _make_space_84428, *[float_84429], **kwargs_84430)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2659, 30), list_84420, _make_space_call_result_84431)
        
        # Processing the call keyword arguments (line 2659)
        # Getting the type of 'True' (line 2662)
        True_84432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2662, 41), 'True', False)
        keyword_84433 = True_84432
        kwargs_84434 = {'do_kern': keyword_84433}
        # Getting the type of 'Hlist' (line 2659)
        Hlist_84419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2659, 24), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 2659)
        Hlist_call_result_84435 = invoke(stypy.reporting.localization.Localization(__file__, 2659, 24), Hlist_84419, *[list_84420], **kwargs_84434)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2659, 23), list_84418, Hlist_call_result_84435)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2659)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2659, 16), 'stypy_return_type', list_84418)
        # SSA join for if statement (line 2654)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 2646)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'c' (line 2663)
        c_84436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2663, 13), 'c')
        # Getting the type of 'self' (line 2663)
        self_84437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2663, 18), 'self')
        # Obtaining the member '_punctuation_symbols' of a type (line 2663)
        _punctuation_symbols_84438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2663, 18), self_84437, '_punctuation_symbols')
        # Applying the binary operator 'in' (line 2663)
        result_contains_84439 = python_operator(stypy.reporting.localization.Localization(__file__, 2663, 13), 'in', c_84436, _punctuation_symbols_84438)
        
        # Testing the type of an if condition (line 2663)
        if_condition_84440 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2663, 13), result_contains_84439)
        # Assigning a type to the variable 'if_condition_84440' (line 2663)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2663, 13), 'if_condition_84440', if_condition_84440)
        # SSA begins for if statement (line 2663)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'c' (line 2666)
        c_84441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2666, 15), 'c')
        unicode_84442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2666, 20), 'unicode', u',')
        # Applying the binary operator '==' (line 2666)
        result_eq_84443 = python_operator(stypy.reporting.localization.Localization(__file__, 2666, 15), '==', c_84441, unicode_84442)
        
        # Testing the type of an if condition (line 2666)
        if_condition_84444 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2666, 12), result_eq_84443)
        # Assigning a type to the variable 'if_condition_84444' (line 2666)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2666, 12), 'if_condition_84444', if_condition_84444)
        # SSA begins for if statement (line 2666)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 2667):
        
        # Assigning a Str to a Name (line 2667):
        unicode_84445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2667, 39), 'unicode', u'')
        # Assigning a type to the variable 'tuple_assignment_77299' (line 2667)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2667, 16), 'tuple_assignment_77299', unicode_84445)
        
        # Assigning a Str to a Name (line 2667):
        unicode_84446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2667, 43), 'unicode', u'')
        # Assigning a type to the variable 'tuple_assignment_77300' (line 2667)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2667, 16), 'tuple_assignment_77300', unicode_84446)
        
        # Assigning a Name to a Name (line 2667):
        # Getting the type of 'tuple_assignment_77299' (line 2667)
        tuple_assignment_77299_84447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2667, 16), 'tuple_assignment_77299')
        # Assigning a type to the variable 'prev_char' (line 2667)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2667, 16), 'prev_char', tuple_assignment_77299_84447)
        
        # Assigning a Name to a Name (line 2667):
        # Getting the type of 'tuple_assignment_77300' (line 2667)
        tuple_assignment_77300_84448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2667, 16), 'tuple_assignment_77300')
        # Assigning a type to the variable 'next_char' (line 2667)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2667, 27), 'next_char', tuple_assignment_77300_84448)
        
        
        # Call to xrange(...): (line 2668)
        # Processing the call arguments (line 2668)
        int_84452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2668, 42), 'int')
        # Getting the type of 'loc' (line 2668)
        loc_84453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2668, 45), 'loc', False)
        int_84454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2668, 51), 'int')
        # Applying the binary operator '+' (line 2668)
        result_add_84455 = python_operator(stypy.reporting.localization.Localization(__file__, 2668, 45), '+', loc_84453, int_84454)
        
        # Processing the call keyword arguments (line 2668)
        kwargs_84456 = {}
        # Getting the type of 'six' (line 2668)
        six_84449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2668, 25), 'six', False)
        # Obtaining the member 'moves' of a type (line 2668)
        moves_84450 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2668, 25), six_84449, 'moves')
        # Obtaining the member 'xrange' of a type (line 2668)
        xrange_84451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2668, 25), moves_84450, 'xrange')
        # Calling xrange(args, kwargs) (line 2668)
        xrange_call_result_84457 = invoke(stypy.reporting.localization.Localization(__file__, 2668, 25), xrange_84451, *[int_84452, result_add_84455], **kwargs_84456)
        
        # Testing the type of a for loop iterable (line 2668)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2668, 16), xrange_call_result_84457)
        # Getting the type of the for loop variable (line 2668)
        for_loop_var_84458 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2668, 16), xrange_call_result_84457)
        # Assigning a type to the variable 'i' (line 2668)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2668, 16), 'i', for_loop_var_84458)
        # SSA begins for a for statement (line 2668)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Subscript to a Name (line 2669):
        
        # Assigning a Subscript to a Name (line 2669):
        
        # Obtaining the type of the subscript
        # Getting the type of 'loc' (line 2669)
        loc_84459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2669, 34), 'loc')
        # Getting the type of 'i' (line 2669)
        i_84460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2669, 40), 'i')
        # Applying the binary operator '-' (line 2669)
        result_sub_84461 = python_operator(stypy.reporting.localization.Localization(__file__, 2669, 34), '-', loc_84459, i_84460)
        
        # Getting the type of 's' (line 2669)
        s_84462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2669, 32), 's')
        # Obtaining the member '__getitem__' of a type (line 2669)
        getitem___84463 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2669, 32), s_84462, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2669)
        subscript_call_result_84464 = invoke(stypy.reporting.localization.Localization(__file__, 2669, 32), getitem___84463, result_sub_84461)
        
        # Assigning a type to the variable 'prev_char' (line 2669)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2669, 20), 'prev_char', subscript_call_result_84464)
        
        
        # Getting the type of 'prev_char' (line 2670)
        prev_char_84465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2670, 23), 'prev_char')
        unicode_84466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2670, 36), 'unicode', u' ')
        # Applying the binary operator '!=' (line 2670)
        result_ne_84467 = python_operator(stypy.reporting.localization.Localization(__file__, 2670, 23), '!=', prev_char_84465, unicode_84466)
        
        # Testing the type of an if condition (line 2670)
        if_condition_84468 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2670, 20), result_ne_84467)
        # Assigning a type to the variable 'if_condition_84468' (line 2670)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2670, 20), 'if_condition_84468', if_condition_84468)
        # SSA begins for if statement (line 2670)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # SSA join for if statement (line 2670)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to xrange(...): (line 2672)
        # Processing the call arguments (line 2672)
        int_84472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2672, 42), 'int')
        
        # Call to len(...): (line 2672)
        # Processing the call arguments (line 2672)
        # Getting the type of 's' (line 2672)
        s_84474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2672, 49), 's', False)
        # Processing the call keyword arguments (line 2672)
        kwargs_84475 = {}
        # Getting the type of 'len' (line 2672)
        len_84473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2672, 45), 'len', False)
        # Calling len(args, kwargs) (line 2672)
        len_call_result_84476 = invoke(stypy.reporting.localization.Localization(__file__, 2672, 45), len_84473, *[s_84474], **kwargs_84475)
        
        # Getting the type of 'loc' (line 2672)
        loc_84477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2672, 54), 'loc', False)
        # Applying the binary operator '-' (line 2672)
        result_sub_84478 = python_operator(stypy.reporting.localization.Localization(__file__, 2672, 45), '-', len_call_result_84476, loc_84477)
        
        # Processing the call keyword arguments (line 2672)
        kwargs_84479 = {}
        # Getting the type of 'six' (line 2672)
        six_84469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2672, 25), 'six', False)
        # Obtaining the member 'moves' of a type (line 2672)
        moves_84470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2672, 25), six_84469, 'moves')
        # Obtaining the member 'xrange' of a type (line 2672)
        xrange_84471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2672, 25), moves_84470, 'xrange')
        # Calling xrange(args, kwargs) (line 2672)
        xrange_call_result_84480 = invoke(stypy.reporting.localization.Localization(__file__, 2672, 25), xrange_84471, *[int_84472, result_sub_84478], **kwargs_84479)
        
        # Testing the type of a for loop iterable (line 2672)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2672, 16), xrange_call_result_84480)
        # Getting the type of the for loop variable (line 2672)
        for_loop_var_84481 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2672, 16), xrange_call_result_84480)
        # Assigning a type to the variable 'i' (line 2672)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2672, 16), 'i', for_loop_var_84481)
        # SSA begins for a for statement (line 2672)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Subscript to a Name (line 2673):
        
        # Assigning a Subscript to a Name (line 2673):
        
        # Obtaining the type of the subscript
        # Getting the type of 'loc' (line 2673)
        loc_84482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2673, 34), 'loc')
        # Getting the type of 'i' (line 2673)
        i_84483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2673, 40), 'i')
        # Applying the binary operator '+' (line 2673)
        result_add_84484 = python_operator(stypy.reporting.localization.Localization(__file__, 2673, 34), '+', loc_84482, i_84483)
        
        # Getting the type of 's' (line 2673)
        s_84485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2673, 32), 's')
        # Obtaining the member '__getitem__' of a type (line 2673)
        getitem___84486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2673, 32), s_84485, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2673)
        subscript_call_result_84487 = invoke(stypy.reporting.localization.Localization(__file__, 2673, 32), getitem___84486, result_add_84484)
        
        # Assigning a type to the variable 'next_char' (line 2673)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2673, 20), 'next_char', subscript_call_result_84487)
        
        
        # Getting the type of 'next_char' (line 2674)
        next_char_84488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2674, 23), 'next_char')
        unicode_84489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2674, 36), 'unicode', u' ')
        # Applying the binary operator '!=' (line 2674)
        result_ne_84490 = python_operator(stypy.reporting.localization.Localization(__file__, 2674, 23), '!=', next_char_84488, unicode_84489)
        
        # Testing the type of an if condition (line 2674)
        if_condition_84491 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2674, 20), result_ne_84490)
        # Assigning a type to the variable 'if_condition_84491' (line 2674)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2674, 20), 'if_condition_84491', if_condition_84491)
        # SSA begins for if statement (line 2674)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # SSA join for if statement (line 2674)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'prev_char' (line 2676)
        prev_char_84492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2676, 20), 'prev_char')
        unicode_84493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2676, 33), 'unicode', u'{')
        # Applying the binary operator '==' (line 2676)
        result_eq_84494 = python_operator(stypy.reporting.localization.Localization(__file__, 2676, 20), '==', prev_char_84492, unicode_84493)
        
        
        # Getting the type of 'next_char' (line 2676)
        next_char_84495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2676, 41), 'next_char')
        unicode_84496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2676, 54), 'unicode', u'}')
        # Applying the binary operator '==' (line 2676)
        result_eq_84497 = python_operator(stypy.reporting.localization.Localization(__file__, 2676, 41), '==', next_char_84495, unicode_84496)
        
        # Applying the binary operator 'and' (line 2676)
        result_and_keyword_84498 = python_operator(stypy.reporting.localization.Localization(__file__, 2676, 20), 'and', result_eq_84494, result_eq_84497)
        
        # Testing the type of an if condition (line 2676)
        if_condition_84499 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2676, 16), result_and_keyword_84498)
        # Assigning a type to the variable 'if_condition_84499' (line 2676)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2676, 16), 'if_condition_84499', if_condition_84499)
        # SSA begins for if statement (line 2676)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining an instance of the builtin type 'list' (line 2677)
        list_84500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2677, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2677)
        # Adding element type (line 2677)
        # Getting the type of 'char' (line 2677)
        char_84501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2677, 28), 'char')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2677, 27), list_84500, char_84501)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2677)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2677, 20), 'stypy_return_type', list_84500)
        # SSA join for if statement (line 2676)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2666)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'c' (line 2680)
        c_84502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2680, 16), 'c')
        unicode_84503 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2680, 21), 'unicode', u'.')
        # Applying the binary operator '==' (line 2680)
        result_eq_84504 = python_operator(stypy.reporting.localization.Localization(__file__, 2680, 16), '==', c_84502, unicode_84503)
        
        
        # Call to isdigit(...): (line 2680)
        # Processing the call keyword arguments (line 2680)
        kwargs_84512 = {}
        
        # Obtaining the type of the subscript
        # Getting the type of 'loc' (line 2680)
        loc_84505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2680, 31), 'loc', False)
        int_84506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2680, 37), 'int')
        # Applying the binary operator '-' (line 2680)
        result_sub_84507 = python_operator(stypy.reporting.localization.Localization(__file__, 2680, 31), '-', loc_84505, int_84506)
        
        # Getting the type of 's' (line 2680)
        s_84508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2680, 29), 's', False)
        # Obtaining the member '__getitem__' of a type (line 2680)
        getitem___84509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2680, 29), s_84508, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2680)
        subscript_call_result_84510 = invoke(stypy.reporting.localization.Localization(__file__, 2680, 29), getitem___84509, result_sub_84507)
        
        # Obtaining the member 'isdigit' of a type (line 2680)
        isdigit_84511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2680, 29), subscript_call_result_84510, 'isdigit')
        # Calling isdigit(args, kwargs) (line 2680)
        isdigit_call_result_84513 = invoke(stypy.reporting.localization.Localization(__file__, 2680, 29), isdigit_84511, *[], **kwargs_84512)
        
        # Applying the binary operator 'and' (line 2680)
        result_and_keyword_84514 = python_operator(stypy.reporting.localization.Localization(__file__, 2680, 16), 'and', result_eq_84504, isdigit_call_result_84513)
        
        # Call to isdigit(...): (line 2680)
        # Processing the call keyword arguments (line 2680)
        kwargs_84522 = {}
        
        # Obtaining the type of the subscript
        # Getting the type of 'loc' (line 2680)
        loc_84515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2680, 56), 'loc', False)
        int_84516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2680, 62), 'int')
        # Applying the binary operator '+' (line 2680)
        result_add_84517 = python_operator(stypy.reporting.localization.Localization(__file__, 2680, 56), '+', loc_84515, int_84516)
        
        # Getting the type of 's' (line 2680)
        s_84518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2680, 54), 's', False)
        # Obtaining the member '__getitem__' of a type (line 2680)
        getitem___84519 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2680, 54), s_84518, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2680)
        subscript_call_result_84520 = invoke(stypy.reporting.localization.Localization(__file__, 2680, 54), getitem___84519, result_add_84517)
        
        # Obtaining the member 'isdigit' of a type (line 2680)
        isdigit_84521 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2680, 54), subscript_call_result_84520, 'isdigit')
        # Calling isdigit(args, kwargs) (line 2680)
        isdigit_call_result_84523 = invoke(stypy.reporting.localization.Localization(__file__, 2680, 54), isdigit_84521, *[], **kwargs_84522)
        
        # Applying the binary operator 'and' (line 2680)
        result_and_keyword_84524 = python_operator(stypy.reporting.localization.Localization(__file__, 2680, 16), 'and', result_and_keyword_84514, isdigit_call_result_84523)
        
        # Testing the type of an if condition (line 2680)
        if_condition_84525 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2680, 12), result_and_keyword_84524)
        # Assigning a type to the variable 'if_condition_84525' (line 2680)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2680, 12), 'if_condition_84525', if_condition_84525)
        # SSA begins for if statement (line 2680)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining an instance of the builtin type 'list' (line 2681)
        list_84526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2681, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2681)
        # Adding element type (line 2681)
        # Getting the type of 'char' (line 2681)
        char_84527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2681, 24), 'char')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2681, 23), list_84526, char_84527)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2681)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2681, 16), 'stypy_return_type', list_84526)
        # SSA branch for the else part of an if statement (line 2680)
        module_type_store.open_ssa_branch('else')
        
        # Obtaining an instance of the builtin type 'list' (line 2683)
        list_84528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2683, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2683)
        # Adding element type (line 2683)
        
        # Call to Hlist(...): (line 2683)
        # Processing the call arguments (line 2683)
        
        # Obtaining an instance of the builtin type 'list' (line 2683)
        list_84530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2683, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2683)
        # Adding element type (line 2683)
        # Getting the type of 'char' (line 2683)
        char_84531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2683, 31), 'char', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2683, 30), list_84530, char_84531)
        # Adding element type (line 2683)
        
        # Call to _make_space(...): (line 2684)
        # Processing the call arguments (line 2684)
        float_84534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2684, 48), 'float')
        # Processing the call keyword arguments (line 2684)
        kwargs_84535 = {}
        # Getting the type of 'self' (line 2684)
        self_84532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2684, 31), 'self', False)
        # Obtaining the member '_make_space' of a type (line 2684)
        _make_space_84533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2684, 31), self_84532, '_make_space')
        # Calling _make_space(args, kwargs) (line 2684)
        _make_space_call_result_84536 = invoke(stypy.reporting.localization.Localization(__file__, 2684, 31), _make_space_84533, *[float_84534], **kwargs_84535)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2683, 30), list_84530, _make_space_call_result_84536)
        
        # Processing the call keyword arguments (line 2683)
        # Getting the type of 'True' (line 2685)
        True_84537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2685, 41), 'True', False)
        keyword_84538 = True_84537
        kwargs_84539 = {'do_kern': keyword_84538}
        # Getting the type of 'Hlist' (line 2683)
        Hlist_84529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2683, 24), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 2683)
        Hlist_call_result_84540 = invoke(stypy.reporting.localization.Localization(__file__, 2683, 24), Hlist_84529, *[list_84530], **kwargs_84539)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2683, 23), list_84528, Hlist_call_result_84540)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2683)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2683, 16), 'stypy_return_type', list_84528)
        # SSA join for if statement (line 2680)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2663)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2646)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining an instance of the builtin type 'list' (line 2686)
        list_84541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2686, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2686)
        # Adding element type (line 2686)
        # Getting the type of 'char' (line 2686)
        char_84542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2686, 16), 'char')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2686, 15), list_84541, char_84542)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2686)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2686, 8), 'stypy_return_type', list_84541)
        
        # ################# End of 'symbol(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'symbol' in the type store
        # Getting the type of 'stypy_return_type' (line 2638)
        stypy_return_type_84543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2638, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84543)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'symbol'
        return stypy_return_type_84543

    
    # Assigning a Name to a Name (line 2688):

    @norecursion
    def unknown_symbol(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'unknown_symbol'
        module_type_store = module_type_store.open_function_context('unknown_symbol', 2690, 4, False)
        # Assigning a type to the variable 'self' (line 2691)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2691, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.unknown_symbol.__dict__.__setitem__('stypy_localization', localization)
        Parser.unknown_symbol.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.unknown_symbol.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.unknown_symbol.__dict__.__setitem__('stypy_function_name', 'Parser.unknown_symbol')
        Parser.unknown_symbol.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.unknown_symbol.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.unknown_symbol.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.unknown_symbol.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.unknown_symbol.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.unknown_symbol.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.unknown_symbol.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.unknown_symbol', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'unknown_symbol', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'unknown_symbol(...)' code ##################

        
        # Assigning a Subscript to a Name (line 2692):
        
        # Assigning a Subscript to a Name (line 2692):
        
        # Obtaining the type of the subscript
        int_84544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2692, 17), 'int')
        # Getting the type of 'toks' (line 2692)
        toks_84545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2692, 12), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2692)
        getitem___84546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2692, 12), toks_84545, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2692)
        subscript_call_result_84547 = invoke(stypy.reporting.localization.Localization(__file__, 2692, 12), getitem___84546, int_84544)
        
        # Assigning a type to the variable 'c' (line 2692)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2692, 8), 'c', subscript_call_result_84547)
        
        # Call to ParseFatalException(...): (line 2693)
        # Processing the call arguments (line 2693)
        # Getting the type of 's' (line 2693)
        s_84549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2693, 34), 's', False)
        # Getting the type of 'loc' (line 2693)
        loc_84550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2693, 37), 'loc', False)
        unicode_84551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2693, 42), 'unicode', u'Unknown symbol: %s')
        # Getting the type of 'c' (line 2693)
        c_84552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2693, 65), 'c', False)
        # Applying the binary operator '%' (line 2693)
        result_mod_84553 = python_operator(stypy.reporting.localization.Localization(__file__, 2693, 42), '%', unicode_84551, c_84552)
        
        # Processing the call keyword arguments (line 2693)
        kwargs_84554 = {}
        # Getting the type of 'ParseFatalException' (line 2693)
        ParseFatalException_84548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2693, 14), 'ParseFatalException', False)
        # Calling ParseFatalException(args, kwargs) (line 2693)
        ParseFatalException_call_result_84555 = invoke(stypy.reporting.localization.Localization(__file__, 2693, 14), ParseFatalException_84548, *[s_84549, loc_84550, result_mod_84553], **kwargs_84554)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2693, 8), ParseFatalException_call_result_84555, 'raise parameter', BaseException)
        
        # ################# End of 'unknown_symbol(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'unknown_symbol' in the type store
        # Getting the type of 'stypy_return_type' (line 2690)
        stypy_return_type_84556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2690, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84556)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'unknown_symbol'
        return stypy_return_type_84556

    
    # Assigning a Dict to a Name (line 2695):

    @norecursion
    def c_over_c(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'c_over_c'
        module_type_store = module_type_store.open_function_context('c_over_c', 2702, 4, False)
        # Assigning a type to the variable 'self' (line 2703)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2703, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.c_over_c.__dict__.__setitem__('stypy_localization', localization)
        Parser.c_over_c.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.c_over_c.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.c_over_c.__dict__.__setitem__('stypy_function_name', 'Parser.c_over_c')
        Parser.c_over_c.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.c_over_c.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.c_over_c.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.c_over_c.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.c_over_c.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.c_over_c.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.c_over_c.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.c_over_c', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'c_over_c', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'c_over_c(...)' code ##################

        
        # Assigning a Subscript to a Name (line 2703):
        
        # Assigning a Subscript to a Name (line 2703):
        
        # Obtaining the type of the subscript
        int_84557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2703, 19), 'int')
        # Getting the type of 'toks' (line 2703)
        toks_84558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2703, 14), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2703)
        getitem___84559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2703, 14), toks_84558, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2703)
        subscript_call_result_84560 = invoke(stypy.reporting.localization.Localization(__file__, 2703, 14), getitem___84559, int_84557)
        
        # Assigning a type to the variable 'sym' (line 2703)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2703, 8), 'sym', subscript_call_result_84560)
        
        # Assigning a Call to a Name (line 2704):
        
        # Assigning a Call to a Name (line 2704):
        
        # Call to get_state(...): (line 2704)
        # Processing the call keyword arguments (line 2704)
        kwargs_84563 = {}
        # Getting the type of 'self' (line 2704)
        self_84561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2704, 16), 'self', False)
        # Obtaining the member 'get_state' of a type (line 2704)
        get_state_84562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2704, 16), self_84561, 'get_state')
        # Calling get_state(args, kwargs) (line 2704)
        get_state_call_result_84564 = invoke(stypy.reporting.localization.Localization(__file__, 2704, 16), get_state_84562, *[], **kwargs_84563)
        
        # Assigning a type to the variable 'state' (line 2704)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2704, 8), 'state', get_state_call_result_84564)
        
        # Assigning a Call to a Name (line 2705):
        
        # Assigning a Call to a Name (line 2705):
        
        # Call to get_underline_thickness(...): (line 2705)
        # Processing the call arguments (line 2705)
        # Getting the type of 'state' (line 2706)
        state_84568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2706, 12), 'state', False)
        # Obtaining the member 'font' of a type (line 2706)
        font_84569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2706, 12), state_84568, 'font')
        # Getting the type of 'state' (line 2706)
        state_84570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2706, 24), 'state', False)
        # Obtaining the member 'fontsize' of a type (line 2706)
        fontsize_84571 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2706, 24), state_84570, 'fontsize')
        # Getting the type of 'state' (line 2706)
        state_84572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2706, 40), 'state', False)
        # Obtaining the member 'dpi' of a type (line 2706)
        dpi_84573 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2706, 40), state_84572, 'dpi')
        # Processing the call keyword arguments (line 2705)
        kwargs_84574 = {}
        # Getting the type of 'state' (line 2705)
        state_84565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2705, 20), 'state', False)
        # Obtaining the member 'font_output' of a type (line 2705)
        font_output_84566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2705, 20), state_84565, 'font_output')
        # Obtaining the member 'get_underline_thickness' of a type (line 2705)
        get_underline_thickness_84567 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2705, 20), font_output_84566, 'get_underline_thickness')
        # Calling get_underline_thickness(args, kwargs) (line 2705)
        get_underline_thickness_call_result_84575 = invoke(stypy.reporting.localization.Localization(__file__, 2705, 20), get_underline_thickness_84567, *[font_84569, fontsize_84571, dpi_84573], **kwargs_84574)
        
        # Assigning a type to the variable 'thickness' (line 2705)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2705, 8), 'thickness', get_underline_thickness_call_result_84575)
        
        # Assigning a Call to a Tuple (line 2708):
        
        # Assigning a Call to a Name:
        
        # Call to get(...): (line 2709)
        # Processing the call arguments (line 2709)
        # Getting the type of 'sym' (line 2709)
        sym_84579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2709, 38), 'sym', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2709)
        tuple_84580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2709, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2709)
        # Adding element type (line 2709)
        # Getting the type of 'None' (line 2709)
        None_84581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2709, 44), 'None', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2709, 44), tuple_84580, None_84581)
        # Adding element type (line 2709)
        # Getting the type of 'None' (line 2709)
        None_84582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2709, 50), 'None', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2709, 44), tuple_84580, None_84582)
        # Adding element type (line 2709)
        float_84583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2709, 56), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2709, 44), tuple_84580, float_84583)
        
        # Processing the call keyword arguments (line 2709)
        kwargs_84584 = {}
        # Getting the type of 'self' (line 2709)
        self_84576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2709, 12), 'self', False)
        # Obtaining the member '_char_over_chars' of a type (line 2709)
        _char_over_chars_84577 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2709, 12), self_84576, '_char_over_chars')
        # Obtaining the member 'get' of a type (line 2709)
        get_84578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2709, 12), _char_over_chars_84577, 'get')
        # Calling get(args, kwargs) (line 2709)
        get_call_result_84585 = invoke(stypy.reporting.localization.Localization(__file__, 2709, 12), get_84578, *[sym_84579, tuple_84580], **kwargs_84584)
        
        # Assigning a type to the variable 'call_assignment_77301' (line 2708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2708, 8), 'call_assignment_77301', get_call_result_84585)
        
        # Assigning a Call to a Name (line 2708):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_84588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2708, 8), 'int')
        # Processing the call keyword arguments
        kwargs_84589 = {}
        # Getting the type of 'call_assignment_77301' (line 2708)
        call_assignment_77301_84586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2708, 8), 'call_assignment_77301', False)
        # Obtaining the member '__getitem__' of a type (line 2708)
        getitem___84587 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2708, 8), call_assignment_77301_84586, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_84590 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___84587, *[int_84588], **kwargs_84589)
        
        # Assigning a type to the variable 'call_assignment_77302' (line 2708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2708, 8), 'call_assignment_77302', getitem___call_result_84590)
        
        # Assigning a Name to a Name (line 2708):
        # Getting the type of 'call_assignment_77302' (line 2708)
        call_assignment_77302_84591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2708, 8), 'call_assignment_77302')
        # Assigning a type to the variable 'under_desc' (line 2708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2708, 8), 'under_desc', call_assignment_77302_84591)
        
        # Assigning a Call to a Name (line 2708):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_84594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2708, 8), 'int')
        # Processing the call keyword arguments
        kwargs_84595 = {}
        # Getting the type of 'call_assignment_77301' (line 2708)
        call_assignment_77301_84592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2708, 8), 'call_assignment_77301', False)
        # Obtaining the member '__getitem__' of a type (line 2708)
        getitem___84593 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2708, 8), call_assignment_77301_84592, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_84596 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___84593, *[int_84594], **kwargs_84595)
        
        # Assigning a type to the variable 'call_assignment_77303' (line 2708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2708, 8), 'call_assignment_77303', getitem___call_result_84596)
        
        # Assigning a Name to a Name (line 2708):
        # Getting the type of 'call_assignment_77303' (line 2708)
        call_assignment_77303_84597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2708, 8), 'call_assignment_77303')
        # Assigning a type to the variable 'over_desc' (line 2708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2708, 20), 'over_desc', call_assignment_77303_84597)
        
        # Assigning a Call to a Name (line 2708):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_84600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2708, 8), 'int')
        # Processing the call keyword arguments
        kwargs_84601 = {}
        # Getting the type of 'call_assignment_77301' (line 2708)
        call_assignment_77301_84598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2708, 8), 'call_assignment_77301', False)
        # Obtaining the member '__getitem__' of a type (line 2708)
        getitem___84599 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2708, 8), call_assignment_77301_84598, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_84602 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___84599, *[int_84600], **kwargs_84601)
        
        # Assigning a type to the variable 'call_assignment_77304' (line 2708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2708, 8), 'call_assignment_77304', getitem___call_result_84602)
        
        # Assigning a Name to a Name (line 2708):
        # Getting the type of 'call_assignment_77304' (line 2708)
        call_assignment_77304_84603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2708, 8), 'call_assignment_77304')
        # Assigning a type to the variable 'space' (line 2708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2708, 31), 'space', call_assignment_77304_84603)
        
        # Type idiom detected: calculating its left and rigth part (line 2710)
        # Getting the type of 'under_desc' (line 2710)
        under_desc_84604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2710, 11), 'under_desc')
        # Getting the type of 'None' (line 2710)
        None_84605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2710, 25), 'None')
        
        (may_be_84606, more_types_in_union_84607) = may_be_none(under_desc_84604, None_84605)

        if may_be_84606:

            if more_types_in_union_84607:
                # Runtime conditional SSA (line 2710)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ParseFatalException(...): (line 2711)
            # Processing the call arguments (line 2711)
            unicode_84609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2711, 38), 'unicode', u'Error parsing symbol')
            # Processing the call keyword arguments (line 2711)
            kwargs_84610 = {}
            # Getting the type of 'ParseFatalException' (line 2711)
            ParseFatalException_84608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2711, 18), 'ParseFatalException', False)
            # Calling ParseFatalException(args, kwargs) (line 2711)
            ParseFatalException_call_result_84611 = invoke(stypy.reporting.localization.Localization(__file__, 2711, 18), ParseFatalException_84608, *[unicode_84609], **kwargs_84610)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2711, 12), ParseFatalException_call_result_84611, 'raise parameter', BaseException)

            if more_types_in_union_84607:
                # SSA join for if statement (line 2710)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 2713):
        
        # Assigning a Call to a Name (line 2713):
        
        # Call to copy(...): (line 2713)
        # Processing the call keyword arguments (line 2713)
        kwargs_84614 = {}
        # Getting the type of 'state' (line 2713)
        state_84612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2713, 21), 'state', False)
        # Obtaining the member 'copy' of a type (line 2713)
        copy_84613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2713, 21), state_84612, 'copy')
        # Calling copy(args, kwargs) (line 2713)
        copy_call_result_84615 = invoke(stypy.reporting.localization.Localization(__file__, 2713, 21), copy_84613, *[], **kwargs_84614)
        
        # Assigning a type to the variable 'over_state' (line 2713)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2713, 8), 'over_state', copy_call_result_84615)
        
        
        
        # Obtaining the type of the subscript
        int_84616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2714, 21), 'int')
        # Getting the type of 'over_desc' (line 2714)
        over_desc_84617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2714, 11), 'over_desc')
        # Obtaining the member '__getitem__' of a type (line 2714)
        getitem___84618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2714, 11), over_desc_84617, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2714)
        subscript_call_result_84619 = invoke(stypy.reporting.localization.Localization(__file__, 2714, 11), getitem___84618, int_84616)
        
        # Getting the type of 'None' (line 2714)
        None_84620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2714, 31), 'None')
        # Applying the binary operator 'isnot' (line 2714)
        result_is_not_84621 = python_operator(stypy.reporting.localization.Localization(__file__, 2714, 11), 'isnot', subscript_call_result_84619, None_84620)
        
        # Testing the type of an if condition (line 2714)
        if_condition_84622 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2714, 8), result_is_not_84621)
        # Assigning a type to the variable 'if_condition_84622' (line 2714)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2714, 8), 'if_condition_84622', if_condition_84622)
        # SSA begins for if statement (line 2714)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Attribute (line 2715):
        
        # Assigning a Subscript to a Attribute (line 2715):
        
        # Obtaining the type of the subscript
        int_84623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2715, 40), 'int')
        # Getting the type of 'over_desc' (line 2715)
        over_desc_84624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2715, 30), 'over_desc')
        # Obtaining the member '__getitem__' of a type (line 2715)
        getitem___84625 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2715, 30), over_desc_84624, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2715)
        subscript_call_result_84626 = invoke(stypy.reporting.localization.Localization(__file__, 2715, 30), getitem___84625, int_84623)
        
        # Getting the type of 'over_state' (line 2715)
        over_state_84627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2715, 12), 'over_state')
        # Setting the type of the member 'font' of a type (line 2715)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2715, 12), over_state_84627, 'font', subscript_call_result_84626)
        # SSA join for if statement (line 2714)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'over_state' (line 2716)
        over_state_84628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2716, 8), 'over_state')
        # Obtaining the member 'fontsize' of a type (line 2716)
        fontsize_84629 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2716, 8), over_state_84628, 'fontsize')
        
        # Obtaining the type of the subscript
        int_84630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2716, 41), 'int')
        # Getting the type of 'over_desc' (line 2716)
        over_desc_84631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2716, 31), 'over_desc')
        # Obtaining the member '__getitem__' of a type (line 2716)
        getitem___84632 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2716, 31), over_desc_84631, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2716)
        subscript_call_result_84633 = invoke(stypy.reporting.localization.Localization(__file__, 2716, 31), getitem___84632, int_84630)
        
        # Applying the binary operator '*=' (line 2716)
        result_imul_84634 = python_operator(stypy.reporting.localization.Localization(__file__, 2716, 8), '*=', fontsize_84629, subscript_call_result_84633)
        # Getting the type of 'over_state' (line 2716)
        over_state_84635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2716, 8), 'over_state')
        # Setting the type of the member 'fontsize' of a type (line 2716)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2716, 8), over_state_84635, 'fontsize', result_imul_84634)
        
        
        # Assigning a Call to a Name (line 2717):
        
        # Assigning a Call to a Name (line 2717):
        
        # Call to Accent(...): (line 2717)
        # Processing the call arguments (line 2717)
        
        # Obtaining the type of the subscript
        int_84637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2717, 32), 'int')
        # Getting the type of 'over_desc' (line 2717)
        over_desc_84638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2717, 22), 'over_desc', False)
        # Obtaining the member '__getitem__' of a type (line 2717)
        getitem___84639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2717, 22), over_desc_84638, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2717)
        subscript_call_result_84640 = invoke(stypy.reporting.localization.Localization(__file__, 2717, 22), getitem___84639, int_84637)
        
        # Getting the type of 'over_state' (line 2717)
        over_state_84641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2717, 36), 'over_state', False)
        # Processing the call keyword arguments (line 2717)
        kwargs_84642 = {}
        # Getting the type of 'Accent' (line 2717)
        Accent_84636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2717, 15), 'Accent', False)
        # Calling Accent(args, kwargs) (line 2717)
        Accent_call_result_84643 = invoke(stypy.reporting.localization.Localization(__file__, 2717, 15), Accent_84636, *[subscript_call_result_84640, over_state_84641], **kwargs_84642)
        
        # Assigning a type to the variable 'over' (line 2717)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2717, 8), 'over', Accent_call_result_84643)
        
        # Assigning a Call to a Name (line 2719):
        
        # Assigning a Call to a Name (line 2719):
        
        # Call to copy(...): (line 2719)
        # Processing the call keyword arguments (line 2719)
        kwargs_84646 = {}
        # Getting the type of 'state' (line 2719)
        state_84644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2719, 22), 'state', False)
        # Obtaining the member 'copy' of a type (line 2719)
        copy_84645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2719, 22), state_84644, 'copy')
        # Calling copy(args, kwargs) (line 2719)
        copy_call_result_84647 = invoke(stypy.reporting.localization.Localization(__file__, 2719, 22), copy_84645, *[], **kwargs_84646)
        
        # Assigning a type to the variable 'under_state' (line 2719)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2719, 8), 'under_state', copy_call_result_84647)
        
        
        
        # Obtaining the type of the subscript
        int_84648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2720, 22), 'int')
        # Getting the type of 'under_desc' (line 2720)
        under_desc_84649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2720, 11), 'under_desc')
        # Obtaining the member '__getitem__' of a type (line 2720)
        getitem___84650 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2720, 11), under_desc_84649, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2720)
        subscript_call_result_84651 = invoke(stypy.reporting.localization.Localization(__file__, 2720, 11), getitem___84650, int_84648)
        
        # Getting the type of 'None' (line 2720)
        None_84652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2720, 32), 'None')
        # Applying the binary operator 'isnot' (line 2720)
        result_is_not_84653 = python_operator(stypy.reporting.localization.Localization(__file__, 2720, 11), 'isnot', subscript_call_result_84651, None_84652)
        
        # Testing the type of an if condition (line 2720)
        if_condition_84654 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2720, 8), result_is_not_84653)
        # Assigning a type to the variable 'if_condition_84654' (line 2720)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2720, 8), 'if_condition_84654', if_condition_84654)
        # SSA begins for if statement (line 2720)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Attribute (line 2721):
        
        # Assigning a Subscript to a Attribute (line 2721):
        
        # Obtaining the type of the subscript
        int_84655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2721, 42), 'int')
        # Getting the type of 'under_desc' (line 2721)
        under_desc_84656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2721, 31), 'under_desc')
        # Obtaining the member '__getitem__' of a type (line 2721)
        getitem___84657 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2721, 31), under_desc_84656, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2721)
        subscript_call_result_84658 = invoke(stypy.reporting.localization.Localization(__file__, 2721, 31), getitem___84657, int_84655)
        
        # Getting the type of 'under_state' (line 2721)
        under_state_84659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2721, 12), 'under_state')
        # Setting the type of the member 'font' of a type (line 2721)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2721, 12), under_state_84659, 'font', subscript_call_result_84658)
        # SSA join for if statement (line 2720)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'under_state' (line 2722)
        under_state_84660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2722, 8), 'under_state')
        # Obtaining the member 'fontsize' of a type (line 2722)
        fontsize_84661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2722, 8), under_state_84660, 'fontsize')
        
        # Obtaining the type of the subscript
        int_84662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2722, 43), 'int')
        # Getting the type of 'under_desc' (line 2722)
        under_desc_84663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2722, 32), 'under_desc')
        # Obtaining the member '__getitem__' of a type (line 2722)
        getitem___84664 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2722, 32), under_desc_84663, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2722)
        subscript_call_result_84665 = invoke(stypy.reporting.localization.Localization(__file__, 2722, 32), getitem___84664, int_84662)
        
        # Applying the binary operator '*=' (line 2722)
        result_imul_84666 = python_operator(stypy.reporting.localization.Localization(__file__, 2722, 8), '*=', fontsize_84661, subscript_call_result_84665)
        # Getting the type of 'under_state' (line 2722)
        under_state_84667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2722, 8), 'under_state')
        # Setting the type of the member 'fontsize' of a type (line 2722)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2722, 8), under_state_84667, 'fontsize', result_imul_84666)
        
        
        # Assigning a Call to a Name (line 2723):
        
        # Assigning a Call to a Name (line 2723):
        
        # Call to Char(...): (line 2723)
        # Processing the call arguments (line 2723)
        
        # Obtaining the type of the subscript
        int_84669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2723, 32), 'int')
        # Getting the type of 'under_desc' (line 2723)
        under_desc_84670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2723, 21), 'under_desc', False)
        # Obtaining the member '__getitem__' of a type (line 2723)
        getitem___84671 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2723, 21), under_desc_84670, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2723)
        subscript_call_result_84672 = invoke(stypy.reporting.localization.Localization(__file__, 2723, 21), getitem___84671, int_84669)
        
        # Getting the type of 'under_state' (line 2723)
        under_state_84673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2723, 36), 'under_state', False)
        # Processing the call keyword arguments (line 2723)
        kwargs_84674 = {}
        # Getting the type of 'Char' (line 2723)
        Char_84668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2723, 16), 'Char', False)
        # Calling Char(args, kwargs) (line 2723)
        Char_call_result_84675 = invoke(stypy.reporting.localization.Localization(__file__, 2723, 16), Char_84668, *[subscript_call_result_84672, under_state_84673], **kwargs_84674)
        
        # Assigning a type to the variable 'under' (line 2723)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2723, 8), 'under', Char_call_result_84675)
        
        # Assigning a Call to a Name (line 2725):
        
        # Assigning a Call to a Name (line 2725):
        
        # Call to max(...): (line 2725)
        # Processing the call arguments (line 2725)
        # Getting the type of 'over' (line 2725)
        over_84677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2725, 20), 'over', False)
        # Obtaining the member 'width' of a type (line 2725)
        width_84678 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2725, 20), over_84677, 'width')
        # Getting the type of 'under' (line 2725)
        under_84679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2725, 32), 'under', False)
        # Obtaining the member 'width' of a type (line 2725)
        width_84680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2725, 32), under_84679, 'width')
        # Processing the call keyword arguments (line 2725)
        kwargs_84681 = {}
        # Getting the type of 'max' (line 2725)
        max_84676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2725, 16), 'max', False)
        # Calling max(args, kwargs) (line 2725)
        max_call_result_84682 = invoke(stypy.reporting.localization.Localization(__file__, 2725, 16), max_84676, *[width_84678, width_84680], **kwargs_84681)
        
        # Assigning a type to the variable 'width' (line 2725)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2725, 8), 'width', max_call_result_84682)
        
        # Assigning a Call to a Name (line 2727):
        
        # Assigning a Call to a Name (line 2727):
        
        # Call to HCentered(...): (line 2727)
        # Processing the call arguments (line 2727)
        
        # Obtaining an instance of the builtin type 'list' (line 2727)
        list_84684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2727, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2727)
        # Adding element type (line 2727)
        # Getting the type of 'over' (line 2727)
        over_84685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2727, 35), 'over', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2727, 34), list_84684, over_84685)
        
        # Processing the call keyword arguments (line 2727)
        kwargs_84686 = {}
        # Getting the type of 'HCentered' (line 2727)
        HCentered_84683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2727, 24), 'HCentered', False)
        # Calling HCentered(args, kwargs) (line 2727)
        HCentered_call_result_84687 = invoke(stypy.reporting.localization.Localization(__file__, 2727, 24), HCentered_84683, *[list_84684], **kwargs_84686)
        
        # Assigning a type to the variable 'over_centered' (line 2727)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2727, 8), 'over_centered', HCentered_call_result_84687)
        
        # Call to hpack(...): (line 2728)
        # Processing the call arguments (line 2728)
        # Getting the type of 'width' (line 2728)
        width_84690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2728, 28), 'width', False)
        unicode_84691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2728, 35), 'unicode', u'exactly')
        # Processing the call keyword arguments (line 2728)
        kwargs_84692 = {}
        # Getting the type of 'over_centered' (line 2728)
        over_centered_84688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2728, 8), 'over_centered', False)
        # Obtaining the member 'hpack' of a type (line 2728)
        hpack_84689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2728, 8), over_centered_84688, 'hpack')
        # Calling hpack(args, kwargs) (line 2728)
        hpack_call_result_84693 = invoke(stypy.reporting.localization.Localization(__file__, 2728, 8), hpack_84689, *[width_84690, unicode_84691], **kwargs_84692)
        
        
        # Assigning a Call to a Name (line 2730):
        
        # Assigning a Call to a Name (line 2730):
        
        # Call to HCentered(...): (line 2730)
        # Processing the call arguments (line 2730)
        
        # Obtaining an instance of the builtin type 'list' (line 2730)
        list_84695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2730, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2730)
        # Adding element type (line 2730)
        # Getting the type of 'under' (line 2730)
        under_84696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2730, 36), 'under', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2730, 35), list_84695, under_84696)
        
        # Processing the call keyword arguments (line 2730)
        kwargs_84697 = {}
        # Getting the type of 'HCentered' (line 2730)
        HCentered_84694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2730, 25), 'HCentered', False)
        # Calling HCentered(args, kwargs) (line 2730)
        HCentered_call_result_84698 = invoke(stypy.reporting.localization.Localization(__file__, 2730, 25), HCentered_84694, *[list_84695], **kwargs_84697)
        
        # Assigning a type to the variable 'under_centered' (line 2730)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2730, 8), 'under_centered', HCentered_call_result_84698)
        
        # Call to hpack(...): (line 2731)
        # Processing the call arguments (line 2731)
        # Getting the type of 'width' (line 2731)
        width_84701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2731, 29), 'width', False)
        unicode_84702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2731, 36), 'unicode', u'exactly')
        # Processing the call keyword arguments (line 2731)
        kwargs_84703 = {}
        # Getting the type of 'under_centered' (line 2731)
        under_centered_84699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2731, 8), 'under_centered', False)
        # Obtaining the member 'hpack' of a type (line 2731)
        hpack_84700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2731, 8), under_centered_84699, 'hpack')
        # Calling hpack(args, kwargs) (line 2731)
        hpack_call_result_84704 = invoke(stypy.reporting.localization.Localization(__file__, 2731, 8), hpack_84700, *[width_84701, unicode_84702], **kwargs_84703)
        
        
        # Call to Vlist(...): (line 2733)
        # Processing the call arguments (line 2733)
        
        # Obtaining an instance of the builtin type 'list' (line 2733)
        list_84706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2733, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2733)
        # Adding element type (line 2733)
        # Getting the type of 'over_centered' (line 2734)
        over_centered_84707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2734, 16), 'over_centered', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2733, 21), list_84706, over_centered_84707)
        # Adding element type (line 2733)
        
        # Call to Vbox(...): (line 2735)
        # Processing the call arguments (line 2735)
        float_84709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2735, 21), 'float')
        # Getting the type of 'thickness' (line 2735)
        thickness_84710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2735, 25), 'thickness', False)
        # Getting the type of 'space' (line 2735)
        space_84711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2735, 37), 'space', False)
        # Applying the binary operator '*' (line 2735)
        result_mul_84712 = python_operator(stypy.reporting.localization.Localization(__file__, 2735, 25), '*', thickness_84710, space_84711)
        
        # Processing the call keyword arguments (line 2735)
        kwargs_84713 = {}
        # Getting the type of 'Vbox' (line 2735)
        Vbox_84708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2735, 16), 'Vbox', False)
        # Calling Vbox(args, kwargs) (line 2735)
        Vbox_call_result_84714 = invoke(stypy.reporting.localization.Localization(__file__, 2735, 16), Vbox_84708, *[float_84709, result_mul_84712], **kwargs_84713)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2733, 21), list_84706, Vbox_call_result_84714)
        # Adding element type (line 2733)
        # Getting the type of 'under_centered' (line 2736)
        under_centered_84715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2736, 16), 'under_centered', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2733, 21), list_84706, under_centered_84715)
        
        # Processing the call keyword arguments (line 2733)
        kwargs_84716 = {}
        # Getting the type of 'Vlist' (line 2733)
        Vlist_84705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2733, 15), 'Vlist', False)
        # Calling Vlist(args, kwargs) (line 2733)
        Vlist_call_result_84717 = invoke(stypy.reporting.localization.Localization(__file__, 2733, 15), Vlist_84705, *[list_84706], **kwargs_84716)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2733)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2733, 8), 'stypy_return_type', Vlist_call_result_84717)
        
        # ################# End of 'c_over_c(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'c_over_c' in the type store
        # Getting the type of 'stypy_return_type' (line 2702)
        stypy_return_type_84718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2702, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84718)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'c_over_c'
        return stypy_return_type_84718

    
    # Assigning a Dict to a Name (line 2739):
    
    # Assigning a Call to a Name (line 2760):
    
    # Assigning a Call to a Name (line 2763):

    @norecursion
    def accent(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'accent'
        module_type_store = module_type_store.open_function_context('accent', 2767, 4, False)
        # Assigning a type to the variable 'self' (line 2768)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2768, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.accent.__dict__.__setitem__('stypy_localization', localization)
        Parser.accent.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.accent.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.accent.__dict__.__setitem__('stypy_function_name', 'Parser.accent')
        Parser.accent.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.accent.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.accent.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.accent.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.accent.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.accent.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.accent.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.accent', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'accent', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'accent(...)' code ##################

        # Evaluating assert statement condition
        
        
        # Call to len(...): (line 2768)
        # Processing the call arguments (line 2768)
        # Getting the type of 'toks' (line 2768)
        toks_84720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2768, 19), 'toks', False)
        # Processing the call keyword arguments (line 2768)
        kwargs_84721 = {}
        # Getting the type of 'len' (line 2768)
        len_84719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2768, 15), 'len', False)
        # Calling len(args, kwargs) (line 2768)
        len_call_result_84722 = invoke(stypy.reporting.localization.Localization(__file__, 2768, 15), len_84719, *[toks_84720], **kwargs_84721)
        
        int_84723 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2768, 26), 'int')
        # Applying the binary operator '==' (line 2768)
        result_eq_84724 = python_operator(stypy.reporting.localization.Localization(__file__, 2768, 15), '==', len_call_result_84722, int_84723)
        
        
        # Assigning a Call to a Name (line 2769):
        
        # Assigning a Call to a Name (line 2769):
        
        # Call to get_state(...): (line 2769)
        # Processing the call keyword arguments (line 2769)
        kwargs_84727 = {}
        # Getting the type of 'self' (line 2769)
        self_84725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2769, 16), 'self', False)
        # Obtaining the member 'get_state' of a type (line 2769)
        get_state_84726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2769, 16), self_84725, 'get_state')
        # Calling get_state(args, kwargs) (line 2769)
        get_state_call_result_84728 = invoke(stypy.reporting.localization.Localization(__file__, 2769, 16), get_state_84726, *[], **kwargs_84727)
        
        # Assigning a type to the variable 'state' (line 2769)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2769, 8), 'state', get_state_call_result_84728)
        
        # Assigning a Call to a Name (line 2770):
        
        # Assigning a Call to a Name (line 2770):
        
        # Call to get_underline_thickness(...): (line 2770)
        # Processing the call arguments (line 2770)
        # Getting the type of 'state' (line 2771)
        state_84732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2771, 12), 'state', False)
        # Obtaining the member 'font' of a type (line 2771)
        font_84733 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2771, 12), state_84732, 'font')
        # Getting the type of 'state' (line 2771)
        state_84734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2771, 24), 'state', False)
        # Obtaining the member 'fontsize' of a type (line 2771)
        fontsize_84735 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2771, 24), state_84734, 'fontsize')
        # Getting the type of 'state' (line 2771)
        state_84736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2771, 40), 'state', False)
        # Obtaining the member 'dpi' of a type (line 2771)
        dpi_84737 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2771, 40), state_84736, 'dpi')
        # Processing the call keyword arguments (line 2770)
        kwargs_84738 = {}
        # Getting the type of 'state' (line 2770)
        state_84729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2770, 20), 'state', False)
        # Obtaining the member 'font_output' of a type (line 2770)
        font_output_84730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2770, 20), state_84729, 'font_output')
        # Obtaining the member 'get_underline_thickness' of a type (line 2770)
        get_underline_thickness_84731 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2770, 20), font_output_84730, 'get_underline_thickness')
        # Calling get_underline_thickness(args, kwargs) (line 2770)
        get_underline_thickness_call_result_84739 = invoke(stypy.reporting.localization.Localization(__file__, 2770, 20), get_underline_thickness_84731, *[font_84733, fontsize_84735, dpi_84737], **kwargs_84738)
        
        # Assigning a type to the variable 'thickness' (line 2770)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2770, 8), 'thickness', get_underline_thickness_call_result_84739)
        
        
        
        # Call to len(...): (line 2772)
        # Processing the call arguments (line 2772)
        
        # Obtaining the type of the subscript
        int_84741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2772, 20), 'int')
        # Getting the type of 'toks' (line 2772)
        toks_84742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2772, 15), 'toks', False)
        # Obtaining the member '__getitem__' of a type (line 2772)
        getitem___84743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2772, 15), toks_84742, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2772)
        subscript_call_result_84744 = invoke(stypy.reporting.localization.Localization(__file__, 2772, 15), getitem___84743, int_84741)
        
        # Processing the call keyword arguments (line 2772)
        kwargs_84745 = {}
        # Getting the type of 'len' (line 2772)
        len_84740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2772, 11), 'len', False)
        # Calling len(args, kwargs) (line 2772)
        len_call_result_84746 = invoke(stypy.reporting.localization.Localization(__file__, 2772, 11), len_84740, *[subscript_call_result_84744], **kwargs_84745)
        
        int_84747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2772, 27), 'int')
        # Applying the binary operator '!=' (line 2772)
        result_ne_84748 = python_operator(stypy.reporting.localization.Localization(__file__, 2772, 11), '!=', len_call_result_84746, int_84747)
        
        # Testing the type of an if condition (line 2772)
        if_condition_84749 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2772, 8), result_ne_84748)
        # Assigning a type to the variable 'if_condition_84749' (line 2772)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2772, 8), 'if_condition_84749', if_condition_84749)
        # SSA begins for if statement (line 2772)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ParseFatalException(...): (line 2773)
        # Processing the call arguments (line 2773)
        unicode_84751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2773, 38), 'unicode', u'Error parsing accent')
        # Processing the call keyword arguments (line 2773)
        kwargs_84752 = {}
        # Getting the type of 'ParseFatalException' (line 2773)
        ParseFatalException_84750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2773, 18), 'ParseFatalException', False)
        # Calling ParseFatalException(args, kwargs) (line 2773)
        ParseFatalException_call_result_84753 = invoke(stypy.reporting.localization.Localization(__file__, 2773, 18), ParseFatalException_84750, *[unicode_84751], **kwargs_84752)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2773, 12), ParseFatalException_call_result_84753, 'raise parameter', BaseException)
        # SSA join for if statement (line 2772)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Subscript to a Tuple (line 2774):
        
        # Assigning a Subscript to a Name (line 2774):
        
        # Obtaining the type of the subscript
        int_84754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2774, 8), 'int')
        
        # Obtaining the type of the subscript
        int_84755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2774, 27), 'int')
        # Getting the type of 'toks' (line 2774)
        toks_84756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2774, 22), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2774)
        getitem___84757 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2774, 22), toks_84756, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2774)
        subscript_call_result_84758 = invoke(stypy.reporting.localization.Localization(__file__, 2774, 22), getitem___84757, int_84755)
        
        # Obtaining the member '__getitem__' of a type (line 2774)
        getitem___84759 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2774, 8), subscript_call_result_84758, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2774)
        subscript_call_result_84760 = invoke(stypy.reporting.localization.Localization(__file__, 2774, 8), getitem___84759, int_84754)
        
        # Assigning a type to the variable 'tuple_var_assignment_77305' (line 2774)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2774, 8), 'tuple_var_assignment_77305', subscript_call_result_84760)
        
        # Assigning a Subscript to a Name (line 2774):
        
        # Obtaining the type of the subscript
        int_84761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2774, 8), 'int')
        
        # Obtaining the type of the subscript
        int_84762 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2774, 27), 'int')
        # Getting the type of 'toks' (line 2774)
        toks_84763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2774, 22), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2774)
        getitem___84764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2774, 22), toks_84763, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2774)
        subscript_call_result_84765 = invoke(stypy.reporting.localization.Localization(__file__, 2774, 22), getitem___84764, int_84762)
        
        # Obtaining the member '__getitem__' of a type (line 2774)
        getitem___84766 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2774, 8), subscript_call_result_84765, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2774)
        subscript_call_result_84767 = invoke(stypy.reporting.localization.Localization(__file__, 2774, 8), getitem___84766, int_84761)
        
        # Assigning a type to the variable 'tuple_var_assignment_77306' (line 2774)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2774, 8), 'tuple_var_assignment_77306', subscript_call_result_84767)
        
        # Assigning a Name to a Name (line 2774):
        # Getting the type of 'tuple_var_assignment_77305' (line 2774)
        tuple_var_assignment_77305_84768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2774, 8), 'tuple_var_assignment_77305')
        # Assigning a type to the variable 'accent' (line 2774)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2774, 8), 'accent', tuple_var_assignment_77305_84768)
        
        # Assigning a Name to a Name (line 2774):
        # Getting the type of 'tuple_var_assignment_77306' (line 2774)
        tuple_var_assignment_77306_84769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2774, 8), 'tuple_var_assignment_77306')
        # Assigning a type to the variable 'sym' (line 2774)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2774, 16), 'sym', tuple_var_assignment_77306_84769)
        
        
        # Getting the type of 'accent' (line 2775)
        accent_84770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2775, 11), 'accent')
        # Getting the type of 'self' (line 2775)
        self_84771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2775, 21), 'self')
        # Obtaining the member '_wide_accents' of a type (line 2775)
        _wide_accents_84772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2775, 21), self_84771, '_wide_accents')
        # Applying the binary operator 'in' (line 2775)
        result_contains_84773 = python_operator(stypy.reporting.localization.Localization(__file__, 2775, 11), 'in', accent_84770, _wide_accents_84772)
        
        # Testing the type of an if condition (line 2775)
        if_condition_84774 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2775, 8), result_contains_84773)
        # Assigning a type to the variable 'if_condition_84774' (line 2775)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2775, 8), 'if_condition_84774', if_condition_84774)
        # SSA begins for if statement (line 2775)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 2776):
        
        # Assigning a Call to a Name (line 2776):
        
        # Call to AutoWidthChar(...): (line 2776)
        # Processing the call arguments (line 2776)
        unicode_84776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2777, 16), 'unicode', u'\\')
        # Getting the type of 'accent' (line 2777)
        accent_84777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2777, 23), 'accent', False)
        # Applying the binary operator '+' (line 2777)
        result_add_84778 = python_operator(stypy.reporting.localization.Localization(__file__, 2777, 16), '+', unicode_84776, accent_84777)
        
        # Getting the type of 'sym' (line 2777)
        sym_84779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2777, 31), 'sym', False)
        # Obtaining the member 'width' of a type (line 2777)
        width_84780 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2777, 31), sym_84779, 'width')
        # Getting the type of 'state' (line 2777)
        state_84781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2777, 42), 'state', False)
        # Processing the call keyword arguments (line 2776)
        # Getting the type of 'Accent' (line 2777)
        Accent_84782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2777, 60), 'Accent', False)
        keyword_84783 = Accent_84782
        kwargs_84784 = {'char_class': keyword_84783}
        # Getting the type of 'AutoWidthChar' (line 2776)
        AutoWidthChar_84775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2776, 25), 'AutoWidthChar', False)
        # Calling AutoWidthChar(args, kwargs) (line 2776)
        AutoWidthChar_call_result_84785 = invoke(stypy.reporting.localization.Localization(__file__, 2776, 25), AutoWidthChar_84775, *[result_add_84778, width_84780, state_84781], **kwargs_84784)
        
        # Assigning a type to the variable 'accent_box' (line 2776)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2776, 12), 'accent_box', AutoWidthChar_call_result_84785)
        # SSA branch for the else part of an if statement (line 2775)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 2779):
        
        # Assigning a Call to a Name (line 2779):
        
        # Call to Accent(...): (line 2779)
        # Processing the call arguments (line 2779)
        
        # Obtaining the type of the subscript
        # Getting the type of 'accent' (line 2779)
        accent_84787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2779, 49), 'accent', False)
        # Getting the type of 'self' (line 2779)
        self_84788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2779, 32), 'self', False)
        # Obtaining the member '_accent_map' of a type (line 2779)
        _accent_map_84789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2779, 32), self_84788, '_accent_map')
        # Obtaining the member '__getitem__' of a type (line 2779)
        getitem___84790 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2779, 32), _accent_map_84789, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2779)
        subscript_call_result_84791 = invoke(stypy.reporting.localization.Localization(__file__, 2779, 32), getitem___84790, accent_84787)
        
        # Getting the type of 'state' (line 2779)
        state_84792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2779, 58), 'state', False)
        # Processing the call keyword arguments (line 2779)
        kwargs_84793 = {}
        # Getting the type of 'Accent' (line 2779)
        Accent_84786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2779, 25), 'Accent', False)
        # Calling Accent(args, kwargs) (line 2779)
        Accent_call_result_84794 = invoke(stypy.reporting.localization.Localization(__file__, 2779, 25), Accent_84786, *[subscript_call_result_84791, state_84792], **kwargs_84793)
        
        # Assigning a type to the variable 'accent_box' (line 2779)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2779, 12), 'accent_box', Accent_call_result_84794)
        # SSA join for if statement (line 2775)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'accent' (line 2780)
        accent_84795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2780, 11), 'accent')
        unicode_84796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2780, 21), 'unicode', u'mathring')
        # Applying the binary operator '==' (line 2780)
        result_eq_84797 = python_operator(stypy.reporting.localization.Localization(__file__, 2780, 11), '==', accent_84795, unicode_84796)
        
        # Testing the type of an if condition (line 2780)
        if_condition_84798 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2780, 8), result_eq_84797)
        # Assigning a type to the variable 'if_condition_84798' (line 2780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2780, 8), 'if_condition_84798', if_condition_84798)
        # SSA begins for if statement (line 2780)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to shrink(...): (line 2781)
        # Processing the call keyword arguments (line 2781)
        kwargs_84801 = {}
        # Getting the type of 'accent_box' (line 2781)
        accent_box_84799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2781, 12), 'accent_box', False)
        # Obtaining the member 'shrink' of a type (line 2781)
        shrink_84800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2781, 12), accent_box_84799, 'shrink')
        # Calling shrink(args, kwargs) (line 2781)
        shrink_call_result_84802 = invoke(stypy.reporting.localization.Localization(__file__, 2781, 12), shrink_84800, *[], **kwargs_84801)
        
        
        # Call to shrink(...): (line 2782)
        # Processing the call keyword arguments (line 2782)
        kwargs_84805 = {}
        # Getting the type of 'accent_box' (line 2782)
        accent_box_84803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2782, 12), 'accent_box', False)
        # Obtaining the member 'shrink' of a type (line 2782)
        shrink_84804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2782, 12), accent_box_84803, 'shrink')
        # Calling shrink(args, kwargs) (line 2782)
        shrink_call_result_84806 = invoke(stypy.reporting.localization.Localization(__file__, 2782, 12), shrink_84804, *[], **kwargs_84805)
        
        # SSA join for if statement (line 2780)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 2783):
        
        # Assigning a Call to a Name (line 2783):
        
        # Call to HCentered(...): (line 2783)
        # Processing the call arguments (line 2783)
        
        # Obtaining an instance of the builtin type 'list' (line 2783)
        list_84808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2783, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2783)
        # Adding element type (line 2783)
        
        # Call to Hbox(...): (line 2783)
        # Processing the call arguments (line 2783)
        # Getting the type of 'sym' (line 2783)
        sym_84810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2783, 35), 'sym', False)
        # Obtaining the member 'width' of a type (line 2783)
        width_84811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2783, 35), sym_84810, 'width')
        float_84812 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2783, 47), 'float')
        # Applying the binary operator 'div' (line 2783)
        result_div_84813 = python_operator(stypy.reporting.localization.Localization(__file__, 2783, 35), 'div', width_84811, float_84812)
        
        # Processing the call keyword arguments (line 2783)
        kwargs_84814 = {}
        # Getting the type of 'Hbox' (line 2783)
        Hbox_84809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2783, 30), 'Hbox', False)
        # Calling Hbox(args, kwargs) (line 2783)
        Hbox_call_result_84815 = invoke(stypy.reporting.localization.Localization(__file__, 2783, 30), Hbox_84809, *[result_div_84813], **kwargs_84814)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2783, 29), list_84808, Hbox_call_result_84815)
        # Adding element type (line 2783)
        # Getting the type of 'accent_box' (line 2783)
        accent_box_84816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2783, 53), 'accent_box', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2783, 29), list_84808, accent_box_84816)
        
        # Processing the call keyword arguments (line 2783)
        kwargs_84817 = {}
        # Getting the type of 'HCentered' (line 2783)
        HCentered_84807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2783, 19), 'HCentered', False)
        # Calling HCentered(args, kwargs) (line 2783)
        HCentered_call_result_84818 = invoke(stypy.reporting.localization.Localization(__file__, 2783, 19), HCentered_84807, *[list_84808], **kwargs_84817)
        
        # Assigning a type to the variable 'centered' (line 2783)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2783, 8), 'centered', HCentered_call_result_84818)
        
        # Call to hpack(...): (line 2784)
        # Processing the call arguments (line 2784)
        # Getting the type of 'sym' (line 2784)
        sym_84821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2784, 23), 'sym', False)
        # Obtaining the member 'width' of a type (line 2784)
        width_84822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2784, 23), sym_84821, 'width')
        unicode_84823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2784, 34), 'unicode', u'exactly')
        # Processing the call keyword arguments (line 2784)
        kwargs_84824 = {}
        # Getting the type of 'centered' (line 2784)
        centered_84819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2784, 8), 'centered', False)
        # Obtaining the member 'hpack' of a type (line 2784)
        hpack_84820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2784, 8), centered_84819, 'hpack')
        # Calling hpack(args, kwargs) (line 2784)
        hpack_call_result_84825 = invoke(stypy.reporting.localization.Localization(__file__, 2784, 8), hpack_84820, *[width_84822, unicode_84823], **kwargs_84824)
        
        
        # Call to Vlist(...): (line 2785)
        # Processing the call arguments (line 2785)
        
        # Obtaining an instance of the builtin type 'list' (line 2785)
        list_84827 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2785, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2785)
        # Adding element type (line 2785)
        # Getting the type of 'centered' (line 2786)
        centered_84828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2786, 16), 'centered', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2785, 21), list_84827, centered_84828)
        # Adding element type (line 2785)
        
        # Call to Vbox(...): (line 2787)
        # Processing the call arguments (line 2787)
        float_84830 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2787, 21), 'float')
        # Getting the type of 'thickness' (line 2787)
        thickness_84831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2787, 25), 'thickness', False)
        float_84832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2787, 37), 'float')
        # Applying the binary operator '*' (line 2787)
        result_mul_84833 = python_operator(stypy.reporting.localization.Localization(__file__, 2787, 25), '*', thickness_84831, float_84832)
        
        # Processing the call keyword arguments (line 2787)
        kwargs_84834 = {}
        # Getting the type of 'Vbox' (line 2787)
        Vbox_84829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2787, 16), 'Vbox', False)
        # Calling Vbox(args, kwargs) (line 2787)
        Vbox_call_result_84835 = invoke(stypy.reporting.localization.Localization(__file__, 2787, 16), Vbox_84829, *[float_84830, result_mul_84833], **kwargs_84834)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2785, 21), list_84827, Vbox_call_result_84835)
        # Adding element type (line 2785)
        
        # Call to Hlist(...): (line 2788)
        # Processing the call arguments (line 2788)
        
        # Obtaining an instance of the builtin type 'list' (line 2788)
        list_84837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2788, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2788)
        # Adding element type (line 2788)
        # Getting the type of 'sym' (line 2788)
        sym_84838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2788, 23), 'sym', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2788, 22), list_84837, sym_84838)
        
        # Processing the call keyword arguments (line 2788)
        kwargs_84839 = {}
        # Getting the type of 'Hlist' (line 2788)
        Hlist_84836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2788, 16), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 2788)
        Hlist_call_result_84840 = invoke(stypy.reporting.localization.Localization(__file__, 2788, 16), Hlist_84836, *[list_84837], **kwargs_84839)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2785, 21), list_84827, Hlist_call_result_84840)
        
        # Processing the call keyword arguments (line 2785)
        kwargs_84841 = {}
        # Getting the type of 'Vlist' (line 2785)
        Vlist_84826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2785, 15), 'Vlist', False)
        # Calling Vlist(args, kwargs) (line 2785)
        Vlist_call_result_84842 = invoke(stypy.reporting.localization.Localization(__file__, 2785, 15), Vlist_84826, *[list_84827], **kwargs_84841)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2785)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2785, 8), 'stypy_return_type', Vlist_call_result_84842)
        
        # ################# End of 'accent(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'accent' in the type store
        # Getting the type of 'stypy_return_type' (line 2767)
        stypy_return_type_84843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2767, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84843)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'accent'
        return stypy_return_type_84843


    @norecursion
    def function(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'function'
        module_type_store = module_type_store.open_function_context('function', 2791, 4, False)
        # Assigning a type to the variable 'self' (line 2792)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2792, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.function.__dict__.__setitem__('stypy_localization', localization)
        Parser.function.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.function.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.function.__dict__.__setitem__('stypy_function_name', 'Parser.function')
        Parser.function.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.function.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.function.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.function.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.function.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.function.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.function.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.function', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'function', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'function(...)' code ##################

        
        # Call to push_state(...): (line 2793)
        # Processing the call keyword arguments (line 2793)
        kwargs_84846 = {}
        # Getting the type of 'self' (line 2793)
        self_84844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2793, 8), 'self', False)
        # Obtaining the member 'push_state' of a type (line 2793)
        push_state_84845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2793, 8), self_84844, 'push_state')
        # Calling push_state(args, kwargs) (line 2793)
        push_state_call_result_84847 = invoke(stypy.reporting.localization.Localization(__file__, 2793, 8), push_state_84845, *[], **kwargs_84846)
        
        
        # Assigning a Call to a Name (line 2794):
        
        # Assigning a Call to a Name (line 2794):
        
        # Call to get_state(...): (line 2794)
        # Processing the call keyword arguments (line 2794)
        kwargs_84850 = {}
        # Getting the type of 'self' (line 2794)
        self_84848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2794, 16), 'self', False)
        # Obtaining the member 'get_state' of a type (line 2794)
        get_state_84849 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2794, 16), self_84848, 'get_state')
        # Calling get_state(args, kwargs) (line 2794)
        get_state_call_result_84851 = invoke(stypy.reporting.localization.Localization(__file__, 2794, 16), get_state_84849, *[], **kwargs_84850)
        
        # Assigning a type to the variable 'state' (line 2794)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2794, 8), 'state', get_state_call_result_84851)
        
        # Assigning a Str to a Attribute (line 2795):
        
        # Assigning a Str to a Attribute (line 2795):
        unicode_84852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2795, 21), 'unicode', u'rm')
        # Getting the type of 'state' (line 2795)
        state_84853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2795, 8), 'state')
        # Setting the type of the member 'font' of a type (line 2795)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2795, 8), state_84853, 'font', unicode_84852)
        
        # Assigning a Call to a Name (line 2796):
        
        # Assigning a Call to a Name (line 2796):
        
        # Call to Hlist(...): (line 2796)
        # Processing the call arguments (line 2796)
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Obtaining the type of the subscript
        int_84860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2796, 52), 'int')
        # Getting the type of 'toks' (line 2796)
        toks_84861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2796, 47), 'toks', False)
        # Obtaining the member '__getitem__' of a type (line 2796)
        getitem___84862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2796, 47), toks_84861, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2796)
        subscript_call_result_84863 = invoke(stypy.reporting.localization.Localization(__file__, 2796, 47), getitem___84862, int_84860)
        
        comprehension_84864 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2796, 23), subscript_call_result_84863)
        # Assigning a type to the variable 'c' (line 2796)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2796, 23), 'c', comprehension_84864)
        
        # Call to Char(...): (line 2796)
        # Processing the call arguments (line 2796)
        # Getting the type of 'c' (line 2796)
        c_84856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2796, 28), 'c', False)
        # Getting the type of 'state' (line 2796)
        state_84857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2796, 31), 'state', False)
        # Processing the call keyword arguments (line 2796)
        kwargs_84858 = {}
        # Getting the type of 'Char' (line 2796)
        Char_84855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2796, 23), 'Char', False)
        # Calling Char(args, kwargs) (line 2796)
        Char_call_result_84859 = invoke(stypy.reporting.localization.Localization(__file__, 2796, 23), Char_84855, *[c_84856, state_84857], **kwargs_84858)
        
        list_84865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2796, 23), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2796, 23), list_84865, Char_call_result_84859)
        # Processing the call keyword arguments (line 2796)
        kwargs_84866 = {}
        # Getting the type of 'Hlist' (line 2796)
        Hlist_84854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2796, 16), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 2796)
        Hlist_call_result_84867 = invoke(stypy.reporting.localization.Localization(__file__, 2796, 16), Hlist_84854, *[list_84865], **kwargs_84866)
        
        # Assigning a type to the variable 'hlist' (line 2796)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2796, 8), 'hlist', Hlist_call_result_84867)
        
        # Call to pop_state(...): (line 2797)
        # Processing the call keyword arguments (line 2797)
        kwargs_84870 = {}
        # Getting the type of 'self' (line 2797)
        self_84868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2797, 8), 'self', False)
        # Obtaining the member 'pop_state' of a type (line 2797)
        pop_state_84869 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2797, 8), self_84868, 'pop_state')
        # Calling pop_state(args, kwargs) (line 2797)
        pop_state_call_result_84871 = invoke(stypy.reporting.localization.Localization(__file__, 2797, 8), pop_state_84869, *[], **kwargs_84870)
        
        
        # Assigning a Subscript to a Attribute (line 2798):
        
        # Assigning a Subscript to a Attribute (line 2798):
        
        # Obtaining the type of the subscript
        int_84872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2798, 35), 'int')
        # Getting the type of 'toks' (line 2798)
        toks_84873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2798, 30), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2798)
        getitem___84874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2798, 30), toks_84873, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2798)
        subscript_call_result_84875 = invoke(stypy.reporting.localization.Localization(__file__, 2798, 30), getitem___84874, int_84872)
        
        # Getting the type of 'hlist' (line 2798)
        hlist_84876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2798, 8), 'hlist')
        # Setting the type of the member 'function_name' of a type (line 2798)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2798, 8), hlist_84876, 'function_name', subscript_call_result_84875)
        # Getting the type of 'hlist' (line 2799)
        hlist_84877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2799, 15), 'hlist')
        # Assigning a type to the variable 'stypy_return_type' (line 2799)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2799, 8), 'stypy_return_type', hlist_84877)
        
        # ################# End of 'function(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'function' in the type store
        # Getting the type of 'stypy_return_type' (line 2791)
        stypy_return_type_84878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2791, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84878)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'function'
        return stypy_return_type_84878


    @norecursion
    def operatorname(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'operatorname'
        module_type_store = module_type_store.open_function_context('operatorname', 2801, 4, False)
        # Assigning a type to the variable 'self' (line 2802)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2802, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.operatorname.__dict__.__setitem__('stypy_localization', localization)
        Parser.operatorname.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.operatorname.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.operatorname.__dict__.__setitem__('stypy_function_name', 'Parser.operatorname')
        Parser.operatorname.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.operatorname.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.operatorname.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.operatorname.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.operatorname.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.operatorname.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.operatorname.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.operatorname', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'operatorname', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'operatorname(...)' code ##################

        
        # Call to push_state(...): (line 2802)
        # Processing the call keyword arguments (line 2802)
        kwargs_84881 = {}
        # Getting the type of 'self' (line 2802)
        self_84879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2802, 8), 'self', False)
        # Obtaining the member 'push_state' of a type (line 2802)
        push_state_84880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2802, 8), self_84879, 'push_state')
        # Calling push_state(args, kwargs) (line 2802)
        push_state_call_result_84882 = invoke(stypy.reporting.localization.Localization(__file__, 2802, 8), push_state_84880, *[], **kwargs_84881)
        
        
        # Assigning a Call to a Name (line 2803):
        
        # Assigning a Call to a Name (line 2803):
        
        # Call to get_state(...): (line 2803)
        # Processing the call keyword arguments (line 2803)
        kwargs_84885 = {}
        # Getting the type of 'self' (line 2803)
        self_84883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2803, 16), 'self', False)
        # Obtaining the member 'get_state' of a type (line 2803)
        get_state_84884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2803, 16), self_84883, 'get_state')
        # Calling get_state(args, kwargs) (line 2803)
        get_state_call_result_84886 = invoke(stypy.reporting.localization.Localization(__file__, 2803, 16), get_state_84884, *[], **kwargs_84885)
        
        # Assigning a type to the variable 'state' (line 2803)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2803, 8), 'state', get_state_call_result_84886)
        
        # Assigning a Str to a Attribute (line 2804):
        
        # Assigning a Str to a Attribute (line 2804):
        unicode_84887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2804, 21), 'unicode', u'rm')
        # Getting the type of 'state' (line 2804)
        state_84888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2804, 8), 'state')
        # Setting the type of the member 'font' of a type (line 2804)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2804, 8), state_84888, 'font', unicode_84887)
        
        
        # Obtaining the type of the subscript
        int_84889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2806, 22), 'int')
        # Getting the type of 'toks' (line 2806)
        toks_84890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2806, 17), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2806)
        getitem___84891 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2806, 17), toks_84890, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2806)
        subscript_call_result_84892 = invoke(stypy.reporting.localization.Localization(__file__, 2806, 17), getitem___84891, int_84889)
        
        # Testing the type of a for loop iterable (line 2806)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2806, 8), subscript_call_result_84892)
        # Getting the type of the for loop variable (line 2806)
        for_loop_var_84893 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2806, 8), subscript_call_result_84892)
        # Assigning a type to the variable 'c' (line 2806)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2806, 8), 'c', for_loop_var_84893)
        # SSA begins for a for statement (line 2806)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Call to isinstance(...): (line 2807)
        # Processing the call arguments (line 2807)
        # Getting the type of 'c' (line 2807)
        c_84895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2807, 26), 'c', False)
        # Getting the type of 'Char' (line 2807)
        Char_84896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2807, 29), 'Char', False)
        # Processing the call keyword arguments (line 2807)
        kwargs_84897 = {}
        # Getting the type of 'isinstance' (line 2807)
        isinstance_84894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2807, 15), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2807)
        isinstance_call_result_84898 = invoke(stypy.reporting.localization.Localization(__file__, 2807, 15), isinstance_84894, *[c_84895, Char_84896], **kwargs_84897)
        
        # Testing the type of an if condition (line 2807)
        if_condition_84899 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2807, 12), isinstance_call_result_84898)
        # Assigning a type to the variable 'if_condition_84899' (line 2807)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2807, 12), 'if_condition_84899', if_condition_84899)
        # SSA begins for if statement (line 2807)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Str to a Attribute (line 2808):
        
        # Assigning a Str to a Attribute (line 2808):
        unicode_84900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2808, 25), 'unicode', u'rm')
        # Getting the type of 'c' (line 2808)
        c_84901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2808, 16), 'c')
        # Setting the type of the member 'font' of a type (line 2808)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2808, 16), c_84901, 'font', unicode_84900)
        
        # Call to _update_metrics(...): (line 2809)
        # Processing the call keyword arguments (line 2809)
        kwargs_84904 = {}
        # Getting the type of 'c' (line 2809)
        c_84902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2809, 16), 'c', False)
        # Obtaining the member '_update_metrics' of a type (line 2809)
        _update_metrics_84903 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2809, 16), c_84902, '_update_metrics')
        # Calling _update_metrics(args, kwargs) (line 2809)
        _update_metrics_call_result_84905 = invoke(stypy.reporting.localization.Localization(__file__, 2809, 16), _update_metrics_84903, *[], **kwargs_84904)
        
        # SSA join for if statement (line 2807)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to pop_state(...): (line 2810)
        # Processing the call keyword arguments (line 2810)
        kwargs_84908 = {}
        # Getting the type of 'self' (line 2810)
        self_84906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2810, 8), 'self', False)
        # Obtaining the member 'pop_state' of a type (line 2810)
        pop_state_84907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2810, 8), self_84906, 'pop_state')
        # Calling pop_state(args, kwargs) (line 2810)
        pop_state_call_result_84909 = invoke(stypy.reporting.localization.Localization(__file__, 2810, 8), pop_state_84907, *[], **kwargs_84908)
        
        
        # Call to Hlist(...): (line 2811)
        # Processing the call arguments (line 2811)
        
        # Obtaining the type of the subscript
        int_84911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2811, 26), 'int')
        # Getting the type of 'toks' (line 2811)
        toks_84912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2811, 21), 'toks', False)
        # Obtaining the member '__getitem__' of a type (line 2811)
        getitem___84913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2811, 21), toks_84912, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2811)
        subscript_call_result_84914 = invoke(stypy.reporting.localization.Localization(__file__, 2811, 21), getitem___84913, int_84911)
        
        # Processing the call keyword arguments (line 2811)
        kwargs_84915 = {}
        # Getting the type of 'Hlist' (line 2811)
        Hlist_84910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2811, 15), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 2811)
        Hlist_call_result_84916 = invoke(stypy.reporting.localization.Localization(__file__, 2811, 15), Hlist_84910, *[subscript_call_result_84914], **kwargs_84915)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2811)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2811, 8), 'stypy_return_type', Hlist_call_result_84916)
        
        # ################# End of 'operatorname(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'operatorname' in the type store
        # Getting the type of 'stypy_return_type' (line 2801)
        stypy_return_type_84917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2801, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84917)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'operatorname'
        return stypy_return_type_84917


    @norecursion
    def start_group(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'start_group'
        module_type_store = module_type_store.open_function_context('start_group', 2813, 4, False)
        # Assigning a type to the variable 'self' (line 2814)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2814, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.start_group.__dict__.__setitem__('stypy_localization', localization)
        Parser.start_group.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.start_group.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.start_group.__dict__.__setitem__('stypy_function_name', 'Parser.start_group')
        Parser.start_group.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.start_group.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.start_group.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.start_group.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.start_group.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.start_group.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.start_group.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.start_group', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'start_group', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'start_group(...)' code ##################

        
        # Call to push_state(...): (line 2814)
        # Processing the call keyword arguments (line 2814)
        kwargs_84920 = {}
        # Getting the type of 'self' (line 2814)
        self_84918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2814, 8), 'self', False)
        # Obtaining the member 'push_state' of a type (line 2814)
        push_state_84919 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2814, 8), self_84918, 'push_state')
        # Calling push_state(args, kwargs) (line 2814)
        push_state_call_result_84921 = invoke(stypy.reporting.localization.Localization(__file__, 2814, 8), push_state_84919, *[], **kwargs_84920)
        
        
        
        # Call to len(...): (line 2816)
        # Processing the call arguments (line 2816)
        # Getting the type of 'toks' (line 2816)
        toks_84923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2816, 15), 'toks', False)
        # Processing the call keyword arguments (line 2816)
        kwargs_84924 = {}
        # Getting the type of 'len' (line 2816)
        len_84922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2816, 11), 'len', False)
        # Calling len(args, kwargs) (line 2816)
        len_call_result_84925 = invoke(stypy.reporting.localization.Localization(__file__, 2816, 11), len_84922, *[toks_84923], **kwargs_84924)
        
        # Testing the type of an if condition (line 2816)
        if_condition_84926 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2816, 8), len_call_result_84925)
        # Assigning a type to the variable 'if_condition_84926' (line 2816)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2816, 8), 'if_condition_84926', if_condition_84926)
        # SSA begins for if statement (line 2816)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Attribute (line 2817):
        
        # Assigning a Subscript to a Attribute (line 2817):
        
        # Obtaining the type of the subscript
        int_84927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2817, 44), 'int')
        slice_84928 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2817, 36), int_84927, None, None)
        
        # Obtaining the type of the subscript
        int_84929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2817, 41), 'int')
        # Getting the type of 'toks' (line 2817)
        toks_84930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2817, 36), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2817)
        getitem___84931 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2817, 36), toks_84930, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2817)
        subscript_call_result_84932 = invoke(stypy.reporting.localization.Localization(__file__, 2817, 36), getitem___84931, int_84929)
        
        # Obtaining the member '__getitem__' of a type (line 2817)
        getitem___84933 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2817, 36), subscript_call_result_84932, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2817)
        subscript_call_result_84934 = invoke(stypy.reporting.localization.Localization(__file__, 2817, 36), getitem___84933, slice_84928)
        
        
        # Call to get_state(...): (line 2817)
        # Processing the call keyword arguments (line 2817)
        kwargs_84937 = {}
        # Getting the type of 'self' (line 2817)
        self_84935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2817, 12), 'self', False)
        # Obtaining the member 'get_state' of a type (line 2817)
        get_state_84936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2817, 12), self_84935, 'get_state')
        # Calling get_state(args, kwargs) (line 2817)
        get_state_call_result_84938 = invoke(stypy.reporting.localization.Localization(__file__, 2817, 12), get_state_84936, *[], **kwargs_84937)
        
        # Setting the type of the member 'font' of a type (line 2817)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2817, 12), get_state_call_result_84938, 'font', subscript_call_result_84934)
        # SSA join for if statement (line 2816)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining an instance of the builtin type 'list' (line 2818)
        list_84939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2818, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2818)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2818)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2818, 8), 'stypy_return_type', list_84939)
        
        # ################# End of 'start_group(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'start_group' in the type store
        # Getting the type of 'stypy_return_type' (line 2813)
        stypy_return_type_84940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2813, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84940)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'start_group'
        return stypy_return_type_84940


    @norecursion
    def group(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'group'
        module_type_store = module_type_store.open_function_context('group', 2820, 4, False)
        # Assigning a type to the variable 'self' (line 2821)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2821, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.group.__dict__.__setitem__('stypy_localization', localization)
        Parser.group.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.group.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.group.__dict__.__setitem__('stypy_function_name', 'Parser.group')
        Parser.group.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.group.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.group.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.group.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.group.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.group.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.group.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.group', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'group', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'group(...)' code ##################

        
        # Assigning a Call to a Name (line 2821):
        
        # Assigning a Call to a Name (line 2821):
        
        # Call to Hlist(...): (line 2821)
        # Processing the call arguments (line 2821)
        
        # Obtaining the type of the subscript
        int_84942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2821, 25), 'int')
        # Getting the type of 'toks' (line 2821)
        toks_84943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2821, 20), 'toks', False)
        # Obtaining the member '__getitem__' of a type (line 2821)
        getitem___84944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2821, 20), toks_84943, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2821)
        subscript_call_result_84945 = invoke(stypy.reporting.localization.Localization(__file__, 2821, 20), getitem___84944, int_84942)
        
        # Processing the call keyword arguments (line 2821)
        kwargs_84946 = {}
        # Getting the type of 'Hlist' (line 2821)
        Hlist_84941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2821, 14), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 2821)
        Hlist_call_result_84947 = invoke(stypy.reporting.localization.Localization(__file__, 2821, 14), Hlist_84941, *[subscript_call_result_84945], **kwargs_84946)
        
        # Assigning a type to the variable 'grp' (line 2821)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2821, 8), 'grp', Hlist_call_result_84947)
        
        # Obtaining an instance of the builtin type 'list' (line 2822)
        list_84948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2822, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2822)
        # Adding element type (line 2822)
        # Getting the type of 'grp' (line 2822)
        grp_84949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2822, 16), 'grp')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2822, 15), list_84948, grp_84949)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2822)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2822, 8), 'stypy_return_type', list_84948)
        
        # ################# End of 'group(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'group' in the type store
        # Getting the type of 'stypy_return_type' (line 2820)
        stypy_return_type_84950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2820, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84950)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'group'
        return stypy_return_type_84950

    
    # Multiple assignment of 2 elements.

    @norecursion
    def end_group(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'end_group'
        module_type_store = module_type_store.open_function_context('end_group', 2825, 4, False)
        # Assigning a type to the variable 'self' (line 2826)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2826, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.end_group.__dict__.__setitem__('stypy_localization', localization)
        Parser.end_group.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.end_group.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.end_group.__dict__.__setitem__('stypy_function_name', 'Parser.end_group')
        Parser.end_group.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.end_group.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.end_group.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.end_group.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.end_group.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.end_group.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.end_group.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.end_group', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'end_group', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'end_group(...)' code ##################

        
        # Call to pop_state(...): (line 2826)
        # Processing the call keyword arguments (line 2826)
        kwargs_84953 = {}
        # Getting the type of 'self' (line 2826)
        self_84951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2826, 8), 'self', False)
        # Obtaining the member 'pop_state' of a type (line 2826)
        pop_state_84952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2826, 8), self_84951, 'pop_state')
        # Calling pop_state(args, kwargs) (line 2826)
        pop_state_call_result_84954 = invoke(stypy.reporting.localization.Localization(__file__, 2826, 8), pop_state_84952, *[], **kwargs_84953)
        
        
        # Obtaining an instance of the builtin type 'list' (line 2827)
        list_84955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2827, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2827)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2827)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2827, 8), 'stypy_return_type', list_84955)
        
        # ################# End of 'end_group(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'end_group' in the type store
        # Getting the type of 'stypy_return_type' (line 2825)
        stypy_return_type_84956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2825, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84956)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'end_group'
        return stypy_return_type_84956


    @norecursion
    def font(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'font'
        module_type_store = module_type_store.open_function_context('font', 2829, 4, False)
        # Assigning a type to the variable 'self' (line 2830)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2830, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.font.__dict__.__setitem__('stypy_localization', localization)
        Parser.font.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.font.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.font.__dict__.__setitem__('stypy_function_name', 'Parser.font')
        Parser.font.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.font.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.font.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.font.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.font.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.font.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.font.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.font', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'font', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'font(...)' code ##################

        # Evaluating assert statement condition
        
        
        # Call to len(...): (line 2830)
        # Processing the call arguments (line 2830)
        # Getting the type of 'toks' (line 2830)
        toks_84958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2830, 19), 'toks', False)
        # Processing the call keyword arguments (line 2830)
        kwargs_84959 = {}
        # Getting the type of 'len' (line 2830)
        len_84957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2830, 15), 'len', False)
        # Calling len(args, kwargs) (line 2830)
        len_call_result_84960 = invoke(stypy.reporting.localization.Localization(__file__, 2830, 15), len_84957, *[toks_84958], **kwargs_84959)
        
        int_84961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2830, 26), 'int')
        # Applying the binary operator '==' (line 2830)
        result_eq_84962 = python_operator(stypy.reporting.localization.Localization(__file__, 2830, 15), '==', len_call_result_84960, int_84961)
        
        
        # Assigning a Subscript to a Name (line 2831):
        
        # Assigning a Subscript to a Name (line 2831):
        
        # Obtaining the type of the subscript
        int_84963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2831, 20), 'int')
        # Getting the type of 'toks' (line 2831)
        toks_84964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2831, 15), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2831)
        getitem___84965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2831, 15), toks_84964, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2831)
        subscript_call_result_84966 = invoke(stypy.reporting.localization.Localization(__file__, 2831, 15), getitem___84965, int_84963)
        
        # Assigning a type to the variable 'name' (line 2831)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2831, 8), 'name', subscript_call_result_84966)
        
        # Assigning a Name to a Attribute (line 2832):
        
        # Assigning a Name to a Attribute (line 2832):
        # Getting the type of 'name' (line 2832)
        name_84967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2832, 32), 'name')
        
        # Call to get_state(...): (line 2832)
        # Processing the call keyword arguments (line 2832)
        kwargs_84970 = {}
        # Getting the type of 'self' (line 2832)
        self_84968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2832, 8), 'self', False)
        # Obtaining the member 'get_state' of a type (line 2832)
        get_state_84969 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2832, 8), self_84968, 'get_state')
        # Calling get_state(args, kwargs) (line 2832)
        get_state_call_result_84971 = invoke(stypy.reporting.localization.Localization(__file__, 2832, 8), get_state_84969, *[], **kwargs_84970)
        
        # Setting the type of the member 'font' of a type (line 2832)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2832, 8), get_state_call_result_84971, 'font', name_84967)
        
        # Obtaining an instance of the builtin type 'list' (line 2833)
        list_84972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2833, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2833)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2833)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2833, 8), 'stypy_return_type', list_84972)
        
        # ################# End of 'font(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'font' in the type store
        # Getting the type of 'stypy_return_type' (line 2829)
        stypy_return_type_84973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2829, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_84973)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'font'
        return stypy_return_type_84973


    @norecursion
    def is_overunder(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'is_overunder'
        module_type_store = module_type_store.open_function_context('is_overunder', 2835, 4, False)
        # Assigning a type to the variable 'self' (line 2836)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2836, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.is_overunder.__dict__.__setitem__('stypy_localization', localization)
        Parser.is_overunder.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.is_overunder.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.is_overunder.__dict__.__setitem__('stypy_function_name', 'Parser.is_overunder')
        Parser.is_overunder.__dict__.__setitem__('stypy_param_names_list', ['nucleus'])
        Parser.is_overunder.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.is_overunder.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.is_overunder.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.is_overunder.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.is_overunder.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.is_overunder.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.is_overunder', ['nucleus'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'is_overunder', localization, ['nucleus'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'is_overunder(...)' code ##################

        
        
        # Call to isinstance(...): (line 2836)
        # Processing the call arguments (line 2836)
        # Getting the type of 'nucleus' (line 2836)
        nucleus_84975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2836, 22), 'nucleus', False)
        # Getting the type of 'Char' (line 2836)
        Char_84976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2836, 31), 'Char', False)
        # Processing the call keyword arguments (line 2836)
        kwargs_84977 = {}
        # Getting the type of 'isinstance' (line 2836)
        isinstance_84974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2836, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2836)
        isinstance_call_result_84978 = invoke(stypy.reporting.localization.Localization(__file__, 2836, 11), isinstance_84974, *[nucleus_84975, Char_84976], **kwargs_84977)
        
        # Testing the type of an if condition (line 2836)
        if_condition_84979 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2836, 8), isinstance_call_result_84978)
        # Assigning a type to the variable 'if_condition_84979' (line 2836)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2836, 8), 'if_condition_84979', if_condition_84979)
        # SSA begins for if statement (line 2836)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'nucleus' (line 2837)
        nucleus_84980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2837, 19), 'nucleus')
        # Obtaining the member 'c' of a type (line 2837)
        c_84981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2837, 19), nucleus_84980, 'c')
        # Getting the type of 'self' (line 2837)
        self_84982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2837, 32), 'self')
        # Obtaining the member '_overunder_symbols' of a type (line 2837)
        _overunder_symbols_84983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2837, 32), self_84982, '_overunder_symbols')
        # Applying the binary operator 'in' (line 2837)
        result_contains_84984 = python_operator(stypy.reporting.localization.Localization(__file__, 2837, 19), 'in', c_84981, _overunder_symbols_84983)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2837)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2837, 12), 'stypy_return_type', result_contains_84984)
        # SSA branch for the else part of an if statement (line 2836)
        module_type_store.open_ssa_branch('else')
        
        
        # Evaluating a boolean operation
        
        # Call to isinstance(...): (line 2838)
        # Processing the call arguments (line 2838)
        # Getting the type of 'nucleus' (line 2838)
        nucleus_84986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2838, 24), 'nucleus', False)
        # Getting the type of 'Hlist' (line 2838)
        Hlist_84987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2838, 33), 'Hlist', False)
        # Processing the call keyword arguments (line 2838)
        kwargs_84988 = {}
        # Getting the type of 'isinstance' (line 2838)
        isinstance_84985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2838, 13), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2838)
        isinstance_call_result_84989 = invoke(stypy.reporting.localization.Localization(__file__, 2838, 13), isinstance_84985, *[nucleus_84986, Hlist_84987], **kwargs_84988)
        
        
        # Call to hasattr(...): (line 2838)
        # Processing the call arguments (line 2838)
        # Getting the type of 'nucleus' (line 2838)
        nucleus_84991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2838, 52), 'nucleus', False)
        unicode_84992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2838, 61), 'unicode', u'function_name')
        # Processing the call keyword arguments (line 2838)
        kwargs_84993 = {}
        # Getting the type of 'hasattr' (line 2838)
        hasattr_84990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2838, 44), 'hasattr', False)
        # Calling hasattr(args, kwargs) (line 2838)
        hasattr_call_result_84994 = invoke(stypy.reporting.localization.Localization(__file__, 2838, 44), hasattr_84990, *[nucleus_84991, unicode_84992], **kwargs_84993)
        
        # Applying the binary operator 'and' (line 2838)
        result_and_keyword_84995 = python_operator(stypy.reporting.localization.Localization(__file__, 2838, 13), 'and', isinstance_call_result_84989, hasattr_call_result_84994)
        
        # Testing the type of an if condition (line 2838)
        if_condition_84996 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2838, 13), result_and_keyword_84995)
        # Assigning a type to the variable 'if_condition_84996' (line 2838)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2838, 13), 'if_condition_84996', if_condition_84996)
        # SSA begins for if statement (line 2838)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'nucleus' (line 2839)
        nucleus_84997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2839, 19), 'nucleus')
        # Obtaining the member 'function_name' of a type (line 2839)
        function_name_84998 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2839, 19), nucleus_84997, 'function_name')
        # Getting the type of 'self' (line 2839)
        self_84999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2839, 44), 'self')
        # Obtaining the member '_overunder_functions' of a type (line 2839)
        _overunder_functions_85000 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2839, 44), self_84999, '_overunder_functions')
        # Applying the binary operator 'in' (line 2839)
        result_contains_85001 = python_operator(stypy.reporting.localization.Localization(__file__, 2839, 19), 'in', function_name_84998, _overunder_functions_85000)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2839)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2839, 12), 'stypy_return_type', result_contains_85001)
        # SSA join for if statement (line 2838)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2836)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'False' (line 2840)
        False_85002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2840, 15), 'False')
        # Assigning a type to the variable 'stypy_return_type' (line 2840)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2840, 8), 'stypy_return_type', False_85002)
        
        # ################# End of 'is_overunder(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'is_overunder' in the type store
        # Getting the type of 'stypy_return_type' (line 2835)
        stypy_return_type_85003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2835, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_85003)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'is_overunder'
        return stypy_return_type_85003


    @norecursion
    def is_dropsub(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'is_dropsub'
        module_type_store = module_type_store.open_function_context('is_dropsub', 2842, 4, False)
        # Assigning a type to the variable 'self' (line 2843)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2843, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.is_dropsub.__dict__.__setitem__('stypy_localization', localization)
        Parser.is_dropsub.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.is_dropsub.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.is_dropsub.__dict__.__setitem__('stypy_function_name', 'Parser.is_dropsub')
        Parser.is_dropsub.__dict__.__setitem__('stypy_param_names_list', ['nucleus'])
        Parser.is_dropsub.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.is_dropsub.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.is_dropsub.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.is_dropsub.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.is_dropsub.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.is_dropsub.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.is_dropsub', ['nucleus'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'is_dropsub', localization, ['nucleus'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'is_dropsub(...)' code ##################

        
        
        # Call to isinstance(...): (line 2843)
        # Processing the call arguments (line 2843)
        # Getting the type of 'nucleus' (line 2843)
        nucleus_85005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2843, 22), 'nucleus', False)
        # Getting the type of 'Char' (line 2843)
        Char_85006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2843, 31), 'Char', False)
        # Processing the call keyword arguments (line 2843)
        kwargs_85007 = {}
        # Getting the type of 'isinstance' (line 2843)
        isinstance_85004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2843, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2843)
        isinstance_call_result_85008 = invoke(stypy.reporting.localization.Localization(__file__, 2843, 11), isinstance_85004, *[nucleus_85005, Char_85006], **kwargs_85007)
        
        # Testing the type of an if condition (line 2843)
        if_condition_85009 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2843, 8), isinstance_call_result_85008)
        # Assigning a type to the variable 'if_condition_85009' (line 2843)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2843, 8), 'if_condition_85009', if_condition_85009)
        # SSA begins for if statement (line 2843)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'nucleus' (line 2844)
        nucleus_85010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2844, 19), 'nucleus')
        # Obtaining the member 'c' of a type (line 2844)
        c_85011 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2844, 19), nucleus_85010, 'c')
        # Getting the type of 'self' (line 2844)
        self_85012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2844, 32), 'self')
        # Obtaining the member '_dropsub_symbols' of a type (line 2844)
        _dropsub_symbols_85013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2844, 32), self_85012, '_dropsub_symbols')
        # Applying the binary operator 'in' (line 2844)
        result_contains_85014 = python_operator(stypy.reporting.localization.Localization(__file__, 2844, 19), 'in', c_85011, _dropsub_symbols_85013)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2844)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2844, 12), 'stypy_return_type', result_contains_85014)
        # SSA join for if statement (line 2843)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'False' (line 2845)
        False_85015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2845, 15), 'False')
        # Assigning a type to the variable 'stypy_return_type' (line 2845)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2845, 8), 'stypy_return_type', False_85015)
        
        # ################# End of 'is_dropsub(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'is_dropsub' in the type store
        # Getting the type of 'stypy_return_type' (line 2842)
        stypy_return_type_85016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2842, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_85016)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'is_dropsub'
        return stypy_return_type_85016


    @norecursion
    def is_slanted(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'is_slanted'
        module_type_store = module_type_store.open_function_context('is_slanted', 2847, 4, False)
        # Assigning a type to the variable 'self' (line 2848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2848, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.is_slanted.__dict__.__setitem__('stypy_localization', localization)
        Parser.is_slanted.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.is_slanted.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.is_slanted.__dict__.__setitem__('stypy_function_name', 'Parser.is_slanted')
        Parser.is_slanted.__dict__.__setitem__('stypy_param_names_list', ['nucleus'])
        Parser.is_slanted.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.is_slanted.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.is_slanted.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.is_slanted.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.is_slanted.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.is_slanted.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.is_slanted', ['nucleus'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'is_slanted', localization, ['nucleus'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'is_slanted(...)' code ##################

        
        
        # Call to isinstance(...): (line 2848)
        # Processing the call arguments (line 2848)
        # Getting the type of 'nucleus' (line 2848)
        nucleus_85018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2848, 22), 'nucleus', False)
        # Getting the type of 'Char' (line 2848)
        Char_85019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2848, 31), 'Char', False)
        # Processing the call keyword arguments (line 2848)
        kwargs_85020 = {}
        # Getting the type of 'isinstance' (line 2848)
        isinstance_85017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2848, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2848)
        isinstance_call_result_85021 = invoke(stypy.reporting.localization.Localization(__file__, 2848, 11), isinstance_85017, *[nucleus_85018, Char_85019], **kwargs_85020)
        
        # Testing the type of an if condition (line 2848)
        if_condition_85022 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2848, 8), isinstance_call_result_85021)
        # Assigning a type to the variable 'if_condition_85022' (line 2848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2848, 8), 'if_condition_85022', if_condition_85022)
        # SSA begins for if statement (line 2848)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to is_slanted(...): (line 2849)
        # Processing the call keyword arguments (line 2849)
        kwargs_85025 = {}
        # Getting the type of 'nucleus' (line 2849)
        nucleus_85023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2849, 19), 'nucleus', False)
        # Obtaining the member 'is_slanted' of a type (line 2849)
        is_slanted_85024 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2849, 19), nucleus_85023, 'is_slanted')
        # Calling is_slanted(args, kwargs) (line 2849)
        is_slanted_call_result_85026 = invoke(stypy.reporting.localization.Localization(__file__, 2849, 19), is_slanted_85024, *[], **kwargs_85025)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2849)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2849, 12), 'stypy_return_type', is_slanted_call_result_85026)
        # SSA join for if statement (line 2848)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'False' (line 2850)
        False_85027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2850, 15), 'False')
        # Assigning a type to the variable 'stypy_return_type' (line 2850)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2850, 8), 'stypy_return_type', False_85027)
        
        # ################# End of 'is_slanted(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'is_slanted' in the type store
        # Getting the type of 'stypy_return_type' (line 2847)
        stypy_return_type_85028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2847, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_85028)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'is_slanted'
        return stypy_return_type_85028


    @norecursion
    def is_between_brackets(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'is_between_brackets'
        module_type_store = module_type_store.open_function_context('is_between_brackets', 2852, 4, False)
        # Assigning a type to the variable 'self' (line 2853)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2853, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.is_between_brackets.__dict__.__setitem__('stypy_localization', localization)
        Parser.is_between_brackets.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.is_between_brackets.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.is_between_brackets.__dict__.__setitem__('stypy_function_name', 'Parser.is_between_brackets')
        Parser.is_between_brackets.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc'])
        Parser.is_between_brackets.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.is_between_brackets.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.is_between_brackets.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.is_between_brackets.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.is_between_brackets.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.is_between_brackets.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.is_between_brackets', ['s', 'loc'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'is_between_brackets', localization, ['s', 'loc'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'is_between_brackets(...)' code ##################

        # Getting the type of 'False' (line 2853)
        False_85029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2853, 15), 'False')
        # Assigning a type to the variable 'stypy_return_type' (line 2853)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2853, 8), 'stypy_return_type', False_85029)
        
        # ################# End of 'is_between_brackets(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'is_between_brackets' in the type store
        # Getting the type of 'stypy_return_type' (line 2852)
        stypy_return_type_85030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2852, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_85030)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'is_between_brackets'
        return stypy_return_type_85030


    @norecursion
    def subsuper(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'subsuper'
        module_type_store = module_type_store.open_function_context('subsuper', 2855, 4, False)
        # Assigning a type to the variable 'self' (line 2856)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2856, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.subsuper.__dict__.__setitem__('stypy_localization', localization)
        Parser.subsuper.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.subsuper.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.subsuper.__dict__.__setitem__('stypy_function_name', 'Parser.subsuper')
        Parser.subsuper.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.subsuper.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.subsuper.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.subsuper.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.subsuper.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.subsuper.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.subsuper.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.subsuper', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'subsuper', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'subsuper(...)' code ##################

        # Evaluating assert statement condition
        
        
        # Call to len(...): (line 2856)
        # Processing the call arguments (line 2856)
        # Getting the type of 'toks' (line 2856)
        toks_85032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2856, 19), 'toks', False)
        # Processing the call keyword arguments (line 2856)
        kwargs_85033 = {}
        # Getting the type of 'len' (line 2856)
        len_85031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2856, 15), 'len', False)
        # Calling len(args, kwargs) (line 2856)
        len_call_result_85034 = invoke(stypy.reporting.localization.Localization(__file__, 2856, 15), len_85031, *[toks_85032], **kwargs_85033)
        
        int_85035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2856, 26), 'int')
        # Applying the binary operator '==' (line 2856)
        result_eq_85036 = python_operator(stypy.reporting.localization.Localization(__file__, 2856, 15), '==', len_call_result_85034, int_85035)
        
        
        # Assigning a Name to a Name (line 2858):
        
        # Assigning a Name to a Name (line 2858):
        # Getting the type of 'None' (line 2858)
        None_85037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2858, 18), 'None')
        # Assigning a type to the variable 'nucleus' (line 2858)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2858, 8), 'nucleus', None_85037)
        
        # Assigning a Name to a Name (line 2859):
        
        # Assigning a Name to a Name (line 2859):
        # Getting the type of 'None' (line 2859)
        None_85038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2859, 14), 'None')
        # Assigning a type to the variable 'sub' (line 2859)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2859, 8), 'sub', None_85038)
        
        # Assigning a Name to a Name (line 2860):
        
        # Assigning a Name to a Name (line 2860):
        # Getting the type of 'None' (line 2860)
        None_85039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2860, 16), 'None')
        # Assigning a type to the variable 'super' (line 2860)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2860, 8), 'super', None_85039)
        
        # Assigning a Num to a Name (line 2864):
        
        # Assigning a Num to a Name (line 2864):
        int_85040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2864, 23), 'int')
        # Assigning a type to the variable 'napostrophes' (line 2864)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2864, 8), 'napostrophes', int_85040)
        
        # Assigning a List to a Name (line 2865):
        
        # Assigning a List to a Name (line 2865):
        
        # Obtaining an instance of the builtin type 'list' (line 2865)
        list_85041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2865, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2865)
        
        # Assigning a type to the variable 'new_toks' (line 2865)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2865, 8), 'new_toks', list_85041)
        
        
        # Obtaining the type of the subscript
        int_85042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2866, 24), 'int')
        # Getting the type of 'toks' (line 2866)
        toks_85043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2866, 19), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2866)
        getitem___85044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2866, 19), toks_85043, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2866)
        subscript_call_result_85045 = invoke(stypy.reporting.localization.Localization(__file__, 2866, 19), getitem___85044, int_85042)
        
        # Testing the type of a for loop iterable (line 2866)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2866, 8), subscript_call_result_85045)
        # Getting the type of the for loop variable (line 2866)
        for_loop_var_85046 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2866, 8), subscript_call_result_85045)
        # Assigning a type to the variable 'tok' (line 2866)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2866, 8), 'tok', for_loop_var_85046)
        # SSA begins for a for statement (line 2866)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Evaluating a boolean operation
        
        # Call to isinstance(...): (line 2867)
        # Processing the call arguments (line 2867)
        # Getting the type of 'tok' (line 2867)
        tok_85048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2867, 26), 'tok', False)
        # Getting the type of 'six' (line 2867)
        six_85049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2867, 31), 'six', False)
        # Obtaining the member 'string_types' of a type (line 2867)
        string_types_85050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2867, 31), six_85049, 'string_types')
        # Processing the call keyword arguments (line 2867)
        kwargs_85051 = {}
        # Getting the type of 'isinstance' (line 2867)
        isinstance_85047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2867, 15), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2867)
        isinstance_call_result_85052 = invoke(stypy.reporting.localization.Localization(__file__, 2867, 15), isinstance_85047, *[tok_85048, string_types_85050], **kwargs_85051)
        
        
        # Getting the type of 'tok' (line 2867)
        tok_85053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2867, 53), 'tok')
        
        # Obtaining an instance of the builtin type 'tuple' (line 2867)
        tuple_85054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2867, 65), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2867)
        # Adding element type (line 2867)
        unicode_85055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2867, 65), 'unicode', u'^')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2867, 65), tuple_85054, unicode_85055)
        # Adding element type (line 2867)
        unicode_85056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2867, 70), 'unicode', u'_')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2867, 65), tuple_85054, unicode_85056)
        
        # Applying the binary operator 'notin' (line 2867)
        result_contains_85057 = python_operator(stypy.reporting.localization.Localization(__file__, 2867, 53), 'notin', tok_85053, tuple_85054)
        
        # Applying the binary operator 'and' (line 2867)
        result_and_keyword_85058 = python_operator(stypy.reporting.localization.Localization(__file__, 2867, 15), 'and', isinstance_call_result_85052, result_contains_85057)
        
        # Testing the type of an if condition (line 2867)
        if_condition_85059 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2867, 12), result_and_keyword_85058)
        # Assigning a type to the variable 'if_condition_85059' (line 2867)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2867, 12), 'if_condition_85059', if_condition_85059)
        # SSA begins for if statement (line 2867)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'napostrophes' (line 2868)
        napostrophes_85060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2868, 16), 'napostrophes')
        
        # Call to len(...): (line 2868)
        # Processing the call arguments (line 2868)
        # Getting the type of 'tok' (line 2868)
        tok_85062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2868, 36), 'tok', False)
        # Processing the call keyword arguments (line 2868)
        kwargs_85063 = {}
        # Getting the type of 'len' (line 2868)
        len_85061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2868, 32), 'len', False)
        # Calling len(args, kwargs) (line 2868)
        len_call_result_85064 = invoke(stypy.reporting.localization.Localization(__file__, 2868, 32), len_85061, *[tok_85062], **kwargs_85063)
        
        # Applying the binary operator '+=' (line 2868)
        result_iadd_85065 = python_operator(stypy.reporting.localization.Localization(__file__, 2868, 16), '+=', napostrophes_85060, len_call_result_85064)
        # Assigning a type to the variable 'napostrophes' (line 2868)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2868, 16), 'napostrophes', result_iadd_85065)
        
        # SSA branch for the else part of an if statement (line 2867)
        module_type_store.open_ssa_branch('else')
        
        
        # Evaluating a boolean operation
        
        # Call to isinstance(...): (line 2869)
        # Processing the call arguments (line 2869)
        # Getting the type of 'tok' (line 2869)
        tok_85067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2869, 28), 'tok', False)
        # Getting the type of 'Char' (line 2869)
        Char_85068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2869, 33), 'Char', False)
        # Processing the call keyword arguments (line 2869)
        kwargs_85069 = {}
        # Getting the type of 'isinstance' (line 2869)
        isinstance_85066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2869, 17), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2869)
        isinstance_call_result_85070 = invoke(stypy.reporting.localization.Localization(__file__, 2869, 17), isinstance_85066, *[tok_85067, Char_85068], **kwargs_85069)
        
        
        # Getting the type of 'tok' (line 2869)
        tok_85071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2869, 43), 'tok')
        # Obtaining the member 'c' of a type (line 2869)
        c_85072 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2869, 43), tok_85071, 'c')
        unicode_85073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2869, 52), 'unicode', u"'")
        # Applying the binary operator '==' (line 2869)
        result_eq_85074 = python_operator(stypy.reporting.localization.Localization(__file__, 2869, 43), '==', c_85072, unicode_85073)
        
        # Applying the binary operator 'and' (line 2869)
        result_and_keyword_85075 = python_operator(stypy.reporting.localization.Localization(__file__, 2869, 17), 'and', isinstance_call_result_85070, result_eq_85074)
        
        # Testing the type of an if condition (line 2869)
        if_condition_85076 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2869, 17), result_and_keyword_85075)
        # Assigning a type to the variable 'if_condition_85076' (line 2869)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2869, 17), 'if_condition_85076', if_condition_85076)
        # SSA begins for if statement (line 2869)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'napostrophes' (line 2870)
        napostrophes_85077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2870, 16), 'napostrophes')
        int_85078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2870, 32), 'int')
        # Applying the binary operator '+=' (line 2870)
        result_iadd_85079 = python_operator(stypy.reporting.localization.Localization(__file__, 2870, 16), '+=', napostrophes_85077, int_85078)
        # Assigning a type to the variable 'napostrophes' (line 2870)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2870, 16), 'napostrophes', result_iadd_85079)
        
        # SSA branch for the else part of an if statement (line 2869)
        module_type_store.open_ssa_branch('else')
        
        # Call to append(...): (line 2872)
        # Processing the call arguments (line 2872)
        # Getting the type of 'tok' (line 2872)
        tok_85082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2872, 32), 'tok', False)
        # Processing the call keyword arguments (line 2872)
        kwargs_85083 = {}
        # Getting the type of 'new_toks' (line 2872)
        new_toks_85080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2872, 16), 'new_toks', False)
        # Obtaining the member 'append' of a type (line 2872)
        append_85081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2872, 16), new_toks_85080, 'append')
        # Calling append(args, kwargs) (line 2872)
        append_call_result_85084 = invoke(stypy.reporting.localization.Localization(__file__, 2872, 16), append_85081, *[tok_85082], **kwargs_85083)
        
        # SSA join for if statement (line 2869)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2867)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Name (line 2873):
        
        # Assigning a Name to a Name (line 2873):
        # Getting the type of 'new_toks' (line 2873)
        new_toks_85085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2873, 15), 'new_toks')
        # Assigning a type to the variable 'toks' (line 2873)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2873, 8), 'toks', new_toks_85085)
        
        
        
        # Call to len(...): (line 2875)
        # Processing the call arguments (line 2875)
        # Getting the type of 'toks' (line 2875)
        toks_85087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2875, 15), 'toks', False)
        # Processing the call keyword arguments (line 2875)
        kwargs_85088 = {}
        # Getting the type of 'len' (line 2875)
        len_85086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2875, 11), 'len', False)
        # Calling len(args, kwargs) (line 2875)
        len_call_result_85089 = invoke(stypy.reporting.localization.Localization(__file__, 2875, 11), len_85086, *[toks_85087], **kwargs_85088)
        
        int_85090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2875, 24), 'int')
        # Applying the binary operator '==' (line 2875)
        result_eq_85091 = python_operator(stypy.reporting.localization.Localization(__file__, 2875, 11), '==', len_call_result_85089, int_85090)
        
        # Testing the type of an if condition (line 2875)
        if_condition_85092 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2875, 8), result_eq_85091)
        # Assigning a type to the variable 'if_condition_85092' (line 2875)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2875, 8), 'if_condition_85092', if_condition_85092)
        # SSA begins for if statement (line 2875)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Evaluating assert statement condition
        # Getting the type of 'napostrophes' (line 2876)
        napostrophes_85093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2876, 19), 'napostrophes')
        
        # Assigning a Call to a Name (line 2877):
        
        # Assigning a Call to a Name (line 2877):
        
        # Call to Hbox(...): (line 2877)
        # Processing the call arguments (line 2877)
        float_85095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2877, 27), 'float')
        # Processing the call keyword arguments (line 2877)
        kwargs_85096 = {}
        # Getting the type of 'Hbox' (line 2877)
        Hbox_85094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2877, 22), 'Hbox', False)
        # Calling Hbox(args, kwargs) (line 2877)
        Hbox_call_result_85097 = invoke(stypy.reporting.localization.Localization(__file__, 2877, 22), Hbox_85094, *[float_85095], **kwargs_85096)
        
        # Assigning a type to the variable 'nucleus' (line 2877)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2877, 12), 'nucleus', Hbox_call_result_85097)
        # SSA branch for the else part of an if statement (line 2875)
        module_type_store.open_ssa_branch('else')
        
        
        
        # Call to len(...): (line 2878)
        # Processing the call arguments (line 2878)
        # Getting the type of 'toks' (line 2878)
        toks_85099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2878, 17), 'toks', False)
        # Processing the call keyword arguments (line 2878)
        kwargs_85100 = {}
        # Getting the type of 'len' (line 2878)
        len_85098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2878, 13), 'len', False)
        # Calling len(args, kwargs) (line 2878)
        len_call_result_85101 = invoke(stypy.reporting.localization.Localization(__file__, 2878, 13), len_85098, *[toks_85099], **kwargs_85100)
        
        int_85102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2878, 26), 'int')
        # Applying the binary operator '==' (line 2878)
        result_eq_85103 = python_operator(stypy.reporting.localization.Localization(__file__, 2878, 13), '==', len_call_result_85101, int_85102)
        
        # Testing the type of an if condition (line 2878)
        if_condition_85104 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2878, 13), result_eq_85103)
        # Assigning a type to the variable 'if_condition_85104' (line 2878)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2878, 13), 'if_condition_85104', if_condition_85104)
        # SSA begins for if statement (line 2878)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'napostrophes' (line 2879)
        napostrophes_85105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2879, 19), 'napostrophes')
        # Applying the 'not' unary operator (line 2879)
        result_not__85106 = python_operator(stypy.reporting.localization.Localization(__file__, 2879, 15), 'not', napostrophes_85105)
        
        # Testing the type of an if condition (line 2879)
        if_condition_85107 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2879, 12), result_not__85106)
        # Assigning a type to the variable 'if_condition_85107' (line 2879)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2879, 12), 'if_condition_85107', if_condition_85107)
        # SSA begins for if statement (line 2879)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        int_85108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2880, 28), 'int')
        # Getting the type of 'toks' (line 2880)
        toks_85109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2880, 23), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2880)
        getitem___85110 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2880, 23), toks_85109, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2880)
        subscript_call_result_85111 = invoke(stypy.reporting.localization.Localization(__file__, 2880, 23), getitem___85110, int_85108)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2880)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2880, 16), 'stypy_return_type', subscript_call_result_85111)
        # SSA branch for the else part of an if statement (line 2879)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Subscript to a Name (line 2882):
        
        # Assigning a Subscript to a Name (line 2882):
        
        # Obtaining the type of the subscript
        int_85112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2882, 31), 'int')
        # Getting the type of 'toks' (line 2882)
        toks_85113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2882, 26), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2882)
        getitem___85114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2882, 26), toks_85113, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2882)
        subscript_call_result_85115 = invoke(stypy.reporting.localization.Localization(__file__, 2882, 26), getitem___85114, int_85112)
        
        # Assigning a type to the variable 'nucleus' (line 2882)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2882, 16), 'nucleus', subscript_call_result_85115)
        # SSA join for if statement (line 2879)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 2878)
        module_type_store.open_ssa_branch('else')
        
        
        
        # Call to len(...): (line 2883)
        # Processing the call arguments (line 2883)
        # Getting the type of 'toks' (line 2883)
        toks_85117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2883, 17), 'toks', False)
        # Processing the call keyword arguments (line 2883)
        kwargs_85118 = {}
        # Getting the type of 'len' (line 2883)
        len_85116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2883, 13), 'len', False)
        # Calling len(args, kwargs) (line 2883)
        len_call_result_85119 = invoke(stypy.reporting.localization.Localization(__file__, 2883, 13), len_85116, *[toks_85117], **kwargs_85118)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 2883)
        tuple_85120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2883, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2883)
        # Adding element type (line 2883)
        int_85121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2883, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2883, 27), tuple_85120, int_85121)
        # Adding element type (line 2883)
        int_85122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2883, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2883, 27), tuple_85120, int_85122)
        
        # Applying the binary operator 'in' (line 2883)
        result_contains_85123 = python_operator(stypy.reporting.localization.Localization(__file__, 2883, 13), 'in', len_call_result_85119, tuple_85120)
        
        # Testing the type of an if condition (line 2883)
        if_condition_85124 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2883, 13), result_contains_85123)
        # Assigning a type to the variable 'if_condition_85124' (line 2883)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2883, 13), 'if_condition_85124', if_condition_85124)
        # SSA begins for if statement (line 2883)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a IfExp to a Name (line 2885):
        
        # Assigning a IfExp to a Name (line 2885):
        
        
        
        # Call to len(...): (line 2885)
        # Processing the call arguments (line 2885)
        # Getting the type of 'toks' (line 2885)
        toks_85126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2885, 37), 'toks', False)
        # Processing the call keyword arguments (line 2885)
        kwargs_85127 = {}
        # Getting the type of 'len' (line 2885)
        len_85125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2885, 33), 'len', False)
        # Calling len(args, kwargs) (line 2885)
        len_call_result_85128 = invoke(stypy.reporting.localization.Localization(__file__, 2885, 33), len_85125, *[toks_85126], **kwargs_85127)
        
        int_85129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2885, 46), 'int')
        # Applying the binary operator '==' (line 2885)
        result_eq_85130 = python_operator(stypy.reporting.localization.Localization(__file__, 2885, 33), '==', len_call_result_85128, int_85129)
        
        # Testing the type of an if expression (line 2885)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2885, 22), result_eq_85130)
        # SSA begins for if expression (line 2885)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Obtaining the type of the subscript
        int_85131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2885, 27), 'int')
        # Getting the type of 'toks' (line 2885)
        toks_85132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2885, 22), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2885)
        getitem___85133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2885, 22), toks_85132, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2885)
        subscript_call_result_85134 = invoke(stypy.reporting.localization.Localization(__file__, 2885, 22), getitem___85133, int_85131)
        
        # SSA branch for the else part of an if expression (line 2885)
        module_type_store.open_ssa_branch('if expression else')
        
        # Call to Hbox(...): (line 2885)
        # Processing the call arguments (line 2885)
        float_85136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2885, 58), 'float')
        # Processing the call keyword arguments (line 2885)
        kwargs_85137 = {}
        # Getting the type of 'Hbox' (line 2885)
        Hbox_85135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2885, 53), 'Hbox', False)
        # Calling Hbox(args, kwargs) (line 2885)
        Hbox_call_result_85138 = invoke(stypy.reporting.localization.Localization(__file__, 2885, 53), Hbox_85135, *[float_85136], **kwargs_85137)
        
        # SSA join for if expression (line 2885)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_85139 = union_type.UnionType.add(subscript_call_result_85134, Hbox_call_result_85138)
        
        # Assigning a type to the variable 'nucleus' (line 2885)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2885, 12), 'nucleus', if_exp_85139)
        
        # Assigning a Subscript to a Tuple (line 2886):
        
        # Assigning a Subscript to a Name (line 2886):
        
        # Obtaining the type of the subscript
        int_85140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2886, 12), 'int')
        
        # Obtaining the type of the subscript
        int_85141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2886, 28), 'int')
        slice_85142 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2886, 23), int_85141, None, None)
        # Getting the type of 'toks' (line 2886)
        toks_85143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2886, 23), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2886)
        getitem___85144 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2886, 23), toks_85143, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2886)
        subscript_call_result_85145 = invoke(stypy.reporting.localization.Localization(__file__, 2886, 23), getitem___85144, slice_85142)
        
        # Obtaining the member '__getitem__' of a type (line 2886)
        getitem___85146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2886, 12), subscript_call_result_85145, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2886)
        subscript_call_result_85147 = invoke(stypy.reporting.localization.Localization(__file__, 2886, 12), getitem___85146, int_85140)
        
        # Assigning a type to the variable 'tuple_var_assignment_77307' (line 2886)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2886, 12), 'tuple_var_assignment_77307', subscript_call_result_85147)
        
        # Assigning a Subscript to a Name (line 2886):
        
        # Obtaining the type of the subscript
        int_85148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2886, 12), 'int')
        
        # Obtaining the type of the subscript
        int_85149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2886, 28), 'int')
        slice_85150 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2886, 23), int_85149, None, None)
        # Getting the type of 'toks' (line 2886)
        toks_85151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2886, 23), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2886)
        getitem___85152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2886, 23), toks_85151, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2886)
        subscript_call_result_85153 = invoke(stypy.reporting.localization.Localization(__file__, 2886, 23), getitem___85152, slice_85150)
        
        # Obtaining the member '__getitem__' of a type (line 2886)
        getitem___85154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2886, 12), subscript_call_result_85153, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2886)
        subscript_call_result_85155 = invoke(stypy.reporting.localization.Localization(__file__, 2886, 12), getitem___85154, int_85148)
        
        # Assigning a type to the variable 'tuple_var_assignment_77308' (line 2886)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2886, 12), 'tuple_var_assignment_77308', subscript_call_result_85155)
        
        # Assigning a Name to a Name (line 2886):
        # Getting the type of 'tuple_var_assignment_77307' (line 2886)
        tuple_var_assignment_77307_85156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2886, 12), 'tuple_var_assignment_77307')
        # Assigning a type to the variable 'op' (line 2886)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2886, 12), 'op', tuple_var_assignment_77307_85156)
        
        # Assigning a Name to a Name (line 2886):
        # Getting the type of 'tuple_var_assignment_77308' (line 2886)
        tuple_var_assignment_77308_85157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2886, 12), 'tuple_var_assignment_77308')
        # Assigning a type to the variable 'next' (line 2886)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2886, 16), 'next', tuple_var_assignment_77308_85157)
        
        
        # Getting the type of 'op' (line 2887)
        op_85158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2887, 15), 'op')
        unicode_85159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2887, 21), 'unicode', u'_')
        # Applying the binary operator '==' (line 2887)
        result_eq_85160 = python_operator(stypy.reporting.localization.Localization(__file__, 2887, 15), '==', op_85158, unicode_85159)
        
        # Testing the type of an if condition (line 2887)
        if_condition_85161 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2887, 12), result_eq_85160)
        # Assigning a type to the variable 'if_condition_85161' (line 2887)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2887, 12), 'if_condition_85161', if_condition_85161)
        # SSA begins for if statement (line 2887)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 2888):
        
        # Assigning a Name to a Name (line 2888):
        # Getting the type of 'next' (line 2888)
        next_85162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2888, 22), 'next')
        # Assigning a type to the variable 'sub' (line 2888)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2888, 16), 'sub', next_85162)
        # SSA branch for the else part of an if statement (line 2887)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 2890):
        
        # Assigning a Name to a Name (line 2890):
        # Getting the type of 'next' (line 2890)
        next_85163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2890, 24), 'next')
        # Assigning a type to the variable 'super' (line 2890)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2890, 16), 'super', next_85163)
        # SSA join for if statement (line 2887)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 2883)
        module_type_store.open_ssa_branch('else')
        
        
        
        # Call to len(...): (line 2891)
        # Processing the call arguments (line 2891)
        # Getting the type of 'toks' (line 2891)
        toks_85165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2891, 17), 'toks', False)
        # Processing the call keyword arguments (line 2891)
        kwargs_85166 = {}
        # Getting the type of 'len' (line 2891)
        len_85164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2891, 13), 'len', False)
        # Calling len(args, kwargs) (line 2891)
        len_call_result_85167 = invoke(stypy.reporting.localization.Localization(__file__, 2891, 13), len_85164, *[toks_85165], **kwargs_85166)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 2891)
        tuple_85168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2891, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2891)
        # Adding element type (line 2891)
        int_85169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2891, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2891, 27), tuple_85168, int_85169)
        # Adding element type (line 2891)
        int_85170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2891, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2891, 27), tuple_85168, int_85170)
        
        # Applying the binary operator 'in' (line 2891)
        result_contains_85171 = python_operator(stypy.reporting.localization.Localization(__file__, 2891, 13), 'in', len_call_result_85167, tuple_85168)
        
        # Testing the type of an if condition (line 2891)
        if_condition_85172 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2891, 13), result_contains_85171)
        # Assigning a type to the variable 'if_condition_85172' (line 2891)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2891, 13), 'if_condition_85172', if_condition_85172)
        # SSA begins for if statement (line 2891)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a IfExp to a Name (line 2893):
        
        # Assigning a IfExp to a Name (line 2893):
        
        
        
        # Call to len(...): (line 2893)
        # Processing the call arguments (line 2893)
        # Getting the type of 'toks' (line 2893)
        toks_85174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2893, 37), 'toks', False)
        # Processing the call keyword arguments (line 2893)
        kwargs_85175 = {}
        # Getting the type of 'len' (line 2893)
        len_85173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2893, 33), 'len', False)
        # Calling len(args, kwargs) (line 2893)
        len_call_result_85176 = invoke(stypy.reporting.localization.Localization(__file__, 2893, 33), len_85173, *[toks_85174], **kwargs_85175)
        
        int_85177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2893, 46), 'int')
        # Applying the binary operator '==' (line 2893)
        result_eq_85178 = python_operator(stypy.reporting.localization.Localization(__file__, 2893, 33), '==', len_call_result_85176, int_85177)
        
        # Testing the type of an if expression (line 2893)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2893, 22), result_eq_85178)
        # SSA begins for if expression (line 2893)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Obtaining the type of the subscript
        int_85179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2893, 27), 'int')
        # Getting the type of 'toks' (line 2893)
        toks_85180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2893, 22), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2893)
        getitem___85181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2893, 22), toks_85180, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2893)
        subscript_call_result_85182 = invoke(stypy.reporting.localization.Localization(__file__, 2893, 22), getitem___85181, int_85179)
        
        # SSA branch for the else part of an if expression (line 2893)
        module_type_store.open_ssa_branch('if expression else')
        
        # Call to Hbox(...): (line 2893)
        # Processing the call arguments (line 2893)
        float_85184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2893, 58), 'float')
        # Processing the call keyword arguments (line 2893)
        kwargs_85185 = {}
        # Getting the type of 'Hbox' (line 2893)
        Hbox_85183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2893, 53), 'Hbox', False)
        # Calling Hbox(args, kwargs) (line 2893)
        Hbox_call_result_85186 = invoke(stypy.reporting.localization.Localization(__file__, 2893, 53), Hbox_85183, *[float_85184], **kwargs_85185)
        
        # SSA join for if expression (line 2893)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_85187 = union_type.UnionType.add(subscript_call_result_85182, Hbox_call_result_85186)
        
        # Assigning a type to the variable 'nucleus' (line 2893)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2893, 12), 'nucleus', if_exp_85187)
        
        # Assigning a Subscript to a Tuple (line 2894):
        
        # Assigning a Subscript to a Name (line 2894):
        
        # Obtaining the type of the subscript
        int_85188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2894, 12), 'int')
        
        # Obtaining the type of the subscript
        int_85189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2894, 42), 'int')
        slice_85190 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2894, 37), int_85189, None, None)
        # Getting the type of 'toks' (line 2894)
        toks_85191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2894, 37), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2894)
        getitem___85192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2894, 37), toks_85191, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2894)
        subscript_call_result_85193 = invoke(stypy.reporting.localization.Localization(__file__, 2894, 37), getitem___85192, slice_85190)
        
        # Obtaining the member '__getitem__' of a type (line 2894)
        getitem___85194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2894, 12), subscript_call_result_85193, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2894)
        subscript_call_result_85195 = invoke(stypy.reporting.localization.Localization(__file__, 2894, 12), getitem___85194, int_85188)
        
        # Assigning a type to the variable 'tuple_var_assignment_77309' (line 2894)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2894, 12), 'tuple_var_assignment_77309', subscript_call_result_85195)
        
        # Assigning a Subscript to a Name (line 2894):
        
        # Obtaining the type of the subscript
        int_85196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2894, 12), 'int')
        
        # Obtaining the type of the subscript
        int_85197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2894, 42), 'int')
        slice_85198 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2894, 37), int_85197, None, None)
        # Getting the type of 'toks' (line 2894)
        toks_85199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2894, 37), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2894)
        getitem___85200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2894, 37), toks_85199, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2894)
        subscript_call_result_85201 = invoke(stypy.reporting.localization.Localization(__file__, 2894, 37), getitem___85200, slice_85198)
        
        # Obtaining the member '__getitem__' of a type (line 2894)
        getitem___85202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2894, 12), subscript_call_result_85201, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2894)
        subscript_call_result_85203 = invoke(stypy.reporting.localization.Localization(__file__, 2894, 12), getitem___85202, int_85196)
        
        # Assigning a type to the variable 'tuple_var_assignment_77310' (line 2894)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2894, 12), 'tuple_var_assignment_77310', subscript_call_result_85203)
        
        # Assigning a Subscript to a Name (line 2894):
        
        # Obtaining the type of the subscript
        int_85204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2894, 12), 'int')
        
        # Obtaining the type of the subscript
        int_85205 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2894, 42), 'int')
        slice_85206 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2894, 37), int_85205, None, None)
        # Getting the type of 'toks' (line 2894)
        toks_85207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2894, 37), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2894)
        getitem___85208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2894, 37), toks_85207, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2894)
        subscript_call_result_85209 = invoke(stypy.reporting.localization.Localization(__file__, 2894, 37), getitem___85208, slice_85206)
        
        # Obtaining the member '__getitem__' of a type (line 2894)
        getitem___85210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2894, 12), subscript_call_result_85209, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2894)
        subscript_call_result_85211 = invoke(stypy.reporting.localization.Localization(__file__, 2894, 12), getitem___85210, int_85204)
        
        # Assigning a type to the variable 'tuple_var_assignment_77311' (line 2894)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2894, 12), 'tuple_var_assignment_77311', subscript_call_result_85211)
        
        # Assigning a Subscript to a Name (line 2894):
        
        # Obtaining the type of the subscript
        int_85212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2894, 12), 'int')
        
        # Obtaining the type of the subscript
        int_85213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2894, 42), 'int')
        slice_85214 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2894, 37), int_85213, None, None)
        # Getting the type of 'toks' (line 2894)
        toks_85215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2894, 37), 'toks')
        # Obtaining the member '__getitem__' of a type (line 2894)
        getitem___85216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2894, 37), toks_85215, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2894)
        subscript_call_result_85217 = invoke(stypy.reporting.localization.Localization(__file__, 2894, 37), getitem___85216, slice_85214)
        
        # Obtaining the member '__getitem__' of a type (line 2894)
        getitem___85218 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2894, 12), subscript_call_result_85217, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2894)
        subscript_call_result_85219 = invoke(stypy.reporting.localization.Localization(__file__, 2894, 12), getitem___85218, int_85212)
        
        # Assigning a type to the variable 'tuple_var_assignment_77312' (line 2894)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2894, 12), 'tuple_var_assignment_77312', subscript_call_result_85219)
        
        # Assigning a Name to a Name (line 2894):
        # Getting the type of 'tuple_var_assignment_77309' (line 2894)
        tuple_var_assignment_77309_85220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2894, 12), 'tuple_var_assignment_77309')
        # Assigning a type to the variable 'op1' (line 2894)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2894, 12), 'op1', tuple_var_assignment_77309_85220)
        
        # Assigning a Name to a Name (line 2894):
        # Getting the type of 'tuple_var_assignment_77310' (line 2894)
        tuple_var_assignment_77310_85221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2894, 12), 'tuple_var_assignment_77310')
        # Assigning a type to the variable 'next1' (line 2894)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2894, 17), 'next1', tuple_var_assignment_77310_85221)
        
        # Assigning a Name to a Name (line 2894):
        # Getting the type of 'tuple_var_assignment_77311' (line 2894)
        tuple_var_assignment_77311_85222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2894, 12), 'tuple_var_assignment_77311')
        # Assigning a type to the variable 'op2' (line 2894)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2894, 24), 'op2', tuple_var_assignment_77311_85222)
        
        # Assigning a Name to a Name (line 2894):
        # Getting the type of 'tuple_var_assignment_77312' (line 2894)
        tuple_var_assignment_77312_85223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2894, 12), 'tuple_var_assignment_77312')
        # Assigning a type to the variable 'next2' (line 2894)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2894, 29), 'next2', tuple_var_assignment_77312_85223)
        
        
        # Getting the type of 'op1' (line 2895)
        op1_85224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2895, 15), 'op1')
        # Getting the type of 'op2' (line 2895)
        op2_85225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2895, 22), 'op2')
        # Applying the binary operator '==' (line 2895)
        result_eq_85226 = python_operator(stypy.reporting.localization.Localization(__file__, 2895, 15), '==', op1_85224, op2_85225)
        
        # Testing the type of an if condition (line 2895)
        if_condition_85227 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2895, 12), result_eq_85226)
        # Assigning a type to the variable 'if_condition_85227' (line 2895)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2895, 12), 'if_condition_85227', if_condition_85227)
        # SSA begins for if statement (line 2895)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'op1' (line 2896)
        op1_85228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2896, 19), 'op1')
        unicode_85229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2896, 26), 'unicode', u'_')
        # Applying the binary operator '==' (line 2896)
        result_eq_85230 = python_operator(stypy.reporting.localization.Localization(__file__, 2896, 19), '==', op1_85228, unicode_85229)
        
        # Testing the type of an if condition (line 2896)
        if_condition_85231 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2896, 16), result_eq_85230)
        # Assigning a type to the variable 'if_condition_85231' (line 2896)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2896, 16), 'if_condition_85231', if_condition_85231)
        # SSA begins for if statement (line 2896)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ParseFatalException(...): (line 2897)
        # Processing the call arguments (line 2897)
        unicode_85233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2897, 46), 'unicode', u'Double subscript')
        # Processing the call keyword arguments (line 2897)
        kwargs_85234 = {}
        # Getting the type of 'ParseFatalException' (line 2897)
        ParseFatalException_85232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2897, 26), 'ParseFatalException', False)
        # Calling ParseFatalException(args, kwargs) (line 2897)
        ParseFatalException_call_result_85235 = invoke(stypy.reporting.localization.Localization(__file__, 2897, 26), ParseFatalException_85232, *[unicode_85233], **kwargs_85234)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2897, 20), ParseFatalException_call_result_85235, 'raise parameter', BaseException)
        # SSA branch for the else part of an if statement (line 2896)
        module_type_store.open_ssa_branch('else')
        
        # Call to ParseFatalException(...): (line 2899)
        # Processing the call arguments (line 2899)
        unicode_85237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2899, 46), 'unicode', u'Double superscript')
        # Processing the call keyword arguments (line 2899)
        kwargs_85238 = {}
        # Getting the type of 'ParseFatalException' (line 2899)
        ParseFatalException_85236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2899, 26), 'ParseFatalException', False)
        # Calling ParseFatalException(args, kwargs) (line 2899)
        ParseFatalException_call_result_85239 = invoke(stypy.reporting.localization.Localization(__file__, 2899, 26), ParseFatalException_85236, *[unicode_85237], **kwargs_85238)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2899, 20), ParseFatalException_call_result_85239, 'raise parameter', BaseException)
        # SSA join for if statement (line 2896)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2895)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'op1' (line 2900)
        op1_85240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2900, 15), 'op1')
        unicode_85241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2900, 22), 'unicode', u'_')
        # Applying the binary operator '==' (line 2900)
        result_eq_85242 = python_operator(stypy.reporting.localization.Localization(__file__, 2900, 15), '==', op1_85240, unicode_85241)
        
        # Testing the type of an if condition (line 2900)
        if_condition_85243 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2900, 12), result_eq_85242)
        # Assigning a type to the variable 'if_condition_85243' (line 2900)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2900, 12), 'if_condition_85243', if_condition_85243)
        # SSA begins for if statement (line 2900)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 2901):
        
        # Assigning a Name to a Name (line 2901):
        # Getting the type of 'next1' (line 2901)
        next1_85244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2901, 22), 'next1')
        # Assigning a type to the variable 'sub' (line 2901)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2901, 16), 'sub', next1_85244)
        
        # Assigning a Name to a Name (line 2902):
        
        # Assigning a Name to a Name (line 2902):
        # Getting the type of 'next2' (line 2902)
        next2_85245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2902, 24), 'next2')
        # Assigning a type to the variable 'super' (line 2902)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2902, 16), 'super', next2_85245)
        # SSA branch for the else part of an if statement (line 2900)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 2904):
        
        # Assigning a Name to a Name (line 2904):
        # Getting the type of 'next1' (line 2904)
        next1_85246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2904, 24), 'next1')
        # Assigning a type to the variable 'super' (line 2904)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2904, 16), 'super', next1_85246)
        
        # Assigning a Name to a Name (line 2905):
        
        # Assigning a Name to a Name (line 2905):
        # Getting the type of 'next2' (line 2905)
        next2_85247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2905, 22), 'next2')
        # Assigning a type to the variable 'sub' (line 2905)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2905, 16), 'sub', next2_85247)
        # SSA join for if statement (line 2900)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 2891)
        module_type_store.open_ssa_branch('else')
        
        # Call to ParseFatalException(...): (line 2907)
        # Processing the call arguments (line 2907)
        unicode_85249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2908, 16), 'unicode', u'Subscript/superscript sequence is too long. Use braces { } to remove ambiguity.')
        # Processing the call keyword arguments (line 2907)
        kwargs_85250 = {}
        # Getting the type of 'ParseFatalException' (line 2907)
        ParseFatalException_85248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2907, 18), 'ParseFatalException', False)
        # Calling ParseFatalException(args, kwargs) (line 2907)
        ParseFatalException_call_result_85251 = invoke(stypy.reporting.localization.Localization(__file__, 2907, 18), ParseFatalException_85248, *[unicode_85249], **kwargs_85250)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2907, 12), ParseFatalException_call_result_85251, 'raise parameter', BaseException)
        # SSA join for if statement (line 2891)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2883)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2878)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2875)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 2911):
        
        # Assigning a Call to a Name (line 2911):
        
        # Call to get_state(...): (line 2911)
        # Processing the call keyword arguments (line 2911)
        kwargs_85254 = {}
        # Getting the type of 'self' (line 2911)
        self_85252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2911, 16), 'self', False)
        # Obtaining the member 'get_state' of a type (line 2911)
        get_state_85253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2911, 16), self_85252, 'get_state')
        # Calling get_state(args, kwargs) (line 2911)
        get_state_call_result_85255 = invoke(stypy.reporting.localization.Localization(__file__, 2911, 16), get_state_85253, *[], **kwargs_85254)
        
        # Assigning a type to the variable 'state' (line 2911)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2911, 8), 'state', get_state_call_result_85255)
        
        # Assigning a Call to a Name (line 2912):
        
        # Assigning a Call to a Name (line 2912):
        
        # Call to get_underline_thickness(...): (line 2912)
        # Processing the call arguments (line 2912)
        # Getting the type of 'state' (line 2913)
        state_85259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2913, 12), 'state', False)
        # Obtaining the member 'font' of a type (line 2913)
        font_85260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2913, 12), state_85259, 'font')
        # Getting the type of 'state' (line 2913)
        state_85261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2913, 24), 'state', False)
        # Obtaining the member 'fontsize' of a type (line 2913)
        fontsize_85262 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2913, 24), state_85261, 'fontsize')
        # Getting the type of 'state' (line 2913)
        state_85263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2913, 40), 'state', False)
        # Obtaining the member 'dpi' of a type (line 2913)
        dpi_85264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2913, 40), state_85263, 'dpi')
        # Processing the call keyword arguments (line 2912)
        kwargs_85265 = {}
        # Getting the type of 'state' (line 2912)
        state_85256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2912, 25), 'state', False)
        # Obtaining the member 'font_output' of a type (line 2912)
        font_output_85257 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2912, 25), state_85256, 'font_output')
        # Obtaining the member 'get_underline_thickness' of a type (line 2912)
        get_underline_thickness_85258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2912, 25), font_output_85257, 'get_underline_thickness')
        # Calling get_underline_thickness(args, kwargs) (line 2912)
        get_underline_thickness_call_result_85266 = invoke(stypy.reporting.localization.Localization(__file__, 2912, 25), get_underline_thickness_85258, *[font_85260, fontsize_85262, dpi_85264], **kwargs_85265)
        
        # Assigning a type to the variable 'rule_thickness' (line 2912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2912, 8), 'rule_thickness', get_underline_thickness_call_result_85266)
        
        # Assigning a Call to a Name (line 2914):
        
        # Assigning a Call to a Name (line 2914):
        
        # Call to get_xheight(...): (line 2914)
        # Processing the call arguments (line 2914)
        # Getting the type of 'state' (line 2915)
        state_85270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2915, 12), 'state', False)
        # Obtaining the member 'font' of a type (line 2915)
        font_85271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2915, 12), state_85270, 'font')
        # Getting the type of 'state' (line 2915)
        state_85272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2915, 24), 'state', False)
        # Obtaining the member 'fontsize' of a type (line 2915)
        fontsize_85273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2915, 24), state_85272, 'fontsize')
        # Getting the type of 'state' (line 2915)
        state_85274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2915, 40), 'state', False)
        # Obtaining the member 'dpi' of a type (line 2915)
        dpi_85275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2915, 40), state_85274, 'dpi')
        # Processing the call keyword arguments (line 2914)
        kwargs_85276 = {}
        # Getting the type of 'state' (line 2914)
        state_85267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2914, 18), 'state', False)
        # Obtaining the member 'font_output' of a type (line 2914)
        font_output_85268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2914, 18), state_85267, 'font_output')
        # Obtaining the member 'get_xheight' of a type (line 2914)
        get_xheight_85269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2914, 18), font_output_85268, 'get_xheight')
        # Calling get_xheight(args, kwargs) (line 2914)
        get_xheight_call_result_85277 = invoke(stypy.reporting.localization.Localization(__file__, 2914, 18), get_xheight_85269, *[font_85271, fontsize_85273, dpi_85275], **kwargs_85276)
        
        # Assigning a type to the variable 'xHeight' (line 2914)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2914, 8), 'xHeight', get_xheight_call_result_85277)
        
        # Getting the type of 'napostrophes' (line 2917)
        napostrophes_85278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2917, 11), 'napostrophes')
        # Testing the type of an if condition (line 2917)
        if_condition_85279 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2917, 8), napostrophes_85278)
        # Assigning a type to the variable 'if_condition_85279' (line 2917)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2917, 8), 'if_condition_85279', if_condition_85279)
        # SSA begins for if statement (line 2917)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 2918)
        # Getting the type of 'super' (line 2918)
        super_85280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2918, 15), 'super')
        # Getting the type of 'None' (line 2918)
        None_85281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2918, 24), 'None')
        
        (may_be_85282, more_types_in_union_85283) = may_be_none(super_85280, None_85281)

        if may_be_85282:

            if more_types_in_union_85283:
                # Runtime conditional SSA (line 2918)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 2919):
            
            # Assigning a Call to a Name (line 2919):
            
            # Call to Hlist(...): (line 2919)
            # Processing the call arguments (line 2919)
            
            # Obtaining an instance of the builtin type 'list' (line 2919)
            list_85285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2919, 30), 'list')
            # Adding type elements to the builtin type 'list' instance (line 2919)
            
            # Processing the call keyword arguments (line 2919)
            kwargs_85286 = {}
            # Getting the type of 'Hlist' (line 2919)
            Hlist_85284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2919, 24), 'Hlist', False)
            # Calling Hlist(args, kwargs) (line 2919)
            Hlist_call_result_85287 = invoke(stypy.reporting.localization.Localization(__file__, 2919, 24), Hlist_85284, *[list_85285], **kwargs_85286)
            
            # Assigning a type to the variable 'super' (line 2919)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2919, 16), 'super', Hlist_call_result_85287)

            if more_types_in_union_85283:
                # SSA join for if statement (line 2918)
                module_type_store = module_type_store.join_ssa_context()


        
        
        
        # Call to range(...): (line 2920)
        # Processing the call arguments (line 2920)
        # Getting the type of 'napostrophes' (line 2920)
        napostrophes_85289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2920, 27), 'napostrophes', False)
        # Processing the call keyword arguments (line 2920)
        kwargs_85290 = {}
        # Getting the type of 'range' (line 2920)
        range_85288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2920, 21), 'range', False)
        # Calling range(args, kwargs) (line 2920)
        range_call_result_85291 = invoke(stypy.reporting.localization.Localization(__file__, 2920, 21), range_85288, *[napostrophes_85289], **kwargs_85290)
        
        # Testing the type of a for loop iterable (line 2920)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2920, 12), range_call_result_85291)
        # Getting the type of the for loop variable (line 2920)
        for_loop_var_85292 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2920, 12), range_call_result_85291)
        # Assigning a type to the variable 'i' (line 2920)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2920, 12), 'i', for_loop_var_85292)
        # SSA begins for a for statement (line 2920)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to extend(...): (line 2921)
        # Processing the call arguments (line 2921)
        
        # Call to symbol(...): (line 2921)
        # Processing the call arguments (line 2921)
        # Getting the type of 's' (line 2921)
        s_85298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2921, 50), 's', False)
        # Getting the type of 'loc' (line 2921)
        loc_85299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2921, 53), 'loc', False)
        
        # Obtaining an instance of the builtin type 'list' (line 2921)
        list_85300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2921, 58), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2921)
        # Adding element type (line 2921)
        unicode_85301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2921, 59), 'unicode', u'\\prime')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2921, 58), list_85300, unicode_85301)
        
        # Processing the call keyword arguments (line 2921)
        kwargs_85302 = {}
        # Getting the type of 'self' (line 2921)
        self_85296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2921, 38), 'self', False)
        # Obtaining the member 'symbol' of a type (line 2921)
        symbol_85297 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2921, 38), self_85296, 'symbol')
        # Calling symbol(args, kwargs) (line 2921)
        symbol_call_result_85303 = invoke(stypy.reporting.localization.Localization(__file__, 2921, 38), symbol_85297, *[s_85298, loc_85299, list_85300], **kwargs_85302)
        
        # Processing the call keyword arguments (line 2921)
        kwargs_85304 = {}
        # Getting the type of 'super' (line 2921)
        super_85293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2921, 16), 'super', False)
        # Obtaining the member 'children' of a type (line 2921)
        children_85294 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2921, 16), super_85293, 'children')
        # Obtaining the member 'extend' of a type (line 2921)
        extend_85295 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2921, 16), children_85294, 'extend')
        # Calling extend(args, kwargs) (line 2921)
        extend_call_result_85305 = invoke(stypy.reporting.localization.Localization(__file__, 2921, 16), extend_85295, *[symbol_call_result_85303], **kwargs_85304)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to kern(...): (line 2923)
        # Processing the call keyword arguments (line 2923)
        kwargs_85308 = {}
        # Getting the type of 'super' (line 2923)
        super_85306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2923, 12), 'super', False)
        # Obtaining the member 'kern' of a type (line 2923)
        kern_85307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2923, 12), super_85306, 'kern')
        # Calling kern(args, kwargs) (line 2923)
        kern_call_result_85309 = invoke(stypy.reporting.localization.Localization(__file__, 2923, 12), kern_85307, *[], **kwargs_85308)
        
        
        # Call to hpack(...): (line 2924)
        # Processing the call keyword arguments (line 2924)
        kwargs_85312 = {}
        # Getting the type of 'super' (line 2924)
        super_85310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2924, 12), 'super', False)
        # Obtaining the member 'hpack' of a type (line 2924)
        hpack_85311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2924, 12), super_85310, 'hpack')
        # Calling hpack(args, kwargs) (line 2924)
        hpack_call_result_85313 = invoke(stypy.reporting.localization.Localization(__file__, 2924, 12), hpack_85311, *[], **kwargs_85312)
        
        # SSA join for if statement (line 2917)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to is_overunder(...): (line 2927)
        # Processing the call arguments (line 2927)
        # Getting the type of 'nucleus' (line 2927)
        nucleus_85316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2927, 29), 'nucleus', False)
        # Processing the call keyword arguments (line 2927)
        kwargs_85317 = {}
        # Getting the type of 'self' (line 2927)
        self_85314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2927, 11), 'self', False)
        # Obtaining the member 'is_overunder' of a type (line 2927)
        is_overunder_85315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2927, 11), self_85314, 'is_overunder')
        # Calling is_overunder(args, kwargs) (line 2927)
        is_overunder_call_result_85318 = invoke(stypy.reporting.localization.Localization(__file__, 2927, 11), is_overunder_85315, *[nucleus_85316], **kwargs_85317)
        
        # Testing the type of an if condition (line 2927)
        if_condition_85319 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2927, 8), is_overunder_call_result_85318)
        # Assigning a type to the variable 'if_condition_85319' (line 2927)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2927, 8), 'if_condition_85319', if_condition_85319)
        # SSA begins for if statement (line 2927)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a List to a Name (line 2928):
        
        # Assigning a List to a Name (line 2928):
        
        # Obtaining an instance of the builtin type 'list' (line 2928)
        list_85320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2928, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2928)
        
        # Assigning a type to the variable 'vlist' (line 2928)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2928, 12), 'vlist', list_85320)
        
        # Assigning a Num to a Name (line 2929):
        
        # Assigning a Num to a Name (line 2929):
        float_85321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2929, 20), 'float')
        # Assigning a type to the variable 'shift' (line 2929)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2929, 12), 'shift', float_85321)
        
        # Assigning a Attribute to a Name (line 2930):
        
        # Assigning a Attribute to a Name (line 2930):
        # Getting the type of 'nucleus' (line 2930)
        nucleus_85322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2930, 20), 'nucleus')
        # Obtaining the member 'width' of a type (line 2930)
        width_85323 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2930, 20), nucleus_85322, 'width')
        # Assigning a type to the variable 'width' (line 2930)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2930, 12), 'width', width_85323)
        
        # Type idiom detected: calculating its left and rigth part (line 2931)
        # Getting the type of 'super' (line 2931)
        super_85324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2931, 12), 'super')
        # Getting the type of 'None' (line 2931)
        None_85325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2931, 28), 'None')
        
        (may_be_85326, more_types_in_union_85327) = may_not_be_none(super_85324, None_85325)

        if may_be_85326:

            if more_types_in_union_85327:
                # Runtime conditional SSA (line 2931)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to shrink(...): (line 2932)
            # Processing the call keyword arguments (line 2932)
            kwargs_85330 = {}
            # Getting the type of 'super' (line 2932)
            super_85328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2932, 16), 'super', False)
            # Obtaining the member 'shrink' of a type (line 2932)
            shrink_85329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2932, 16), super_85328, 'shrink')
            # Calling shrink(args, kwargs) (line 2932)
            shrink_call_result_85331 = invoke(stypy.reporting.localization.Localization(__file__, 2932, 16), shrink_85329, *[], **kwargs_85330)
            
            
            # Assigning a Call to a Name (line 2933):
            
            # Assigning a Call to a Name (line 2933):
            
            # Call to max(...): (line 2933)
            # Processing the call arguments (line 2933)
            # Getting the type of 'width' (line 2933)
            width_85333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2933, 28), 'width', False)
            # Getting the type of 'super' (line 2933)
            super_85334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2933, 35), 'super', False)
            # Obtaining the member 'width' of a type (line 2933)
            width_85335 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2933, 35), super_85334, 'width')
            # Processing the call keyword arguments (line 2933)
            kwargs_85336 = {}
            # Getting the type of 'max' (line 2933)
            max_85332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2933, 24), 'max', False)
            # Calling max(args, kwargs) (line 2933)
            max_call_result_85337 = invoke(stypy.reporting.localization.Localization(__file__, 2933, 24), max_85332, *[width_85333, width_85335], **kwargs_85336)
            
            # Assigning a type to the variable 'width' (line 2933)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2933, 16), 'width', max_call_result_85337)

            if more_types_in_union_85327:
                # SSA join for if statement (line 2931)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 2934)
        # Getting the type of 'sub' (line 2934)
        sub_85338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2934, 12), 'sub')
        # Getting the type of 'None' (line 2934)
        None_85339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2934, 26), 'None')
        
        (may_be_85340, more_types_in_union_85341) = may_not_be_none(sub_85338, None_85339)

        if may_be_85340:

            if more_types_in_union_85341:
                # Runtime conditional SSA (line 2934)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to shrink(...): (line 2935)
            # Processing the call keyword arguments (line 2935)
            kwargs_85344 = {}
            # Getting the type of 'sub' (line 2935)
            sub_85342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2935, 16), 'sub', False)
            # Obtaining the member 'shrink' of a type (line 2935)
            shrink_85343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2935, 16), sub_85342, 'shrink')
            # Calling shrink(args, kwargs) (line 2935)
            shrink_call_result_85345 = invoke(stypy.reporting.localization.Localization(__file__, 2935, 16), shrink_85343, *[], **kwargs_85344)
            
            
            # Assigning a Call to a Name (line 2936):
            
            # Assigning a Call to a Name (line 2936):
            
            # Call to max(...): (line 2936)
            # Processing the call arguments (line 2936)
            # Getting the type of 'width' (line 2936)
            width_85347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2936, 28), 'width', False)
            # Getting the type of 'sub' (line 2936)
            sub_85348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2936, 35), 'sub', False)
            # Obtaining the member 'width' of a type (line 2936)
            width_85349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2936, 35), sub_85348, 'width')
            # Processing the call keyword arguments (line 2936)
            kwargs_85350 = {}
            # Getting the type of 'max' (line 2936)
            max_85346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2936, 24), 'max', False)
            # Calling max(args, kwargs) (line 2936)
            max_call_result_85351 = invoke(stypy.reporting.localization.Localization(__file__, 2936, 24), max_85346, *[width_85347, width_85349], **kwargs_85350)
            
            # Assigning a type to the variable 'width' (line 2936)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2936, 16), 'width', max_call_result_85351)

            if more_types_in_union_85341:
                # SSA join for if statement (line 2934)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 2938)
        # Getting the type of 'super' (line 2938)
        super_85352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2938, 12), 'super')
        # Getting the type of 'None' (line 2938)
        None_85353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2938, 28), 'None')
        
        (may_be_85354, more_types_in_union_85355) = may_not_be_none(super_85352, None_85353)

        if may_be_85354:

            if more_types_in_union_85355:
                # Runtime conditional SSA (line 2938)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 2939):
            
            # Assigning a Call to a Name (line 2939):
            
            # Call to HCentered(...): (line 2939)
            # Processing the call arguments (line 2939)
            
            # Obtaining an instance of the builtin type 'list' (line 2939)
            list_85357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2939, 34), 'list')
            # Adding type elements to the builtin type 'list' instance (line 2939)
            # Adding element type (line 2939)
            # Getting the type of 'super' (line 2939)
            super_85358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2939, 35), 'super', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2939, 34), list_85357, super_85358)
            
            # Processing the call keyword arguments (line 2939)
            kwargs_85359 = {}
            # Getting the type of 'HCentered' (line 2939)
            HCentered_85356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2939, 24), 'HCentered', False)
            # Calling HCentered(args, kwargs) (line 2939)
            HCentered_call_result_85360 = invoke(stypy.reporting.localization.Localization(__file__, 2939, 24), HCentered_85356, *[list_85357], **kwargs_85359)
            
            # Assigning a type to the variable 'hlist' (line 2939)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2939, 16), 'hlist', HCentered_call_result_85360)
            
            # Call to hpack(...): (line 2940)
            # Processing the call arguments (line 2940)
            # Getting the type of 'width' (line 2940)
            width_85363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2940, 28), 'width', False)
            unicode_85364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2940, 35), 'unicode', u'exactly')
            # Processing the call keyword arguments (line 2940)
            kwargs_85365 = {}
            # Getting the type of 'hlist' (line 2940)
            hlist_85361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2940, 16), 'hlist', False)
            # Obtaining the member 'hpack' of a type (line 2940)
            hpack_85362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2940, 16), hlist_85361, 'hpack')
            # Calling hpack(args, kwargs) (line 2940)
            hpack_call_result_85366 = invoke(stypy.reporting.localization.Localization(__file__, 2940, 16), hpack_85362, *[width_85363, unicode_85364], **kwargs_85365)
            
            
            # Call to extend(...): (line 2941)
            # Processing the call arguments (line 2941)
            
            # Obtaining an instance of the builtin type 'list' (line 2941)
            list_85369 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2941, 29), 'list')
            # Adding type elements to the builtin type 'list' instance (line 2941)
            # Adding element type (line 2941)
            # Getting the type of 'hlist' (line 2941)
            hlist_85370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2941, 30), 'hlist', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2941, 29), list_85369, hlist_85370)
            # Adding element type (line 2941)
            
            # Call to Kern(...): (line 2941)
            # Processing the call arguments (line 2941)
            # Getting the type of 'rule_thickness' (line 2941)
            rule_thickness_85372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2941, 42), 'rule_thickness', False)
            float_85373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2941, 59), 'float')
            # Applying the binary operator '*' (line 2941)
            result_mul_85374 = python_operator(stypy.reporting.localization.Localization(__file__, 2941, 42), '*', rule_thickness_85372, float_85373)
            
            # Processing the call keyword arguments (line 2941)
            kwargs_85375 = {}
            # Getting the type of 'Kern' (line 2941)
            Kern_85371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2941, 37), 'Kern', False)
            # Calling Kern(args, kwargs) (line 2941)
            Kern_call_result_85376 = invoke(stypy.reporting.localization.Localization(__file__, 2941, 37), Kern_85371, *[result_mul_85374], **kwargs_85375)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2941, 29), list_85369, Kern_call_result_85376)
            
            # Processing the call keyword arguments (line 2941)
            kwargs_85377 = {}
            # Getting the type of 'vlist' (line 2941)
            vlist_85367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2941, 16), 'vlist', False)
            # Obtaining the member 'extend' of a type (line 2941)
            extend_85368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2941, 16), vlist_85367, 'extend')
            # Calling extend(args, kwargs) (line 2941)
            extend_call_result_85378 = invoke(stypy.reporting.localization.Localization(__file__, 2941, 16), extend_85368, *[list_85369], **kwargs_85377)
            

            if more_types_in_union_85355:
                # SSA join for if statement (line 2938)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 2942):
        
        # Assigning a Call to a Name (line 2942):
        
        # Call to HCentered(...): (line 2942)
        # Processing the call arguments (line 2942)
        
        # Obtaining an instance of the builtin type 'list' (line 2942)
        list_85380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2942, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2942)
        # Adding element type (line 2942)
        # Getting the type of 'nucleus' (line 2942)
        nucleus_85381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2942, 31), 'nucleus', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2942, 30), list_85380, nucleus_85381)
        
        # Processing the call keyword arguments (line 2942)
        kwargs_85382 = {}
        # Getting the type of 'HCentered' (line 2942)
        HCentered_85379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2942, 20), 'HCentered', False)
        # Calling HCentered(args, kwargs) (line 2942)
        HCentered_call_result_85383 = invoke(stypy.reporting.localization.Localization(__file__, 2942, 20), HCentered_85379, *[list_85380], **kwargs_85382)
        
        # Assigning a type to the variable 'hlist' (line 2942)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2942, 12), 'hlist', HCentered_call_result_85383)
        
        # Call to hpack(...): (line 2943)
        # Processing the call arguments (line 2943)
        # Getting the type of 'width' (line 2943)
        width_85386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2943, 24), 'width', False)
        unicode_85387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2943, 31), 'unicode', u'exactly')
        # Processing the call keyword arguments (line 2943)
        kwargs_85388 = {}
        # Getting the type of 'hlist' (line 2943)
        hlist_85384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2943, 12), 'hlist', False)
        # Obtaining the member 'hpack' of a type (line 2943)
        hpack_85385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2943, 12), hlist_85384, 'hpack')
        # Calling hpack(args, kwargs) (line 2943)
        hpack_call_result_85389 = invoke(stypy.reporting.localization.Localization(__file__, 2943, 12), hpack_85385, *[width_85386, unicode_85387], **kwargs_85388)
        
        
        # Call to append(...): (line 2944)
        # Processing the call arguments (line 2944)
        # Getting the type of 'hlist' (line 2944)
        hlist_85392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2944, 25), 'hlist', False)
        # Processing the call keyword arguments (line 2944)
        kwargs_85393 = {}
        # Getting the type of 'vlist' (line 2944)
        vlist_85390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2944, 12), 'vlist', False)
        # Obtaining the member 'append' of a type (line 2944)
        append_85391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2944, 12), vlist_85390, 'append')
        # Calling append(args, kwargs) (line 2944)
        append_call_result_85394 = invoke(stypy.reporting.localization.Localization(__file__, 2944, 12), append_85391, *[hlist_85392], **kwargs_85393)
        
        
        # Type idiom detected: calculating its left and rigth part (line 2945)
        # Getting the type of 'sub' (line 2945)
        sub_85395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2945, 12), 'sub')
        # Getting the type of 'None' (line 2945)
        None_85396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2945, 26), 'None')
        
        (may_be_85397, more_types_in_union_85398) = may_not_be_none(sub_85395, None_85396)

        if may_be_85397:

            if more_types_in_union_85398:
                # Runtime conditional SSA (line 2945)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 2946):
            
            # Assigning a Call to a Name (line 2946):
            
            # Call to HCentered(...): (line 2946)
            # Processing the call arguments (line 2946)
            
            # Obtaining an instance of the builtin type 'list' (line 2946)
            list_85400 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2946, 34), 'list')
            # Adding type elements to the builtin type 'list' instance (line 2946)
            # Adding element type (line 2946)
            # Getting the type of 'sub' (line 2946)
            sub_85401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2946, 35), 'sub', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2946, 34), list_85400, sub_85401)
            
            # Processing the call keyword arguments (line 2946)
            kwargs_85402 = {}
            # Getting the type of 'HCentered' (line 2946)
            HCentered_85399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2946, 24), 'HCentered', False)
            # Calling HCentered(args, kwargs) (line 2946)
            HCentered_call_result_85403 = invoke(stypy.reporting.localization.Localization(__file__, 2946, 24), HCentered_85399, *[list_85400], **kwargs_85402)
            
            # Assigning a type to the variable 'hlist' (line 2946)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2946, 16), 'hlist', HCentered_call_result_85403)
            
            # Call to hpack(...): (line 2947)
            # Processing the call arguments (line 2947)
            # Getting the type of 'width' (line 2947)
            width_85406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2947, 28), 'width', False)
            unicode_85407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2947, 35), 'unicode', u'exactly')
            # Processing the call keyword arguments (line 2947)
            kwargs_85408 = {}
            # Getting the type of 'hlist' (line 2947)
            hlist_85404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2947, 16), 'hlist', False)
            # Obtaining the member 'hpack' of a type (line 2947)
            hpack_85405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2947, 16), hlist_85404, 'hpack')
            # Calling hpack(args, kwargs) (line 2947)
            hpack_call_result_85409 = invoke(stypy.reporting.localization.Localization(__file__, 2947, 16), hpack_85405, *[width_85406, unicode_85407], **kwargs_85408)
            
            
            # Call to extend(...): (line 2948)
            # Processing the call arguments (line 2948)
            
            # Obtaining an instance of the builtin type 'list' (line 2948)
            list_85412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2948, 29), 'list')
            # Adding type elements to the builtin type 'list' instance (line 2948)
            # Adding element type (line 2948)
            
            # Call to Kern(...): (line 2948)
            # Processing the call arguments (line 2948)
            # Getting the type of 'rule_thickness' (line 2948)
            rule_thickness_85414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2948, 35), 'rule_thickness', False)
            float_85415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2948, 52), 'float')
            # Applying the binary operator '*' (line 2948)
            result_mul_85416 = python_operator(stypy.reporting.localization.Localization(__file__, 2948, 35), '*', rule_thickness_85414, float_85415)
            
            # Processing the call keyword arguments (line 2948)
            kwargs_85417 = {}
            # Getting the type of 'Kern' (line 2948)
            Kern_85413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2948, 30), 'Kern', False)
            # Calling Kern(args, kwargs) (line 2948)
            Kern_call_result_85418 = invoke(stypy.reporting.localization.Localization(__file__, 2948, 30), Kern_85413, *[result_mul_85416], **kwargs_85417)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2948, 29), list_85412, Kern_call_result_85418)
            # Adding element type (line 2948)
            # Getting the type of 'hlist' (line 2948)
            hlist_85419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2948, 58), 'hlist', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2948, 29), list_85412, hlist_85419)
            
            # Processing the call keyword arguments (line 2948)
            kwargs_85420 = {}
            # Getting the type of 'vlist' (line 2948)
            vlist_85410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2948, 16), 'vlist', False)
            # Obtaining the member 'extend' of a type (line 2948)
            extend_85411 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2948, 16), vlist_85410, 'extend')
            # Calling extend(args, kwargs) (line 2948)
            extend_call_result_85421 = invoke(stypy.reporting.localization.Localization(__file__, 2948, 16), extend_85411, *[list_85412], **kwargs_85420)
            
            
            # Assigning a Attribute to a Name (line 2949):
            
            # Assigning a Attribute to a Name (line 2949):
            # Getting the type of 'hlist' (line 2949)
            hlist_85422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2949, 24), 'hlist')
            # Obtaining the member 'height' of a type (line 2949)
            height_85423 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2949, 24), hlist_85422, 'height')
            # Assigning a type to the variable 'shift' (line 2949)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2949, 16), 'shift', height_85423)

            if more_types_in_union_85398:
                # SSA join for if statement (line 2945)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 2950):
        
        # Assigning a Call to a Name (line 2950):
        
        # Call to Vlist(...): (line 2950)
        # Processing the call arguments (line 2950)
        # Getting the type of 'vlist' (line 2950)
        vlist_85425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2950, 26), 'vlist', False)
        # Processing the call keyword arguments (line 2950)
        kwargs_85426 = {}
        # Getting the type of 'Vlist' (line 2950)
        Vlist_85424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2950, 20), 'Vlist', False)
        # Calling Vlist(args, kwargs) (line 2950)
        Vlist_call_result_85427 = invoke(stypy.reporting.localization.Localization(__file__, 2950, 20), Vlist_85424, *[vlist_85425], **kwargs_85426)
        
        # Assigning a type to the variable 'vlist' (line 2950)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2950, 12), 'vlist', Vlist_call_result_85427)
        
        # Assigning a BinOp to a Attribute (line 2951):
        
        # Assigning a BinOp to a Attribute (line 2951):
        # Getting the type of 'shift' (line 2951)
        shift_85428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2951, 33), 'shift')
        # Getting the type of 'nucleus' (line 2951)
        nucleus_85429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2951, 41), 'nucleus')
        # Obtaining the member 'depth' of a type (line 2951)
        depth_85430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2951, 41), nucleus_85429, 'depth')
        # Applying the binary operator '+' (line 2951)
        result_add_85431 = python_operator(stypy.reporting.localization.Localization(__file__, 2951, 33), '+', shift_85428, depth_85430)
        
        # Getting the type of 'vlist' (line 2951)
        vlist_85432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2951, 12), 'vlist')
        # Setting the type of the member 'shift_amount' of a type (line 2951)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2951, 12), vlist_85432, 'shift_amount', result_add_85431)
        
        # Assigning a Call to a Name (line 2952):
        
        # Assigning a Call to a Name (line 2952):
        
        # Call to Hlist(...): (line 2952)
        # Processing the call arguments (line 2952)
        
        # Obtaining an instance of the builtin type 'list' (line 2952)
        list_85434 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2952, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2952)
        # Adding element type (line 2952)
        # Getting the type of 'vlist' (line 2952)
        vlist_85435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2952, 28), 'vlist', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2952, 27), list_85434, vlist_85435)
        
        # Processing the call keyword arguments (line 2952)
        kwargs_85436 = {}
        # Getting the type of 'Hlist' (line 2952)
        Hlist_85433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2952, 21), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 2952)
        Hlist_call_result_85437 = invoke(stypy.reporting.localization.Localization(__file__, 2952, 21), Hlist_85433, *[list_85434], **kwargs_85436)
        
        # Assigning a type to the variable 'result' (line 2952)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2952, 12), 'result', Hlist_call_result_85437)
        
        # Obtaining an instance of the builtin type 'list' (line 2953)
        list_85438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2953, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2953)
        # Adding element type (line 2953)
        # Getting the type of 'result' (line 2953)
        result_85439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2953, 20), 'result')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2953, 19), list_85438, result_85439)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2953)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2953, 12), 'stypy_return_type', list_85438)
        # SSA join for if statement (line 2927)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Name (line 2962):
        
        # Assigning a Name to a Name (line 2962):
        # Getting the type of 'nucleus' (line 2962)
        nucleus_85440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2962, 20), 'nucleus')
        # Assigning a type to the variable 'last_char' (line 2962)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2962, 8), 'last_char', nucleus_85440)
        
        
        # Call to isinstance(...): (line 2963)
        # Processing the call arguments (line 2963)
        # Getting the type of 'nucleus' (line 2963)
        nucleus_85442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2963, 22), 'nucleus', False)
        # Getting the type of 'Hlist' (line 2963)
        Hlist_85443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2963, 31), 'Hlist', False)
        # Processing the call keyword arguments (line 2963)
        kwargs_85444 = {}
        # Getting the type of 'isinstance' (line 2963)
        isinstance_85441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2963, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2963)
        isinstance_call_result_85445 = invoke(stypy.reporting.localization.Localization(__file__, 2963, 11), isinstance_85441, *[nucleus_85442, Hlist_85443], **kwargs_85444)
        
        # Testing the type of an if condition (line 2963)
        if_condition_85446 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2963, 8), isinstance_call_result_85445)
        # Assigning a type to the variable 'if_condition_85446' (line 2963)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2963, 8), 'if_condition_85446', if_condition_85446)
        # SSA begins for if statement (line 2963)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Name (line 2964):
        
        # Assigning a Attribute to a Name (line 2964):
        # Getting the type of 'nucleus' (line 2964)
        nucleus_85447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2964, 27), 'nucleus')
        # Obtaining the member 'children' of a type (line 2964)
        children_85448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2964, 27), nucleus_85447, 'children')
        # Assigning a type to the variable 'new_children' (line 2964)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2964, 12), 'new_children', children_85448)
        
        
        # Call to len(...): (line 2965)
        # Processing the call arguments (line 2965)
        # Getting the type of 'new_children' (line 2965)
        new_children_85450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2965, 19), 'new_children', False)
        # Processing the call keyword arguments (line 2965)
        kwargs_85451 = {}
        # Getting the type of 'len' (line 2965)
        len_85449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2965, 15), 'len', False)
        # Calling len(args, kwargs) (line 2965)
        len_call_result_85452 = invoke(stypy.reporting.localization.Localization(__file__, 2965, 15), len_85449, *[new_children_85450], **kwargs_85451)
        
        # Testing the type of an if condition (line 2965)
        if_condition_85453 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2965, 12), len_call_result_85452)
        # Assigning a type to the variable 'if_condition_85453' (line 2965)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2965, 12), 'if_condition_85453', if_condition_85453)
        # SSA begins for if statement (line 2965)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Evaluating a boolean operation
        
        # Call to isinstance(...): (line 2967)
        # Processing the call arguments (line 2967)
        
        # Obtaining the type of the subscript
        int_85455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2967, 44), 'int')
        # Getting the type of 'new_children' (line 2967)
        new_children_85456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2967, 31), 'new_children', False)
        # Obtaining the member '__getitem__' of a type (line 2967)
        getitem___85457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2967, 31), new_children_85456, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2967)
        subscript_call_result_85458 = invoke(stypy.reporting.localization.Localization(__file__, 2967, 31), getitem___85457, int_85455)
        
        # Getting the type of 'Kern' (line 2967)
        Kern_85459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2967, 48), 'Kern', False)
        # Processing the call keyword arguments (line 2967)
        kwargs_85460 = {}
        # Getting the type of 'isinstance' (line 2967)
        isinstance_85454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2967, 20), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2967)
        isinstance_call_result_85461 = invoke(stypy.reporting.localization.Localization(__file__, 2967, 20), isinstance_85454, *[subscript_call_result_85458, Kern_85459], **kwargs_85460)
        
        
        # Call to hasattr(...): (line 2968)
        # Processing the call arguments (line 2968)
        
        # Obtaining the type of the subscript
        int_85463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2968, 45), 'int')
        # Getting the type of 'new_children' (line 2968)
        new_children_85464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2968, 32), 'new_children', False)
        # Obtaining the member '__getitem__' of a type (line 2968)
        getitem___85465 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2968, 32), new_children_85464, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2968)
        subscript_call_result_85466 = invoke(stypy.reporting.localization.Localization(__file__, 2968, 32), getitem___85465, int_85463)
        
        unicode_85467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2968, 50), 'unicode', u'_metrics')
        # Processing the call keyword arguments (line 2968)
        kwargs_85468 = {}
        # Getting the type of 'hasattr' (line 2968)
        hasattr_85462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2968, 24), 'hasattr', False)
        # Calling hasattr(args, kwargs) (line 2968)
        hasattr_call_result_85469 = invoke(stypy.reporting.localization.Localization(__file__, 2968, 24), hasattr_85462, *[subscript_call_result_85466, unicode_85467], **kwargs_85468)
        
        # Applying the binary operator 'and' (line 2967)
        result_and_keyword_85470 = python_operator(stypy.reporting.localization.Localization(__file__, 2967, 20), 'and', isinstance_call_result_85461, hasattr_call_result_85469)
        
        # Testing the type of an if condition (line 2967)
        if_condition_85471 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2967, 16), result_and_keyword_85470)
        # Assigning a type to the variable 'if_condition_85471' (line 2967)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2967, 16), 'if_condition_85471', if_condition_85471)
        # SSA begins for if statement (line 2967)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 2969):
        
        # Assigning a Subscript to a Name (line 2969):
        
        # Obtaining the type of the subscript
        int_85472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2969, 49), 'int')
        slice_85473 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2969, 35), None, int_85472, None)
        # Getting the type of 'new_children' (line 2969)
        new_children_85474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2969, 35), 'new_children')
        # Obtaining the member '__getitem__' of a type (line 2969)
        getitem___85475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2969, 35), new_children_85474, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2969)
        subscript_call_result_85476 = invoke(stypy.reporting.localization.Localization(__file__, 2969, 35), getitem___85475, slice_85473)
        
        # Assigning a type to the variable 'new_children' (line 2969)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2969, 20), 'new_children', subscript_call_result_85476)
        # SSA join for if statement (line 2967)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Subscript to a Name (line 2970):
        
        # Assigning a Subscript to a Name (line 2970):
        
        # Obtaining the type of the subscript
        int_85477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2970, 41), 'int')
        # Getting the type of 'new_children' (line 2970)
        new_children_85478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2970, 28), 'new_children')
        # Obtaining the member '__getitem__' of a type (line 2970)
        getitem___85479 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2970, 28), new_children_85478, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2970)
        subscript_call_result_85480 = invoke(stypy.reporting.localization.Localization(__file__, 2970, 28), getitem___85479, int_85477)
        
        # Assigning a type to the variable 'last_char' (line 2970)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2970, 16), 'last_char', subscript_call_result_85480)
        
        # Type idiom detected: calculating its left and rigth part (line 2971)
        unicode_85481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2971, 38), 'unicode', u'_metrics')
        # Getting the type of 'last_char' (line 2971)
        last_char_85482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2971, 27), 'last_char')
        
        (may_be_85483, more_types_in_union_85484) = may_provide_member(unicode_85481, last_char_85482)

        if may_be_85483:

            if more_types_in_union_85484:
                # Runtime conditional SSA (line 2971)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'last_char' (line 2971)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2971, 16), 'last_char', remove_not_member_provider_from_union(last_char_85482, u'_metrics'))
            
            # Assigning a Attribute to a Attribute (line 2972):
            
            # Assigning a Attribute to a Attribute (line 2972):
            # Getting the type of 'last_char' (line 2972)
            last_char_85485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2972, 38), 'last_char')
            # Obtaining the member '_metrics' of a type (line 2972)
            _metrics_85486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2972, 38), last_char_85485, '_metrics')
            # Obtaining the member 'advance' of a type (line 2972)
            advance_85487 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2972, 38), _metrics_85486, 'advance')
            # Getting the type of 'last_char' (line 2972)
            last_char_85488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2972, 20), 'last_char')
            # Setting the type of the member 'width' of a type (line 2972)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2972, 20), last_char_85488, 'width', advance_85487)

            if more_types_in_union_85484:
                # SSA join for if statement (line 2971)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA join for if statement (line 2965)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 2974):
        
        # Assigning a Call to a Name (line 2974):
        
        # Call to Hlist(...): (line 2974)
        # Processing the call arguments (line 2974)
        # Getting the type of 'new_children' (line 2974)
        new_children_85490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2974, 28), 'new_children', False)
        # Processing the call keyword arguments (line 2974)
        # Getting the type of 'False' (line 2974)
        False_85491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2974, 50), 'False', False)
        keyword_85492 = False_85491
        kwargs_85493 = {'do_kern': keyword_85492}
        # Getting the type of 'Hlist' (line 2974)
        Hlist_85489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2974, 22), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 2974)
        Hlist_call_result_85494 = invoke(stypy.reporting.localization.Localization(__file__, 2974, 22), Hlist_85489, *[new_children_85490], **kwargs_85493)
        
        # Assigning a type to the variable 'nucleus' (line 2974)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2974, 12), 'nucleus', Hlist_call_result_85494)
        # SSA branch for the else part of an if statement (line 2963)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to isinstance(...): (line 2976)
        # Processing the call arguments (line 2976)
        # Getting the type of 'nucleus' (line 2976)
        nucleus_85496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2976, 26), 'nucleus', False)
        # Getting the type of 'Char' (line 2976)
        Char_85497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2976, 35), 'Char', False)
        # Processing the call keyword arguments (line 2976)
        kwargs_85498 = {}
        # Getting the type of 'isinstance' (line 2976)
        isinstance_85495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2976, 15), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2976)
        isinstance_call_result_85499 = invoke(stypy.reporting.localization.Localization(__file__, 2976, 15), isinstance_85495, *[nucleus_85496, Char_85497], **kwargs_85498)
        
        # Testing the type of an if condition (line 2976)
        if_condition_85500 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2976, 12), isinstance_call_result_85499)
        # Assigning a type to the variable 'if_condition_85500' (line 2976)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2976, 12), 'if_condition_85500', if_condition_85500)
        # SSA begins for if statement (line 2976)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Attribute (line 2977):
        
        # Assigning a Attribute to a Attribute (line 2977):
        # Getting the type of 'last_char' (line 2977)
        last_char_85501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2977, 34), 'last_char')
        # Obtaining the member '_metrics' of a type (line 2977)
        _metrics_85502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2977, 34), last_char_85501, '_metrics')
        # Obtaining the member 'advance' of a type (line 2977)
        advance_85503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2977, 34), _metrics_85502, 'advance')
        # Getting the type of 'last_char' (line 2977)
        last_char_85504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2977, 16), 'last_char')
        # Setting the type of the member 'width' of a type (line 2977)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2977, 16), last_char_85504, 'width', advance_85503)
        # SSA join for if statement (line 2976)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 2978):
        
        # Assigning a Call to a Name (line 2978):
        
        # Call to Hlist(...): (line 2978)
        # Processing the call arguments (line 2978)
        
        # Obtaining an instance of the builtin type 'list' (line 2978)
        list_85506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2978, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2978)
        # Adding element type (line 2978)
        # Getting the type of 'nucleus' (line 2978)
        nucleus_85507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2978, 29), 'nucleus', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2978, 28), list_85506, nucleus_85507)
        
        # Processing the call keyword arguments (line 2978)
        kwargs_85508 = {}
        # Getting the type of 'Hlist' (line 2978)
        Hlist_85505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2978, 22), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 2978)
        Hlist_call_result_85509 = invoke(stypy.reporting.localization.Localization(__file__, 2978, 22), Hlist_85505, *[list_85506], **kwargs_85508)
        
        # Assigning a type to the variable 'nucleus' (line 2978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2978, 12), 'nucleus', Hlist_call_result_85509)
        # SSA join for if statement (line 2963)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 2981):
        
        # Assigning a Call to a Name (line 2981):
        
        # Call to _get_font_constant_set(...): (line 2981)
        # Processing the call arguments (line 2981)
        # Getting the type of 'state' (line 2981)
        state_85511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2981, 43), 'state', False)
        # Processing the call keyword arguments (line 2981)
        kwargs_85512 = {}
        # Getting the type of '_get_font_constant_set' (line 2981)
        _get_font_constant_set_85510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2981, 20), '_get_font_constant_set', False)
        # Calling _get_font_constant_set(args, kwargs) (line 2981)
        _get_font_constant_set_call_result_85513 = invoke(stypy.reporting.localization.Localization(__file__, 2981, 20), _get_font_constant_set_85510, *[state_85511], **kwargs_85512)
        
        # Assigning a type to the variable 'constants' (line 2981)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2981, 8), 'constants', _get_font_constant_set_call_result_85513)
        
        # Assigning a Attribute to a Name (line 2982):
        
        # Assigning a Attribute to a Name (line 2982):
        # Getting the type of 'last_char' (line 2982)
        last_char_85514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2982, 22), 'last_char')
        # Obtaining the member 'height' of a type (line 2982)
        height_85515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2982, 22), last_char_85514, 'height')
        # Assigning a type to the variable 'lc_height' (line 2982)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2982, 8), 'lc_height', height_85515)
        
        # Assigning a Num to a Name (line 2983):
        
        # Assigning a Num to a Name (line 2983):
        int_85516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2983, 22), 'int')
        # Assigning a type to the variable 'lc_baseline' (line 2983)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2983, 8), 'lc_baseline', int_85516)
        
        
        # Call to is_dropsub(...): (line 2984)
        # Processing the call arguments (line 2984)
        # Getting the type of 'last_char' (line 2984)
        last_char_85519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2984, 27), 'last_char', False)
        # Processing the call keyword arguments (line 2984)
        kwargs_85520 = {}
        # Getting the type of 'self' (line 2984)
        self_85517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2984, 11), 'self', False)
        # Obtaining the member 'is_dropsub' of a type (line 2984)
        is_dropsub_85518 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2984, 11), self_85517, 'is_dropsub')
        # Calling is_dropsub(args, kwargs) (line 2984)
        is_dropsub_call_result_85521 = invoke(stypy.reporting.localization.Localization(__file__, 2984, 11), is_dropsub_85518, *[last_char_85519], **kwargs_85520)
        
        # Testing the type of an if condition (line 2984)
        if_condition_85522 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2984, 8), is_dropsub_call_result_85521)
        # Assigning a type to the variable 'if_condition_85522' (line 2984)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2984, 8), 'if_condition_85522', if_condition_85522)
        # SSA begins for if statement (line 2984)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Name (line 2985):
        
        # Assigning a Attribute to a Name (line 2985):
        # Getting the type of 'last_char' (line 2985)
        last_char_85523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2985, 26), 'last_char')
        # Obtaining the member 'depth' of a type (line 2985)
        depth_85524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2985, 26), last_char_85523, 'depth')
        # Assigning a type to the variable 'lc_baseline' (line 2985)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2985, 12), 'lc_baseline', depth_85524)
        # SSA join for if statement (line 2984)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 2988):
        
        # Assigning a BinOp to a Name (line 2988):
        # Getting the type of 'constants' (line 2988)
        constants_85525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2988, 20), 'constants')
        # Obtaining the member 'delta' of a type (line 2988)
        delta_85526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2988, 20), constants_85525, 'delta')
        # Getting the type of 'xHeight' (line 2988)
        xHeight_85527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2988, 38), 'xHeight')
        # Applying the binary operator '*' (line 2988)
        result_mul_85528 = python_operator(stypy.reporting.localization.Localization(__file__, 2988, 20), '*', delta_85526, xHeight_85527)
        
        # Assigning a type to the variable 'superkern' (line 2988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2988, 8), 'superkern', result_mul_85528)
        
        # Assigning a BinOp to a Name (line 2989):
        
        # Assigning a BinOp to a Name (line 2989):
        # Getting the type of 'constants' (line 2989)
        constants_85529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2989, 18), 'constants')
        # Obtaining the member 'delta' of a type (line 2989)
        delta_85530 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2989, 18), constants_85529, 'delta')
        # Getting the type of 'xHeight' (line 2989)
        xHeight_85531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2989, 36), 'xHeight')
        # Applying the binary operator '*' (line 2989)
        result_mul_85532 = python_operator(stypy.reporting.localization.Localization(__file__, 2989, 18), '*', delta_85530, xHeight_85531)
        
        # Assigning a type to the variable 'subkern' (line 2989)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2989, 8), 'subkern', result_mul_85532)
        
        
        # Call to is_slanted(...): (line 2990)
        # Processing the call arguments (line 2990)
        # Getting the type of 'last_char' (line 2990)
        last_char_85535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2990, 27), 'last_char', False)
        # Processing the call keyword arguments (line 2990)
        kwargs_85536 = {}
        # Getting the type of 'self' (line 2990)
        self_85533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2990, 11), 'self', False)
        # Obtaining the member 'is_slanted' of a type (line 2990)
        is_slanted_85534 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2990, 11), self_85533, 'is_slanted')
        # Calling is_slanted(args, kwargs) (line 2990)
        is_slanted_call_result_85537 = invoke(stypy.reporting.localization.Localization(__file__, 2990, 11), is_slanted_85534, *[last_char_85535], **kwargs_85536)
        
        # Testing the type of an if condition (line 2990)
        if_condition_85538 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2990, 8), is_slanted_call_result_85537)
        # Assigning a type to the variable 'if_condition_85538' (line 2990)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2990, 8), 'if_condition_85538', if_condition_85538)
        # SSA begins for if statement (line 2990)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'superkern' (line 2991)
        superkern_85539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2991, 12), 'superkern')
        # Getting the type of 'constants' (line 2991)
        constants_85540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2991, 25), 'constants')
        # Obtaining the member 'delta' of a type (line 2991)
        delta_85541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2991, 25), constants_85540, 'delta')
        # Getting the type of 'xHeight' (line 2991)
        xHeight_85542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2991, 43), 'xHeight')
        # Applying the binary operator '*' (line 2991)
        result_mul_85543 = python_operator(stypy.reporting.localization.Localization(__file__, 2991, 25), '*', delta_85541, xHeight_85542)
        
        # Applying the binary operator '+=' (line 2991)
        result_iadd_85544 = python_operator(stypy.reporting.localization.Localization(__file__, 2991, 12), '+=', superkern_85539, result_mul_85543)
        # Assigning a type to the variable 'superkern' (line 2991)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2991, 12), 'superkern', result_iadd_85544)
        
        
        # Getting the type of 'superkern' (line 2992)
        superkern_85545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2992, 12), 'superkern')
        # Getting the type of 'constants' (line 2992)
        constants_85546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2992, 26), 'constants')
        # Obtaining the member 'delta_slanted' of a type (line 2992)
        delta_slanted_85547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2992, 26), constants_85546, 'delta_slanted')
        # Getting the type of 'lc_height' (line 2993)
        lc_height_85548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2993, 27), 'lc_height')
        # Getting the type of 'xHeight' (line 2993)
        xHeight_85549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2993, 39), 'xHeight')
        float_85550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2993, 49), 'float')
        # Applying the binary operator '*' (line 2993)
        result_mul_85551 = python_operator(stypy.reporting.localization.Localization(__file__, 2993, 39), '*', xHeight_85549, float_85550)
        
        float_85552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2993, 54), 'float')
        # Applying the binary operator 'div' (line 2993)
        result_div_85553 = python_operator(stypy.reporting.localization.Localization(__file__, 2993, 52), 'div', result_mul_85551, float_85552)
        
        # Applying the binary operator '-' (line 2993)
        result_sub_85554 = python_operator(stypy.reporting.localization.Localization(__file__, 2993, 27), '-', lc_height_85548, result_div_85553)
        
        # Applying the binary operator '*' (line 2992)
        result_mul_85555 = python_operator(stypy.reporting.localization.Localization(__file__, 2992, 26), '*', delta_slanted_85547, result_sub_85554)
        
        # Applying the binary operator '+=' (line 2992)
        result_iadd_85556 = python_operator(stypy.reporting.localization.Localization(__file__, 2992, 12), '+=', superkern_85545, result_mul_85555)
        # Assigning a type to the variable 'superkern' (line 2992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2992, 12), 'superkern', result_iadd_85556)
        
        
        
        # Call to is_dropsub(...): (line 2994)
        # Processing the call arguments (line 2994)
        # Getting the type of 'last_char' (line 2994)
        last_char_85559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2994, 31), 'last_char', False)
        # Processing the call keyword arguments (line 2994)
        kwargs_85560 = {}
        # Getting the type of 'self' (line 2994)
        self_85557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2994, 15), 'self', False)
        # Obtaining the member 'is_dropsub' of a type (line 2994)
        is_dropsub_85558 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2994, 15), self_85557, 'is_dropsub')
        # Calling is_dropsub(args, kwargs) (line 2994)
        is_dropsub_call_result_85561 = invoke(stypy.reporting.localization.Localization(__file__, 2994, 15), is_dropsub_85558, *[last_char_85559], **kwargs_85560)
        
        # Testing the type of an if condition (line 2994)
        if_condition_85562 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2994, 12), is_dropsub_call_result_85561)
        # Assigning a type to the variable 'if_condition_85562' (line 2994)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2994, 12), 'if_condition_85562', if_condition_85562)
        # SSA begins for if statement (line 2994)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 2995):
        
        # Assigning a BinOp to a Name (line 2995):
        int_85563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2995, 27), 'int')
        # Getting the type of 'constants' (line 2995)
        constants_85564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2995, 31), 'constants')
        # Obtaining the member 'delta' of a type (line 2995)
        delta_85565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2995, 31), constants_85564, 'delta')
        # Applying the binary operator '*' (line 2995)
        result_mul_85566 = python_operator(stypy.reporting.localization.Localization(__file__, 2995, 27), '*', int_85563, delta_85565)
        
        # Getting the type of 'constants' (line 2996)
        constants_85567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2996, 27), 'constants')
        # Obtaining the member 'delta_integral' of a type (line 2996)
        delta_integral_85568 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2996, 27), constants_85567, 'delta_integral')
        # Applying the binary operator '-' (line 2995)
        result_sub_85569 = python_operator(stypy.reporting.localization.Localization(__file__, 2995, 27), '-', result_mul_85566, delta_integral_85568)
        
        # Getting the type of 'lc_height' (line 2996)
        lc_height_85570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2996, 55), 'lc_height')
        # Applying the binary operator '*' (line 2995)
        result_mul_85571 = python_operator(stypy.reporting.localization.Localization(__file__, 2995, 26), '*', result_sub_85569, lc_height_85570)
        
        # Assigning a type to the variable 'subkern' (line 2995)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2995, 16), 'subkern', result_mul_85571)
        
        # Assigning a BinOp to a Name (line 2997):
        
        # Assigning a BinOp to a Name (line 2997):
        int_85572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2997, 29), 'int')
        # Getting the type of 'constants' (line 2997)
        constants_85573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2997, 33), 'constants')
        # Obtaining the member 'delta' of a type (line 2997)
        delta_85574 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2997, 33), constants_85573, 'delta')
        # Applying the binary operator '*' (line 2997)
        result_mul_85575 = python_operator(stypy.reporting.localization.Localization(__file__, 2997, 29), '*', int_85572, delta_85574)
        
        # Getting the type of 'constants' (line 2998)
        constants_85576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2998, 29), 'constants')
        # Obtaining the member 'delta_integral' of a type (line 2998)
        delta_integral_85577 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2998, 29), constants_85576, 'delta_integral')
        # Applying the binary operator '+' (line 2997)
        result_add_85578 = python_operator(stypy.reporting.localization.Localization(__file__, 2997, 29), '+', result_mul_85575, delta_integral_85577)
        
        # Getting the type of 'lc_height' (line 2998)
        lc_height_85579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2998, 57), 'lc_height')
        # Applying the binary operator '*' (line 2997)
        result_mul_85580 = python_operator(stypy.reporting.localization.Localization(__file__, 2997, 28), '*', result_add_85578, lc_height_85579)
        
        # Assigning a type to the variable 'superkern' (line 2997)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2997, 16), 'superkern', result_mul_85580)
        # SSA branch for the else part of an if statement (line 2994)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Num to a Name (line 3000):
        
        # Assigning a Num to a Name (line 3000):
        int_85581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3000, 26), 'int')
        # Assigning a type to the variable 'subkern' (line 3000)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3000, 16), 'subkern', int_85581)
        # SSA join for if statement (line 2994)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2990)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Type idiom detected: calculating its left and rigth part (line 3002)
        # Getting the type of 'super' (line 3002)
        super_85582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3002, 11), 'super')
        # Getting the type of 'None' (line 3002)
        None_85583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3002, 20), 'None')
        
        (may_be_85584, more_types_in_union_85585) = may_be_none(super_85582, None_85583)

        if may_be_85584:

            if more_types_in_union_85585:
                # Runtime conditional SSA (line 3002)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 3004):
            
            # Assigning a Call to a Name (line 3004):
            
            # Call to Hlist(...): (line 3004)
            # Processing the call arguments (line 3004)
            
            # Obtaining an instance of the builtin type 'list' (line 3004)
            list_85587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3004, 22), 'list')
            # Adding type elements to the builtin type 'list' instance (line 3004)
            # Adding element type (line 3004)
            
            # Call to Kern(...): (line 3004)
            # Processing the call arguments (line 3004)
            # Getting the type of 'subkern' (line 3004)
            subkern_85589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3004, 28), 'subkern', False)
            # Processing the call keyword arguments (line 3004)
            kwargs_85590 = {}
            # Getting the type of 'Kern' (line 3004)
            Kern_85588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3004, 23), 'Kern', False)
            # Calling Kern(args, kwargs) (line 3004)
            Kern_call_result_85591 = invoke(stypy.reporting.localization.Localization(__file__, 3004, 23), Kern_85588, *[subkern_85589], **kwargs_85590)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3004, 22), list_85587, Kern_call_result_85591)
            # Adding element type (line 3004)
            # Getting the type of 'sub' (line 3004)
            sub_85592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3004, 38), 'sub', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3004, 22), list_85587, sub_85592)
            
            # Processing the call keyword arguments (line 3004)
            kwargs_85593 = {}
            # Getting the type of 'Hlist' (line 3004)
            Hlist_85586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3004, 16), 'Hlist', False)
            # Calling Hlist(args, kwargs) (line 3004)
            Hlist_call_result_85594 = invoke(stypy.reporting.localization.Localization(__file__, 3004, 16), Hlist_85586, *[list_85587], **kwargs_85593)
            
            # Assigning a type to the variable 'x' (line 3004)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3004, 12), 'x', Hlist_call_result_85594)
            
            # Call to shrink(...): (line 3005)
            # Processing the call keyword arguments (line 3005)
            kwargs_85597 = {}
            # Getting the type of 'x' (line 3005)
            x_85595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3005, 12), 'x', False)
            # Obtaining the member 'shrink' of a type (line 3005)
            shrink_85596 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3005, 12), x_85595, 'shrink')
            # Calling shrink(args, kwargs) (line 3005)
            shrink_call_result_85598 = invoke(stypy.reporting.localization.Localization(__file__, 3005, 12), shrink_85596, *[], **kwargs_85597)
            
            
            
            # Call to is_dropsub(...): (line 3006)
            # Processing the call arguments (line 3006)
            # Getting the type of 'last_char' (line 3006)
            last_char_85601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3006, 31), 'last_char', False)
            # Processing the call keyword arguments (line 3006)
            kwargs_85602 = {}
            # Getting the type of 'self' (line 3006)
            self_85599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3006, 15), 'self', False)
            # Obtaining the member 'is_dropsub' of a type (line 3006)
            is_dropsub_85600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3006, 15), self_85599, 'is_dropsub')
            # Calling is_dropsub(args, kwargs) (line 3006)
            is_dropsub_call_result_85603 = invoke(stypy.reporting.localization.Localization(__file__, 3006, 15), is_dropsub_85600, *[last_char_85601], **kwargs_85602)
            
            # Testing the type of an if condition (line 3006)
            if_condition_85604 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3006, 12), is_dropsub_call_result_85603)
            # Assigning a type to the variable 'if_condition_85604' (line 3006)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3006, 12), 'if_condition_85604', if_condition_85604)
            # SSA begins for if statement (line 3006)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a BinOp to a Name (line 3007):
            
            # Assigning a BinOp to a Name (line 3007):
            # Getting the type of 'lc_baseline' (line 3007)
            lc_baseline_85605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3007, 29), 'lc_baseline')
            # Getting the type of 'constants' (line 3007)
            constants_85606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3007, 43), 'constants')
            # Obtaining the member 'subdrop' of a type (line 3007)
            subdrop_85607 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3007, 43), constants_85606, 'subdrop')
            # Getting the type of 'xHeight' (line 3007)
            xHeight_85608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3007, 63), 'xHeight')
            # Applying the binary operator '*' (line 3007)
            result_mul_85609 = python_operator(stypy.reporting.localization.Localization(__file__, 3007, 43), '*', subdrop_85607, xHeight_85608)
            
            # Applying the binary operator '+' (line 3007)
            result_add_85610 = python_operator(stypy.reporting.localization.Localization(__file__, 3007, 29), '+', lc_baseline_85605, result_mul_85609)
            
            # Assigning a type to the variable 'shift_down' (line 3007)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3007, 16), 'shift_down', result_add_85610)
            # SSA branch for the else part of an if statement (line 3006)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a BinOp to a Name (line 3009):
            
            # Assigning a BinOp to a Name (line 3009):
            # Getting the type of 'constants' (line 3009)
            constants_85611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3009, 29), 'constants')
            # Obtaining the member 'sub1' of a type (line 3009)
            sub1_85612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3009, 29), constants_85611, 'sub1')
            # Getting the type of 'xHeight' (line 3009)
            xHeight_85613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3009, 46), 'xHeight')
            # Applying the binary operator '*' (line 3009)
            result_mul_85614 = python_operator(stypy.reporting.localization.Localization(__file__, 3009, 29), '*', sub1_85612, xHeight_85613)
            
            # Assigning a type to the variable 'shift_down' (line 3009)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3009, 16), 'shift_down', result_mul_85614)
            # SSA join for if statement (line 3006)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a Name to a Attribute (line 3010):
            
            # Assigning a Name to a Attribute (line 3010):
            # Getting the type of 'shift_down' (line 3010)
            shift_down_85615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3010, 29), 'shift_down')
            # Getting the type of 'x' (line 3010)
            x_85616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3010, 12), 'x')
            # Setting the type of the member 'shift_amount' of a type (line 3010)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3010, 12), x_85616, 'shift_amount', shift_down_85615)

            if more_types_in_union_85585:
                # Runtime conditional SSA for else branch (line 3002)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_85584) or more_types_in_union_85585):
            
            # Assigning a Call to a Name (line 3012):
            
            # Assigning a Call to a Name (line 3012):
            
            # Call to Hlist(...): (line 3012)
            # Processing the call arguments (line 3012)
            
            # Obtaining an instance of the builtin type 'list' (line 3012)
            list_85618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3012, 22), 'list')
            # Adding type elements to the builtin type 'list' instance (line 3012)
            # Adding element type (line 3012)
            
            # Call to Kern(...): (line 3012)
            # Processing the call arguments (line 3012)
            # Getting the type of 'superkern' (line 3012)
            superkern_85620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3012, 28), 'superkern', False)
            # Processing the call keyword arguments (line 3012)
            kwargs_85621 = {}
            # Getting the type of 'Kern' (line 3012)
            Kern_85619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3012, 23), 'Kern', False)
            # Calling Kern(args, kwargs) (line 3012)
            Kern_call_result_85622 = invoke(stypy.reporting.localization.Localization(__file__, 3012, 23), Kern_85619, *[superkern_85620], **kwargs_85621)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3012, 22), list_85618, Kern_call_result_85622)
            # Adding element type (line 3012)
            # Getting the type of 'super' (line 3012)
            super_85623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3012, 40), 'super', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3012, 22), list_85618, super_85623)
            
            # Processing the call keyword arguments (line 3012)
            kwargs_85624 = {}
            # Getting the type of 'Hlist' (line 3012)
            Hlist_85617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3012, 16), 'Hlist', False)
            # Calling Hlist(args, kwargs) (line 3012)
            Hlist_call_result_85625 = invoke(stypy.reporting.localization.Localization(__file__, 3012, 16), Hlist_85617, *[list_85618], **kwargs_85624)
            
            # Assigning a type to the variable 'x' (line 3012)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3012, 12), 'x', Hlist_call_result_85625)
            
            # Call to shrink(...): (line 3013)
            # Processing the call keyword arguments (line 3013)
            kwargs_85628 = {}
            # Getting the type of 'x' (line 3013)
            x_85626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3013, 12), 'x', False)
            # Obtaining the member 'shrink' of a type (line 3013)
            shrink_85627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3013, 12), x_85626, 'shrink')
            # Calling shrink(args, kwargs) (line 3013)
            shrink_call_result_85629 = invoke(stypy.reporting.localization.Localization(__file__, 3013, 12), shrink_85627, *[], **kwargs_85628)
            
            
            
            # Call to is_dropsub(...): (line 3014)
            # Processing the call arguments (line 3014)
            # Getting the type of 'last_char' (line 3014)
            last_char_85632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3014, 31), 'last_char', False)
            # Processing the call keyword arguments (line 3014)
            kwargs_85633 = {}
            # Getting the type of 'self' (line 3014)
            self_85630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3014, 15), 'self', False)
            # Obtaining the member 'is_dropsub' of a type (line 3014)
            is_dropsub_85631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3014, 15), self_85630, 'is_dropsub')
            # Calling is_dropsub(args, kwargs) (line 3014)
            is_dropsub_call_result_85634 = invoke(stypy.reporting.localization.Localization(__file__, 3014, 15), is_dropsub_85631, *[last_char_85632], **kwargs_85633)
            
            # Testing the type of an if condition (line 3014)
            if_condition_85635 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3014, 12), is_dropsub_call_result_85634)
            # Assigning a type to the variable 'if_condition_85635' (line 3014)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3014, 12), 'if_condition_85635', if_condition_85635)
            # SSA begins for if statement (line 3014)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a BinOp to a Name (line 3015):
            
            # Assigning a BinOp to a Name (line 3015):
            # Getting the type of 'lc_height' (line 3015)
            lc_height_85636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3015, 27), 'lc_height')
            # Getting the type of 'constants' (line 3015)
            constants_85637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3015, 39), 'constants')
            # Obtaining the member 'subdrop' of a type (line 3015)
            subdrop_85638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3015, 39), constants_85637, 'subdrop')
            # Getting the type of 'xHeight' (line 3015)
            xHeight_85639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3015, 59), 'xHeight')
            # Applying the binary operator '*' (line 3015)
            result_mul_85640 = python_operator(stypy.reporting.localization.Localization(__file__, 3015, 39), '*', subdrop_85638, xHeight_85639)
            
            # Applying the binary operator '-' (line 3015)
            result_sub_85641 = python_operator(stypy.reporting.localization.Localization(__file__, 3015, 27), '-', lc_height_85636, result_mul_85640)
            
            # Assigning a type to the variable 'shift_up' (line 3015)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3015, 16), 'shift_up', result_sub_85641)
            # SSA branch for the else part of an if statement (line 3014)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a BinOp to a Name (line 3017):
            
            # Assigning a BinOp to a Name (line 3017):
            # Getting the type of 'constants' (line 3017)
            constants_85642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3017, 27), 'constants')
            # Obtaining the member 'sup1' of a type (line 3017)
            sup1_85643 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3017, 27), constants_85642, 'sup1')
            # Getting the type of 'xHeight' (line 3017)
            xHeight_85644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3017, 44), 'xHeight')
            # Applying the binary operator '*' (line 3017)
            result_mul_85645 = python_operator(stypy.reporting.localization.Localization(__file__, 3017, 27), '*', sup1_85643, xHeight_85644)
            
            # Assigning a type to the variable 'shift_up' (line 3017)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3017, 16), 'shift_up', result_mul_85645)
            # SSA join for if statement (line 3014)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Type idiom detected: calculating its left and rigth part (line 3018)
            # Getting the type of 'sub' (line 3018)
            sub_85646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3018, 15), 'sub')
            # Getting the type of 'None' (line 3018)
            None_85647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3018, 22), 'None')
            
            (may_be_85648, more_types_in_union_85649) = may_be_none(sub_85646, None_85647)

            if may_be_85648:

                if more_types_in_union_85649:
                    # Runtime conditional SSA (line 3018)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a UnaryOp to a Attribute (line 3019):
                
                # Assigning a UnaryOp to a Attribute (line 3019):
                
                # Getting the type of 'shift_up' (line 3019)
                shift_up_85650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3019, 34), 'shift_up')
                # Applying the 'usub' unary operator (line 3019)
                result___neg___85651 = python_operator(stypy.reporting.localization.Localization(__file__, 3019, 33), 'usub', shift_up_85650)
                
                # Getting the type of 'x' (line 3019)
                x_85652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3019, 16), 'x')
                # Setting the type of the member 'shift_amount' of a type (line 3019)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3019, 16), x_85652, 'shift_amount', result___neg___85651)

                if more_types_in_union_85649:
                    # Runtime conditional SSA for else branch (line 3018)
                    module_type_store.open_ssa_branch('idiom else')



            if ((not may_be_85648) or more_types_in_union_85649):
                
                # Assigning a Call to a Name (line 3021):
                
                # Assigning a Call to a Name (line 3021):
                
                # Call to Hlist(...): (line 3021)
                # Processing the call arguments (line 3021)
                
                # Obtaining an instance of the builtin type 'list' (line 3021)
                list_85654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3021, 26), 'list')
                # Adding type elements to the builtin type 'list' instance (line 3021)
                # Adding element type (line 3021)
                
                # Call to Kern(...): (line 3021)
                # Processing the call arguments (line 3021)
                # Getting the type of 'subkern' (line 3021)
                subkern_85656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3021, 32), 'subkern', False)
                # Processing the call keyword arguments (line 3021)
                kwargs_85657 = {}
                # Getting the type of 'Kern' (line 3021)
                Kern_85655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3021, 27), 'Kern', False)
                # Calling Kern(args, kwargs) (line 3021)
                Kern_call_result_85658 = invoke(stypy.reporting.localization.Localization(__file__, 3021, 27), Kern_85655, *[subkern_85656], **kwargs_85657)
                
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3021, 26), list_85654, Kern_call_result_85658)
                # Adding element type (line 3021)
                # Getting the type of 'sub' (line 3021)
                sub_85659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3021, 41), 'sub', False)
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3021, 26), list_85654, sub_85659)
                
                # Processing the call keyword arguments (line 3021)
                kwargs_85660 = {}
                # Getting the type of 'Hlist' (line 3021)
                Hlist_85653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3021, 20), 'Hlist', False)
                # Calling Hlist(args, kwargs) (line 3021)
                Hlist_call_result_85661 = invoke(stypy.reporting.localization.Localization(__file__, 3021, 20), Hlist_85653, *[list_85654], **kwargs_85660)
                
                # Assigning a type to the variable 'y' (line 3021)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3021, 16), 'y', Hlist_call_result_85661)
                
                # Call to shrink(...): (line 3022)
                # Processing the call keyword arguments (line 3022)
                kwargs_85664 = {}
                # Getting the type of 'y' (line 3022)
                y_85662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3022, 16), 'y', False)
                # Obtaining the member 'shrink' of a type (line 3022)
                shrink_85663 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3022, 16), y_85662, 'shrink')
                # Calling shrink(args, kwargs) (line 3022)
                shrink_call_result_85665 = invoke(stypy.reporting.localization.Localization(__file__, 3022, 16), shrink_85663, *[], **kwargs_85664)
                
                
                
                # Call to is_dropsub(...): (line 3023)
                # Processing the call arguments (line 3023)
                # Getting the type of 'last_char' (line 3023)
                last_char_85668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3023, 35), 'last_char', False)
                # Processing the call keyword arguments (line 3023)
                kwargs_85669 = {}
                # Getting the type of 'self' (line 3023)
                self_85666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3023, 19), 'self', False)
                # Obtaining the member 'is_dropsub' of a type (line 3023)
                is_dropsub_85667 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3023, 19), self_85666, 'is_dropsub')
                # Calling is_dropsub(args, kwargs) (line 3023)
                is_dropsub_call_result_85670 = invoke(stypy.reporting.localization.Localization(__file__, 3023, 19), is_dropsub_85667, *[last_char_85668], **kwargs_85669)
                
                # Testing the type of an if condition (line 3023)
                if_condition_85671 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3023, 16), is_dropsub_call_result_85670)
                # Assigning a type to the variable 'if_condition_85671' (line 3023)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3023, 16), 'if_condition_85671', if_condition_85671)
                # SSA begins for if statement (line 3023)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a BinOp to a Name (line 3024):
                
                # Assigning a BinOp to a Name (line 3024):
                # Getting the type of 'lc_baseline' (line 3024)
                lc_baseline_85672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3024, 33), 'lc_baseline')
                # Getting the type of 'constants' (line 3024)
                constants_85673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3024, 47), 'constants')
                # Obtaining the member 'subdrop' of a type (line 3024)
                subdrop_85674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3024, 47), constants_85673, 'subdrop')
                # Getting the type of 'xHeight' (line 3024)
                xHeight_85675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3024, 67), 'xHeight')
                # Applying the binary operator '*' (line 3024)
                result_mul_85676 = python_operator(stypy.reporting.localization.Localization(__file__, 3024, 47), '*', subdrop_85674, xHeight_85675)
                
                # Applying the binary operator '+' (line 3024)
                result_add_85677 = python_operator(stypy.reporting.localization.Localization(__file__, 3024, 33), '+', lc_baseline_85672, result_mul_85676)
                
                # Assigning a type to the variable 'shift_down' (line 3024)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3024, 20), 'shift_down', result_add_85677)
                # SSA branch for the else part of an if statement (line 3023)
                module_type_store.open_ssa_branch('else')
                
                # Assigning a BinOp to a Name (line 3026):
                
                # Assigning a BinOp to a Name (line 3026):
                # Getting the type of 'constants' (line 3026)
                constants_85678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3026, 33), 'constants')
                # Obtaining the member 'sub2' of a type (line 3026)
                sub2_85679 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3026, 33), constants_85678, 'sub2')
                # Getting the type of 'xHeight' (line 3026)
                xHeight_85680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3026, 50), 'xHeight')
                # Applying the binary operator '*' (line 3026)
                result_mul_85681 = python_operator(stypy.reporting.localization.Localization(__file__, 3026, 33), '*', sub2_85679, xHeight_85680)
                
                # Assigning a type to the variable 'shift_down' (line 3026)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3026, 20), 'shift_down', result_mul_85681)
                # SSA join for if statement (line 3023)
                module_type_store = module_type_store.join_ssa_context()
                
                
                # Assigning a BinOp to a Name (line 3028):
                
                # Assigning a BinOp to a Name (line 3028):
                float_85682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3028, 23), 'float')
                # Getting the type of 'rule_thickness' (line 3028)
                rule_thickness_85683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3028, 29), 'rule_thickness')
                # Applying the binary operator '*' (line 3028)
                result_mul_85684 = python_operator(stypy.reporting.localization.Localization(__file__, 3028, 23), '*', float_85682, rule_thickness_85683)
                
                # Getting the type of 'shift_up' (line 3029)
                shift_up_85685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3029, 25), 'shift_up')
                # Getting the type of 'x' (line 3029)
                x_85686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3029, 36), 'x')
                # Obtaining the member 'depth' of a type (line 3029)
                depth_85687 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3029, 36), x_85686, 'depth')
                # Applying the binary operator '-' (line 3029)
                result_sub_85688 = python_operator(stypy.reporting.localization.Localization(__file__, 3029, 25), '-', shift_up_85685, depth_85687)
                
                # Getting the type of 'y' (line 3029)
                y_85689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3029, 48), 'y')
                # Obtaining the member 'height' of a type (line 3029)
                height_85690 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3029, 48), y_85689, 'height')
                # Getting the type of 'shift_down' (line 3029)
                shift_down_85691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3029, 59), 'shift_down')
                # Applying the binary operator '-' (line 3029)
                result_sub_85692 = python_operator(stypy.reporting.localization.Localization(__file__, 3029, 48), '-', height_85690, shift_down_85691)
                
                # Applying the binary operator '-' (line 3029)
                result_sub_85693 = python_operator(stypy.reporting.localization.Localization(__file__, 3029, 24), '-', result_sub_85688, result_sub_85692)
                
                # Applying the binary operator '-' (line 3028)
                result_sub_85694 = python_operator(stypy.reporting.localization.Localization(__file__, 3028, 23), '-', result_mul_85684, result_sub_85693)
                
                # Assigning a type to the variable 'clr' (line 3028)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3028, 16), 'clr', result_sub_85694)
                
                
                # Getting the type of 'clr' (line 3030)
                clr_85695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3030, 19), 'clr')
                float_85696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3030, 25), 'float')
                # Applying the binary operator '>' (line 3030)
                result_gt_85697 = python_operator(stypy.reporting.localization.Localization(__file__, 3030, 19), '>', clr_85695, float_85696)
                
                # Testing the type of an if condition (line 3030)
                if_condition_85698 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3030, 16), result_gt_85697)
                # Assigning a type to the variable 'if_condition_85698' (line 3030)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3030, 16), 'if_condition_85698', if_condition_85698)
                # SSA begins for if statement (line 3030)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Getting the type of 'shift_up' (line 3031)
                shift_up_85699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3031, 20), 'shift_up')
                # Getting the type of 'clr' (line 3031)
                clr_85700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3031, 32), 'clr')
                # Applying the binary operator '+=' (line 3031)
                result_iadd_85701 = python_operator(stypy.reporting.localization.Localization(__file__, 3031, 20), '+=', shift_up_85699, clr_85700)
                # Assigning a type to the variable 'shift_up' (line 3031)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3031, 20), 'shift_up', result_iadd_85701)
                
                # SSA join for if statement (line 3030)
                module_type_store = module_type_store.join_ssa_context()
                
                
                # Assigning a Call to a Name (line 3032):
                
                # Assigning a Call to a Name (line 3032):
                
                # Call to Vlist(...): (line 3032)
                # Processing the call arguments (line 3032)
                
                # Obtaining an instance of the builtin type 'list' (line 3032)
                list_85703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3032, 26), 'list')
                # Adding type elements to the builtin type 'list' instance (line 3032)
                # Adding element type (line 3032)
                # Getting the type of 'x' (line 3032)
                x_85704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3032, 27), 'x', False)
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3032, 26), list_85703, x_85704)
                # Adding element type (line 3032)
                
                # Call to Kern(...): (line 3033)
                # Processing the call arguments (line 3033)
                # Getting the type of 'shift_up' (line 3033)
                shift_up_85706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3033, 33), 'shift_up', False)
                # Getting the type of 'x' (line 3033)
                x_85707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3033, 44), 'x', False)
                # Obtaining the member 'depth' of a type (line 3033)
                depth_85708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3033, 44), x_85707, 'depth')
                # Applying the binary operator '-' (line 3033)
                result_sub_85709 = python_operator(stypy.reporting.localization.Localization(__file__, 3033, 33), '-', shift_up_85706, depth_85708)
                
                # Getting the type of 'y' (line 3033)
                y_85710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3033, 56), 'y', False)
                # Obtaining the member 'height' of a type (line 3033)
                height_85711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3033, 56), y_85710, 'height')
                # Getting the type of 'shift_down' (line 3033)
                shift_down_85712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3033, 67), 'shift_down', False)
                # Applying the binary operator '-' (line 3033)
                result_sub_85713 = python_operator(stypy.reporting.localization.Localization(__file__, 3033, 56), '-', height_85711, shift_down_85712)
                
                # Applying the binary operator '-' (line 3033)
                result_sub_85714 = python_operator(stypy.reporting.localization.Localization(__file__, 3033, 32), '-', result_sub_85709, result_sub_85713)
                
                # Processing the call keyword arguments (line 3033)
                kwargs_85715 = {}
                # Getting the type of 'Kern' (line 3033)
                Kern_85705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3033, 27), 'Kern', False)
                # Calling Kern(args, kwargs) (line 3033)
                Kern_call_result_85716 = invoke(stypy.reporting.localization.Localization(__file__, 3033, 27), Kern_85705, *[result_sub_85714], **kwargs_85715)
                
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3032, 26), list_85703, Kern_call_result_85716)
                # Adding element type (line 3032)
                # Getting the type of 'y' (line 3034)
                y_85717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3034, 27), 'y', False)
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3032, 26), list_85703, y_85717)
                
                # Processing the call keyword arguments (line 3032)
                kwargs_85718 = {}
                # Getting the type of 'Vlist' (line 3032)
                Vlist_85702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3032, 20), 'Vlist', False)
                # Calling Vlist(args, kwargs) (line 3032)
                Vlist_call_result_85719 = invoke(stypy.reporting.localization.Localization(__file__, 3032, 20), Vlist_85702, *[list_85703], **kwargs_85718)
                
                # Assigning a type to the variable 'x' (line 3032)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3032, 16), 'x', Vlist_call_result_85719)
                
                # Assigning a Name to a Attribute (line 3035):
                
                # Assigning a Name to a Attribute (line 3035):
                # Getting the type of 'shift_down' (line 3035)
                shift_down_85720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3035, 33), 'shift_down')
                # Getting the type of 'x' (line 3035)
                x_85721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3035, 16), 'x')
                # Setting the type of the member 'shift_amount' of a type (line 3035)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3035, 16), x_85721, 'shift_amount', shift_down_85720)

                if (may_be_85648 and more_types_in_union_85649):
                    # SSA join for if statement (line 3018)
                    module_type_store = module_type_store.join_ssa_context()


            

            if (may_be_85584 and more_types_in_union_85585):
                # SSA join for if statement (line 3002)
                module_type_store = module_type_store.join_ssa_context()


        
        
        
        
        # Call to is_dropsub(...): (line 3037)
        # Processing the call arguments (line 3037)
        # Getting the type of 'last_char' (line 3037)
        last_char_85724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 31), 'last_char', False)
        # Processing the call keyword arguments (line 3037)
        kwargs_85725 = {}
        # Getting the type of 'self' (line 3037)
        self_85722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 15), 'self', False)
        # Obtaining the member 'is_dropsub' of a type (line 3037)
        is_dropsub_85723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3037, 15), self_85722, 'is_dropsub')
        # Calling is_dropsub(args, kwargs) (line 3037)
        is_dropsub_call_result_85726 = invoke(stypy.reporting.localization.Localization(__file__, 3037, 15), is_dropsub_85723, *[last_char_85724], **kwargs_85725)
        
        # Applying the 'not' unary operator (line 3037)
        result_not__85727 = python_operator(stypy.reporting.localization.Localization(__file__, 3037, 11), 'not', is_dropsub_call_result_85726)
        
        # Testing the type of an if condition (line 3037)
        if_condition_85728 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3037, 8), result_not__85727)
        # Assigning a type to the variable 'if_condition_85728' (line 3037)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3037, 8), 'if_condition_85728', if_condition_85728)
        # SSA begins for if statement (line 3037)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'x' (line 3038)
        x_85729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3038, 12), 'x')
        # Obtaining the member 'width' of a type (line 3038)
        width_85730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3038, 12), x_85729, 'width')
        # Getting the type of 'constants' (line 3038)
        constants_85731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3038, 23), 'constants')
        # Obtaining the member 'script_space' of a type (line 3038)
        script_space_85732 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3038, 23), constants_85731, 'script_space')
        # Getting the type of 'xHeight' (line 3038)
        xHeight_85733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3038, 48), 'xHeight')
        # Applying the binary operator '*' (line 3038)
        result_mul_85734 = python_operator(stypy.reporting.localization.Localization(__file__, 3038, 23), '*', script_space_85732, xHeight_85733)
        
        # Applying the binary operator '+=' (line 3038)
        result_iadd_85735 = python_operator(stypy.reporting.localization.Localization(__file__, 3038, 12), '+=', width_85730, result_mul_85734)
        # Getting the type of 'x' (line 3038)
        x_85736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3038, 12), 'x')
        # Setting the type of the member 'width' of a type (line 3038)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3038, 12), x_85736, 'width', result_iadd_85735)
        
        # SSA join for if statement (line 3037)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 3039):
        
        # Assigning a Call to a Name (line 3039):
        
        # Call to Hlist(...): (line 3039)
        # Processing the call arguments (line 3039)
        
        # Obtaining an instance of the builtin type 'list' (line 3039)
        list_85738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3039, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3039)
        # Adding element type (line 3039)
        # Getting the type of 'nucleus' (line 3039)
        nucleus_85739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3039, 24), 'nucleus', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3039, 23), list_85738, nucleus_85739)
        # Adding element type (line 3039)
        # Getting the type of 'x' (line 3039)
        x_85740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3039, 33), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3039, 23), list_85738, x_85740)
        
        # Processing the call keyword arguments (line 3039)
        kwargs_85741 = {}
        # Getting the type of 'Hlist' (line 3039)
        Hlist_85737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3039, 17), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 3039)
        Hlist_call_result_85742 = invoke(stypy.reporting.localization.Localization(__file__, 3039, 17), Hlist_85737, *[list_85738], **kwargs_85741)
        
        # Assigning a type to the variable 'result' (line 3039)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3039, 8), 'result', Hlist_call_result_85742)
        
        # Obtaining an instance of the builtin type 'list' (line 3041)
        list_85743 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3041, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3041)
        # Adding element type (line 3041)
        # Getting the type of 'result' (line 3041)
        result_85744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3041, 16), 'result')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3041, 15), list_85743, result_85744)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3041)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3041, 8), 'stypy_return_type', list_85743)
        
        # ################# End of 'subsuper(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'subsuper' in the type store
        # Getting the type of 'stypy_return_type' (line 2855)
        stypy_return_type_85745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2855, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_85745)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'subsuper'
        return stypy_return_type_85745


    @norecursion
    def _genfrac(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_genfrac'
        module_type_store = module_type_store.open_function_context('_genfrac', 3043, 4, False)
        # Assigning a type to the variable 'self' (line 3044)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3044, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser._genfrac.__dict__.__setitem__('stypy_localization', localization)
        Parser._genfrac.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser._genfrac.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser._genfrac.__dict__.__setitem__('stypy_function_name', 'Parser._genfrac')
        Parser._genfrac.__dict__.__setitem__('stypy_param_names_list', ['ldelim', 'rdelim', 'rule', 'style', 'num', 'den'])
        Parser._genfrac.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser._genfrac.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser._genfrac.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser._genfrac.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser._genfrac.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser._genfrac.__dict__.__setitem__('stypy_declared_arg_number', 7)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser._genfrac', ['ldelim', 'rdelim', 'rule', 'style', 'num', 'den'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_genfrac', localization, ['ldelim', 'rdelim', 'rule', 'style', 'num', 'den'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_genfrac(...)' code ##################

        
        # Assigning a Call to a Name (line 3044):
        
        # Assigning a Call to a Name (line 3044):
        
        # Call to get_state(...): (line 3044)
        # Processing the call keyword arguments (line 3044)
        kwargs_85748 = {}
        # Getting the type of 'self' (line 3044)
        self_85746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3044, 16), 'self', False)
        # Obtaining the member 'get_state' of a type (line 3044)
        get_state_85747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3044, 16), self_85746, 'get_state')
        # Calling get_state(args, kwargs) (line 3044)
        get_state_call_result_85749 = invoke(stypy.reporting.localization.Localization(__file__, 3044, 16), get_state_85747, *[], **kwargs_85748)
        
        # Assigning a type to the variable 'state' (line 3044)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3044, 8), 'state', get_state_call_result_85749)
        
        # Assigning a Call to a Name (line 3045):
        
        # Assigning a Call to a Name (line 3045):
        
        # Call to get_underline_thickness(...): (line 3045)
        # Processing the call arguments (line 3045)
        # Getting the type of 'state' (line 3046)
        state_85753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3046, 12), 'state', False)
        # Obtaining the member 'font' of a type (line 3046)
        font_85754 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3046, 12), state_85753, 'font')
        # Getting the type of 'state' (line 3046)
        state_85755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3046, 24), 'state', False)
        # Obtaining the member 'fontsize' of a type (line 3046)
        fontsize_85756 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3046, 24), state_85755, 'fontsize')
        # Getting the type of 'state' (line 3046)
        state_85757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3046, 40), 'state', False)
        # Obtaining the member 'dpi' of a type (line 3046)
        dpi_85758 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3046, 40), state_85757, 'dpi')
        # Processing the call keyword arguments (line 3045)
        kwargs_85759 = {}
        # Getting the type of 'state' (line 3045)
        state_85750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3045, 20), 'state', False)
        # Obtaining the member 'font_output' of a type (line 3045)
        font_output_85751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3045, 20), state_85750, 'font_output')
        # Obtaining the member 'get_underline_thickness' of a type (line 3045)
        get_underline_thickness_85752 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3045, 20), font_output_85751, 'get_underline_thickness')
        # Calling get_underline_thickness(args, kwargs) (line 3045)
        get_underline_thickness_call_result_85760 = invoke(stypy.reporting.localization.Localization(__file__, 3045, 20), get_underline_thickness_85752, *[font_85754, fontsize_85756, dpi_85758], **kwargs_85759)
        
        # Assigning a type to the variable 'thickness' (line 3045)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3045, 8), 'thickness', get_underline_thickness_call_result_85760)
        
        # Assigning a Call to a Name (line 3048):
        
        # Assigning a Call to a Name (line 3048):
        
        # Call to float(...): (line 3048)
        # Processing the call arguments (line 3048)
        # Getting the type of 'rule' (line 3048)
        rule_85762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3048, 21), 'rule', False)
        # Processing the call keyword arguments (line 3048)
        kwargs_85763 = {}
        # Getting the type of 'float' (line 3048)
        float_85761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3048, 15), 'float', False)
        # Calling float(args, kwargs) (line 3048)
        float_call_result_85764 = invoke(stypy.reporting.localization.Localization(__file__, 3048, 15), float_85761, *[rule_85762], **kwargs_85763)
        
        # Assigning a type to the variable 'rule' (line 3048)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3048, 8), 'rule', float_call_result_85764)
        
        
        # Getting the type of 'style' (line 3051)
        style_85765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3051, 11), 'style')
        
        # Obtaining the type of the subscript
        unicode_85766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3051, 42), 'unicode', u'displaystyle')
        # Getting the type of 'self' (line 3051)
        self_85767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3051, 20), 'self')
        # Obtaining the member '_math_style_dict' of a type (line 3051)
        _math_style_dict_85768 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3051, 20), self_85767, '_math_style_dict')
        # Obtaining the member '__getitem__' of a type (line 3051)
        getitem___85769 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3051, 20), _math_style_dict_85768, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3051)
        subscript_call_result_85770 = invoke(stypy.reporting.localization.Localization(__file__, 3051, 20), getitem___85769, unicode_85766)
        
        # Applying the binary operator '!=' (line 3051)
        result_ne_85771 = python_operator(stypy.reporting.localization.Localization(__file__, 3051, 11), '!=', style_85765, subscript_call_result_85770)
        
        # Testing the type of an if condition (line 3051)
        if_condition_85772 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3051, 8), result_ne_85771)
        # Assigning a type to the variable 'if_condition_85772' (line 3051)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3051, 8), 'if_condition_85772', if_condition_85772)
        # SSA begins for if statement (line 3051)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to shrink(...): (line 3052)
        # Processing the call keyword arguments (line 3052)
        kwargs_85775 = {}
        # Getting the type of 'num' (line 3052)
        num_85773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3052, 12), 'num', False)
        # Obtaining the member 'shrink' of a type (line 3052)
        shrink_85774 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3052, 12), num_85773, 'shrink')
        # Calling shrink(args, kwargs) (line 3052)
        shrink_call_result_85776 = invoke(stypy.reporting.localization.Localization(__file__, 3052, 12), shrink_85774, *[], **kwargs_85775)
        
        
        # Call to shrink(...): (line 3053)
        # Processing the call keyword arguments (line 3053)
        kwargs_85779 = {}
        # Getting the type of 'den' (line 3053)
        den_85777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3053, 12), 'den', False)
        # Obtaining the member 'shrink' of a type (line 3053)
        shrink_85778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3053, 12), den_85777, 'shrink')
        # Calling shrink(args, kwargs) (line 3053)
        shrink_call_result_85780 = invoke(stypy.reporting.localization.Localization(__file__, 3053, 12), shrink_85778, *[], **kwargs_85779)
        
        # SSA join for if statement (line 3051)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 3054):
        
        # Assigning a Call to a Name (line 3054):
        
        # Call to HCentered(...): (line 3054)
        # Processing the call arguments (line 3054)
        
        # Obtaining an instance of the builtin type 'list' (line 3054)
        list_85782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3054, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3054)
        # Adding element type (line 3054)
        # Getting the type of 'num' (line 3054)
        num_85783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3054, 26), 'num', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3054, 25), list_85782, num_85783)
        
        # Processing the call keyword arguments (line 3054)
        kwargs_85784 = {}
        # Getting the type of 'HCentered' (line 3054)
        HCentered_85781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3054, 15), 'HCentered', False)
        # Calling HCentered(args, kwargs) (line 3054)
        HCentered_call_result_85785 = invoke(stypy.reporting.localization.Localization(__file__, 3054, 15), HCentered_85781, *[list_85782], **kwargs_85784)
        
        # Assigning a type to the variable 'cnum' (line 3054)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3054, 8), 'cnum', HCentered_call_result_85785)
        
        # Assigning a Call to a Name (line 3055):
        
        # Assigning a Call to a Name (line 3055):
        
        # Call to HCentered(...): (line 3055)
        # Processing the call arguments (line 3055)
        
        # Obtaining an instance of the builtin type 'list' (line 3055)
        list_85787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3055, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3055)
        # Adding element type (line 3055)
        # Getting the type of 'den' (line 3055)
        den_85788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3055, 26), 'den', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3055, 25), list_85787, den_85788)
        
        # Processing the call keyword arguments (line 3055)
        kwargs_85789 = {}
        # Getting the type of 'HCentered' (line 3055)
        HCentered_85786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3055, 15), 'HCentered', False)
        # Calling HCentered(args, kwargs) (line 3055)
        HCentered_call_result_85790 = invoke(stypy.reporting.localization.Localization(__file__, 3055, 15), HCentered_85786, *[list_85787], **kwargs_85789)
        
        # Assigning a type to the variable 'cden' (line 3055)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3055, 8), 'cden', HCentered_call_result_85790)
        
        # Assigning a Call to a Name (line 3056):
        
        # Assigning a Call to a Name (line 3056):
        
        # Call to max(...): (line 3056)
        # Processing the call arguments (line 3056)
        # Getting the type of 'num' (line 3056)
        num_85792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3056, 20), 'num', False)
        # Obtaining the member 'width' of a type (line 3056)
        width_85793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3056, 20), num_85792, 'width')
        # Getting the type of 'den' (line 3056)
        den_85794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3056, 31), 'den', False)
        # Obtaining the member 'width' of a type (line 3056)
        width_85795 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3056, 31), den_85794, 'width')
        # Processing the call keyword arguments (line 3056)
        kwargs_85796 = {}
        # Getting the type of 'max' (line 3056)
        max_85791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3056, 16), 'max', False)
        # Calling max(args, kwargs) (line 3056)
        max_call_result_85797 = invoke(stypy.reporting.localization.Localization(__file__, 3056, 16), max_85791, *[width_85793, width_85795], **kwargs_85796)
        
        # Assigning a type to the variable 'width' (line 3056)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3056, 8), 'width', max_call_result_85797)
        
        # Call to hpack(...): (line 3057)
        # Processing the call arguments (line 3057)
        # Getting the type of 'width' (line 3057)
        width_85800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3057, 19), 'width', False)
        unicode_85801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3057, 26), 'unicode', u'exactly')
        # Processing the call keyword arguments (line 3057)
        kwargs_85802 = {}
        # Getting the type of 'cnum' (line 3057)
        cnum_85798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3057, 8), 'cnum', False)
        # Obtaining the member 'hpack' of a type (line 3057)
        hpack_85799 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3057, 8), cnum_85798, 'hpack')
        # Calling hpack(args, kwargs) (line 3057)
        hpack_call_result_85803 = invoke(stypy.reporting.localization.Localization(__file__, 3057, 8), hpack_85799, *[width_85800, unicode_85801], **kwargs_85802)
        
        
        # Call to hpack(...): (line 3058)
        # Processing the call arguments (line 3058)
        # Getting the type of 'width' (line 3058)
        width_85806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3058, 19), 'width', False)
        unicode_85807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3058, 26), 'unicode', u'exactly')
        # Processing the call keyword arguments (line 3058)
        kwargs_85808 = {}
        # Getting the type of 'cden' (line 3058)
        cden_85804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3058, 8), 'cden', False)
        # Obtaining the member 'hpack' of a type (line 3058)
        hpack_85805 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3058, 8), cden_85804, 'hpack')
        # Calling hpack(args, kwargs) (line 3058)
        hpack_call_result_85809 = invoke(stypy.reporting.localization.Localization(__file__, 3058, 8), hpack_85805, *[width_85806, unicode_85807], **kwargs_85808)
        
        
        # Assigning a Call to a Name (line 3059):
        
        # Assigning a Call to a Name (line 3059):
        
        # Call to Vlist(...): (line 3059)
        # Processing the call arguments (line 3059)
        
        # Obtaining an instance of the builtin type 'list' (line 3059)
        list_85811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3059, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3059)
        # Adding element type (line 3059)
        # Getting the type of 'cnum' (line 3059)
        cnum_85812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3059, 23), 'cnum', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3059, 22), list_85811, cnum_85812)
        # Adding element type (line 3059)
        
        # Call to Vbox(...): (line 3060)
        # Processing the call arguments (line 3060)
        int_85814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3060, 28), 'int')
        # Getting the type of 'thickness' (line 3060)
        thickness_85815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3060, 31), 'thickness', False)
        float_85816 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3060, 43), 'float')
        # Applying the binary operator '*' (line 3060)
        result_mul_85817 = python_operator(stypy.reporting.localization.Localization(__file__, 3060, 31), '*', thickness_85815, float_85816)
        
        # Processing the call keyword arguments (line 3060)
        kwargs_85818 = {}
        # Getting the type of 'Vbox' (line 3060)
        Vbox_85813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3060, 23), 'Vbox', False)
        # Calling Vbox(args, kwargs) (line 3060)
        Vbox_call_result_85819 = invoke(stypy.reporting.localization.Localization(__file__, 3060, 23), Vbox_85813, *[int_85814, result_mul_85817], **kwargs_85818)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3059, 22), list_85811, Vbox_call_result_85819)
        # Adding element type (line 3059)
        
        # Call to Hrule(...): (line 3061)
        # Processing the call arguments (line 3061)
        # Getting the type of 'state' (line 3061)
        state_85821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3061, 29), 'state', False)
        # Getting the type of 'rule' (line 3061)
        rule_85822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3061, 36), 'rule', False)
        # Processing the call keyword arguments (line 3061)
        kwargs_85823 = {}
        # Getting the type of 'Hrule' (line 3061)
        Hrule_85820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3061, 23), 'Hrule', False)
        # Calling Hrule(args, kwargs) (line 3061)
        Hrule_call_result_85824 = invoke(stypy.reporting.localization.Localization(__file__, 3061, 23), Hrule_85820, *[state_85821, rule_85822], **kwargs_85823)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3059, 22), list_85811, Hrule_call_result_85824)
        # Adding element type (line 3059)
        
        # Call to Vbox(...): (line 3062)
        # Processing the call arguments (line 3062)
        int_85826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3062, 28), 'int')
        # Getting the type of 'thickness' (line 3062)
        thickness_85827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3062, 31), 'thickness', False)
        float_85828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3062, 43), 'float')
        # Applying the binary operator '*' (line 3062)
        result_mul_85829 = python_operator(stypy.reporting.localization.Localization(__file__, 3062, 31), '*', thickness_85827, float_85828)
        
        # Processing the call keyword arguments (line 3062)
        kwargs_85830 = {}
        # Getting the type of 'Vbox' (line 3062)
        Vbox_85825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3062, 23), 'Vbox', False)
        # Calling Vbox(args, kwargs) (line 3062)
        Vbox_call_result_85831 = invoke(stypy.reporting.localization.Localization(__file__, 3062, 23), Vbox_85825, *[int_85826, result_mul_85829], **kwargs_85830)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3059, 22), list_85811, Vbox_call_result_85831)
        # Adding element type (line 3059)
        # Getting the type of 'cden' (line 3063)
        cden_85832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3063, 23), 'cden', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3059, 22), list_85811, cden_85832)
        
        # Processing the call keyword arguments (line 3059)
        kwargs_85833 = {}
        # Getting the type of 'Vlist' (line 3059)
        Vlist_85810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3059, 16), 'Vlist', False)
        # Calling Vlist(args, kwargs) (line 3059)
        Vlist_call_result_85834 = invoke(stypy.reporting.localization.Localization(__file__, 3059, 16), Vlist_85810, *[list_85811], **kwargs_85833)
        
        # Assigning a type to the variable 'vlist' (line 3059)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3059, 8), 'vlist', Vlist_call_result_85834)
        
        # Assigning a Call to a Name (line 3068):
        
        # Assigning a Call to a Name (line 3068):
        
        # Call to get_metrics(...): (line 3068)
        # Processing the call arguments (line 3068)
        # Getting the type of 'state' (line 3069)
        state_85838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3069, 12), 'state', False)
        # Obtaining the member 'font' of a type (line 3069)
        font_85839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3069, 12), state_85838, 'font')
        
        # Obtaining the type of the subscript
        unicode_85840 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3069, 33), 'unicode', u'mathtext.default')
        # Getting the type of 'rcParams' (line 3069)
        rcParams_85841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3069, 24), 'rcParams', False)
        # Obtaining the member '__getitem__' of a type (line 3069)
        getitem___85842 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3069, 24), rcParams_85841, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3069)
        subscript_call_result_85843 = invoke(stypy.reporting.localization.Localization(__file__, 3069, 24), getitem___85842, unicode_85840)
        
        unicode_85844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3070, 12), 'unicode', u'=')
        # Getting the type of 'state' (line 3070)
        state_85845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3070, 17), 'state', False)
        # Obtaining the member 'fontsize' of a type (line 3070)
        fontsize_85846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3070, 17), state_85845, 'fontsize')
        # Getting the type of 'state' (line 3070)
        state_85847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3070, 33), 'state', False)
        # Obtaining the member 'dpi' of a type (line 3070)
        dpi_85848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3070, 33), state_85847, 'dpi')
        # Processing the call keyword arguments (line 3068)
        kwargs_85849 = {}
        # Getting the type of 'state' (line 3068)
        state_85835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3068, 18), 'state', False)
        # Obtaining the member 'font_output' of a type (line 3068)
        font_output_85836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3068, 18), state_85835, 'font_output')
        # Obtaining the member 'get_metrics' of a type (line 3068)
        get_metrics_85837 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3068, 18), font_output_85836, 'get_metrics')
        # Calling get_metrics(args, kwargs) (line 3068)
        get_metrics_call_result_85850 = invoke(stypy.reporting.localization.Localization(__file__, 3068, 18), get_metrics_85837, *[font_85839, subscript_call_result_85843, unicode_85844, fontsize_85846, dpi_85848], **kwargs_85849)
        
        # Assigning a type to the variable 'metrics' (line 3068)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3068, 8), 'metrics', get_metrics_call_result_85850)
        
        # Assigning a BinOp to a Name (line 3071):
        
        # Assigning a BinOp to a Name (line 3071):
        # Getting the type of 'cden' (line 3071)
        cden_85851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3071, 17), 'cden')
        # Obtaining the member 'height' of a type (line 3071)
        height_85852 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3071, 17), cden_85851, 'height')
        # Getting the type of 'metrics' (line 3072)
        metrics_85853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3072, 19), 'metrics')
        # Obtaining the member 'ymax' of a type (line 3072)
        ymax_85854 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3072, 19), metrics_85853, 'ymax')
        # Getting the type of 'metrics' (line 3072)
        metrics_85855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3072, 34), 'metrics')
        # Obtaining the member 'ymin' of a type (line 3072)
        ymin_85856 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3072, 34), metrics_85855, 'ymin')
        # Applying the binary operator '+' (line 3072)
        result_add_85857 = python_operator(stypy.reporting.localization.Localization(__file__, 3072, 19), '+', ymax_85854, ymin_85856)
        
        int_85858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3072, 50), 'int')
        # Applying the binary operator 'div' (line 3072)
        result_div_85859 = python_operator(stypy.reporting.localization.Localization(__file__, 3072, 18), 'div', result_add_85857, int_85858)
        
        # Getting the type of 'thickness' (line 3073)
        thickness_85860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3073, 18), 'thickness')
        float_85861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3073, 30), 'float')
        # Applying the binary operator '*' (line 3073)
        result_mul_85862 = python_operator(stypy.reporting.localization.Localization(__file__, 3073, 18), '*', thickness_85860, float_85861)
        
        # Applying the binary operator '-' (line 3072)
        result_sub_85863 = python_operator(stypy.reporting.localization.Localization(__file__, 3072, 18), '-', result_div_85859, result_mul_85862)
        
        # Applying the binary operator '-' (line 3071)
        result_sub_85864 = python_operator(stypy.reporting.localization.Localization(__file__, 3071, 17), '-', height_85852, result_sub_85863)
        
        # Assigning a type to the variable 'shift' (line 3071)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3071, 8), 'shift', result_sub_85864)
        
        # Assigning a Name to a Attribute (line 3074):
        
        # Assigning a Name to a Attribute (line 3074):
        # Getting the type of 'shift' (line 3074)
        shift_85865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3074, 29), 'shift')
        # Getting the type of 'vlist' (line 3074)
        vlist_85866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3074, 8), 'vlist')
        # Setting the type of the member 'shift_amount' of a type (line 3074)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3074, 8), vlist_85866, 'shift_amount', shift_85865)
        
        # Assigning a List to a Name (line 3076):
        
        # Assigning a List to a Name (line 3076):
        
        # Obtaining an instance of the builtin type 'list' (line 3076)
        list_85867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3076, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3076)
        # Adding element type (line 3076)
        
        # Call to Hlist(...): (line 3076)
        # Processing the call arguments (line 3076)
        
        # Obtaining an instance of the builtin type 'list' (line 3076)
        list_85869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3076, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3076)
        # Adding element type (line 3076)
        # Getting the type of 'vlist' (line 3076)
        vlist_85870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3076, 25), 'vlist', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3076, 24), list_85869, vlist_85870)
        # Adding element type (line 3076)
        
        # Call to Hbox(...): (line 3076)
        # Processing the call arguments (line 3076)
        # Getting the type of 'thickness' (line 3076)
        thickness_85872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3076, 37), 'thickness', False)
        float_85873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3076, 49), 'float')
        # Applying the binary operator '*' (line 3076)
        result_mul_85874 = python_operator(stypy.reporting.localization.Localization(__file__, 3076, 37), '*', thickness_85872, float_85873)
        
        # Processing the call keyword arguments (line 3076)
        kwargs_85875 = {}
        # Getting the type of 'Hbox' (line 3076)
        Hbox_85871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3076, 32), 'Hbox', False)
        # Calling Hbox(args, kwargs) (line 3076)
        Hbox_call_result_85876 = invoke(stypy.reporting.localization.Localization(__file__, 3076, 32), Hbox_85871, *[result_mul_85874], **kwargs_85875)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3076, 24), list_85869, Hbox_call_result_85876)
        
        # Processing the call keyword arguments (line 3076)
        kwargs_85877 = {}
        # Getting the type of 'Hlist' (line 3076)
        Hlist_85868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3076, 18), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 3076)
        Hlist_call_result_85878 = invoke(stypy.reporting.localization.Localization(__file__, 3076, 18), Hlist_85868, *[list_85869], **kwargs_85877)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3076, 17), list_85867, Hlist_call_result_85878)
        
        # Assigning a type to the variable 'result' (line 3076)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3076, 8), 'result', list_85867)
        
        
        # Evaluating a boolean operation
        # Getting the type of 'ldelim' (line 3077)
        ldelim_85879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3077, 11), 'ldelim')
        # Getting the type of 'rdelim' (line 3077)
        rdelim_85880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3077, 21), 'rdelim')
        # Applying the binary operator 'or' (line 3077)
        result_or_keyword_85881 = python_operator(stypy.reporting.localization.Localization(__file__, 3077, 11), 'or', ldelim_85879, rdelim_85880)
        
        # Testing the type of an if condition (line 3077)
        if_condition_85882 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3077, 8), result_or_keyword_85881)
        # Assigning a type to the variable 'if_condition_85882' (line 3077)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3077, 8), 'if_condition_85882', if_condition_85882)
        # SSA begins for if statement (line 3077)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'ldelim' (line 3078)
        ldelim_85883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3078, 15), 'ldelim')
        unicode_85884 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3078, 25), 'unicode', u'')
        # Applying the binary operator '==' (line 3078)
        result_eq_85885 = python_operator(stypy.reporting.localization.Localization(__file__, 3078, 15), '==', ldelim_85883, unicode_85884)
        
        # Testing the type of an if condition (line 3078)
        if_condition_85886 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3078, 12), result_eq_85885)
        # Assigning a type to the variable 'if_condition_85886' (line 3078)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3078, 12), 'if_condition_85886', if_condition_85886)
        # SSA begins for if statement (line 3078)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Str to a Name (line 3079):
        
        # Assigning a Str to a Name (line 3079):
        unicode_85887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3079, 25), 'unicode', u'.')
        # Assigning a type to the variable 'ldelim' (line 3079)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3079, 16), 'ldelim', unicode_85887)
        # SSA join for if statement (line 3078)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'rdelim' (line 3080)
        rdelim_85888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3080, 15), 'rdelim')
        unicode_85889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3080, 25), 'unicode', u'')
        # Applying the binary operator '==' (line 3080)
        result_eq_85890 = python_operator(stypy.reporting.localization.Localization(__file__, 3080, 15), '==', rdelim_85888, unicode_85889)
        
        # Testing the type of an if condition (line 3080)
        if_condition_85891 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3080, 12), result_eq_85890)
        # Assigning a type to the variable 'if_condition_85891' (line 3080)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3080, 12), 'if_condition_85891', if_condition_85891)
        # SSA begins for if statement (line 3080)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Str to a Name (line 3081):
        
        # Assigning a Str to a Name (line 3081):
        unicode_85892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3081, 25), 'unicode', u'.')
        # Assigning a type to the variable 'rdelim' (line 3081)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3081, 16), 'rdelim', unicode_85892)
        # SSA join for if statement (line 3080)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to _auto_sized_delimiter(...): (line 3082)
        # Processing the call arguments (line 3082)
        # Getting the type of 'ldelim' (line 3082)
        ldelim_85895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3082, 46), 'ldelim', False)
        # Getting the type of 'result' (line 3082)
        result_85896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3082, 54), 'result', False)
        # Getting the type of 'rdelim' (line 3082)
        rdelim_85897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3082, 62), 'rdelim', False)
        # Processing the call keyword arguments (line 3082)
        kwargs_85898 = {}
        # Getting the type of 'self' (line 3082)
        self_85893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3082, 19), 'self', False)
        # Obtaining the member '_auto_sized_delimiter' of a type (line 3082)
        _auto_sized_delimiter_85894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3082, 19), self_85893, '_auto_sized_delimiter')
        # Calling _auto_sized_delimiter(args, kwargs) (line 3082)
        _auto_sized_delimiter_call_result_85899 = invoke(stypy.reporting.localization.Localization(__file__, 3082, 19), _auto_sized_delimiter_85894, *[ldelim_85895, result_85896, rdelim_85897], **kwargs_85898)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3082)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3082, 12), 'stypy_return_type', _auto_sized_delimiter_call_result_85899)
        # SSA join for if statement (line 3077)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'result' (line 3083)
        result_85900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3083, 15), 'result')
        # Assigning a type to the variable 'stypy_return_type' (line 3083)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3083, 8), 'stypy_return_type', result_85900)
        
        # ################# End of '_genfrac(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_genfrac' in the type store
        # Getting the type of 'stypy_return_type' (line 3043)
        stypy_return_type_85901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3043, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_85901)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_genfrac'
        return stypy_return_type_85901


    @norecursion
    def genfrac(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'genfrac'
        module_type_store = module_type_store.open_function_context('genfrac', 3085, 4, False)
        # Assigning a type to the variable 'self' (line 3086)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3086, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.genfrac.__dict__.__setitem__('stypy_localization', localization)
        Parser.genfrac.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.genfrac.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.genfrac.__dict__.__setitem__('stypy_function_name', 'Parser.genfrac')
        Parser.genfrac.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.genfrac.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.genfrac.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.genfrac.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.genfrac.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.genfrac.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.genfrac.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.genfrac', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'genfrac', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'genfrac(...)' code ##################

        # Evaluating assert statement condition
        
        
        # Call to len(...): (line 3086)
        # Processing the call arguments (line 3086)
        # Getting the type of 'toks' (line 3086)
        toks_85903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3086, 19), 'toks', False)
        # Processing the call keyword arguments (line 3086)
        kwargs_85904 = {}
        # Getting the type of 'len' (line 3086)
        len_85902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3086, 15), 'len', False)
        # Calling len(args, kwargs) (line 3086)
        len_call_result_85905 = invoke(stypy.reporting.localization.Localization(__file__, 3086, 15), len_85902, *[toks_85903], **kwargs_85904)
        
        int_85906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3086, 28), 'int')
        # Applying the binary operator '==' (line 3086)
        result_eq_85907 = python_operator(stypy.reporting.localization.Localization(__file__, 3086, 15), '==', len_call_result_85905, int_85906)
        
        # Evaluating assert statement condition
        
        
        # Call to len(...): (line 3087)
        # Processing the call arguments (line 3087)
        
        # Obtaining the type of the subscript
        int_85909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3087, 24), 'int')
        # Getting the type of 'toks' (line 3087)
        toks_85910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3087, 19), 'toks', False)
        # Obtaining the member '__getitem__' of a type (line 3087)
        getitem___85911 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3087, 19), toks_85910, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3087)
        subscript_call_result_85912 = invoke(stypy.reporting.localization.Localization(__file__, 3087, 19), getitem___85911, int_85909)
        
        # Processing the call keyword arguments (line 3087)
        kwargs_85913 = {}
        # Getting the type of 'len' (line 3087)
        len_85908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3087, 15), 'len', False)
        # Calling len(args, kwargs) (line 3087)
        len_call_result_85914 = invoke(stypy.reporting.localization.Localization(__file__, 3087, 15), len_85908, *[subscript_call_result_85912], **kwargs_85913)
        
        int_85915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3087, 31), 'int')
        # Applying the binary operator '==' (line 3087)
        result_eq_85916 = python_operator(stypy.reporting.localization.Localization(__file__, 3087, 15), '==', len_call_result_85914, int_85915)
        
        
        # Call to _genfrac(...): (line 3089)
        
        # Call to tuple(...): (line 3089)
        # Processing the call arguments (line 3089)
        
        # Obtaining the type of the subscript
        int_85920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3089, 41), 'int')
        # Getting the type of 'toks' (line 3089)
        toks_85921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3089, 36), 'toks', False)
        # Obtaining the member '__getitem__' of a type (line 3089)
        getitem___85922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3089, 36), toks_85921, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3089)
        subscript_call_result_85923 = invoke(stypy.reporting.localization.Localization(__file__, 3089, 36), getitem___85922, int_85920)
        
        # Processing the call keyword arguments (line 3089)
        kwargs_85924 = {}
        # Getting the type of 'tuple' (line 3089)
        tuple_85919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3089, 30), 'tuple', False)
        # Calling tuple(args, kwargs) (line 3089)
        tuple_call_result_85925 = invoke(stypy.reporting.localization.Localization(__file__, 3089, 30), tuple_85919, *[subscript_call_result_85923], **kwargs_85924)
        
        # Processing the call keyword arguments (line 3089)
        kwargs_85926 = {}
        # Getting the type of 'self' (line 3089)
        self_85917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3089, 15), 'self', False)
        # Obtaining the member '_genfrac' of a type (line 3089)
        _genfrac_85918 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3089, 15), self_85917, '_genfrac')
        # Calling _genfrac(args, kwargs) (line 3089)
        _genfrac_call_result_85927 = invoke(stypy.reporting.localization.Localization(__file__, 3089, 15), _genfrac_85918, *[tuple_call_result_85925], **kwargs_85926)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3089)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3089, 8), 'stypy_return_type', _genfrac_call_result_85927)
        
        # ################# End of 'genfrac(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'genfrac' in the type store
        # Getting the type of 'stypy_return_type' (line 3085)
        stypy_return_type_85928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3085, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_85928)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'genfrac'
        return stypy_return_type_85928


    @norecursion
    def frac(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'frac'
        module_type_store = module_type_store.open_function_context('frac', 3091, 4, False)
        # Assigning a type to the variable 'self' (line 3092)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3092, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.frac.__dict__.__setitem__('stypy_localization', localization)
        Parser.frac.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.frac.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.frac.__dict__.__setitem__('stypy_function_name', 'Parser.frac')
        Parser.frac.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.frac.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.frac.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.frac.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.frac.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.frac.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.frac.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.frac', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'frac', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'frac(...)' code ##################

        # Evaluating assert statement condition
        
        
        # Call to len(...): (line 3092)
        # Processing the call arguments (line 3092)
        # Getting the type of 'toks' (line 3092)
        toks_85930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3092, 19), 'toks', False)
        # Processing the call keyword arguments (line 3092)
        kwargs_85931 = {}
        # Getting the type of 'len' (line 3092)
        len_85929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3092, 15), 'len', False)
        # Calling len(args, kwargs) (line 3092)
        len_call_result_85932 = invoke(stypy.reporting.localization.Localization(__file__, 3092, 15), len_85929, *[toks_85930], **kwargs_85931)
        
        int_85933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3092, 28), 'int')
        # Applying the binary operator '==' (line 3092)
        result_eq_85934 = python_operator(stypy.reporting.localization.Localization(__file__, 3092, 15), '==', len_call_result_85932, int_85933)
        
        # Evaluating assert statement condition
        
        
        # Call to len(...): (line 3093)
        # Processing the call arguments (line 3093)
        
        # Obtaining the type of the subscript
        int_85936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3093, 24), 'int')
        # Getting the type of 'toks' (line 3093)
        toks_85937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3093, 19), 'toks', False)
        # Obtaining the member '__getitem__' of a type (line 3093)
        getitem___85938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3093, 19), toks_85937, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3093)
        subscript_call_result_85939 = invoke(stypy.reporting.localization.Localization(__file__, 3093, 19), getitem___85938, int_85936)
        
        # Processing the call keyword arguments (line 3093)
        kwargs_85940 = {}
        # Getting the type of 'len' (line 3093)
        len_85935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3093, 15), 'len', False)
        # Calling len(args, kwargs) (line 3093)
        len_call_result_85941 = invoke(stypy.reporting.localization.Localization(__file__, 3093, 15), len_85935, *[subscript_call_result_85939], **kwargs_85940)
        
        int_85942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3093, 31), 'int')
        # Applying the binary operator '==' (line 3093)
        result_eq_85943 = python_operator(stypy.reporting.localization.Localization(__file__, 3093, 15), '==', len_call_result_85941, int_85942)
        
        
        # Assigning a Call to a Name (line 3094):
        
        # Assigning a Call to a Name (line 3094):
        
        # Call to get_state(...): (line 3094)
        # Processing the call keyword arguments (line 3094)
        kwargs_85946 = {}
        # Getting the type of 'self' (line 3094)
        self_85944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3094, 16), 'self', False)
        # Obtaining the member 'get_state' of a type (line 3094)
        get_state_85945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3094, 16), self_85944, 'get_state')
        # Calling get_state(args, kwargs) (line 3094)
        get_state_call_result_85947 = invoke(stypy.reporting.localization.Localization(__file__, 3094, 16), get_state_85945, *[], **kwargs_85946)
        
        # Assigning a type to the variable 'state' (line 3094)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3094, 8), 'state', get_state_call_result_85947)
        
        # Assigning a Call to a Name (line 3096):
        
        # Assigning a Call to a Name (line 3096):
        
        # Call to get_underline_thickness(...): (line 3096)
        # Processing the call arguments (line 3096)
        # Getting the type of 'state' (line 3097)
        state_85951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3097, 12), 'state', False)
        # Obtaining the member 'font' of a type (line 3097)
        font_85952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3097, 12), state_85951, 'font')
        # Getting the type of 'state' (line 3097)
        state_85953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3097, 24), 'state', False)
        # Obtaining the member 'fontsize' of a type (line 3097)
        fontsize_85954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3097, 24), state_85953, 'fontsize')
        # Getting the type of 'state' (line 3097)
        state_85955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3097, 40), 'state', False)
        # Obtaining the member 'dpi' of a type (line 3097)
        dpi_85956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3097, 40), state_85955, 'dpi')
        # Processing the call keyword arguments (line 3096)
        kwargs_85957 = {}
        # Getting the type of 'state' (line 3096)
        state_85948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3096, 20), 'state', False)
        # Obtaining the member 'font_output' of a type (line 3096)
        font_output_85949 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3096, 20), state_85948, 'font_output')
        # Obtaining the member 'get_underline_thickness' of a type (line 3096)
        get_underline_thickness_85950 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3096, 20), font_output_85949, 'get_underline_thickness')
        # Calling get_underline_thickness(args, kwargs) (line 3096)
        get_underline_thickness_call_result_85958 = invoke(stypy.reporting.localization.Localization(__file__, 3096, 20), get_underline_thickness_85950, *[font_85952, fontsize_85954, dpi_85956], **kwargs_85957)
        
        # Assigning a type to the variable 'thickness' (line 3096)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3096, 8), 'thickness', get_underline_thickness_call_result_85958)
        
        # Assigning a Subscript to a Tuple (line 3098):
        
        # Assigning a Subscript to a Name (line 3098):
        
        # Obtaining the type of the subscript
        int_85959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3098, 8), 'int')
        
        # Obtaining the type of the subscript
        int_85960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3098, 24), 'int')
        # Getting the type of 'toks' (line 3098)
        toks_85961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3098, 19), 'toks')
        # Obtaining the member '__getitem__' of a type (line 3098)
        getitem___85962 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3098, 19), toks_85961, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3098)
        subscript_call_result_85963 = invoke(stypy.reporting.localization.Localization(__file__, 3098, 19), getitem___85962, int_85960)
        
        # Obtaining the member '__getitem__' of a type (line 3098)
        getitem___85964 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3098, 8), subscript_call_result_85963, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3098)
        subscript_call_result_85965 = invoke(stypy.reporting.localization.Localization(__file__, 3098, 8), getitem___85964, int_85959)
        
        # Assigning a type to the variable 'tuple_var_assignment_77313' (line 3098)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3098, 8), 'tuple_var_assignment_77313', subscript_call_result_85965)
        
        # Assigning a Subscript to a Name (line 3098):
        
        # Obtaining the type of the subscript
        int_85966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3098, 8), 'int')
        
        # Obtaining the type of the subscript
        int_85967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3098, 24), 'int')
        # Getting the type of 'toks' (line 3098)
        toks_85968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3098, 19), 'toks')
        # Obtaining the member '__getitem__' of a type (line 3098)
        getitem___85969 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3098, 19), toks_85968, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3098)
        subscript_call_result_85970 = invoke(stypy.reporting.localization.Localization(__file__, 3098, 19), getitem___85969, int_85967)
        
        # Obtaining the member '__getitem__' of a type (line 3098)
        getitem___85971 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3098, 8), subscript_call_result_85970, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3098)
        subscript_call_result_85972 = invoke(stypy.reporting.localization.Localization(__file__, 3098, 8), getitem___85971, int_85966)
        
        # Assigning a type to the variable 'tuple_var_assignment_77314' (line 3098)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3098, 8), 'tuple_var_assignment_77314', subscript_call_result_85972)
        
        # Assigning a Name to a Name (line 3098):
        # Getting the type of 'tuple_var_assignment_77313' (line 3098)
        tuple_var_assignment_77313_85973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3098, 8), 'tuple_var_assignment_77313')
        # Assigning a type to the variable 'num' (line 3098)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3098, 8), 'num', tuple_var_assignment_77313_85973)
        
        # Assigning a Name to a Name (line 3098):
        # Getting the type of 'tuple_var_assignment_77314' (line 3098)
        tuple_var_assignment_77314_85974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3098, 8), 'tuple_var_assignment_77314')
        # Assigning a type to the variable 'den' (line 3098)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3098, 13), 'den', tuple_var_assignment_77314_85974)
        
        # Call to _genfrac(...): (line 3100)
        # Processing the call arguments (line 3100)
        unicode_85977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3100, 29), 'unicode', u'')
        unicode_85978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3100, 33), 'unicode', u'')
        # Getting the type of 'thickness' (line 3100)
        thickness_85979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3100, 37), 'thickness', False)
        
        # Obtaining the type of the subscript
        unicode_85980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3101, 51), 'unicode', u'textstyle')
        # Getting the type of 'self' (line 3101)
        self_85981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3101, 29), 'self', False)
        # Obtaining the member '_math_style_dict' of a type (line 3101)
        _math_style_dict_85982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3101, 29), self_85981, '_math_style_dict')
        # Obtaining the member '__getitem__' of a type (line 3101)
        getitem___85983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3101, 29), _math_style_dict_85982, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3101)
        subscript_call_result_85984 = invoke(stypy.reporting.localization.Localization(__file__, 3101, 29), getitem___85983, unicode_85980)
        
        # Getting the type of 'num' (line 3101)
        num_85985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3101, 65), 'num', False)
        # Getting the type of 'den' (line 3101)
        den_85986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3101, 70), 'den', False)
        # Processing the call keyword arguments (line 3100)
        kwargs_85987 = {}
        # Getting the type of 'self' (line 3100)
        self_85975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3100, 15), 'self', False)
        # Obtaining the member '_genfrac' of a type (line 3100)
        _genfrac_85976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3100, 15), self_85975, '_genfrac')
        # Calling _genfrac(args, kwargs) (line 3100)
        _genfrac_call_result_85988 = invoke(stypy.reporting.localization.Localization(__file__, 3100, 15), _genfrac_85976, *[unicode_85977, unicode_85978, thickness_85979, subscript_call_result_85984, num_85985, den_85986], **kwargs_85987)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3100)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3100, 8), 'stypy_return_type', _genfrac_call_result_85988)
        
        # ################# End of 'frac(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'frac' in the type store
        # Getting the type of 'stypy_return_type' (line 3091)
        stypy_return_type_85989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3091, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_85989)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'frac'
        return stypy_return_type_85989


    @norecursion
    def dfrac(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'dfrac'
        module_type_store = module_type_store.open_function_context('dfrac', 3103, 4, False)
        # Assigning a type to the variable 'self' (line 3104)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3104, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.dfrac.__dict__.__setitem__('stypy_localization', localization)
        Parser.dfrac.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.dfrac.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.dfrac.__dict__.__setitem__('stypy_function_name', 'Parser.dfrac')
        Parser.dfrac.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.dfrac.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.dfrac.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.dfrac.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.dfrac.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.dfrac.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.dfrac.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.dfrac', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'dfrac', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'dfrac(...)' code ##################

        # Evaluating assert statement condition
        
        
        # Call to len(...): (line 3104)
        # Processing the call arguments (line 3104)
        # Getting the type of 'toks' (line 3104)
        toks_85991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3104, 19), 'toks', False)
        # Processing the call keyword arguments (line 3104)
        kwargs_85992 = {}
        # Getting the type of 'len' (line 3104)
        len_85990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3104, 15), 'len', False)
        # Calling len(args, kwargs) (line 3104)
        len_call_result_85993 = invoke(stypy.reporting.localization.Localization(__file__, 3104, 15), len_85990, *[toks_85991], **kwargs_85992)
        
        int_85994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3104, 28), 'int')
        # Applying the binary operator '==' (line 3104)
        result_eq_85995 = python_operator(stypy.reporting.localization.Localization(__file__, 3104, 15), '==', len_call_result_85993, int_85994)
        
        # Evaluating assert statement condition
        
        
        # Call to len(...): (line 3105)
        # Processing the call arguments (line 3105)
        
        # Obtaining the type of the subscript
        int_85997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3105, 24), 'int')
        # Getting the type of 'toks' (line 3105)
        toks_85998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3105, 19), 'toks', False)
        # Obtaining the member '__getitem__' of a type (line 3105)
        getitem___85999 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3105, 19), toks_85998, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3105)
        subscript_call_result_86000 = invoke(stypy.reporting.localization.Localization(__file__, 3105, 19), getitem___85999, int_85997)
        
        # Processing the call keyword arguments (line 3105)
        kwargs_86001 = {}
        # Getting the type of 'len' (line 3105)
        len_85996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3105, 15), 'len', False)
        # Calling len(args, kwargs) (line 3105)
        len_call_result_86002 = invoke(stypy.reporting.localization.Localization(__file__, 3105, 15), len_85996, *[subscript_call_result_86000], **kwargs_86001)
        
        int_86003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3105, 31), 'int')
        # Applying the binary operator '==' (line 3105)
        result_eq_86004 = python_operator(stypy.reporting.localization.Localization(__file__, 3105, 15), '==', len_call_result_86002, int_86003)
        
        
        # Assigning a Call to a Name (line 3106):
        
        # Assigning a Call to a Name (line 3106):
        
        # Call to get_state(...): (line 3106)
        # Processing the call keyword arguments (line 3106)
        kwargs_86007 = {}
        # Getting the type of 'self' (line 3106)
        self_86005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3106, 16), 'self', False)
        # Obtaining the member 'get_state' of a type (line 3106)
        get_state_86006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3106, 16), self_86005, 'get_state')
        # Calling get_state(args, kwargs) (line 3106)
        get_state_call_result_86008 = invoke(stypy.reporting.localization.Localization(__file__, 3106, 16), get_state_86006, *[], **kwargs_86007)
        
        # Assigning a type to the variable 'state' (line 3106)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3106, 8), 'state', get_state_call_result_86008)
        
        # Assigning a Call to a Name (line 3108):
        
        # Assigning a Call to a Name (line 3108):
        
        # Call to get_underline_thickness(...): (line 3108)
        # Processing the call arguments (line 3108)
        # Getting the type of 'state' (line 3109)
        state_86012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3109, 12), 'state', False)
        # Obtaining the member 'font' of a type (line 3109)
        font_86013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3109, 12), state_86012, 'font')
        # Getting the type of 'state' (line 3109)
        state_86014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3109, 24), 'state', False)
        # Obtaining the member 'fontsize' of a type (line 3109)
        fontsize_86015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3109, 24), state_86014, 'fontsize')
        # Getting the type of 'state' (line 3109)
        state_86016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3109, 40), 'state', False)
        # Obtaining the member 'dpi' of a type (line 3109)
        dpi_86017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3109, 40), state_86016, 'dpi')
        # Processing the call keyword arguments (line 3108)
        kwargs_86018 = {}
        # Getting the type of 'state' (line 3108)
        state_86009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3108, 20), 'state', False)
        # Obtaining the member 'font_output' of a type (line 3108)
        font_output_86010 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3108, 20), state_86009, 'font_output')
        # Obtaining the member 'get_underline_thickness' of a type (line 3108)
        get_underline_thickness_86011 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3108, 20), font_output_86010, 'get_underline_thickness')
        # Calling get_underline_thickness(args, kwargs) (line 3108)
        get_underline_thickness_call_result_86019 = invoke(stypy.reporting.localization.Localization(__file__, 3108, 20), get_underline_thickness_86011, *[font_86013, fontsize_86015, dpi_86017], **kwargs_86018)
        
        # Assigning a type to the variable 'thickness' (line 3108)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3108, 8), 'thickness', get_underline_thickness_call_result_86019)
        
        # Assigning a Subscript to a Tuple (line 3110):
        
        # Assigning a Subscript to a Name (line 3110):
        
        # Obtaining the type of the subscript
        int_86020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3110, 8), 'int')
        
        # Obtaining the type of the subscript
        int_86021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3110, 24), 'int')
        # Getting the type of 'toks' (line 3110)
        toks_86022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3110, 19), 'toks')
        # Obtaining the member '__getitem__' of a type (line 3110)
        getitem___86023 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3110, 19), toks_86022, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3110)
        subscript_call_result_86024 = invoke(stypy.reporting.localization.Localization(__file__, 3110, 19), getitem___86023, int_86021)
        
        # Obtaining the member '__getitem__' of a type (line 3110)
        getitem___86025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3110, 8), subscript_call_result_86024, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3110)
        subscript_call_result_86026 = invoke(stypy.reporting.localization.Localization(__file__, 3110, 8), getitem___86025, int_86020)
        
        # Assigning a type to the variable 'tuple_var_assignment_77315' (line 3110)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3110, 8), 'tuple_var_assignment_77315', subscript_call_result_86026)
        
        # Assigning a Subscript to a Name (line 3110):
        
        # Obtaining the type of the subscript
        int_86027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3110, 8), 'int')
        
        # Obtaining the type of the subscript
        int_86028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3110, 24), 'int')
        # Getting the type of 'toks' (line 3110)
        toks_86029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3110, 19), 'toks')
        # Obtaining the member '__getitem__' of a type (line 3110)
        getitem___86030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3110, 19), toks_86029, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3110)
        subscript_call_result_86031 = invoke(stypy.reporting.localization.Localization(__file__, 3110, 19), getitem___86030, int_86028)
        
        # Obtaining the member '__getitem__' of a type (line 3110)
        getitem___86032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3110, 8), subscript_call_result_86031, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3110)
        subscript_call_result_86033 = invoke(stypy.reporting.localization.Localization(__file__, 3110, 8), getitem___86032, int_86027)
        
        # Assigning a type to the variable 'tuple_var_assignment_77316' (line 3110)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3110, 8), 'tuple_var_assignment_77316', subscript_call_result_86033)
        
        # Assigning a Name to a Name (line 3110):
        # Getting the type of 'tuple_var_assignment_77315' (line 3110)
        tuple_var_assignment_77315_86034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3110, 8), 'tuple_var_assignment_77315')
        # Assigning a type to the variable 'num' (line 3110)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3110, 8), 'num', tuple_var_assignment_77315_86034)
        
        # Assigning a Name to a Name (line 3110):
        # Getting the type of 'tuple_var_assignment_77316' (line 3110)
        tuple_var_assignment_77316_86035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3110, 8), 'tuple_var_assignment_77316')
        # Assigning a type to the variable 'den' (line 3110)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3110, 13), 'den', tuple_var_assignment_77316_86035)
        
        # Call to _genfrac(...): (line 3112)
        # Processing the call arguments (line 3112)
        unicode_86038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3112, 29), 'unicode', u'')
        unicode_86039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3112, 33), 'unicode', u'')
        # Getting the type of 'thickness' (line 3112)
        thickness_86040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3112, 37), 'thickness', False)
        
        # Obtaining the type of the subscript
        unicode_86041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3113, 51), 'unicode', u'displaystyle')
        # Getting the type of 'self' (line 3113)
        self_86042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3113, 29), 'self', False)
        # Obtaining the member '_math_style_dict' of a type (line 3113)
        _math_style_dict_86043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3113, 29), self_86042, '_math_style_dict')
        # Obtaining the member '__getitem__' of a type (line 3113)
        getitem___86044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3113, 29), _math_style_dict_86043, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3113)
        subscript_call_result_86045 = invoke(stypy.reporting.localization.Localization(__file__, 3113, 29), getitem___86044, unicode_86041)
        
        # Getting the type of 'num' (line 3113)
        num_86046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3113, 68), 'num', False)
        # Getting the type of 'den' (line 3113)
        den_86047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3113, 73), 'den', False)
        # Processing the call keyword arguments (line 3112)
        kwargs_86048 = {}
        # Getting the type of 'self' (line 3112)
        self_86036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3112, 15), 'self', False)
        # Obtaining the member '_genfrac' of a type (line 3112)
        _genfrac_86037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3112, 15), self_86036, '_genfrac')
        # Calling _genfrac(args, kwargs) (line 3112)
        _genfrac_call_result_86049 = invoke(stypy.reporting.localization.Localization(__file__, 3112, 15), _genfrac_86037, *[unicode_86038, unicode_86039, thickness_86040, subscript_call_result_86045, num_86046, den_86047], **kwargs_86048)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3112)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3112, 8), 'stypy_return_type', _genfrac_call_result_86049)
        
        # ################# End of 'dfrac(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'dfrac' in the type store
        # Getting the type of 'stypy_return_type' (line 3103)
        stypy_return_type_86050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3103, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_86050)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'dfrac'
        return stypy_return_type_86050


    @norecursion
    def stackrel(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'stackrel'
        module_type_store = module_type_store.open_function_context('stackrel', 3115, 4, False)
        # Assigning a type to the variable 'self' (line 3116)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3116, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.stackrel.__dict__.__setitem__('stypy_localization', localization)
        Parser.stackrel.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.stackrel.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.stackrel.__dict__.__setitem__('stypy_function_name', 'Parser.stackrel')
        Parser.stackrel.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.stackrel.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.stackrel.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.stackrel.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.stackrel.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.stackrel.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.stackrel.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.stackrel', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'stackrel', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'stackrel(...)' code ##################

        # Evaluating assert statement condition
        
        
        # Call to len(...): (line 3116)
        # Processing the call arguments (line 3116)
        # Getting the type of 'toks' (line 3116)
        toks_86052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3116, 19), 'toks', False)
        # Processing the call keyword arguments (line 3116)
        kwargs_86053 = {}
        # Getting the type of 'len' (line 3116)
        len_86051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3116, 15), 'len', False)
        # Calling len(args, kwargs) (line 3116)
        len_call_result_86054 = invoke(stypy.reporting.localization.Localization(__file__, 3116, 15), len_86051, *[toks_86052], **kwargs_86053)
        
        int_86055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3116, 28), 'int')
        # Applying the binary operator '==' (line 3116)
        result_eq_86056 = python_operator(stypy.reporting.localization.Localization(__file__, 3116, 15), '==', len_call_result_86054, int_86055)
        
        # Evaluating assert statement condition
        
        
        # Call to len(...): (line 3117)
        # Processing the call arguments (line 3117)
        
        # Obtaining the type of the subscript
        int_86058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3117, 24), 'int')
        # Getting the type of 'toks' (line 3117)
        toks_86059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3117, 19), 'toks', False)
        # Obtaining the member '__getitem__' of a type (line 3117)
        getitem___86060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3117, 19), toks_86059, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3117)
        subscript_call_result_86061 = invoke(stypy.reporting.localization.Localization(__file__, 3117, 19), getitem___86060, int_86058)
        
        # Processing the call keyword arguments (line 3117)
        kwargs_86062 = {}
        # Getting the type of 'len' (line 3117)
        len_86057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3117, 15), 'len', False)
        # Calling len(args, kwargs) (line 3117)
        len_call_result_86063 = invoke(stypy.reporting.localization.Localization(__file__, 3117, 15), len_86057, *[subscript_call_result_86061], **kwargs_86062)
        
        int_86064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3117, 31), 'int')
        # Applying the binary operator '==' (line 3117)
        result_eq_86065 = python_operator(stypy.reporting.localization.Localization(__file__, 3117, 15), '==', len_call_result_86063, int_86064)
        
        
        # Assigning a Subscript to a Tuple (line 3118):
        
        # Assigning a Subscript to a Name (line 3118):
        
        # Obtaining the type of the subscript
        int_86066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3118, 8), 'int')
        
        # Obtaining the type of the subscript
        int_86067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3118, 24), 'int')
        # Getting the type of 'toks' (line 3118)
        toks_86068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3118, 19), 'toks')
        # Obtaining the member '__getitem__' of a type (line 3118)
        getitem___86069 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3118, 19), toks_86068, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3118)
        subscript_call_result_86070 = invoke(stypy.reporting.localization.Localization(__file__, 3118, 19), getitem___86069, int_86067)
        
        # Obtaining the member '__getitem__' of a type (line 3118)
        getitem___86071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3118, 8), subscript_call_result_86070, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3118)
        subscript_call_result_86072 = invoke(stypy.reporting.localization.Localization(__file__, 3118, 8), getitem___86071, int_86066)
        
        # Assigning a type to the variable 'tuple_var_assignment_77317' (line 3118)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3118, 8), 'tuple_var_assignment_77317', subscript_call_result_86072)
        
        # Assigning a Subscript to a Name (line 3118):
        
        # Obtaining the type of the subscript
        int_86073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3118, 8), 'int')
        
        # Obtaining the type of the subscript
        int_86074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3118, 24), 'int')
        # Getting the type of 'toks' (line 3118)
        toks_86075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3118, 19), 'toks')
        # Obtaining the member '__getitem__' of a type (line 3118)
        getitem___86076 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3118, 19), toks_86075, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3118)
        subscript_call_result_86077 = invoke(stypy.reporting.localization.Localization(__file__, 3118, 19), getitem___86076, int_86074)
        
        # Obtaining the member '__getitem__' of a type (line 3118)
        getitem___86078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3118, 8), subscript_call_result_86077, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3118)
        subscript_call_result_86079 = invoke(stypy.reporting.localization.Localization(__file__, 3118, 8), getitem___86078, int_86073)
        
        # Assigning a type to the variable 'tuple_var_assignment_77318' (line 3118)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3118, 8), 'tuple_var_assignment_77318', subscript_call_result_86079)
        
        # Assigning a Name to a Name (line 3118):
        # Getting the type of 'tuple_var_assignment_77317' (line 3118)
        tuple_var_assignment_77317_86080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3118, 8), 'tuple_var_assignment_77317')
        # Assigning a type to the variable 'num' (line 3118)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3118, 8), 'num', tuple_var_assignment_77317_86080)
        
        # Assigning a Name to a Name (line 3118):
        # Getting the type of 'tuple_var_assignment_77318' (line 3118)
        tuple_var_assignment_77318_86081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3118, 8), 'tuple_var_assignment_77318')
        # Assigning a type to the variable 'den' (line 3118)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3118, 13), 'den', tuple_var_assignment_77318_86081)
        
        # Call to _genfrac(...): (line 3120)
        # Processing the call arguments (line 3120)
        unicode_86084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3120, 29), 'unicode', u'')
        unicode_86085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3120, 33), 'unicode', u'')
        float_86086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3120, 37), 'float')
        
        # Obtaining the type of the subscript
        unicode_86087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3121, 51), 'unicode', u'textstyle')
        # Getting the type of 'self' (line 3121)
        self_86088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3121, 29), 'self', False)
        # Obtaining the member '_math_style_dict' of a type (line 3121)
        _math_style_dict_86089 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3121, 29), self_86088, '_math_style_dict')
        # Obtaining the member '__getitem__' of a type (line 3121)
        getitem___86090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3121, 29), _math_style_dict_86089, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3121)
        subscript_call_result_86091 = invoke(stypy.reporting.localization.Localization(__file__, 3121, 29), getitem___86090, unicode_86087)
        
        # Getting the type of 'num' (line 3121)
        num_86092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3121, 65), 'num', False)
        # Getting the type of 'den' (line 3121)
        den_86093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3121, 70), 'den', False)
        # Processing the call keyword arguments (line 3120)
        kwargs_86094 = {}
        # Getting the type of 'self' (line 3120)
        self_86082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3120, 15), 'self', False)
        # Obtaining the member '_genfrac' of a type (line 3120)
        _genfrac_86083 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3120, 15), self_86082, '_genfrac')
        # Calling _genfrac(args, kwargs) (line 3120)
        _genfrac_call_result_86095 = invoke(stypy.reporting.localization.Localization(__file__, 3120, 15), _genfrac_86083, *[unicode_86084, unicode_86085, float_86086, subscript_call_result_86091, num_86092, den_86093], **kwargs_86094)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3120)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3120, 8), 'stypy_return_type', _genfrac_call_result_86095)
        
        # ################# End of 'stackrel(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'stackrel' in the type store
        # Getting the type of 'stypy_return_type' (line 3115)
        stypy_return_type_86096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3115, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_86096)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'stackrel'
        return stypy_return_type_86096


    @norecursion
    def binom(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'binom'
        module_type_store = module_type_store.open_function_context('binom', 3123, 4, False)
        # Assigning a type to the variable 'self' (line 3124)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3124, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.binom.__dict__.__setitem__('stypy_localization', localization)
        Parser.binom.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.binom.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.binom.__dict__.__setitem__('stypy_function_name', 'Parser.binom')
        Parser.binom.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.binom.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.binom.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.binom.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.binom.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.binom.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.binom.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.binom', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'binom', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'binom(...)' code ##################

        # Evaluating assert statement condition
        
        
        # Call to len(...): (line 3124)
        # Processing the call arguments (line 3124)
        # Getting the type of 'toks' (line 3124)
        toks_86098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3124, 19), 'toks', False)
        # Processing the call keyword arguments (line 3124)
        kwargs_86099 = {}
        # Getting the type of 'len' (line 3124)
        len_86097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3124, 15), 'len', False)
        # Calling len(args, kwargs) (line 3124)
        len_call_result_86100 = invoke(stypy.reporting.localization.Localization(__file__, 3124, 15), len_86097, *[toks_86098], **kwargs_86099)
        
        int_86101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3124, 28), 'int')
        # Applying the binary operator '==' (line 3124)
        result_eq_86102 = python_operator(stypy.reporting.localization.Localization(__file__, 3124, 15), '==', len_call_result_86100, int_86101)
        
        # Evaluating assert statement condition
        
        
        # Call to len(...): (line 3125)
        # Processing the call arguments (line 3125)
        
        # Obtaining the type of the subscript
        int_86104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3125, 24), 'int')
        # Getting the type of 'toks' (line 3125)
        toks_86105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3125, 19), 'toks', False)
        # Obtaining the member '__getitem__' of a type (line 3125)
        getitem___86106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3125, 19), toks_86105, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3125)
        subscript_call_result_86107 = invoke(stypy.reporting.localization.Localization(__file__, 3125, 19), getitem___86106, int_86104)
        
        # Processing the call keyword arguments (line 3125)
        kwargs_86108 = {}
        # Getting the type of 'len' (line 3125)
        len_86103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3125, 15), 'len', False)
        # Calling len(args, kwargs) (line 3125)
        len_call_result_86109 = invoke(stypy.reporting.localization.Localization(__file__, 3125, 15), len_86103, *[subscript_call_result_86107], **kwargs_86108)
        
        int_86110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3125, 31), 'int')
        # Applying the binary operator '==' (line 3125)
        result_eq_86111 = python_operator(stypy.reporting.localization.Localization(__file__, 3125, 15), '==', len_call_result_86109, int_86110)
        
        
        # Assigning a Subscript to a Tuple (line 3126):
        
        # Assigning a Subscript to a Name (line 3126):
        
        # Obtaining the type of the subscript
        int_86112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3126, 8), 'int')
        
        # Obtaining the type of the subscript
        int_86113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3126, 24), 'int')
        # Getting the type of 'toks' (line 3126)
        toks_86114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3126, 19), 'toks')
        # Obtaining the member '__getitem__' of a type (line 3126)
        getitem___86115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3126, 19), toks_86114, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3126)
        subscript_call_result_86116 = invoke(stypy.reporting.localization.Localization(__file__, 3126, 19), getitem___86115, int_86113)
        
        # Obtaining the member '__getitem__' of a type (line 3126)
        getitem___86117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3126, 8), subscript_call_result_86116, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3126)
        subscript_call_result_86118 = invoke(stypy.reporting.localization.Localization(__file__, 3126, 8), getitem___86117, int_86112)
        
        # Assigning a type to the variable 'tuple_var_assignment_77319' (line 3126)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3126, 8), 'tuple_var_assignment_77319', subscript_call_result_86118)
        
        # Assigning a Subscript to a Name (line 3126):
        
        # Obtaining the type of the subscript
        int_86119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3126, 8), 'int')
        
        # Obtaining the type of the subscript
        int_86120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3126, 24), 'int')
        # Getting the type of 'toks' (line 3126)
        toks_86121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3126, 19), 'toks')
        # Obtaining the member '__getitem__' of a type (line 3126)
        getitem___86122 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3126, 19), toks_86121, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3126)
        subscript_call_result_86123 = invoke(stypy.reporting.localization.Localization(__file__, 3126, 19), getitem___86122, int_86120)
        
        # Obtaining the member '__getitem__' of a type (line 3126)
        getitem___86124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3126, 8), subscript_call_result_86123, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3126)
        subscript_call_result_86125 = invoke(stypy.reporting.localization.Localization(__file__, 3126, 8), getitem___86124, int_86119)
        
        # Assigning a type to the variable 'tuple_var_assignment_77320' (line 3126)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3126, 8), 'tuple_var_assignment_77320', subscript_call_result_86125)
        
        # Assigning a Name to a Name (line 3126):
        # Getting the type of 'tuple_var_assignment_77319' (line 3126)
        tuple_var_assignment_77319_86126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3126, 8), 'tuple_var_assignment_77319')
        # Assigning a type to the variable 'num' (line 3126)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3126, 8), 'num', tuple_var_assignment_77319_86126)
        
        # Assigning a Name to a Name (line 3126):
        # Getting the type of 'tuple_var_assignment_77320' (line 3126)
        tuple_var_assignment_77320_86127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3126, 8), 'tuple_var_assignment_77320')
        # Assigning a type to the variable 'den' (line 3126)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3126, 13), 'den', tuple_var_assignment_77320_86127)
        
        # Call to _genfrac(...): (line 3128)
        # Processing the call arguments (line 3128)
        unicode_86130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3128, 29), 'unicode', u'(')
        unicode_86131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3128, 34), 'unicode', u')')
        float_86132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3128, 39), 'float')
        
        # Obtaining the type of the subscript
        unicode_86133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3129, 51), 'unicode', u'textstyle')
        # Getting the type of 'self' (line 3129)
        self_86134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3129, 29), 'self', False)
        # Obtaining the member '_math_style_dict' of a type (line 3129)
        _math_style_dict_86135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3129, 29), self_86134, '_math_style_dict')
        # Obtaining the member '__getitem__' of a type (line 3129)
        getitem___86136 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3129, 29), _math_style_dict_86135, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3129)
        subscript_call_result_86137 = invoke(stypy.reporting.localization.Localization(__file__, 3129, 29), getitem___86136, unicode_86133)
        
        # Getting the type of 'num' (line 3129)
        num_86138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3129, 65), 'num', False)
        # Getting the type of 'den' (line 3129)
        den_86139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3129, 70), 'den', False)
        # Processing the call keyword arguments (line 3128)
        kwargs_86140 = {}
        # Getting the type of 'self' (line 3128)
        self_86128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3128, 15), 'self', False)
        # Obtaining the member '_genfrac' of a type (line 3128)
        _genfrac_86129 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3128, 15), self_86128, '_genfrac')
        # Calling _genfrac(args, kwargs) (line 3128)
        _genfrac_call_result_86141 = invoke(stypy.reporting.localization.Localization(__file__, 3128, 15), _genfrac_86129, *[unicode_86130, unicode_86131, float_86132, subscript_call_result_86137, num_86138, den_86139], **kwargs_86140)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3128)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3128, 8), 'stypy_return_type', _genfrac_call_result_86141)
        
        # ################# End of 'binom(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'binom' in the type store
        # Getting the type of 'stypy_return_type' (line 3123)
        stypy_return_type_86142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3123, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_86142)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'binom'
        return stypy_return_type_86142


    @norecursion
    def sqrt(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'sqrt'
        module_type_store = module_type_store.open_function_context('sqrt', 3131, 4, False)
        # Assigning a type to the variable 'self' (line 3132)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3132, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.sqrt.__dict__.__setitem__('stypy_localization', localization)
        Parser.sqrt.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.sqrt.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.sqrt.__dict__.__setitem__('stypy_function_name', 'Parser.sqrt')
        Parser.sqrt.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.sqrt.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.sqrt.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.sqrt.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.sqrt.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.sqrt.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.sqrt.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.sqrt', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'sqrt', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'sqrt(...)' code ##################

        
        # Assigning a Subscript to a Tuple (line 3133):
        
        # Assigning a Subscript to a Name (line 3133):
        
        # Obtaining the type of the subscript
        int_86143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3133, 8), 'int')
        
        # Obtaining the type of the subscript
        int_86144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3133, 26), 'int')
        # Getting the type of 'toks' (line 3133)
        toks_86145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3133, 21), 'toks')
        # Obtaining the member '__getitem__' of a type (line 3133)
        getitem___86146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3133, 21), toks_86145, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3133)
        subscript_call_result_86147 = invoke(stypy.reporting.localization.Localization(__file__, 3133, 21), getitem___86146, int_86144)
        
        # Obtaining the member '__getitem__' of a type (line 3133)
        getitem___86148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3133, 8), subscript_call_result_86147, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3133)
        subscript_call_result_86149 = invoke(stypy.reporting.localization.Localization(__file__, 3133, 8), getitem___86148, int_86143)
        
        # Assigning a type to the variable 'tuple_var_assignment_77321' (line 3133)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3133, 8), 'tuple_var_assignment_77321', subscript_call_result_86149)
        
        # Assigning a Subscript to a Name (line 3133):
        
        # Obtaining the type of the subscript
        int_86150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3133, 8), 'int')
        
        # Obtaining the type of the subscript
        int_86151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3133, 26), 'int')
        # Getting the type of 'toks' (line 3133)
        toks_86152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3133, 21), 'toks')
        # Obtaining the member '__getitem__' of a type (line 3133)
        getitem___86153 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3133, 21), toks_86152, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3133)
        subscript_call_result_86154 = invoke(stypy.reporting.localization.Localization(__file__, 3133, 21), getitem___86153, int_86151)
        
        # Obtaining the member '__getitem__' of a type (line 3133)
        getitem___86155 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3133, 8), subscript_call_result_86154, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3133)
        subscript_call_result_86156 = invoke(stypy.reporting.localization.Localization(__file__, 3133, 8), getitem___86155, int_86150)
        
        # Assigning a type to the variable 'tuple_var_assignment_77322' (line 3133)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3133, 8), 'tuple_var_assignment_77322', subscript_call_result_86156)
        
        # Assigning a Name to a Name (line 3133):
        # Getting the type of 'tuple_var_assignment_77321' (line 3133)
        tuple_var_assignment_77321_86157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3133, 8), 'tuple_var_assignment_77321')
        # Assigning a type to the variable 'root' (line 3133)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3133, 8), 'root', tuple_var_assignment_77321_86157)
        
        # Assigning a Name to a Name (line 3133):
        # Getting the type of 'tuple_var_assignment_77322' (line 3133)
        tuple_var_assignment_77322_86158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3133, 8), 'tuple_var_assignment_77322')
        # Assigning a type to the variable 'body' (line 3133)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3133, 14), 'body', tuple_var_assignment_77322_86158)
        
        # Assigning a Call to a Name (line 3134):
        
        # Assigning a Call to a Name (line 3134):
        
        # Call to get_state(...): (line 3134)
        # Processing the call keyword arguments (line 3134)
        kwargs_86161 = {}
        # Getting the type of 'self' (line 3134)
        self_86159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3134, 16), 'self', False)
        # Obtaining the member 'get_state' of a type (line 3134)
        get_state_86160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3134, 16), self_86159, 'get_state')
        # Calling get_state(args, kwargs) (line 3134)
        get_state_call_result_86162 = invoke(stypy.reporting.localization.Localization(__file__, 3134, 16), get_state_86160, *[], **kwargs_86161)
        
        # Assigning a type to the variable 'state' (line 3134)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3134, 8), 'state', get_state_call_result_86162)
        
        # Assigning a Call to a Name (line 3135):
        
        # Assigning a Call to a Name (line 3135):
        
        # Call to get_underline_thickness(...): (line 3135)
        # Processing the call arguments (line 3135)
        # Getting the type of 'state' (line 3136)
        state_86166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3136, 12), 'state', False)
        # Obtaining the member 'font' of a type (line 3136)
        font_86167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3136, 12), state_86166, 'font')
        # Getting the type of 'state' (line 3136)
        state_86168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3136, 24), 'state', False)
        # Obtaining the member 'fontsize' of a type (line 3136)
        fontsize_86169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3136, 24), state_86168, 'fontsize')
        # Getting the type of 'state' (line 3136)
        state_86170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3136, 40), 'state', False)
        # Obtaining the member 'dpi' of a type (line 3136)
        dpi_86171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3136, 40), state_86170, 'dpi')
        # Processing the call keyword arguments (line 3135)
        kwargs_86172 = {}
        # Getting the type of 'state' (line 3135)
        state_86163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3135, 20), 'state', False)
        # Obtaining the member 'font_output' of a type (line 3135)
        font_output_86164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3135, 20), state_86163, 'font_output')
        # Obtaining the member 'get_underline_thickness' of a type (line 3135)
        get_underline_thickness_86165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3135, 20), font_output_86164, 'get_underline_thickness')
        # Calling get_underline_thickness(args, kwargs) (line 3135)
        get_underline_thickness_call_result_86173 = invoke(stypy.reporting.localization.Localization(__file__, 3135, 20), get_underline_thickness_86165, *[font_86167, fontsize_86169, dpi_86171], **kwargs_86172)
        
        # Assigning a type to the variable 'thickness' (line 3135)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3135, 8), 'thickness', get_underline_thickness_call_result_86173)
        
        # Assigning a BinOp to a Name (line 3140):
        
        # Assigning a BinOp to a Name (line 3140):
        # Getting the type of 'body' (line 3140)
        body_86174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3140, 17), 'body')
        # Obtaining the member 'height' of a type (line 3140)
        height_86175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3140, 17), body_86174, 'height')
        # Getting the type of 'body' (line 3140)
        body_86176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3140, 31), 'body')
        # Obtaining the member 'shift_amount' of a type (line 3140)
        shift_amount_86177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3140, 31), body_86176, 'shift_amount')
        # Applying the binary operator '-' (line 3140)
        result_sub_86178 = python_operator(stypy.reporting.localization.Localization(__file__, 3140, 17), '-', height_86175, shift_amount_86177)
        
        # Getting the type of 'thickness' (line 3140)
        thickness_86179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3140, 51), 'thickness')
        float_86180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3140, 63), 'float')
        # Applying the binary operator '*' (line 3140)
        result_mul_86181 = python_operator(stypy.reporting.localization.Localization(__file__, 3140, 51), '*', thickness_86179, float_86180)
        
        # Applying the binary operator '+' (line 3140)
        result_add_86182 = python_operator(stypy.reporting.localization.Localization(__file__, 3140, 49), '+', result_sub_86178, result_mul_86181)
        
        # Assigning a type to the variable 'height' (line 3140)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3140, 8), 'height', result_add_86182)
        
        # Assigning a BinOp to a Name (line 3141):
        
        # Assigning a BinOp to a Name (line 3141):
        # Getting the type of 'body' (line 3141)
        body_86183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3141, 16), 'body')
        # Obtaining the member 'depth' of a type (line 3141)
        depth_86184 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3141, 16), body_86183, 'depth')
        # Getting the type of 'body' (line 3141)
        body_86185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3141, 29), 'body')
        # Obtaining the member 'shift_amount' of a type (line 3141)
        shift_amount_86186 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3141, 29), body_86185, 'shift_amount')
        # Applying the binary operator '+' (line 3141)
        result_add_86187 = python_operator(stypy.reporting.localization.Localization(__file__, 3141, 16), '+', depth_86184, shift_amount_86186)
        
        # Assigning a type to the variable 'depth' (line 3141)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3141, 8), 'depth', result_add_86187)
        
        # Assigning a Call to a Name (line 3142):
        
        # Assigning a Call to a Name (line 3142):
        
        # Call to AutoHeightChar(...): (line 3142)
        # Processing the call arguments (line 3142)
        unicode_86189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3142, 31), 'unicode', u'\\__sqrt__')
        # Getting the type of 'height' (line 3142)
        height_86190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3142, 45), 'height', False)
        # Getting the type of 'depth' (line 3142)
        depth_86191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3142, 53), 'depth', False)
        # Getting the type of 'state' (line 3142)
        state_86192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3142, 60), 'state', False)
        # Processing the call keyword arguments (line 3142)
        # Getting the type of 'True' (line 3142)
        True_86193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3142, 74), 'True', False)
        keyword_86194 = True_86193
        kwargs_86195 = {'always': keyword_86194}
        # Getting the type of 'AutoHeightChar' (line 3142)
        AutoHeightChar_86188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3142, 16), 'AutoHeightChar', False)
        # Calling AutoHeightChar(args, kwargs) (line 3142)
        AutoHeightChar_call_result_86196 = invoke(stypy.reporting.localization.Localization(__file__, 3142, 16), AutoHeightChar_86188, *[unicode_86189, height_86190, depth_86191, state_86192], **kwargs_86195)
        
        # Assigning a type to the variable 'check' (line 3142)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3142, 8), 'check', AutoHeightChar_call_result_86196)
        
        # Assigning a BinOp to a Name (line 3143):
        
        # Assigning a BinOp to a Name (line 3143):
        # Getting the type of 'check' (line 3143)
        check_86197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3143, 17), 'check')
        # Obtaining the member 'height' of a type (line 3143)
        height_86198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3143, 17), check_86197, 'height')
        # Getting the type of 'check' (line 3143)
        check_86199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3143, 32), 'check')
        # Obtaining the member 'shift_amount' of a type (line 3143)
        shift_amount_86200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3143, 32), check_86199, 'shift_amount')
        # Applying the binary operator '-' (line 3143)
        result_sub_86201 = python_operator(stypy.reporting.localization.Localization(__file__, 3143, 17), '-', height_86198, shift_amount_86200)
        
        # Assigning a type to the variable 'height' (line 3143)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3143, 8), 'height', result_sub_86201)
        
        # Assigning a BinOp to a Name (line 3144):
        
        # Assigning a BinOp to a Name (line 3144):
        # Getting the type of 'check' (line 3144)
        check_86202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3144, 16), 'check')
        # Obtaining the member 'depth' of a type (line 3144)
        depth_86203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3144, 16), check_86202, 'depth')
        # Getting the type of 'check' (line 3144)
        check_86204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3144, 30), 'check')
        # Obtaining the member 'shift_amount' of a type (line 3144)
        shift_amount_86205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3144, 30), check_86204, 'shift_amount')
        # Applying the binary operator '+' (line 3144)
        result_add_86206 = python_operator(stypy.reporting.localization.Localization(__file__, 3144, 16), '+', depth_86203, shift_amount_86205)
        
        # Assigning a type to the variable 'depth' (line 3144)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3144, 8), 'depth', result_add_86206)
        
        # Assigning a Call to a Name (line 3147):
        
        # Assigning a Call to a Name (line 3147):
        
        # Call to Hlist(...): (line 3147)
        # Processing the call arguments (line 3147)
        
        # Obtaining an instance of the builtin type 'list' (line 3147)
        list_86208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3147, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3147)
        # Adding element type (line 3147)
        
        # Call to Hbox(...): (line 3147)
        # Processing the call arguments (line 3147)
        # Getting the type of 'thickness' (line 3147)
        thickness_86210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3147, 34), 'thickness', False)
        float_86211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3147, 46), 'float')
        # Applying the binary operator '*' (line 3147)
        result_mul_86212 = python_operator(stypy.reporting.localization.Localization(__file__, 3147, 34), '*', thickness_86210, float_86211)
        
        # Processing the call keyword arguments (line 3147)
        kwargs_86213 = {}
        # Getting the type of 'Hbox' (line 3147)
        Hbox_86209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3147, 29), 'Hbox', False)
        # Calling Hbox(args, kwargs) (line 3147)
        Hbox_call_result_86214 = invoke(stypy.reporting.localization.Localization(__file__, 3147, 29), Hbox_86209, *[result_mul_86212], **kwargs_86213)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3147, 28), list_86208, Hbox_call_result_86214)
        # Adding element type (line 3147)
        # Getting the type of 'body' (line 3148)
        body_86215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3148, 29), 'body', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3147, 28), list_86208, body_86215)
        # Adding element type (line 3147)
        
        # Call to Hbox(...): (line 3149)
        # Processing the call arguments (line 3149)
        # Getting the type of 'thickness' (line 3149)
        thickness_86217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3149, 34), 'thickness', False)
        float_86218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3149, 46), 'float')
        # Applying the binary operator '*' (line 3149)
        result_mul_86219 = python_operator(stypy.reporting.localization.Localization(__file__, 3149, 34), '*', thickness_86217, float_86218)
        
        # Processing the call keyword arguments (line 3149)
        kwargs_86220 = {}
        # Getting the type of 'Hbox' (line 3149)
        Hbox_86216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3149, 29), 'Hbox', False)
        # Calling Hbox(args, kwargs) (line 3149)
        Hbox_call_result_86221 = invoke(stypy.reporting.localization.Localization(__file__, 3149, 29), Hbox_86216, *[result_mul_86219], **kwargs_86220)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3147, 28), list_86208, Hbox_call_result_86221)
        
        # Processing the call keyword arguments (line 3147)
        kwargs_86222 = {}
        # Getting the type of 'Hlist' (line 3147)
        Hlist_86207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3147, 22), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 3147)
        Hlist_call_result_86223 = invoke(stypy.reporting.localization.Localization(__file__, 3147, 22), Hlist_86207, *[list_86208], **kwargs_86222)
        
        # Assigning a type to the variable 'padded_body' (line 3147)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3147, 8), 'padded_body', Hlist_call_result_86223)
        
        # Assigning a Call to a Name (line 3150):
        
        # Assigning a Call to a Name (line 3150):
        
        # Call to Vlist(...): (line 3150)
        # Processing the call arguments (line 3150)
        
        # Obtaining an instance of the builtin type 'list' (line 3150)
        list_86225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3150, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3150)
        # Adding element type (line 3150)
        
        # Call to Hrule(...): (line 3150)
        # Processing the call arguments (line 3150)
        # Getting the type of 'state' (line 3150)
        state_86227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3150, 33), 'state', False)
        # Processing the call keyword arguments (line 3150)
        kwargs_86228 = {}
        # Getting the type of 'Hrule' (line 3150)
        Hrule_86226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3150, 27), 'Hrule', False)
        # Calling Hrule(args, kwargs) (line 3150)
        Hrule_call_result_86229 = invoke(stypy.reporting.localization.Localization(__file__, 3150, 27), Hrule_86226, *[state_86227], **kwargs_86228)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3150, 26), list_86225, Hrule_call_result_86229)
        # Adding element type (line 3150)
        
        # Call to Fill(...): (line 3151)
        # Processing the call keyword arguments (line 3151)
        kwargs_86231 = {}
        # Getting the type of 'Fill' (line 3151)
        Fill_86230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3151, 27), 'Fill', False)
        # Calling Fill(args, kwargs) (line 3151)
        Fill_call_result_86232 = invoke(stypy.reporting.localization.Localization(__file__, 3151, 27), Fill_86230, *[], **kwargs_86231)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3150, 26), list_86225, Fill_call_result_86232)
        # Adding element type (line 3150)
        # Getting the type of 'padded_body' (line 3152)
        padded_body_86233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3152, 27), 'padded_body', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3150, 26), list_86225, padded_body_86233)
        
        # Processing the call keyword arguments (line 3150)
        kwargs_86234 = {}
        # Getting the type of 'Vlist' (line 3150)
        Vlist_86224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3150, 20), 'Vlist', False)
        # Calling Vlist(args, kwargs) (line 3150)
        Vlist_call_result_86235 = invoke(stypy.reporting.localization.Localization(__file__, 3150, 20), Vlist_86224, *[list_86225], **kwargs_86234)
        
        # Assigning a type to the variable 'rightside' (line 3150)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3150, 8), 'rightside', Vlist_call_result_86235)
        
        # Call to vpack(...): (line 3154)
        # Processing the call arguments (line 3154)
        # Getting the type of 'height' (line 3154)
        height_86238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3154, 24), 'height', False)
        # Getting the type of 'state' (line 3154)
        state_86239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3154, 34), 'state', False)
        # Obtaining the member 'fontsize' of a type (line 3154)
        fontsize_86240 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3154, 34), state_86239, 'fontsize')
        # Getting the type of 'state' (line 3154)
        state_86241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3154, 51), 'state', False)
        # Obtaining the member 'dpi' of a type (line 3154)
        dpi_86242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3154, 51), state_86241, 'dpi')
        # Applying the binary operator '*' (line 3154)
        result_mul_86243 = python_operator(stypy.reporting.localization.Localization(__file__, 3154, 34), '*', fontsize_86240, dpi_86242)
        
        float_86244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3154, 65), 'float')
        float_86245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3154, 73), 'float')
        # Applying the binary operator '*' (line 3154)
        result_mul_86246 = python_operator(stypy.reporting.localization.Localization(__file__, 3154, 65), '*', float_86244, float_86245)
        
        # Applying the binary operator 'div' (line 3154)
        result_div_86247 = python_operator(stypy.reporting.localization.Localization(__file__, 3154, 33), 'div', result_mul_86243, result_mul_86246)
        
        # Applying the binary operator '+' (line 3154)
        result_add_86248 = python_operator(stypy.reporting.localization.Localization(__file__, 3154, 24), '+', height_86238, result_div_86247)
        
        unicode_86249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3155, 24), 'unicode', u'exactly')
        # Getting the type of 'depth' (line 3155)
        depth_86250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3155, 35), 'depth', False)
        # Processing the call keyword arguments (line 3154)
        kwargs_86251 = {}
        # Getting the type of 'rightside' (line 3154)
        rightside_86236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3154, 8), 'rightside', False)
        # Obtaining the member 'vpack' of a type (line 3154)
        vpack_86237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3154, 8), rightside_86236, 'vpack')
        # Calling vpack(args, kwargs) (line 3154)
        vpack_call_result_86252 = invoke(stypy.reporting.localization.Localization(__file__, 3154, 8), vpack_86237, *[result_add_86248, unicode_86249, depth_86250], **kwargs_86251)
        
        
        # Type idiom detected: calculating its left and rigth part (line 3159)
        # Getting the type of 'root' (line 3159)
        root_86253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3159, 11), 'root')
        # Getting the type of 'None' (line 3159)
        None_86254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3159, 19), 'None')
        
        (may_be_86255, more_types_in_union_86256) = may_be_none(root_86253, None_86254)

        if may_be_86255:

            if more_types_in_union_86256:
                # Runtime conditional SSA (line 3159)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 3160):
            
            # Assigning a Call to a Name (line 3160):
            
            # Call to Box(...): (line 3160)
            # Processing the call arguments (line 3160)
            # Getting the type of 'check' (line 3160)
            check_86258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3160, 23), 'check', False)
            # Obtaining the member 'width' of a type (line 3160)
            width_86259 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3160, 23), check_86258, 'width')
            float_86260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3160, 37), 'float')
            # Applying the binary operator '*' (line 3160)
            result_mul_86261 = python_operator(stypy.reporting.localization.Localization(__file__, 3160, 23), '*', width_86259, float_86260)
            
            float_86262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3160, 42), 'float')
            float_86263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3160, 46), 'float')
            # Processing the call keyword arguments (line 3160)
            kwargs_86264 = {}
            # Getting the type of 'Box' (line 3160)
            Box_86257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3160, 19), 'Box', False)
            # Calling Box(args, kwargs) (line 3160)
            Box_call_result_86265 = invoke(stypy.reporting.localization.Localization(__file__, 3160, 19), Box_86257, *[result_mul_86261, float_86262, float_86263], **kwargs_86264)
            
            # Assigning a type to the variable 'root' (line 3160)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3160, 12), 'root', Box_call_result_86265)

            if more_types_in_union_86256:
                # Runtime conditional SSA for else branch (line 3159)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_86255) or more_types_in_union_86256):
            
            # Assigning a Call to a Name (line 3162):
            
            # Assigning a Call to a Name (line 3162):
            
            # Call to Hlist(...): (line 3162)
            # Processing the call arguments (line 3162)
            # Calculating list comprehension
            # Calculating comprehension expression
            # Getting the type of 'root' (line 3162)
            root_86272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3162, 50), 'root', False)
            comprehension_86273 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3162, 26), root_86272)
            # Assigning a type to the variable 'x' (line 3162)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3162, 26), 'x', comprehension_86273)
            
            # Call to Char(...): (line 3162)
            # Processing the call arguments (line 3162)
            # Getting the type of 'x' (line 3162)
            x_86268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3162, 31), 'x', False)
            # Getting the type of 'state' (line 3162)
            state_86269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3162, 34), 'state', False)
            # Processing the call keyword arguments (line 3162)
            kwargs_86270 = {}
            # Getting the type of 'Char' (line 3162)
            Char_86267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3162, 26), 'Char', False)
            # Calling Char(args, kwargs) (line 3162)
            Char_call_result_86271 = invoke(stypy.reporting.localization.Localization(__file__, 3162, 26), Char_86267, *[x_86268, state_86269], **kwargs_86270)
            
            list_86274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3162, 26), 'list')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3162, 26), list_86274, Char_call_result_86271)
            # Processing the call keyword arguments (line 3162)
            kwargs_86275 = {}
            # Getting the type of 'Hlist' (line 3162)
            Hlist_86266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3162, 19), 'Hlist', False)
            # Calling Hlist(args, kwargs) (line 3162)
            Hlist_call_result_86276 = invoke(stypy.reporting.localization.Localization(__file__, 3162, 19), Hlist_86266, *[list_86274], **kwargs_86275)
            
            # Assigning a type to the variable 'root' (line 3162)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3162, 12), 'root', Hlist_call_result_86276)
            
            # Call to shrink(...): (line 3163)
            # Processing the call keyword arguments (line 3163)
            kwargs_86279 = {}
            # Getting the type of 'root' (line 3163)
            root_86277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3163, 12), 'root', False)
            # Obtaining the member 'shrink' of a type (line 3163)
            shrink_86278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3163, 12), root_86277, 'shrink')
            # Calling shrink(args, kwargs) (line 3163)
            shrink_call_result_86280 = invoke(stypy.reporting.localization.Localization(__file__, 3163, 12), shrink_86278, *[], **kwargs_86279)
            
            
            # Call to shrink(...): (line 3164)
            # Processing the call keyword arguments (line 3164)
            kwargs_86283 = {}
            # Getting the type of 'root' (line 3164)
            root_86281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3164, 12), 'root', False)
            # Obtaining the member 'shrink' of a type (line 3164)
            shrink_86282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3164, 12), root_86281, 'shrink')
            # Calling shrink(args, kwargs) (line 3164)
            shrink_call_result_86284 = invoke(stypy.reporting.localization.Localization(__file__, 3164, 12), shrink_86282, *[], **kwargs_86283)
            

            if (may_be_86255 and more_types_in_union_86256):
                # SSA join for if statement (line 3159)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 3166):
        
        # Assigning a Call to a Name (line 3166):
        
        # Call to Vlist(...): (line 3166)
        # Processing the call arguments (line 3166)
        
        # Obtaining an instance of the builtin type 'list' (line 3166)
        list_86286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3166, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3166)
        # Adding element type (line 3166)
        
        # Call to Hlist(...): (line 3166)
        # Processing the call arguments (line 3166)
        
        # Obtaining an instance of the builtin type 'list' (line 3166)
        list_86288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3166, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3166)
        # Adding element type (line 3166)
        # Getting the type of 'root' (line 3166)
        root_86289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3166, 35), 'root', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3166, 34), list_86288, root_86289)
        
        # Processing the call keyword arguments (line 3166)
        kwargs_86290 = {}
        # Getting the type of 'Hlist' (line 3166)
        Hlist_86287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3166, 28), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 3166)
        Hlist_call_result_86291 = invoke(stypy.reporting.localization.Localization(__file__, 3166, 28), Hlist_86287, *[list_86288], **kwargs_86290)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3166, 27), list_86286, Hlist_call_result_86291)
        
        # Processing the call keyword arguments (line 3166)
        kwargs_86292 = {}
        # Getting the type of 'Vlist' (line 3166)
        Vlist_86285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3166, 21), 'Vlist', False)
        # Calling Vlist(args, kwargs) (line 3166)
        Vlist_call_result_86293 = invoke(stypy.reporting.localization.Localization(__file__, 3166, 21), Vlist_86285, *[list_86286], **kwargs_86292)
        
        # Assigning a type to the variable 'root_vlist' (line 3166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3166, 8), 'root_vlist', Vlist_call_result_86293)
        
        # Assigning a BinOp to a Attribute (line 3167):
        
        # Assigning a BinOp to a Attribute (line 3167):
        
        # Getting the type of 'height' (line 3167)
        height_86294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3167, 35), 'height')
        # Applying the 'usub' unary operator (line 3167)
        result___neg___86295 = python_operator(stypy.reporting.localization.Localization(__file__, 3167, 34), 'usub', height_86294)
        
        float_86296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3167, 44), 'float')
        # Applying the binary operator '*' (line 3167)
        result_mul_86297 = python_operator(stypy.reporting.localization.Localization(__file__, 3167, 34), '*', result___neg___86295, float_86296)
        
        # Getting the type of 'root_vlist' (line 3167)
        root_vlist_86298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3167, 8), 'root_vlist')
        # Setting the type of the member 'shift_amount' of a type (line 3167)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3167, 8), root_vlist_86298, 'shift_amount', result_mul_86297)
        
        # Assigning a Call to a Name (line 3169):
        
        # Assigning a Call to a Name (line 3169):
        
        # Call to Hlist(...): (line 3169)
        # Processing the call arguments (line 3169)
        
        # Obtaining an instance of the builtin type 'list' (line 3169)
        list_86300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3169, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3169)
        # Adding element type (line 3169)
        # Getting the type of 'root_vlist' (line 3169)
        root_vlist_86301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3169, 23), 'root_vlist', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3169, 22), list_86300, root_vlist_86301)
        # Adding element type (line 3169)
        
        # Call to Kern(...): (line 3171)
        # Processing the call arguments (line 3171)
        
        # Getting the type of 'check' (line 3171)
        check_86303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3171, 29), 'check', False)
        # Obtaining the member 'width' of a type (line 3171)
        width_86304 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3171, 29), check_86303, 'width')
        # Applying the 'usub' unary operator (line 3171)
        result___neg___86305 = python_operator(stypy.reporting.localization.Localization(__file__, 3171, 28), 'usub', width_86304)
        
        float_86306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3171, 43), 'float')
        # Applying the binary operator '*' (line 3171)
        result_mul_86307 = python_operator(stypy.reporting.localization.Localization(__file__, 3171, 28), '*', result___neg___86305, float_86306)
        
        # Processing the call keyword arguments (line 3171)
        kwargs_86308 = {}
        # Getting the type of 'Kern' (line 3171)
        Kern_86302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3171, 23), 'Kern', False)
        # Calling Kern(args, kwargs) (line 3171)
        Kern_call_result_86309 = invoke(stypy.reporting.localization.Localization(__file__, 3171, 23), Kern_86302, *[result_mul_86307], **kwargs_86308)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3169, 22), list_86300, Kern_call_result_86309)
        # Adding element type (line 3169)
        # Getting the type of 'check' (line 3172)
        check_86310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3172, 23), 'check', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3169, 22), list_86300, check_86310)
        # Adding element type (line 3169)
        # Getting the type of 'rightside' (line 3173)
        rightside_86311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3173, 23), 'rightside', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3169, 22), list_86300, rightside_86311)
        
        # Processing the call keyword arguments (line 3169)
        kwargs_86312 = {}
        # Getting the type of 'Hlist' (line 3169)
        Hlist_86299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3169, 16), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 3169)
        Hlist_call_result_86313 = invoke(stypy.reporting.localization.Localization(__file__, 3169, 16), Hlist_86299, *[list_86300], **kwargs_86312)
        
        # Assigning a type to the variable 'hlist' (line 3169)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3169, 8), 'hlist', Hlist_call_result_86313)
        
        # Obtaining an instance of the builtin type 'list' (line 3174)
        list_86314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3174, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3174)
        # Adding element type (line 3174)
        # Getting the type of 'hlist' (line 3174)
        hlist_86315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3174, 16), 'hlist')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3174, 15), list_86314, hlist_86315)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3174)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3174, 8), 'stypy_return_type', list_86314)
        
        # ################# End of 'sqrt(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'sqrt' in the type store
        # Getting the type of 'stypy_return_type' (line 3131)
        stypy_return_type_86316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3131, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_86316)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'sqrt'
        return stypy_return_type_86316


    @norecursion
    def overline(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'overline'
        module_type_store = module_type_store.open_function_context('overline', 3176, 4, False)
        # Assigning a type to the variable 'self' (line 3177)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3177, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.overline.__dict__.__setitem__('stypy_localization', localization)
        Parser.overline.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.overline.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.overline.__dict__.__setitem__('stypy_function_name', 'Parser.overline')
        Parser.overline.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.overline.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.overline.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.overline.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.overline.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.overline.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.overline.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.overline', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'overline', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'overline(...)' code ##################

        # Evaluating assert statement condition
        
        
        # Call to len(...): (line 3177)
        # Processing the call arguments (line 3177)
        # Getting the type of 'toks' (line 3177)
        toks_86318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3177, 19), 'toks', False)
        # Processing the call keyword arguments (line 3177)
        kwargs_86319 = {}
        # Getting the type of 'len' (line 3177)
        len_86317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3177, 15), 'len', False)
        # Calling len(args, kwargs) (line 3177)
        len_call_result_86320 = invoke(stypy.reporting.localization.Localization(__file__, 3177, 15), len_86317, *[toks_86318], **kwargs_86319)
        
        int_86321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3177, 26), 'int')
        # Applying the binary operator '==' (line 3177)
        result_eq_86322 = python_operator(stypy.reporting.localization.Localization(__file__, 3177, 15), '==', len_call_result_86320, int_86321)
        
        # Evaluating assert statement condition
        
        
        # Call to len(...): (line 3178)
        # Processing the call arguments (line 3178)
        
        # Obtaining the type of the subscript
        int_86324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3178, 24), 'int')
        # Getting the type of 'toks' (line 3178)
        toks_86325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3178, 19), 'toks', False)
        # Obtaining the member '__getitem__' of a type (line 3178)
        getitem___86326 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3178, 19), toks_86325, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3178)
        subscript_call_result_86327 = invoke(stypy.reporting.localization.Localization(__file__, 3178, 19), getitem___86326, int_86324)
        
        # Processing the call keyword arguments (line 3178)
        kwargs_86328 = {}
        # Getting the type of 'len' (line 3178)
        len_86323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3178, 15), 'len', False)
        # Calling len(args, kwargs) (line 3178)
        len_call_result_86329 = invoke(stypy.reporting.localization.Localization(__file__, 3178, 15), len_86323, *[subscript_call_result_86327], **kwargs_86328)
        
        int_86330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3178, 29), 'int')
        # Applying the binary operator '==' (line 3178)
        result_eq_86331 = python_operator(stypy.reporting.localization.Localization(__file__, 3178, 15), '==', len_call_result_86329, int_86330)
        
        
        # Assigning a Subscript to a Name (line 3180):
        
        # Assigning a Subscript to a Name (line 3180):
        
        # Obtaining the type of the subscript
        int_86332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3180, 23), 'int')
        
        # Obtaining the type of the subscript
        int_86333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3180, 20), 'int')
        # Getting the type of 'toks' (line 3180)
        toks_86334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3180, 15), 'toks')
        # Obtaining the member '__getitem__' of a type (line 3180)
        getitem___86335 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3180, 15), toks_86334, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3180)
        subscript_call_result_86336 = invoke(stypy.reporting.localization.Localization(__file__, 3180, 15), getitem___86335, int_86333)
        
        # Obtaining the member '__getitem__' of a type (line 3180)
        getitem___86337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3180, 15), subscript_call_result_86336, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3180)
        subscript_call_result_86338 = invoke(stypy.reporting.localization.Localization(__file__, 3180, 15), getitem___86337, int_86332)
        
        # Assigning a type to the variable 'body' (line 3180)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3180, 8), 'body', subscript_call_result_86338)
        
        # Assigning a Call to a Name (line 3182):
        
        # Assigning a Call to a Name (line 3182):
        
        # Call to get_state(...): (line 3182)
        # Processing the call keyword arguments (line 3182)
        kwargs_86341 = {}
        # Getting the type of 'self' (line 3182)
        self_86339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3182, 16), 'self', False)
        # Obtaining the member 'get_state' of a type (line 3182)
        get_state_86340 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3182, 16), self_86339, 'get_state')
        # Calling get_state(args, kwargs) (line 3182)
        get_state_call_result_86342 = invoke(stypy.reporting.localization.Localization(__file__, 3182, 16), get_state_86340, *[], **kwargs_86341)
        
        # Assigning a type to the variable 'state' (line 3182)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3182, 8), 'state', get_state_call_result_86342)
        
        # Assigning a Call to a Name (line 3183):
        
        # Assigning a Call to a Name (line 3183):
        
        # Call to get_underline_thickness(...): (line 3183)
        # Processing the call arguments (line 3183)
        # Getting the type of 'state' (line 3184)
        state_86346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3184, 12), 'state', False)
        # Obtaining the member 'font' of a type (line 3184)
        font_86347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3184, 12), state_86346, 'font')
        # Getting the type of 'state' (line 3184)
        state_86348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3184, 24), 'state', False)
        # Obtaining the member 'fontsize' of a type (line 3184)
        fontsize_86349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3184, 24), state_86348, 'fontsize')
        # Getting the type of 'state' (line 3184)
        state_86350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3184, 40), 'state', False)
        # Obtaining the member 'dpi' of a type (line 3184)
        dpi_86351 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3184, 40), state_86350, 'dpi')
        # Processing the call keyword arguments (line 3183)
        kwargs_86352 = {}
        # Getting the type of 'state' (line 3183)
        state_86343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3183, 20), 'state', False)
        # Obtaining the member 'font_output' of a type (line 3183)
        font_output_86344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3183, 20), state_86343, 'font_output')
        # Obtaining the member 'get_underline_thickness' of a type (line 3183)
        get_underline_thickness_86345 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3183, 20), font_output_86344, 'get_underline_thickness')
        # Calling get_underline_thickness(args, kwargs) (line 3183)
        get_underline_thickness_call_result_86353 = invoke(stypy.reporting.localization.Localization(__file__, 3183, 20), get_underline_thickness_86345, *[font_86347, fontsize_86349, dpi_86351], **kwargs_86352)
        
        # Assigning a type to the variable 'thickness' (line 3183)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3183, 8), 'thickness', get_underline_thickness_call_result_86353)
        
        # Assigning a BinOp to a Name (line 3186):
        
        # Assigning a BinOp to a Name (line 3186):
        # Getting the type of 'body' (line 3186)
        body_86354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3186, 17), 'body')
        # Obtaining the member 'height' of a type (line 3186)
        height_86355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3186, 17), body_86354, 'height')
        # Getting the type of 'body' (line 3186)
        body_86356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3186, 31), 'body')
        # Obtaining the member 'shift_amount' of a type (line 3186)
        shift_amount_86357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3186, 31), body_86356, 'shift_amount')
        # Applying the binary operator '-' (line 3186)
        result_sub_86358 = python_operator(stypy.reporting.localization.Localization(__file__, 3186, 17), '-', height_86355, shift_amount_86357)
        
        # Getting the type of 'thickness' (line 3186)
        thickness_86359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3186, 51), 'thickness')
        float_86360 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3186, 63), 'float')
        # Applying the binary operator '*' (line 3186)
        result_mul_86361 = python_operator(stypy.reporting.localization.Localization(__file__, 3186, 51), '*', thickness_86359, float_86360)
        
        # Applying the binary operator '+' (line 3186)
        result_add_86362 = python_operator(stypy.reporting.localization.Localization(__file__, 3186, 49), '+', result_sub_86358, result_mul_86361)
        
        # Assigning a type to the variable 'height' (line 3186)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3186, 8), 'height', result_add_86362)
        
        # Assigning a BinOp to a Name (line 3187):
        
        # Assigning a BinOp to a Name (line 3187):
        # Getting the type of 'body' (line 3187)
        body_86363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3187, 16), 'body')
        # Obtaining the member 'depth' of a type (line 3187)
        depth_86364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3187, 16), body_86363, 'depth')
        # Getting the type of 'body' (line 3187)
        body_86365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3187, 29), 'body')
        # Obtaining the member 'shift_amount' of a type (line 3187)
        shift_amount_86366 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3187, 29), body_86365, 'shift_amount')
        # Applying the binary operator '+' (line 3187)
        result_add_86367 = python_operator(stypy.reporting.localization.Localization(__file__, 3187, 16), '+', depth_86364, shift_amount_86366)
        
        # Assigning a type to the variable 'depth' (line 3187)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3187, 8), 'depth', result_add_86367)
        
        # Assigning a Call to a Name (line 3190):
        
        # Assigning a Call to a Name (line 3190):
        
        # Call to Vlist(...): (line 3190)
        # Processing the call arguments (line 3190)
        
        # Obtaining an instance of the builtin type 'list' (line 3190)
        list_86369 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3190, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3190)
        # Adding element type (line 3190)
        
        # Call to Hrule(...): (line 3190)
        # Processing the call arguments (line 3190)
        # Getting the type of 'state' (line 3190)
        state_86371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3190, 33), 'state', False)
        # Processing the call keyword arguments (line 3190)
        kwargs_86372 = {}
        # Getting the type of 'Hrule' (line 3190)
        Hrule_86370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3190, 27), 'Hrule', False)
        # Calling Hrule(args, kwargs) (line 3190)
        Hrule_call_result_86373 = invoke(stypy.reporting.localization.Localization(__file__, 3190, 27), Hrule_86370, *[state_86371], **kwargs_86372)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3190, 26), list_86369, Hrule_call_result_86373)
        # Adding element type (line 3190)
        
        # Call to Fill(...): (line 3191)
        # Processing the call keyword arguments (line 3191)
        kwargs_86375 = {}
        # Getting the type of 'Fill' (line 3191)
        Fill_86374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3191, 27), 'Fill', False)
        # Calling Fill(args, kwargs) (line 3191)
        Fill_call_result_86376 = invoke(stypy.reporting.localization.Localization(__file__, 3191, 27), Fill_86374, *[], **kwargs_86375)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3190, 26), list_86369, Fill_call_result_86376)
        # Adding element type (line 3190)
        
        # Call to Hlist(...): (line 3192)
        # Processing the call arguments (line 3192)
        
        # Obtaining an instance of the builtin type 'list' (line 3192)
        list_86378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3192, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3192)
        # Adding element type (line 3192)
        # Getting the type of 'body' (line 3192)
        body_86379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3192, 34), 'body', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3192, 33), list_86378, body_86379)
        
        # Processing the call keyword arguments (line 3192)
        kwargs_86380 = {}
        # Getting the type of 'Hlist' (line 3192)
        Hlist_86377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3192, 27), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 3192)
        Hlist_call_result_86381 = invoke(stypy.reporting.localization.Localization(__file__, 3192, 27), Hlist_86377, *[list_86378], **kwargs_86380)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3190, 26), list_86369, Hlist_call_result_86381)
        
        # Processing the call keyword arguments (line 3190)
        kwargs_86382 = {}
        # Getting the type of 'Vlist' (line 3190)
        Vlist_86368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3190, 20), 'Vlist', False)
        # Calling Vlist(args, kwargs) (line 3190)
        Vlist_call_result_86383 = invoke(stypy.reporting.localization.Localization(__file__, 3190, 20), Vlist_86368, *[list_86369], **kwargs_86382)
        
        # Assigning a type to the variable 'rightside' (line 3190)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3190, 8), 'rightside', Vlist_call_result_86383)
        
        # Call to vpack(...): (line 3195)
        # Processing the call arguments (line 3195)
        # Getting the type of 'height' (line 3195)
        height_86386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3195, 24), 'height', False)
        # Getting the type of 'state' (line 3195)
        state_86387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3195, 34), 'state', False)
        # Obtaining the member 'fontsize' of a type (line 3195)
        fontsize_86388 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3195, 34), state_86387, 'fontsize')
        # Getting the type of 'state' (line 3195)
        state_86389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3195, 51), 'state', False)
        # Obtaining the member 'dpi' of a type (line 3195)
        dpi_86390 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3195, 51), state_86389, 'dpi')
        # Applying the binary operator '*' (line 3195)
        result_mul_86391 = python_operator(stypy.reporting.localization.Localization(__file__, 3195, 34), '*', fontsize_86388, dpi_86390)
        
        float_86392 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3195, 65), 'float')
        float_86393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3195, 73), 'float')
        # Applying the binary operator '*' (line 3195)
        result_mul_86394 = python_operator(stypy.reporting.localization.Localization(__file__, 3195, 65), '*', float_86392, float_86393)
        
        # Applying the binary operator 'div' (line 3195)
        result_div_86395 = python_operator(stypy.reporting.localization.Localization(__file__, 3195, 33), 'div', result_mul_86391, result_mul_86394)
        
        # Applying the binary operator '+' (line 3195)
        result_add_86396 = python_operator(stypy.reporting.localization.Localization(__file__, 3195, 24), '+', height_86386, result_div_86395)
        
        unicode_86397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3196, 24), 'unicode', u'exactly')
        # Getting the type of 'depth' (line 3196)
        depth_86398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3196, 35), 'depth', False)
        # Processing the call keyword arguments (line 3195)
        kwargs_86399 = {}
        # Getting the type of 'rightside' (line 3195)
        rightside_86384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3195, 8), 'rightside', False)
        # Obtaining the member 'vpack' of a type (line 3195)
        vpack_86385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3195, 8), rightside_86384, 'vpack')
        # Calling vpack(args, kwargs) (line 3195)
        vpack_call_result_86400 = invoke(stypy.reporting.localization.Localization(__file__, 3195, 8), vpack_86385, *[result_add_86396, unicode_86397, depth_86398], **kwargs_86399)
        
        
        # Assigning a Call to a Name (line 3198):
        
        # Assigning a Call to a Name (line 3198):
        
        # Call to Hlist(...): (line 3198)
        # Processing the call arguments (line 3198)
        
        # Obtaining an instance of the builtin type 'list' (line 3198)
        list_86402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3198, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3198)
        # Adding element type (line 3198)
        # Getting the type of 'rightside' (line 3198)
        rightside_86403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3198, 23), 'rightside', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3198, 22), list_86402, rightside_86403)
        
        # Processing the call keyword arguments (line 3198)
        kwargs_86404 = {}
        # Getting the type of 'Hlist' (line 3198)
        Hlist_86401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3198, 16), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 3198)
        Hlist_call_result_86405 = invoke(stypy.reporting.localization.Localization(__file__, 3198, 16), Hlist_86401, *[list_86402], **kwargs_86404)
        
        # Assigning a type to the variable 'hlist' (line 3198)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3198, 8), 'hlist', Hlist_call_result_86405)
        
        # Obtaining an instance of the builtin type 'list' (line 3199)
        list_86406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3199, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3199)
        # Adding element type (line 3199)
        # Getting the type of 'hlist' (line 3199)
        hlist_86407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3199, 16), 'hlist')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3199, 15), list_86406, hlist_86407)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3199)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3199, 8), 'stypy_return_type', list_86406)
        
        # ################# End of 'overline(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'overline' in the type store
        # Getting the type of 'stypy_return_type' (line 3176)
        stypy_return_type_86408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3176, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_86408)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'overline'
        return stypy_return_type_86408


    @norecursion
    def _auto_sized_delimiter(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_auto_sized_delimiter'
        module_type_store = module_type_store.open_function_context('_auto_sized_delimiter', 3201, 4, False)
        # Assigning a type to the variable 'self' (line 3202)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3202, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser._auto_sized_delimiter.__dict__.__setitem__('stypy_localization', localization)
        Parser._auto_sized_delimiter.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser._auto_sized_delimiter.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser._auto_sized_delimiter.__dict__.__setitem__('stypy_function_name', 'Parser._auto_sized_delimiter')
        Parser._auto_sized_delimiter.__dict__.__setitem__('stypy_param_names_list', ['front', 'middle', 'back'])
        Parser._auto_sized_delimiter.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser._auto_sized_delimiter.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser._auto_sized_delimiter.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser._auto_sized_delimiter.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser._auto_sized_delimiter.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser._auto_sized_delimiter.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser._auto_sized_delimiter', ['front', 'middle', 'back'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_auto_sized_delimiter', localization, ['front', 'middle', 'back'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_auto_sized_delimiter(...)' code ##################

        
        # Assigning a Call to a Name (line 3202):
        
        # Assigning a Call to a Name (line 3202):
        
        # Call to get_state(...): (line 3202)
        # Processing the call keyword arguments (line 3202)
        kwargs_86411 = {}
        # Getting the type of 'self' (line 3202)
        self_86409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3202, 16), 'self', False)
        # Obtaining the member 'get_state' of a type (line 3202)
        get_state_86410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3202, 16), self_86409, 'get_state')
        # Calling get_state(args, kwargs) (line 3202)
        get_state_call_result_86412 = invoke(stypy.reporting.localization.Localization(__file__, 3202, 16), get_state_86410, *[], **kwargs_86411)
        
        # Assigning a type to the variable 'state' (line 3202)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3202, 8), 'state', get_state_call_result_86412)
        
        
        # Call to len(...): (line 3203)
        # Processing the call arguments (line 3203)
        # Getting the type of 'middle' (line 3203)
        middle_86414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3203, 15), 'middle', False)
        # Processing the call keyword arguments (line 3203)
        kwargs_86415 = {}
        # Getting the type of 'len' (line 3203)
        len_86413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3203, 11), 'len', False)
        # Calling len(args, kwargs) (line 3203)
        len_call_result_86416 = invoke(stypy.reporting.localization.Localization(__file__, 3203, 11), len_86413, *[middle_86414], **kwargs_86415)
        
        # Testing the type of an if condition (line 3203)
        if_condition_86417 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3203, 8), len_call_result_86416)
        # Assigning a type to the variable 'if_condition_86417' (line 3203)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3203, 8), 'if_condition_86417', if_condition_86417)
        # SSA begins for if statement (line 3203)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 3204):
        
        # Assigning a Call to a Name (line 3204):
        
        # Call to max(...): (line 3204)
        # Processing the call arguments (line 3204)
        # Calculating generator expression
        module_type_store = module_type_store.open_function_context('list comprehension expression', 3204, 25, True)
        # Calculating comprehension expression
        # Getting the type of 'middle' (line 3204)
        middle_86421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3204, 43), 'middle', False)
        comprehension_86422 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3204, 25), middle_86421)
        # Assigning a type to the variable 'x' (line 3204)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3204, 25), 'x', comprehension_86422)
        # Getting the type of 'x' (line 3204)
        x_86419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3204, 25), 'x', False)
        # Obtaining the member 'height' of a type (line 3204)
        height_86420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3204, 25), x_86419, 'height')
        list_86423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3204, 25), 'list')
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3204, 25), list_86423, height_86420)
        # Processing the call keyword arguments (line 3204)
        kwargs_86424 = {}
        # Getting the type of 'max' (line 3204)
        max_86418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3204, 21), 'max', False)
        # Calling max(args, kwargs) (line 3204)
        max_call_result_86425 = invoke(stypy.reporting.localization.Localization(__file__, 3204, 21), max_86418, *[list_86423], **kwargs_86424)
        
        # Assigning a type to the variable 'height' (line 3204)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3204, 12), 'height', max_call_result_86425)
        
        # Assigning a Call to a Name (line 3205):
        
        # Assigning a Call to a Name (line 3205):
        
        # Call to max(...): (line 3205)
        # Processing the call arguments (line 3205)
        # Calculating generator expression
        module_type_store = module_type_store.open_function_context('list comprehension expression', 3205, 24, True)
        # Calculating comprehension expression
        # Getting the type of 'middle' (line 3205)
        middle_86429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3205, 41), 'middle', False)
        comprehension_86430 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3205, 24), middle_86429)
        # Assigning a type to the variable 'x' (line 3205)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3205, 24), 'x', comprehension_86430)
        # Getting the type of 'x' (line 3205)
        x_86427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3205, 24), 'x', False)
        # Obtaining the member 'depth' of a type (line 3205)
        depth_86428 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3205, 24), x_86427, 'depth')
        list_86431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3205, 24), 'list')
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3205, 24), list_86431, depth_86428)
        # Processing the call keyword arguments (line 3205)
        kwargs_86432 = {}
        # Getting the type of 'max' (line 3205)
        max_86426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3205, 20), 'max', False)
        # Calling max(args, kwargs) (line 3205)
        max_call_result_86433 = invoke(stypy.reporting.localization.Localization(__file__, 3205, 20), max_86426, *[list_86431], **kwargs_86432)
        
        # Assigning a type to the variable 'depth' (line 3205)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3205, 12), 'depth', max_call_result_86433)
        
        # Assigning a Name to a Name (line 3206):
        
        # Assigning a Name to a Name (line 3206):
        # Getting the type of 'None' (line 3206)
        None_86434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3206, 21), 'None')
        # Assigning a type to the variable 'factor' (line 3206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3206, 12), 'factor', None_86434)
        # SSA branch for the else part of an if statement (line 3203)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Num to a Name (line 3208):
        
        # Assigning a Num to a Name (line 3208):
        int_86435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3208, 21), 'int')
        # Assigning a type to the variable 'height' (line 3208)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3208, 12), 'height', int_86435)
        
        # Assigning a Num to a Name (line 3209):
        
        # Assigning a Num to a Name (line 3209):
        int_86436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3209, 20), 'int')
        # Assigning a type to the variable 'depth' (line 3209)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3209, 12), 'depth', int_86436)
        
        # Assigning a Num to a Name (line 3210):
        
        # Assigning a Num to a Name (line 3210):
        float_86437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3210, 21), 'float')
        # Assigning a type to the variable 'factor' (line 3210)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3210, 12), 'factor', float_86437)
        # SSA join for if statement (line 3203)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a List to a Name (line 3211):
        
        # Assigning a List to a Name (line 3211):
        
        # Obtaining an instance of the builtin type 'list' (line 3211)
        list_86438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3211, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3211)
        
        # Assigning a type to the variable 'parts' (line 3211)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3211, 8), 'parts', list_86438)
        
        
        # Getting the type of 'front' (line 3213)
        front_86439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3213, 11), 'front')
        unicode_86440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3213, 20), 'unicode', u'.')
        # Applying the binary operator '!=' (line 3213)
        result_ne_86441 = python_operator(stypy.reporting.localization.Localization(__file__, 3213, 11), '!=', front_86439, unicode_86440)
        
        # Testing the type of an if condition (line 3213)
        if_condition_86442 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3213, 8), result_ne_86441)
        # Assigning a type to the variable 'if_condition_86442' (line 3213)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3213, 8), 'if_condition_86442', if_condition_86442)
        # SSA begins for if statement (line 3213)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to append(...): (line 3214)
        # Processing the call arguments (line 3214)
        
        # Call to AutoHeightChar(...): (line 3214)
        # Processing the call arguments (line 3214)
        # Getting the type of 'front' (line 3214)
        front_86446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3214, 40), 'front', False)
        # Getting the type of 'height' (line 3214)
        height_86447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3214, 47), 'height', False)
        # Getting the type of 'depth' (line 3214)
        depth_86448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3214, 55), 'depth', False)
        # Getting the type of 'state' (line 3214)
        state_86449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3214, 62), 'state', False)
        # Processing the call keyword arguments (line 3214)
        # Getting the type of 'factor' (line 3214)
        factor_86450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3214, 76), 'factor', False)
        keyword_86451 = factor_86450
        kwargs_86452 = {'factor': keyword_86451}
        # Getting the type of 'AutoHeightChar' (line 3214)
        AutoHeightChar_86445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3214, 25), 'AutoHeightChar', False)
        # Calling AutoHeightChar(args, kwargs) (line 3214)
        AutoHeightChar_call_result_86453 = invoke(stypy.reporting.localization.Localization(__file__, 3214, 25), AutoHeightChar_86445, *[front_86446, height_86447, depth_86448, state_86449], **kwargs_86452)
        
        # Processing the call keyword arguments (line 3214)
        kwargs_86454 = {}
        # Getting the type of 'parts' (line 3214)
        parts_86443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3214, 12), 'parts', False)
        # Obtaining the member 'append' of a type (line 3214)
        append_86444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3214, 12), parts_86443, 'append')
        # Calling append(args, kwargs) (line 3214)
        append_call_result_86455 = invoke(stypy.reporting.localization.Localization(__file__, 3214, 12), append_86444, *[AutoHeightChar_call_result_86453], **kwargs_86454)
        
        # SSA join for if statement (line 3213)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to extend(...): (line 3215)
        # Processing the call arguments (line 3215)
        # Getting the type of 'middle' (line 3215)
        middle_86458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3215, 21), 'middle', False)
        # Processing the call keyword arguments (line 3215)
        kwargs_86459 = {}
        # Getting the type of 'parts' (line 3215)
        parts_86456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3215, 8), 'parts', False)
        # Obtaining the member 'extend' of a type (line 3215)
        extend_86457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3215, 8), parts_86456, 'extend')
        # Calling extend(args, kwargs) (line 3215)
        extend_call_result_86460 = invoke(stypy.reporting.localization.Localization(__file__, 3215, 8), extend_86457, *[middle_86458], **kwargs_86459)
        
        
        
        # Getting the type of 'back' (line 3216)
        back_86461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3216, 11), 'back')
        unicode_86462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3216, 19), 'unicode', u'.')
        # Applying the binary operator '!=' (line 3216)
        result_ne_86463 = python_operator(stypy.reporting.localization.Localization(__file__, 3216, 11), '!=', back_86461, unicode_86462)
        
        # Testing the type of an if condition (line 3216)
        if_condition_86464 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3216, 8), result_ne_86463)
        # Assigning a type to the variable 'if_condition_86464' (line 3216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3216, 8), 'if_condition_86464', if_condition_86464)
        # SSA begins for if statement (line 3216)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to append(...): (line 3217)
        # Processing the call arguments (line 3217)
        
        # Call to AutoHeightChar(...): (line 3217)
        # Processing the call arguments (line 3217)
        # Getting the type of 'back' (line 3217)
        back_86468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3217, 40), 'back', False)
        # Getting the type of 'height' (line 3217)
        height_86469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3217, 46), 'height', False)
        # Getting the type of 'depth' (line 3217)
        depth_86470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3217, 54), 'depth', False)
        # Getting the type of 'state' (line 3217)
        state_86471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3217, 61), 'state', False)
        # Processing the call keyword arguments (line 3217)
        # Getting the type of 'factor' (line 3217)
        factor_86472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3217, 75), 'factor', False)
        keyword_86473 = factor_86472
        kwargs_86474 = {'factor': keyword_86473}
        # Getting the type of 'AutoHeightChar' (line 3217)
        AutoHeightChar_86467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3217, 25), 'AutoHeightChar', False)
        # Calling AutoHeightChar(args, kwargs) (line 3217)
        AutoHeightChar_call_result_86475 = invoke(stypy.reporting.localization.Localization(__file__, 3217, 25), AutoHeightChar_86467, *[back_86468, height_86469, depth_86470, state_86471], **kwargs_86474)
        
        # Processing the call keyword arguments (line 3217)
        kwargs_86476 = {}
        # Getting the type of 'parts' (line 3217)
        parts_86465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3217, 12), 'parts', False)
        # Obtaining the member 'append' of a type (line 3217)
        append_86466 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3217, 12), parts_86465, 'append')
        # Calling append(args, kwargs) (line 3217)
        append_call_result_86477 = invoke(stypy.reporting.localization.Localization(__file__, 3217, 12), append_86466, *[AutoHeightChar_call_result_86475], **kwargs_86476)
        
        # SSA join for if statement (line 3216)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 3218):
        
        # Assigning a Call to a Name (line 3218):
        
        # Call to Hlist(...): (line 3218)
        # Processing the call arguments (line 3218)
        # Getting the type of 'parts' (line 3218)
        parts_86479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3218, 22), 'parts', False)
        # Processing the call keyword arguments (line 3218)
        kwargs_86480 = {}
        # Getting the type of 'Hlist' (line 3218)
        Hlist_86478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3218, 16), 'Hlist', False)
        # Calling Hlist(args, kwargs) (line 3218)
        Hlist_call_result_86481 = invoke(stypy.reporting.localization.Localization(__file__, 3218, 16), Hlist_86478, *[parts_86479], **kwargs_86480)
        
        # Assigning a type to the variable 'hlist' (line 3218)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3218, 8), 'hlist', Hlist_call_result_86481)
        # Getting the type of 'hlist' (line 3219)
        hlist_86482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3219, 15), 'hlist')
        # Assigning a type to the variable 'stypy_return_type' (line 3219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3219, 8), 'stypy_return_type', hlist_86482)
        
        # ################# End of '_auto_sized_delimiter(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_auto_sized_delimiter' in the type store
        # Getting the type of 'stypy_return_type' (line 3201)
        stypy_return_type_86483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3201, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_86483)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_auto_sized_delimiter'
        return stypy_return_type_86483


    @norecursion
    def auto_delim(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'auto_delim'
        module_type_store = module_type_store.open_function_context('auto_delim', 3221, 4, False)
        # Assigning a type to the variable 'self' (line 3222)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3222, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Parser.auto_delim.__dict__.__setitem__('stypy_localization', localization)
        Parser.auto_delim.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Parser.auto_delim.__dict__.__setitem__('stypy_type_store', module_type_store)
        Parser.auto_delim.__dict__.__setitem__('stypy_function_name', 'Parser.auto_delim')
        Parser.auto_delim.__dict__.__setitem__('stypy_param_names_list', ['s', 'loc', 'toks'])
        Parser.auto_delim.__dict__.__setitem__('stypy_varargs_param_name', None)
        Parser.auto_delim.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Parser.auto_delim.__dict__.__setitem__('stypy_call_defaults', defaults)
        Parser.auto_delim.__dict__.__setitem__('stypy_call_varargs', varargs)
        Parser.auto_delim.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Parser.auto_delim.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Parser.auto_delim', ['s', 'loc', 'toks'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'auto_delim', localization, ['s', 'loc', 'toks'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'auto_delim(...)' code ##################

        
        # Assigning a Name to a Tuple (line 3223):
        
        # Assigning a Subscript to a Name (line 3223):
        
        # Obtaining the type of the subscript
        int_86484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3223, 8), 'int')
        # Getting the type of 'toks' (line 3223)
        toks_86485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3223, 30), 'toks')
        # Obtaining the member '__getitem__' of a type (line 3223)
        getitem___86486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3223, 8), toks_86485, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3223)
        subscript_call_result_86487 = invoke(stypy.reporting.localization.Localization(__file__, 3223, 8), getitem___86486, int_86484)
        
        # Assigning a type to the variable 'tuple_var_assignment_77323' (line 3223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3223, 8), 'tuple_var_assignment_77323', subscript_call_result_86487)
        
        # Assigning a Subscript to a Name (line 3223):
        
        # Obtaining the type of the subscript
        int_86488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3223, 8), 'int')
        # Getting the type of 'toks' (line 3223)
        toks_86489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3223, 30), 'toks')
        # Obtaining the member '__getitem__' of a type (line 3223)
        getitem___86490 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3223, 8), toks_86489, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3223)
        subscript_call_result_86491 = invoke(stypy.reporting.localization.Localization(__file__, 3223, 8), getitem___86490, int_86488)
        
        # Assigning a type to the variable 'tuple_var_assignment_77324' (line 3223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3223, 8), 'tuple_var_assignment_77324', subscript_call_result_86491)
        
        # Assigning a Subscript to a Name (line 3223):
        
        # Obtaining the type of the subscript
        int_86492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3223, 8), 'int')
        # Getting the type of 'toks' (line 3223)
        toks_86493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3223, 30), 'toks')
        # Obtaining the member '__getitem__' of a type (line 3223)
        getitem___86494 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3223, 8), toks_86493, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3223)
        subscript_call_result_86495 = invoke(stypy.reporting.localization.Localization(__file__, 3223, 8), getitem___86494, int_86492)
        
        # Assigning a type to the variable 'tuple_var_assignment_77325' (line 3223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3223, 8), 'tuple_var_assignment_77325', subscript_call_result_86495)
        
        # Assigning a Name to a Name (line 3223):
        # Getting the type of 'tuple_var_assignment_77323' (line 3223)
        tuple_var_assignment_77323_86496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3223, 8), 'tuple_var_assignment_77323')
        # Assigning a type to the variable 'front' (line 3223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3223, 8), 'front', tuple_var_assignment_77323_86496)
        
        # Assigning a Name to a Name (line 3223):
        # Getting the type of 'tuple_var_assignment_77324' (line 3223)
        tuple_var_assignment_77324_86497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3223, 8), 'tuple_var_assignment_77324')
        # Assigning a type to the variable 'middle' (line 3223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3223, 15), 'middle', tuple_var_assignment_77324_86497)
        
        # Assigning a Name to a Name (line 3223):
        # Getting the type of 'tuple_var_assignment_77325' (line 3223)
        tuple_var_assignment_77325_86498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3223, 8), 'tuple_var_assignment_77325')
        # Assigning a type to the variable 'back' (line 3223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3223, 23), 'back', tuple_var_assignment_77325_86498)
        
        # Call to _auto_sized_delimiter(...): (line 3225)
        # Processing the call arguments (line 3225)
        # Getting the type of 'front' (line 3225)
        front_86501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3225, 42), 'front', False)
        
        # Call to asList(...): (line 3225)
        # Processing the call keyword arguments (line 3225)
        kwargs_86504 = {}
        # Getting the type of 'middle' (line 3225)
        middle_86502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3225, 49), 'middle', False)
        # Obtaining the member 'asList' of a type (line 3225)
        asList_86503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3225, 49), middle_86502, 'asList')
        # Calling asList(args, kwargs) (line 3225)
        asList_call_result_86505 = invoke(stypy.reporting.localization.Localization(__file__, 3225, 49), asList_86503, *[], **kwargs_86504)
        
        # Getting the type of 'back' (line 3225)
        back_86506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3225, 66), 'back', False)
        # Processing the call keyword arguments (line 3225)
        kwargs_86507 = {}
        # Getting the type of 'self' (line 3225)
        self_86499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3225, 15), 'self', False)
        # Obtaining the member '_auto_sized_delimiter' of a type (line 3225)
        _auto_sized_delimiter_86500 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3225, 15), self_86499, '_auto_sized_delimiter')
        # Calling _auto_sized_delimiter(args, kwargs) (line 3225)
        _auto_sized_delimiter_call_result_86508 = invoke(stypy.reporting.localization.Localization(__file__, 3225, 15), _auto_sized_delimiter_86500, *[front_86501, asList_call_result_86505, back_86506], **kwargs_86507)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3225)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3225, 8), 'stypy_return_type', _auto_sized_delimiter_call_result_86508)
        
        # ################# End of 'auto_delim(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'auto_delim' in the type store
        # Getting the type of 'stypy_return_type' (line 3221)
        stypy_return_type_86509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3221, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_86509)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'auto_delim'
        return stypy_return_type_86509


# Assigning a type to the variable 'Parser' (line 2210)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2210, 0), 'Parser', Parser)

# Assigning a Call to a Name (line 2220):

# Call to dict(...): (line 2220)
# Processing the call keyword arguments (line 2220)
int_86511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2220, 41), 'int')
keyword_86512 = int_86511
int_86513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2220, 54), 'int')
keyword_86514 = int_86513
int_86515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2221, 40), 'int')
keyword_86516 = int_86515
int_86517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2221, 61), 'int')
keyword_86518 = int_86517
kwargs_86519 = {'textstyle': keyword_86514, 'scriptscriptstyle': keyword_86518, 'displaystyle': keyword_86512, 'scriptstyle': keyword_86516}
# Getting the type of 'dict' (line 2220)
dict_86510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2220, 23), 'dict', False)
# Calling dict(args, kwargs) (line 2220)
dict_call_result_86520 = invoke(stypy.reporting.localization.Localization(__file__, 2220, 23), dict_86510, *[], **kwargs_86519)

# Getting the type of 'Parser'
Parser_86521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_math_style_dict' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86521, '_math_style_dict', dict_call_result_86520)

# Assigning a Call to a Name (line 2223):

# Call to set(...): (line 2223)
# Processing the call arguments (line 2223)

# Call to split(...): (line 2236)
# Processing the call keyword arguments (line 2236)
kwargs_86525 = {}
unicode_86523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2236, (-1)), 'unicode', u'\n      + * -\n      \\pm             \\sqcap                   \\rhd\n      \\mp             \\sqcup                   \\unlhd\n      \\times          \\vee                     \\unrhd\n      \\div            \\wedge                   \\oplus\n      \\ast            \\setminus                \\ominus\n      \\star           \\wr                      \\otimes\n      \\circ           \\diamond                 \\oslash\n      \\bullet         \\bigtriangleup           \\odot\n      \\cdot           \\bigtriangledown         \\bigcirc\n      \\cap            \\triangleleft            \\dagger\n      \\cup            \\triangleright           \\ddagger\n      \\uplus          \\lhd                     \\amalg')
# Obtaining the member 'split' of a type (line 2236)
split_86524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2236, (-1)), unicode_86523, 'split')
# Calling split(args, kwargs) (line 2236)
split_call_result_86526 = invoke(stypy.reporting.localization.Localization(__file__, 2236, (-1)), split_86524, *[], **kwargs_86525)

# Processing the call keyword arguments (line 2223)
kwargs_86527 = {}
# Getting the type of 'set' (line 2223)
set_86522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2223, 24), 'set', False)
# Calling set(args, kwargs) (line 2223)
set_call_result_86528 = invoke(stypy.reporting.localization.Localization(__file__, 2223, 24), set_86522, *[split_call_result_86526], **kwargs_86527)

# Getting the type of 'Parser'
Parser_86529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_binary_operators' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86529, '_binary_operators', set_call_result_86528)

# Assigning a Call to a Name (line 2238):

# Call to set(...): (line 2238)
# Processing the call arguments (line 2238)

# Call to split(...): (line 2249)
# Processing the call keyword arguments (line 2249)
kwargs_86533 = {}
unicode_86531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2249, (-1)), 'unicode', u'\n      = < > :\n      \\leq            \\geq             \\equiv           \\models\n      \\prec           \\succ            \\sim             \\perp\n      \\preceq         \\succeq          \\simeq           \\mid\n      \\ll             \\gg              \\asymp           \\parallel\n      \\subset         \\supset          \\approx          \\bowtie\n      \\subseteq       \\supseteq        \\cong            \\Join\n      \\sqsubset       \\sqsupset        \\neq             \\smile\n      \\sqsubseteq     \\sqsupseteq      \\doteq           \\frown\n      \\in             \\ni              \\propto          \\vdash\n      \\dashv          \\dots            \\dotplus         \\doteqdot')
# Obtaining the member 'split' of a type (line 2249)
split_86532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2249, (-1)), unicode_86531, 'split')
# Calling split(args, kwargs) (line 2249)
split_call_result_86534 = invoke(stypy.reporting.localization.Localization(__file__, 2249, (-1)), split_86532, *[], **kwargs_86533)

# Processing the call keyword arguments (line 2238)
kwargs_86535 = {}
# Getting the type of 'set' (line 2238)
set_86530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2238, 24), 'set', False)
# Calling set(args, kwargs) (line 2238)
set_call_result_86536 = invoke(stypy.reporting.localization.Localization(__file__, 2238, 24), set_86530, *[split_call_result_86534], **kwargs_86535)

# Getting the type of 'Parser'
Parser_86537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_relation_symbols' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86537, '_relation_symbols', set_call_result_86536)

# Assigning a Call to a Name (line 2251):

# Call to set(...): (line 2251)
# Processing the call arguments (line 2251)

# Call to split(...): (line 2262)
# Processing the call keyword arguments (line 2262)
kwargs_86541 = {}
unicode_86539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2262, (-1)), 'unicode', u'\n      \\leftarrow              \\longleftarrow           \\uparrow\n      \\Leftarrow              \\Longleftarrow           \\Uparrow\n      \\rightarrow             \\longrightarrow          \\downarrow\n      \\Rightarrow             \\Longrightarrow          \\Downarrow\n      \\leftrightarrow         \\longleftrightarrow      \\updownarrow\n      \\Leftrightarrow         \\Longleftrightarrow      \\Updownarrow\n      \\mapsto                 \\longmapsto              \\nearrow\n      \\hookleftarrow          \\hookrightarrow          \\searrow\n      \\leftharpoonup          \\rightharpoonup          \\swarrow\n      \\leftharpoondown        \\rightharpoondown        \\nwarrow\n      \\rightleftharpoons      \\leadsto')
# Obtaining the member 'split' of a type (line 2262)
split_86540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2262, (-1)), unicode_86539, 'split')
# Calling split(args, kwargs) (line 2262)
split_call_result_86542 = invoke(stypy.reporting.localization.Localization(__file__, 2262, (-1)), split_86540, *[], **kwargs_86541)

# Processing the call keyword arguments (line 2251)
kwargs_86543 = {}
# Getting the type of 'set' (line 2251)
set_86538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2251, 21), 'set', False)
# Calling set(args, kwargs) (line 2251)
set_call_result_86544 = invoke(stypy.reporting.localization.Localization(__file__, 2251, 21), set_86538, *[split_call_result_86542], **kwargs_86543)

# Getting the type of 'Parser'
Parser_86545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_arrow_symbols' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86545, '_arrow_symbols', set_call_result_86544)

# Assigning a BinOp to a Name (line 2264):
# Getting the type of 'Parser'
Parser_86546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Obtaining the member '_binary_operators' of a type
_binary_operators_86547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86546, '_binary_operators')
# Getting the type of 'Parser'
Parser_86548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Obtaining the member '_relation_symbols' of a type
_relation_symbols_86549 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86548, '_relation_symbols')
# Applying the binary operator '|' (line 2264)
result_or__86550 = python_operator(stypy.reporting.localization.Localization(__file__, 2264, 22), '|', _binary_operators_86547, _relation_symbols_86549)

# Getting the type of 'Parser'
Parser_86551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Obtaining the member '_arrow_symbols' of a type
_arrow_symbols_86552 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86551, '_arrow_symbols')
# Applying the binary operator '|' (line 2264)
result_or__86553 = python_operator(stypy.reporting.localization.Localization(__file__, 2264, 60), '|', result_or__86550, _arrow_symbols_86552)

# Getting the type of 'Parser'
Parser_86554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_spaced_symbols' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86554, '_spaced_symbols', result_or__86553)

# Assigning a Call to a Name (line 2266):

# Call to set(...): (line 2266)
# Processing the call arguments (line 2266)

# Call to split(...): (line 2266)
# Processing the call keyword arguments (line 2266)
kwargs_86558 = {}
unicode_86556 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2266, 31), 'unicode', u', ; . ! \\ldotp \\cdotp')
# Obtaining the member 'split' of a type (line 2266)
split_86557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2266, 31), unicode_86556, 'split')
# Calling split(args, kwargs) (line 2266)
split_call_result_86559 = invoke(stypy.reporting.localization.Localization(__file__, 2266, 31), split_86557, *[], **kwargs_86558)

# Processing the call keyword arguments (line 2266)
kwargs_86560 = {}
# Getting the type of 'set' (line 2266)
set_86555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2266, 27), 'set', False)
# Calling set(args, kwargs) (line 2266)
set_call_result_86561 = invoke(stypy.reporting.localization.Localization(__file__, 2266, 27), set_86555, *[split_call_result_86559], **kwargs_86560)

# Getting the type of 'Parser'
Parser_86562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_punctuation_symbols' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86562, '_punctuation_symbols', set_call_result_86561)

# Assigning a Call to a Name (line 2268):

# Call to set(...): (line 2268)
# Processing the call arguments (line 2268)

# Call to split(...): (line 2271)
# Processing the call keyword arguments (line 2271)
kwargs_86566 = {}
unicode_86564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2271, (-1)), 'unicode', u'\n       \\sum \\prod \\coprod \\bigcap \\bigcup \\bigsqcup \\bigvee\n       \\bigwedge \\bigodot \\bigotimes \\bigoplus \\biguplus\n       ')
# Obtaining the member 'split' of a type (line 2271)
split_86565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2271, (-1)), unicode_86564, 'split')
# Calling split(args, kwargs) (line 2271)
split_call_result_86567 = invoke(stypy.reporting.localization.Localization(__file__, 2271, (-1)), split_86565, *[], **kwargs_86566)

# Processing the call keyword arguments (line 2268)
kwargs_86568 = {}
# Getting the type of 'set' (line 2268)
set_86563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2268, 25), 'set', False)
# Calling set(args, kwargs) (line 2268)
set_call_result_86569 = invoke(stypy.reporting.localization.Localization(__file__, 2268, 25), set_86563, *[split_call_result_86567], **kwargs_86568)

# Getting the type of 'Parser'
Parser_86570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_overunder_symbols' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86570, '_overunder_symbols', set_call_result_86569)

# Assigning a Call to a Name (line 2273):

# Call to set(...): (line 2273)
# Processing the call arguments (line 2273)

# Call to split(...): (line 2274)
# Processing the call keyword arguments (line 2274)
kwargs_86574 = {}
unicode_86572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2274, 8), 'unicode', u'lim liminf limsup sup max min')
# Obtaining the member 'split' of a type (line 2274)
split_86573 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2274, 8), unicode_86572, 'split')
# Calling split(args, kwargs) (line 2274)
split_call_result_86575 = invoke(stypy.reporting.localization.Localization(__file__, 2274, 8), split_86573, *[], **kwargs_86574)

# Processing the call keyword arguments (line 2273)
kwargs_86576 = {}
# Getting the type of 'set' (line 2273)
set_86571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2273, 27), 'set', False)
# Calling set(args, kwargs) (line 2273)
set_call_result_86577 = invoke(stypy.reporting.localization.Localization(__file__, 2273, 27), set_86571, *[split_call_result_86575], **kwargs_86576)

# Getting the type of 'Parser'
Parser_86578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_overunder_functions' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86578, '_overunder_functions', set_call_result_86577)

# Assigning a Call to a Name (line 2276):

# Call to set(...): (line 2276)
# Processing the call arguments (line 2276)

# Call to split(...): (line 2276)
# Processing the call keyword arguments (line 2276)
kwargs_86582 = {}
unicode_86580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2276, 27), 'unicode', u'\\int \\oint')
# Obtaining the member 'split' of a type (line 2276)
split_86581 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2276, 27), unicode_86580, 'split')
# Calling split(args, kwargs) (line 2276)
split_call_result_86583 = invoke(stypy.reporting.localization.Localization(__file__, 2276, 27), split_86581, *[], **kwargs_86582)

# Processing the call keyword arguments (line 2276)
kwargs_86584 = {}
# Getting the type of 'set' (line 2276)
set_86579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2276, 23), 'set', False)
# Calling set(args, kwargs) (line 2276)
set_call_result_86585 = invoke(stypy.reporting.localization.Localization(__file__, 2276, 23), set_86579, *[split_call_result_86583], **kwargs_86584)

# Getting the type of 'Parser'
Parser_86586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_dropsub_symbols' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86586, '_dropsub_symbols', set_call_result_86585)

# Assigning a Call to a Name (line 2278):

# Call to set(...): (line 2278)
# Processing the call arguments (line 2278)

# Call to split(...): (line 2278)
# Processing the call keyword arguments (line 2278)
kwargs_86590 = {}
unicode_86588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2278, 21), 'unicode', u'rm cal it tt sf bf default bb frak circled scr regular')
# Obtaining the member 'split' of a type (line 2278)
split_86589 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2278, 21), unicode_86588, 'split')
# Calling split(args, kwargs) (line 2278)
split_call_result_86591 = invoke(stypy.reporting.localization.Localization(__file__, 2278, 21), split_86589, *[], **kwargs_86590)

# Processing the call keyword arguments (line 2278)
kwargs_86592 = {}
# Getting the type of 'set' (line 2278)
set_86587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2278, 17), 'set', False)
# Calling set(args, kwargs) (line 2278)
set_call_result_86593 = invoke(stypy.reporting.localization.Localization(__file__, 2278, 17), set_86587, *[split_call_result_86591], **kwargs_86592)

# Getting the type of 'Parser'
Parser_86594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_fontnames' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86594, '_fontnames', set_call_result_86593)

# Assigning a Call to a Name (line 2280):

# Call to set(...): (line 2280)
# Processing the call arguments (line 2280)

# Call to split(...): (line 2283)
# Processing the call keyword arguments (line 2283)
kwargs_86598 = {}
unicode_86596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2283, (-1)), 'unicode', u'\n      arccos csc ker min arcsin deg lg Pr arctan det lim sec arg dim\n      liminf sin cos exp limsup sinh cosh gcd ln sup cot hom log tan\n      coth inf max tanh')
# Obtaining the member 'split' of a type (line 2283)
split_86597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2283, (-1)), unicode_86596, 'split')
# Calling split(args, kwargs) (line 2283)
split_call_result_86599 = invoke(stypy.reporting.localization.Localization(__file__, 2283, (-1)), split_86597, *[], **kwargs_86598)

# Processing the call keyword arguments (line 2280)
kwargs_86600 = {}
# Getting the type of 'set' (line 2280)
set_86595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2280, 22), 'set', False)
# Calling set(args, kwargs) (line 2280)
set_call_result_86601 = invoke(stypy.reporting.localization.Localization(__file__, 2280, 22), set_86595, *[split_call_result_86599], **kwargs_86600)

# Getting the type of 'Parser'
Parser_86602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_function_names' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86602, '_function_names', set_call_result_86601)

# Assigning a Call to a Name (line 2285):

# Call to set(...): (line 2285)
# Processing the call arguments (line 2285)

# Call to split(...): (line 2287)
# Processing the call keyword arguments (line 2287)
kwargs_86606 = {}
unicode_86604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2287, (-1)), 'unicode', u'\n      | \\| / \\backslash \\uparrow \\downarrow \\updownarrow \\Uparrow\n      \\Downarrow \\Updownarrow . \\vert \\Vert \\\\|')
# Obtaining the member 'split' of a type (line 2287)
split_86605 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2287, (-1)), unicode_86604, 'split')
# Calling split(args, kwargs) (line 2287)
split_call_result_86607 = invoke(stypy.reporting.localization.Localization(__file__, 2287, (-1)), split_86605, *[], **kwargs_86606)

# Processing the call keyword arguments (line 2285)
kwargs_86608 = {}
# Getting the type of 'set' (line 2285)
set_86603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2285, 18), 'set', False)
# Calling set(args, kwargs) (line 2285)
set_call_result_86609 = invoke(stypy.reporting.localization.Localization(__file__, 2285, 18), set_86603, *[split_call_result_86607], **kwargs_86608)

# Getting the type of 'Parser'
Parser_86610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_ambi_delim' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86610, '_ambi_delim', set_call_result_86609)

# Assigning a Call to a Name (line 2289):

# Call to set(...): (line 2289)
# Processing the call arguments (line 2289)

# Call to split(...): (line 2289)
# Processing the call keyword arguments (line 2289)
kwargs_86614 = {}
unicode_86612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2289, 22), 'unicode', u'( [ \\{ < \\lfloor \\langle \\lceil')
# Obtaining the member 'split' of a type (line 2289)
split_86613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2289, 22), unicode_86612, 'split')
# Calling split(args, kwargs) (line 2289)
split_call_result_86615 = invoke(stypy.reporting.localization.Localization(__file__, 2289, 22), split_86613, *[], **kwargs_86614)

# Processing the call keyword arguments (line 2289)
kwargs_86616 = {}
# Getting the type of 'set' (line 2289)
set_86611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2289, 18), 'set', False)
# Calling set(args, kwargs) (line 2289)
set_call_result_86617 = invoke(stypy.reporting.localization.Localization(__file__, 2289, 18), set_86611, *[split_call_result_86615], **kwargs_86616)

# Getting the type of 'Parser'
Parser_86618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_left_delim' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86618, '_left_delim', set_call_result_86617)

# Assigning a Call to a Name (line 2291):

# Call to set(...): (line 2291)
# Processing the call arguments (line 2291)

# Call to split(...): (line 2291)
# Processing the call keyword arguments (line 2291)
kwargs_86622 = {}
unicode_86620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2291, 23), 'unicode', u') ] \\} > \\rfloor \\rangle \\rceil')
# Obtaining the member 'split' of a type (line 2291)
split_86621 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2291, 23), unicode_86620, 'split')
# Calling split(args, kwargs) (line 2291)
split_call_result_86623 = invoke(stypy.reporting.localization.Localization(__file__, 2291, 23), split_86621, *[], **kwargs_86622)

# Processing the call keyword arguments (line 2291)
kwargs_86624 = {}
# Getting the type of 'set' (line 2291)
set_86619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2291, 19), 'set', False)
# Calling set(args, kwargs) (line 2291)
set_call_result_86625 = invoke(stypy.reporting.localization.Localization(__file__, 2291, 19), set_86619, *[split_call_result_86623], **kwargs_86624)

# Getting the type of 'Parser'
Parser_86626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_right_delim' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86626, '_right_delim', set_call_result_86625)

# Assigning a Dict to a Name (line 2617):

# Obtaining an instance of the builtin type 'dict' (line 2617)
dict_86627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2617, 20), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 2617)
# Adding element type (key, value) (line 2617)
unicode_86628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2617, 22), 'unicode', u'\\,')
float_86629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2617, 38), 'float')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2617, 20), dict_86627, (unicode_86628, float_86629))
# Adding element type (key, value) (line 2617)
unicode_86630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2618, 22), 'unicode', u'\\thinspace')
float_86631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2618, 38), 'float')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2617, 20), dict_86627, (unicode_86630, float_86631))
# Adding element type (key, value) (line 2617)
unicode_86632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2619, 22), 'unicode', u'\\/')
float_86633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2619, 38), 'float')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2617, 20), dict_86627, (unicode_86632, float_86633))
# Adding element type (key, value) (line 2617)
unicode_86634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2620, 22), 'unicode', u'\\>')
float_86635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2620, 38), 'float')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2617, 20), dict_86627, (unicode_86634, float_86635))
# Adding element type (key, value) (line 2617)
unicode_86636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2621, 22), 'unicode', u'\\:')
float_86637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2621, 38), 'float')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2617, 20), dict_86627, (unicode_86636, float_86637))
# Adding element type (key, value) (line 2617)
unicode_86638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2622, 22), 'unicode', u'\\;')
float_86639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2622, 38), 'float')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2617, 20), dict_86627, (unicode_86638, float_86639))
# Adding element type (key, value) (line 2617)
unicode_86640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2623, 22), 'unicode', u'\\ ')
float_86641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2623, 38), 'float')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2617, 20), dict_86627, (unicode_86640, float_86641))
# Adding element type (key, value) (line 2617)
unicode_86642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2624, 22), 'unicode', u'\\enspace')
float_86643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2624, 38), 'float')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2617, 20), dict_86627, (unicode_86642, float_86643))
# Adding element type (key, value) (line 2617)
unicode_86644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2625, 22), 'unicode', u'\\quad')
int_86645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2625, 38), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2617, 20), dict_86627, (unicode_86644, int_86645))
# Adding element type (key, value) (line 2617)
unicode_86646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2626, 22), 'unicode', u'\\qquad')
int_86647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2626, 38), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2617, 20), dict_86627, (unicode_86646, int_86647))
# Adding element type (key, value) (line 2617)
unicode_86648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2627, 22), 'unicode', u'\\!')
float_86649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2627, 38), 'float')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2617, 20), dict_86627, (unicode_86648, float_86649))

# Getting the type of 'Parser'
Parser_86650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_space_widths' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86650, '_space_widths', dict_86627)

# Assigning a Name to a Name (line 2688):
# Getting the type of 'Parser'
Parser_86651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Obtaining the member 'symbol' of a type
symbol_86652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86651, 'symbol')
# Getting the type of 'Parser'
Parser_86653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member 'snowflake' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86653, 'snowflake', symbol_86652)

# Assigning a Dict to a Name (line 2695):

# Obtaining an instance of the builtin type 'dict' (line 2695)
dict_86654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2695, 23), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 2695)
# Adding element type (key, value) (line 2695)
unicode_86655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2699, 8), 'unicode', u'AA')

# Obtaining an instance of the builtin type 'tuple' (line 2699)
tuple_86656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2699, 16), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2699)
# Adding element type (line 2699)

# Obtaining an instance of the builtin type 'tuple' (line 2699)
tuple_86657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2699, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2699)
# Adding element type (line 2699)
unicode_86658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2699, 17), 'unicode', u'it')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2699, 17), tuple_86657, unicode_86658)
# Adding element type (line 2699)
unicode_86659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2699, 23), 'unicode', u'A')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2699, 17), tuple_86657, unicode_86659)
# Adding element type (line 2699)
float_86660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2699, 28), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2699, 17), tuple_86657, float_86660)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2699, 16), tuple_86656, tuple_86657)
# Adding element type (line 2699)

# Obtaining an instance of the builtin type 'tuple' (line 2699)
tuple_86661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2699, 35), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 2699)
# Adding element type (line 2699)
# Getting the type of 'None' (line 2699)
None_86662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2699, 35), 'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2699, 35), tuple_86661, None_86662)
# Adding element type (line 2699)
unicode_86663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2699, 41), 'unicode', u'\\circ')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2699, 35), tuple_86661, unicode_86663)
# Adding element type (line 2699)
float_86664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2699, 51), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2699, 35), tuple_86661, float_86664)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2699, 16), tuple_86656, tuple_86661)
# Adding element type (line 2699)
float_86665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2699, 57), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2699, 16), tuple_86656, float_86665)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2695, 23), dict_86654, (unicode_86655, tuple_86656))

# Getting the type of 'Parser'
Parser_86666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_char_over_chars' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86666, '_char_over_chars', dict_86654)

# Assigning a Dict to a Name (line 2739):

# Obtaining an instance of the builtin type 'dict' (line 2739)
dict_86667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2739, 18), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 2739)
# Adding element type (key, value) (line 2739)
unicode_86668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2740, 8), 'unicode', u'hat')
unicode_86669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2740, 19), 'unicode', u'\\circumflexaccent')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2739, 18), dict_86667, (unicode_86668, unicode_86669))
# Adding element type (key, value) (line 2739)
unicode_86670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2741, 8), 'unicode', u'breve')
unicode_86671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2741, 19), 'unicode', u'\\combiningbreve')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2739, 18), dict_86667, (unicode_86670, unicode_86671))
# Adding element type (key, value) (line 2739)
unicode_86672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2742, 8), 'unicode', u'bar')
unicode_86673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2742, 19), 'unicode', u'\\combiningoverline')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2739, 18), dict_86667, (unicode_86672, unicode_86673))
# Adding element type (key, value) (line 2739)
unicode_86674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2743, 8), 'unicode', u'grave')
unicode_86675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2743, 19), 'unicode', u'\\combininggraveaccent')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2739, 18), dict_86667, (unicode_86674, unicode_86675))
# Adding element type (key, value) (line 2739)
unicode_86676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2744, 8), 'unicode', u'acute')
unicode_86677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2744, 19), 'unicode', u'\\combiningacuteaccent')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2739, 18), dict_86667, (unicode_86676, unicode_86677))
# Adding element type (key, value) (line 2739)
unicode_86678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2745, 8), 'unicode', u'tilde')
unicode_86679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2745, 19), 'unicode', u'\\combiningtilde')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2739, 18), dict_86667, (unicode_86678, unicode_86679))
# Adding element type (key, value) (line 2739)
unicode_86680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2746, 8), 'unicode', u'dot')
unicode_86681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2746, 19), 'unicode', u'\\combiningdotabove')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2739, 18), dict_86667, (unicode_86680, unicode_86681))
# Adding element type (key, value) (line 2739)
unicode_86682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2747, 8), 'unicode', u'ddot')
unicode_86683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2747, 19), 'unicode', u'\\combiningdiaeresis')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2739, 18), dict_86667, (unicode_86682, unicode_86683))
# Adding element type (key, value) (line 2739)
unicode_86684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2748, 8), 'unicode', u'vec')
unicode_86685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2748, 19), 'unicode', u'\\combiningrightarrowabove')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2739, 18), dict_86667, (unicode_86684, unicode_86685))
# Adding element type (key, value) (line 2739)
unicode_86686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2749, 8), 'unicode', u'"')
unicode_86687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2749, 19), 'unicode', u'\\combiningdiaeresis')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2739, 18), dict_86667, (unicode_86686, unicode_86687))
# Adding element type (key, value) (line 2739)
unicode_86688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2750, 8), 'unicode', u'`')
unicode_86689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2750, 19), 'unicode', u'\\combininggraveaccent')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2739, 18), dict_86667, (unicode_86688, unicode_86689))
# Adding element type (key, value) (line 2739)
unicode_86690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2751, 8), 'unicode', u"'")
unicode_86691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2751, 19), 'unicode', u'\\combiningacuteaccent')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2739, 18), dict_86667, (unicode_86690, unicode_86691))
# Adding element type (key, value) (line 2739)
unicode_86692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2752, 8), 'unicode', u'~')
unicode_86693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2752, 19), 'unicode', u'\\combiningtilde')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2739, 18), dict_86667, (unicode_86692, unicode_86693))
# Adding element type (key, value) (line 2739)
unicode_86694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2753, 8), 'unicode', u'.')
unicode_86695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2753, 19), 'unicode', u'\\combiningdotabove')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2739, 18), dict_86667, (unicode_86694, unicode_86695))
# Adding element type (key, value) (line 2739)
unicode_86696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2754, 8), 'unicode', u'^')
unicode_86697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2754, 19), 'unicode', u'\\circumflexaccent')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2739, 18), dict_86667, (unicode_86696, unicode_86697))
# Adding element type (key, value) (line 2739)
unicode_86698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2755, 8), 'unicode', u'overrightarrow')
unicode_86699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2755, 28), 'unicode', u'\\rightarrow')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2739, 18), dict_86667, (unicode_86698, unicode_86699))
# Adding element type (key, value) (line 2739)
unicode_86700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2756, 8), 'unicode', u'overleftarrow')
unicode_86701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2756, 28), 'unicode', u'\\leftarrow')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2739, 18), dict_86667, (unicode_86700, unicode_86701))
# Adding element type (key, value) (line 2739)
unicode_86702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2757, 8), 'unicode', u'mathring')
unicode_86703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2757, 22), 'unicode', u'\\circ')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2739, 18), dict_86667, (unicode_86702, unicode_86703))

# Getting the type of 'Parser'
Parser_86704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_accent_map' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86704, '_accent_map', dict_86667)

# Assigning a Call to a Name (line 2760):

# Call to set(...): (line 2760)
# Processing the call arguments (line 2760)

# Call to split(...): (line 2760)
# Processing the call keyword arguments (line 2760)
kwargs_86708 = {}
unicode_86706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2760, 24), 'unicode', u'widehat widetilde widebar')
# Obtaining the member 'split' of a type (line 2760)
split_86707 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2760, 24), unicode_86706, 'split')
# Calling split(args, kwargs) (line 2760)
split_call_result_86709 = invoke(stypy.reporting.localization.Localization(__file__, 2760, 24), split_86707, *[], **kwargs_86708)

# Processing the call keyword arguments (line 2760)
kwargs_86710 = {}
# Getting the type of 'set' (line 2760)
set_86705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2760, 20), 'set', False)
# Calling set(args, kwargs) (line 2760)
set_call_result_86711 = invoke(stypy.reporting.localization.Localization(__file__, 2760, 20), set_86705, *[split_call_result_86709], **kwargs_86710)

# Getting the type of 'Parser'
Parser_86712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_wide_accents' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86712, '_wide_accents', set_call_result_86711)

# Assigning a Call to a Name (line 2763):

# Call to (...): (line 2763)
# Processing the call arguments (line 2763)

# Call to set(...): (line 2765)
# Processing the call arguments (line 2765)
# Getting the type of 'Parser'
Parser_86735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser', False)
# Obtaining the member '_accent_map' of a type
_accent_map_86736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86735, '_accent_map')
# Processing the call keyword arguments (line 2765)
kwargs_86737 = {}
# Getting the type of 'set' (line 2765)
set_86734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2765, 21), 'set', False)
# Calling set(args, kwargs) (line 2765)
set_call_result_86738 = invoke(stypy.reporting.localization.Localization(__file__, 2765, 21), set_86734, *[_accent_map_86736], **kwargs_86737)

# Processing the call keyword arguments (line 2763)
kwargs_86739 = {}

@norecursion
def _stypy_temp_lambda_17(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_stypy_temp_lambda_17'
    module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_17', 2763, 18, True)
    # Passed parameters checking function
    _stypy_temp_lambda_17.stypy_localization = localization
    _stypy_temp_lambda_17.stypy_type_of_self = None
    _stypy_temp_lambda_17.stypy_type_store = module_type_store
    _stypy_temp_lambda_17.stypy_function_name = '_stypy_temp_lambda_17'
    _stypy_temp_lambda_17.stypy_param_names_list = ['am']
    _stypy_temp_lambda_17.stypy_varargs_param_name = None
    _stypy_temp_lambda_17.stypy_kwargs_param_name = None
    _stypy_temp_lambda_17.stypy_call_defaults = defaults
    _stypy_temp_lambda_17.stypy_call_varargs = varargs
    _stypy_temp_lambda_17.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_17', ['am'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Stacktrace push for error reporting
    localization.set_stack_trace('_stypy_temp_lambda_17', ['am'], arguments)
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of the lambda function code ##################

    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 'tex2uni' (line 2763)
    tex2uni_86729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2763, 41), 'tex2uni', False)
    comprehension_86730 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2763, 30), tex2uni_86729)
    # Assigning a type to the variable 'p' (line 2763)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2763, 30), 'p', comprehension_86730)
    
    # Call to any(...): (line 2764)
    # Processing the call arguments (line 2764)
    # Calculating generator expression
    module_type_store = module_type_store.open_function_context('list comprehension expression', 2764, 34, True)
    # Calculating comprehension expression
    # Getting the type of 'am' (line 2764)
    am_86724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2764, 70), 'am', False)
    comprehension_86725 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2764, 34), am_86724)
    # Assigning a type to the variable 'a' (line 2764)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2764, 34), 'a', comprehension_86725)
    
    # Evaluating a boolean operation
    
    # Call to startswith(...): (line 2764)
    # Processing the call arguments (line 2764)
    # Getting the type of 'a' (line 2764)
    a_86717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2764, 47), 'a', False)
    # Processing the call keyword arguments (line 2764)
    kwargs_86718 = {}
    # Getting the type of 'p' (line 2764)
    p_86715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2764, 34), 'p', False)
    # Obtaining the member 'startswith' of a type (line 2764)
    startswith_86716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2764, 34), p_86715, 'startswith')
    # Calling startswith(args, kwargs) (line 2764)
    startswith_call_result_86719 = invoke(stypy.reporting.localization.Localization(__file__, 2764, 34), startswith_86716, *[a_86717], **kwargs_86718)
    
    
    # Getting the type of 'a' (line 2764)
    a_86720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2764, 54), 'a', False)
    # Getting the type of 'p' (line 2764)
    p_86721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2764, 59), 'p', False)
    # Applying the binary operator '!=' (line 2764)
    result_ne_86722 = python_operator(stypy.reporting.localization.Localization(__file__, 2764, 54), '!=', a_86720, p_86721)
    
    # Applying the binary operator 'and' (line 2764)
    result_and_keyword_86723 = python_operator(stypy.reporting.localization.Localization(__file__, 2764, 34), 'and', startswith_call_result_86719, result_ne_86722)
    
    list_86726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2764, 34), 'list')
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2764, 34), list_86726, result_and_keyword_86723)
    # Processing the call keyword arguments (line 2764)
    kwargs_86727 = {}
    # Getting the type of 'any' (line 2764)
    any_86714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2764, 30), 'any', False)
    # Calling any(args, kwargs) (line 2764)
    any_call_result_86728 = invoke(stypy.reporting.localization.Localization(__file__, 2764, 30), any_86714, *[list_86726], **kwargs_86727)
    
    # Getting the type of 'p' (line 2763)
    p_86713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2763, 30), 'p', False)
    list_86731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2763, 30), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2763, 30), list_86731, p_86713)
    # Assigning the return type of the lambda function
    # Assigning a type to the variable 'stypy_return_type' (line 2763)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2763, 18), 'stypy_return_type', list_86731)
    
    # ################# End of the lambda function code ##################

    # Stacktrace pop (error reporting)
    localization.unset_stack_trace()
    
    # Storing the return type of function '_stypy_temp_lambda_17' in the type store
    # Getting the type of 'stypy_return_type' (line 2763)
    stypy_return_type_86732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2763, 18), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_86732)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_stypy_temp_lambda_17'
    return stypy_return_type_86732

# Assigning a type to the variable '_stypy_temp_lambda_17' (line 2763)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2763, 18), '_stypy_temp_lambda_17', _stypy_temp_lambda_17)
# Getting the type of '_stypy_temp_lambda_17' (line 2763)
_stypy_temp_lambda_17_86733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2763, 18), '_stypy_temp_lambda_17')
# Calling (args, kwargs) (line 2763)
_call_result_86740 = invoke(stypy.reporting.localization.Localization(__file__, 2763, 18), _stypy_temp_lambda_17_86733, *[set_call_result_86738], **kwargs_86739)

# Getting the type of 'Parser'
Parser_86741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member '_snowflake' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86741, '_snowflake', _call_result_86740)

# Assigning a Name to a Name (line 2823):
# Getting the type of 'Parser'
Parser_86742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Obtaining the member 'group' of a type
group_86743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86742, 'group')
# Getting the type of 'Parser'
Parser_86744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member 'simple_group' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86744, 'simple_group', group_86743)

# Assigning a Name to a Name (line 2823):
# Getting the type of 'Parser'
Parser_86745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Obtaining the member 'simple_group' of a type
simple_group_86746 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86745, 'simple_group')
# Getting the type of 'Parser'
Parser_86747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Parser')
# Setting the type of the member 'required_group' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Parser_86747, 'required_group', simple_group_86746)
# Declaration of the 'MathTextParser' class

class MathTextParser(object, ):
    
    # Assigning a Name to a Name (line 3233):
    
    # Assigning a Dict to a Name (line 3235):
    
    # Assigning a Dict to a Name (line 3246):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 3255, 4, False)
        # Assigning a type to the variable 'self' (line 3256)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3256, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathTextParser.__init__', ['output'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['output'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        unicode_86748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3258, (-1)), 'unicode', u'\n        Create a MathTextParser for the given backend *output*.\n        ')
        
        # Assigning a Call to a Attribute (line 3259):
        
        # Assigning a Call to a Attribute (line 3259):
        
        # Call to lower(...): (line 3259)
        # Processing the call keyword arguments (line 3259)
        kwargs_86751 = {}
        # Getting the type of 'output' (line 3259)
        output_86749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3259, 23), 'output', False)
        # Obtaining the member 'lower' of a type (line 3259)
        lower_86750 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3259, 23), output_86749, 'lower')
        # Calling lower(args, kwargs) (line 3259)
        lower_call_result_86752 = invoke(stypy.reporting.localization.Localization(__file__, 3259, 23), lower_86750, *[], **kwargs_86751)
        
        # Getting the type of 'self' (line 3259)
        self_86753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3259, 8), 'self')
        # Setting the type of the member '_output' of a type (line 3259)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3259, 8), self_86753, '_output', lower_call_result_86752)
        
        # Assigning a Call to a Attribute (line 3260):
        
        # Assigning a Call to a Attribute (line 3260):
        
        # Call to maxdict(...): (line 3260)
        # Processing the call arguments (line 3260)
        int_86755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3260, 30), 'int')
        # Processing the call keyword arguments (line 3260)
        kwargs_86756 = {}
        # Getting the type of 'maxdict' (line 3260)
        maxdict_86754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3260, 22), 'maxdict', False)
        # Calling maxdict(args, kwargs) (line 3260)
        maxdict_call_result_86757 = invoke(stypy.reporting.localization.Localization(__file__, 3260, 22), maxdict_86754, *[int_86755], **kwargs_86756)
        
        # Getting the type of 'self' (line 3260)
        self_86758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3260, 8), 'self')
        # Setting the type of the member '_cache' of a type (line 3260)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3260, 8), self_86758, '_cache', maxdict_call_result_86757)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def parse(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_86759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3262, 29), 'int')
        # Getting the type of 'None' (line 3262)
        None_86760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3262, 40), 'None')
        defaults = [int_86759, None_86760]
        # Create a new context for function 'parse'
        module_type_store = module_type_store.open_function_context('parse', 3262, 4, False)
        # Assigning a type to the variable 'self' (line 3263)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3263, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathTextParser.parse.__dict__.__setitem__('stypy_localization', localization)
        MathTextParser.parse.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathTextParser.parse.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathTextParser.parse.__dict__.__setitem__('stypy_function_name', 'MathTextParser.parse')
        MathTextParser.parse.__dict__.__setitem__('stypy_param_names_list', ['s', 'dpi', 'prop'])
        MathTextParser.parse.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathTextParser.parse.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathTextParser.parse.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathTextParser.parse.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathTextParser.parse.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathTextParser.parse.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathTextParser.parse', ['s', 'dpi', 'prop'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'parse', localization, ['s', 'dpi', 'prop'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'parse(...)' code ##################

        unicode_86761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3272, (-1)), 'unicode', u'\n        Parse the given math expression *s* at the given *dpi*.  If\n        *prop* is provided, it is a\n        :class:`~matplotlib.font_manager.FontProperties` object\n        specifying the "default" font to use in the math expression,\n        used for all non-math text.\n\n        The results are cached, so multiple calls to :meth:`parse`\n        with the same expression should be fast.\n        ')
        
        # Type idiom detected: calculating its left and rigth part (line 3275)
        # Getting the type of 'prop' (line 3275)
        prop_86762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3275, 11), 'prop')
        # Getting the type of 'None' (line 3275)
        None_86763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3275, 19), 'None')
        
        (may_be_86764, more_types_in_union_86765) = may_be_none(prop_86762, None_86763)

        if may_be_86764:

            if more_types_in_union_86765:
                # Runtime conditional SSA (line 3275)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 3276):
            
            # Assigning a Call to a Name (line 3276):
            
            # Call to FontProperties(...): (line 3276)
            # Processing the call keyword arguments (line 3276)
            kwargs_86767 = {}
            # Getting the type of 'FontProperties' (line 3276)
            FontProperties_86766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3276, 19), 'FontProperties', False)
            # Calling FontProperties(args, kwargs) (line 3276)
            FontProperties_call_result_86768 = invoke(stypy.reporting.localization.Localization(__file__, 3276, 19), FontProperties_86766, *[], **kwargs_86767)
            
            # Assigning a type to the variable 'prop' (line 3276)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3276, 12), 'prop', FontProperties_call_result_86768)

            if more_types_in_union_86765:
                # SSA join for if statement (line 3275)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Tuple to a Name (line 3278):
        
        # Assigning a Tuple to a Name (line 3278):
        
        # Obtaining an instance of the builtin type 'tuple' (line 3278)
        tuple_86769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3278, 20), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3278)
        # Adding element type (line 3278)
        # Getting the type of 's' (line 3278)
        s_86770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3278, 20), 's')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3278, 20), tuple_86769, s_86770)
        # Adding element type (line 3278)
        # Getting the type of 'dpi' (line 3278)
        dpi_86771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3278, 23), 'dpi')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3278, 20), tuple_86769, dpi_86771)
        # Adding element type (line 3278)
        
        # Call to hash(...): (line 3278)
        # Processing the call arguments (line 3278)
        # Getting the type of 'prop' (line 3278)
        prop_86773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3278, 33), 'prop', False)
        # Processing the call keyword arguments (line 3278)
        kwargs_86774 = {}
        # Getting the type of 'hash' (line 3278)
        hash_86772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3278, 28), 'hash', False)
        # Calling hash(args, kwargs) (line 3278)
        hash_call_result_86775 = invoke(stypy.reporting.localization.Localization(__file__, 3278, 28), hash_86772, *[prop_86773], **kwargs_86774)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3278, 20), tuple_86769, hash_call_result_86775)
        
        # Assigning a type to the variable 'cacheKey' (line 3278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3278, 8), 'cacheKey', tuple_86769)
        
        # Assigning a Call to a Name (line 3279):
        
        # Assigning a Call to a Name (line 3279):
        
        # Call to get(...): (line 3279)
        # Processing the call arguments (line 3279)
        # Getting the type of 'cacheKey' (line 3279)
        cacheKey_86779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3279, 33), 'cacheKey', False)
        # Processing the call keyword arguments (line 3279)
        kwargs_86780 = {}
        # Getting the type of 'self' (line 3279)
        self_86776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3279, 17), 'self', False)
        # Obtaining the member '_cache' of a type (line 3279)
        _cache_86777 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3279, 17), self_86776, '_cache')
        # Obtaining the member 'get' of a type (line 3279)
        get_86778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3279, 17), _cache_86777, 'get')
        # Calling get(args, kwargs) (line 3279)
        get_call_result_86781 = invoke(stypy.reporting.localization.Localization(__file__, 3279, 17), get_86778, *[cacheKey_86779], **kwargs_86780)
        
        # Assigning a type to the variable 'result' (line 3279)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3279, 8), 'result', get_call_result_86781)
        
        # Type idiom detected: calculating its left and rigth part (line 3280)
        # Getting the type of 'result' (line 3280)
        result_86782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3280, 8), 'result')
        # Getting the type of 'None' (line 3280)
        None_86783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3280, 25), 'None')
        
        (may_be_86784, more_types_in_union_86785) = may_not_be_none(result_86782, None_86783)

        if may_be_86784:

            if more_types_in_union_86785:
                # Runtime conditional SSA (line 3280)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Getting the type of 'result' (line 3281)
            result_86786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3281, 19), 'result')
            # Assigning a type to the variable 'stypy_return_type' (line 3281)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3281, 12), 'stypy_return_type', result_86786)

            if more_types_in_union_86785:
                # SSA join for if statement (line 3280)
                module_type_store = module_type_store.join_ssa_context()


        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'self' (line 3283)
        self_86787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3283, 11), 'self')
        # Obtaining the member '_output' of a type (line 3283)
        _output_86788 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3283, 11), self_86787, '_output')
        unicode_86789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3283, 27), 'unicode', u'ps')
        # Applying the binary operator '==' (line 3283)
        result_eq_86790 = python_operator(stypy.reporting.localization.Localization(__file__, 3283, 11), '==', _output_86788, unicode_86789)
        
        
        # Obtaining the type of the subscript
        unicode_86791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3283, 45), 'unicode', u'ps.useafm')
        # Getting the type of 'rcParams' (line 3283)
        rcParams_86792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3283, 36), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 3283)
        getitem___86793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3283, 36), rcParams_86792, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3283)
        subscript_call_result_86794 = invoke(stypy.reporting.localization.Localization(__file__, 3283, 36), getitem___86793, unicode_86791)
        
        # Applying the binary operator 'and' (line 3283)
        result_and_keyword_86795 = python_operator(stypy.reporting.localization.Localization(__file__, 3283, 11), 'and', result_eq_86790, subscript_call_result_86794)
        
        # Testing the type of an if condition (line 3283)
        if_condition_86796 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3283, 8), result_and_keyword_86795)
        # Assigning a type to the variable 'if_condition_86796' (line 3283)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3283, 8), 'if_condition_86796', if_condition_86796)
        # SSA begins for if statement (line 3283)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 3284):
        
        # Assigning a Call to a Name (line 3284):
        
        # Call to StandardPsFonts(...): (line 3284)
        # Processing the call arguments (line 3284)
        # Getting the type of 'prop' (line 3284)
        prop_86798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3284, 42), 'prop', False)
        # Processing the call keyword arguments (line 3284)
        kwargs_86799 = {}
        # Getting the type of 'StandardPsFonts' (line 3284)
        StandardPsFonts_86797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3284, 26), 'StandardPsFonts', False)
        # Calling StandardPsFonts(args, kwargs) (line 3284)
        StandardPsFonts_call_result_86800 = invoke(stypy.reporting.localization.Localization(__file__, 3284, 26), StandardPsFonts_86797, *[prop_86798], **kwargs_86799)
        
        # Assigning a type to the variable 'font_output' (line 3284)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3284, 12), 'font_output', StandardPsFonts_call_result_86800)
        # SSA branch for the else part of an if statement (line 3283)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 3286):
        
        # Assigning a Call to a Name (line 3286):
        
        # Call to (...): (line 3286)
        # Processing the call keyword arguments (line 3286)
        kwargs_86807 = {}
        
        # Obtaining the type of the subscript
        # Getting the type of 'self' (line 3286)
        self_86801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3286, 44), 'self', False)
        # Obtaining the member '_output' of a type (line 3286)
        _output_86802 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3286, 44), self_86801, '_output')
        # Getting the type of 'self' (line 3286)
        self_86803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3286, 22), 'self', False)
        # Obtaining the member '_backend_mapping' of a type (line 3286)
        _backend_mapping_86804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3286, 22), self_86803, '_backend_mapping')
        # Obtaining the member '__getitem__' of a type (line 3286)
        getitem___86805 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3286, 22), _backend_mapping_86804, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3286)
        subscript_call_result_86806 = invoke(stypy.reporting.localization.Localization(__file__, 3286, 22), getitem___86805, _output_86802)
        
        # Calling (args, kwargs) (line 3286)
        _call_result_86808 = invoke(stypy.reporting.localization.Localization(__file__, 3286, 22), subscript_call_result_86806, *[], **kwargs_86807)
        
        # Assigning a type to the variable 'backend' (line 3286)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3286, 12), 'backend', _call_result_86808)
        
        # Assigning a Subscript to a Name (line 3287):
        
        # Assigning a Subscript to a Name (line 3287):
        
        # Obtaining the type of the subscript
        unicode_86809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3287, 31), 'unicode', u'mathtext.fontset')
        # Getting the type of 'rcParams' (line 3287)
        rcParams_86810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3287, 22), 'rcParams')
        # Obtaining the member '__getitem__' of a type (line 3287)
        getitem___86811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3287, 22), rcParams_86810, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3287)
        subscript_call_result_86812 = invoke(stypy.reporting.localization.Localization(__file__, 3287, 22), getitem___86811, unicode_86809)
        
        # Assigning a type to the variable 'fontset' (line 3287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3287, 12), 'fontset', subscript_call_result_86812)
        
        # Assigning a Call to a Name (line 3288):
        
        # Assigning a Call to a Name (line 3288):
        
        # Call to get(...): (line 3288)
        # Processing the call arguments (line 3288)
        
        # Call to lower(...): (line 3288)
        # Processing the call keyword arguments (line 3288)
        kwargs_86818 = {}
        # Getting the type of 'fontset' (line 3288)
        fontset_86816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3288, 56), 'fontset', False)
        # Obtaining the member 'lower' of a type (line 3288)
        lower_86817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3288, 56), fontset_86816, 'lower')
        # Calling lower(args, kwargs) (line 3288)
        lower_call_result_86819 = invoke(stypy.reporting.localization.Localization(__file__, 3288, 56), lower_86817, *[], **kwargs_86818)
        
        # Processing the call keyword arguments (line 3288)
        kwargs_86820 = {}
        # Getting the type of 'self' (line 3288)
        self_86813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3288, 28), 'self', False)
        # Obtaining the member '_font_type_mapping' of a type (line 3288)
        _font_type_mapping_86814 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3288, 28), self_86813, '_font_type_mapping')
        # Obtaining the member 'get' of a type (line 3288)
        get_86815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3288, 28), _font_type_mapping_86814, 'get')
        # Calling get(args, kwargs) (line 3288)
        get_call_result_86821 = invoke(stypy.reporting.localization.Localization(__file__, 3288, 28), get_86815, *[lower_call_result_86819], **kwargs_86820)
        
        # Assigning a type to the variable 'fontset_class' (line 3288)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3288, 12), 'fontset_class', get_call_result_86821)
        
        # Type idiom detected: calculating its left and rigth part (line 3289)
        # Getting the type of 'fontset_class' (line 3289)
        fontset_class_86822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3289, 12), 'fontset_class')
        # Getting the type of 'None' (line 3289)
        None_86823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3289, 36), 'None')
        
        (may_be_86824, more_types_in_union_86825) = may_not_be_none(fontset_class_86822, None_86823)

        if may_be_86824:

            if more_types_in_union_86825:
                # Runtime conditional SSA (line 3289)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 3290):
            
            # Assigning a Call to a Name (line 3290):
            
            # Call to fontset_class(...): (line 3290)
            # Processing the call arguments (line 3290)
            # Getting the type of 'prop' (line 3290)
            prop_86827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3290, 44), 'prop', False)
            # Getting the type of 'backend' (line 3290)
            backend_86828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3290, 50), 'backend', False)
            # Processing the call keyword arguments (line 3290)
            kwargs_86829 = {}
            # Getting the type of 'fontset_class' (line 3290)
            fontset_class_86826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3290, 30), 'fontset_class', False)
            # Calling fontset_class(args, kwargs) (line 3290)
            fontset_class_call_result_86830 = invoke(stypy.reporting.localization.Localization(__file__, 3290, 30), fontset_class_86826, *[prop_86827, backend_86828], **kwargs_86829)
            
            # Assigning a type to the variable 'font_output' (line 3290)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3290, 16), 'font_output', fontset_class_call_result_86830)

            if more_types_in_union_86825:
                # Runtime conditional SSA for else branch (line 3289)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_86824) or more_types_in_union_86825):
            
            # Call to ValueError(...): (line 3292)
            # Processing the call arguments (line 3292)
            unicode_86832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3293, 20), 'unicode', u"mathtext.fontset must be either 'cm', 'dejavuserif', 'dejavusans', 'stix', 'stixsans', or 'custom'")
            # Processing the call keyword arguments (line 3292)
            kwargs_86833 = {}
            # Getting the type of 'ValueError' (line 3292)
            ValueError_86831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3292, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 3292)
            ValueError_call_result_86834 = invoke(stypy.reporting.localization.Localization(__file__, 3292, 22), ValueError_86831, *[unicode_86832], **kwargs_86833)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 3292, 16), ValueError_call_result_86834, 'raise parameter', BaseException)

            if (may_be_86824 and more_types_in_union_86825):
                # SSA join for if statement (line 3289)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA join for if statement (line 3283)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 3296):
        
        # Assigning a Call to a Name (line 3296):
        
        # Call to get_size_in_points(...): (line 3296)
        # Processing the call keyword arguments (line 3296)
        kwargs_86837 = {}
        # Getting the type of 'prop' (line 3296)
        prop_86835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3296, 19), 'prop', False)
        # Obtaining the member 'get_size_in_points' of a type (line 3296)
        get_size_in_points_86836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3296, 19), prop_86835, 'get_size_in_points')
        # Calling get_size_in_points(args, kwargs) (line 3296)
        get_size_in_points_call_result_86838 = invoke(stypy.reporting.localization.Localization(__file__, 3296, 19), get_size_in_points_86836, *[], **kwargs_86837)
        
        # Assigning a type to the variable 'fontsize' (line 3296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3296, 8), 'fontsize', get_size_in_points_call_result_86838)
        
        # Type idiom detected: calculating its left and rigth part (line 3300)
        # Getting the type of 'self' (line 3300)
        self_86839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3300, 11), 'self')
        # Obtaining the member '_parser' of a type (line 3300)
        _parser_86840 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3300, 11), self_86839, '_parser')
        # Getting the type of 'None' (line 3300)
        None_86841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3300, 27), 'None')
        
        (may_be_86842, more_types_in_union_86843) = may_be_none(_parser_86840, None_86841)

        if may_be_86842:

            if more_types_in_union_86843:
                # Runtime conditional SSA (line 3300)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Attribute (line 3301):
            
            # Assigning a Call to a Attribute (line 3301):
            
            # Call to Parser(...): (line 3301)
            # Processing the call keyword arguments (line 3301)
            kwargs_86845 = {}
            # Getting the type of 'Parser' (line 3301)
            Parser_86844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3301, 37), 'Parser', False)
            # Calling Parser(args, kwargs) (line 3301)
            Parser_call_result_86846 = invoke(stypy.reporting.localization.Localization(__file__, 3301, 37), Parser_86844, *[], **kwargs_86845)
            
            # Getting the type of 'self' (line 3301)
            self_86847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3301, 12), 'self')
            # Obtaining the member '__class__' of a type (line 3301)
            class___86848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3301, 12), self_86847, '__class__')
            # Setting the type of the member '_parser' of a type (line 3301)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3301, 12), class___86848, '_parser', Parser_call_result_86846)

            if more_types_in_union_86843:
                # SSA join for if statement (line 3300)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 3303):
        
        # Assigning a Call to a Name (line 3303):
        
        # Call to parse(...): (line 3303)
        # Processing the call arguments (line 3303)
        # Getting the type of 's' (line 3303)
        s_86852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3303, 33), 's', False)
        # Getting the type of 'font_output' (line 3303)
        font_output_86853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3303, 36), 'font_output', False)
        # Getting the type of 'fontsize' (line 3303)
        fontsize_86854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3303, 49), 'fontsize', False)
        # Getting the type of 'dpi' (line 3303)
        dpi_86855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3303, 59), 'dpi', False)
        # Processing the call keyword arguments (line 3303)
        kwargs_86856 = {}
        # Getting the type of 'self' (line 3303)
        self_86849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3303, 14), 'self', False)
        # Obtaining the member '_parser' of a type (line 3303)
        _parser_86850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3303, 14), self_86849, '_parser')
        # Obtaining the member 'parse' of a type (line 3303)
        parse_86851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3303, 14), _parser_86850, 'parse')
        # Calling parse(args, kwargs) (line 3303)
        parse_call_result_86857 = invoke(stypy.reporting.localization.Localization(__file__, 3303, 14), parse_86851, *[s_86852, font_output_86853, fontsize_86854, dpi_86855], **kwargs_86856)
        
        # Assigning a type to the variable 'box' (line 3303)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3303, 8), 'box', parse_call_result_86857)
        
        # Call to set_canvas_size(...): (line 3304)
        # Processing the call arguments (line 3304)
        # Getting the type of 'box' (line 3304)
        box_86860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3304, 36), 'box', False)
        # Obtaining the member 'width' of a type (line 3304)
        width_86861 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3304, 36), box_86860, 'width')
        # Getting the type of 'box' (line 3304)
        box_86862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3304, 47), 'box', False)
        # Obtaining the member 'height' of a type (line 3304)
        height_86863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3304, 47), box_86862, 'height')
        # Getting the type of 'box' (line 3304)
        box_86864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3304, 59), 'box', False)
        # Obtaining the member 'depth' of a type (line 3304)
        depth_86865 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3304, 59), box_86864, 'depth')
        # Processing the call keyword arguments (line 3304)
        kwargs_86866 = {}
        # Getting the type of 'font_output' (line 3304)
        font_output_86858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3304, 8), 'font_output', False)
        # Obtaining the member 'set_canvas_size' of a type (line 3304)
        set_canvas_size_86859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3304, 8), font_output_86858, 'set_canvas_size')
        # Calling set_canvas_size(args, kwargs) (line 3304)
        set_canvas_size_call_result_86867 = invoke(stypy.reporting.localization.Localization(__file__, 3304, 8), set_canvas_size_86859, *[width_86861, height_86863, depth_86865], **kwargs_86866)
        
        
        # Assigning a Call to a Name (line 3305):
        
        # Assigning a Call to a Name (line 3305):
        
        # Call to get_results(...): (line 3305)
        # Processing the call arguments (line 3305)
        # Getting the type of 'box' (line 3305)
        box_86870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3305, 41), 'box', False)
        # Processing the call keyword arguments (line 3305)
        kwargs_86871 = {}
        # Getting the type of 'font_output' (line 3305)
        font_output_86868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3305, 17), 'font_output', False)
        # Obtaining the member 'get_results' of a type (line 3305)
        get_results_86869 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3305, 17), font_output_86868, 'get_results')
        # Calling get_results(args, kwargs) (line 3305)
        get_results_call_result_86872 = invoke(stypy.reporting.localization.Localization(__file__, 3305, 17), get_results_86869, *[box_86870], **kwargs_86871)
        
        # Assigning a type to the variable 'result' (line 3305)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3305, 8), 'result', get_results_call_result_86872)
        
        # Assigning a Name to a Subscript (line 3306):
        
        # Assigning a Name to a Subscript (line 3306):
        # Getting the type of 'result' (line 3306)
        result_86873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3306, 32), 'result')
        # Getting the type of 'self' (line 3306)
        self_86874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3306, 8), 'self')
        # Obtaining the member '_cache' of a type (line 3306)
        _cache_86875 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3306, 8), self_86874, '_cache')
        # Getting the type of 'cacheKey' (line 3306)
        cacheKey_86876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3306, 20), 'cacheKey')
        # Storing an element on a container (line 3306)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3306, 8), _cache_86875, (cacheKey_86876, result_86873))
        # Getting the type of 'result' (line 3307)
        result_86877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3307, 15), 'result')
        # Assigning a type to the variable 'stypy_return_type' (line 3307)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3307, 8), 'stypy_return_type', result_86877)
        
        # ################# End of 'parse(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'parse' in the type store
        # Getting the type of 'stypy_return_type' (line 3262)
        stypy_return_type_86878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3262, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_86878)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'parse'
        return stypy_return_type_86878


    @norecursion
    def to_mask(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_86879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3309, 34), 'int')
        int_86880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3309, 48), 'int')
        defaults = [int_86879, int_86880]
        # Create a new context for function 'to_mask'
        module_type_store = module_type_store.open_function_context('to_mask', 3309, 4, False)
        # Assigning a type to the variable 'self' (line 3310)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3310, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathTextParser.to_mask.__dict__.__setitem__('stypy_localization', localization)
        MathTextParser.to_mask.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathTextParser.to_mask.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathTextParser.to_mask.__dict__.__setitem__('stypy_function_name', 'MathTextParser.to_mask')
        MathTextParser.to_mask.__dict__.__setitem__('stypy_param_names_list', ['texstr', 'dpi', 'fontsize'])
        MathTextParser.to_mask.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathTextParser.to_mask.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathTextParser.to_mask.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathTextParser.to_mask.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathTextParser.to_mask.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathTextParser.to_mask.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathTextParser.to_mask', ['texstr', 'dpi', 'fontsize'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'to_mask', localization, ['texstr', 'dpi', 'fontsize'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'to_mask(...)' code ##################

        unicode_86881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3327, (-1)), 'unicode', u"\n        *texstr*\n            A valid mathtext string, e.g., r'IQ: $\\sigma_i=15$'\n\n        *dpi*\n            The dots-per-inch to render the text\n\n        *fontsize*\n            The font size in points\n\n        Returns a tuple (*array*, *depth*)\n\n          - *array* is an NxM uint8 alpha ubyte mask array of\n            rasterized tex.\n\n          - depth is the offset of the baseline from the bottom of the\n            image in pixels.\n        ")
        # Evaluating assert statement condition
        
        # Getting the type of 'self' (line 3328)
        self_86882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3328, 15), 'self')
        # Obtaining the member '_output' of a type (line 3328)
        _output_86883 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3328, 15), self_86882, '_output')
        unicode_86884 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3328, 29), 'unicode', u'bitmap')
        # Applying the binary operator '==' (line 3328)
        result_eq_86885 = python_operator(stypy.reporting.localization.Localization(__file__, 3328, 15), '==', _output_86883, unicode_86884)
        
        
        # Assigning a Call to a Name (line 3329):
        
        # Assigning a Call to a Name (line 3329):
        
        # Call to FontProperties(...): (line 3329)
        # Processing the call keyword arguments (line 3329)
        # Getting the type of 'fontsize' (line 3329)
        fontsize_86887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3329, 35), 'fontsize', False)
        keyword_86888 = fontsize_86887
        kwargs_86889 = {'size': keyword_86888}
        # Getting the type of 'FontProperties' (line 3329)
        FontProperties_86886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3329, 15), 'FontProperties', False)
        # Calling FontProperties(args, kwargs) (line 3329)
        FontProperties_call_result_86890 = invoke(stypy.reporting.localization.Localization(__file__, 3329, 15), FontProperties_86886, *[], **kwargs_86889)
        
        # Assigning a type to the variable 'prop' (line 3329)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3329, 8), 'prop', FontProperties_call_result_86890)
        
        # Assigning a Call to a Tuple (line 3330):
        
        # Assigning a Call to a Name:
        
        # Call to parse(...): (line 3330)
        # Processing the call arguments (line 3330)
        # Getting the type of 'texstr' (line 3330)
        texstr_86893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3330, 36), 'texstr', False)
        # Processing the call keyword arguments (line 3330)
        # Getting the type of 'dpi' (line 3330)
        dpi_86894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3330, 48), 'dpi', False)
        keyword_86895 = dpi_86894
        # Getting the type of 'prop' (line 3330)
        prop_86896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3330, 58), 'prop', False)
        keyword_86897 = prop_86896
        kwargs_86898 = {'dpi': keyword_86895, 'prop': keyword_86897}
        # Getting the type of 'self' (line 3330)
        self_86891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3330, 25), 'self', False)
        # Obtaining the member 'parse' of a type (line 3330)
        parse_86892 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3330, 25), self_86891, 'parse')
        # Calling parse(args, kwargs) (line 3330)
        parse_call_result_86899 = invoke(stypy.reporting.localization.Localization(__file__, 3330, 25), parse_86892, *[texstr_86893], **kwargs_86898)
        
        # Assigning a type to the variable 'call_assignment_77326' (line 3330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3330, 8), 'call_assignment_77326', parse_call_result_86899)
        
        # Assigning a Call to a Name (line 3330):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_86902 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3330, 8), 'int')
        # Processing the call keyword arguments
        kwargs_86903 = {}
        # Getting the type of 'call_assignment_77326' (line 3330)
        call_assignment_77326_86900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3330, 8), 'call_assignment_77326', False)
        # Obtaining the member '__getitem__' of a type (line 3330)
        getitem___86901 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3330, 8), call_assignment_77326_86900, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_86904 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___86901, *[int_86902], **kwargs_86903)
        
        # Assigning a type to the variable 'call_assignment_77327' (line 3330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3330, 8), 'call_assignment_77327', getitem___call_result_86904)
        
        # Assigning a Name to a Name (line 3330):
        # Getting the type of 'call_assignment_77327' (line 3330)
        call_assignment_77327_86905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3330, 8), 'call_assignment_77327')
        # Assigning a type to the variable 'ftimage' (line 3330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3330, 8), 'ftimage', call_assignment_77327_86905)
        
        # Assigning a Call to a Name (line 3330):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_86908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3330, 8), 'int')
        # Processing the call keyword arguments
        kwargs_86909 = {}
        # Getting the type of 'call_assignment_77326' (line 3330)
        call_assignment_77326_86906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3330, 8), 'call_assignment_77326', False)
        # Obtaining the member '__getitem__' of a type (line 3330)
        getitem___86907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3330, 8), call_assignment_77326_86906, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_86910 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___86907, *[int_86908], **kwargs_86909)
        
        # Assigning a type to the variable 'call_assignment_77328' (line 3330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3330, 8), 'call_assignment_77328', getitem___call_result_86910)
        
        # Assigning a Name to a Name (line 3330):
        # Getting the type of 'call_assignment_77328' (line 3330)
        call_assignment_77328_86911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3330, 8), 'call_assignment_77328')
        # Assigning a type to the variable 'depth' (line 3330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3330, 17), 'depth', call_assignment_77328_86911)
        
        # Assigning a Call to a Name (line 3332):
        
        # Assigning a Call to a Name (line 3332):
        
        # Call to as_array(...): (line 3332)
        # Processing the call keyword arguments (line 3332)
        kwargs_86914 = {}
        # Getting the type of 'ftimage' (line 3332)
        ftimage_86912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3332, 12), 'ftimage', False)
        # Obtaining the member 'as_array' of a type (line 3332)
        as_array_86913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3332, 12), ftimage_86912, 'as_array')
        # Calling as_array(args, kwargs) (line 3332)
        as_array_call_result_86915 = invoke(stypy.reporting.localization.Localization(__file__, 3332, 12), as_array_86913, *[], **kwargs_86914)
        
        # Assigning a type to the variable 'x' (line 3332)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3332, 8), 'x', as_array_call_result_86915)
        
        # Obtaining an instance of the builtin type 'tuple' (line 3333)
        tuple_86916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3333, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3333)
        # Adding element type (line 3333)
        # Getting the type of 'x' (line 3333)
        x_86917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3333, 15), 'x')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3333, 15), tuple_86916, x_86917)
        # Adding element type (line 3333)
        # Getting the type of 'depth' (line 3333)
        depth_86918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3333, 18), 'depth')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3333, 15), tuple_86916, depth_86918)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3333, 8), 'stypy_return_type', tuple_86916)
        
        # ################# End of 'to_mask(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'to_mask' in the type store
        # Getting the type of 'stypy_return_type' (line 3309)
        stypy_return_type_86919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3309, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_86919)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'to_mask'
        return stypy_return_type_86919


    @norecursion
    def to_rgba(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        unicode_86920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3335, 36), 'unicode', u'black')
        int_86921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3335, 49), 'int')
        int_86922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3335, 63), 'int')
        defaults = [unicode_86920, int_86921, int_86922]
        # Create a new context for function 'to_rgba'
        module_type_store = module_type_store.open_function_context('to_rgba', 3335, 4, False)
        # Assigning a type to the variable 'self' (line 3336)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3336, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathTextParser.to_rgba.__dict__.__setitem__('stypy_localization', localization)
        MathTextParser.to_rgba.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathTextParser.to_rgba.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathTextParser.to_rgba.__dict__.__setitem__('stypy_function_name', 'MathTextParser.to_rgba')
        MathTextParser.to_rgba.__dict__.__setitem__('stypy_param_names_list', ['texstr', 'color', 'dpi', 'fontsize'])
        MathTextParser.to_rgba.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathTextParser.to_rgba.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathTextParser.to_rgba.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathTextParser.to_rgba.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathTextParser.to_rgba.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathTextParser.to_rgba.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathTextParser.to_rgba', ['texstr', 'color', 'dpi', 'fontsize'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'to_rgba', localization, ['texstr', 'color', 'dpi', 'fontsize'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'to_rgba(...)' code ##################

        unicode_86923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3356, (-1)), 'unicode', u"\n        *texstr*\n            A valid mathtext string, e.g., r'IQ: $\\sigma_i=15$'\n\n        *color*\n            Any matplotlib color argument\n\n        *dpi*\n            The dots-per-inch to render the text\n\n        *fontsize*\n            The font size in points\n\n        Returns a tuple (*array*, *depth*)\n\n          - *array* is an NxM uint8 alpha ubyte mask array of\n            rasterized tex.\n\n          - depth is the offset of the baseline from the bottom of the\n            image in pixels.\n        ")
        
        # Assigning a Call to a Tuple (line 3357):
        
        # Assigning a Call to a Name:
        
        # Call to to_mask(...): (line 3357)
        # Processing the call arguments (line 3357)
        # Getting the type of 'texstr' (line 3357)
        texstr_86926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3357, 32), 'texstr', False)
        # Processing the call keyword arguments (line 3357)
        # Getting the type of 'dpi' (line 3357)
        dpi_86927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3357, 44), 'dpi', False)
        keyword_86928 = dpi_86927
        # Getting the type of 'fontsize' (line 3357)
        fontsize_86929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3357, 58), 'fontsize', False)
        keyword_86930 = fontsize_86929
        kwargs_86931 = {'fontsize': keyword_86930, 'dpi': keyword_86928}
        # Getting the type of 'self' (line 3357)
        self_86924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3357, 19), 'self', False)
        # Obtaining the member 'to_mask' of a type (line 3357)
        to_mask_86925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3357, 19), self_86924, 'to_mask')
        # Calling to_mask(args, kwargs) (line 3357)
        to_mask_call_result_86932 = invoke(stypy.reporting.localization.Localization(__file__, 3357, 19), to_mask_86925, *[texstr_86926], **kwargs_86931)
        
        # Assigning a type to the variable 'call_assignment_77329' (line 3357)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3357, 8), 'call_assignment_77329', to_mask_call_result_86932)
        
        # Assigning a Call to a Name (line 3357):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_86935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3357, 8), 'int')
        # Processing the call keyword arguments
        kwargs_86936 = {}
        # Getting the type of 'call_assignment_77329' (line 3357)
        call_assignment_77329_86933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3357, 8), 'call_assignment_77329', False)
        # Obtaining the member '__getitem__' of a type (line 3357)
        getitem___86934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3357, 8), call_assignment_77329_86933, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_86937 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___86934, *[int_86935], **kwargs_86936)
        
        # Assigning a type to the variable 'call_assignment_77330' (line 3357)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3357, 8), 'call_assignment_77330', getitem___call_result_86937)
        
        # Assigning a Name to a Name (line 3357):
        # Getting the type of 'call_assignment_77330' (line 3357)
        call_assignment_77330_86938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3357, 8), 'call_assignment_77330')
        # Assigning a type to the variable 'x' (line 3357)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3357, 8), 'x', call_assignment_77330_86938)
        
        # Assigning a Call to a Name (line 3357):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_86941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3357, 8), 'int')
        # Processing the call keyword arguments
        kwargs_86942 = {}
        # Getting the type of 'call_assignment_77329' (line 3357)
        call_assignment_77329_86939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3357, 8), 'call_assignment_77329', False)
        # Obtaining the member '__getitem__' of a type (line 3357)
        getitem___86940 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3357, 8), call_assignment_77329_86939, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_86943 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___86940, *[int_86941], **kwargs_86942)
        
        # Assigning a type to the variable 'call_assignment_77331' (line 3357)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3357, 8), 'call_assignment_77331', getitem___call_result_86943)
        
        # Assigning a Name to a Name (line 3357):
        # Getting the type of 'call_assignment_77331' (line 3357)
        call_assignment_77331_86944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3357, 8), 'call_assignment_77331')
        # Assigning a type to the variable 'depth' (line 3357)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3357, 11), 'depth', call_assignment_77331_86944)
        
        # Assigning a Call to a Tuple (line 3359):
        
        # Assigning a Call to a Name:
        
        # Call to to_rgba(...): (line 3359)
        # Processing the call arguments (line 3359)
        # Getting the type of 'color' (line 3359)
        color_86947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3359, 37), 'color', False)
        # Processing the call keyword arguments (line 3359)
        kwargs_86948 = {}
        # Getting the type of 'mcolors' (line 3359)
        mcolors_86945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3359, 21), 'mcolors', False)
        # Obtaining the member 'to_rgba' of a type (line 3359)
        to_rgba_86946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3359, 21), mcolors_86945, 'to_rgba')
        # Calling to_rgba(args, kwargs) (line 3359)
        to_rgba_call_result_86949 = invoke(stypy.reporting.localization.Localization(__file__, 3359, 21), to_rgba_86946, *[color_86947], **kwargs_86948)
        
        # Assigning a type to the variable 'call_assignment_77332' (line 3359)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3359, 8), 'call_assignment_77332', to_rgba_call_result_86949)
        
        # Assigning a Call to a Name (line 3359):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_86952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3359, 8), 'int')
        # Processing the call keyword arguments
        kwargs_86953 = {}
        # Getting the type of 'call_assignment_77332' (line 3359)
        call_assignment_77332_86950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3359, 8), 'call_assignment_77332', False)
        # Obtaining the member '__getitem__' of a type (line 3359)
        getitem___86951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3359, 8), call_assignment_77332_86950, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_86954 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___86951, *[int_86952], **kwargs_86953)
        
        # Assigning a type to the variable 'call_assignment_77333' (line 3359)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3359, 8), 'call_assignment_77333', getitem___call_result_86954)
        
        # Assigning a Name to a Name (line 3359):
        # Getting the type of 'call_assignment_77333' (line 3359)
        call_assignment_77333_86955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3359, 8), 'call_assignment_77333')
        # Assigning a type to the variable 'r' (line 3359)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3359, 8), 'r', call_assignment_77333_86955)
        
        # Assigning a Call to a Name (line 3359):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_86958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3359, 8), 'int')
        # Processing the call keyword arguments
        kwargs_86959 = {}
        # Getting the type of 'call_assignment_77332' (line 3359)
        call_assignment_77332_86956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3359, 8), 'call_assignment_77332', False)
        # Obtaining the member '__getitem__' of a type (line 3359)
        getitem___86957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3359, 8), call_assignment_77332_86956, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_86960 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___86957, *[int_86958], **kwargs_86959)
        
        # Assigning a type to the variable 'call_assignment_77334' (line 3359)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3359, 8), 'call_assignment_77334', getitem___call_result_86960)
        
        # Assigning a Name to a Name (line 3359):
        # Getting the type of 'call_assignment_77334' (line 3359)
        call_assignment_77334_86961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3359, 8), 'call_assignment_77334')
        # Assigning a type to the variable 'g' (line 3359)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3359, 11), 'g', call_assignment_77334_86961)
        
        # Assigning a Call to a Name (line 3359):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_86964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3359, 8), 'int')
        # Processing the call keyword arguments
        kwargs_86965 = {}
        # Getting the type of 'call_assignment_77332' (line 3359)
        call_assignment_77332_86962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3359, 8), 'call_assignment_77332', False)
        # Obtaining the member '__getitem__' of a type (line 3359)
        getitem___86963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3359, 8), call_assignment_77332_86962, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_86966 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___86963, *[int_86964], **kwargs_86965)
        
        # Assigning a type to the variable 'call_assignment_77335' (line 3359)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3359, 8), 'call_assignment_77335', getitem___call_result_86966)
        
        # Assigning a Name to a Name (line 3359):
        # Getting the type of 'call_assignment_77335' (line 3359)
        call_assignment_77335_86967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3359, 8), 'call_assignment_77335')
        # Assigning a type to the variable 'b' (line 3359)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3359, 14), 'b', call_assignment_77335_86967)
        
        # Assigning a Call to a Name (line 3359):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_86970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3359, 8), 'int')
        # Processing the call keyword arguments
        kwargs_86971 = {}
        # Getting the type of 'call_assignment_77332' (line 3359)
        call_assignment_77332_86968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3359, 8), 'call_assignment_77332', False)
        # Obtaining the member '__getitem__' of a type (line 3359)
        getitem___86969 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3359, 8), call_assignment_77332_86968, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_86972 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___86969, *[int_86970], **kwargs_86971)
        
        # Assigning a type to the variable 'call_assignment_77336' (line 3359)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3359, 8), 'call_assignment_77336', getitem___call_result_86972)
        
        # Assigning a Name to a Name (line 3359):
        # Getting the type of 'call_assignment_77336' (line 3359)
        call_assignment_77336_86973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3359, 8), 'call_assignment_77336')
        # Assigning a type to the variable 'a' (line 3359)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3359, 17), 'a', call_assignment_77336_86973)
        
        # Assigning a Call to a Name (line 3360):
        
        # Assigning a Call to a Name (line 3360):
        
        # Call to zeros(...): (line 3360)
        # Processing the call arguments (line 3360)
        
        # Obtaining an instance of the builtin type 'tuple' (line 3360)
        tuple_86976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3360, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3360)
        # Adding element type (line 3360)
        
        # Obtaining the type of the subscript
        int_86977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3360, 33), 'int')
        # Getting the type of 'x' (line 3360)
        x_86978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3360, 25), 'x', False)
        # Obtaining the member 'shape' of a type (line 3360)
        shape_86979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3360, 25), x_86978, 'shape')
        # Obtaining the member '__getitem__' of a type (line 3360)
        getitem___86980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3360, 25), shape_86979, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3360)
        subscript_call_result_86981 = invoke(stypy.reporting.localization.Localization(__file__, 3360, 25), getitem___86980, int_86977)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3360, 25), tuple_86976, subscript_call_result_86981)
        # Adding element type (line 3360)
        
        # Obtaining the type of the subscript
        int_86982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3360, 45), 'int')
        # Getting the type of 'x' (line 3360)
        x_86983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3360, 37), 'x', False)
        # Obtaining the member 'shape' of a type (line 3360)
        shape_86984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3360, 37), x_86983, 'shape')
        # Obtaining the member '__getitem__' of a type (line 3360)
        getitem___86985 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3360, 37), shape_86984, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3360)
        subscript_call_result_86986 = invoke(stypy.reporting.localization.Localization(__file__, 3360, 37), getitem___86985, int_86982)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3360, 25), tuple_86976, subscript_call_result_86986)
        # Adding element type (line 3360)
        int_86987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3360, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3360, 25), tuple_86976, int_86987)
        
        # Processing the call keyword arguments (line 3360)
        # Getting the type of 'np' (line 3360)
        np_86988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3360, 59), 'np', False)
        # Obtaining the member 'uint8' of a type (line 3360)
        uint8_86989 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3360, 59), np_86988, 'uint8')
        keyword_86990 = uint8_86989
        kwargs_86991 = {'dtype': keyword_86990}
        # Getting the type of 'np' (line 3360)
        np_86974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3360, 15), 'np', False)
        # Obtaining the member 'zeros' of a type (line 3360)
        zeros_86975 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3360, 15), np_86974, 'zeros')
        # Calling zeros(args, kwargs) (line 3360)
        zeros_call_result_86992 = invoke(stypy.reporting.localization.Localization(__file__, 3360, 15), zeros_86975, *[tuple_86976], **kwargs_86991)
        
        # Assigning a type to the variable 'RGBA' (line 3360)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3360, 8), 'RGBA', zeros_call_result_86992)
        
        # Assigning a BinOp to a Subscript (line 3361):
        
        # Assigning a BinOp to a Subscript (line 3361):
        int_86993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3361, 24), 'int')
        # Getting the type of 'r' (line 3361)
        r_86994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3361, 30), 'r')
        # Applying the binary operator '*' (line 3361)
        result_mul_86995 = python_operator(stypy.reporting.localization.Localization(__file__, 3361, 24), '*', int_86993, r_86994)
        
        # Getting the type of 'RGBA' (line 3361)
        RGBA_86996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3361, 8), 'RGBA')
        slice_86997 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 3361, 8), None, None, None)
        slice_86998 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 3361, 8), None, None, None)
        int_86999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3361, 19), 'int')
        # Storing an element on a container (line 3361)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3361, 8), RGBA_86996, ((slice_86997, slice_86998, int_86999), result_mul_86995))
        
        # Assigning a BinOp to a Subscript (line 3362):
        
        # Assigning a BinOp to a Subscript (line 3362):
        int_87000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3362, 24), 'int')
        # Getting the type of 'g' (line 3362)
        g_87001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3362, 30), 'g')
        # Applying the binary operator '*' (line 3362)
        result_mul_87002 = python_operator(stypy.reporting.localization.Localization(__file__, 3362, 24), '*', int_87000, g_87001)
        
        # Getting the type of 'RGBA' (line 3362)
        RGBA_87003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3362, 8), 'RGBA')
        slice_87004 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 3362, 8), None, None, None)
        slice_87005 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 3362, 8), None, None, None)
        int_87006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3362, 19), 'int')
        # Storing an element on a container (line 3362)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3362, 8), RGBA_87003, ((slice_87004, slice_87005, int_87006), result_mul_87002))
        
        # Assigning a BinOp to a Subscript (line 3363):
        
        # Assigning a BinOp to a Subscript (line 3363):
        int_87007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3363, 24), 'int')
        # Getting the type of 'b' (line 3363)
        b_87008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3363, 30), 'b')
        # Applying the binary operator '*' (line 3363)
        result_mul_87009 = python_operator(stypy.reporting.localization.Localization(__file__, 3363, 24), '*', int_87007, b_87008)
        
        # Getting the type of 'RGBA' (line 3363)
        RGBA_87010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3363, 8), 'RGBA')
        slice_87011 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 3363, 8), None, None, None)
        slice_87012 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 3363, 8), None, None, None)
        int_87013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3363, 19), 'int')
        # Storing an element on a container (line 3363)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3363, 8), RGBA_87010, ((slice_87011, slice_87012, int_87013), result_mul_87009))
        
        # Assigning a Name to a Subscript (line 3364):
        
        # Assigning a Name to a Subscript (line 3364):
        # Getting the type of 'x' (line 3364)
        x_87014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3364, 24), 'x')
        # Getting the type of 'RGBA' (line 3364)
        RGBA_87015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3364, 8), 'RGBA')
        slice_87016 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 3364, 8), None, None, None)
        slice_87017 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 3364, 8), None, None, None)
        int_87018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3364, 19), 'int')
        # Storing an element on a container (line 3364)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3364, 8), RGBA_87015, ((slice_87016, slice_87017, int_87018), x_87014))
        
        # Obtaining an instance of the builtin type 'tuple' (line 3365)
        tuple_87019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3365, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3365)
        # Adding element type (line 3365)
        # Getting the type of 'RGBA' (line 3365)
        RGBA_87020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3365, 15), 'RGBA')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3365, 15), tuple_87019, RGBA_87020)
        # Adding element type (line 3365)
        # Getting the type of 'depth' (line 3365)
        depth_87021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3365, 21), 'depth')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3365, 15), tuple_87019, depth_87021)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3365)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3365, 8), 'stypy_return_type', tuple_87019)
        
        # ################# End of 'to_rgba(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'to_rgba' in the type store
        # Getting the type of 'stypy_return_type' (line 3335)
        stypy_return_type_87022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3335, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_87022)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'to_rgba'
        return stypy_return_type_87022


    @norecursion
    def to_png(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        unicode_87023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3367, 45), 'unicode', u'black')
        int_87024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3367, 58), 'int')
        int_87025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3367, 72), 'int')
        defaults = [unicode_87023, int_87024, int_87025]
        # Create a new context for function 'to_png'
        module_type_store = module_type_store.open_function_context('to_png', 3367, 4, False)
        # Assigning a type to the variable 'self' (line 3368)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3368, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathTextParser.to_png.__dict__.__setitem__('stypy_localization', localization)
        MathTextParser.to_png.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathTextParser.to_png.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathTextParser.to_png.__dict__.__setitem__('stypy_function_name', 'MathTextParser.to_png')
        MathTextParser.to_png.__dict__.__setitem__('stypy_param_names_list', ['filename', 'texstr', 'color', 'dpi', 'fontsize'])
        MathTextParser.to_png.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathTextParser.to_png.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathTextParser.to_png.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathTextParser.to_png.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathTextParser.to_png.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathTextParser.to_png.__dict__.__setitem__('stypy_declared_arg_number', 6)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathTextParser.to_png', ['filename', 'texstr', 'color', 'dpi', 'fontsize'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'to_png', localization, ['filename', 'texstr', 'color', 'dpi', 'fontsize'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'to_png(...)' code ##################

        unicode_87026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3391, (-1)), 'unicode', u"\n        Writes a tex expression to a PNG file.\n\n        Returns the offset of the baseline from the bottom of the\n        image in pixels.\n\n        *filename*\n            A writable filename or fileobject\n\n        *texstr*\n            A valid mathtext string, e.g., r'IQ: $\\sigma_i=15$'\n\n        *color*\n            A valid matplotlib color argument\n\n        *dpi*\n            The dots-per-inch to render the text\n\n        *fontsize*\n            The font size in points\n\n        Returns the offset of the baseline from the bottom of the\n        image in pixels.\n        ")
        
        # Assigning a Call to a Tuple (line 3392):
        
        # Assigning a Call to a Name:
        
        # Call to to_rgba(...): (line 3392)
        # Processing the call arguments (line 3392)
        # Getting the type of 'texstr' (line 3392)
        texstr_87029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3392, 35), 'texstr', False)
        # Processing the call keyword arguments (line 3392)
        # Getting the type of 'color' (line 3392)
        color_87030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3392, 49), 'color', False)
        keyword_87031 = color_87030
        # Getting the type of 'dpi' (line 3392)
        dpi_87032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3392, 60), 'dpi', False)
        keyword_87033 = dpi_87032
        # Getting the type of 'fontsize' (line 3392)
        fontsize_87034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3392, 74), 'fontsize', False)
        keyword_87035 = fontsize_87034
        kwargs_87036 = {'color': keyword_87031, 'fontsize': keyword_87035, 'dpi': keyword_87033}
        # Getting the type of 'self' (line 3392)
        self_87027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3392, 22), 'self', False)
        # Obtaining the member 'to_rgba' of a type (line 3392)
        to_rgba_87028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3392, 22), self_87027, 'to_rgba')
        # Calling to_rgba(args, kwargs) (line 3392)
        to_rgba_call_result_87037 = invoke(stypy.reporting.localization.Localization(__file__, 3392, 22), to_rgba_87028, *[texstr_87029], **kwargs_87036)
        
        # Assigning a type to the variable 'call_assignment_77337' (line 3392)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3392, 8), 'call_assignment_77337', to_rgba_call_result_87037)
        
        # Assigning a Call to a Name (line 3392):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_87040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3392, 8), 'int')
        # Processing the call keyword arguments
        kwargs_87041 = {}
        # Getting the type of 'call_assignment_77337' (line 3392)
        call_assignment_77337_87038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3392, 8), 'call_assignment_77337', False)
        # Obtaining the member '__getitem__' of a type (line 3392)
        getitem___87039 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3392, 8), call_assignment_77337_87038, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_87042 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___87039, *[int_87040], **kwargs_87041)
        
        # Assigning a type to the variable 'call_assignment_77338' (line 3392)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3392, 8), 'call_assignment_77338', getitem___call_result_87042)
        
        # Assigning a Name to a Name (line 3392):
        # Getting the type of 'call_assignment_77338' (line 3392)
        call_assignment_77338_87043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3392, 8), 'call_assignment_77338')
        # Assigning a type to the variable 'rgba' (line 3392)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3392, 8), 'rgba', call_assignment_77338_87043)
        
        # Assigning a Call to a Name (line 3392):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_87046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3392, 8), 'int')
        # Processing the call keyword arguments
        kwargs_87047 = {}
        # Getting the type of 'call_assignment_77337' (line 3392)
        call_assignment_77337_87044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3392, 8), 'call_assignment_77337', False)
        # Obtaining the member '__getitem__' of a type (line 3392)
        getitem___87045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3392, 8), call_assignment_77337_87044, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_87048 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___87045, *[int_87046], **kwargs_87047)
        
        # Assigning a type to the variable 'call_assignment_77339' (line 3392)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3392, 8), 'call_assignment_77339', getitem___call_result_87048)
        
        # Assigning a Name to a Name (line 3392):
        # Getting the type of 'call_assignment_77339' (line 3392)
        call_assignment_77339_87049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3392, 8), 'call_assignment_77339')
        # Assigning a type to the variable 'depth' (line 3392)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3392, 14), 'depth', call_assignment_77339_87049)
        
        # Call to write_png(...): (line 3393)
        # Processing the call arguments (line 3393)
        # Getting the type of 'rgba' (line 3393)
        rgba_87052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3393, 23), 'rgba', False)
        # Getting the type of 'filename' (line 3393)
        filename_87053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3393, 29), 'filename', False)
        # Processing the call keyword arguments (line 3393)
        kwargs_87054 = {}
        # Getting the type of '_png' (line 3393)
        _png_87050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3393, 8), '_png', False)
        # Obtaining the member 'write_png' of a type (line 3393)
        write_png_87051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3393, 8), _png_87050, 'write_png')
        # Calling write_png(args, kwargs) (line 3393)
        write_png_call_result_87055 = invoke(stypy.reporting.localization.Localization(__file__, 3393, 8), write_png_87051, *[rgba_87052, filename_87053], **kwargs_87054)
        
        # Getting the type of 'depth' (line 3394)
        depth_87056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3394, 15), 'depth')
        # Assigning a type to the variable 'stypy_return_type' (line 3394)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3394, 8), 'stypy_return_type', depth_87056)
        
        # ################# End of 'to_png(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'to_png' in the type store
        # Getting the type of 'stypy_return_type' (line 3367)
        stypy_return_type_87057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3367, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_87057)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'to_png'
        return stypy_return_type_87057


    @norecursion
    def get_depth(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_87058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3396, 36), 'int')
        int_87059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3396, 50), 'int')
        defaults = [int_87058, int_87059]
        # Create a new context for function 'get_depth'
        module_type_store = module_type_store.open_function_context('get_depth', 3396, 4, False)
        # Assigning a type to the variable 'self' (line 3397)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3397, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MathTextParser.get_depth.__dict__.__setitem__('stypy_localization', localization)
        MathTextParser.get_depth.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MathTextParser.get_depth.__dict__.__setitem__('stypy_type_store', module_type_store)
        MathTextParser.get_depth.__dict__.__setitem__('stypy_function_name', 'MathTextParser.get_depth')
        MathTextParser.get_depth.__dict__.__setitem__('stypy_param_names_list', ['texstr', 'dpi', 'fontsize'])
        MathTextParser.get_depth.__dict__.__setitem__('stypy_varargs_param_name', None)
        MathTextParser.get_depth.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MathTextParser.get_depth.__dict__.__setitem__('stypy_call_defaults', defaults)
        MathTextParser.get_depth.__dict__.__setitem__('stypy_call_varargs', varargs)
        MathTextParser.get_depth.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MathTextParser.get_depth.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MathTextParser.get_depth', ['texstr', 'dpi', 'fontsize'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_depth', localization, ['texstr', 'dpi', 'fontsize'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_depth(...)' code ##################

        unicode_87060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3409, (-1)), 'unicode', u"\n        Returns the offset of the baseline from the bottom of the\n        image in pixels.\n\n        *texstr*\n            A valid mathtext string, e.g., r'IQ: $\\sigma_i=15$'\n\n        *dpi*\n            The dots-per-inch to render the text\n\n        *fontsize*\n            The font size in points\n        ")
        # Evaluating assert statement condition
        
        # Getting the type of 'self' (line 3410)
        self_87061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3410, 15), 'self')
        # Obtaining the member '_output' of a type (line 3410)
        _output_87062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3410, 15), self_87061, '_output')
        unicode_87063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3410, 29), 'unicode', u'bitmap')
        # Applying the binary operator '==' (line 3410)
        result_eq_87064 = python_operator(stypy.reporting.localization.Localization(__file__, 3410, 15), '==', _output_87062, unicode_87063)
        
        
        # Assigning a Call to a Name (line 3411):
        
        # Assigning a Call to a Name (line 3411):
        
        # Call to FontProperties(...): (line 3411)
        # Processing the call keyword arguments (line 3411)
        # Getting the type of 'fontsize' (line 3411)
        fontsize_87066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3411, 35), 'fontsize', False)
        keyword_87067 = fontsize_87066
        kwargs_87068 = {'size': keyword_87067}
        # Getting the type of 'FontProperties' (line 3411)
        FontProperties_87065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3411, 15), 'FontProperties', False)
        # Calling FontProperties(args, kwargs) (line 3411)
        FontProperties_call_result_87069 = invoke(stypy.reporting.localization.Localization(__file__, 3411, 15), FontProperties_87065, *[], **kwargs_87068)
        
        # Assigning a type to the variable 'prop' (line 3411)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3411, 8), 'prop', FontProperties_call_result_87069)
        
        # Assigning a Call to a Tuple (line 3412):
        
        # Assigning a Call to a Name:
        
        # Call to parse(...): (line 3412)
        # Processing the call arguments (line 3412)
        # Getting the type of 'texstr' (line 3412)
        texstr_87072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3412, 36), 'texstr', False)
        # Processing the call keyword arguments (line 3412)
        # Getting the type of 'dpi' (line 3412)
        dpi_87073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3412, 48), 'dpi', False)
        keyword_87074 = dpi_87073
        # Getting the type of 'prop' (line 3412)
        prop_87075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3412, 58), 'prop', False)
        keyword_87076 = prop_87075
        kwargs_87077 = {'dpi': keyword_87074, 'prop': keyword_87076}
        # Getting the type of 'self' (line 3412)
        self_87070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3412, 25), 'self', False)
        # Obtaining the member 'parse' of a type (line 3412)
        parse_87071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3412, 25), self_87070, 'parse')
        # Calling parse(args, kwargs) (line 3412)
        parse_call_result_87078 = invoke(stypy.reporting.localization.Localization(__file__, 3412, 25), parse_87071, *[texstr_87072], **kwargs_87077)
        
        # Assigning a type to the variable 'call_assignment_77340' (line 3412)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3412, 8), 'call_assignment_77340', parse_call_result_87078)
        
        # Assigning a Call to a Name (line 3412):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_87081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3412, 8), 'int')
        # Processing the call keyword arguments
        kwargs_87082 = {}
        # Getting the type of 'call_assignment_77340' (line 3412)
        call_assignment_77340_87079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3412, 8), 'call_assignment_77340', False)
        # Obtaining the member '__getitem__' of a type (line 3412)
        getitem___87080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3412, 8), call_assignment_77340_87079, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_87083 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___87080, *[int_87081], **kwargs_87082)
        
        # Assigning a type to the variable 'call_assignment_77341' (line 3412)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3412, 8), 'call_assignment_77341', getitem___call_result_87083)
        
        # Assigning a Name to a Name (line 3412):
        # Getting the type of 'call_assignment_77341' (line 3412)
        call_assignment_77341_87084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3412, 8), 'call_assignment_77341')
        # Assigning a type to the variable 'ftimage' (line 3412)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3412, 8), 'ftimage', call_assignment_77341_87084)
        
        # Assigning a Call to a Name (line 3412):
        
        # Call to __getitem__(...):
        # Processing the call arguments
        int_87087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3412, 8), 'int')
        # Processing the call keyword arguments
        kwargs_87088 = {}
        # Getting the type of 'call_assignment_77340' (line 3412)
        call_assignment_77340_87085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3412, 8), 'call_assignment_77340', False)
        # Obtaining the member '__getitem__' of a type (line 3412)
        getitem___87086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3412, 8), call_assignment_77340_87085, '__getitem__')
        # Calling __getitem__(args, kwargs)
        getitem___call_result_87089 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___87086, *[int_87087], **kwargs_87088)
        
        # Assigning a type to the variable 'call_assignment_77342' (line 3412)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3412, 8), 'call_assignment_77342', getitem___call_result_87089)
        
        # Assigning a Name to a Name (line 3412):
        # Getting the type of 'call_assignment_77342' (line 3412)
        call_assignment_77342_87090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3412, 8), 'call_assignment_77342')
        # Assigning a type to the variable 'depth' (line 3412)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3412, 17), 'depth', call_assignment_77342_87090)
        # Getting the type of 'depth' (line 3413)
        depth_87091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3413, 15), 'depth')
        # Assigning a type to the variable 'stypy_return_type' (line 3413)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3413, 8), 'stypy_return_type', depth_87091)
        
        # ################# End of 'get_depth(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_depth' in the type store
        # Getting the type of 'stypy_return_type' (line 3396)
        stypy_return_type_87092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3396, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_87092)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_depth'
        return stypy_return_type_87092


# Assigning a type to the variable 'MathTextParser' (line 3232)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3232, 0), 'MathTextParser', MathTextParser)

# Assigning a Name to a Name (line 3233):
# Getting the type of 'None' (line 3233)
None_87093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3233, 14), 'None')
# Getting the type of 'MathTextParser'
MathTextParser_87094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MathTextParser')
# Setting the type of the member '_parser' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MathTextParser_87094, '_parser', None_87093)

# Assigning a Dict to a Name (line 3235):

# Obtaining an instance of the builtin type 'dict' (line 3235)
dict_87095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3235, 23), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 3235)
# Adding element type (key, value) (line 3235)
unicode_87096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3236, 8), 'unicode', u'bitmap')
# Getting the type of 'MathtextBackendBitmap' (line 3236)
MathtextBackendBitmap_87097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3236, 18), 'MathtextBackendBitmap')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3235, 23), dict_87095, (unicode_87096, MathtextBackendBitmap_87097))
# Adding element type (key, value) (line 3235)
unicode_87098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3237, 8), 'unicode', u'agg')
# Getting the type of 'MathtextBackendAgg' (line 3237)
MathtextBackendAgg_87099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3237, 18), 'MathtextBackendAgg')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3235, 23), dict_87095, (unicode_87098, MathtextBackendAgg_87099))
# Adding element type (key, value) (line 3235)
unicode_87100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3238, 8), 'unicode', u'ps')
# Getting the type of 'MathtextBackendPs' (line 3238)
MathtextBackendPs_87101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3238, 18), 'MathtextBackendPs')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3235, 23), dict_87095, (unicode_87100, MathtextBackendPs_87101))
# Adding element type (key, value) (line 3235)
unicode_87102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3239, 8), 'unicode', u'pdf')
# Getting the type of 'MathtextBackendPdf' (line 3239)
MathtextBackendPdf_87103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3239, 18), 'MathtextBackendPdf')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3235, 23), dict_87095, (unicode_87102, MathtextBackendPdf_87103))
# Adding element type (key, value) (line 3235)
unicode_87104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3240, 8), 'unicode', u'svg')
# Getting the type of 'MathtextBackendSvg' (line 3240)
MathtextBackendSvg_87105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3240, 18), 'MathtextBackendSvg')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3235, 23), dict_87095, (unicode_87104, MathtextBackendSvg_87105))
# Adding element type (key, value) (line 3235)
unicode_87106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3241, 8), 'unicode', u'path')
# Getting the type of 'MathtextBackendPath' (line 3241)
MathtextBackendPath_87107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3241, 18), 'MathtextBackendPath')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3235, 23), dict_87095, (unicode_87106, MathtextBackendPath_87107))
# Adding element type (key, value) (line 3235)
unicode_87108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3242, 8), 'unicode', u'cairo')
# Getting the type of 'MathtextBackendCairo' (line 3242)
MathtextBackendCairo_87109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3242, 18), 'MathtextBackendCairo')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3235, 23), dict_87095, (unicode_87108, MathtextBackendCairo_87109))
# Adding element type (key, value) (line 3235)
unicode_87110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3243, 8), 'unicode', u'macosx')
# Getting the type of 'MathtextBackendAgg' (line 3243)
MathtextBackendAgg_87111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3243, 18), 'MathtextBackendAgg')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3235, 23), dict_87095, (unicode_87110, MathtextBackendAgg_87111))

# Getting the type of 'MathTextParser'
MathTextParser_87112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MathTextParser')
# Setting the type of the member '_backend_mapping' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MathTextParser_87112, '_backend_mapping', dict_87095)

# Assigning a Dict to a Name (line 3246):

# Obtaining an instance of the builtin type 'dict' (line 3246)
dict_87113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3246, 25), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 3246)
# Adding element type (key, value) (line 3246)
unicode_87114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3247, 8), 'unicode', u'cm')
# Getting the type of 'BakomaFonts' (line 3247)
BakomaFonts_87115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3247, 24), 'BakomaFonts')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3246, 25), dict_87113, (unicode_87114, BakomaFonts_87115))
# Adding element type (key, value) (line 3246)
unicode_87116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3248, 8), 'unicode', u'dejavuserif')
# Getting the type of 'DejaVuSerifFonts' (line 3248)
DejaVuSerifFonts_87117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3248, 24), 'DejaVuSerifFonts')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3246, 25), dict_87113, (unicode_87116, DejaVuSerifFonts_87117))
# Adding element type (key, value) (line 3246)
unicode_87118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3249, 8), 'unicode', u'dejavusans')
# Getting the type of 'DejaVuSansFonts' (line 3249)
DejaVuSansFonts_87119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3249, 24), 'DejaVuSansFonts')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3246, 25), dict_87113, (unicode_87118, DejaVuSansFonts_87119))
# Adding element type (key, value) (line 3246)
unicode_87120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3250, 8), 'unicode', u'stix')
# Getting the type of 'StixFonts' (line 3250)
StixFonts_87121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3250, 24), 'StixFonts')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3246, 25), dict_87113, (unicode_87120, StixFonts_87121))
# Adding element type (key, value) (line 3246)
unicode_87122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3251, 8), 'unicode', u'stixsans')
# Getting the type of 'StixSansFonts' (line 3251)
StixSansFonts_87123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3251, 24), 'StixSansFonts')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3246, 25), dict_87113, (unicode_87122, StixSansFonts_87123))
# Adding element type (key, value) (line 3246)
unicode_87124 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3252, 8), 'unicode', u'custom')
# Getting the type of 'UnicodeFonts' (line 3252)
UnicodeFonts_87125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3252, 24), 'UnicodeFonts')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3246, 25), dict_87113, (unicode_87124, UnicodeFonts_87125))

# Getting the type of 'MathTextParser'
MathTextParser_87126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'MathTextParser')
# Setting the type of the member '_font_type_mapping' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), MathTextParser_87126, '_font_type_mapping', dict_87113)

@norecursion
def math_to_image(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 3415)
    None_87127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3415, 43), 'None')
    # Getting the type of 'None' (line 3415)
    None_87128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3415, 53), 'None')
    # Getting the type of 'None' (line 3415)
    None_87129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3415, 66), 'None')
    defaults = [None_87127, None_87128, None_87129]
    # Create a new context for function 'math_to_image'
    module_type_store = module_type_store.open_function_context('math_to_image', 3415, 0, False)
    
    # Passed parameters checking function
    math_to_image.stypy_localization = localization
    math_to_image.stypy_type_of_self = None
    math_to_image.stypy_type_store = module_type_store
    math_to_image.stypy_function_name = 'math_to_image'
    math_to_image.stypy_param_names_list = ['s', 'filename_or_obj', 'prop', 'dpi', 'format']
    math_to_image.stypy_varargs_param_name = None
    math_to_image.stypy_kwargs_param_name = None
    math_to_image.stypy_call_defaults = defaults
    math_to_image.stypy_call_varargs = varargs
    math_to_image.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'math_to_image', ['s', 'filename_or_obj', 'prop', 'dpi', 'format'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'math_to_image', localization, ['s', 'filename_or_obj', 'prop', 'dpi', 'format'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'math_to_image(...)' code ##################

    unicode_87130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3439, (-1)), 'unicode', u"\n    Given a math expression, renders it in a closely-clipped bounding\n    box to an image file.\n\n    *s*\n       A math expression.  The math portion should be enclosed in\n       dollar signs.\n\n    *filename_or_obj*\n       A filepath or writable file-like object to write the image data\n       to.\n\n    *prop*\n       If provided, a FontProperties() object describing the size and\n       style of the text.\n\n    *dpi*\n       Override the output dpi, otherwise use the default associated\n       with the output format.\n\n    *format*\n       The output format, e.g., 'svg', 'pdf', 'ps' or 'png'.  If not\n       provided, will be deduced from the filename.\n    ")
    stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 3440, 4))
    
    # 'from matplotlib import figure' statement (line 3440)
    update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
    import_87131 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 3440, 4), 'matplotlib')

    if (type(import_87131) is not StypyTypeError):

        if (import_87131 != 'pyd_module'):
            __import__(import_87131)
            sys_modules_87132 = sys.modules[import_87131]
            import_from_module(stypy.reporting.localization.Localization(__file__, 3440, 4), 'matplotlib', sys_modules_87132.module_type_store, module_type_store, ['figure'])
            nest_module(stypy.reporting.localization.Localization(__file__, 3440, 4), __file__, sys_modules_87132, sys_modules_87132.module_type_store, module_type_store)
        else:
            from matplotlib import figure

            import_from_module(stypy.reporting.localization.Localization(__file__, 3440, 4), 'matplotlib', None, module_type_store, ['figure'], [figure])

    else:
        # Assigning a type to the variable 'matplotlib' (line 3440)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3440, 4), 'matplotlib', import_87131)

    remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')
    
    stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 3442, 4))
    
    # 'from matplotlib.backends import backend_agg' statement (line 3442)
    update_path_to_current_file_folder('C:/Python27/lib/site-packages/matplotlib/')
    import_87133 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 3442, 4), 'matplotlib.backends')

    if (type(import_87133) is not StypyTypeError):

        if (import_87133 != 'pyd_module'):
            __import__(import_87133)
            sys_modules_87134 = sys.modules[import_87133]
            import_from_module(stypy.reporting.localization.Localization(__file__, 3442, 4), 'matplotlib.backends', sys_modules_87134.module_type_store, module_type_store, ['backend_agg'])
            nest_module(stypy.reporting.localization.Localization(__file__, 3442, 4), __file__, sys_modules_87134, sys_modules_87134.module_type_store, module_type_store)
        else:
            from matplotlib.backends import backend_agg

            import_from_module(stypy.reporting.localization.Localization(__file__, 3442, 4), 'matplotlib.backends', None, module_type_store, ['backend_agg'], [backend_agg])

    else:
        # Assigning a type to the variable 'matplotlib.backends' (line 3442)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3442, 4), 'matplotlib.backends', import_87133)

    remove_current_file_folder_from_path('C:/Python27/lib/site-packages/matplotlib/')
    
    
    # Type idiom detected: calculating its left and rigth part (line 3444)
    # Getting the type of 'prop' (line 3444)
    prop_87135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3444, 7), 'prop')
    # Getting the type of 'None' (line 3444)
    None_87136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3444, 15), 'None')
    
    (may_be_87137, more_types_in_union_87138) = may_be_none(prop_87135, None_87136)

    if may_be_87137:

        if more_types_in_union_87138:
            # Runtime conditional SSA (line 3444)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 3445):
        
        # Assigning a Call to a Name (line 3445):
        
        # Call to FontProperties(...): (line 3445)
        # Processing the call keyword arguments (line 3445)
        kwargs_87140 = {}
        # Getting the type of 'FontProperties' (line 3445)
        FontProperties_87139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3445, 15), 'FontProperties', False)
        # Calling FontProperties(args, kwargs) (line 3445)
        FontProperties_call_result_87141 = invoke(stypy.reporting.localization.Localization(__file__, 3445, 15), FontProperties_87139, *[], **kwargs_87140)
        
        # Assigning a type to the variable 'prop' (line 3445)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3445, 8), 'prop', FontProperties_call_result_87141)

        if more_types_in_union_87138:
            # SSA join for if statement (line 3444)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Name (line 3447):
    
    # Assigning a Call to a Name (line 3447):
    
    # Call to MathTextParser(...): (line 3447)
    # Processing the call arguments (line 3447)
    unicode_87143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3447, 28), 'unicode', u'path')
    # Processing the call keyword arguments (line 3447)
    kwargs_87144 = {}
    # Getting the type of 'MathTextParser' (line 3447)
    MathTextParser_87142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3447, 13), 'MathTextParser', False)
    # Calling MathTextParser(args, kwargs) (line 3447)
    MathTextParser_call_result_87145 = invoke(stypy.reporting.localization.Localization(__file__, 3447, 13), MathTextParser_87142, *[unicode_87143], **kwargs_87144)
    
    # Assigning a type to the variable 'parser' (line 3447)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3447, 4), 'parser', MathTextParser_call_result_87145)
    
    # Assigning a Call to a Tuple (line 3448):
    
    # Assigning a Call to a Name:
    
    # Call to parse(...): (line 3448)
    # Processing the call arguments (line 3448)
    # Getting the type of 's' (line 3448)
    s_87148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3448, 46), 's', False)
    # Processing the call keyword arguments (line 3448)
    int_87149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3448, 53), 'int')
    keyword_87150 = int_87149
    # Getting the type of 'prop' (line 3448)
    prop_87151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3448, 62), 'prop', False)
    keyword_87152 = prop_87151
    kwargs_87153 = {'dpi': keyword_87150, 'prop': keyword_87152}
    # Getting the type of 'parser' (line 3448)
    parser_87146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3448, 33), 'parser', False)
    # Obtaining the member 'parse' of a type (line 3448)
    parse_87147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3448, 33), parser_87146, 'parse')
    # Calling parse(args, kwargs) (line 3448)
    parse_call_result_87154 = invoke(stypy.reporting.localization.Localization(__file__, 3448, 33), parse_87147, *[s_87148], **kwargs_87153)
    
    # Assigning a type to the variable 'call_assignment_77343' (line 3448)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3448, 4), 'call_assignment_77343', parse_call_result_87154)
    
    # Assigning a Call to a Name (line 3448):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_87157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3448, 4), 'int')
    # Processing the call keyword arguments
    kwargs_87158 = {}
    # Getting the type of 'call_assignment_77343' (line 3448)
    call_assignment_77343_87155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3448, 4), 'call_assignment_77343', False)
    # Obtaining the member '__getitem__' of a type (line 3448)
    getitem___87156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3448, 4), call_assignment_77343_87155, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_87159 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___87156, *[int_87157], **kwargs_87158)
    
    # Assigning a type to the variable 'call_assignment_77344' (line 3448)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3448, 4), 'call_assignment_77344', getitem___call_result_87159)
    
    # Assigning a Name to a Name (line 3448):
    # Getting the type of 'call_assignment_77344' (line 3448)
    call_assignment_77344_87160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3448, 4), 'call_assignment_77344')
    # Assigning a type to the variable 'width' (line 3448)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3448, 4), 'width', call_assignment_77344_87160)
    
    # Assigning a Call to a Name (line 3448):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_87163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3448, 4), 'int')
    # Processing the call keyword arguments
    kwargs_87164 = {}
    # Getting the type of 'call_assignment_77343' (line 3448)
    call_assignment_77343_87161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3448, 4), 'call_assignment_77343', False)
    # Obtaining the member '__getitem__' of a type (line 3448)
    getitem___87162 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3448, 4), call_assignment_77343_87161, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_87165 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___87162, *[int_87163], **kwargs_87164)
    
    # Assigning a type to the variable 'call_assignment_77345' (line 3448)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3448, 4), 'call_assignment_77345', getitem___call_result_87165)
    
    # Assigning a Name to a Name (line 3448):
    # Getting the type of 'call_assignment_77345' (line 3448)
    call_assignment_77345_87166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3448, 4), 'call_assignment_77345')
    # Assigning a type to the variable 'height' (line 3448)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3448, 11), 'height', call_assignment_77345_87166)
    
    # Assigning a Call to a Name (line 3448):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_87169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3448, 4), 'int')
    # Processing the call keyword arguments
    kwargs_87170 = {}
    # Getting the type of 'call_assignment_77343' (line 3448)
    call_assignment_77343_87167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3448, 4), 'call_assignment_77343', False)
    # Obtaining the member '__getitem__' of a type (line 3448)
    getitem___87168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3448, 4), call_assignment_77343_87167, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_87171 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___87168, *[int_87169], **kwargs_87170)
    
    # Assigning a type to the variable 'call_assignment_77346' (line 3448)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3448, 4), 'call_assignment_77346', getitem___call_result_87171)
    
    # Assigning a Name to a Name (line 3448):
    # Getting the type of 'call_assignment_77346' (line 3448)
    call_assignment_77346_87172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3448, 4), 'call_assignment_77346')
    # Assigning a type to the variable 'depth' (line 3448)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3448, 19), 'depth', call_assignment_77346_87172)
    
    # Assigning a Call to a Name (line 3448):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_87175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3448, 4), 'int')
    # Processing the call keyword arguments
    kwargs_87176 = {}
    # Getting the type of 'call_assignment_77343' (line 3448)
    call_assignment_77343_87173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3448, 4), 'call_assignment_77343', False)
    # Obtaining the member '__getitem__' of a type (line 3448)
    getitem___87174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3448, 4), call_assignment_77343_87173, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_87177 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___87174, *[int_87175], **kwargs_87176)
    
    # Assigning a type to the variable 'call_assignment_77347' (line 3448)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3448, 4), 'call_assignment_77347', getitem___call_result_87177)
    
    # Assigning a Name to a Name (line 3448):
    # Getting the type of 'call_assignment_77347' (line 3448)
    call_assignment_77347_87178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3448, 4), 'call_assignment_77347')
    # Assigning a type to the variable '_' (line 3448)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3448, 26), '_', call_assignment_77347_87178)
    
    # Assigning a Call to a Name (line 3448):
    
    # Call to __getitem__(...):
    # Processing the call arguments
    int_87181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3448, 4), 'int')
    # Processing the call keyword arguments
    kwargs_87182 = {}
    # Getting the type of 'call_assignment_77343' (line 3448)
    call_assignment_77343_87179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3448, 4), 'call_assignment_77343', False)
    # Obtaining the member '__getitem__' of a type (line 3448)
    getitem___87180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3448, 4), call_assignment_77343_87179, '__getitem__')
    # Calling __getitem__(args, kwargs)
    getitem___call_result_87183 = invoke(stypy.reporting.localization.Localization(__file__, 0, 0), getitem___87180, *[int_87181], **kwargs_87182)
    
    # Assigning a type to the variable 'call_assignment_77348' (line 3448)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3448, 4), 'call_assignment_77348', getitem___call_result_87183)
    
    # Assigning a Name to a Name (line 3448):
    # Getting the type of 'call_assignment_77348' (line 3448)
    call_assignment_77348_87184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3448, 4), 'call_assignment_77348')
    # Assigning a type to the variable '_' (line 3448)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3448, 29), '_', call_assignment_77348_87184)
    
    # Assigning a Call to a Name (line 3450):
    
    # Assigning a Call to a Name (line 3450):
    
    # Call to Figure(...): (line 3450)
    # Processing the call keyword arguments (line 3450)
    
    # Obtaining an instance of the builtin type 'tuple' (line 3450)
    tuple_87187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3450, 33), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3450)
    # Adding element type (line 3450)
    # Getting the type of 'width' (line 3450)
    width_87188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3450, 33), 'width', False)
    float_87189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3450, 41), 'float')
    # Applying the binary operator 'div' (line 3450)
    result_div_87190 = python_operator(stypy.reporting.localization.Localization(__file__, 3450, 33), 'div', width_87188, float_87189)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3450, 33), tuple_87187, result_div_87190)
    # Adding element type (line 3450)
    # Getting the type of 'height' (line 3450)
    height_87191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3450, 47), 'height', False)
    float_87192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3450, 56), 'float')
    # Applying the binary operator 'div' (line 3450)
    result_div_87193 = python_operator(stypy.reporting.localization.Localization(__file__, 3450, 47), 'div', height_87191, float_87192)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3450, 33), tuple_87187, result_div_87193)
    
    keyword_87194 = tuple_87187
    kwargs_87195 = {'figsize': keyword_87194}
    # Getting the type of 'figure' (line 3450)
    figure_87185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3450, 10), 'figure', False)
    # Obtaining the member 'Figure' of a type (line 3450)
    Figure_87186 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3450, 10), figure_87185, 'Figure')
    # Calling Figure(args, kwargs) (line 3450)
    Figure_call_result_87196 = invoke(stypy.reporting.localization.Localization(__file__, 3450, 10), Figure_87186, *[], **kwargs_87195)
    
    # Assigning a type to the variable 'fig' (line 3450)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3450, 4), 'fig', Figure_call_result_87196)
    
    # Call to text(...): (line 3451)
    # Processing the call arguments (line 3451)
    int_87199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3451, 13), 'int')
    # Getting the type of 'depth' (line 3451)
    depth_87200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3451, 16), 'depth', False)
    # Getting the type of 'height' (line 3451)
    height_87201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3451, 22), 'height', False)
    # Applying the binary operator 'div' (line 3451)
    result_div_87202 = python_operator(stypy.reporting.localization.Localization(__file__, 3451, 16), 'div', depth_87200, height_87201)
    
    # Getting the type of 's' (line 3451)
    s_87203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3451, 30), 's', False)
    # Processing the call keyword arguments (line 3451)
    # Getting the type of 'prop' (line 3451)
    prop_87204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3451, 48), 'prop', False)
    keyword_87205 = prop_87204
    kwargs_87206 = {'fontproperties': keyword_87205}
    # Getting the type of 'fig' (line 3451)
    fig_87197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3451, 4), 'fig', False)
    # Obtaining the member 'text' of a type (line 3451)
    text_87198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3451, 4), fig_87197, 'text')
    # Calling text(args, kwargs) (line 3451)
    text_call_result_87207 = invoke(stypy.reporting.localization.Localization(__file__, 3451, 4), text_87198, *[int_87199, result_div_87202, s_87203], **kwargs_87206)
    
    
    # Call to FigureCanvasAgg(...): (line 3452)
    # Processing the call arguments (line 3452)
    # Getting the type of 'fig' (line 3452)
    fig_87210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3452, 32), 'fig', False)
    # Processing the call keyword arguments (line 3452)
    kwargs_87211 = {}
    # Getting the type of 'backend_agg' (line 3452)
    backend_agg_87208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3452, 4), 'backend_agg', False)
    # Obtaining the member 'FigureCanvasAgg' of a type (line 3452)
    FigureCanvasAgg_87209 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3452, 4), backend_agg_87208, 'FigureCanvasAgg')
    # Calling FigureCanvasAgg(args, kwargs) (line 3452)
    FigureCanvasAgg_call_result_87212 = invoke(stypy.reporting.localization.Localization(__file__, 3452, 4), FigureCanvasAgg_87209, *[fig_87210], **kwargs_87211)
    
    
    # Call to savefig(...): (line 3453)
    # Processing the call arguments (line 3453)
    # Getting the type of 'filename_or_obj' (line 3453)
    filename_or_obj_87215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3453, 16), 'filename_or_obj', False)
    # Processing the call keyword arguments (line 3453)
    # Getting the type of 'dpi' (line 3453)
    dpi_87216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3453, 37), 'dpi', False)
    keyword_87217 = dpi_87216
    # Getting the type of 'format' (line 3453)
    format_87218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3453, 49), 'format', False)
    keyword_87219 = format_87218
    kwargs_87220 = {'dpi': keyword_87217, 'format': keyword_87219}
    # Getting the type of 'fig' (line 3453)
    fig_87213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3453, 4), 'fig', False)
    # Obtaining the member 'savefig' of a type (line 3453)
    savefig_87214 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3453, 4), fig_87213, 'savefig')
    # Calling savefig(args, kwargs) (line 3453)
    savefig_call_result_87221 = invoke(stypy.reporting.localization.Localization(__file__, 3453, 4), savefig_87214, *[filename_or_obj_87215], **kwargs_87220)
    
    # Getting the type of 'depth' (line 3455)
    depth_87222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3455, 11), 'depth')
    # Assigning a type to the variable 'stypy_return_type' (line 3455)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3455, 4), 'stypy_return_type', depth_87222)
    
    # ################# End of 'math_to_image(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'math_to_image' in the type store
    # Getting the type of 'stypy_return_type' (line 3415)
    stypy_return_type_87223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3415, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_87223)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'math_to_image'
    return stypy_return_type_87223

# Assigning a type to the variable 'math_to_image' (line 3415)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3415, 0), 'math_to_image', math_to_image)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
